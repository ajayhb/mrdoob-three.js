// ThreeDebug.js r31 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,c,f){this.r=a;this.g=c;this.b=f;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+
","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,c){this.x=a||0;this.y=c||0};
THREE.Vector2.prototype={set:function(a,c){this.x=a;this.y=c;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,c,f){this.x=a||0;this.y=c||0;this.z=f||0};
THREE.Vector3.prototype={set:function(a,c,f){this.x=a;this.y=c;this.z=f;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,c){this.x=a.y*c.z-a.z*c.y;this.y=a.z*c.x-a.x*c.z;this.z=a.x*c.y-a.y*c.x;return this},crossSelf:function(a){var c=this.x,f=this.y,e=this.z;this.x=f*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-f*a.x;return this},multiply:function(a,c){this.x=a.x*c.x;this.y=a.y*c.y;this.z=a.z*c.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=
a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var c=this.x-a.x,f=this.y-a.y;a=this.z-a.z;return Math.sqrt(c*c+f*f+a*a)},distanceToSquared:function(a){var c=this.x-a.x,f=this.y-a.y;a=this.z-a.z;return c*c+f*f+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=
Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,c,f,e){this.x=a||0;this.y=c||0;this.z=f||0;this.w=e||1};
THREE.Vector4.prototype={set:function(a,c,f,e){this.x=a;this.y=c;this.z=f;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;this.w=a.w+c.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;this.w=a.w-c.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,c){this.x+=(a.x-this.x)*c;this.y+=(a.y-this.y)*c;this.z+=(a.z-this.z)*c;this.w+=(a.w-this.w)*c},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,c){this.origin=a||new THREE.Vector3;this.direction=c||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var c,f,e=a.objects,j=[];a=0;for(c=e.length;a<c;a++){f=e[a];if(f instanceof THREE.Mesh)j=j.concat(this.intersectObject(f))}j.sort(function(n,r){return n.distance-r.distance});return j},intersectObject:function(a){function c(U,s,R,E){E=E.clone().subSelf(s);R=R.clone().subSelf(s);var L=U.clone().subSelf(s);U=E.dot(E);s=E.dot(R);E=E.dot(L);var N=R.dot(R);R=R.dot(L);L=1/(U*N-s*s);N=(N*E-s*R)*L;U=(U*R-s*E)*L;return N>0&&U>0&&N+U<1}var f,e,j,n,r,t,p,q,A,d,
x,B=a.geometry,T=B.vertices,X=[];f=0;for(e=B.faces.length;f<e;f++){j=B.faces[f];d=this.origin.clone();x=this.direction.clone();n=a.matrix.multiplyVector3(T[j.a].position.clone());r=a.matrix.multiplyVector3(T[j.b].position.clone());t=a.matrix.multiplyVector3(T[j.c].position.clone());p=j instanceof THREE.Face4?a.matrix.multiplyVector3(T[j.d].position.clone()):null;q=a.rotationMatrix.multiplyVector3(j.normal.clone());A=x.dot(q);if(A<0){q=q.dot((new THREE.Vector3).sub(n,d))/A;d=d.addSelf(x.multiplyScalar(q));
if(j instanceof THREE.Face3){if(c(d,n,r,t)){j={distance:this.origin.distanceTo(d),point:d,face:j,object:a};X.push(j)}}else if(j instanceof THREE.Face4)if(c(d,n,r,p)||c(d,r,t,p)){j={distance:this.origin.distanceTo(d),point:d,face:j,object:a};X.push(j)}}}return X}};
THREE.Rectangle=function(){function a(){n=e-c;r=j-f}var c,f,e,j,n,r,t=true;this.getX=function(){return c};this.getY=function(){return f};this.getWidth=function(){return n};this.getHeight=function(){return r};this.getLeft=function(){return c};this.getTop=function(){return f};this.getRight=function(){return e};this.getBottom=function(){return j};this.set=function(p,q,A,d){t=false;c=p;f=q;e=A;j=d;a()};this.addPoint=function(p,q){if(t){t=false;c=p;f=q;e=p;j=q}else{c=c<p?c:p;f=f<q?f:q;e=e>p?e:p;j=j>q?
j:q}a()};this.add3Points=function(p,q,A,d,x,B){if(t){t=false;c=p<A?p<x?p:x:A<x?A:x;f=q<d?q<B?q:B:d<B?d:B;e=p>A?p>x?p:x:A>x?A:x;j=q>d?q>B?q:B:d>B?d:B}else{c=p<A?p<x?p<c?p:c:x<c?x:c:A<x?A<c?A:c:x<c?x:c;f=q<d?q<B?q<f?q:f:B<f?B:f:d<B?d<f?d:f:B<f?B:f;e=p>A?p>x?p>e?p:e:x>e?x:e:A>x?A>e?A:e:x>e?x:e;j=q>d?q>B?q>j?q:j:B>j?B:j:d>B?d>j?d:j:B>j?B:j}a()};this.addRectangle=function(p){if(t){t=false;c=p.getLeft();f=p.getTop();e=p.getRight();j=p.getBottom()}else{c=c<p.getLeft()?c:p.getLeft();f=f<p.getTop()?f:p.getTop();
e=e>p.getRight()?e:p.getRight();j=j>p.getBottom()?j:p.getBottom()}a()};this.inflate=function(p){c-=p;f-=p;e+=p;j+=p;a()};this.minSelf=function(p){c=c>p.getLeft()?c:p.getLeft();f=f>p.getTop()?f:p.getTop();e=e<p.getRight()?e:p.getRight();j=j<p.getBottom()?j:p.getBottom();a()};this.instersects=function(p){return Math.min(e,p.getRight())-Math.max(c,p.getLeft())>=0&&Math.min(j,p.getBottom())-Math.max(f,p.getTop())>=0};this.empty=function(){t=true;j=e=f=c=0;a()};this.isEmpty=function(){return t};this.toString=
function(){return"THREE.Rectangle ( left: "+c+", right: "+e+", top: "+f+", bottom: "+j+", width: "+n+", height: "+r+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a;a=this.m[1];this.m[1]=this.m[3];this.m[3]=a;a=this.m[2];this.m[2]=this.m[6];this.m[6]=a;a=this.m[5];this.m[5]=this.m[7];this.m[7]=a;return this}};
THREE.Matrix4=function(a,c,f,e,j,n,r,t,p,q,A,d,x,B,T,X){this.n11=a||1;this.n12=c||0;this.n13=f||0;this.n14=e||0;this.n21=j||0;this.n22=n||1;this.n23=r||0;this.n24=t||0;this.n31=p||0;this.n32=q||0;this.n33=A||1;this.n34=d||0;this.n41=x||0;this.n42=B||0;this.n43=T||0;this.n44=X||1};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,c,f,e,j,n,r,t,p,q,A,d,x,B,T,X){this.n11=a;this.n12=c;this.n13=f;this.n14=e;this.n21=j;this.n22=n;this.n23=r;this.n24=t;this.n31=p;this.n32=q;this.n33=A;this.n34=d;this.n41=x;this.n42=B;this.n43=T;this.n44=X;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,c,f){var e=new THREE.Vector3,j=new THREE.Vector3,n=new THREE.Vector3;n.sub(a,c).normalize();e.cross(f,n).normalize();j.cross(n,e).normalize();this.n11=e.x;this.n12=e.y;this.n13=e.z;this.n14=-e.dot(a);this.n21=j.x;this.n22=j.y;this.n23=j.z;this.n24=-j.dot(a);this.n31=n.x;
this.n32=n.y;this.n33=n.z;this.n34=-n.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var c=a.x,f=a.y,e=a.z,j=1/(this.n41*c+this.n42*f+this.n43*e+this.n44);a.x=(this.n11*c+this.n12*f+this.n13*e+this.n14)*j;a.y=(this.n21*c+this.n22*f+this.n23*e+this.n24)*j;a.z=(this.n31*c+this.n32*f+this.n33*e+this.n34)*j;return a},multiplyVector4:function(a){var c=a.x,f=a.y,e=a.z,j=a.w;a.x=this.n11*c+this.n12*f+this.n13*e+this.n14*j;a.y=this.n21*c+this.n22*f+this.n23*e+this.n24*
j;a.z=this.n31*c+this.n32*f+this.n33*e+this.n34*j;a.w=this.n41*c+this.n42*f+this.n43*e+this.n44*j;return a},crossVector:function(a){var c=new THREE.Vector4;c.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;c.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;c.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;c.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return c},multiply:function(a,c){var f=a.n11,e=a.n12,j=a.n13,n=a.n14,r=a.n21,t=a.n22,p=a.n23,q=a.n24,A=a.n31,d=a.n32,
x=a.n33,B=a.n34,T=a.n41,X=a.n42,U=a.n43,s=a.n44,R=c.n11,E=c.n12,L=c.n13,N=c.n14,Z=c.n21,P=c.n22,K=c.n23,h=c.n24,k=c.n31,o=c.n32,i=c.n33,l=c.n34,m=c.n41,y=c.n42,v=c.n43,I=c.n44;this.n11=f*R+e*Z+j*k+n*m;this.n12=f*E+e*P+j*o+n*y;this.n13=f*L+e*K+j*i+n*v;this.n14=f*N+e*h+j*l+n*I;this.n21=r*R+t*Z+p*k+q*m;this.n22=r*E+t*P+p*o+q*y;this.n23=r*L+t*K+p*i+q*v;this.n24=r*N+t*h+p*l+q*I;this.n31=A*R+d*Z+x*k+B*m;this.n32=A*E+d*P+x*o+B*y;this.n33=A*L+d*K+x*i+B*v;this.n34=A*N+d*h+x*l+B*I;this.n41=T*R+X*Z+U*k+s*m;
this.n42=T*E+X*P+U*o+s*y;this.n43=T*L+X*K+U*i+s*v;this.n44=T*N+X*h+U*l+s*I;return this},multiplySelf:function(a){var c=this.n11,f=this.n12,e=this.n13,j=this.n14,n=this.n21,r=this.n22,t=this.n23,p=this.n24,q=this.n31,A=this.n32,d=this.n33,x=this.n34,B=this.n41,T=this.n42,X=this.n43,U=this.n44,s=a.n11,R=a.n21,E=a.n31,L=a.n41,N=a.n12,Z=a.n22,P=a.n32,K=a.n42,h=a.n13,k=a.n23,o=a.n33,i=a.n43,l=a.n14,m=a.n24,y=a.n34;a=a.n44;this.n11=c*s+f*R+e*E+j*L;this.n12=c*N+f*Z+e*P+j*K;this.n13=c*h+f*k+e*o+j*i;this.n14=
c*l+f*m+e*y+j*a;this.n21=n*s+r*R+t*E+p*L;this.n22=n*N+r*Z+t*P+p*K;this.n23=n*h+r*k+t*o+p*i;this.n24=n*l+r*m+t*y+p*a;this.n31=q*s+A*R+d*E+x*L;this.n32=q*N+A*Z+d*P+x*K;this.n33=q*h+A*k+d*o+x*i;this.n34=q*l+A*m+d*y+x*a;this.n41=B*s+T*R+X*E+U*L;this.n42=B*N+T*Z+X*P+U*K;this.n43=B*h+T*k+X*o+U*i;this.n44=B*l+T*m+X*y+U*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=
a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){return this.n14*this.n23*this.n32*this.n41-this.n13*this.n24*this.n32*this.n41-this.n14*this.n22*this.n33*this.n41+this.n12*this.n24*this.n33*this.n41+this.n13*this.n22*this.n34*this.n41-this.n12*this.n23*this.n34*this.n41-this.n14*this.n23*this.n31*this.n42+this.n13*this.n24*this.n31*this.n42+this.n14*this.n21*this.n33*this.n42-this.n11*this.n24*this.n33*this.n42-this.n13*this.n21*this.n34*this.n42+this.n11*this.n23*this.n34*
this.n42+this.n14*this.n22*this.n31*this.n43-this.n12*this.n24*this.n31*this.n43-this.n14*this.n21*this.n32*this.n43+this.n11*this.n24*this.n32*this.n43+this.n12*this.n21*this.n34*this.n43-this.n11*this.n22*this.n34*this.n43-this.n13*this.n22*this.n31*this.n44+this.n12*this.n23*this.n31*this.n44+this.n13*this.n21*this.n32*this.n44-this.n11*this.n23*this.n32*this.n44-this.n12*this.n21*this.n33*this.n44+this.n11*this.n22*this.n33*this.n44},transpose:function(){function a(c,f,e){var j=c[f];c[f]=c[e];
c[e]=j}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){return[this.n11,this.n21,this.n31,this.n41,this.n12,
this.n22,this.n32,this.n42,this.n13,this.n23,this.n33,this.n43,this.n14,this.n24,this.n34,this.n44]},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,c,f){var e=new THREE.Matrix4;e.n14=a;e.n24=c;e.n34=f;return e};
THREE.Matrix4.scaleMatrix=function(a,c,f){var e=new THREE.Matrix4;e.n11=a;e.n22=c;e.n33=f;return e};THREE.Matrix4.rotationXMatrix=function(a){var c=new THREE.Matrix4;c.n22=c.n33=Math.cos(a);c.n32=Math.sin(a);c.n23=-c.n32;return c};THREE.Matrix4.rotationYMatrix=function(a){var c=new THREE.Matrix4;c.n11=c.n33=Math.cos(a);c.n13=Math.sin(a);c.n31=-c.n13;return c};THREE.Matrix4.rotationZMatrix=function(a){var c=new THREE.Matrix4;c.n11=c.n22=Math.cos(a);c.n21=Math.sin(a);c.n12=-c.n21;return c};
THREE.Matrix4.rotationAxisAngleMatrix=function(a,c){var f=new THREE.Matrix4,e=Math.cos(c),j=Math.sin(c),n=1-e,r=a.x,t=a.y,p=a.z;f.n11=n*r*r+e;f.n12=n*r*t-j*p;f.n13=n*r*p+j*t;f.n21=n*r*t+j*p;f.n22=n*t*t+e;f.n23=n*t*p-j*r;f.n31=n*r*p-j*t;f.n32=n*t*p+j*r;f.n33=n*p*p+e;return f};
THREE.Matrix4.makeInvert=function(a){var c=new THREE.Matrix4;c.n11=a.n23*a.n34*a.n42-a.n24*a.n33*a.n42+a.n24*a.n32*a.n43-a.n22*a.n34*a.n43-a.n23*a.n32*a.n44+a.n22*a.n33*a.n44;c.n12=a.n14*a.n33*a.n42-a.n13*a.n34*a.n42-a.n14*a.n32*a.n43+a.n12*a.n34*a.n43+a.n13*a.n32*a.n44-a.n12*a.n33*a.n44;c.n13=a.n13*a.n24*a.n42-a.n14*a.n23*a.n42+a.n14*a.n22*a.n43-a.n12*a.n24*a.n43-a.n13*a.n22*a.n44+a.n12*a.n23*a.n44;c.n14=a.n14*a.n23*a.n32-a.n13*a.n24*a.n32-a.n14*a.n22*a.n33+a.n12*a.n24*a.n33+a.n13*a.n22*a.n34-a.n12*
a.n23*a.n34;c.n21=a.n24*a.n33*a.n41-a.n23*a.n34*a.n41-a.n24*a.n31*a.n43+a.n21*a.n34*a.n43+a.n23*a.n31*a.n44-a.n21*a.n33*a.n44;c.n22=a.n13*a.n34*a.n41-a.n14*a.n33*a.n41+a.n14*a.n31*a.n43-a.n11*a.n34*a.n43-a.n13*a.n31*a.n44+a.n11*a.n33*a.n44;c.n23=a.n14*a.n23*a.n41-a.n13*a.n24*a.n41-a.n14*a.n21*a.n43+a.n11*a.n24*a.n43+a.n13*a.n21*a.n44-a.n11*a.n23*a.n44;c.n24=a.n13*a.n24*a.n31-a.n14*a.n23*a.n31+a.n14*a.n21*a.n33-a.n11*a.n24*a.n33-a.n13*a.n21*a.n34+a.n11*a.n23*a.n34;c.n31=a.n22*a.n34*a.n41-a.n24*a.n32*
a.n41+a.n24*a.n31*a.n42-a.n21*a.n34*a.n42-a.n22*a.n31*a.n44+a.n21*a.n32*a.n44;c.n32=a.n14*a.n32*a.n41-a.n12*a.n34*a.n41-a.n14*a.n31*a.n42+a.n11*a.n34*a.n42+a.n12*a.n31*a.n44-a.n11*a.n32*a.n44;c.n33=a.n13*a.n24*a.n41-a.n14*a.n22*a.n41+a.n14*a.n21*a.n42-a.n11*a.n24*a.n42-a.n12*a.n21*a.n44+a.n11*a.n22*a.n44;c.n34=a.n14*a.n22*a.n31-a.n12*a.n24*a.n31-a.n14*a.n21*a.n32+a.n11*a.n24*a.n32+a.n12*a.n21*a.n34-a.n11*a.n22*a.n34;c.n41=a.n23*a.n32*a.n41-a.n22*a.n33*a.n41-a.n23*a.n31*a.n42+a.n21*a.n33*a.n42+a.n22*
a.n31*a.n43-a.n21*a.n32*a.n43;c.n42=a.n12*a.n33*a.n41-a.n13*a.n32*a.n41+a.n13*a.n31*a.n42-a.n11*a.n33*a.n42-a.n12*a.n31*a.n43+a.n11*a.n32*a.n43;c.n43=a.n13*a.n22*a.n41-a.n12*a.n23*a.n41-a.n13*a.n21*a.n42+a.n11*a.n23*a.n42+a.n12*a.n21*a.n43-a.n11*a.n22*a.n43;c.n44=a.n12*a.n23*a.n31-a.n13*a.n22*a.n31+a.n13*a.n21*a.n32-a.n11*a.n23*a.n32-a.n12*a.n21*a.n33+a.n11*a.n22*a.n33;c.multiplyScalar(1/a.determinant());return c};
THREE.Matrix4.makeInvert3x3=function(a){var c=a.flatten();a=new THREE.Matrix3;var f=c[10]*c[5]-c[6]*c[9],e=-c[10]*c[1]+c[2]*c[9],j=c[6]*c[1]-c[2]*c[5],n=-c[10]*c[4]+c[6]*c[8],r=c[10]*c[0]-c[2]*c[8],t=-c[6]*c[0]+c[2]*c[4],p=c[9]*c[4]-c[5]*c[8],q=-c[9]*c[0]+c[1]*c[8],A=c[5]*c[0]-c[1]*c[4];c=c[0]*f+c[1]*n+c[2]*p;if(c==0)throw"matrix not invertible";c=1/c;a.m[0]=c*f;a.m[1]=c*e;a.m[2]=c*j;a.m[3]=c*n;a.m[4]=c*r;a.m[5]=c*t;a.m[6]=c*p;a.m[7]=c*q;a.m[8]=c*A;return a};
THREE.Matrix4.makeFrustum=function(a,c,f,e,j,n){var r,t,p;r=new THREE.Matrix4;t=2*j/(c-a);p=2*j/(e-f);a=(c+a)/(c-a);f=(e+f)/(e-f);e=-(n+j)/(n-j);j=-2*n*j/(n-j);r.n11=t;r.n12=0;r.n13=a;r.n14=0;r.n21=0;r.n22=p;r.n23=f;r.n24=0;r.n31=0;r.n32=0;r.n33=e;r.n34=j;r.n41=0;r.n42=0;r.n43=-1;r.n44=0;return r};THREE.Matrix4.makePerspective=function(a,c,f,e){var j;a=f*Math.tan(a*Math.PI/360);j=-a;return THREE.Matrix4.makeFrustum(j*c,a*c,j,a,f,e)};
THREE.Matrix4.makeOrtho=function(a,c,f,e,j,n){var r,t,p,q;r=new THREE.Matrix4;t=c-a;p=f-e;q=n-j;a=(c+a)/t;f=(f+e)/p;j=(n+j)/q;r.n11=2/t;r.n12=0;r.n13=0;r.n14=-a;r.n21=0;r.n22=2/p;r.n23=0;r.n24=-f;r.n31=0;r.n32=0;r.n33=-2/q;r.n34=-j;r.n41=0;r.n42=0;r.n43=0;r.n44=1;return r};
THREE.Vertex=function(a,c){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=c||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,c,f,e,j){this.a=a;this.b=c;this.c=f;this.centroid=new THREE.Vector3;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.materials=j instanceof Array?j:[j]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,c,f,e,j,n){this.a=a;this.b=c;this.c=f;this.d=e;this.centroid=new THREE.Vector3;this.normal=j instanceof THREE.Vector3?j:new THREE.Vector3;this.vertexNormals=j instanceof Array?j:[];this.materials=n instanceof Array?n:[n]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,c){this.u=a||0;this.v=c||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,c,f;a=0;for(c=this.faces.length;a<c;a++){f=this.faces[a];f.centroid.set(0,0,0);if(f instanceof THREE.Face3){f.centroid.addSelf(this.vertices[f.a].position);f.centroid.addSelf(this.vertices[f.b].position);f.centroid.addSelf(this.vertices[f.c].position);f.centroid.divideScalar(3)}else if(f instanceof THREE.Face4){f.centroid.addSelf(this.vertices[f.a].position);f.centroid.addSelf(this.vertices[f.b].position);f.centroid.addSelf(this.vertices[f.c].position);
f.centroid.addSelf(this.vertices[f.d].position);f.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var c,f,e,j,n,r,t=new THREE.Vector3,p=new THREE.Vector3;e=0;for(j=this.vertices.length;e<j;e++){n=this.vertices[e];n.normal.set(0,0,0)}e=0;for(j=this.faces.length;e<j;e++){n=this.faces[e];if(a&&n.vertexNormals.length){t.set(0,0,0);c=0;for(f=n.normal.length;c<f;c++)t.addSelf(n.vertexNormals[c]);t.divideScalar(3)}else{c=this.vertices[n.a];f=this.vertices[n.b];r=this.vertices[n.c];t.sub(r.position,
f.position);p.sub(c.position,f.position);t.crossSelf(p)}t.isZero()||t.normalize();n.normal.copy(t)}},computeVertexNormals:function(){var a,c,f=[],e;a=0;for(c=this.vertices.length;a<c;a++)f[a]=new THREE.Vector3;a=0;for(c=this.faces.length;a<c;a++){e=this.faces[a];if(e instanceof THREE.Face3){f[e.a].addSelf(e.normal);f[e.b].addSelf(e.normal);f[e.c].addSelf(e.normal)}else if(e instanceof THREE.Face4){f[e.a].addSelf(e.normal);f[e.b].addSelf(e.normal);f[e.c].addSelf(e.normal);f[e.d].addSelf(e.normal)}}a=
0;for(c=this.vertices.length;a<c;a++)f[a].normalize();a=0;for(c=this.faces.length;a<c;a++){e=this.faces[a];if(e instanceof THREE.Face3){e.vertexNormals[0]=f[e.a].clone();e.vertexNormals[1]=f[e.b].clone();e.vertexNormals[2]=f[e.c].clone()}else if(e instanceof THREE.Face4){e.vertexNormals[0]=f[e.a].clone();e.vertexNormals[1]=f[e.b].clone();e.vertexNormals[2]=f[e.c].clone();e.vertexNormals[3]=f[e.d].clone()}}},computeTangents:function(){function a(l,m,y,v,I,H,C){n=l.vertices[m].position;r=l.vertices[y].position;
t=l.vertices[v].position;p=j[I];q=j[H];A=j[C];d=r.x-n.x;x=t.x-n.x;B=r.y-n.y;T=t.y-n.y;X=r.z-n.z;U=t.z-n.z;s=q.u-p.u;R=A.u-p.u;E=q.v-p.v;L=A.v-p.v;N=1/(s*L-R*E);K.set((L*d-E*x)*N,(L*B-E*T)*N,(L*X-E*U)*N);h.set((s*x-R*d)*N,(s*T-R*B)*N,(s*U-R*X)*N);Z[m].addSelf(K);Z[y].addSelf(K);Z[v].addSelf(K);P[m].addSelf(h);P[y].addSelf(h);P[v].addSelf(h)}var c,f,e,j,n,r,t,p,q,A,d,x,B,T,X,U,s,R,E,L,N,Z=[],P=[],K=new THREE.Vector3,h=new THREE.Vector3,k=new THREE.Vector3,o=new THREE.Vector3,i=new THREE.Vector3;c=0;
for(f=this.vertices.length;c<f;c++){Z[c]=new THREE.Vector3;P[c]=new THREE.Vector3}c=0;for(f=this.faces.length;c<f;c++){e=this.faces[c];j=this.uvs[c];if(e instanceof THREE.Face3){a(this,e.a,e.b,e.c,0,1,2);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);this.vertices[e.c].normal.copy(e.vertexNormals[2])}else if(e instanceof THREE.Face4){a(this,e.a,e.b,e.c,0,1,2);a(this,e.a,e.b,e.d,0,1,3);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);
this.vertices[e.c].normal.copy(e.vertexNormals[2]);this.vertices[e.d].normal.copy(e.vertexNormals[3])}}c=0;for(f=this.vertices.length;c<f;c++){i.copy(this.vertices[c].normal);e=Z[c];k.copy(e);k.subSelf(i.multiplyScalar(i.dot(e))).normalize();o.cross(this.vertices[c].normal,e);e=o.dot(P[c]);e=e<0?-1:1;this.vertices[c].tangent.set(k.x,k.y,k.z,e)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],
y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var c=1,f=this.vertices.length;c<f;c++){a=this.vertices[c];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<
this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,c=0,f=this.vertices.length;c<f;c++)a=Math.max(a,this.vertices[c].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(A){var d=[];c=0;for(f=A.length;c<f;c++)A[c]==undefined?d.push("undefined"):d.push(A[c].toString());return d.join("_")}
var c,f,e,j,n,r,t,p,q={};e=0;for(j=this.faces.length;e<j;e++){n=this.faces[e];r=n.materials;t=a(r);if(q[t]==undefined)q[t]={hash:t,counter:0};p=q[t].hash+"_"+q[t].counter;if(this.geometryChunks[p]==undefined)this.geometryChunks[p]={faces:[],materials:r,vertices:0};n=n instanceof THREE.Face3?3:4;if(this.geometryChunks[p].vertices+n>65535){q[t].counter+=1;p=q[t].hash+"_"+q[t].counter;if(this.geometryChunks[p]==undefined)this.geometryChunks[p]={faces:[],materials:r,vertices:0}}this.geometryChunks[p].faces.push(e);
this.geometryChunks[p].vertices+=n}},toString:function(){return"THREE.Geometry ( vertices: "+this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,c,f,e){this.fov=a;this.aspect=c;this.near=f;this.far=e;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.translateX=function(j){j=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(j);j.cross(j.clone(),this.up);this.position.addSelf(j);this.target.position.addSelf(j)};this.translateZ=function(j){j=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(j);
this.position.subSelf(j);this.target.position.subSelf(j)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};
THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=c||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;
THREE.PointLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=c||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.translationMatrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.scaleMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){this.matrixPosition=THREE.Matrix4.translationMatrix(this.position.x,this.position.y,this.position.z);this.rotationMatrix=THREE.Matrix4.rotationXMatrix(this.rotation.x);this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationYMatrix(this.rotation.y));this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationZMatrix(this.rotation.z));this.scaleMatrix=THREE.Matrix4.scaleMatrix(this.scale.x,this.scale.y,this.scale.z);this.matrix.copy(this.matrixPosition);
this.matrix.multiplySelf(this.rotationMatrix);this.matrix.multiplySelf(this.scaleMatrix)}};THREE.Object3DCounter={value:0};THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.Line=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c]};THREE.Line.prototype=new THREE.Object3D;
THREE.Line.prototype.constructor=THREE.Line;THREE.Mesh=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+
"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=
this.wireframe_linecap="round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=
a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==
undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial"}};
THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.opacity=1;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};
THREE.Texture=function(a,c,f,e,j,n){this.image=a;this.mapping=c!==undefined?c:new THREE.UVMapping;this.wrap_s=f!==undefined?f:THREE.ClampToEdgeWrapping;this.wrap_t=e!==undefined?e:THREE.ClampToEdgeWrapping;this.mag_filter=j!==undefined?j:THREE.LinearFilter;this.min_filter=n!==undefined?n:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;var Uniforms={clone:function(a){var c,f,e,j={};for(c in a){j[c]={};for(f in a[c]){e=a[c][f];j[c][f]=e instanceof THREE.Color||e instanceof THREE.Vector3||e instanceof THREE.Texture?e.clone():e}}return j}};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};
THREE.LatitudeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,c,f){this.color=new THREE.Color(a);this.near=c||1;this.far=f||1E3};THREE.FogExp2=function(a,c){this.color=new THREE.Color(a);this.density=c||2.5E-4};
THREE.Projector=function(){function a(P,K){return K.z-P.z}function c(P,K){var h=0,k=1,o=P.z+P.w,i=K.z+K.w,l=-P.z+P.w,m=-K.z+K.w;if(o>=0&&i>=0&&l>=0&&m>=0)return true;else if(o<0&&i<0||l<0&&m<0)return false;else{if(o<0)h=Math.max(h,o/(o-i));else if(i<0)k=Math.min(k,o/(o-i));if(l<0)h=Math.max(h,l/(l-m));else if(m<0)k=Math.min(k,l/(l-m));if(k<h)return false;else{P.lerpSelf(K,h);K.lerpSelf(P,1-k);return true}}}var f,e,j=[],n,r,t,p=[],q,A,d=[],x,B,T=[],X=new THREE.Vector4,U=new THREE.Vector4,s=new THREE.Matrix4,
R=new THREE.Matrix4,E=[],L=new THREE.Vector4,N=new THREE.Vector4,Z;this.projectObjects=function(P,K,h){var k=[],o,i;e=0;s.multiply(K.projectionMatrix,K.matrix);E[0]=new THREE.Vector4(s.n41-s.n11,s.n42-s.n12,s.n43-s.n13,s.n44-s.n14);E[1]=new THREE.Vector4(s.n41+s.n11,s.n42+s.n12,s.n43+s.n13,s.n44+s.n14);E[2]=new THREE.Vector4(s.n41+s.n21,s.n42+s.n22,s.n43+s.n23,s.n44+s.n24);E[3]=new THREE.Vector4(s.n41-s.n21,s.n42-s.n22,s.n43-s.n23,s.n44-s.n24);E[4]=new THREE.Vector4(s.n41-s.n31,s.n42-s.n32,s.n43-
s.n33,s.n44-s.n34);E[5]=new THREE.Vector4(s.n41+s.n31,s.n42+s.n32,s.n43+s.n33,s.n44+s.n34);K=0;for(o=E.length;K<o;K++){i=E[K];i.divideScalar(Math.sqrt(i.x*i.x+i.y*i.y+i.z*i.z))}o=P.objects;P=0;for(K=o.length;P<K;P++){i=o[P];var l;if(!(l=!i.visible)){if(l=i instanceof THREE.Mesh){a:{l=void 0;for(var m=i.position,y=-i.geometry.boundingSphere.radius*Math.max(i.scale.x,Math.max(i.scale.y,i.scale.z)),v=0;v<6;v++){l=E[v].x*m.x+E[v].y*m.y+E[v].z*m.z+E[v].w;if(l<=y){l=false;break a}}l=true}l=!l}l=l}if(!l){f=
j[e]=j[e]||new THREE.RenderableObject;X.copy(i.position);s.multiplyVector3(X);f.object=i;f.z=X.z;k.push(f);e++}}h&&k.sort(a);return k};this.projectScene=function(P,K,h){var k=[],o=K.near,i=K.far,l,m,y,v,I,H,C,J,W,u,F,V,S,z,G,O;t=A=B=0;K.autoUpdateMatrix&&K.updateMatrix();s.multiply(K.projectionMatrix,K.matrix);H=this.projectObjects(P,K,true);P=0;for(l=H.length;P<l;P++){C=H[P].object;if(C.visible){C.autoUpdateMatrix&&C.updateMatrix();J=C.matrix;W=C.rotationMatrix;u=C.materials;F=C.overdraw;if(C instanceof
THREE.Mesh){V=C.geometry;S=V.vertices;m=0;for(y=S.length;m<y;m++){z=S[m];z.positionWorld.copy(z.position);J.multiplyVector3(z.positionWorld);v=z.positionScreen;v.copy(z.positionWorld);s.multiplyVector4(v);v.x/=v.w;v.y/=v.w;z.__visible=v.z>o&&v.z<i}V=V.faces;m=0;for(y=V.length;m<y;m++){z=V[m];if(z instanceof THREE.Face3){v=S[z.a];I=S[z.b];G=S[z.c];if(v.__visible&&I.__visible&&G.__visible)if(C.doubleSided||C.flipSided!=(G.positionScreen.x-v.positionScreen.x)*(I.positionScreen.y-v.positionScreen.y)-
(G.positionScreen.y-v.positionScreen.y)*(I.positionScreen.x-v.positionScreen.x)<0){n=p[t]=p[t]||new THREE.RenderableFace3;n.v1.positionWorld.copy(v.positionWorld);n.v2.positionWorld.copy(I.positionWorld);n.v3.positionWorld.copy(G.positionWorld);n.v1.positionScreen.copy(v.positionScreen);n.v2.positionScreen.copy(I.positionScreen);n.v3.positionScreen.copy(G.positionScreen);n.normalWorld.copy(z.normal);W.multiplyVector3(n.normalWorld);n.centroidWorld.copy(z.centroid);J.multiplyVector3(n.centroidWorld);
n.centroidScreen.copy(n.centroidWorld);s.multiplyVector3(n.centroidScreen);G=z.vertexNormals;Z=n.vertexNormalsWorld;v=0;for(I=G.length;v<I;v++){O=Z[v]=Z[v]||new THREE.Vector3;O.copy(G[v]);W.multiplyVector3(O)}n.z=n.centroidScreen.z;n.meshMaterials=u;n.faceMaterials=z.materials;n.overdraw=F;if(C.geometry.uvs[m]){n.uvs[0]=C.geometry.uvs[m][0];n.uvs[1]=C.geometry.uvs[m][1];n.uvs[2]=C.geometry.uvs[m][2]}k.push(n);t++}}else if(z instanceof THREE.Face4){v=S[z.a];I=S[z.b];G=S[z.c];O=S[z.d];if(v.__visible&&
I.__visible&&G.__visible&&O.__visible)if(C.doubleSided||C.flipSided!=((O.positionScreen.x-v.positionScreen.x)*(I.positionScreen.y-v.positionScreen.y)-(O.positionScreen.y-v.positionScreen.y)*(I.positionScreen.x-v.positionScreen.x)<0||(I.positionScreen.x-G.positionScreen.x)*(O.positionScreen.y-G.positionScreen.y)-(I.positionScreen.y-G.positionScreen.y)*(O.positionScreen.x-G.positionScreen.x)<0)){n=p[t]=p[t]||new THREE.RenderableFace3;n.v1.positionWorld.copy(v.positionWorld);n.v2.positionWorld.copy(I.positionWorld);
n.v3.positionWorld.copy(O.positionWorld);n.v1.positionScreen.copy(v.positionScreen);n.v2.positionScreen.copy(I.positionScreen);n.v3.positionScreen.copy(O.positionScreen);n.normalWorld.copy(z.normal);W.multiplyVector3(n.normalWorld);n.centroidWorld.copy(z.centroid);J.multiplyVector3(n.centroidWorld);n.centroidScreen.copy(n.centroidWorld);s.multiplyVector3(n.centroidScreen);n.z=n.centroidScreen.z;n.meshMaterials=u;n.faceMaterials=z.materials;n.overdraw=F;if(C.geometry.uvs[m]){n.uvs[0]=C.geometry.uvs[m][0];
n.uvs[1]=C.geometry.uvs[m][1];n.uvs[2]=C.geometry.uvs[m][3]}k.push(n);t++;r=p[t]=p[t]||new THREE.RenderableFace3;r.v1.positionWorld.copy(I.positionWorld);r.v2.positionWorld.copy(G.positionWorld);r.v3.positionWorld.copy(O.positionWorld);r.v1.positionScreen.copy(I.positionScreen);r.v2.positionScreen.copy(G.positionScreen);r.v3.positionScreen.copy(O.positionScreen);r.normalWorld.copy(n.normalWorld);r.centroidWorld.copy(n.centroidWorld);r.centroidScreen.copy(n.centroidScreen);r.z=r.centroidScreen.z;r.meshMaterials=
u;r.faceMaterials=z.materials;r.overdraw=F;if(C.geometry.uvs[m]){r.uvs[0]=C.geometry.uvs[m][1];r.uvs[1]=C.geometry.uvs[m][2];r.uvs[2]=C.geometry.uvs[m][3]}k.push(r);t++}}}}else if(C instanceof THREE.Line){R.multiply(s,J);S=C.geometry.vertices;z=S[0];z.positionScreen.copy(z.position);R.multiplyVector4(z.positionScreen);m=1;for(y=S.length;m<y;m++){v=S[m];v.positionScreen.copy(v.position);R.multiplyVector4(v.positionScreen);I=S[m-1];L.copy(v.positionScreen);N.copy(I.positionScreen);if(c(L,N)){L.multiplyScalar(1/
L.w);N.multiplyScalar(1/N.w);q=d[A]=d[A]||new THREE.RenderableLine;q.v1.positionScreen.copy(L);q.v2.positionScreen.copy(N);q.z=Math.max(L.z,N.z);q.materials=C.materials;k.push(q);A++}}}else if(C instanceof THREE.Particle){U.set(C.position.x,C.position.y,C.position.z,1);s.multiplyVector4(U);U.z/=U.w;if(U.z>0&&U.z<1){x=T[B]=T[B]||new THREE.RenderableParticle;x.x=U.x/U.w;x.y=U.y/U.w;x.z=U.z;x.rotation=C.rotation.z;x.scale.x=C.scale.x*Math.abs(x.x-(U.x+K.projectionMatrix.n11)/(U.w+K.projectionMatrix.n14));
x.scale.y=C.scale.y*Math.abs(x.y-(U.y+K.projectionMatrix.n22)/(U.w+K.projectionMatrix.n24));x.materials=C.materials;k.push(x);B++}}}}h&&k.sort(a);return k};this.unprojectVector=function(P,K){var h=new THREE.Matrix4;h.multiply(THREE.Matrix4.makeInvert(K.matrix),THREE.Matrix4.makeInvert(K.projectionMatrix));h.multiplyVector3(P);return P}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,c=new THREE.Projector,f,e,j,n;this.domElement=document.createElement("div");this.setSize=function(r,t){f=r;e=t;j=f/2;n=e/2};this.render=function(r,t){var p,q,A,d,x,B,T,X;a=c.projectScene(r,t);p=0;for(q=a.length;p<q;p++){x=a[p];if(x instanceof THREE.RenderableParticle){T=x.x*j+j;X=x.y*n+n;A=0;for(d=x.material.length;A<d;A++){B=x.material[A];if(B instanceof THREE.ParticleDOMMaterial){B=B.domElement;B.style.left=T+"px";B.style.top=X+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(da){if(x!=da)q.globalAlpha=x=da}function c(da){if(B!=da){switch(da){case THREE.NormalBlending:q.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:q.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:q.globalCompositeOperation="darker"}B=da}}var f=null,e=new THREE.Projector,j=document.createElement("canvas"),n,r,t,p,q=j.getContext("2d"),A=null,d=null,x=1,B=0,T=null,X=null,U=1,s,R,E,L,N,Z,P,K,h,k=new THREE.Color,
o=new THREE.Color,i=new THREE.Color,l=new THREE.Color,m=new THREE.Color,y,v,I,H,C,J,W,u,F,V=new THREE.Rectangle,S=new THREE.Rectangle,z=new THREE.Rectangle,G=false,O=new THREE.Color,ea=new THREE.Color,oa=new THREE.Color,pa=new THREE.Color,Na=Math.PI*2,aa=new THREE.Vector3,ta,ua,Ea,ha,va,za,ra=16;ta=document.createElement("canvas");ta.width=ta.height=2;ua=ta.getContext("2d");ua.fillStyle="rgba(0,0,0,1)";ua.fillRect(0,0,2,2);Ea=ua.getImageData(0,0,2,2);ha=Ea.data;va=document.createElement("canvas");
va.width=va.height=ra;za=va.getContext("2d");za.translate(-ra/2,-ra/2);za.scale(ra,ra);ra--;this.domElement=j;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(da,na){n=da;r=na;t=n/2;p=r/2;j.width=n;j.height=r;V.set(-t,-p,t,p)};this.setClearColor=function(da,na){A=da!==null?new THREE.Color(da):null;d=na;S.set(-t,-p,t,p);q.setTransform(1,0,0,-1,t,p);this.clear()};this.clear=function(){if(!S.isEmpty()){S.inflate(1);S.minSelf(V);if(A!==null){c(THREE.NormalBlending);a(1);q.fillStyle=
"rgba("+Math.floor(A.r*255)+","+Math.floor(A.g*255)+","+Math.floor(A.b*255)+","+d+")";q.fillRect(S.getX(),S.getY(),S.getWidth(),S.getHeight())}else q.clearRect(S.getX(),S.getY(),S.getWidth(),S.getHeight());S.empty()}};this.render=function(da,na){function Oa(w){var Y,Q,D,M=w.lights;ea.setRGB(0,0,0);oa.setRGB(0,0,0);pa.setRGB(0,0,0);w=0;for(Y=M.length;w<Y;w++){Q=M[w];D=Q.color;if(Q instanceof THREE.AmbientLight){ea.r+=D.r;ea.g+=D.g;ea.b+=D.b}else if(Q instanceof THREE.DirectionalLight){oa.r+=D.r;oa.g+=
D.g;oa.b+=D.b}else if(Q instanceof THREE.PointLight){pa.r+=D.r;pa.g+=D.g;pa.b+=D.b}}}function Aa(w,Y,Q,D){var M,$,ca,fa,ga=w.lights;w=0;for(M=ga.length;w<M;w++){$=ga[w];ca=$.color;fa=$.intensity;if($ instanceof THREE.DirectionalLight){$=Q.dot($.position)*fa;if($>0){D.r+=ca.r*$;D.g+=ca.g*$;D.b+=ca.b*$}}else if($ instanceof THREE.PointLight){aa.sub($.position,Y);aa.normalize();$=Q.dot(aa)*fa;if($>0){D.r+=ca.r*$;D.g+=ca.g*$;D.b+=ca.b*$}}}}function Pa(w,Y,Q){if(Q.opacity!=0){a(Q.opacity);c(Q.blending);
var D,M,$,ca,fa,ga;if(Q instanceof THREE.ParticleBasicMaterial){if(Q.map){ca=Q.map;fa=ca.width>>1;ga=ca.height>>1;M=Y.scale.x*t;$=Y.scale.y*p;Q=M*fa;D=$*ga;z.set(w.x-Q,w.y-D,w.x+Q,w.y+D);if(!V.instersects(z))return;q.save();q.translate(w.x,w.y);q.rotate(-Y.rotation);q.scale(M,-$);q.translate(-fa,-ga);q.drawImage(ca,0,0);q.restore()}q.beginPath();q.moveTo(w.x-10,w.y);q.lineTo(w.x+10,w.y);q.moveTo(w.x,w.y-10);q.lineTo(w.x,w.y+10);q.closePath();q.strokeStyle="rgb(255,255,0)";q.stroke()}else if(Q instanceof
THREE.ParticleCircleMaterial){if(G){O.r=ea.r+oa.r+pa.r;O.g=ea.g+oa.g+pa.g;O.b=ea.b+oa.b+pa.b;k.r=Q.color.r*O.r;k.g=Q.color.g*O.g;k.b=Q.color.b*O.b;k.updateStyleString()}else k.__styleString=Q.color.__styleString;Q=Y.scale.x*t;D=Y.scale.y*p;z.set(w.x-Q,w.y-D,w.x+Q,w.y+D);if(V.instersects(z)){M=k.__styleString;if(X!=M)q.fillStyle=X=M;q.save();q.translate(w.x,w.y);q.rotate(-Y.rotation);q.scale(Q,D);q.beginPath();q.arc(0,0,1,0,Na,true);q.closePath();q.fill();q.restore()}}}}function Qa(w,Y,Q,D){if(D.opacity!=
0){a(D.opacity);c(D.blending);q.beginPath();q.moveTo(w.positionScreen.x,w.positionScreen.y);q.lineTo(Y.positionScreen.x,Y.positionScreen.y);q.closePath();if(D instanceof THREE.LineBasicMaterial){k.__styleString=D.color.__styleString;w=D.linewidth;if(U!=w)q.lineWidth=U=w;w=k.__styleString;if(T!=w)q.strokeStyle=T=w;q.stroke();z.inflate(D.linewidth*2)}}}function Ja(w,Y,Q,D,M,$){if(M.opacity!=0){a(M.opacity);c(M.blending);L=w.positionScreen.x;N=w.positionScreen.y;Z=Y.positionScreen.x;P=Y.positionScreen.y;
K=Q.positionScreen.x;h=Q.positionScreen.y;q.beginPath();q.moveTo(L,N);q.lineTo(Z,P);q.lineTo(K,h);q.lineTo(L,N);q.closePath();if(M instanceof THREE.MeshBasicMaterial)if(M.map)M.map.image.loaded&&M.map.mapping instanceof THREE.UVMapping&&wa(L,N,Z,P,K,h,M.map.image,D.uvs[0].u,D.uvs[0].v,D.uvs[1].u,D.uvs[1].v,D.uvs[2].u,D.uvs[2].v);else if(M.env_map){if(M.env_map.image.loaded)if(M.env_map.mapping instanceof THREE.SphericalReflectionMapping){w=na.matrix;aa.copy(D.vertexNormalsWorld[0]);H=(aa.x*w.n11+
aa.y*w.n12+aa.z*w.n13)*0.5+0.5;C=-(aa.x*w.n21+aa.y*w.n22+aa.z*w.n23)*0.5+0.5;aa.copy(D.vertexNormalsWorld[1]);J=(aa.x*w.n11+aa.y*w.n12+aa.z*w.n13)*0.5+0.5;W=-(aa.x*w.n21+aa.y*w.n22+aa.z*w.n23)*0.5+0.5;aa.copy(D.vertexNormalsWorld[2]);u=(aa.x*w.n11+aa.y*w.n12+aa.z*w.n13)*0.5+0.5;F=-(aa.x*w.n21+aa.y*w.n22+aa.z*w.n23)*0.5+0.5;wa(L,N,Z,P,K,h,M.env_map.image,H,C,J,W,u,F)}}else M.wireframe?Ba(M.color.__styleString,M.wireframe_linewidth):Ca(M.color.__styleString);else if(M instanceof THREE.MeshLambertMaterial){if(M.map&&
!M.wireframe){M.map.mapping instanceof THREE.UVMapping&&wa(L,N,Z,P,K,h,M.map.image,D.uvs[0].u,D.uvs[0].v,D.uvs[1].u,D.uvs[1].v,D.uvs[2].u,D.uvs[2].v);c(THREE.SubtractiveBlending)}if(G)if(!M.wireframe&&M.shading==THREE.SmoothShading&&D.vertexNormalsWorld.length==3){o.r=i.r=l.r=ea.r;o.g=i.g=l.g=ea.g;o.b=i.b=l.b=ea.b;Aa($,D.v1.positionWorld,D.vertexNormalsWorld[0],o);Aa($,D.v2.positionWorld,D.vertexNormalsWorld[1],i);Aa($,D.v3.positionWorld,D.vertexNormalsWorld[2],l);m.r=(i.r+l.r)*0.5;m.g=(i.g+l.g)*
0.5;m.b=(i.b+l.b)*0.5;I=Ka(o,i,l,m);wa(L,N,Z,P,K,h,I,0,0,1,0,0,1)}else{O.r=ea.r;O.g=ea.g;O.b=ea.b;Aa($,D.centroidWorld,D.normalWorld,O);k.r=M.color.r*O.r;k.g=M.color.g*O.g;k.b=M.color.b*O.b;k.updateStyleString();M.wireframe?Ba(k.__styleString,M.wireframe_linewidth):Ca(k.__styleString)}else M.wireframe?Ba(M.color.__styleString,M.wireframe_linewidth):Ca(M.color.__styleString)}else if(M instanceof THREE.MeshDepthMaterial){y=na.near;v=na.far;o.r=o.g=o.b=1-Fa(w.positionScreen.z,y,v);i.r=i.g=i.b=1-Fa(Y.positionScreen.z,
y,v);l.r=l.g=l.b=1-Fa(Q.positionScreen.z,y,v);m.r=(i.r+l.r)*0.5;m.g=(i.g+l.g)*0.5;m.b=(i.b+l.b)*0.5;I=Ka(o,i,l,m);wa(L,N,Z,P,K,h,I,0,0,1,0,0,1)}else if(M instanceof THREE.MeshNormalMaterial){k.r=Ga(D.normalWorld.x);k.g=Ga(D.normalWorld.y);k.b=Ga(D.normalWorld.z);k.updateStyleString();M.wireframe?Ba(k.__styleString,M.wireframe_linewidth):Ca(k.__styleString)}}}function Ba(w,Y){if(T!=w)q.strokeStyle=T=w;if(U!=Y)q.lineWidth=U=Y;q.stroke();z.inflate(Y*2)}function Ca(w){if(X!=w)q.fillStyle=X=w;q.fill()}
function wa(w,Y,Q,D,M,$,ca,fa,ga,ka,ia,la,xa){var qa,ma;qa=ca.width-1;ma=ca.height-1;fa*=qa;ga*=ma;ka*=qa;ia*=ma;la*=qa;xa*=ma;Q-=w;D-=Y;M-=w;$-=Y;ka-=fa;ia-=ga;la-=fa;xa-=ga;ma=1/(ka*xa-la*ia);qa=(xa*Q-ia*M)*ma;ia=(xa*D-ia*$)*ma;Q=(ka*M-la*Q)*ma;D=(ka*$-la*D)*ma;w=w-qa*fa-Q*ga;Y=Y-ia*fa-D*ga;q.save();q.transform(qa,ia,Q,D,w,Y);q.clip();q.drawImage(ca,0,0);q.restore()}function Ka(w,Y,Q,D){var M=~~(w.r*255),$=~~(w.g*255);w=~~(w.b*255);var ca=~~(Y.r*255),fa=~~(Y.g*255);Y=~~(Y.b*255);var ga=~~(Q.r*255),
ka=~~(Q.g*255);Q=~~(Q.b*255);var ia=~~(D.r*255),la=~~(D.g*255);D=~~(D.b*255);ha[0]=M<0?0:M>255?255:M;ha[1]=$<0?0:$>255?255:$;ha[2]=w<0?0:w>255?255:w;ha[4]=ca<0?0:ca>255?255:ca;ha[5]=fa<0?0:fa>255?255:fa;ha[6]=Y<0?0:Y>255?255:Y;ha[8]=ga<0?0:ga>255?255:ga;ha[9]=ka<0?0:ka>255?255:ka;ha[10]=Q<0?0:Q>255?255:Q;ha[12]=ia<0?0:ia>255?255:ia;ha[13]=la<0?0:la>255?255:la;ha[14]=D<0?0:D>255?255:D;ua.putImageData(Ea,0,0);za.drawImage(ta,0,0);return va}function Fa(w,Y,Q){w=(w-Y)/(Q-Y);return w*w*(3-2*w)}function Ga(w){w=
(w+1)*0.5;return w<0?0:w>1?1:w}function Ha(w,Y){var Q=Y.x-w.x,D=Y.y-w.y,M=1/Math.sqrt(Q*Q+D*D);Q*=M;D*=M;Y.x+=Q;Y.y+=D;w.x-=Q;w.y-=D}var Da,La,ba,ja,sa,Ia,Ma,ya;q.setTransform(1,0,0,-1,t,p);this.autoClear&&this.clear();f=e.projectScene(da,na,this.sortElements);q.fillStyle="rgba( 0, 255, 255, 0.5 )";q.fillRect(V.getX(),V.getY(),V.getWidth(),V.getHeight());(G=da.lights.length>0)&&Oa(da);Da=0;for(La=f.length;Da<La;Da++){ba=f[Da];z.empty();if(ba instanceof THREE.RenderableParticle){s=ba;s.x*=t;s.y*=p;
ja=0;for(sa=ba.materials.length;ja<sa;ja++)Pa(s,ba,ba.materials[ja],da)}else if(ba instanceof THREE.RenderableLine){s=ba.v1;R=ba.v2;s.positionScreen.x*=t;s.positionScreen.y*=p;R.positionScreen.x*=t;R.positionScreen.y*=p;z.addPoint(s.positionScreen.x,s.positionScreen.y);z.addPoint(R.positionScreen.x,R.positionScreen.y);if(V.instersects(z)){ja=0;for(sa=ba.materials.length;ja<sa;)Qa(s,R,ba,ba.materials[ja++],da)}}else if(ba instanceof THREE.RenderableFace3){s=ba.v1;R=ba.v2;E=ba.v3;s.positionScreen.x*=
t;s.positionScreen.y*=p;R.positionScreen.x*=t;R.positionScreen.y*=p;E.positionScreen.x*=t;E.positionScreen.y*=p;if(ba.overdraw){Ha(s.positionScreen,R.positionScreen);Ha(R.positionScreen,E.positionScreen);Ha(E.positionScreen,s.positionScreen)}z.add3Points(s.positionScreen.x,s.positionScreen.y,R.positionScreen.x,R.positionScreen.y,E.positionScreen.x,E.positionScreen.y);if(V.instersects(z)){ja=0;for(sa=ba.meshMaterials.length;ja<sa;){ya=ba.meshMaterials[ja++];if(ya instanceof THREE.MeshFaceMaterial){Ia=
0;for(Ma=ba.faceMaterials.length;Ia<Ma;)(ya=ba.faceMaterials[Ia++])&&Ja(s,R,E,ba,ya,da)}else Ja(s,R,E,ba,ya,da)}}}S.addRectangle(z)}q.lineWidth=1;q.strokeStyle="rgba( 255, 0, 0, 0.5 )";q.strokeRect(S.getX(),S.getY(),S.getWidth(),S.getHeight());q.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(H,C,J){var W,u,F,V;W=0;for(u=H.lights.length;W<u;W++){F=H.lights[W];if(F instanceof THREE.DirectionalLight){V=C.normalWorld.dot(F.position)*F.intensity;if(V>0){J.r+=F.color.r*V;J.g+=F.color.g*V;J.b+=F.color.b*V}}else if(F instanceof THREE.PointLight){h.sub(F.position,C.centroidWorld);h.normalize();V=C.normalWorld.dot(h)*F.intensity;if(V>0){J.r+=F.color.r*V;J.g+=F.color.g*V;J.b+=F.color.b*V}}}}function c(H,C,J,W,u,F){l=e(m++);l.setAttribute("d","M "+H.positionScreen.x+
" "+H.positionScreen.y+" L "+C.positionScreen.x+" "+C.positionScreen.y+" L "+J.positionScreen.x+","+J.positionScreen.y+"z");if(u instanceof THREE.MeshBasicMaterial)E.__styleString=u.color.__styleString;else if(u instanceof THREE.MeshLambertMaterial)if(R){L.r=N.r;L.g=N.g;L.b=N.b;a(F,W,L);E.r=u.color.r*L.r;E.g=u.color.g*L.g;E.b=u.color.b*L.b;E.updateStyleString()}else E.__styleString=u.color.__styleString;else if(u instanceof THREE.MeshDepthMaterial){K=1-u.__2near/(u.__farPlusNear-W.z*u.__farMinusNear);
E.setRGB(K,K,K)}else u instanceof THREE.MeshNormalMaterial&&E.setRGB(j(W.normalWorld.x),j(W.normalWorld.y),j(W.normalWorld.z));u.wireframe?l.setAttribute("style","fill: none; stroke: "+E.__styleString+"; stroke-width: "+u.wireframe_linewidth+"; stroke-opacity: "+u.opacity+"; stroke-linecap: "+u.wireframe_linecap+"; stroke-linejoin: "+u.wireframe_linejoin):l.setAttribute("style","fill: "+E.__styleString+"; fill-opacity: "+u.opacity);t.appendChild(l)}function f(H,C,J,W,u,F,V){l=e(m++);l.setAttribute("d",
"M "+H.positionScreen.x+" "+H.positionScreen.y+" L "+C.positionScreen.x+" "+C.positionScreen.y+" L "+J.positionScreen.x+","+J.positionScreen.y+" L "+W.positionScreen.x+","+W.positionScreen.y+"z");if(F instanceof THREE.MeshBasicMaterial)E.__styleString=F.color.__styleString;else if(F instanceof THREE.MeshLambertMaterial)if(R){L.r=N.r;L.g=N.g;L.b=N.b;a(V,u,L);E.r=F.color.r*L.r;E.g=F.color.g*L.g;E.b=F.color.b*L.b;E.updateStyleString()}else E.__styleString=F.color.__styleString;else if(F instanceof THREE.MeshDepthMaterial){K=
1-F.__2near/(F.__farPlusNear-u.z*F.__farMinusNear);E.setRGB(K,K,K)}else F instanceof THREE.MeshNormalMaterial&&E.setRGB(j(u.normalWorld.x),j(u.normalWorld.y),j(u.normalWorld.z));F.wireframe?l.setAttribute("style","fill: none; stroke: "+E.__styleString+"; stroke-width: "+F.wireframe_linewidth+"; stroke-opacity: "+F.opacity+"; stroke-linecap: "+F.wireframe_linecap+"; stroke-linejoin: "+F.wireframe_linejoin):l.setAttribute("style","fill: "+E.__styleString+"; fill-opacity: "+F.opacity);t.appendChild(l)}
function e(H){if(k[H]==null){k[H]=document.createElementNS("http://www.w3.org/2000/svg","path");I==0&&k[H].setAttribute("shape-rendering","crispEdges");return k[H]}return k[H]}function j(H){return H<0?Math.min((1+H)*0.5,0.5):0.5+Math.min(H*0.5,0.5)}var n=null,r=new THREE.Projector,t=document.createElementNS("http://www.w3.org/2000/svg","svg"),p,q,A,d,x,B,T,X,U=new THREE.Rectangle,s=new THREE.Rectangle,R=false,E=new THREE.Color(16777215),L=new THREE.Color(16777215),N=new THREE.Color(0),Z=new THREE.Color(0),
P=new THREE.Color(0),K,h=new THREE.Vector3,k=[],o=[],i=[],l,m,y,v,I=1;this.domElement=t;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(H){switch(H){case "high":I=1;break;case "low":I=0}};this.setSize=function(H,C){p=H;q=C;A=p/2;d=q/2;t.setAttribute("viewBox",-A+" "+-d+" "+p+" "+q);t.setAttribute("width",p);t.setAttribute("height",q);U.set(-A,-d,A,d)};this.clear=function(){for(;t.childNodes.length>0;)t.removeChild(t.childNodes[0])};this.render=function(H,C){var J,W,
u,F,V,S,z,G;this.autoClear&&this.clear();n=r.projectScene(H,C,this.sortElements);v=y=m=0;if(R=H.lights.length>0){z=H.lights;N.setRGB(0,0,0);Z.setRGB(0,0,0);P.setRGB(0,0,0);J=0;for(W=z.length;J<W;J++){u=z[J];F=u.color;if(u instanceof THREE.AmbientLight){N.r+=F.r;N.g+=F.g;N.b+=F.b}else if(u instanceof THREE.DirectionalLight){Z.r+=F.r;Z.g+=F.g;Z.b+=F.b}else if(u instanceof THREE.PointLight){P.r+=F.r;P.g+=F.g;P.b+=F.b}}}J=0;for(W=n.length;J<W;J++){z=n[J];s.empty();if(z instanceof THREE.RenderableParticle){x=
z;x.x*=A;x.y*=-d;u=0;for(F=z.materials.length;u<F;u++)if(G=z.materials[u]){V=x;S=z;G=G;var O=y++;if(o[O]==null){o[O]=document.createElementNS("http://www.w3.org/2000/svg","circle");I==0&&o[O].setAttribute("shape-rendering","crispEdges")}l=o[O];l.setAttribute("cx",V.x);l.setAttribute("cy",V.y);l.setAttribute("r",S.scale.x*A);if(G instanceof THREE.ParticleCircleMaterial){if(R){L.r=N.r+Z.r+P.r;L.g=N.g+Z.g+P.g;L.b=N.b+Z.b+P.b;E.r=G.color.r*L.r;E.g=G.color.g*L.g;E.b=G.color.b*L.b;E.updateStyleString()}else E=
G.color;l.setAttribute("style","fill: "+E.__styleString)}t.appendChild(l)}}else if(z instanceof THREE.RenderableLine){x=z.v1;B=z.v2;x.positionScreen.x*=A;x.positionScreen.y*=-d;B.positionScreen.x*=A;B.positionScreen.y*=-d;s.addPoint(x.positionScreen.x,x.positionScreen.y);s.addPoint(B.positionScreen.x,B.positionScreen.y);if(U.instersects(s)){u=0;for(F=z.materials.length;u<F;)if(G=z.materials[u++]){V=x;S=B;G=G;O=v++;if(i[O]==null){i[O]=document.createElementNS("http://www.w3.org/2000/svg","line");I==
0&&i[O].setAttribute("shape-rendering","crispEdges")}l=i[O];l.setAttribute("x1",V.positionScreen.x);l.setAttribute("y1",V.positionScreen.y);l.setAttribute("x2",S.positionScreen.x);l.setAttribute("y2",S.positionScreen.y);if(G instanceof THREE.LineBasicMaterial){E.__styleString=G.color.__styleString;l.setAttribute("style","fill: none; stroke: "+E.__styleString+"; stroke-width: "+G.linewidth+"; stroke-opacity: "+G.opacity+"; stroke-linecap: "+G.linecap+"; stroke-linejoin: "+G.linejoin);t.appendChild(l)}}}}else if(z instanceof
THREE.RenderableFace3){x=z.v1;B=z.v2;T=z.v3;x.positionScreen.x*=A;x.positionScreen.y*=-d;B.positionScreen.x*=A;B.positionScreen.y*=-d;T.positionScreen.x*=A;T.positionScreen.y*=-d;s.addPoint(x.positionScreen.x,x.positionScreen.y);s.addPoint(B.positionScreen.x,B.positionScreen.y);s.addPoint(T.positionScreen.x,T.positionScreen.y);if(U.instersects(s)){u=0;for(F=z.meshMaterials.length;u<F;){G=z.meshMaterials[u++];if(G instanceof THREE.MeshFaceMaterial){V=0;for(S=z.faceMaterials.length;V<S;)(G=z.faceMaterials[V++])&&
c(x,B,T,z,G,H)}else G&&c(x,B,T,z,G,H)}}}else if(z instanceof THREE.RenderableFace4){x=z.v1;B=z.v2;T=z.v3;X=z.v4;x.positionScreen.x*=A;x.positionScreen.y*=-d;B.positionScreen.x*=A;B.positionScreen.y*=-d;T.positionScreen.x*=A;T.positionScreen.y*=-d;X.positionScreen.x*=A;X.positionScreen.y*=-d;s.addPoint(x.positionScreen.x,x.positionScreen.y);s.addPoint(B.positionScreen.x,B.positionScreen.y);s.addPoint(T.positionScreen.x,T.positionScreen.y);s.addPoint(X.positionScreen.x,X.positionScreen.y);if(U.instersects(s)){u=
0;for(F=z.meshMaterials.length;u<F;){G=z.meshMaterials[u++];if(G instanceof THREE.MeshFaceMaterial){V=0;for(S=z.faceMaterials.length;V<S;)(G=z.faceMaterials[V++])&&f(x,B,T,X,z,G,H)}else G&&f(x,B,T,X,z,G,H)}}}}}};
THREE.WebGLRenderer=function(a){function c(h,k){h.fragment_shader=k.fragment_shader;h.vertex_shader=k.vertex_shader;h.uniforms=Uniforms.clone(k.uniforms)}function f(h,k){h.uniforms.color.value.setRGB(h.color.r*h.opacity,h.color.g*h.opacity,h.color.b*h.opacity);h.uniforms.opacity.value=h.opacity;h.uniforms.map.texture=h.map;h.uniforms.env_map.texture=h.env_map;h.uniforms.reflectivity.value=h.reflectivity;h.uniforms.refraction_ratio.value=h.refraction_ratio;h.uniforms.combine.value=h.combine;h.uniforms.useRefract.value=
h.env_map&&h.env_map.mapping instanceof THREE.CubeRefractionMapping;if(k){h.uniforms.fogColor.value.setHex(k.color.hex);if(k instanceof THREE.Fog){h.uniforms.fogNear.value=k.near;h.uniforms.fogFar.value=k.far}else if(k instanceof THREE.FogExp2)h.uniforms.fogDensity.value=k.density}}function e(h,k,o){var i=d.createProgram(),l=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+o.maxDirLights,"#define MAX_POINT_LIGHTS "+o.maxPointLights,o.fog?"#define USE_FOG":"",o.fog instanceof
THREE.FogExp2?"#define FOG_EXP2":"",o.map?"#define USE_MAP":"",o.env_map?"#define USE_ENVMAP":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");o=[d.getParameter(d.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+o.maxDirLights,"#define MAX_POINT_LIGHTS "+o.maxPointLights,o.map?"#define USE_MAP":"",o.env_map?"#define USE_ENVMAP":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n"].join("\n");
d.attachShader(i,p("fragment",l+h));d.attachShader(i,p("vertex",o+k));d.linkProgram(i);d.getProgramParameter(i,d.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+d.getProgramParameter(i,d.VALIDATE_STATUS)+", gl error ["+d.getError()+"]");i.uniforms={};i.attributes={};return i}function j(h,k){if(h.image.length==6){if(!h.image.__webGLTextureCube&&!h.image.__cubeMapInitialized&&h.image.loadCount==6){h.image.__webGLTextureCube=d.createTexture();d.bindTexture(d.TEXTURE_CUBE_MAP,h.image.__webGLTextureCube);
d.texParameteri(d.TEXTURE_CUBE_MAP,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE);d.texParameteri(d.TEXTURE_CUBE_MAP,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE);d.texParameteri(d.TEXTURE_CUBE_MAP,d.TEXTURE_MAG_FILTER,d.LINEAR);d.texParameteri(d.TEXTURE_CUBE_MAP,d.TEXTURE_MIN_FILTER,d.LINEAR_MIPMAP_LINEAR);for(var o=0;o<6;++o)d.texImage2D(d.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,h.image[o]);d.generateMipmap(d.TEXTURE_CUBE_MAP);d.bindTexture(d.TEXTURE_CUBE_MAP,null);h.image.__cubeMapInitialized=true}d.activeTexture(d.TEXTURE0+
k);d.bindTexture(d.TEXTURE_CUBE_MAP,h.image.__webGLTextureCube)}}function n(h,k){if(!h.__webGLTexture&&h.image.loaded){h.__webGLTexture=d.createTexture();d.bindTexture(d.TEXTURE_2D,h.__webGLTexture);d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,h.image);d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,q(h.wrap_s));d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,q(h.wrap_t));d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,q(h.mag_filter));d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,
q(h.min_filter));d.generateMipmap(d.TEXTURE_2D);d.bindTexture(d.TEXTURE_2D,null)}d.activeTexture(d.TEXTURE0+k);d.bindTexture(d.TEXTURE_2D,h.__webGLTexture)}function r(h,k){var o,i,l;o=0;for(i=k.length;o<i;o++){l=k[o];h.uniforms[l]=d.getUniformLocation(h,l)}}function t(h,k){var o,i,l;o=0;for(i=k.length;o<i;o++){l=k[o];h.attributes[l]=d.getAttribLocation(h,l)}}function p(h,k){var o;if(h=="fragment")o=d.createShader(d.FRAGMENT_SHADER);else if(h=="vertex")o=d.createShader(d.VERTEX_SHADER);d.shaderSource(o,
k);d.compileShader(o);if(!d.getShaderParameter(o,d.COMPILE_STATUS)){alert(d.getShaderInfoLog(o));return null}return o}function q(h){switch(h){case THREE.RepeatWrapping:return d.REPEAT;case THREE.ClampToEdgeWrapping:return d.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return d.MIRRORED_REPEAT;case THREE.NearestFilter:return d.NEAREST;case THREE.NearestMipMapNearestFilter:return d.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return d.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return d.LINEAR;
case THREE.LinearMipMapNearestFilter:return d.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return d.LINEAR_MIPMAP_LINEAR}return 0}var A=document.createElement("canvas"),d,x,B,T=new THREE.Matrix4,X,U=new Float32Array(16),s=new Float32Array(16),R=new Float32Array(16),E=new Float32Array(9),L=new Float32Array(16),N=function(h,k){if(h){var o,i,l,m,y;o=m=y=0;for(i=h.lights.length;o<i;o++){l=h.lights[o];l instanceof THREE.DirectionalLight&&m++;l instanceof THREE.PointLight&&y++}if(y+m<=k){o=
m;y=y}else{o=Math.ceil(k*m/(y+m));y=k-o}return{directional:o,point:y}}return{directional:1,point:k-1}}(a.scene,4),Z=a.scene?a.scene.fog:null,P=a.antialias!=undefined?a.antialias:true,K=a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0);a=a.clearAlpha?a.clearAlpha:0;this.domElement=A;this.autoClear=true;(function(h,k,o){try{d=A.getContext("experimental-webgl",{antialias:h})}catch(i){}if(!d){alert("WebGL not supported");throw"cannot create webgl context";}d.clearColor(0,0,0,1);d.clearDepth(1);
d.enable(d.DEPTH_TEST);d.depthFunc(d.LEQUAL);d.frontFace(d.CCW);d.cullFace(d.BACK);d.enable(d.CULL_FACE);d.enable(d.BLEND);d.blendFunc(d.ONE,d.ONE_MINUS_SRC_ALPHA);d.clearColor(k.r,k.g,k.b,o)})(P,K,a);x=B=function(h,k,o){var i=["#define PHONG\nuniform bool useRefract;",THREE.Snippets.lights_pars_vertex,"varying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vReflect;\nuniform float mRefractionRatio;\nvoid main(void) {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec3 transformedNormal = normalize( normalMatrix * normal );",
THREE.Snippets.lights_vertex,"vNormal = transformedNormal;\nvUv = uv;\nif ( useRefract ) {\nvReflect = refract( normalize(mPosition.xyz - cameraPosition), normalize(nWorld.xyz), mRefractionRatio );\n} else {\nvReflect = reflect( normalize(mPosition.xyz - cameraPosition), normalize(nWorld.xyz) );\n}\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),l=["uniform int material;\nuniform bool enableMap;\nuniform bool enableCubeMap;\nuniform bool mixEnvMap;\nuniform samplerCube tCube;\nuniform float mReflectivity;\nuniform sampler2D tMap;\nuniform vec4 mColor;\nuniform float mOpacity;\nuniform vec4 mAmbient;\nuniform vec4 mSpecular;\nuniform float mShininess;",
THREE.Snippets.fog_pars_fragment,"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vLightWeighting;\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vReflect;\nvoid main() {\nvec4 mapColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nvec4 cubeColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nif ( enableMap ) {\nmapColor = texture2D( tMap, vUv );\n}\nif ( enableCubeMap ) {\ncubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n}\nif ( material == 2 ) { \nvec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, mShininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, mShininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = mAmbient;\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif\nif ( mixEnvMap ) {\ngl_FragColor = vec4( mix( mapColor.rgb * totalLight.xyz * vLightWeighting, cubeColor.rgb, mReflectivity ), mapColor.a );\n} else {\ngl_FragColor = vec4( mapColor.rgb * cubeColor.rgb * totalLight.xyz * vLightWeighting, mapColor.a );\n}\n}",
THREE.Snippets.fog_fragment,"}"].join("\n");i=e(l,i,{fog:o,maxDirLights:h,maxPointLights:k});d.useProgram(i);r(i,["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","enableLighting","ambientLightColor","material","mColor","mAmbient","mSpecular","mShininess","mOpacity","enableMap","tMap","enableCubeMap","tCube","mixEnvMap","mReflectivity","mRefractionRatio","useRefract"]);o&&r(i,["fogColor","fogNear","fogFar","fogDensity"]);h&&r(i,["directionalLightColor",
"directionalLightDirection"]);k&&r(i,["pointLightColor","pointLightPosition"]);d.uniform1i(i.uniforms.enableMap,0);d.uniform1i(i.uniforms.tMap,0);d.uniform1i(i.uniforms.enableCubeMap,0);d.uniform1i(i.uniforms.tCube,1);d.uniform1i(i.uniforms.mixEnvMap,0);d.uniform1i(i.uniforms.useRefract,0);t(i,["position","normal","uv"]);return i}(N.directional,N.point,Z);this.setSize=function(h,k){A.width=h;A.height=k;d.viewport(0,0,A.width,A.height)};this.setClearColor=function(h,k){var o=new THREE.Color(h);d.clearColor(o.r,
o.g,o.b,k)};this.clear=function(){d.clear(d.COLOR_BUFFER_BIT|d.DEPTH_BUFFER_BIT)};this.setupLights=function(h,k){var o,i,l,m=g=b=0,y=[],v=[],I=[],H=[];o=0;for(i=k.length;o<i;o++){l=k[o];if(l instanceof THREE.AmbientLight){m+=l.color.r;g+=l.color.g;b+=l.color.b}else if(l instanceof THREE.DirectionalLight){y.push(l.color.r*l.intensity,l.color.g*l.intensity,l.color.b*l.intensity);v.push(l.position.x,l.position.y,l.position.z)}else if(l instanceof THREE.PointLight){I.push(l.color.r*l.intensity,l.color.g*
l.intensity,l.color.b*l.intensity);H.push(l.position.x,l.position.y,l.position.z)}}return{ambient:[m,g,b],directional:{colors:y,positions:v},point:{colors:I,positions:H}}};this.createBuffers=function(h,k){var o,i,l,m,y,v,I,H,C,J,W=[],u=[],F=[],V=[],S=[],z=[],G=0,O=h.geometry.geometryChunks[k],ea;y=false;o=0;for(i=h.materials.length;o<i;o++){v=h.materials[o];if(v instanceof THREE.MeshFaceMaterial){v=0;for(ea=O.materials.length;v<ea;v++)if(O.materials[v]&&O.materials[v].shading!=undefined&&O.materials[v].shading==
THREE.SmoothShading){y=true;break}}else if(v&&v.shading!=undefined&&v.shading==THREE.SmoothShading){y=true;break}if(y)break}ea=y;o=0;for(i=O.faces.length;o<i;o++){l=O.faces[o];m=h.geometry.faces[l];y=m.vertexNormals;v=m.normal;l=h.geometry.uvs[l];if(m instanceof THREE.Face3){I=h.geometry.vertices[m.a].position;H=h.geometry.vertices[m.b].position;C=h.geometry.vertices[m.c].position;F.push(I.x,I.y,I.z);F.push(H.x,H.y,H.z);F.push(C.x,C.y,C.z);if(h.geometry.hasTangents){I=h.geometry.vertices[m.a].tangent;
H=h.geometry.vertices[m.b].tangent;C=h.geometry.vertices[m.c].tangent;S.push(I.x,I.y,I.z,I.w);S.push(H.x,H.y,H.z,H.w);S.push(C.x,C.y,C.z,C.w)}if(y.length==3&&ea)for(m=0;m<3;m++)V.push(y[m].x,y[m].y,y[m].z);else for(m=0;m<3;m++)V.push(v.x,v.y,v.z);if(l)for(m=0;m<3;m++)z.push(l[m].u,l[m].v);W.push(G,G+1,G+2);u.push(G,G+1);u.push(G,G+2);u.push(G+1,G+2);G+=3}else if(m instanceof THREE.Face4){I=h.geometry.vertices[m.a].position;H=h.geometry.vertices[m.b].position;C=h.geometry.vertices[m.c].position;J=
h.geometry.vertices[m.d].position;F.push(I.x,I.y,I.z);F.push(H.x,H.y,H.z);F.push(C.x,C.y,C.z);F.push(J.x,J.y,J.z);if(h.geometry.hasTangents){I=h.geometry.vertices[m.a].tangent;H=h.geometry.vertices[m.b].tangent;C=h.geometry.vertices[m.c].tangent;m=h.geometry.vertices[m.d].tangent;S.push(I.x,I.y,I.z,I.w);S.push(H.x,H.y,H.z,H.w);S.push(C.x,C.y,C.z,C.w);S.push(m.x,m.y,m.z,m.w)}if(y.length==4&&ea)for(m=0;m<4;m++)V.push(y[m].x,y[m].y,y[m].z);else for(m=0;m<4;m++)V.push(v.x,v.y,v.z);if(l)for(m=0;m<4;m++)z.push(l[m].u,
l[m].v);W.push(G,G+1,G+2);W.push(G,G+2,G+3);u.push(G,G+1);u.push(G,G+2);u.push(G,G+3);u.push(G+1,G+2);u.push(G+2,G+3);G+=4}}if(F.length){O.__webGLVertexBuffer=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,O.__webGLVertexBuffer);d.bufferData(d.ARRAY_BUFFER,new Float32Array(F),d.STATIC_DRAW);O.__webGLNormalBuffer=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,O.__webGLNormalBuffer);d.bufferData(d.ARRAY_BUFFER,new Float32Array(V),d.STATIC_DRAW);if(h.geometry.hasTangents){O.__webGLTangentBuffer=d.createBuffer();
d.bindBuffer(d.ARRAY_BUFFER,O.__webGLTangentBuffer);d.bufferData(d.ARRAY_BUFFER,new Float32Array(S),d.STATIC_DRAW)}if(z.length>0){O.__webGLUVBuffer=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,O.__webGLUVBuffer);d.bufferData(d.ARRAY_BUFFER,new Float32Array(z),d.STATIC_DRAW)}O.__webGLFaceBuffer=d.createBuffer();d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,O.__webGLFaceBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,new Uint16Array(W),d.STATIC_DRAW);O.__webGLLineBuffer=d.createBuffer();d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,
O.__webGLLineBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,new Uint16Array(u),d.STATIC_DRAW);O.__webGLFaceCount=W.length;O.__webGLLineCount=u.length}};this.renderBuffer=function(h,k,o,i,l){var m,y,v,I,H,C,J,W,u;if(i instanceof THREE.MeshShaderMaterial||i instanceof THREE.MeshDepthMaterial||i instanceof THREE.MeshNormalMaterial||i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial){if(!i.program){if(i instanceof THREE.MeshDepthMaterial){c(i,THREE.ShaderLib.depth);i.uniforms.mNear.value=
h.near;i.uniforms.mFar.value=h.far}else if(i instanceof THREE.MeshNormalMaterial)c(i,THREE.ShaderLib.normal);else if(i instanceof THREE.MeshBasicMaterial){c(i,THREE.ShaderLib.basic);f(i,o)}else if(i instanceof THREE.MeshLambertMaterial){c(i,THREE.ShaderLib.lambert);f(i,o)}J={fog:o,map:i.map,env_map:i.env_map,maxDirLights:N.directional,maxPointLights:N.point};i.program=e(i.fragment_shader,i.vertex_shader,J);J=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];
for(u in i.uniforms)J.push(u);r(i.program,J);t(i.program,["position","normal","uv","tangent"])}u=i.program}else u=B;if(u!=x){d.useProgram(u);x=u}if(u==B||i instanceof THREE.MeshLambertMaterial){k=this.setupLights(u,k);if(u==B){d.uniform1i(u.uniforms.enableLighting,k.directional.positions.length+k.point.positions.length||k.ambient[0]||k.ambient[1]||k.ambient[2]);d.uniform3fv(u.uniforms.ambientLightColor,k.ambient);if(k.directional.positions.length){d.uniform3fv(u.uniforms.directionalLightDirection,
k.directional.positions);d.uniform3fv(u.uniforms.directionalLightColor,k.directional.colors)}if(k.point.positions.length){d.uniform3fv(u.uniforms.pointLightPosition,k.point.positions);d.uniform3fv(u.uniforms.pointLightColor,k.point.colors)}}else{i.uniforms.enableLighting.value=k.directional.positions.length+k.point.positions.length;i.uniforms.ambientLightColor.value=k.ambient;i.uniforms.directionalLightColor.value=k.directional.colors;i.uniforms.directionalLightDirection.value=k.directional.positions;
i.uniforms.pointLightColor.value=k.point.colors;i.uniforms.pointLightPosition.value=k.point.positions}}this.loadCamera(u,h);this.loadMatrices(u);if(i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial)f(i,o);if(i instanceof THREE.MeshShaderMaterial||i instanceof THREE.MeshDepthMaterial||i instanceof THREE.MeshNormalMaterial||i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial){v=i.wireframe;I=i.wireframe_linewidth;h=u;k=i.uniforms;var F;for(m in k){W=
k[m].type;J=k[m].value;F=h.uniforms[m];if(W=="i")d.uniform1i(F,J);else if(W=="f")d.uniform1f(F,J);else if(W=="fv")d.uniform3fv(F,J);else if(W=="v3")d.uniform3f(F,J.x,J.y,J.z);else if(W=="c")d.uniform3f(F,J.r,J.g,J.b);else if(W=="t"){d.uniform1i(F,J);if(W=k[m].texture)W.image instanceof Array&&W.image.length==6?j(W,J):n(W,J)}}}if(i instanceof THREE.MeshPhongMaterial){m=i.color;y=i.opacity;v=i.wireframe;I=i.wireframe_linewidth;H=i.map;C=i.env_map;k=i.combine==THREE.MixOperation;h=i.reflectivity;W=i.env_map&&
i.env_map.mapping instanceof THREE.CubeRefractionMapping;J=i.refraction_ratio;d.uniform4f(u.uniforms.mColor,m.r*y,m.g*y,m.b*y,y);d.uniform1i(u.uniforms.mixEnvMap,k);d.uniform1f(u.uniforms.mReflectivity,h);d.uniform1i(u.uniforms.useRefract,W);d.uniform1f(u.uniforms.mRefractionRatio,J);if(o){d.uniform3f(u.uniforms.fogColor,o.color.r,o.color.g,o.color.b);if(o instanceof THREE.Fog){d.uniform1f(u.uniforms.fogNear,o.near);d.uniform1f(u.uniforms.fogFar,o.far)}else o instanceof THREE.FogExp2&&d.uniform1f(u.uniforms.fogDensity,
o.density)}}if(i instanceof THREE.MeshPhongMaterial){o=i.ambient;m=i.specular;i=i.shininess;d.uniform4f(u.uniforms.mAmbient,o.r,o.g,o.b,y);d.uniform4f(u.uniforms.mSpecular,m.r,m.g,m.b,y);d.uniform1f(u.uniforms.mShininess,i);d.uniform1i(u.uniforms.material,2)}if(H){n(H,0);d.uniform1i(u.uniforms.tMap,0);d.uniform1i(u.uniforms.enableMap,1)}else d.uniform1i(u.uniforms.enableMap,0);if(C){j(C,1);d.uniform1i(u.uniforms.tCube,1);d.uniform1i(u.uniforms.enableCubeMap,1)}else d.uniform1i(u.uniforms.enableCubeMap,
0);y=u.attributes;d.bindBuffer(d.ARRAY_BUFFER,l.__webGLVertexBuffer);d.vertexAttribPointer(y.position,3,d.FLOAT,false,0,0);d.enableVertexAttribArray(y.position);if(y.normal>=0){d.bindBuffer(d.ARRAY_BUFFER,l.__webGLNormalBuffer);d.vertexAttribPointer(y.normal,3,d.FLOAT,false,0,0);d.enableVertexAttribArray(y.normal)}if(y.tangent>=0){d.bindBuffer(d.ARRAY_BUFFER,l.__webGLTangentBuffer);d.vertexAttribPointer(y.tangent,4,d.FLOAT,false,0,0);d.enableVertexAttribArray(y.tangent)}if(y.uv>=0)if(l.__webGLUVBuffer){d.bindBuffer(d.ARRAY_BUFFER,
l.__webGLUVBuffer);d.vertexAttribPointer(y.uv,2,d.FLOAT,false,0,0);d.enableVertexAttribArray(y.uv)}else d.disableVertexAttribArray(y.uv);if(v){d.lineWidth(I);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,l.__webGLLineBuffer);d.drawElements(d.LINES,l.__webGLLineCount,d.UNSIGNED_SHORT,0)}else{d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,l.__webGLFaceBuffer);d.drawElements(d.TRIANGLES,l.__webGLFaceCount,d.UNSIGNED_SHORT,0)}};this.renderPass=function(h,k,o,i,l,m,y){var v,I,H,C,J;H=0;for(C=i.materials.length;H<C;H++){v=
i.materials[H];if(v instanceof THREE.MeshFaceMaterial){v=0;for(I=l.materials.length;v<I;v++)if((J=l.materials[v])&&J.blending==m&&J.opacity<1==y){this.setBlending(J.blending);this.renderBuffer(h,k,o,J,l)}}else if((J=v)&&J.blending==m&&J.opacity<1==y){this.setBlending(J.blending);this.renderBuffer(h,k,o,J,l)}}};this.render=function(h,k){var o,i,l,m,y=h.lights,v=h.fog;this.initWebGLObjects(h);this.autoClear&&this.clear();k.autoUpdateMatrix&&k.updateMatrix();U.set(k.matrix.flatten());R.set(k.projectionMatrix.flatten());
o=0;for(i=h.__webGLObjects.length;o<i;o++){l=h.__webGLObjects[o];m=l.object;l=l.buffer;if(m.visible){this.setupMatrices(m,k);this.renderPass(k,y,v,m,l,THREE.NormalBlending,false)}}o=0;for(i=h.__webGLObjects.length;o<i;o++){l=h.__webGLObjects[o];m=l.object;l=l.buffer;if(m.visible){this.setupMatrices(m,k);this.renderPass(k,y,v,m,l,THREE.AdditiveBlending,false);this.renderPass(k,y,v,m,l,THREE.SubtractiveBlending,false);this.renderPass(k,y,v,m,l,THREE.AdditiveBlending,true);this.renderPass(k,y,v,m,l,
THREE.SubtractiveBlending,true);this.renderPass(k,y,v,m,l,THREE.NormalBlending,true)}}};this.initWebGLObjects=function(h){var k,o,i,l,m,y;if(!h.__webGLObjects){h.__webGLObjects=[];h.__webGLObjectsMap={}}k=0;for(o=h.objects.length;k<o;k++){i=h.objects[k];if(h.__webGLObjectsMap[i.id]==undefined)h.__webGLObjectsMap[i.id]={};y=h.__webGLObjectsMap[i.id];if(i instanceof THREE.Mesh)for(m in i.geometry.geometryChunks){l=i.geometry.geometryChunks[m];l.__webGLVertexBuffer||this.createBuffers(i,m);if(y[m]==
undefined){l={buffer:l,object:i};h.__webGLObjects.push(l);y[m]=1}}}};this.removeObject=function(h,k){var o,i;for(o=h.__webGLObjects.length-1;o>=0;o--){i=h.__webGLObjects[o].object;k==i&&h.__webGLObjects.splice(o,1)}};this.setupMatrices=function(h,k){h.autoUpdateMatrix&&h.updateMatrix();T.multiply(k.matrix,h.matrix);s.set(T.flatten());X=THREE.Matrix4.makeInvert3x3(T).transpose();E.set(X.m);L.set(h.matrix.flatten())};this.loadMatrices=function(h){d.uniformMatrix4fv(h.uniforms.viewMatrix,false,U);d.uniformMatrix4fv(h.uniforms.modelViewMatrix,
false,s);d.uniformMatrix4fv(h.uniforms.projectionMatrix,false,R);d.uniformMatrix3fv(h.uniforms.normalMatrix,false,E);d.uniformMatrix4fv(h.uniforms.objectMatrix,false,L)};this.loadCamera=function(h,k){d.uniform3f(h.uniforms.cameraPosition,k.position.x,k.position.y,k.position.z)};this.setBlending=function(h){switch(h){case THREE.AdditiveBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.ONE,d.ONE);break;case THREE.SubtractiveBlending:d.blendFunc(d.DST_COLOR,d.ZERO);break;default:d.blendEquation(d.FUNC_ADD);
d.blendFunc(d.ONE,d.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=function(h,k){if(h){!k||k=="ccw"?d.frontFace(d.CCW):d.frontFace(d.CW);if(h=="back")d.cullFace(d.BACK);else h=="front"?d.cullFace(d.FRONT):d.cullFace(d.FRONT_AND_BACK);d.enable(d.CULL_FACE)}else d.disable(d.CULL_FACE)};this.supportsVertexTextures=function(){return d.getParameter(d.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, 1.0 ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\ncubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = mix( gl_FragColor, cubeColor, reflectivity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif",
envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",
map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0, 1.0, 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}"};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",
vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},
fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},fragment_shader:["uniform vec3 color;\nuniform float opacity;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nvec4 cubeColor = vec4( 1.0, 1.0, 1.0, 1.0 );",THREE.Snippets.map_fragment,"gl_FragColor = mColor * mapColor;",
THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},lambert:{uniforms:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},env_map:{type:"t",value:1,
texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)},enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",
value:[]}},fragment_shader:["uniform vec3 color;\nuniform float opacity;\nvarying vec3 vLightWeighting;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nvec4 cubeColor = vec4( 1.0, 1.0, 1.0, 1.0 );",THREE.Snippets.map_fragment,"gl_FragColor =  mColor * mapColor * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,
"}"].join("\n"),vertex_shader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")}};
THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
