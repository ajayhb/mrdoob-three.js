// ThreeDebug.js r31 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,b,f){this.r=a;this.g=b;this.b=f;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+
","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,b,f){this.x=a||0;this.y=b||0;this.z=f||0};
THREE.Vector3.prototype={set:function(a,b,f){this.x=a;this.y=b;this.z=f;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,f=this.y,d=this.z;this.x=f*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-f*a.x;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=
a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var b=this.x-a.x,f=this.y-a.y;a=this.z-a.z;return Math.sqrt(b*b+f*f+a*a)},distanceToSquared:function(a){var b=this.x-a.x,f=this.y-a.y;a=this.z-a.z;return b*b+f*f+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=
Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,b,f,d){this.x=a||0;this.y=b||0;this.z=f||0;this.w=d||1};
THREE.Vector4.prototype={set:function(a,b,f,d){this.x=a;this.y=b;this.z=f;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,b){this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var b,f,d=a.objects,i=[];a=0;for(b=d.length;a<b;a++){f=d[a];if(f instanceof THREE.Mesh)i=i.concat(this.intersectObject(f))}i.sort(function(k,p){return k.distance-p.distance});return i},intersectObject:function(a){function b(Q,t,U,B){B=B.clone().subSelf(t);U=U.clone().subSelf(t);var L=Q.clone().subSelf(t);Q=B.dot(B);t=B.dot(U);B=B.dot(L);var N=U.dot(U);U=U.dot(L);L=1/(Q*N-t*t);N=(N*B-t*U)*L;Q=(Q*U-t*B)*L;return N>0&&Q>0&&N+Q<1}var f,d,i,k,p,l,o,z,c,C,
w,u=a.geometry,I=u.vertices,S=[];f=0;for(d=u.faces.length;f<d;f++){i=u.faces[f];C=this.origin.clone();w=this.direction.clone();k=a.matrix.multiplyVector3(I[i.a].position.clone());p=a.matrix.multiplyVector3(I[i.b].position.clone());l=a.matrix.multiplyVector3(I[i.c].position.clone());o=i instanceof THREE.Face4?a.matrix.multiplyVector3(I[i.d].position.clone()):null;z=a.rotationMatrix.multiplyVector3(i.normal.clone());c=w.dot(z);if(c<0){z=z.dot((new THREE.Vector3).sub(k,C))/c;C=C.addSelf(w.multiplyScalar(z));
if(i instanceof THREE.Face3){if(b(C,k,p,l)){i={distance:this.origin.distanceTo(C),point:C,face:i,object:a};S.push(i)}}else if(i instanceof THREE.Face4)if(b(C,k,p,o)||b(C,p,l,o)){i={distance:this.origin.distanceTo(C),point:C,face:i,object:a};S.push(i)}}}return S}};
THREE.Rectangle=function(){function a(){k=d-b;p=i-f}var b,f,d,i,k,p,l=true;this.getX=function(){return b};this.getY=function(){return f};this.getWidth=function(){return k};this.getHeight=function(){return p};this.getLeft=function(){return b};this.getTop=function(){return f};this.getRight=function(){return d};this.getBottom=function(){return i};this.set=function(o,z,c,C){l=false;b=o;f=z;d=c;i=C;a()};this.addPoint=function(o,z){if(l){l=false;b=o;f=z;d=o;i=z}else{b=b<o?b:o;f=f<z?f:z;d=d>o?d:o;i=i>z?
i:z}a()};this.add3Points=function(o,z,c,C,w,u){if(l){l=false;b=o<c?o<w?o:w:c<w?c:w;f=z<C?z<u?z:u:C<u?C:u;d=o>c?o>w?o:w:c>w?c:w;i=z>C?z>u?z:u:C>u?C:u}else{b=o<c?o<w?o<b?o:b:w<b?w:b:c<w?c<b?c:b:w<b?w:b;f=z<C?z<u?z<f?z:f:u<f?u:f:C<u?C<f?C:f:u<f?u:f;d=o>c?o>w?o>d?o:d:w>d?w:d:c>w?c>d?c:d:w>d?w:d;i=z>C?z>u?z>i?z:i:u>i?u:i:C>u?C>i?C:i:u>i?u:i}a()};this.addRectangle=function(o){if(l){l=false;b=o.getLeft();f=o.getTop();d=o.getRight();i=o.getBottom()}else{b=b<o.getLeft()?b:o.getLeft();f=f<o.getTop()?f:o.getTop();
d=d>o.getRight()?d:o.getRight();i=i>o.getBottom()?i:o.getBottom()}a()};this.inflate=function(o){b-=o;f-=o;d+=o;i+=o;a()};this.minSelf=function(o){b=b>o.getLeft()?b:o.getLeft();f=f>o.getTop()?f:o.getTop();d=d<o.getRight()?d:o.getRight();i=i<o.getBottom()?i:o.getBottom();a()};this.instersects=function(o){return Math.min(d,o.getRight())-Math.max(b,o.getLeft())>=0&&Math.min(i,o.getBottom())-Math.max(f,o.getTop())>=0};this.empty=function(){l=true;i=d=f=b=0;a()};this.isEmpty=function(){return l};this.toString=
function(){return"THREE.Rectangle ( left: "+b+", right: "+d+", top: "+f+", bottom: "+i+", width: "+k+", height: "+p+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a;a=this.m[1];this.m[1]=this.m[3];this.m[3]=a;a=this.m[2];this.m[2]=this.m[6];this.m[6]=a;a=this.m[5];this.m[5]=this.m[7];this.m[7]=a;return this}};
THREE.Matrix4=function(a,b,f,d,i,k,p,l,o,z,c,C,w,u,I,S){this.n11=a||1;this.n12=b||0;this.n13=f||0;this.n14=d||0;this.n21=i||0;this.n22=k||1;this.n23=p||0;this.n24=l||0;this.n31=o||0;this.n32=z||0;this.n33=c||1;this.n34=C||0;this.n41=w||0;this.n42=u||0;this.n43=I||0;this.n44=S||1};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,b,f,d,i,k,p,l,o,z,c,C,w,u,I,S){this.n11=a;this.n12=b;this.n13=f;this.n14=d;this.n21=i;this.n22=k;this.n23=p;this.n24=l;this.n31=o;this.n32=z;this.n33=c;this.n34=C;this.n41=w;this.n42=u;this.n43=I;this.n44=S;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,b,f){var d=new THREE.Vector3,i=new THREE.Vector3,k=new THREE.Vector3;k.sub(a,b).normalize();d.cross(f,k).normalize();i.cross(k,d).normalize();this.n11=d.x;this.n12=d.y;this.n13=d.z;this.n14=-d.dot(a);this.n21=i.x;this.n22=i.y;this.n23=i.z;this.n24=-i.dot(a);this.n31=k.x;
this.n32=k.y;this.n33=k.z;this.n34=-k.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var b=a.x,f=a.y,d=a.z,i=1/(this.n41*b+this.n42*f+this.n43*d+this.n44);a.x=(this.n11*b+this.n12*f+this.n13*d+this.n14)*i;a.y=(this.n21*b+this.n22*f+this.n23*d+this.n24)*i;a.z=(this.n31*b+this.n32*f+this.n33*d+this.n34)*i;return a},multiplyVector4:function(a){var b=a.x,f=a.y,d=a.z,i=a.w;a.x=this.n11*b+this.n12*f+this.n13*d+this.n14*i;a.y=this.n21*b+this.n22*f+this.n23*d+this.n24*
i;a.z=this.n31*b+this.n32*f+this.n33*d+this.n34*i;a.w=this.n41*b+this.n42*f+this.n43*d+this.n44*i;return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},multiply:function(a,b){var f=a.n11,d=a.n12,i=a.n13,k=a.n14,p=a.n21,l=a.n22,o=a.n23,z=a.n24,c=a.n31,C=a.n32,
w=a.n33,u=a.n34,I=a.n41,S=a.n42,Q=a.n43,t=a.n44,U=b.n11,B=b.n12,L=b.n13,N=b.n14,e=b.n21,j=b.n22,g=b.n23,h=b.n24,n=b.n31,m=b.n32,q=b.n33,r=b.n34,y=b.n41,J=b.n42,E=b.n43,G=b.n44;this.n11=f*U+d*e+i*n+k*y;this.n12=f*B+d*j+i*m+k*J;this.n13=f*L+d*g+i*q+k*E;this.n14=f*N+d*h+i*r+k*G;this.n21=p*U+l*e+o*n+z*y;this.n22=p*B+l*j+o*m+z*J;this.n23=p*L+l*g+o*q+z*E;this.n24=p*N+l*h+o*r+z*G;this.n31=c*U+C*e+w*n+u*y;this.n32=c*B+C*j+w*m+u*J;this.n33=c*L+C*g+w*q+u*E;this.n34=c*N+C*h+w*r+u*G;this.n41=I*U+S*e+Q*n+t*y;
this.n42=I*B+S*j+Q*m+t*J;this.n43=I*L+S*g+Q*q+t*E;this.n44=I*N+S*h+Q*r+t*G;return this},multiplySelf:function(a){var b=this.n11,f=this.n12,d=this.n13,i=this.n14,k=this.n21,p=this.n22,l=this.n23,o=this.n24,z=this.n31,c=this.n32,C=this.n33,w=this.n34,u=this.n41,I=this.n42,S=this.n43,Q=this.n44,t=a.n11,U=a.n21,B=a.n31,L=a.n41,N=a.n12,e=a.n22,j=a.n32,g=a.n42,h=a.n13,n=a.n23,m=a.n33,q=a.n43,r=a.n14,y=a.n24,J=a.n34;a=a.n44;this.n11=b*t+f*U+d*B+i*L;this.n12=b*N+f*e+d*j+i*g;this.n13=b*h+f*n+d*m+i*q;this.n14=
b*r+f*y+d*J+i*a;this.n21=k*t+p*U+l*B+o*L;this.n22=k*N+p*e+l*j+o*g;this.n23=k*h+p*n+l*m+o*q;this.n24=k*r+p*y+l*J+o*a;this.n31=z*t+c*U+C*B+w*L;this.n32=z*N+c*e+C*j+w*g;this.n33=z*h+c*n+C*m+w*q;this.n34=z*r+c*y+C*J+w*a;this.n41=u*t+I*U+S*B+Q*L;this.n42=u*N+I*e+S*j+Q*g;this.n43=u*h+I*n+S*m+Q*q;this.n44=u*r+I*y+S*J+Q*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=
a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){return this.n14*this.n23*this.n32*this.n41-this.n13*this.n24*this.n32*this.n41-this.n14*this.n22*this.n33*this.n41+this.n12*this.n24*this.n33*this.n41+this.n13*this.n22*this.n34*this.n41-this.n12*this.n23*this.n34*this.n41-this.n14*this.n23*this.n31*this.n42+this.n13*this.n24*this.n31*this.n42+this.n14*this.n21*this.n33*this.n42-this.n11*this.n24*this.n33*this.n42-this.n13*this.n21*this.n34*this.n42+this.n11*this.n23*this.n34*
this.n42+this.n14*this.n22*this.n31*this.n43-this.n12*this.n24*this.n31*this.n43-this.n14*this.n21*this.n32*this.n43+this.n11*this.n24*this.n32*this.n43+this.n12*this.n21*this.n34*this.n43-this.n11*this.n22*this.n34*this.n43-this.n13*this.n22*this.n31*this.n44+this.n12*this.n23*this.n31*this.n44+this.n13*this.n21*this.n32*this.n44-this.n11*this.n23*this.n32*this.n44-this.n12*this.n21*this.n33*this.n44+this.n11*this.n22*this.n33*this.n44},transpose:function(){function a(b,f,d){var i=b[f];b[f]=b[d];
b[d]=i}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){return[this.n11,this.n21,this.n31,this.n41,this.n12,
this.n22,this.n32,this.n42,this.n13,this.n23,this.n33,this.n43,this.n14,this.n24,this.n34,this.n44]},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,b,f){var d=new THREE.Matrix4;d.n14=a;d.n24=b;d.n34=f;return d};
THREE.Matrix4.scaleMatrix=function(a,b,f){var d=new THREE.Matrix4;d.n11=a;d.n22=b;d.n33=f;return d};THREE.Matrix4.rotationXMatrix=function(a){var b=new THREE.Matrix4;b.n22=b.n33=Math.cos(a);b.n32=Math.sin(a);b.n23=-b.n32;return b};THREE.Matrix4.rotationYMatrix=function(a){var b=new THREE.Matrix4;b.n11=b.n33=Math.cos(a);b.n13=Math.sin(a);b.n31=-b.n13;return b};THREE.Matrix4.rotationZMatrix=function(a){var b=new THREE.Matrix4;b.n11=b.n22=Math.cos(a);b.n21=Math.sin(a);b.n12=-b.n21;return b};
THREE.Matrix4.rotationAxisAngleMatrix=function(a,b){var f=new THREE.Matrix4,d=Math.cos(b),i=Math.sin(b),k=1-d,p=a.x,l=a.y,o=a.z;f.n11=k*p*p+d;f.n12=k*p*l-i*o;f.n13=k*p*o+i*l;f.n21=k*p*l+i*o;f.n22=k*l*l+d;f.n23=k*l*o-i*p;f.n31=k*p*o-i*l;f.n32=k*l*o+i*p;f.n33=k*o*o+d;return f};
THREE.Matrix4.makeInvert=function(a){var b=new THREE.Matrix4;b.n11=a.n23*a.n34*a.n42-a.n24*a.n33*a.n42+a.n24*a.n32*a.n43-a.n22*a.n34*a.n43-a.n23*a.n32*a.n44+a.n22*a.n33*a.n44;b.n12=a.n14*a.n33*a.n42-a.n13*a.n34*a.n42-a.n14*a.n32*a.n43+a.n12*a.n34*a.n43+a.n13*a.n32*a.n44-a.n12*a.n33*a.n44;b.n13=a.n13*a.n24*a.n42-a.n14*a.n23*a.n42+a.n14*a.n22*a.n43-a.n12*a.n24*a.n43-a.n13*a.n22*a.n44+a.n12*a.n23*a.n44;b.n14=a.n14*a.n23*a.n32-a.n13*a.n24*a.n32-a.n14*a.n22*a.n33+a.n12*a.n24*a.n33+a.n13*a.n22*a.n34-a.n12*
a.n23*a.n34;b.n21=a.n24*a.n33*a.n41-a.n23*a.n34*a.n41-a.n24*a.n31*a.n43+a.n21*a.n34*a.n43+a.n23*a.n31*a.n44-a.n21*a.n33*a.n44;b.n22=a.n13*a.n34*a.n41-a.n14*a.n33*a.n41+a.n14*a.n31*a.n43-a.n11*a.n34*a.n43-a.n13*a.n31*a.n44+a.n11*a.n33*a.n44;b.n23=a.n14*a.n23*a.n41-a.n13*a.n24*a.n41-a.n14*a.n21*a.n43+a.n11*a.n24*a.n43+a.n13*a.n21*a.n44-a.n11*a.n23*a.n44;b.n24=a.n13*a.n24*a.n31-a.n14*a.n23*a.n31+a.n14*a.n21*a.n33-a.n11*a.n24*a.n33-a.n13*a.n21*a.n34+a.n11*a.n23*a.n34;b.n31=a.n22*a.n34*a.n41-a.n24*a.n32*
a.n41+a.n24*a.n31*a.n42-a.n21*a.n34*a.n42-a.n22*a.n31*a.n44+a.n21*a.n32*a.n44;b.n32=a.n14*a.n32*a.n41-a.n12*a.n34*a.n41-a.n14*a.n31*a.n42+a.n11*a.n34*a.n42+a.n12*a.n31*a.n44-a.n11*a.n32*a.n44;b.n33=a.n13*a.n24*a.n41-a.n14*a.n22*a.n41+a.n14*a.n21*a.n42-a.n11*a.n24*a.n42-a.n12*a.n21*a.n44+a.n11*a.n22*a.n44;b.n34=a.n14*a.n22*a.n31-a.n12*a.n24*a.n31-a.n14*a.n21*a.n32+a.n11*a.n24*a.n32+a.n12*a.n21*a.n34-a.n11*a.n22*a.n34;b.n41=a.n23*a.n32*a.n41-a.n22*a.n33*a.n41-a.n23*a.n31*a.n42+a.n21*a.n33*a.n42+a.n22*
a.n31*a.n43-a.n21*a.n32*a.n43;b.n42=a.n12*a.n33*a.n41-a.n13*a.n32*a.n41+a.n13*a.n31*a.n42-a.n11*a.n33*a.n42-a.n12*a.n31*a.n43+a.n11*a.n32*a.n43;b.n43=a.n13*a.n22*a.n41-a.n12*a.n23*a.n41-a.n13*a.n21*a.n42+a.n11*a.n23*a.n42+a.n12*a.n21*a.n43-a.n11*a.n22*a.n43;b.n44=a.n12*a.n23*a.n31-a.n13*a.n22*a.n31+a.n13*a.n21*a.n32-a.n11*a.n23*a.n32-a.n12*a.n21*a.n33+a.n11*a.n22*a.n33;b.multiplyScalar(1/a.determinant());return b};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.flatten();a=new THREE.Matrix3;var f=b[10]*b[5]-b[6]*b[9],d=-b[10]*b[1]+b[2]*b[9],i=b[6]*b[1]-b[2]*b[5],k=-b[10]*b[4]+b[6]*b[8],p=b[10]*b[0]-b[2]*b[8],l=-b[6]*b[0]+b[2]*b[4],o=b[9]*b[4]-b[5]*b[8],z=-b[9]*b[0]+b[1]*b[8],c=b[5]*b[0]-b[1]*b[4];b=b[0]*f+b[1]*k+b[2]*o;if(b==0)throw"matrix not invertible";b=1/b;a.m[0]=b*f;a.m[1]=b*d;a.m[2]=b*i;a.m[3]=b*k;a.m[4]=b*p;a.m[5]=b*l;a.m[6]=b*o;a.m[7]=b*z;a.m[8]=b*c;return a};
THREE.Matrix4.makeFrustum=function(a,b,f,d,i,k){var p,l,o;p=new THREE.Matrix4;l=2*i/(b-a);o=2*i/(d-f);a=(b+a)/(b-a);f=(d+f)/(d-f);d=-(k+i)/(k-i);i=-2*k*i/(k-i);p.n11=l;p.n12=0;p.n13=a;p.n14=0;p.n21=0;p.n22=o;p.n23=f;p.n24=0;p.n31=0;p.n32=0;p.n33=d;p.n34=i;p.n41=0;p.n42=0;p.n43=-1;p.n44=0;return p};THREE.Matrix4.makePerspective=function(a,b,f,d){var i;a=f*Math.tan(a*Math.PI/360);i=-a;return THREE.Matrix4.makeFrustum(i*b,a*b,i,a,f,d)};
THREE.Matrix4.makeOrtho=function(a,b,f,d,i,k){var p,l,o,z;p=new THREE.Matrix4;l=b-a;o=f-d;z=k-i;a=(b+a)/l;f=(f+d)/o;i=(k+i)/z;p.n11=2/l;p.n12=0;p.n13=0;p.n14=-a;p.n21=0;p.n22=2/o;p.n23=0;p.n24=-f;p.n31=0;p.n32=0;p.n33=-2/z;p.n34=-i;p.n41=0;p.n42=0;p.n43=0;p.n44=1;return p};
THREE.Vertex=function(a,b){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=b||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,b,f,d,i){this.a=a;this.b=b;this.c=f;this.centroid=new THREE.Vector3;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.materials=i instanceof Array?i:[i]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,b,f,d,i,k){this.a=a;this.b=b;this.c=f;this.d=d;this.centroid=new THREE.Vector3;this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3;this.vertexNormals=i instanceof Array?i:[];this.materials=k instanceof Array?k:[k]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,b,f;a=0;for(b=this.faces.length;a<b;a++){f=this.faces[a];f.centroid.set(0,0,0);if(f instanceof THREE.Face3){f.centroid.addSelf(this.vertices[f.a].position);f.centroid.addSelf(this.vertices[f.b].position);f.centroid.addSelf(this.vertices[f.c].position);f.centroid.divideScalar(3)}else if(f instanceof THREE.Face4){f.centroid.addSelf(this.vertices[f.a].position);f.centroid.addSelf(this.vertices[f.b].position);f.centroid.addSelf(this.vertices[f.c].position);
f.centroid.addSelf(this.vertices[f.d].position);f.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var b,f,d,i,k,p,l=new THREE.Vector3,o=new THREE.Vector3;d=0;for(i=this.vertices.length;d<i;d++){k=this.vertices[d];k.normal.set(0,0,0)}d=0;for(i=this.faces.length;d<i;d++){k=this.faces[d];if(a&&k.vertexNormals.length){l.set(0,0,0);b=0;for(f=k.normal.length;b<f;b++)l.addSelf(k.vertexNormals[b]);l.divideScalar(3)}else{b=this.vertices[k.a];f=this.vertices[k.b];p=this.vertices[k.c];l.sub(p.position,
f.position);o.sub(b.position,f.position);l.crossSelf(o)}l.isZero()||l.normalize();k.normal.copy(l)}},computeVertexNormals:function(){var a,b=[],f,d;a=0;for(vl=this.vertices.length;a<vl;a++)b[a]=new THREE.Vector3;a=0;for(f=this.faces.length;a<f;a++){d=this.faces[a];if(d instanceof THREE.Face3){b[d.a].addSelf(d.normal);b[d.b].addSelf(d.normal);b[d.c].addSelf(d.normal)}else if(d instanceof THREE.Face4){b[d.a].addSelf(d.normal);b[d.b].addSelf(d.normal);b[d.c].addSelf(d.normal);b[d.d].addSelf(d.normal)}}a=
0;for(vl=this.vertices.length;a<vl;a++)b[a].normalize();a=0;for(f=this.faces.length;a<f;a++){d=this.faces[a];if(d instanceof THREE.Face3){d.vertexNormals[0]=b[d.a].clone();d.vertexNormals[1]=b[d.b].clone();d.vertexNormals[2]=b[d.c].clone()}else if(d instanceof THREE.Face4){d.vertexNormals[0]=b[d.a].clone();d.vertexNormals[1]=b[d.b].clone();d.vertexNormals[2]=b[d.c].clone();d.vertexNormals[3]=b[d.d].clone()}}},computeTangents:function(){function a(r,y,J,E){k=r.vertices[y].position;p=r.vertices[J].position;
l=r.vertices[E].position;o=i[0];z=i[1];c=i[2];C=p.x-k.x;w=l.x-k.x;u=p.y-k.y;I=l.y-k.y;S=p.z-k.z;Q=l.z-k.z;t=z.u-o.u;U=c.u-o.u;B=z.v-o.v;L=c.v-o.v;N=1/(t*L-U*B);h.set((L*C-B*w)*N,(L*u-B*I)*N,(L*S-B*Q)*N);n.set((t*w-U*C)*N,(t*I-U*u)*N,(t*Q-U*S)*N);j[y].addSelf(h);j[J].addSelf(h);j[E].addSelf(h);g[y].addSelf(n);g[J].addSelf(n);g[E].addSelf(n)}var b,f,d,i,k,p,l,o,z,c,C,w,u,I,S,Q,t,U,B,L,N,e,j=[],g=[],h=new THREE.Vector3,n=new THREE.Vector3,m=new THREE.Vector3,q=new THREE.Vector3;e=new THREE.Vector3;b=
0;for(f=this.vertices.length;b<f;b++){j[b]=new THREE.Vector3;g[b]=new THREE.Vector3}b=0;for(f=this.faces.length;b<f;b++){d=this.faces[b];i=this.uvs[b];if(d instanceof THREE.Face3){a(this,d.a,d.b,d.c);this.vertices[d.a].normal.copy(d.vertexNormals[0]);this.vertices[d.b].normal.copy(d.vertexNormals[1]);this.vertices[d.c].normal.copy(d.vertexNormals[2])}else if(d instanceof THREE.Face4){a(this,d.a,d.b,d.c);this.vertices[d.a].normal.copy(d.vertexNormals[0]);this.vertices[d.b].normal.copy(d.vertexNormals[1]);
this.vertices[d.c].normal.copy(d.vertexNormals[2]);this.vertices[d.d].normal.copy(d.vertexNormals[3])}}b=0;for(f=this.vertices.length;b<f;b++){e.copy(this.vertices[b].normal);d=j[b];m.copy(d);m.subSelf(e.multiplyScalar(e.dot(d))).normalize();q.cross(this.vertices[b].normal,d);test=q.dot(g[b]);d=test<0?-1:1;this.vertices[b].tangent.set(m.x,m.y,m.z,d)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],
y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,f=this.vertices.length;b<f;b++){a=this.vertices[b];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<
this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,b=0,f=this.vertices.length;b<f;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(z){var c=[];b=0;for(f=z.length;b<f;b++)z[b]==undefined?c.push("undefined"):c.push(z[b].toString());return c.join("_")}
var b,f,d,i,k,p,l,o={};d=0;for(i=this.faces.length;d<i;d++){k=this.faces[d];materials=k.materials;p=a(materials);if(o[p]==undefined)o[p]={hash:p,counter:0};l=o[p].hash+"_"+o[p].counter;if(this.geometryChunks[l]==undefined)this.geometryChunks[l]={faces:[],materials:materials,vertices:0};k=k instanceof THREE.Face3?3:4;if(this.geometryChunks[l].vertices+k>65535){o[p].counter+=1;l=o[p].hash+"_"+o[p].counter;if(this.geometryChunks[l]==undefined)this.geometryChunks[l]={faces:[],materials:materials,vertices:0}}this.geometryChunks[l].faces.push(d);
this.geometryChunks[l].vertices+=k}},toString:function(){return"THREE.Geometry ( vertices: "+this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,b,f,d){this.fov=a;this.aspect=b;this.near=f;this.far=d;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.up=new THREE.Vector3(0,1,0);this.matrix=new THREE.Matrix4;this.projectionMatrix=null;this.autoUpdateMatrix=true;this.translateX=function(i){i=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(i);i.cross(i.clone(),this.up);this.position.addSelf(i);this.target.position.addSelf(i)};this.translateZ=function(i){i=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(i);
this.position.subSelf(i);this.target.position.subSelf(i)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix();this.toString=function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};
THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;
THREE.PointLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.translationMatrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.scaleMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){this.matrixPosition=THREE.Matrix4.translationMatrix(this.position.x,this.position.y,this.position.z);this.rotationMatrix=THREE.Matrix4.rotationXMatrix(this.rotation.x);this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationYMatrix(this.rotation.y));this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationZMatrix(this.rotation.z));this.scaleMatrix=THREE.Matrix4.scaleMatrix(this.scale.x,this.scale.y,this.scale.z);this.matrix.copy(this.matrixPosition);
this.matrix.multiplySelf(this.rotationMatrix);this.matrix.multiplySelf(this.scaleMatrix)}};THREE.Object3DCounter={value:0};THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.Line=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b]};THREE.Line.prototype=new THREE.Object3D;
THREE.Line.prototype.constructor=THREE.Line;THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+
"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=
this.wireframe_linecap="round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=
a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==
undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial"}};
THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.opacity=1;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};
THREE.Texture=function(a,b,f,d,i,k){this.image=a;this.mapping=b!==undefined?b:new THREE.UVMapping;this.wrap_s=f!==undefined?f:THREE.ClampToEdgeWrapping;this.wrap_t=d!==undefined?d:THREE.ClampToEdgeWrapping;this.mag_filter=i!==undefined?i:THREE.LinearFilter;this.min_filter=k!==undefined?k:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,b,f){this.color=new THREE.Color(a);this.near=b||1;this.far=f||1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b||2.5E-4};
THREE.Projector=function(){function a(j,g){return g.z-j.z}function b(j,g){var h=0,n=1,m=j.z+j.w,q=g.z+g.w,r=-j.z+j.w,y=-g.z+g.w;if(m>=0&&q>=0&&r>=0&&y>=0)return true;else if(m<0&&q<0||r<0&&y<0)return false;else{if(m<0)h=Math.max(h,m/(m-q));else if(q<0)n=Math.min(n,m/(m-q));if(r<0)h=Math.max(h,r/(r-y));else if(y<0)n=Math.min(n,r/(r-y));if(n<h)return false;else{j.lerpSelf(g,h);g.lerpSelf(j,1-n);return true}}}var f,d,i=[],k,p,l,o=[],z,c,C=[],w,u,I=[],S=new THREE.Vector4,Q=new THREE.Vector4,t=new THREE.Matrix4,
U=new THREE.Matrix4,B=[],L=new THREE.Vector4,N=new THREE.Vector4,e;this.projectObjects=function(j,g,h){var n=[],m,q;d=0;t.multiply(g.projectionMatrix,g.matrix);B[0]=new THREE.Vector4(t.n41-t.n11,t.n42-t.n12,t.n43-t.n13,t.n44-t.n14);B[1]=new THREE.Vector4(t.n41+t.n11,t.n42+t.n12,t.n43+t.n13,t.n44+t.n14);B[2]=new THREE.Vector4(t.n41+t.n21,t.n42+t.n22,t.n43+t.n23,t.n44+t.n24);B[3]=new THREE.Vector4(t.n41-t.n21,t.n42-t.n22,t.n43-t.n23,t.n44-t.n24);B[4]=new THREE.Vector4(t.n41-t.n31,t.n42-t.n32,t.n43-
t.n33,t.n44-t.n34);B[5]=new THREE.Vector4(t.n41+t.n31,t.n42+t.n32,t.n43+t.n33,t.n44+t.n34);g=0;for(m=B.length;g<m;g++){q=B[g];q.divideScalar(Math.sqrt(q.x*q.x+q.y*q.y+q.z*q.z))}m=j.objects;j=0;for(g=m.length;j<g;j++){q=m[j];var r;if(!(r=!q.visible)){if(r=q instanceof THREE.Mesh){a:{r=void 0;for(var y=q.position,J=-q.geometry.boundingSphere.radius*Math.max(q.scale.x,Math.max(q.scale.y,q.scale.z)),E=0;E<6;E++){r=B[E].x*y.x+B[E].y*y.y+B[E].z*y.z+B[E].w;if(r<=J){r=false;break a}}r=true}r=!r}r=r}if(!r){f=
i[d]=i[d]||new THREE.RenderableObject;S.copy(q.position);t.multiplyVector3(S);f.object=q;f.z=S.z;n.push(f);d++}}h&&n.sort(a);return n};this.projectScene=function(j,g,h){var n=[],m=g.near,q=g.far,r,y,J,E,G,K,v,R,T,F,x,H,V,D,O,Y;l=c=u=0;g.autoUpdateMatrix&&g.updateMatrix();t.multiply(g.projectionMatrix,g.matrix);K=this.projectObjects(j,g,true);j=0;for(r=K.length;j<r;j++){v=K[j].object;if(v.visible){v.autoUpdateMatrix&&v.updateMatrix();R=v.matrix;T=v.rotationMatrix;F=v.materials;x=v.overdraw;if(v instanceof
THREE.Mesh){H=v.geometry;V=H.vertices;y=0;for(J=V.length;y<J;y++){D=V[y];D.positionWorld.copy(D.position);R.multiplyVector3(D.positionWorld);E=D.positionScreen;E.copy(D.positionWorld);t.multiplyVector4(E);E.x/=E.w;E.y/=E.w;D.__visible=E.z>m&&E.z<q}H=H.faces;y=0;for(J=H.length;y<J;y++){D=H[y];if(D instanceof THREE.Face3){E=V[D.a];G=V[D.b];O=V[D.c];if(E.__visible&&G.__visible&&O.__visible)if(v.doubleSided||v.flipSided!=(O.positionScreen.x-E.positionScreen.x)*(G.positionScreen.y-E.positionScreen.y)-
(O.positionScreen.y-E.positionScreen.y)*(G.positionScreen.x-E.positionScreen.x)<0){k=o[l]=o[l]||new THREE.RenderableFace3;k.v1.positionWorld.copy(E.positionWorld);k.v2.positionWorld.copy(G.positionWorld);k.v3.positionWorld.copy(O.positionWorld);k.v1.positionScreen.copy(E.positionScreen);k.v2.positionScreen.copy(G.positionScreen);k.v3.positionScreen.copy(O.positionScreen);k.normalWorld.copy(D.normal);T.multiplyVector3(k.normalWorld);k.centroidWorld.copy(D.centroid);R.multiplyVector3(k.centroidWorld);
k.centroidScreen.copy(k.centroidWorld);t.multiplyVector3(k.centroidScreen);O=D.vertexNormals;e=k.vertexNormalsWorld;E=0;for(G=O.length;E<G;E++){Y=e[E]=e[E]||new THREE.Vector3;Y.copy(O[E]);T.multiplyVector3(Y)}k.z=k.centroidScreen.z;k.meshMaterials=F;k.faceMaterials=D.materials;k.overdraw=x;if(v.geometry.uvs[y]){k.uvs[0]=v.geometry.uvs[y][0];k.uvs[1]=v.geometry.uvs[y][1];k.uvs[2]=v.geometry.uvs[y][2]}n.push(k);l++}}else if(D instanceof THREE.Face4){E=V[D.a];G=V[D.b];O=V[D.c];Y=V[D.d];if(E.__visible&&
G.__visible&&O.__visible&&Y.__visible)if(v.doubleSided||v.flipSided!=((Y.positionScreen.x-E.positionScreen.x)*(G.positionScreen.y-E.positionScreen.y)-(Y.positionScreen.y-E.positionScreen.y)*(G.positionScreen.x-E.positionScreen.x)<0||(G.positionScreen.x-O.positionScreen.x)*(Y.positionScreen.y-O.positionScreen.y)-(G.positionScreen.y-O.positionScreen.y)*(Y.positionScreen.x-O.positionScreen.x)<0)){k=o[l]=o[l]||new THREE.RenderableFace3;k.v1.positionWorld.copy(E.positionWorld);k.v2.positionWorld.copy(G.positionWorld);
k.v3.positionWorld.copy(Y.positionWorld);k.v1.positionScreen.copy(E.positionScreen);k.v2.positionScreen.copy(G.positionScreen);k.v3.positionScreen.copy(Y.positionScreen);k.normalWorld.copy(D.normal);T.multiplyVector3(k.normalWorld);k.centroidWorld.copy(D.centroid);R.multiplyVector3(k.centroidWorld);k.centroidScreen.copy(k.centroidWorld);t.multiplyVector3(k.centroidScreen);k.z=k.centroidScreen.z;k.meshMaterials=F;k.faceMaterials=D.materials;k.overdraw=x;if(v.geometry.uvs[y]){k.uvs[0]=v.geometry.uvs[y][0];
k.uvs[1]=v.geometry.uvs[y][1];k.uvs[2]=v.geometry.uvs[y][3]}n.push(k);l++;p=o[l]=o[l]||new THREE.RenderableFace3;p.v1.positionWorld.copy(G.positionWorld);p.v2.positionWorld.copy(O.positionWorld);p.v3.positionWorld.copy(Y.positionWorld);p.v1.positionScreen.copy(G.positionScreen);p.v2.positionScreen.copy(O.positionScreen);p.v3.positionScreen.copy(Y.positionScreen);p.normalWorld.copy(k.normalWorld);p.centroidWorld.copy(k.centroidWorld);p.centroidScreen.copy(k.centroidScreen);p.z=p.centroidScreen.z;p.meshMaterials=
F;p.faceMaterials=D.materials;p.overdraw=x;if(v.geometry.uvs[y]){p.uvs[0]=v.geometry.uvs[y][1];p.uvs[1]=v.geometry.uvs[y][2];p.uvs[2]=v.geometry.uvs[y][3]}n.push(p);l++}}}}else if(v instanceof THREE.Line){U.multiply(t,R);V=v.geometry.vertices;D=V[0];D.positionScreen.copy(D.position);U.multiplyVector4(D.positionScreen);y=1;for(J=V.length;y<J;y++){E=V[y];E.positionScreen.copy(E.position);U.multiplyVector4(E.positionScreen);G=V[y-1];L.copy(E.positionScreen);N.copy(G.positionScreen);if(b(L,N)){L.multiplyScalar(1/
L.w);N.multiplyScalar(1/N.w);z=C[c]=C[c]||new THREE.RenderableLine;z.v1.positionScreen.copy(L);z.v2.positionScreen.copy(N);z.z=Math.max(L.z,N.z);z.materials=v.materials;n.push(z);c++}}}else if(v instanceof THREE.Particle){Q.set(v.position.x,v.position.y,v.position.z,1);t.multiplyVector4(Q);Q.z/=Q.w;if(Q.z>0&&Q.z<1){w=I[u]=I[u]||new THREE.RenderableParticle;w.x=Q.x/Q.w;w.y=Q.y/Q.w;w.z=Q.z;w.rotation=v.rotation.z;w.scale.x=v.scale.x*Math.abs(w.x-(Q.x+g.projectionMatrix.n11)/(Q.w+g.projectionMatrix.n14));
w.scale.y=v.scale.y*Math.abs(w.y-(Q.y+g.projectionMatrix.n22)/(Q.w+g.projectionMatrix.n24));w.materials=v.materials;n.push(w);u++}}}}h&&n.sort(a);return n};this.unprojectVector=function(j,g){var h=new THREE.Matrix4;h.multiply(THREE.Matrix4.makeInvert(g.matrix),THREE.Matrix4.makeInvert(g.projectionMatrix));h.multiplyVector3(j);return j}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,b=new THREE.Projector,f,d,i,k;this.domElement=document.createElement("div");this.setSize=function(p,l){f=p;d=l;i=f/2;k=d/2};this.render=function(p,l){var o,z,c,C,w,u,I,S;a=b.projectScene(p,l);o=0;for(z=a.length;o<z;o++){w=a[o];if(w instanceof THREE.RenderableParticle){I=w.x*i+i;S=w.y*k+k;c=0;for(C=w.material.length;c<C;c++){u=w.material[c];if(u instanceof THREE.ParticleDOMMaterial){u=u.domElement;u.style.left=I+"px";u.style.top=S+"px"}}}}}};
THREE.CanvasRenderer=function(){var a=null,b=new THREE.Projector,f=document.createElement("canvas"),d,i,k,p,l=f.getContext("2d"),o=1,z=0,c=null,C=null,w=1,u,I,S,Q,t,U,B,L,N,e=new THREE.Color,j=new THREE.Color,g=new THREE.Color,h=new THREE.Color,n=new THREE.Color,m,q,r,y,J,E,G,K,v,R=new THREE.Rectangle,T=new THREE.Rectangle,F=new THREE.Rectangle,x=false,H=new THREE.Color,V=new THREE.Color,D=new THREE.Color,O=new THREE.Color,Y=Math.PI*2,Z=new THREE.Vector3,oa,pa,Aa,da,qa,ua,la=16;oa=document.createElement("canvas");
oa.width=oa.height=2;pa=oa.getContext("2d");pa.fillStyle="rgba(0,0,0,1)";pa.fillRect(0,0,2,2);Aa=pa.getImageData(0,0,2,2);da=Aa.data;qa=document.createElement("canvas");qa.width=qa.height=la;ua=qa.getContext("2d");ua.translate(-la/2,-la/2);ua.scale(la,la);la--;this.domElement=f;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(ga,ma){d=ga;i=ma;k=d/2;p=i/2;f.width=d;f.height=i;R.set(-k,-p,k,p)};this.clear=function(){if(!T.isEmpty()){T.inflate(1);T.minSelf(R);l.clearRect(T.getX(),
T.getY(),T.getWidth(),T.getHeight());T.empty()}};this.render=function(ga,ma){function Ka(s){var W,P,A,M=s.lights;V.setRGB(0,0,0);D.setRGB(0,0,0);O.setRGB(0,0,0);s=0;for(W=M.length;s<W;s++){P=M[s];A=P.color;if(P instanceof THREE.AmbientLight){V.r+=A.r;V.g+=A.g;V.b+=A.b}else if(P instanceof THREE.DirectionalLight){D.r+=A.r;D.g+=A.g;D.b+=A.b}else if(P instanceof THREE.PointLight){O.r+=A.r;O.g+=A.g;O.b+=A.b}}}function va(s,W,P,A){var M,X,aa,ba,ca=s.lights;s=0;for(M=ca.length;s<M;s++){X=ca[s];aa=X.color;
ba=X.intensity;if(X instanceof THREE.DirectionalLight){X=P.dot(X.position)*ba;if(X>0){A.r+=aa.r*X;A.g+=aa.g*X;A.b+=aa.b*X}}else if(X instanceof THREE.PointLight){Z.sub(X.position,W);Z.normalize();X=P.dot(Z)*ba;if(X>0){A.r+=aa.r*X;A.g+=aa.g*X;A.b+=aa.b*X}}}}function La(s,W,P){if(P.opacity!=0){Ba(P.opacity);wa(P.blending);var A,M,X,aa,ba,ca;if(P instanceof THREE.ParticleBasicMaterial){if(P.map){aa=P.map;ba=aa.width>>1;ca=aa.height>>1;M=W.scale.x*k;X=W.scale.y*p;P=M*ba;A=X*ca;F.set(s.x-P,s.y-A,s.x+P,
s.y+A);if(!R.instersects(F))return;l.save();l.translate(s.x,s.y);l.rotate(-W.rotation);l.scale(M,-X);l.translate(-ba,-ca);l.drawImage(aa,0,0);l.restore()}l.beginPath();l.moveTo(s.x-10,s.y);l.lineTo(s.x+10,s.y);l.moveTo(s.x,s.y-10);l.lineTo(s.x,s.y+10);l.closePath();l.strokeStyle="rgb(255,255,0)";l.stroke()}else if(P instanceof THREE.ParticleCircleMaterial){if(x){H.r=V.r+D.r+O.r;H.g=V.g+D.g+O.g;H.b=V.b+D.b+O.b;e.r=P.color.r*H.r;e.g=P.color.g*H.g;e.b=P.color.b*H.b;e.updateStyleString()}else e.__styleString=
P.color.__styleString;P=W.scale.x*k;A=W.scale.y*p;F.set(s.x-P,s.y-A,s.x+P,s.y+A);if(R.instersects(F)){M=e.__styleString;if(C!=M)l.fillStyle=C=M;l.save();l.translate(s.x,s.y);l.rotate(-W.rotation);l.scale(P,A);l.beginPath();l.arc(0,0,1,0,Y,true);l.closePath();l.fill();l.restore()}}}}function Ma(s,W,P,A){if(A.opacity!=0){Ba(A.opacity);wa(A.blending);l.beginPath();l.moveTo(s.positionScreen.x,s.positionScreen.y);l.lineTo(W.positionScreen.x,W.positionScreen.y);l.closePath();if(A instanceof THREE.LineBasicMaterial){e.__styleString=
A.color.__styleString;s=A.linewidth;if(w!=s)l.lineWidth=w=s;s=e.__styleString;if(c!=s)l.strokeStyle=c=s;l.stroke();F.inflate(A.linewidth*2)}}}function Ga(s,W,P,A,M,X){if(M.opacity!=0){Ba(M.opacity);wa(M.blending);Q=s.positionScreen.x;t=s.positionScreen.y;U=W.positionScreen.x;B=W.positionScreen.y;L=P.positionScreen.x;N=P.positionScreen.y;l.beginPath();l.moveTo(Q,t);l.lineTo(U,B);l.lineTo(L,N);l.lineTo(Q,t);l.closePath();if(M instanceof THREE.MeshBasicMaterial)if(M.map)M.map.image.loaded&&M.map.mapping instanceof
THREE.UVMapping&&ra(Q,t,U,B,L,N,M.map.image,A.uvs[0].u,A.uvs[0].v,A.uvs[1].u,A.uvs[1].v,A.uvs[2].u,A.uvs[2].v);else if(M.env_map){if(M.env_map.image.loaded)if(M.env_map.mapping instanceof THREE.SphericalReflectionMapping){s=ma.matrix;Z.copy(A.vertexNormalsWorld[0]);y=(Z.x*s.n11+Z.y*s.n12+Z.z*s.n13)*0.5+0.5;J=-(Z.x*s.n21+Z.y*s.n22+Z.z*s.n23)*0.5+0.5;Z.copy(A.vertexNormalsWorld[1]);E=(Z.x*s.n11+Z.y*s.n12+Z.z*s.n13)*0.5+0.5;G=-(Z.x*s.n21+Z.y*s.n22+Z.z*s.n23)*0.5+0.5;Z.copy(A.vertexNormalsWorld[2]);K=
(Z.x*s.n11+Z.y*s.n12+Z.z*s.n13)*0.5+0.5;v=-(Z.x*s.n21+Z.y*s.n22+Z.z*s.n23)*0.5+0.5;ra(Q,t,U,B,L,N,M.env_map.image,y,J,E,G,K,v)}}else M.wireframe?xa(M.color.__styleString,M.wireframe_linewidth):ya(M.color.__styleString);else if(M instanceof THREE.MeshLambertMaterial){if(M.map&&!M.wireframe){M.map.mapping instanceof THREE.UVMapping&&ra(Q,t,U,B,L,N,M.map.image,A.uvs[0].u,A.uvs[0].v,A.uvs[1].u,A.uvs[1].v,A.uvs[2].u,A.uvs[2].v);wa(THREE.SubtractiveBlending)}if(x)if(!M.wireframe&&M.shading==THREE.SmoothShading&&
A.vertexNormalsWorld.length==3){j.r=g.r=h.r=V.r;j.g=g.g=h.g=V.g;j.b=g.b=h.b=V.b;va(X,A.v1.positionWorld,A.vertexNormalsWorld[0],j);va(X,A.v2.positionWorld,A.vertexNormalsWorld[1],g);va(X,A.v3.positionWorld,A.vertexNormalsWorld[2],h);n.r=(g.r+h.r)*0.5;n.g=(g.g+h.g)*0.5;n.b=(g.b+h.b)*0.5;r=Ha(j,g,h,n);ra(Q,t,U,B,L,N,r,0,0,1,0,0,1)}else{H.r=V.r;H.g=V.g;H.b=V.b;va(X,A.centroidWorld,A.normalWorld,H);e.r=M.color.r*H.r;e.g=M.color.g*H.g;e.b=M.color.b*H.b;e.updateStyleString();M.wireframe?xa(e.__styleString,
M.wireframe_linewidth):ya(e.__styleString)}else M.wireframe?xa(M.color.__styleString,M.wireframe_linewidth):ya(M.color.__styleString)}else if(M instanceof THREE.MeshDepthMaterial){m=ma.near;q=ma.far;j.r=j.g=j.b=1-Ca(s.positionScreen.z,m,q);g.r=g.g=g.b=1-Ca(W.positionScreen.z,m,q);h.r=h.g=h.b=1-Ca(P.positionScreen.z,m,q);n.r=(g.r+h.r)*0.5;n.g=(g.g+h.g)*0.5;n.b=(g.b+h.b)*0.5;r=Ha(j,g,h,n);ra(Q,t,U,B,L,N,r,0,0,1,0,0,1)}else if(M instanceof THREE.MeshNormalMaterial){e.r=Da(A.normalWorld.x);e.g=Da(A.normalWorld.y);
e.b=Da(A.normalWorld.z);e.updateStyleString();M.wireframe?xa(e.__styleString,M.wireframe_linewidth):ya(e.__styleString)}}}function xa(s,W){if(c!=s)l.strokeStyle=c=s;if(w!=W)l.lineWidth=w=W;l.stroke();F.inflate(W*2)}function ya(s){if(C!=s)l.fillStyle=C=s;l.fill()}function ra(s,W,P,A,M,X,aa,ba,ca,ha,ea,ia,sa){var ka,ja;ka=aa.width-1;ja=aa.height-1;ba*=ka;ca*=ja;ha*=ka;ea*=ja;ia*=ka;sa*=ja;P-=s;A-=W;M-=s;X-=W;ha-=ba;ea-=ca;ia-=ba;sa-=ca;ja=1/(ha*sa-ia*ea);ka=(sa*P-ea*M)*ja;ea=(sa*A-ea*X)*ja;P=(ha*M-
ia*P)*ja;A=(ha*X-ia*A)*ja;s=s-ka*ba-P*ca;W=W-ea*ba-A*ca;l.save();l.transform(ka,ea,P,A,s,W);l.clip();l.drawImage(aa,0,0);l.restore()}function Ba(s){if(o!=s)l.globalAlpha=o=s}function wa(s){if(z!=s){switch(s){case THREE.NormalBlending:l.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:l.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:l.globalCompositeOperation="darker"}z=s}}function Ha(s,W,P,A){var M=~~(s.r*255),X=~~(s.g*255);s=~~(s.b*255);var aa=~~(W.r*
255),ba=~~(W.g*255);W=~~(W.b*255);var ca=~~(P.r*255),ha=~~(P.g*255);P=~~(P.b*255);var ea=~~(A.r*255),ia=~~(A.g*255);A=~~(A.b*255);da[0]=M<0?0:M>255?255:M;da[1]=X<0?0:X>255?255:X;da[2]=s<0?0:s>255?255:s;da[4]=aa<0?0:aa>255?255:aa;da[5]=ba<0?0:ba>255?255:ba;da[6]=W<0?0:W>255?255:W;da[8]=ca<0?0:ca>255?255:ca;da[9]=ha<0?0:ha>255?255:ha;da[10]=P<0?0:P>255?255:P;da[12]=ea<0?0:ea>255?255:ea;da[13]=ia<0?0:ia>255?255:ia;da[14]=A<0?0:A>255?255:A;pa.putImageData(Aa,0,0);ua.drawImage(oa,0,0);return qa}function Ca(s,
W,P){s=(s-W)/(P-W);return s*s*(3-2*s)}function Da(s){s=(s+1)*0.5;return s<0?0:s>1?1:s}function Ea(s,W){var P=W.x-s.x,A=W.y-s.y,M=1/Math.sqrt(P*P+A*A);P*=M;A*=M;W.x+=P;W.y+=A;s.x-=P;s.y-=A}var za,Ia,$,fa,na,Fa,Ja,ta;l.setTransform(1,0,0,-1,k,p);this.autoClear&&this.clear();a=b.projectScene(ga,ma,this.sortElements);l.fillStyle="rgba( 0, 255, 255, 0.5 )";l.fillRect(R.getX(),R.getY(),R.getWidth(),R.getHeight());(x=ga.lights.length>0)&&Ka(ga);za=0;for(Ia=a.length;za<Ia;za++){$=a[za];F.empty();if($ instanceof
THREE.RenderableParticle){u=$;u.x*=k;u.y*=p;fa=0;for(na=$.materials.length;fa<na;fa++)La(u,$,$.materials[fa],ga)}else if($ instanceof THREE.RenderableLine){u=$.v1;I=$.v2;u.positionScreen.x*=k;u.positionScreen.y*=p;I.positionScreen.x*=k;I.positionScreen.y*=p;F.addPoint(u.positionScreen.x,u.positionScreen.y);F.addPoint(I.positionScreen.x,I.positionScreen.y);if(R.instersects(F)){fa=0;for(na=$.materials.length;fa<na;)Ma(u,I,$,$.materials[fa++],ga)}}else if($ instanceof THREE.RenderableFace3){u=$.v1;I=
$.v2;S=$.v3;u.positionScreen.x*=k;u.positionScreen.y*=p;I.positionScreen.x*=k;I.positionScreen.y*=p;S.positionScreen.x*=k;S.positionScreen.y*=p;if($.overdraw){Ea(u.positionScreen,I.positionScreen);Ea(I.positionScreen,S.positionScreen);Ea(S.positionScreen,u.positionScreen)}F.add3Points(u.positionScreen.x,u.positionScreen.y,I.positionScreen.x,I.positionScreen.y,S.positionScreen.x,S.positionScreen.y);if(R.instersects(F)){fa=0;for(na=$.meshMaterials.length;fa<na;){ta=$.meshMaterials[fa++];if(ta instanceof
THREE.MeshFaceMaterial){Fa=0;for(Ja=$.faceMaterials.length;Fa<Ja;)(ta=$.faceMaterials[Fa++])&&Ga(u,I,S,$,ta,ga)}else Ga(u,I,S,$,ta,ga)}}}T.addRectangle(F)}l.lineWidth=1;l.strokeStyle="rgba( 255, 0, 0, 0.5 )";l.strokeRect(T.getX(),T.getY(),T.getWidth(),T.getHeight());l.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(K,v,R){var T,F,x,H;T=0;for(F=K.lights.length;T<F;T++){x=K.lights[T];if(x instanceof THREE.DirectionalLight){H=v.normalWorld.dot(x.position)*x.intensity;if(H>0){R.r+=x.color.r*H;R.g+=x.color.g*H;R.b+=x.color.b*H}}else if(x instanceof THREE.PointLight){h.sub(x.position,v.centroidWorld);h.normalize();H=v.normalWorld.dot(h)*x.intensity;if(H>0){R.r+=x.color.r*H;R.g+=x.color.g*H;R.b+=x.color.b*H}}}}function b(K,v,R,T,F,x){r=d(y++);r.setAttribute("d","M "+K.positionScreen.x+
" "+K.positionScreen.y+" L "+v.positionScreen.x+" "+v.positionScreen.y+" L "+R.positionScreen.x+","+R.positionScreen.y+"z");if(F instanceof THREE.MeshBasicMaterial)B.__styleString=F.color.__styleString;else if(F instanceof THREE.MeshLambertMaterial)if(U){L.r=N.r;L.g=N.g;L.b=N.b;a(x,T,L);B.r=F.color.r*L.r;B.g=F.color.g*L.g;B.b=F.color.b*L.b;B.updateStyleString()}else B.__styleString=F.color.__styleString;else if(F instanceof THREE.MeshDepthMaterial){g=1-F.__2near/(F.__farPlusNear-T.z*F.__farMinusNear);
B.setRGB(g,g,g)}else F instanceof THREE.MeshNormalMaterial&&B.setRGB(i(T.normalWorld.x),i(T.normalWorld.y),i(T.normalWorld.z));F.wireframe?r.setAttribute("style","fill: none; stroke: "+B.__styleString+"; stroke-width: "+F.wireframe_linewidth+"; stroke-opacity: "+F.opacity+"; stroke-linecap: "+F.wireframe_linecap+"; stroke-linejoin: "+F.wireframe_linejoin):r.setAttribute("style","fill: "+B.__styleString+"; fill-opacity: "+F.opacity);l.appendChild(r)}function f(K,v,R,T,F,x,H){r=d(y++);r.setAttribute("d",
"M "+K.positionScreen.x+" "+K.positionScreen.y+" L "+v.positionScreen.x+" "+v.positionScreen.y+" L "+R.positionScreen.x+","+R.positionScreen.y+" L "+T.positionScreen.x+","+T.positionScreen.y+"z");if(x instanceof THREE.MeshBasicMaterial)B.__styleString=x.color.__styleString;else if(x instanceof THREE.MeshLambertMaterial)if(U){L.r=N.r;L.g=N.g;L.b=N.b;a(H,F,L);B.r=x.color.r*L.r;B.g=x.color.g*L.g;B.b=x.color.b*L.b;B.updateStyleString()}else B.__styleString=x.color.__styleString;else if(x instanceof THREE.MeshDepthMaterial){g=
1-x.__2near/(x.__farPlusNear-F.z*x.__farMinusNear);B.setRGB(g,g,g)}else x instanceof THREE.MeshNormalMaterial&&B.setRGB(i(F.normalWorld.x),i(F.normalWorld.y),i(F.normalWorld.z));x.wireframe?r.setAttribute("style","fill: none; stroke: "+B.__styleString+"; stroke-width: "+x.wireframe_linewidth+"; stroke-opacity: "+x.opacity+"; stroke-linecap: "+x.wireframe_linecap+"; stroke-linejoin: "+x.wireframe_linejoin):r.setAttribute("style","fill: "+B.__styleString+"; fill-opacity: "+x.opacity);l.appendChild(r)}
function d(K){if(n[K]==null){n[K]=document.createElementNS("http://www.w3.org/2000/svg","path");G==0&&n[K].setAttribute("shape-rendering","crispEdges");return n[K]}return n[K]}function i(K){return K<0?Math.min((1+K)*0.5,0.5):0.5+Math.min(K*0.5,0.5)}var k=null,p=new THREE.Projector,l=document.createElementNS("http://www.w3.org/2000/svg","svg"),o,z,c,C,w,u,I,S,Q=new THREE.Rectangle,t=new THREE.Rectangle,U=false,B=new THREE.Color(16777215),L=new THREE.Color(16777215),N=new THREE.Color(0),e=new THREE.Color(0),
j=new THREE.Color(0),g,h=new THREE.Vector3,n=[],m=[],q=[],r,y,J,E,G=1;this.domElement=l;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(K){switch(K){case "high":G=1;break;case "low":G=0}};this.setSize=function(K,v){o=K;z=v;c=o/2;C=z/2;l.setAttribute("viewBox",-c+" "+-C+" "+o+" "+z);l.setAttribute("width",o);l.setAttribute("height",z);Q.set(-c,-C,c,C)};this.clear=function(){for(;l.childNodes.length>0;)l.removeChild(l.childNodes[0])};this.render=function(K,v){var R,T,
F,x,H,V,D,O;this.autoClear&&this.clear();k=p.projectScene(K,v,this.sortElements);E=J=y=0;if(U=K.lights.length>0){D=K.lights;N.setRGB(0,0,0);e.setRGB(0,0,0);j.setRGB(0,0,0);R=0;for(T=D.length;R<T;R++){F=D[R];x=F.color;if(F instanceof THREE.AmbientLight){N.r+=x.r;N.g+=x.g;N.b+=x.b}else if(F instanceof THREE.DirectionalLight){e.r+=x.r;e.g+=x.g;e.b+=x.b}else if(F instanceof THREE.PointLight){j.r+=x.r;j.g+=x.g;j.b+=x.b}}}R=0;for(T=k.length;R<T;R++){D=k[R];t.empty();if(D instanceof THREE.RenderableParticle){w=
D;w.x*=c;w.y*=-C;F=0;for(x=D.materials.length;F<x;F++)if(O=D.materials[F]){H=w;V=D;O=O;var Y=J++;if(m[Y]==null){m[Y]=document.createElementNS("http://www.w3.org/2000/svg","circle");G==0&&m[Y].setAttribute("shape-rendering","crispEdges")}r=m[Y];r.setAttribute("cx",H.x);r.setAttribute("cy",H.y);r.setAttribute("r",V.scale.x*c);if(O instanceof THREE.ParticleCircleMaterial){if(U){L.r=N.r+e.r+j.r;L.g=N.g+e.g+j.g;L.b=N.b+e.b+j.b;B.r=O.color.r*L.r;B.g=O.color.g*L.g;B.b=O.color.b*L.b;B.updateStyleString()}else B=
O.color;r.setAttribute("style","fill: "+B.__styleString)}l.appendChild(r)}}else if(D instanceof THREE.RenderableLine){w=D.v1;u=D.v2;w.positionScreen.x*=c;w.positionScreen.y*=-C;u.positionScreen.x*=c;u.positionScreen.y*=-C;t.addPoint(w.positionScreen.x,w.positionScreen.y);t.addPoint(u.positionScreen.x,u.positionScreen.y);if(Q.instersects(t)){F=0;for(x=D.materials.length;F<x;)if(O=D.materials[F++]){H=w;V=u;O=O;Y=E++;if(q[Y]==null){q[Y]=document.createElementNS("http://www.w3.org/2000/svg","line");G==
0&&q[Y].setAttribute("shape-rendering","crispEdges")}r=q[Y];r.setAttribute("x1",H.positionScreen.x);r.setAttribute("y1",H.positionScreen.y);r.setAttribute("x2",V.positionScreen.x);r.setAttribute("y2",V.positionScreen.y);if(O instanceof THREE.LineBasicMaterial){B.__styleString=O.color.__styleString;r.setAttribute("style","fill: none; stroke: "+B.__styleString+"; stroke-width: "+O.linewidth+"; stroke-opacity: "+O.opacity+"; stroke-linecap: "+O.linecap+"; stroke-linejoin: "+O.linejoin);l.appendChild(r)}}}}else if(D instanceof
THREE.RenderableFace3){w=D.v1;u=D.v2;I=D.v3;w.positionScreen.x*=c;w.positionScreen.y*=-C;u.positionScreen.x*=c;u.positionScreen.y*=-C;I.positionScreen.x*=c;I.positionScreen.y*=-C;t.addPoint(w.positionScreen.x,w.positionScreen.y);t.addPoint(u.positionScreen.x,u.positionScreen.y);t.addPoint(I.positionScreen.x,I.positionScreen.y);if(Q.instersects(t)){F=0;for(x=D.meshMaterials.length;F<x;){O=D.meshMaterials[F++];if(O instanceof THREE.MeshFaceMaterial){H=0;for(V=D.faceMaterials.length;H<V;)(O=D.faceMaterials[H++])&&
b(w,u,I,D,O,K)}else O&&b(w,u,I,D,O,K)}}}else if(D instanceof THREE.RenderableFace4){w=D.v1;u=D.v2;I=D.v3;S=D.v4;w.positionScreen.x*=c;w.positionScreen.y*=-C;u.positionScreen.x*=c;u.positionScreen.y*=-C;I.positionScreen.x*=c;I.positionScreen.y*=-C;S.positionScreen.x*=c;S.positionScreen.y*=-C;t.addPoint(w.positionScreen.x,w.positionScreen.y);t.addPoint(u.positionScreen.x,u.positionScreen.y);t.addPoint(I.positionScreen.x,I.positionScreen.y);t.addPoint(S.positionScreen.x,S.positionScreen.y);if(Q.instersects(t)){F=
0;for(x=D.meshMaterials.length;F<x;){O=D.meshMaterials[F++];if(O instanceof THREE.MeshFaceMaterial){H=0;for(V=D.faceMaterials.length;H<V;)(O=D.faceMaterials[H++])&&f(w,u,I,S,D,O,K)}else O&&f(w,u,I,S,D,O,K)}}}}}};
THREE.WebGLRenderer=function(a){function b(e,j){e.fragment_shader=j.fragment_shader;e.vertex_shader=j.vertex_shader;var g=j.uniforms,h,n,m={};for(h in g){m[h]={};for(n in uniforms[h]){parameter_src=g[h][n];parameter_dst=m[h][n];parameter_dst=parameter_src instanceof THREE.Color||parameter_src instanceof THREE.Vector3||parameter_src instanceof THREE.Texture?parameter_src.clone():parameter_src}}e.uniforms=m}function f(e,j,g){var h=c.createProgram();g=["#ifdef GL_ES\nprecision highp float;\n#endif",
g?"#define USE_FOG":"",g instanceof THREE.FogExp2?"#define FOG_EXP2":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");var n=[c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n"].join("\n");c.attachShader(h,
l("fragment",g+e));c.attachShader(h,l("vertex",n+j));c.linkProgram(h);c.getProgramParameter(h,c.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+c.getProgramParameter(h,c.VALIDATE_STATUS)+", gl error ["+c.getError()+"]");h.uniforms={};h.attributes={};return h}function d(e,j){if(e.image.length==6){if(!e.image.__webGLTextureCube&&!e.image.__cubeMapInitialized&&e.image.loadCount==6){e.image.__webGLTextureCube=c.createTexture();c.bindTexture(c.TEXTURE_CUBE_MAP,e.image.__webGLTextureCube);
c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MAG_FILTER,c.LINEAR);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MIN_FILTER,c.LINEAR_MIPMAP_LINEAR);for(var g=0;g<6;++g)c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,e.image[g]);c.generateMipmap(c.TEXTURE_CUBE_MAP);c.bindTexture(c.TEXTURE_CUBE_MAP,null);e.image.__cubeMapInitialized=true}c.activeTexture(c.TEXTURE0+
j);c.bindTexture(c.TEXTURE_CUBE_MAP,e.image.__webGLTextureCube)}}function i(e,j){if(!e.__webGLTexture&&e.image.loaded){e.__webGLTexture=c.createTexture();c.bindTexture(c.TEXTURE_2D,e.__webGLTexture);c.texImage2D(c.TEXTURE_2D,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,e.image);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,o(e.wrap_s));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,o(e.wrap_t));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,o(e.mag_filter));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,
o(e.min_filter));c.generateMipmap(c.TEXTURE_2D);c.bindTexture(c.TEXTURE_2D,null)}c.activeTexture(c.TEXTURE0+j);c.bindTexture(c.TEXTURE_2D,e.__webGLTexture)}function k(e,j){var g,h,n;g=0;for(h=j.length;g<h;g++){n=j[g];e.uniforms[n]=c.getUniformLocation(e,n)}}function p(e,j){var g,h,n;g=0;for(h=j.length;g<h;g++){n=j[g];e.attributes[n]=c.getAttribLocation(e,n)}}function l(e,j){var g;if(e=="fragment")g=c.createShader(c.FRAGMENT_SHADER);else if(e=="vertex")g=c.createShader(c.VERTEX_SHADER);c.shaderSource(g,
j);c.compileShader(g);if(!c.getShaderParameter(g,c.COMPILE_STATUS)){alert(c.getShaderInfoLog(g));return null}return g}function o(e){switch(e){case THREE.RepeatWrapping:return c.REPEAT;case THREE.ClampToEdgeWrapping:return c.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return c.MIRRORED_REPEAT;case THREE.NearestFilter:return c.NEAREST;case THREE.NearestMipMapNearestFilter:return c.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return c.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return c.LINEAR;
case THREE.LinearMipMapNearestFilter:return c.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return c.LINEAR_MIPMAP_LINEAR}return 0}var z=document.createElement("canvas"),c,C,w,u=new THREE.Matrix4,I,S=new Float32Array(16),Q=new Float32Array(16),t=new Float32Array(16),U=new Float32Array(9),B=new Float32Array(16),L=function(e,j){if(e){var g,h,n,m=pointLights=maxDirLights=maxPointLights=0;g=0;for(h=e.lights.length;g<h;g++){n=e.lights[g];n instanceof THREE.DirectionalLight&&m++;n instanceof
THREE.PointLight&&pointLights++}if(pointLights+m<=j){maxDirLights=m;maxPointLights=pointLights}else{maxDirLights=Math.ceil(j*m/(pointLights+m));maxPointLights=j-maxDirLights}return{directional:maxDirLights,point:maxPointLights}}return{directional:1,point:j-1}}(a.scene,4);fog=a.scene?a.scene.fog:null;antialias=a.antialias!=undefined?a.antialias:true;clearColor=a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0);clearAlpha=a.clearAlpha?a.clearAlpha:0;this.domElement=z;this.autoClear=true;
(function(e,j,g){try{c=z.getContext("experimental-webgl",{antialias:e})}catch(h){}if(!c){alert("WebGL not supported");throw"cannot create webgl context";}c.clearColor(0,0,0,1);c.clearDepth(1);c.enable(c.DEPTH_TEST);c.depthFunc(c.LEQUAL);c.frontFace(c.CCW);c.cullFace(c.BACK);c.enable(c.CULL_FACE);c.enable(c.BLEND);c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA);c.clearColor(j.r,j.g,j.b,g)})(antialias,clearColor,clearAlpha);C=w=function(e,j,g){var h=[e?"#define MAX_DIR_LIGHTS "+e:"",j?"#define MAX_POINT_LIGHTS "+
j:"","uniform bool enableLighting;\nuniform bool useRefract;\nuniform int pointLightNumber;\nuniform int directionalLightNumber;\nuniform vec3 ambientLightColor;",e?"uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];":"",e?"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];":"",j?"uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];":"",j?"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];":"","varying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vLightWeighting;",j?"varying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];":
"","varying vec3 vViewPosition;\nvarying vec3 vReflect;\nuniform float mRefractionRatio;\nvoid main(void) {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec3 transformedNormal = normalize( normalMatrix * normal );\nif ( !enableLighting ) {\nvLightWeighting = vec3( 1.0, 1.0, 1.0 );\n} else {\nvLightWeighting = ambientLightColor;",
e?"for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {":"",e?"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );":"",e?"float directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );":"",e?"vLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;":"",e?"}":"",j?"for( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {":"",j?"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );":"",j?"vPointLightVector[ i ] = normalize( lPosition.xyz - mvPosition.xyz );":
"",j?"float pointLightWeighting = max( dot( transformedNormal, vPointLightVector[ i ] ), 0.0 );":"",j?"vLightWeighting += pointLightColor[ i ] * pointLightWeighting;":"",j?"}":"","}\nvNormal = transformedNormal;\nvUv = uv;\nif ( useRefract ) {\nvReflect = refract( normalize(mPosition.xyz - cameraPosition), normalize(nWorld.xyz), mRefractionRatio );\n} else {\nvReflect = reflect( normalize(mPosition.xyz - cameraPosition), normalize(nWorld.xyz) );\n}\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),
n=[e?"#define MAX_DIR_LIGHTS "+e:"",j?"#define MAX_POINT_LIGHTS "+j:"","uniform int material;\nuniform bool enableMap;\nuniform bool enableCubeMap;\nuniform bool mixEnvMap;\nuniform samplerCube tCube;\nuniform float mReflectivity;\nuniform sampler2D tMap;\nuniform vec4 mColor;\nuniform float mOpacity;\nuniform vec4 mAmbient;\nuniform vec4 mSpecular;\nuniform float mShininess;\n#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif\nuniform int pointLightNumber;\nuniform int directionalLightNumber;",
e?"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];":"","varying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vLightWeighting;",j?"varying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];":"","varying vec3 vViewPosition;\nvarying vec3 vReflect;\nvoid main() {\nvec4 mapColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nvec4 cubeColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nif ( enableMap ) {\nmapColor = texture2D( tMap, vUv );\n}\nif ( enableCubeMap ) {\ncubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n}\nif ( material == 2 ) { \nvec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );",
j?"vec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );":"",j?"vec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );":"",j?"for( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {":"",j?"vec3 pointVector = normalize( vPointLightVector[ i ] );":"",j?"vec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );":"",j?"float pointDotNormalHalf = dot( normal, pointHalfVector );":"",j?"float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );":"",j?"float pointSpecularWeight = 0.0;":"",j?"if ( pointDotNormalHalf >= 0.0 )":
"",j?"pointSpecularWeight = pow( pointDotNormalHalf, mShininess );":"",j?"pointDiffuse  += mColor * pointDiffuseWeight;":"",j?"pointSpecular += mSpecular * pointSpecularWeight;":"",j?"}":"",e?"vec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );":"",e?"vec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );":"",e?"for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {":"",e?"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );":"",e?"vec3 dirVector = normalize( lDirection.xyz );":"",e?"vec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );":
"",e?"float dirDotNormalHalf = dot( normal, dirHalfVector );":"",e?"float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );":"",e?"float dirSpecularWeight = 0.0;":"",e?"if ( dirDotNormalHalf >= 0.0 )":"",e?"dirSpecularWeight = pow( dirDotNormalHalf, mShininess );":"",e?"dirDiffuse  += mColor * dirDiffuseWeight;":"",e?"dirSpecular += mSpecular * dirSpecularWeight;":"",e?"}":"","vec4 totalLight = mAmbient;",e?"totalLight += dirDiffuse + dirSpecular;":"",j?"totalLight += pointDiffuse + pointSpecular;":
"","if ( mixEnvMap ) {\ngl_FragColor = vec4( mix( mapColor.rgb * totalLight.xyz * vLightWeighting, cubeColor.rgb, mReflectivity ), mapColor.a );\n} else {\ngl_FragColor = vec4( mapColor.rgb * cubeColor.rgb * totalLight.xyz * vLightWeighting, mapColor.a );\n}\n} else if ( material == 1 ) {\nif ( mixEnvMap ) {\ngl_FragColor = vec4( mix( mColor.rgb * mapColor.rgb * vLightWeighting, cubeColor.rgb, mReflectivity ), mColor.a * mapColor.a );\n} else {\ngl_FragColor = vec4( mColor.rgb * mapColor.rgb * cubeColor.rgb * vLightWeighting, mColor.a * mapColor.a );\n}\n} else {\nif ( mixEnvMap ) {\ngl_FragColor = mix( mColor * mapColor, cubeColor, mReflectivity );\n} else {\ngl_FragColor = mColor * mapColor * cubeColor;\n}\n}\n#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, 1.0 ), fogFactor );\n#endif\n}"].join("\n");
h=f(n,h,g);c.useProgram(h);k(h,["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","enableLighting","ambientLightColor","material","mColor","mAmbient","mSpecular","mShininess","mOpacity","enableMap","tMap","enableCubeMap","tCube","mixEnvMap","mReflectivity","mRefractionRatio","useRefract"]);g&&k(h,["fogColor","fogNear","fogFar","fogDensity"]);e&&k(h,["directionalLightNumber","directionalLightColor","directionalLightDirection"]);j&&k(h,["pointLightNumber",
"pointLightColor","pointLightPosition"]);c.uniform1i(h.uniforms.enableMap,0);c.uniform1i(h.uniforms.tMap,0);c.uniform1i(h.uniforms.enableCubeMap,0);c.uniform1i(h.uniforms.tCube,1);c.uniform1i(h.uniforms.mixEnvMap,0);c.uniform1i(h.uniforms.useRefract,0);p(h,["position","normal","uv"]);return h}(L.directional,L.point,fog);this.setSize=function(e,j){z.width=e;z.height=j;c.viewport(0,0,z.width,z.height)};this.setClearColor=function(e,j){var g=new THREE.Color(e);c.clearColor(g.r,g.g,g.b,j)};this.clear=
function(){c.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT)};this.setupLights=function(e,j){var g,h,n,m,q,r=[],y=[],J=[];m=[];q=[];c.uniform1i(e.uniforms.enableLighting,j.length);g=0;for(h=j.length;g<h;g++){n=j[g];if(n instanceof THREE.AmbientLight)r.push(n);else if(n instanceof THREE.DirectionalLight)J.push(n);else n instanceof THREE.PointLight&&y.push(n)}g=n=m=q=0;for(h=r.length;g<h;g++){n+=r[g].color.r;m+=r[g].color.g;q+=r[g].color.b}c.uniform3f(e.uniforms.ambientLightColor,n,m,q);m=[];q=[];g=0;
for(h=J.length;g<h;g++){n=J[g];m.push(n.color.r*n.intensity);m.push(n.color.g*n.intensity);m.push(n.color.b*n.intensity);q.push(n.position.x);q.push(n.position.y);q.push(n.position.z)}if(J.length){c.uniform1i(e.uniforms.directionalLightNumber,J.length);c.uniform3fv(e.uniforms.directionalLightDirection,q);c.uniform3fv(e.uniforms.directionalLightColor,m)}m=[];q=[];g=0;for(h=y.length;g<h;g++){n=y[g];m.push(n.color.r*n.intensity);m.push(n.color.g*n.intensity);m.push(n.color.b*n.intensity);q.push(n.position.x);
q.push(n.position.y);q.push(n.position.z)}if(y.length){c.uniform1i(e.uniforms.pointLightNumber,y.length);c.uniform3fv(e.uniforms.pointLightPosition,q);c.uniform3fv(e.uniforms.pointLightColor,m)}};this.createBuffers=function(e,j){var g,h,n,m,q,r,y,J,E,G=[],K=[],v=[],R=[],T=[],F=[],x=0,H=e.geometry.geometryChunks[j],V;n=false;g=0;for(h=e.materials.length;g<h;g++){meshMaterial=e.materials[g];if(meshMaterial instanceof THREE.MeshFaceMaterial){q=0;for(V=H.materials.length;q<V;q++)if(H.materials[q]&&H.materials[q].shading!=
undefined&&H.materials[q].shading==THREE.SmoothShading){n=true;break}}else if(meshMaterial&&meshMaterial.shading!=undefined&&meshMaterial.shading==THREE.SmoothShading){n=true;break}if(n)break}V=n;g=0;for(h=H.faces.length;g<h;g++){n=H.faces[g];m=e.geometry.faces[n];q=m.vertexNormals;faceNormal=m.normal;n=e.geometry.uvs[n];if(m instanceof THREE.Face3){r=e.geometry.vertices[m.a].position;y=e.geometry.vertices[m.b].position;J=e.geometry.vertices[m.c].position;v.push(r.x,r.y,r.z);v.push(y.x,y.y,y.z);v.push(J.x,
J.y,J.z);if(e.geometry.hasTangents){r=e.geometry.vertices[m.a].tangent;y=e.geometry.vertices[m.b].tangent;J=e.geometry.vertices[m.c].tangent;T.push(r.x,r.y,r.z,r.w);T.push(y.x,y.y,y.z,y.w);T.push(J.x,J.y,J.z,J.w)}if(q.length==3&&V)for(m=0;m<3;m++)R.push(q[m].x,q[m].y,q[m].z);else for(m=0;m<3;m++)R.push(faceNormal.x,faceNormal.y,faceNormal.z);if(n)for(m=0;m<3;m++)F.push(n[m].u,n[m].v);G.push(x,x+1,x+2);K.push(x,x+1);K.push(x,x+2);K.push(x+1,x+2);x+=3}else if(m instanceof THREE.Face4){r=e.geometry.vertices[m.a].position;
y=e.geometry.vertices[m.b].position;J=e.geometry.vertices[m.c].position;E=e.geometry.vertices[m.d].position;v.push(r.x,r.y,r.z);v.push(y.x,y.y,y.z);v.push(J.x,J.y,J.z);v.push(E.x,E.y,E.z);if(e.geometry.hasTangents){r=e.geometry.vertices[m.a].tangent;y=e.geometry.vertices[m.b].tangent;J=e.geometry.vertices[m.c].tangent;m=e.geometry.vertices[m.d].tangent;T.push(r.x,r.y,r.z,r.w);T.push(y.x,y.y,y.z,y.w);T.push(J.x,J.y,J.z,J.w);T.push(m.x,m.y,m.z,m.w)}if(q.length==4&&V)for(m=0;m<4;m++)R.push(q[m].x,q[m].y,
q[m].z);else for(m=0;m<4;m++)R.push(faceNormal.x,faceNormal.y,faceNormal.z);if(n)for(m=0;m<4;m++)F.push(n[m].u,n[m].v);G.push(x,x+1,x+2);G.push(x,x+2,x+3);K.push(x,x+1);K.push(x,x+2);K.push(x,x+3);K.push(x+1,x+2);K.push(x+2,x+3);x+=4}}if(v.length){H.__webGLVertexBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,H.__webGLVertexBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(v),c.STATIC_DRAW);H.__webGLNormalBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,H.__webGLNormalBuffer);c.bufferData(c.ARRAY_BUFFER,
new Float32Array(R),c.STATIC_DRAW);if(e.geometry.hasTangents){H.__webGLTangentBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,H.__webGLTangentBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(T),c.STATIC_DRAW)}if(F.length>0){H.__webGLUVBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,H.__webGLUVBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(F),c.STATIC_DRAW)}H.__webGLFaceBuffer=c.createBuffer();c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,H.__webGLFaceBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,
new Uint16Array(G),c.STATIC_DRAW);H.__webGLLineBuffer=c.createBuffer();c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,H.__webGLLineBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,new Uint16Array(K),c.STATIC_DRAW);H.__webGLFaceCount=G.length;H.__webGLLineCount=K.length}};this.renderBuffer=function(e,j,g,h,n){var m,q,r,y,J,E,G,K,v;if(h instanceof THREE.MeshShaderMaterial||h instanceof THREE.MeshDepthMaterial||h instanceof THREE.MeshNormalMaterial){if(!h.program){if(h instanceof THREE.MeshDepthMaterial){b(h,N.depth);
h.uniforms.mNear.value=e.near;h.uniforms.mFar.value=e.far}else h instanceof THREE.MeshNormalMaterial&&b(h,N.normal);h.program=f(h.fragment_shader,h.vertex_shader,null);G=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(v in h.uniforms)G.push(v);k(h.program,G);p(h.program,["position","normal","uv","tangent"])}v=h.program}else v=w;if(v!=C){c.useProgram(v);C=v}v==w&&this.setupLights(v,j);this.loadCamera(v,e);this.loadMatrices(v);if(h instanceof THREE.MeshShaderMaterial||
h instanceof THREE.MeshDepthMaterial||h instanceof THREE.MeshNormalMaterial){r=h.wireframe;y=h.wireframe_linewidth;e=v;j=h.uniforms;var R;for(m in j){K=j[m].type;G=j[m].value;R=e.uniforms[m];if(K=="i")c.uniform1i(R,G);else if(K=="f")c.uniform1f(R,G);else if(K=="v3")c.uniform3f(R,G.x,G.y,G.z);else if(K=="c")c.uniform3f(R,G.r,G.g,G.b);else if(K=="t"){c.uniform1i(R,G);if(K=j[m].texture)K.image instanceof Array&&K.image.length==6?d(K,G):i(K,G)}}}if(h instanceof THREE.MeshPhongMaterial||h instanceof THREE.MeshLambertMaterial||
h instanceof THREE.MeshBasicMaterial){m=h.color;q=h.opacity;r=h.wireframe;y=h.wireframe_linewidth;J=h.map;E=h.env_map;j=h.combine==THREE.MixOperation;e=h.reflectivity;K=h.env_map&&h.env_map.mapping instanceof THREE.CubeRefractionMapping;G=h.refraction_ratio;c.uniform4f(v.uniforms.mColor,m.r*q,m.g*q,m.b*q,q);c.uniform1i(v.uniforms.mixEnvMap,j);c.uniform1f(v.uniforms.mReflectivity,e);c.uniform1i(v.uniforms.useRefract,K);c.uniform1f(v.uniforms.mRefractionRatio,G);if(g){c.uniform3f(v.uniforms.fogColor,
g.color.r,g.color.g,g.color.b);if(g instanceof THREE.Fog){c.uniform1f(v.uniforms.fogNear,g.near);c.uniform1f(v.uniforms.fogFar,g.far)}else g instanceof THREE.FogExp2&&c.uniform1f(v.uniforms.fogDensity,g.density)}}if(h instanceof THREE.MeshPhongMaterial){g=h.ambient;m=h.specular;h=h.shininess;c.uniform4f(v.uniforms.mAmbient,g.r,g.g,g.b,q);c.uniform4f(v.uniforms.mSpecular,m.r,m.g,m.b,q);c.uniform1f(v.uniforms.mShininess,h);c.uniform1i(v.uniforms.material,2)}else if(h instanceof THREE.MeshLambertMaterial)c.uniform1i(v.uniforms.material,
1);else h instanceof THREE.MeshBasicMaterial&&c.uniform1i(v.uniforms.material,0);if(J){i(J,0);c.uniform1i(v.uniforms.tMap,0);c.uniform1i(v.uniforms.enableMap,1)}else c.uniform1i(v.uniforms.enableMap,0);if(E){d(E,1);c.uniform1i(v.uniforms.tCube,1);c.uniform1i(v.uniforms.enableCubeMap,1)}else c.uniform1i(v.uniforms.enableCubeMap,0);q=v.attributes;c.bindBuffer(c.ARRAY_BUFFER,n.__webGLVertexBuffer);c.vertexAttribPointer(q.position,3,c.FLOAT,false,0,0);c.enableVertexAttribArray(q.position);if(q.normal>=
0){c.bindBuffer(c.ARRAY_BUFFER,n.__webGLNormalBuffer);c.vertexAttribPointer(q.normal,3,c.FLOAT,false,0,0);c.enableVertexAttribArray(q.normal)}if(q.tangent>=0){c.bindBuffer(c.ARRAY_BUFFER,n.__webGLTangentBuffer);c.vertexAttribPointer(q.tangent,4,c.FLOAT,false,0,0);c.enableVertexAttribArray(q.tangent)}if(q.uv>=0)if(n.__webGLUVBuffer){c.bindBuffer(c.ARRAY_BUFFER,n.__webGLUVBuffer);c.vertexAttribPointer(q.uv,2,c.FLOAT,false,0,0);c.enableVertexAttribArray(q.uv)}else c.disableVertexAttribArray(q.uv);if(r){c.lineWidth(y);
c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,n.__webGLLineBuffer);c.drawElements(c.LINES,n.__webGLLineCount,c.UNSIGNED_SHORT,0)}else{c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,n.__webGLFaceBuffer);c.drawElements(c.TRIANGLES,n.__webGLFaceCount,c.UNSIGNED_SHORT,0)}};this.renderPass=function(e,j,g,h,n,m,q){var r,y,J,E,G;J=0;for(E=h.materials.length;J<E;J++){r=h.materials[J];if(r instanceof THREE.MeshFaceMaterial){r=0;for(y=n.materials.length;r<y;r++)if((G=n.materials[r])&&G.blending==m&&G.opacity<1==q){this.setBlending(G.blending);
this.renderBuffer(e,j,g,G,n)}}else if((G=r)&&G.blending==m&&G.opacity<1==q){this.setBlending(G.blending);this.renderBuffer(e,j,g,G,n)}}};this.render=function(e,j){var g,h,n,m,q=e.lights,r=e.fog;this.initWebGLObjects(e);this.autoClear&&this.clear();j.autoUpdateMatrix&&j.updateMatrix();S.set(j.matrix.flatten());t.set(j.projectionMatrix.flatten());g=0;for(h=e.__webGLObjects.length;g<h;g++){n=e.__webGLObjects[g];m=n.object;n=n.buffer;if(m.visible){this.setupMatrices(m,j);this.renderPass(j,q,r,m,n,THREE.NormalBlending,
false)}}g=0;for(h=e.__webGLObjects.length;g<h;g++){n=e.__webGLObjects[g];m=n.object;n=n.buffer;if(m.visible){this.setupMatrices(m,j);this.renderPass(j,q,r,m,n,THREE.AdditiveBlending,false);this.renderPass(j,q,r,m,n,THREE.SubtractiveBlending,false);this.renderPass(j,q,r,m,n,THREE.AdditiveBlending,true);this.renderPass(j,q,r,m,n,THREE.SubtractiveBlending,true);this.renderPass(j,q,r,m,n,THREE.NormalBlending,true)}}};this.initWebGLObjects=function(e){var j,g,h,n,m,q;if(!e.__webGLObjects){e.__webGLObjects=
[];e.__webGLObjectsMap={}}j=0;for(g=e.objects.length;j<g;j++){h=e.objects[j];if(e.__webGLObjectsMap[h.id]==undefined)e.__webGLObjectsMap[h.id]={};q=e.__webGLObjectsMap[h.id];if(h instanceof THREE.Mesh)for(m in h.geometry.geometryChunks){n=h.geometry.geometryChunks[m];n.__webGLVertexBuffer||this.createBuffers(h,m);if(q[m]==undefined){n={buffer:n,object:h};e.__webGLObjects.push(n);q[m]=1}}}};this.removeObject=function(e,j){var g,h;for(g=e.__webGLObjects.length-1;g>=0;g--){h=e.__webGLObjects[g].object;
j==h&&e.__webGLObjects.splice(g,1)}};this.setupMatrices=function(e,j){e.autoUpdateMatrix&&e.updateMatrix();u.multiply(j.matrix,e.matrix);Q.set(u.flatten());I=THREE.Matrix4.makeInvert3x3(u).transpose();U.set(I.m);B.set(e.matrix.flatten())};this.loadMatrices=function(e){c.uniformMatrix4fv(e.uniforms.viewMatrix,false,S);c.uniformMatrix4fv(e.uniforms.modelViewMatrix,false,Q);c.uniformMatrix4fv(e.uniforms.projectionMatrix,false,t);c.uniformMatrix3fv(e.uniforms.normalMatrix,false,U);c.uniformMatrix4fv(e.uniforms.objectMatrix,
false,B)};this.loadCamera=function(e,j){c.uniform3f(e.uniforms.cameraPosition,j.position.x,j.position.y,j.position.z)};this.setBlending=function(e){switch(e){case THREE.AdditiveBlending:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ONE,c.ONE);break;case THREE.SubtractiveBlending:c.blendFunc(c.DST_COLOR,c.ZERO);break;default:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=function(e,j){if(e){!j||j=="ccw"?c.frontFace(c.CCW):c.frontFace(c.CW);if(e=="back")c.cullFace(c.BACK);
else e=="front"?c.cullFace(c.FRONT):c.cullFace(c.FRONT_AND_BACK);c.enable(c.CULL_FACE)}else c.disable(c.CULL_FACE)};this.supportsVertexTextures=function(){return c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0};var N={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",
vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"}}};
THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
