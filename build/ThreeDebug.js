// ThreeDebug.js r31 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,b,f){this.r=a;this.g=b;this.b=f;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+
","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,b,f){this.x=a||0;this.y=b||0;this.z=f||0};
THREE.Vector3.prototype={set:function(a,b,f){this.x=a;this.y=b;this.z=f;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,f=this.y,d=this.z;this.x=f*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-f*a.x;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=
a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var b=this.x-a.x,f=this.y-a.y;a=this.z-a.z;return Math.sqrt(b*b+f*f+a*a)},distanceToSquared:function(a){var b=this.x-a.x,f=this.y-a.y;a=this.z-a.z;return b*b+f*f+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=
Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,b,f,d){this.x=a||0;this.y=b||0;this.z=f||0;this.w=d||1};
THREE.Vector4.prototype={set:function(a,b,f,d){this.x=a;this.y=b;this.z=f;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,b){this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var b,f,d=a.objects,k=[];a=0;for(b=d.length;a<b;a++){f=d[a];if(f instanceof THREE.Mesh)k=k.concat(this.intersectObject(f))}k.sort(function(m,p){return m.distance-p.distance});return k},intersectObject:function(a){function b(S,q,P,C){C=C.clone().subSelf(q);P=P.clone().subSelf(q);var J=S.clone().subSelf(q);S=C.dot(C);q=C.dot(P);C=C.dot(J);var N=P.dot(P);P=P.dot(J);J=1/(S*N-q*q);N=(N*C-q*P)*J;S=(S*P-q*C)*J;return N>0&&S>0&&N+S<1}var f,d,k,m,p,r,n,o,y,c,
w,z=a.geometry,R=z.vertices,V=[];f=0;for(d=z.faces.length;f<d;f++){k=z.faces[f];c=this.origin.clone();w=this.direction.clone();m=a.matrix.multiplyVector3(R[k.a].position.clone());p=a.matrix.multiplyVector3(R[k.b].position.clone());r=a.matrix.multiplyVector3(R[k.c].position.clone());n=k instanceof THREE.Face4?a.matrix.multiplyVector3(R[k.d].position.clone()):null;o=a.rotationMatrix.multiplyVector3(k.normal.clone());y=w.dot(o);if(y<0){o=o.dot((new THREE.Vector3).sub(m,c))/y;c=c.addSelf(w.multiplyScalar(o));
if(k instanceof THREE.Face3){if(b(c,m,p,r)){k={distance:this.origin.distanceTo(c),point:c,face:k,object:a};V.push(k)}}else if(k instanceof THREE.Face4)if(b(c,m,p,n)||b(c,p,r,n)){k={distance:this.origin.distanceTo(c),point:c,face:k,object:a};V.push(k)}}}return V}};
THREE.Rectangle=function(){function a(){m=d-b;p=k-f}var b,f,d,k,m,p,r=true;this.getX=function(){return b};this.getY=function(){return f};this.getWidth=function(){return m};this.getHeight=function(){return p};this.getLeft=function(){return b};this.getTop=function(){return f};this.getRight=function(){return d};this.getBottom=function(){return k};this.set=function(n,o,y,c){r=false;b=n;f=o;d=y;k=c;a()};this.addPoint=function(n,o){if(r){r=false;b=n;f=o;d=n;k=o}else{b=b<n?b:n;f=f<o?f:o;d=d>n?d:n;k=k>o?
k:o}a()};this.add3Points=function(n,o,y,c,w,z){if(r){r=false;b=n<y?n<w?n:w:y<w?y:w;f=o<c?o<z?o:z:c<z?c:z;d=n>y?n>w?n:w:y>w?y:w;k=o>c?o>z?o:z:c>z?c:z}else{b=n<y?n<w?n<b?n:b:w<b?w:b:y<w?y<b?y:b:w<b?w:b;f=o<c?o<z?o<f?o:f:z<f?z:f:c<z?c<f?c:f:z<f?z:f;d=n>y?n>w?n>d?n:d:w>d?w:d:y>w?y>d?y:d:w>d?w:d;k=o>c?o>z?o>k?o:k:z>k?z:k:c>z?c>k?c:k:z>k?z:k}a()};this.addRectangle=function(n){if(r){r=false;b=n.getLeft();f=n.getTop();d=n.getRight();k=n.getBottom()}else{b=b<n.getLeft()?b:n.getLeft();f=f<n.getTop()?f:n.getTop();
d=d>n.getRight()?d:n.getRight();k=k>n.getBottom()?k:n.getBottom()}a()};this.inflate=function(n){b-=n;f-=n;d+=n;k+=n;a()};this.minSelf=function(n){b=b>n.getLeft()?b:n.getLeft();f=f>n.getTop()?f:n.getTop();d=d<n.getRight()?d:n.getRight();k=k<n.getBottom()?k:n.getBottom();a()};this.instersects=function(n){return Math.min(d,n.getRight())-Math.max(b,n.getLeft())>=0&&Math.min(k,n.getBottom())-Math.max(f,n.getTop())>=0};this.empty=function(){r=true;k=d=f=b=0;a()};this.isEmpty=function(){return r};this.toString=
function(){return"THREE.Rectangle ( left: "+b+", right: "+d+", top: "+f+", bottom: "+k+", width: "+m+", height: "+p+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a;a=this.m[1];this.m[1]=this.m[3];this.m[3]=a;a=this.m[2];this.m[2]=this.m[6];this.m[6]=a;a=this.m[5];this.m[5]=this.m[7];this.m[7]=a;return this}};
THREE.Matrix4=function(a,b,f,d,k,m,p,r,n,o,y,c,w,z,R,V){this.n11=a||1;this.n12=b||0;this.n13=f||0;this.n14=d||0;this.n21=k||0;this.n22=m||1;this.n23=p||0;this.n24=r||0;this.n31=n||0;this.n32=o||0;this.n33=y||1;this.n34=c||0;this.n41=w||0;this.n42=z||0;this.n43=R||0;this.n44=V||1};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,b,f,d,k,m,p,r,n,o,y,c,w,z,R,V){this.n11=a;this.n12=b;this.n13=f;this.n14=d;this.n21=k;this.n22=m;this.n23=p;this.n24=r;this.n31=n;this.n32=o;this.n33=y;this.n34=c;this.n41=w;this.n42=z;this.n43=R;this.n44=V;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,b,f){var d=new THREE.Vector3,k=new THREE.Vector3,m=new THREE.Vector3;m.sub(a,b).normalize();d.cross(f,m).normalize();k.cross(m,d).normalize();this.n11=d.x;this.n12=d.y;this.n13=d.z;this.n14=-d.dot(a);this.n21=k.x;this.n22=k.y;this.n23=k.z;this.n24=-k.dot(a);this.n31=m.x;
this.n32=m.y;this.n33=m.z;this.n34=-m.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var b=a.x,f=a.y,d=a.z,k=1/(this.n41*b+this.n42*f+this.n43*d+this.n44);a.x=(this.n11*b+this.n12*f+this.n13*d+this.n14)*k;a.y=(this.n21*b+this.n22*f+this.n23*d+this.n24)*k;a.z=(this.n31*b+this.n32*f+this.n33*d+this.n34)*k;return a},multiplyVector4:function(a){var b=a.x,f=a.y,d=a.z,k=a.w;a.x=this.n11*b+this.n12*f+this.n13*d+this.n14*k;a.y=this.n21*b+this.n22*f+this.n23*d+this.n24*
k;a.z=this.n31*b+this.n32*f+this.n33*d+this.n34*k;a.w=this.n41*b+this.n42*f+this.n43*d+this.n44*k;return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},multiply:function(a,b){var f=a.n11,d=a.n12,k=a.n13,m=a.n14,p=a.n21,r=a.n22,n=a.n23,o=a.n24,y=a.n31,c=a.n32,
w=a.n33,z=a.n34,R=a.n41,V=a.n42,S=a.n43,q=a.n44,P=b.n11,C=b.n12,J=b.n13,N=b.n14,X=b.n21,M=b.n22,H=b.n23,e=b.n24,h=b.n31,l=b.n32,g=b.n33,j=b.n34,i=b.n41,s=b.n42,t=b.n43,G=b.n44;this.n11=f*P+d*X+k*h+m*i;this.n12=f*C+d*M+k*l+m*s;this.n13=f*J+d*H+k*g+m*t;this.n14=f*N+d*e+k*j+m*G;this.n21=p*P+r*X+n*h+o*i;this.n22=p*C+r*M+n*l+o*s;this.n23=p*J+r*H+n*g+o*t;this.n24=p*N+r*e+n*j+o*G;this.n31=y*P+c*X+w*h+z*i;this.n32=y*C+c*M+w*l+z*s;this.n33=y*J+c*H+w*g+z*t;this.n34=y*N+c*e+w*j+z*G;this.n41=R*P+V*X+S*h+q*i;
this.n42=R*C+V*M+S*l+q*s;this.n43=R*J+V*H+S*g+q*t;this.n44=R*N+V*e+S*j+q*G;return this},multiplySelf:function(a){var b=this.n11,f=this.n12,d=this.n13,k=this.n14,m=this.n21,p=this.n22,r=this.n23,n=this.n24,o=this.n31,y=this.n32,c=this.n33,w=this.n34,z=this.n41,R=this.n42,V=this.n43,S=this.n44,q=a.n11,P=a.n21,C=a.n31,J=a.n41,N=a.n12,X=a.n22,M=a.n32,H=a.n42,e=a.n13,h=a.n23,l=a.n33,g=a.n43,j=a.n14,i=a.n24,s=a.n34;a=a.n44;this.n11=b*q+f*P+d*C+k*J;this.n12=b*N+f*X+d*M+k*H;this.n13=b*e+f*h+d*l+k*g;this.n14=
b*j+f*i+d*s+k*a;this.n21=m*q+p*P+r*C+n*J;this.n22=m*N+p*X+r*M+n*H;this.n23=m*e+p*h+r*l+n*g;this.n24=m*j+p*i+r*s+n*a;this.n31=o*q+y*P+c*C+w*J;this.n32=o*N+y*X+c*M+w*H;this.n33=o*e+y*h+c*l+w*g;this.n34=o*j+y*i+c*s+w*a;this.n41=z*q+R*P+V*C+S*J;this.n42=z*N+R*X+V*M+S*H;this.n43=z*e+R*h+V*l+S*g;this.n44=z*j+R*i+V*s+S*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=
a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){return this.n14*this.n23*this.n32*this.n41-this.n13*this.n24*this.n32*this.n41-this.n14*this.n22*this.n33*this.n41+this.n12*this.n24*this.n33*this.n41+this.n13*this.n22*this.n34*this.n41-this.n12*this.n23*this.n34*this.n41-this.n14*this.n23*this.n31*this.n42+this.n13*this.n24*this.n31*this.n42+this.n14*this.n21*this.n33*this.n42-this.n11*this.n24*this.n33*this.n42-this.n13*this.n21*this.n34*this.n42+this.n11*this.n23*this.n34*
this.n42+this.n14*this.n22*this.n31*this.n43-this.n12*this.n24*this.n31*this.n43-this.n14*this.n21*this.n32*this.n43+this.n11*this.n24*this.n32*this.n43+this.n12*this.n21*this.n34*this.n43-this.n11*this.n22*this.n34*this.n43-this.n13*this.n22*this.n31*this.n44+this.n12*this.n23*this.n31*this.n44+this.n13*this.n21*this.n32*this.n44-this.n11*this.n23*this.n32*this.n44-this.n12*this.n21*this.n33*this.n44+this.n11*this.n22*this.n33*this.n44},transpose:function(){function a(b,f,d){var k=b[f];b[f]=b[d];
b[d]=k}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){return[this.n11,this.n21,this.n31,this.n41,this.n12,
this.n22,this.n32,this.n42,this.n13,this.n23,this.n33,this.n43,this.n14,this.n24,this.n34,this.n44]},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,b,f){var d=new THREE.Matrix4;d.n14=a;d.n24=b;d.n34=f;return d};
THREE.Matrix4.scaleMatrix=function(a,b,f){var d=new THREE.Matrix4;d.n11=a;d.n22=b;d.n33=f;return d};THREE.Matrix4.rotationXMatrix=function(a){var b=new THREE.Matrix4;b.n22=b.n33=Math.cos(a);b.n32=Math.sin(a);b.n23=-b.n32;return b};THREE.Matrix4.rotationYMatrix=function(a){var b=new THREE.Matrix4;b.n11=b.n33=Math.cos(a);b.n13=Math.sin(a);b.n31=-b.n13;return b};THREE.Matrix4.rotationZMatrix=function(a){var b=new THREE.Matrix4;b.n11=b.n22=Math.cos(a);b.n21=Math.sin(a);b.n12=-b.n21;return b};
THREE.Matrix4.rotationAxisAngleMatrix=function(a,b){var f=new THREE.Matrix4,d=Math.cos(b),k=Math.sin(b),m=1-d,p=a.x,r=a.y,n=a.z;f.n11=m*p*p+d;f.n12=m*p*r-k*n;f.n13=m*p*n+k*r;f.n21=m*p*r+k*n;f.n22=m*r*r+d;f.n23=m*r*n-k*p;f.n31=m*p*n-k*r;f.n32=m*r*n+k*p;f.n33=m*n*n+d;return f};
THREE.Matrix4.makeInvert=function(a){var b=new THREE.Matrix4;b.n11=a.n23*a.n34*a.n42-a.n24*a.n33*a.n42+a.n24*a.n32*a.n43-a.n22*a.n34*a.n43-a.n23*a.n32*a.n44+a.n22*a.n33*a.n44;b.n12=a.n14*a.n33*a.n42-a.n13*a.n34*a.n42-a.n14*a.n32*a.n43+a.n12*a.n34*a.n43+a.n13*a.n32*a.n44-a.n12*a.n33*a.n44;b.n13=a.n13*a.n24*a.n42-a.n14*a.n23*a.n42+a.n14*a.n22*a.n43-a.n12*a.n24*a.n43-a.n13*a.n22*a.n44+a.n12*a.n23*a.n44;b.n14=a.n14*a.n23*a.n32-a.n13*a.n24*a.n32-a.n14*a.n22*a.n33+a.n12*a.n24*a.n33+a.n13*a.n22*a.n34-a.n12*
a.n23*a.n34;b.n21=a.n24*a.n33*a.n41-a.n23*a.n34*a.n41-a.n24*a.n31*a.n43+a.n21*a.n34*a.n43+a.n23*a.n31*a.n44-a.n21*a.n33*a.n44;b.n22=a.n13*a.n34*a.n41-a.n14*a.n33*a.n41+a.n14*a.n31*a.n43-a.n11*a.n34*a.n43-a.n13*a.n31*a.n44+a.n11*a.n33*a.n44;b.n23=a.n14*a.n23*a.n41-a.n13*a.n24*a.n41-a.n14*a.n21*a.n43+a.n11*a.n24*a.n43+a.n13*a.n21*a.n44-a.n11*a.n23*a.n44;b.n24=a.n13*a.n24*a.n31-a.n14*a.n23*a.n31+a.n14*a.n21*a.n33-a.n11*a.n24*a.n33-a.n13*a.n21*a.n34+a.n11*a.n23*a.n34;b.n31=a.n22*a.n34*a.n41-a.n24*a.n32*
a.n41+a.n24*a.n31*a.n42-a.n21*a.n34*a.n42-a.n22*a.n31*a.n44+a.n21*a.n32*a.n44;b.n32=a.n14*a.n32*a.n41-a.n12*a.n34*a.n41-a.n14*a.n31*a.n42+a.n11*a.n34*a.n42+a.n12*a.n31*a.n44-a.n11*a.n32*a.n44;b.n33=a.n13*a.n24*a.n41-a.n14*a.n22*a.n41+a.n14*a.n21*a.n42-a.n11*a.n24*a.n42-a.n12*a.n21*a.n44+a.n11*a.n22*a.n44;b.n34=a.n14*a.n22*a.n31-a.n12*a.n24*a.n31-a.n14*a.n21*a.n32+a.n11*a.n24*a.n32+a.n12*a.n21*a.n34-a.n11*a.n22*a.n34;b.n41=a.n23*a.n32*a.n41-a.n22*a.n33*a.n41-a.n23*a.n31*a.n42+a.n21*a.n33*a.n42+a.n22*
a.n31*a.n43-a.n21*a.n32*a.n43;b.n42=a.n12*a.n33*a.n41-a.n13*a.n32*a.n41+a.n13*a.n31*a.n42-a.n11*a.n33*a.n42-a.n12*a.n31*a.n43+a.n11*a.n32*a.n43;b.n43=a.n13*a.n22*a.n41-a.n12*a.n23*a.n41-a.n13*a.n21*a.n42+a.n11*a.n23*a.n42+a.n12*a.n21*a.n43-a.n11*a.n22*a.n43;b.n44=a.n12*a.n23*a.n31-a.n13*a.n22*a.n31+a.n13*a.n21*a.n32-a.n11*a.n23*a.n32-a.n12*a.n21*a.n33+a.n11*a.n22*a.n33;b.multiplyScalar(1/a.determinant());return b};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.flatten();a=new THREE.Matrix3;var f=b[10]*b[5]-b[6]*b[9],d=-b[10]*b[1]+b[2]*b[9],k=b[6]*b[1]-b[2]*b[5],m=-b[10]*b[4]+b[6]*b[8],p=b[10]*b[0]-b[2]*b[8],r=-b[6]*b[0]+b[2]*b[4],n=b[9]*b[4]-b[5]*b[8],o=-b[9]*b[0]+b[1]*b[8],y=b[5]*b[0]-b[1]*b[4];b=b[0]*f+b[1]*m+b[2]*n;if(b==0)throw"matrix not invertible";b=1/b;a.m[0]=b*f;a.m[1]=b*d;a.m[2]=b*k;a.m[3]=b*m;a.m[4]=b*p;a.m[5]=b*r;a.m[6]=b*n;a.m[7]=b*o;a.m[8]=b*y;return a};
THREE.Matrix4.makeFrustum=function(a,b,f,d,k,m){var p,r,n;p=new THREE.Matrix4;r=2*k/(b-a);n=2*k/(d-f);a=(b+a)/(b-a);f=(d+f)/(d-f);d=-(m+k)/(m-k);k=-2*m*k/(m-k);p.n11=r;p.n12=0;p.n13=a;p.n14=0;p.n21=0;p.n22=n;p.n23=f;p.n24=0;p.n31=0;p.n32=0;p.n33=d;p.n34=k;p.n41=0;p.n42=0;p.n43=-1;p.n44=0;return p};THREE.Matrix4.makePerspective=function(a,b,f,d){var k;a=f*Math.tan(a*Math.PI/360);k=-a;return THREE.Matrix4.makeFrustum(k*b,a*b,k,a,f,d)};
THREE.Matrix4.makeOrtho=function(a,b,f,d,k,m){var p,r,n,o;p=new THREE.Matrix4;r=b-a;n=f-d;o=m-k;a=(b+a)/r;f=(f+d)/n;k=(m+k)/o;p.n11=2/r;p.n12=0;p.n13=0;p.n14=-a;p.n21=0;p.n22=2/n;p.n23=0;p.n24=-f;p.n31=0;p.n32=0;p.n33=-2/o;p.n34=-k;p.n41=0;p.n42=0;p.n43=0;p.n44=1;return p};
THREE.Vertex=function(a,b){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=b||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,b,f,d,k){this.a=a;this.b=b;this.c=f;this.centroid=new THREE.Vector3;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.materials=k instanceof Array?k:[k]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,b,f,d,k,m){this.a=a;this.b=b;this.c=f;this.d=d;this.centroid=new THREE.Vector3;this.normal=k instanceof THREE.Vector3?k:new THREE.Vector3;this.vertexNormals=k instanceof Array?k:[];this.materials=m instanceof Array?m:[m]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,b,f;a=0;for(b=this.faces.length;a<b;a++){f=this.faces[a];f.centroid.set(0,0,0);if(f instanceof THREE.Face3){f.centroid.addSelf(this.vertices[f.a].position);f.centroid.addSelf(this.vertices[f.b].position);f.centroid.addSelf(this.vertices[f.c].position);f.centroid.divideScalar(3)}else if(f instanceof THREE.Face4){f.centroid.addSelf(this.vertices[f.a].position);f.centroid.addSelf(this.vertices[f.b].position);f.centroid.addSelf(this.vertices[f.c].position);
f.centroid.addSelf(this.vertices[f.d].position);f.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var b,f,d,k,m,p,r=new THREE.Vector3,n=new THREE.Vector3;d=0;for(k=this.vertices.length;d<k;d++){m=this.vertices[d];m.normal.set(0,0,0)}d=0;for(k=this.faces.length;d<k;d++){m=this.faces[d];if(a&&m.vertexNormals.length){r.set(0,0,0);b=0;for(f=m.normal.length;b<f;b++)r.addSelf(m.vertexNormals[b]);r.divideScalar(3)}else{b=this.vertices[m.a];f=this.vertices[m.b];p=this.vertices[m.c];r.sub(p.position,
f.position);n.sub(b.position,f.position);r.crossSelf(n)}r.isZero()||r.normalize();m.normal.copy(r)}},computeVertexNormals:function(){var a,b,f=[],d;a=0;for(b=this.vertices.length;a<b;a++)f[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++){d=this.faces[a];if(d instanceof THREE.Face3){f[d.a].addSelf(d.normal);f[d.b].addSelf(d.normal);f[d.c].addSelf(d.normal)}else if(d instanceof THREE.Face4){f[d.a].addSelf(d.normal);f[d.b].addSelf(d.normal);f[d.c].addSelf(d.normal);f[d.d].addSelf(d.normal)}}a=
0;for(b=this.vertices.length;a<b;a++)f[a].normalize();a=0;for(b=this.faces.length;a<b;a++){d=this.faces[a];if(d instanceof THREE.Face3){d.vertexNormals[0]=f[d.a].clone();d.vertexNormals[1]=f[d.b].clone();d.vertexNormals[2]=f[d.c].clone()}else if(d instanceof THREE.Face4){d.vertexNormals[0]=f[d.a].clone();d.vertexNormals[1]=f[d.b].clone();d.vertexNormals[2]=f[d.c].clone();d.vertexNormals[3]=f[d.d].clone()}}},computeTangents:function(){function a(j,i,s,t,G,F,A){m=j.vertices[i].position;p=j.vertices[s].position;
r=j.vertices[t].position;n=k[G];o=k[F];y=k[A];c=p.x-m.x;w=r.x-m.x;z=p.y-m.y;R=r.y-m.y;V=p.z-m.z;S=r.z-m.z;q=o.u-n.u;P=y.u-n.u;C=o.v-n.v;J=y.v-n.v;N=1/(q*J-P*C);H.set((J*c-C*w)*N,(J*z-C*R)*N,(J*V-C*S)*N);e.set((q*w-P*c)*N,(q*R-P*z)*N,(q*S-P*V)*N);X[i].addSelf(H);X[s].addSelf(H);X[t].addSelf(H);M[i].addSelf(e);M[s].addSelf(e);M[t].addSelf(e)}var b,f,d,k,m,p,r,n,o,y,c,w,z,R,V,S,q,P,C,J,N,X=[],M=[],H=new THREE.Vector3,e=new THREE.Vector3,h=new THREE.Vector3,l=new THREE.Vector3,g=new THREE.Vector3;b=0;
for(f=this.vertices.length;b<f;b++){X[b]=new THREE.Vector3;M[b]=new THREE.Vector3}b=0;for(f=this.faces.length;b<f;b++){d=this.faces[b];k=this.uvs[b];if(d instanceof THREE.Face3){a(this,d.a,d.b,d.c,0,1,2);this.vertices[d.a].normal.copy(d.vertexNormals[0]);this.vertices[d.b].normal.copy(d.vertexNormals[1]);this.vertices[d.c].normal.copy(d.vertexNormals[2])}else if(d instanceof THREE.Face4){a(this,d.a,d.b,d.c,0,1,2);a(this,d.a,d.b,d.d,0,1,3);this.vertices[d.a].normal.copy(d.vertexNormals[0]);this.vertices[d.b].normal.copy(d.vertexNormals[1]);
this.vertices[d.c].normal.copy(d.vertexNormals[2]);this.vertices[d.d].normal.copy(d.vertexNormals[3])}}b=0;for(f=this.vertices.length;b<f;b++){g.copy(this.vertices[b].normal);d=X[b];h.copy(d);h.subSelf(g.multiplyScalar(g.dot(d))).normalize();l.cross(this.vertices[b].normal,d);d=l.dot(M[b]);d=d<0?-1:1;this.vertices[b].tangent.set(h.x,h.y,h.z,d)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],
y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,f=this.vertices.length;b<f;b++){a=this.vertices[b];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<
this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,b=0,f=this.vertices.length;b<f;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(y){var c=[];b=0;for(f=y.length;b<f;b++)y[b]==undefined?c.push("undefined"):c.push(y[b].toString());return c.join("_")}
var b,f,d,k,m,p,r,n,o={};d=0;for(k=this.faces.length;d<k;d++){m=this.faces[d];p=m.materials;r=a(p);if(o[r]==undefined)o[r]={hash:r,counter:0};n=o[r].hash+"_"+o[r].counter;if(this.geometryChunks[n]==undefined)this.geometryChunks[n]={faces:[],materials:p,vertices:0};m=m instanceof THREE.Face3?3:4;if(this.geometryChunks[n].vertices+m>65535){o[r].counter+=1;n=o[r].hash+"_"+o[r].counter;if(this.geometryChunks[n]==undefined)this.geometryChunks[n]={faces:[],materials:p,vertices:0}}this.geometryChunks[n].faces.push(d);
this.geometryChunks[n].vertices+=m}},toString:function(){return"THREE.Geometry ( vertices: "+this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,b,f,d){this.fov=a;this.aspect=b;this.near=f;this.far=d;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.translateX=function(k){k=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(k);k.cross(k.clone(),this.up);this.position.addSelf(k);this.target.position.addSelf(k)};this.translateZ=function(k){k=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(k);
this.position.subSelf(k);this.target.position.subSelf(k)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};
THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;
THREE.PointLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.translationMatrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.scaleMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){this.matrixPosition=THREE.Matrix4.translationMatrix(this.position.x,this.position.y,this.position.z);this.rotationMatrix=THREE.Matrix4.rotationXMatrix(this.rotation.x);this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationYMatrix(this.rotation.y));this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationZMatrix(this.rotation.z));this.scaleMatrix=THREE.Matrix4.scaleMatrix(this.scale.x,this.scale.y,this.scale.z);this.matrix.copy(this.matrixPosition);
this.matrix.multiplySelf(this.rotationMatrix);this.matrix.multiplySelf(this.scaleMatrix)}};THREE.Object3DCounter={value:0};THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.Line=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b]};THREE.Line.prototype=new THREE.Object3D;
THREE.Line.prototype.constructor=THREE.Line;THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+
"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=
this.wireframe_linecap="round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=
a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==
undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial"}};
THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.opacity=1;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};
THREE.Texture=function(a,b,f,d,k,m){this.image=a;this.mapping=b!==undefined?b:new THREE.UVMapping;this.wrap_s=f!==undefined?f:THREE.ClampToEdgeWrapping;this.wrap_t=d!==undefined?d:THREE.ClampToEdgeWrapping;this.mag_filter=k!==undefined?k:THREE.LinearFilter;this.min_filter=m!==undefined?m:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;var Uniforms={clone:function(a){var b,f,d,k={};for(b in a){k[b]={};for(f in a[b]){d=a[b][f];k[b][f]=d instanceof THREE.Color||d instanceof THREE.Vector3||d instanceof THREE.Texture?d.clone():d}}return k}};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};
THREE.LatitudeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,b,f){this.color=new THREE.Color(a);this.near=b||1;this.far=f||1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b||2.5E-4};
THREE.Projector=function(){function a(M,H){return H.z-M.z}function b(M,H){var e=0,h=1,l=M.z+M.w,g=H.z+H.w,j=-M.z+M.w,i=-H.z+H.w;if(l>=0&&g>=0&&j>=0&&i>=0)return true;else if(l<0&&g<0||j<0&&i<0)return false;else{if(l<0)e=Math.max(e,l/(l-g));else if(g<0)h=Math.min(h,l/(l-g));if(j<0)e=Math.max(e,j/(j-i));else if(i<0)h=Math.min(h,j/(j-i));if(h<e)return false;else{M.lerpSelf(H,e);H.lerpSelf(M,1-h);return true}}}var f,d,k=[],m,p,r,n=[],o,y,c=[],w,z,R=[],V=new THREE.Vector4,S=new THREE.Vector4,q=new THREE.Matrix4,
P=new THREE.Matrix4,C=[],J=new THREE.Vector4,N=new THREE.Vector4,X;this.projectObjects=function(M,H,e){var h=[],l,g;d=0;q.multiply(H.projectionMatrix,H.matrix);C[0]=new THREE.Vector4(q.n41-q.n11,q.n42-q.n12,q.n43-q.n13,q.n44-q.n14);C[1]=new THREE.Vector4(q.n41+q.n11,q.n42+q.n12,q.n43+q.n13,q.n44+q.n14);C[2]=new THREE.Vector4(q.n41+q.n21,q.n42+q.n22,q.n43+q.n23,q.n44+q.n24);C[3]=new THREE.Vector4(q.n41-q.n21,q.n42-q.n22,q.n43-q.n23,q.n44-q.n24);C[4]=new THREE.Vector4(q.n41-q.n31,q.n42-q.n32,q.n43-
q.n33,q.n44-q.n34);C[5]=new THREE.Vector4(q.n41+q.n31,q.n42+q.n32,q.n43+q.n33,q.n44+q.n34);H=0;for(l=C.length;H<l;H++){g=C[H];g.divideScalar(Math.sqrt(g.x*g.x+g.y*g.y+g.z*g.z))}l=M.objects;M=0;for(H=l.length;M<H;M++){g=l[M];var j;if(!(j=!g.visible)){if(j=g instanceof THREE.Mesh){a:{j=void 0;for(var i=g.position,s=-g.geometry.boundingSphere.radius*Math.max(g.scale.x,Math.max(g.scale.y,g.scale.z)),t=0;t<6;t++){j=C[t].x*i.x+C[t].y*i.y+C[t].z*i.z+C[t].w;if(j<=s){j=false;break a}}j=true}j=!j}j=j}if(!j){f=
k[d]=k[d]||new THREE.RenderableObject;V.copy(g.position);q.multiplyVector3(V);f.object=g;f.z=V.z;h.push(f);d++}}e&&h.sort(a);return h};this.projectScene=function(M,H,e){var h=[],l=H.near,g=H.far,j,i,s,t,G,F,A,I,U,v,D,T,Q,x,E,L;r=y=z=0;H.autoUpdateMatrix&&H.updateMatrix();q.multiply(H.projectionMatrix,H.matrix);F=this.projectObjects(M,H,true);M=0;for(j=F.length;M<j;M++){A=F[M].object;if(A.visible){A.autoUpdateMatrix&&A.updateMatrix();I=A.matrix;U=A.rotationMatrix;v=A.materials;D=A.overdraw;if(A instanceof
THREE.Mesh){T=A.geometry;Q=T.vertices;i=0;for(s=Q.length;i<s;i++){x=Q[i];x.positionWorld.copy(x.position);I.multiplyVector3(x.positionWorld);t=x.positionScreen;t.copy(x.positionWorld);q.multiplyVector4(t);t.x/=t.w;t.y/=t.w;x.__visible=t.z>l&&t.z<g}T=T.faces;i=0;for(s=T.length;i<s;i++){x=T[i];if(x instanceof THREE.Face3){t=Q[x.a];G=Q[x.b];E=Q[x.c];if(t.__visible&&G.__visible&&E.__visible)if(A.doubleSided||A.flipSided!=(E.positionScreen.x-t.positionScreen.x)*(G.positionScreen.y-t.positionScreen.y)-
(E.positionScreen.y-t.positionScreen.y)*(G.positionScreen.x-t.positionScreen.x)<0){m=n[r]=n[r]||new THREE.RenderableFace3;m.v1.positionWorld.copy(t.positionWorld);m.v2.positionWorld.copy(G.positionWorld);m.v3.positionWorld.copy(E.positionWorld);m.v1.positionScreen.copy(t.positionScreen);m.v2.positionScreen.copy(G.positionScreen);m.v3.positionScreen.copy(E.positionScreen);m.normalWorld.copy(x.normal);U.multiplyVector3(m.normalWorld);m.centroidWorld.copy(x.centroid);I.multiplyVector3(m.centroidWorld);
m.centroidScreen.copy(m.centroidWorld);q.multiplyVector3(m.centroidScreen);E=x.vertexNormals;X=m.vertexNormalsWorld;t=0;for(G=E.length;t<G;t++){L=X[t]=X[t]||new THREE.Vector3;L.copy(E[t]);U.multiplyVector3(L)}m.z=m.centroidScreen.z;m.meshMaterials=v;m.faceMaterials=x.materials;m.overdraw=D;if(A.geometry.uvs[i]){m.uvs[0]=A.geometry.uvs[i][0];m.uvs[1]=A.geometry.uvs[i][1];m.uvs[2]=A.geometry.uvs[i][2]}h.push(m);r++}}else if(x instanceof THREE.Face4){t=Q[x.a];G=Q[x.b];E=Q[x.c];L=Q[x.d];if(t.__visible&&
G.__visible&&E.__visible&&L.__visible)if(A.doubleSided||A.flipSided!=((L.positionScreen.x-t.positionScreen.x)*(G.positionScreen.y-t.positionScreen.y)-(L.positionScreen.y-t.positionScreen.y)*(G.positionScreen.x-t.positionScreen.x)<0||(G.positionScreen.x-E.positionScreen.x)*(L.positionScreen.y-E.positionScreen.y)-(G.positionScreen.y-E.positionScreen.y)*(L.positionScreen.x-E.positionScreen.x)<0)){m=n[r]=n[r]||new THREE.RenderableFace3;m.v1.positionWorld.copy(t.positionWorld);m.v2.positionWorld.copy(G.positionWorld);
m.v3.positionWorld.copy(L.positionWorld);m.v1.positionScreen.copy(t.positionScreen);m.v2.positionScreen.copy(G.positionScreen);m.v3.positionScreen.copy(L.positionScreen);m.normalWorld.copy(x.normal);U.multiplyVector3(m.normalWorld);m.centroidWorld.copy(x.centroid);I.multiplyVector3(m.centroidWorld);m.centroidScreen.copy(m.centroidWorld);q.multiplyVector3(m.centroidScreen);m.z=m.centroidScreen.z;m.meshMaterials=v;m.faceMaterials=x.materials;m.overdraw=D;if(A.geometry.uvs[i]){m.uvs[0]=A.geometry.uvs[i][0];
m.uvs[1]=A.geometry.uvs[i][1];m.uvs[2]=A.geometry.uvs[i][3]}h.push(m);r++;p=n[r]=n[r]||new THREE.RenderableFace3;p.v1.positionWorld.copy(G.positionWorld);p.v2.positionWorld.copy(E.positionWorld);p.v3.positionWorld.copy(L.positionWorld);p.v1.positionScreen.copy(G.positionScreen);p.v2.positionScreen.copy(E.positionScreen);p.v3.positionScreen.copy(L.positionScreen);p.normalWorld.copy(m.normalWorld);p.centroidWorld.copy(m.centroidWorld);p.centroidScreen.copy(m.centroidScreen);p.z=p.centroidScreen.z;p.meshMaterials=
v;p.faceMaterials=x.materials;p.overdraw=D;if(A.geometry.uvs[i]){p.uvs[0]=A.geometry.uvs[i][1];p.uvs[1]=A.geometry.uvs[i][2];p.uvs[2]=A.geometry.uvs[i][3]}h.push(p);r++}}}}else if(A instanceof THREE.Line){P.multiply(q,I);Q=A.geometry.vertices;x=Q[0];x.positionScreen.copy(x.position);P.multiplyVector4(x.positionScreen);i=1;for(s=Q.length;i<s;i++){t=Q[i];t.positionScreen.copy(t.position);P.multiplyVector4(t.positionScreen);G=Q[i-1];J.copy(t.positionScreen);N.copy(G.positionScreen);if(b(J,N)){J.multiplyScalar(1/
J.w);N.multiplyScalar(1/N.w);o=c[y]=c[y]||new THREE.RenderableLine;o.v1.positionScreen.copy(J);o.v2.positionScreen.copy(N);o.z=Math.max(J.z,N.z);o.materials=A.materials;h.push(o);y++}}}else if(A instanceof THREE.Particle){S.set(A.position.x,A.position.y,A.position.z,1);q.multiplyVector4(S);S.z/=S.w;if(S.z>0&&S.z<1){w=R[z]=R[z]||new THREE.RenderableParticle;w.x=S.x/S.w;w.y=S.y/S.w;w.z=S.z;w.rotation=A.rotation.z;w.scale.x=A.scale.x*Math.abs(w.x-(S.x+H.projectionMatrix.n11)/(S.w+H.projectionMatrix.n14));
w.scale.y=A.scale.y*Math.abs(w.y-(S.y+H.projectionMatrix.n22)/(S.w+H.projectionMatrix.n24));w.materials=A.materials;h.push(w);z++}}}}e&&h.sort(a);return h};this.unprojectVector=function(M,H){var e=new THREE.Matrix4;e.multiply(THREE.Matrix4.makeInvert(H.matrix),THREE.Matrix4.makeInvert(H.projectionMatrix));e.multiplyVector3(M);return M}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,b=new THREE.Projector,f,d,k,m;this.domElement=document.createElement("div");this.setSize=function(p,r){f=p;d=r;k=f/2;m=d/2};this.render=function(p,r){var n,o,y,c,w,z,R,V;a=b.projectScene(p,r);n=0;for(o=a.length;n<o;n++){w=a[n];if(w instanceof THREE.RenderableParticle){R=w.x*k+k;V=w.y*m+m;y=0;for(c=w.material.length;y<c;y++){z=w.material[y];if(z instanceof THREE.ParticleDOMMaterial){z=z.domElement;z.style.left=R+"px";z.style.top=V+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(ba){if(w!=ba)o.globalAlpha=w=ba}function b(ba){if(z!=ba){switch(ba){case THREE.NormalBlending:o.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:o.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:o.globalCompositeOperation="darker"}z=ba}}var f=null,d=new THREE.Projector,k=document.createElement("canvas"),m,p,r,n,o=k.getContext("2d"),y=null,c=null,w=1,z=0,R=null,V=null,S=1,q,P,C,J,N,X,M,H,e,h=new THREE.Color,
l=new THREE.Color,g=new THREE.Color,j=new THREE.Color,i=new THREE.Color,s,t,G,F,A,I,U,v,D,T=new THREE.Rectangle,Q=new THREE.Rectangle,x=new THREE.Rectangle,E=false,L=new THREE.Color,ca=new THREE.Color,ma=new THREE.Color,na=new THREE.Color,La=Math.PI*2,Z=new THREE.Vector3,ra,sa,Ca,fa,ta,xa,pa=16;ra=document.createElement("canvas");ra.width=ra.height=2;sa=ra.getContext("2d");sa.fillStyle="rgba(0,0,0,1)";sa.fillRect(0,0,2,2);Ca=sa.getImageData(0,0,2,2);fa=Ca.data;ta=document.createElement("canvas");
ta.width=ta.height=pa;xa=ta.getContext("2d");xa.translate(-pa/2,-pa/2);xa.scale(pa,pa);pa--;this.domElement=k;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(ba,la){m=ba;p=la;r=m/2;n=p/2;k.width=m;k.height=p;T.set(-r,-n,r,n)};this.setClearColor=function(ba,la){y=ba!==null?new THREE.Color(ba):null;c=la;Q.set(-r,-n,r,n);o.setTransform(1,0,0,-1,r,n);this.clear()};this.clear=function(){if(!Q.isEmpty()){Q.inflate(1);Q.minSelf(T);if(y!==null){b(THREE.NormalBlending);a(1);o.fillStyle=
"rgba("+Math.floor(y.r*255)+","+Math.floor(y.g*255)+","+Math.floor(y.b*255)+","+c+")";o.fillRect(Q.getX(),Q.getY(),Q.getWidth(),Q.getHeight())}else o.clearRect(Q.getX(),Q.getY(),Q.getWidth(),Q.getHeight());Q.empty()}};this.render=function(ba,la){function Ma(u){var W,O,B,K=u.lights;ca.setRGB(0,0,0);ma.setRGB(0,0,0);na.setRGB(0,0,0);u=0;for(W=K.length;u<W;u++){O=K[u];B=O.color;if(O instanceof THREE.AmbientLight){ca.r+=B.r;ca.g+=B.g;ca.b+=B.b}else if(O instanceof THREE.DirectionalLight){ma.r+=B.r;ma.g+=
B.g;ma.b+=B.b}else if(O instanceof THREE.PointLight){na.r+=B.r;na.g+=B.g;na.b+=B.b}}}function ya(u,W,O,B){var K,Y,aa,da,ea=u.lights;u=0;for(K=ea.length;u<K;u++){Y=ea[u];aa=Y.color;da=Y.intensity;if(Y instanceof THREE.DirectionalLight){Y=O.dot(Y.position)*da;if(Y>0){B.r+=aa.r*Y;B.g+=aa.g*Y;B.b+=aa.b*Y}}else if(Y instanceof THREE.PointLight){Z.sub(Y.position,W);Z.normalize();Y=O.dot(Z)*da;if(Y>0){B.r+=aa.r*Y;B.g+=aa.g*Y;B.b+=aa.b*Y}}}}function Na(u,W,O){if(O.opacity!=0){a(O.opacity);b(O.blending);var B,
K,Y,aa,da,ea;if(O instanceof THREE.ParticleBasicMaterial){if(O.map){aa=O.map;da=aa.width>>1;ea=aa.height>>1;K=W.scale.x*r;Y=W.scale.y*n;O=K*da;B=Y*ea;x.set(u.x-O,u.y-B,u.x+O,u.y+B);if(!T.instersects(x))return;o.save();o.translate(u.x,u.y);o.rotate(-W.rotation);o.scale(K,-Y);o.translate(-da,-ea);o.drawImage(aa,0,0);o.restore()}o.beginPath();o.moveTo(u.x-10,u.y);o.lineTo(u.x+10,u.y);o.moveTo(u.x,u.y-10);o.lineTo(u.x,u.y+10);o.closePath();o.strokeStyle="rgb(255,255,0)";o.stroke()}else if(O instanceof
THREE.ParticleCircleMaterial){if(E){L.r=ca.r+ma.r+na.r;L.g=ca.g+ma.g+na.g;L.b=ca.b+ma.b+na.b;h.r=O.color.r*L.r;h.g=O.color.g*L.g;h.b=O.color.b*L.b;h.updateStyleString()}else h.__styleString=O.color.__styleString;O=W.scale.x*r;B=W.scale.y*n;x.set(u.x-O,u.y-B,u.x+O,u.y+B);if(T.instersects(x)){K=h.__styleString;if(V!=K)o.fillStyle=V=K;o.save();o.translate(u.x,u.y);o.rotate(-W.rotation);o.scale(O,B);o.beginPath();o.arc(0,0,1,0,La,true);o.closePath();o.fill();o.restore()}}}}function Oa(u,W,O,B){if(B.opacity!=
0){a(B.opacity);b(B.blending);o.beginPath();o.moveTo(u.positionScreen.x,u.positionScreen.y);o.lineTo(W.positionScreen.x,W.positionScreen.y);o.closePath();if(B instanceof THREE.LineBasicMaterial){h.__styleString=B.color.__styleString;u=B.linewidth;if(S!=u)o.lineWidth=S=u;u=h.__styleString;if(R!=u)o.strokeStyle=R=u;o.stroke();x.inflate(B.linewidth*2)}}}function Ha(u,W,O,B,K,Y){if(K.opacity!=0){a(K.opacity);b(K.blending);J=u.positionScreen.x;N=u.positionScreen.y;X=W.positionScreen.x;M=W.positionScreen.y;
H=O.positionScreen.x;e=O.positionScreen.y;o.beginPath();o.moveTo(J,N);o.lineTo(X,M);o.lineTo(H,e);o.lineTo(J,N);o.closePath();if(K instanceof THREE.MeshBasicMaterial)if(K.map)K.map.image.loaded&&K.map.mapping instanceof THREE.UVMapping&&ua(J,N,X,M,H,e,K.map.image,B.uvs[0].u,B.uvs[0].v,B.uvs[1].u,B.uvs[1].v,B.uvs[2].u,B.uvs[2].v);else if(K.env_map){if(K.env_map.image.loaded)if(K.env_map.mapping instanceof THREE.SphericalReflectionMapping){u=la.matrix;Z.copy(B.vertexNormalsWorld[0]);F=(Z.x*u.n11+Z.y*
u.n12+Z.z*u.n13)*0.5+0.5;A=-(Z.x*u.n21+Z.y*u.n22+Z.z*u.n23)*0.5+0.5;Z.copy(B.vertexNormalsWorld[1]);I=(Z.x*u.n11+Z.y*u.n12+Z.z*u.n13)*0.5+0.5;U=-(Z.x*u.n21+Z.y*u.n22+Z.z*u.n23)*0.5+0.5;Z.copy(B.vertexNormalsWorld[2]);v=(Z.x*u.n11+Z.y*u.n12+Z.z*u.n13)*0.5+0.5;D=-(Z.x*u.n21+Z.y*u.n22+Z.z*u.n23)*0.5+0.5;ua(J,N,X,M,H,e,K.env_map.image,F,A,I,U,v,D)}}else K.wireframe?za(K.color.__styleString,K.wireframe_linewidth):Aa(K.color.__styleString);else if(K instanceof THREE.MeshLambertMaterial){if(K.map&&!K.wireframe){K.map.mapping instanceof
THREE.UVMapping&&ua(J,N,X,M,H,e,K.map.image,B.uvs[0].u,B.uvs[0].v,B.uvs[1].u,B.uvs[1].v,B.uvs[2].u,B.uvs[2].v);b(THREE.SubtractiveBlending)}if(E)if(!K.wireframe&&K.shading==THREE.SmoothShading&&B.vertexNormalsWorld.length==3){l.r=g.r=j.r=ca.r;l.g=g.g=j.g=ca.g;l.b=g.b=j.b=ca.b;ya(Y,B.v1.positionWorld,B.vertexNormalsWorld[0],l);ya(Y,B.v2.positionWorld,B.vertexNormalsWorld[1],g);ya(Y,B.v3.positionWorld,B.vertexNormalsWorld[2],j);i.r=(g.r+j.r)*0.5;i.g=(g.g+j.g)*0.5;i.b=(g.b+j.b)*0.5;G=Ia(l,g,j,i);ua(J,
N,X,M,H,e,G,0,0,1,0,0,1)}else{L.r=ca.r;L.g=ca.g;L.b=ca.b;ya(Y,B.centroidWorld,B.normalWorld,L);h.r=K.color.r*L.r;h.g=K.color.g*L.g;h.b=K.color.b*L.b;h.updateStyleString();K.wireframe?za(h.__styleString,K.wireframe_linewidth):Aa(h.__styleString)}else K.wireframe?za(K.color.__styleString,K.wireframe_linewidth):Aa(K.color.__styleString)}else if(K instanceof THREE.MeshDepthMaterial){s=la.near;t=la.far;l.r=l.g=l.b=1-Da(u.positionScreen.z,s,t);g.r=g.g=g.b=1-Da(W.positionScreen.z,s,t);j.r=j.g=j.b=1-Da(O.positionScreen.z,
s,t);i.r=(g.r+j.r)*0.5;i.g=(g.g+j.g)*0.5;i.b=(g.b+j.b)*0.5;G=Ia(l,g,j,i);ua(J,N,X,M,H,e,G,0,0,1,0,0,1)}else if(K instanceof THREE.MeshNormalMaterial){h.r=Ea(B.normalWorld.x);h.g=Ea(B.normalWorld.y);h.b=Ea(B.normalWorld.z);h.updateStyleString();K.wireframe?za(h.__styleString,K.wireframe_linewidth):Aa(h.__styleString)}}}function za(u,W){if(R!=u)o.strokeStyle=R=u;if(S!=W)o.lineWidth=S=W;o.stroke();x.inflate(W*2)}function Aa(u){if(V!=u)o.fillStyle=V=u;o.fill()}function ua(u,W,O,B,K,Y,aa,da,ea,ia,ga,ja,
va){var oa,ka;oa=aa.width-1;ka=aa.height-1;da*=oa;ea*=ka;ia*=oa;ga*=ka;ja*=oa;va*=ka;O-=u;B-=W;K-=u;Y-=W;ia-=da;ga-=ea;ja-=da;va-=ea;ka=1/(ia*va-ja*ga);oa=(va*O-ga*K)*ka;ga=(va*B-ga*Y)*ka;O=(ia*K-ja*O)*ka;B=(ia*Y-ja*B)*ka;u=u-oa*da-O*ea;W=W-ga*da-B*ea;o.save();o.transform(oa,ga,O,B,u,W);o.clip();o.drawImage(aa,0,0);o.restore()}function Ia(u,W,O,B){var K=~~(u.r*255),Y=~~(u.g*255);u=~~(u.b*255);var aa=~~(W.r*255),da=~~(W.g*255);W=~~(W.b*255);var ea=~~(O.r*255),ia=~~(O.g*255);O=~~(O.b*255);var ga=~~(B.r*
255),ja=~~(B.g*255);B=~~(B.b*255);fa[0]=K<0?0:K>255?255:K;fa[1]=Y<0?0:Y>255?255:Y;fa[2]=u<0?0:u>255?255:u;fa[4]=aa<0?0:aa>255?255:aa;fa[5]=da<0?0:da>255?255:da;fa[6]=W<0?0:W>255?255:W;fa[8]=ea<0?0:ea>255?255:ea;fa[9]=ia<0?0:ia>255?255:ia;fa[10]=O<0?0:O>255?255:O;fa[12]=ga<0?0:ga>255?255:ga;fa[13]=ja<0?0:ja>255?255:ja;fa[14]=B<0?0:B>255?255:B;sa.putImageData(Ca,0,0);xa.drawImage(ra,0,0);return ta}function Da(u,W,O){u=(u-W)/(O-W);return u*u*(3-2*u)}function Ea(u){u=(u+1)*0.5;return u<0?0:u>1?1:u}function Fa(u,
W){var O=W.x-u.x,B=W.y-u.y,K=1/Math.sqrt(O*O+B*B);O*=K;B*=K;W.x+=O;W.y+=B;u.x-=O;u.y-=B}var Ba,Ja,$,ha,qa,Ga,Ka,wa;o.setTransform(1,0,0,-1,r,n);this.autoClear&&this.clear();f=d.projectScene(ba,la,this.sortElements);o.fillStyle="rgba( 0, 255, 255, 0.5 )";o.fillRect(T.getX(),T.getY(),T.getWidth(),T.getHeight());(E=ba.lights.length>0)&&Ma(ba);Ba=0;for(Ja=f.length;Ba<Ja;Ba++){$=f[Ba];x.empty();if($ instanceof THREE.RenderableParticle){q=$;q.x*=r;q.y*=n;ha=0;for(qa=$.materials.length;ha<qa;ha++)Na(q,$,
$.materials[ha],ba)}else if($ instanceof THREE.RenderableLine){q=$.v1;P=$.v2;q.positionScreen.x*=r;q.positionScreen.y*=n;P.positionScreen.x*=r;P.positionScreen.y*=n;x.addPoint(q.positionScreen.x,q.positionScreen.y);x.addPoint(P.positionScreen.x,P.positionScreen.y);if(T.instersects(x)){ha=0;for(qa=$.materials.length;ha<qa;)Oa(q,P,$,$.materials[ha++],ba)}}else if($ instanceof THREE.RenderableFace3){q=$.v1;P=$.v2;C=$.v3;q.positionScreen.x*=r;q.positionScreen.y*=n;P.positionScreen.x*=r;P.positionScreen.y*=
n;C.positionScreen.x*=r;C.positionScreen.y*=n;if($.overdraw){Fa(q.positionScreen,P.positionScreen);Fa(P.positionScreen,C.positionScreen);Fa(C.positionScreen,q.positionScreen)}x.add3Points(q.positionScreen.x,q.positionScreen.y,P.positionScreen.x,P.positionScreen.y,C.positionScreen.x,C.positionScreen.y);if(T.instersects(x)){ha=0;for(qa=$.meshMaterials.length;ha<qa;){wa=$.meshMaterials[ha++];if(wa instanceof THREE.MeshFaceMaterial){Ga=0;for(Ka=$.faceMaterials.length;Ga<Ka;)(wa=$.faceMaterials[Ga++])&&
Ha(q,P,C,$,wa,ba)}else Ha(q,P,C,$,wa,ba)}}}Q.addRectangle(x)}o.lineWidth=1;o.strokeStyle="rgba( 255, 0, 0, 0.5 )";o.strokeRect(Q.getX(),Q.getY(),Q.getWidth(),Q.getHeight());o.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(F,A,I){var U,v,D,T;U=0;for(v=F.lights.length;U<v;U++){D=F.lights[U];if(D instanceof THREE.DirectionalLight){T=A.normalWorld.dot(D.position)*D.intensity;if(T>0){I.r+=D.color.r*T;I.g+=D.color.g*T;I.b+=D.color.b*T}}else if(D instanceof THREE.PointLight){e.sub(D.position,A.centroidWorld);e.normalize();T=A.normalWorld.dot(e)*D.intensity;if(T>0){I.r+=D.color.r*T;I.g+=D.color.g*T;I.b+=D.color.b*T}}}}function b(F,A,I,U,v,D){j=d(i++);j.setAttribute("d","M "+F.positionScreen.x+
" "+F.positionScreen.y+" L "+A.positionScreen.x+" "+A.positionScreen.y+" L "+I.positionScreen.x+","+I.positionScreen.y+"z");if(v instanceof THREE.MeshBasicMaterial)C.__styleString=v.color.__styleString;else if(v instanceof THREE.MeshLambertMaterial)if(P){J.r=N.r;J.g=N.g;J.b=N.b;a(D,U,J);C.r=v.color.r*J.r;C.g=v.color.g*J.g;C.b=v.color.b*J.b;C.updateStyleString()}else C.__styleString=v.color.__styleString;else if(v instanceof THREE.MeshDepthMaterial){H=1-v.__2near/(v.__farPlusNear-U.z*v.__farMinusNear);
C.setRGB(H,H,H)}else v instanceof THREE.MeshNormalMaterial&&C.setRGB(k(U.normalWorld.x),k(U.normalWorld.y),k(U.normalWorld.z));v.wireframe?j.setAttribute("style","fill: none; stroke: "+C.__styleString+"; stroke-width: "+v.wireframe_linewidth+"; stroke-opacity: "+v.opacity+"; stroke-linecap: "+v.wireframe_linecap+"; stroke-linejoin: "+v.wireframe_linejoin):j.setAttribute("style","fill: "+C.__styleString+"; fill-opacity: "+v.opacity);r.appendChild(j)}function f(F,A,I,U,v,D,T){j=d(i++);j.setAttribute("d",
"M "+F.positionScreen.x+" "+F.positionScreen.y+" L "+A.positionScreen.x+" "+A.positionScreen.y+" L "+I.positionScreen.x+","+I.positionScreen.y+" L "+U.positionScreen.x+","+U.positionScreen.y+"z");if(D instanceof THREE.MeshBasicMaterial)C.__styleString=D.color.__styleString;else if(D instanceof THREE.MeshLambertMaterial)if(P){J.r=N.r;J.g=N.g;J.b=N.b;a(T,v,J);C.r=D.color.r*J.r;C.g=D.color.g*J.g;C.b=D.color.b*J.b;C.updateStyleString()}else C.__styleString=D.color.__styleString;else if(D instanceof THREE.MeshDepthMaterial){H=
1-D.__2near/(D.__farPlusNear-v.z*D.__farMinusNear);C.setRGB(H,H,H)}else D instanceof THREE.MeshNormalMaterial&&C.setRGB(k(v.normalWorld.x),k(v.normalWorld.y),k(v.normalWorld.z));D.wireframe?j.setAttribute("style","fill: none; stroke: "+C.__styleString+"; stroke-width: "+D.wireframe_linewidth+"; stroke-opacity: "+D.opacity+"; stroke-linecap: "+D.wireframe_linecap+"; stroke-linejoin: "+D.wireframe_linejoin):j.setAttribute("style","fill: "+C.__styleString+"; fill-opacity: "+D.opacity);r.appendChild(j)}
function d(F){if(h[F]==null){h[F]=document.createElementNS("http://www.w3.org/2000/svg","path");G==0&&h[F].setAttribute("shape-rendering","crispEdges");return h[F]}return h[F]}function k(F){return F<0?Math.min((1+F)*0.5,0.5):0.5+Math.min(F*0.5,0.5)}var m=null,p=new THREE.Projector,r=document.createElementNS("http://www.w3.org/2000/svg","svg"),n,o,y,c,w,z,R,V,S=new THREE.Rectangle,q=new THREE.Rectangle,P=false,C=new THREE.Color(16777215),J=new THREE.Color(16777215),N=new THREE.Color(0),X=new THREE.Color(0),
M=new THREE.Color(0),H,e=new THREE.Vector3,h=[],l=[],g=[],j,i,s,t,G=1;this.domElement=r;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(F){switch(F){case "high":G=1;break;case "low":G=0}};this.setSize=function(F,A){n=F;o=A;y=n/2;c=o/2;r.setAttribute("viewBox",-y+" "+-c+" "+n+" "+o);r.setAttribute("width",n);r.setAttribute("height",o);S.set(-y,-c,y,c)};this.clear=function(){for(;r.childNodes.length>0;)r.removeChild(r.childNodes[0])};this.render=function(F,A){var I,U,
v,D,T,Q,x,E;this.autoClear&&this.clear();m=p.projectScene(F,A,this.sortElements);t=s=i=0;if(P=F.lights.length>0){x=F.lights;N.setRGB(0,0,0);X.setRGB(0,0,0);M.setRGB(0,0,0);I=0;for(U=x.length;I<U;I++){v=x[I];D=v.color;if(v instanceof THREE.AmbientLight){N.r+=D.r;N.g+=D.g;N.b+=D.b}else if(v instanceof THREE.DirectionalLight){X.r+=D.r;X.g+=D.g;X.b+=D.b}else if(v instanceof THREE.PointLight){M.r+=D.r;M.g+=D.g;M.b+=D.b}}}I=0;for(U=m.length;I<U;I++){x=m[I];q.empty();if(x instanceof THREE.RenderableParticle){w=
x;w.x*=y;w.y*=-c;v=0;for(D=x.materials.length;v<D;v++)if(E=x.materials[v]){T=w;Q=x;E=E;var L=s++;if(l[L]==null){l[L]=document.createElementNS("http://www.w3.org/2000/svg","circle");G==0&&l[L].setAttribute("shape-rendering","crispEdges")}j=l[L];j.setAttribute("cx",T.x);j.setAttribute("cy",T.y);j.setAttribute("r",Q.scale.x*y);if(E instanceof THREE.ParticleCircleMaterial){if(P){J.r=N.r+X.r+M.r;J.g=N.g+X.g+M.g;J.b=N.b+X.b+M.b;C.r=E.color.r*J.r;C.g=E.color.g*J.g;C.b=E.color.b*J.b;C.updateStyleString()}else C=
E.color;j.setAttribute("style","fill: "+C.__styleString)}r.appendChild(j)}}else if(x instanceof THREE.RenderableLine){w=x.v1;z=x.v2;w.positionScreen.x*=y;w.positionScreen.y*=-c;z.positionScreen.x*=y;z.positionScreen.y*=-c;q.addPoint(w.positionScreen.x,w.positionScreen.y);q.addPoint(z.positionScreen.x,z.positionScreen.y);if(S.instersects(q)){v=0;for(D=x.materials.length;v<D;)if(E=x.materials[v++]){T=w;Q=z;E=E;L=t++;if(g[L]==null){g[L]=document.createElementNS("http://www.w3.org/2000/svg","line");G==
0&&g[L].setAttribute("shape-rendering","crispEdges")}j=g[L];j.setAttribute("x1",T.positionScreen.x);j.setAttribute("y1",T.positionScreen.y);j.setAttribute("x2",Q.positionScreen.x);j.setAttribute("y2",Q.positionScreen.y);if(E instanceof THREE.LineBasicMaterial){C.__styleString=E.color.__styleString;j.setAttribute("style","fill: none; stroke: "+C.__styleString+"; stroke-width: "+E.linewidth+"; stroke-opacity: "+E.opacity+"; stroke-linecap: "+E.linecap+"; stroke-linejoin: "+E.linejoin);r.appendChild(j)}}}}else if(x instanceof
THREE.RenderableFace3){w=x.v1;z=x.v2;R=x.v3;w.positionScreen.x*=y;w.positionScreen.y*=-c;z.positionScreen.x*=y;z.positionScreen.y*=-c;R.positionScreen.x*=y;R.positionScreen.y*=-c;q.addPoint(w.positionScreen.x,w.positionScreen.y);q.addPoint(z.positionScreen.x,z.positionScreen.y);q.addPoint(R.positionScreen.x,R.positionScreen.y);if(S.instersects(q)){v=0;for(D=x.meshMaterials.length;v<D;){E=x.meshMaterials[v++];if(E instanceof THREE.MeshFaceMaterial){T=0;for(Q=x.faceMaterials.length;T<Q;)(E=x.faceMaterials[T++])&&
b(w,z,R,x,E,F)}else E&&b(w,z,R,x,E,F)}}}else if(x instanceof THREE.RenderableFace4){w=x.v1;z=x.v2;R=x.v3;V=x.v4;w.positionScreen.x*=y;w.positionScreen.y*=-c;z.positionScreen.x*=y;z.positionScreen.y*=-c;R.positionScreen.x*=y;R.positionScreen.y*=-c;V.positionScreen.x*=y;V.positionScreen.y*=-c;q.addPoint(w.positionScreen.x,w.positionScreen.y);q.addPoint(z.positionScreen.x,z.positionScreen.y);q.addPoint(R.positionScreen.x,R.positionScreen.y);q.addPoint(V.positionScreen.x,V.positionScreen.y);if(S.instersects(q)){v=
0;for(D=x.meshMaterials.length;v<D;){E=x.meshMaterials[v++];if(E instanceof THREE.MeshFaceMaterial){T=0;for(Q=x.faceMaterials.length;T<Q;)(E=x.faceMaterials[T++])&&f(w,z,R,V,x,E,F)}else E&&f(w,z,R,V,x,E,F)}}}}}};
THREE.WebGLRenderer=function(a){function b(e,h){e.fragment_shader=h.fragment_shader;e.vertex_shader=h.vertex_shader;e.uniforms=Uniforms.clone(h.uniforms)}function f(e,h){e.uniforms.color.value.setHex(e.color.hex);e.uniforms.opacity.value=e.opacity;e.uniforms.map.texture=e.map;e.uniforms.env_map.texture=e.env_map;e.uniforms.reflectivity.value=e.reflectivity;e.uniforms.refraction_ratio.value=e.refraction_ratio;e.uniforms.combine.value=e.combine;e.uniforms.useRefract.value=e.env_map&&e.env_map.mapping instanceof
THREE.CubeRefractionMapping;if(h){e.uniforms.fogColor.value.setHex(h.color.hex);if(h instanceof THREE.Fog){e.uniforms.fogNear.value=h.near;e.uniforms.fogFar.value=h.far}else if(h instanceof THREE.FogExp2)e.uniforms.fogDensity.value=h.density}}function d(e,h,l){var g=c.createProgram(),j=["#ifdef GL_ES\nprecision highp float;\n#endif",l.fog?"#define USE_FOG":"",l.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",l.map?"#define USE_MAP":"",l.env_map?"#define USE_ENVMAP":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");
l=[c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"",l.map?"#define USE_MAP":"",l.env_map?"#define USE_ENVMAP":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n"].join("\n");c.attachShader(g,n("fragment",j+e));c.attachShader(g,n("vertex",l+h));c.linkProgram(g);c.getProgramParameter(g,
c.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+c.getProgramParameter(g,c.VALIDATE_STATUS)+", gl error ["+c.getError()+"]");g.uniforms={};g.attributes={};return g}function k(e,h){if(e.image.length==6){if(!e.image.__webGLTextureCube&&!e.image.__cubeMapInitialized&&e.image.loadCount==6){e.image.__webGLTextureCube=c.createTexture();c.bindTexture(c.TEXTURE_CUBE_MAP,e.image.__webGLTextureCube);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,
c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MAG_FILTER,c.LINEAR);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MIN_FILTER,c.LINEAR_MIPMAP_LINEAR);for(var l=0;l<6;++l)c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+l,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,e.image[l]);c.generateMipmap(c.TEXTURE_CUBE_MAP);c.bindTexture(c.TEXTURE_CUBE_MAP,null);e.image.__cubeMapInitialized=true}c.activeTexture(c.TEXTURE0+h);c.bindTexture(c.TEXTURE_CUBE_MAP,e.image.__webGLTextureCube)}}function m(e,
h){if(!e.__webGLTexture&&e.image.loaded){e.__webGLTexture=c.createTexture();c.bindTexture(c.TEXTURE_2D,e.__webGLTexture);c.texImage2D(c.TEXTURE_2D,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,e.image);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,o(e.wrap_s));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,o(e.wrap_t));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,o(e.mag_filter));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,o(e.min_filter));c.generateMipmap(c.TEXTURE_2D);c.bindTexture(c.TEXTURE_2D,null)}c.activeTexture(c.TEXTURE0+
h);c.bindTexture(c.TEXTURE_2D,e.__webGLTexture)}function p(e,h){var l,g,j;l=0;for(g=h.length;l<g;l++){j=h[l];e.uniforms[j]=c.getUniformLocation(e,j)}}function r(e,h){var l,g,j;l=0;for(g=h.length;l<g;l++){j=h[l];e.attributes[j]=c.getAttribLocation(e,j)}}function n(e,h){var l;if(e=="fragment")l=c.createShader(c.FRAGMENT_SHADER);else if(e=="vertex")l=c.createShader(c.VERTEX_SHADER);c.shaderSource(l,h);c.compileShader(l);if(!c.getShaderParameter(l,c.COMPILE_STATUS)){alert(c.getShaderInfoLog(l));return null}return l}
function o(e){switch(e){case THREE.RepeatWrapping:return c.REPEAT;case THREE.ClampToEdgeWrapping:return c.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return c.MIRRORED_REPEAT;case THREE.NearestFilter:return c.NEAREST;case THREE.NearestMipMapNearestFilter:return c.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return c.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return c.LINEAR;case THREE.LinearMipMapNearestFilter:return c.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return c.LINEAR_MIPMAP_LINEAR}return 0}
var y=document.createElement("canvas"),c,w,z,R=new THREE.Matrix4,V,S=new Float32Array(16),q=new Float32Array(16),P=new Float32Array(16),C=new Float32Array(9),J=new Float32Array(16),N=function(e,h){if(e){var l,g,j,i,s;l=i=s=0;for(g=e.lights.length;l<g;l++){j=e.lights[l];j instanceof THREE.DirectionalLight&&i++;j instanceof THREE.PointLight&&s++}if(s+i<=h){l=i;s=s}else{l=Math.ceil(h*i/(s+i));s=h-l}return{directional:l,point:s}}return{directional:1,point:h-1}}(a.scene,4),X=a.scene?a.scene.fog:null,M=
a.antialias!=undefined?a.antialias:true,H=a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0);a=a.clearAlpha?a.clearAlpha:0;this.domElement=y;this.autoClear=true;(function(e,h,l){try{c=y.getContext("experimental-webgl",{antialias:e})}catch(g){}if(!c){alert("WebGL not supported");throw"cannot create webgl context";}c.clearColor(0,0,0,1);c.clearDepth(1);c.enable(c.DEPTH_TEST);c.depthFunc(c.LEQUAL);c.frontFace(c.CCW);c.cullFace(c.BACK);c.enable(c.CULL_FACE);c.enable(c.BLEND);c.blendFunc(c.ONE,
c.ONE_MINUS_SRC_ALPHA);c.clearColor(h.r,h.g,h.b,l)})(M,H,a);w=z=function(e,h,l){var g=[e?"#define MAX_DIR_LIGHTS "+e:"",h?"#define MAX_POINT_LIGHTS "+h:"","uniform bool enableLighting;\nuniform bool useRefract;\nuniform int pointLightNumber;\nuniform int directionalLightNumber;\nuniform vec3 ambientLightColor;",e?"uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];":"",e?"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];":"",h?"uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];":"",h?"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];":
"","varying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vLightWeighting;",h?"varying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];":"","varying vec3 vViewPosition;\nvarying vec3 vReflect;\nuniform float mRefractionRatio;\nvoid main(void) {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec3 transformedNormal = normalize( normalMatrix * normal );\nif ( !enableLighting ) {\nvLightWeighting = vec3( 1.0, 1.0, 1.0 );\n} else {\nvLightWeighting = ambientLightColor;",
e?"for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {":"",e?"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );":"",e?"float directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );":"",e?"vLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;":"",e?"}":"",h?"for( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {":"",h?"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );":"",h?"vPointLightVector[ i ] = normalize( lPosition.xyz - mvPosition.xyz );":
"",h?"float pointLightWeighting = max( dot( transformedNormal, vPointLightVector[ i ] ), 0.0 );":"",h?"vLightWeighting += pointLightColor[ i ] * pointLightWeighting;":"",h?"}":"","}\nvNormal = transformedNormal;\nvUv = uv;\nif ( useRefract ) {\nvReflect = refract( normalize(mPosition.xyz - cameraPosition), normalize(nWorld.xyz), mRefractionRatio );\n} else {\nvReflect = reflect( normalize(mPosition.xyz - cameraPosition), normalize(nWorld.xyz) );\n}\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),
j=[e?"#define MAX_DIR_LIGHTS "+e:"",h?"#define MAX_POINT_LIGHTS "+h:"","uniform int material;\nuniform bool enableMap;\nuniform bool enableCubeMap;\nuniform bool mixEnvMap;\nuniform samplerCube tCube;\nuniform float mReflectivity;\nuniform sampler2D tMap;\nuniform vec4 mColor;\nuniform float mOpacity;\nuniform vec4 mAmbient;\nuniform vec4 mSpecular;\nuniform float mShininess;",THREE.Snippets.fog_uniforms,"uniform int pointLightNumber;\nuniform int directionalLightNumber;",e?"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];":
"","varying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vLightWeighting;",h?"varying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];":"","varying vec3 vViewPosition;\nvarying vec3 vReflect;\nvoid main() {\nvec4 mapColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nvec4 cubeColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nif ( enableMap ) {\nmapColor = texture2D( tMap, vUv );\n}\nif ( enableCubeMap ) {\ncubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n}\nif ( material == 2 ) { \nvec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );",
h?"vec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );":"",h?"vec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );":"",h?"for( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {":"",h?"vec3 pointVector = normalize( vPointLightVector[ i ] );":"",h?"vec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );":"",h?"float pointDotNormalHalf = dot( normal, pointHalfVector );":"",h?"float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );":"",h?"float pointSpecularWeight = 0.0;":"",h?"if ( pointDotNormalHalf >= 0.0 )":
"",h?"pointSpecularWeight = pow( pointDotNormalHalf, mShininess );":"",h?"pointDiffuse  += mColor * pointDiffuseWeight;":"",h?"pointSpecular += mSpecular * pointSpecularWeight;":"",h?"}":"",e?"vec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );":"",e?"vec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );":"",e?"for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {":"",e?"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );":"",e?"vec3 dirVector = normalize( lDirection.xyz );":"",e?"vec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );":
"",e?"float dirDotNormalHalf = dot( normal, dirHalfVector );":"",e?"float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );":"",e?"float dirSpecularWeight = 0.0;":"",e?"if ( dirDotNormalHalf >= 0.0 )":"",e?"dirSpecularWeight = pow( dirDotNormalHalf, mShininess );":"",e?"dirDiffuse  += mColor * dirDiffuseWeight;":"",e?"dirSpecular += mSpecular * dirSpecularWeight;":"",e?"}":"","vec4 totalLight = mAmbient;",e?"totalLight += dirDiffuse + dirSpecular;":"",h?"totalLight += pointDiffuse + pointSpecular;":
"","if ( mixEnvMap ) {\ngl_FragColor = vec4( mix( mapColor.rgb * totalLight.xyz * vLightWeighting, cubeColor.rgb, mReflectivity ), mapColor.a );\n} else {\ngl_FragColor = vec4( mapColor.rgb * cubeColor.rgb * totalLight.xyz * vLightWeighting, mapColor.a );\n}\n} else if ( material == 1 ) {\nif ( mixEnvMap ) {\ngl_FragColor = vec4( mix( mColor.rgb * mapColor.rgb * vLightWeighting, cubeColor.rgb, mReflectivity ), mColor.a * mapColor.a );\n} else {\ngl_FragColor = vec4( mColor.rgb * mapColor.rgb * cubeColor.rgb * vLightWeighting, mColor.a * mapColor.a );\n}\n}",
THREE.Snippets.fog_fragment,"}"].join("\n");g=d(j,g,{fog:l});c.useProgram(g);p(g,["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","enableLighting","ambientLightColor","material","mColor","mAmbient","mSpecular","mShininess","mOpacity","enableMap","tMap","enableCubeMap","tCube","mixEnvMap","mReflectivity","mRefractionRatio","useRefract"]);l&&p(g,["fogColor","fogNear","fogFar","fogDensity"]);e&&p(g,["directionalLightNumber","directionalLightColor","directionalLightDirection"]);
h&&p(g,["pointLightNumber","pointLightColor","pointLightPosition"]);c.uniform1i(g.uniforms.enableMap,0);c.uniform1i(g.uniforms.tMap,0);c.uniform1i(g.uniforms.enableCubeMap,0);c.uniform1i(g.uniforms.tCube,1);c.uniform1i(g.uniforms.mixEnvMap,0);c.uniform1i(g.uniforms.useRefract,0);r(g,["position","normal","uv"]);return g}(N.directional,N.point,X);this.setSize=function(e,h){y.width=e;y.height=h;c.viewport(0,0,y.width,y.height)};this.setClearColor=function(e,h){var l=new THREE.Color(e);c.clearColor(l.r,
l.g,l.b,h)};this.clear=function(){c.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT)};this.setupLights=function(e,h){var l,g,j,i,s,t=[],G=[],F=[];i=[];s=[];c.uniform1i(e.uniforms.enableLighting,h.length);l=0;for(g=h.length;l<g;l++){j=h[l];if(j instanceof THREE.AmbientLight)t.push(j);else if(j instanceof THREE.DirectionalLight)F.push(j);else j instanceof THREE.PointLight&&G.push(j)}l=j=i=s=0;for(g=t.length;l<g;l++){j+=t[l].color.r;i+=t[l].color.g;s+=t[l].color.b}c.uniform3f(e.uniforms.ambientLightColor,
j,i,s);i=[];s=[];l=0;for(g=F.length;l<g;l++){j=F[l];i.push(j.color.r*j.intensity);i.push(j.color.g*j.intensity);i.push(j.color.b*j.intensity);s.push(j.position.x);s.push(j.position.y);s.push(j.position.z)}if(F.length){c.uniform1i(e.uniforms.directionalLightNumber,F.length);c.uniform3fv(e.uniforms.directionalLightDirection,s);c.uniform3fv(e.uniforms.directionalLightColor,i)}i=[];s=[];l=0;for(g=G.length;l<g;l++){j=G[l];i.push(j.color.r*j.intensity);i.push(j.color.g*j.intensity);i.push(j.color.b*j.intensity);
s.push(j.position.x);s.push(j.position.y);s.push(j.position.z)}if(G.length){c.uniform1i(e.uniforms.pointLightNumber,G.length);c.uniform3fv(e.uniforms.pointLightPosition,s);c.uniform3fv(e.uniforms.pointLightColor,i)}};this.createBuffers=function(e,h){var l,g,j,i,s,t,G,F,A,I,U=[],v=[],D=[],T=[],Q=[],x=[],E=0,L=e.geometry.geometryChunks[h],ca;s=false;l=0;for(g=e.materials.length;l<g;l++){t=e.materials[l];if(t instanceof THREE.MeshFaceMaterial){t=0;for(ca=L.materials.length;t<ca;t++)if(L.materials[t]&&
L.materials[t].shading!=undefined&&L.materials[t].shading==THREE.SmoothShading){s=true;break}}else if(t&&t.shading!=undefined&&t.shading==THREE.SmoothShading){s=true;break}if(s)break}ca=s;l=0;for(g=L.faces.length;l<g;l++){j=L.faces[l];i=e.geometry.faces[j];s=i.vertexNormals;t=i.normal;j=e.geometry.uvs[j];if(i instanceof THREE.Face3){G=e.geometry.vertices[i.a].position;F=e.geometry.vertices[i.b].position;A=e.geometry.vertices[i.c].position;D.push(G.x,G.y,G.z);D.push(F.x,F.y,F.z);D.push(A.x,A.y,A.z);
if(e.geometry.hasTangents){G=e.geometry.vertices[i.a].tangent;F=e.geometry.vertices[i.b].tangent;A=e.geometry.vertices[i.c].tangent;Q.push(G.x,G.y,G.z,G.w);Q.push(F.x,F.y,F.z,F.w);Q.push(A.x,A.y,A.z,A.w)}if(s.length==3&&ca)for(i=0;i<3;i++)T.push(s[i].x,s[i].y,s[i].z);else for(i=0;i<3;i++)T.push(t.x,t.y,t.z);if(j)for(i=0;i<3;i++)x.push(j[i].u,j[i].v);U.push(E,E+1,E+2);v.push(E,E+1);v.push(E,E+2);v.push(E+1,E+2);E+=3}else if(i instanceof THREE.Face4){G=e.geometry.vertices[i.a].position;F=e.geometry.vertices[i.b].position;
A=e.geometry.vertices[i.c].position;I=e.geometry.vertices[i.d].position;D.push(G.x,G.y,G.z);D.push(F.x,F.y,F.z);D.push(A.x,A.y,A.z);D.push(I.x,I.y,I.z);if(e.geometry.hasTangents){G=e.geometry.vertices[i.a].tangent;F=e.geometry.vertices[i.b].tangent;A=e.geometry.vertices[i.c].tangent;i=e.geometry.vertices[i.d].tangent;Q.push(G.x,G.y,G.z,G.w);Q.push(F.x,F.y,F.z,F.w);Q.push(A.x,A.y,A.z,A.w);Q.push(i.x,i.y,i.z,i.w)}if(s.length==4&&ca)for(i=0;i<4;i++)T.push(s[i].x,s[i].y,s[i].z);else for(i=0;i<4;i++)T.push(t.x,
t.y,t.z);if(j)for(i=0;i<4;i++)x.push(j[i].u,j[i].v);U.push(E,E+1,E+2);U.push(E,E+2,E+3);v.push(E,E+1);v.push(E,E+2);v.push(E,E+3);v.push(E+1,E+2);v.push(E+2,E+3);E+=4}}if(D.length){L.__webGLVertexBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,L.__webGLVertexBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(D),c.STATIC_DRAW);L.__webGLNormalBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,L.__webGLNormalBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(T),c.STATIC_DRAW);if(e.geometry.hasTangents){L.__webGLTangentBuffer=
c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,L.__webGLTangentBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(Q),c.STATIC_DRAW)}if(x.length>0){L.__webGLUVBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,L.__webGLUVBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(x),c.STATIC_DRAW)}L.__webGLFaceBuffer=c.createBuffer();c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,L.__webGLFaceBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,new Uint16Array(U),c.STATIC_DRAW);L.__webGLLineBuffer=c.createBuffer();c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,
L.__webGLLineBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,new Uint16Array(v),c.STATIC_DRAW);L.__webGLFaceCount=U.length;L.__webGLLineCount=v.length}};this.renderBuffer=function(e,h,l,g,j){var i,s,t,G,F,A,I,U,v;if(g instanceof THREE.MeshShaderMaterial||g instanceof THREE.MeshDepthMaterial||g instanceof THREE.MeshNormalMaterial||g instanceof THREE.MeshBasicMaterial){if(!g.program){if(g instanceof THREE.MeshDepthMaterial){b(g,THREE.ShaderLib.depth);g.uniforms.mNear.value=e.near;g.uniforms.mFar.value=
e.far}else if(g instanceof THREE.MeshNormalMaterial)b(g,THREE.ShaderLib.normal);else if(g instanceof THREE.MeshBasicMaterial){b(g,THREE.ShaderLib.basic);f(g,l)}g.program=d(g.fragment_shader,g.vertex_shader,{fog:l,map:g.map,env_map:g.env_map});I=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(v in g.uniforms)I.push(v);p(g.program,I);r(g.program,["position","normal","uv","tangent"])}v=g.program}else v=z;if(v!=w){c.useProgram(v);w=v}v==z&&this.setupLights(v,
h);this.loadCamera(v,e);this.loadMatrices(v);g instanceof THREE.MeshBasicMaterial&&f(g,l);if(g instanceof THREE.MeshShaderMaterial||g instanceof THREE.MeshDepthMaterial||g instanceof THREE.MeshNormalMaterial||g instanceof THREE.MeshBasicMaterial){t=g.wireframe;G=g.wireframe_linewidth;e=v;h=g.uniforms;var D;for(i in h){U=h[i].type;I=h[i].value;D=e.uniforms[i];if(U=="i")c.uniform1i(D,I);else if(U=="f")c.uniform1f(D,I);else if(U=="v2")c.uniform2f(D,I.x,I.y);else if(U=="v3")c.uniform3f(D,I.x,I.y,I.z);
else if(U=="c")c.uniform3f(D,I.r,I.g,I.b);else if(U=="t"){c.uniform1i(D,I);if(U=h[i].texture)U.image instanceof Array&&U.image.length==6?k(U,I):m(U,I)}}}if(g instanceof THREE.MeshPhongMaterial||g instanceof THREE.MeshLambertMaterial){i=g.color;s=g.opacity;t=g.wireframe;G=g.wireframe_linewidth;F=g.map;A=g.env_map;h=g.combine==THREE.MixOperation;e=g.reflectivity;U=g.env_map&&g.env_map.mapping instanceof THREE.CubeRefractionMapping;I=g.refraction_ratio;c.uniform4f(v.uniforms.mColor,i.r*s,i.g*s,i.b*s,
s);c.uniform1i(v.uniforms.mixEnvMap,h);c.uniform1f(v.uniforms.mReflectivity,e);c.uniform1i(v.uniforms.useRefract,U);c.uniform1f(v.uniforms.mRefractionRatio,I);if(l){c.uniform3f(v.uniforms.fogColor,l.color.r,l.color.g,l.color.b);if(l instanceof THREE.Fog){c.uniform1f(v.uniforms.fogNear,l.near);c.uniform1f(v.uniforms.fogFar,l.far)}else l instanceof THREE.FogExp2&&c.uniform1f(v.uniforms.fogDensity,l.density)}}if(g instanceof THREE.MeshPhongMaterial){l=g.ambient;i=g.specular;g=g.shininess;c.uniform4f(v.uniforms.mAmbient,
l.r,l.g,l.b,s);c.uniform4f(v.uniforms.mSpecular,i.r,i.g,i.b,s);c.uniform1f(v.uniforms.mShininess,g);c.uniform1i(v.uniforms.material,2)}else g instanceof THREE.MeshLambertMaterial&&c.uniform1i(v.uniforms.material,1);if(F){m(F,0);c.uniform1i(v.uniforms.tMap,0);c.uniform1i(v.uniforms.enableMap,1)}else c.uniform1i(v.uniforms.enableMap,0);if(A){k(A,1);c.uniform1i(v.uniforms.tCube,1);c.uniform1i(v.uniforms.enableCubeMap,1)}else c.uniform1i(v.uniforms.enableCubeMap,0);s=v.attributes;c.bindBuffer(c.ARRAY_BUFFER,
j.__webGLVertexBuffer);c.vertexAttribPointer(s.position,3,c.FLOAT,false,0,0);c.enableVertexAttribArray(s.position);if(s.normal>=0){c.bindBuffer(c.ARRAY_BUFFER,j.__webGLNormalBuffer);c.vertexAttribPointer(s.normal,3,c.FLOAT,false,0,0);c.enableVertexAttribArray(s.normal)}if(s.tangent>=0){c.bindBuffer(c.ARRAY_BUFFER,j.__webGLTangentBuffer);c.vertexAttribPointer(s.tangent,4,c.FLOAT,false,0,0);c.enableVertexAttribArray(s.tangent)}if(s.uv>=0)if(j.__webGLUVBuffer){c.bindBuffer(c.ARRAY_BUFFER,j.__webGLUVBuffer);
c.vertexAttribPointer(s.uv,2,c.FLOAT,false,0,0);c.enableVertexAttribArray(s.uv)}else c.disableVertexAttribArray(s.uv);if(t){c.lineWidth(G);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,j.__webGLLineBuffer);c.drawElements(c.LINES,j.__webGLLineCount,c.UNSIGNED_SHORT,0)}else{c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,j.__webGLFaceBuffer);c.drawElements(c.TRIANGLES,j.__webGLFaceCount,c.UNSIGNED_SHORT,0)}};this.renderPass=function(e,h,l,g,j,i,s){var t,G,F,A,I;F=0;for(A=g.materials.length;F<A;F++){t=g.materials[F];if(t instanceof
THREE.MeshFaceMaterial){t=0;for(G=j.materials.length;t<G;t++)if((I=j.materials[t])&&I.blending==i&&I.opacity<1==s){this.setBlending(I.blending);this.renderBuffer(e,h,l,I,j)}}else if((I=t)&&I.blending==i&&I.opacity<1==s){this.setBlending(I.blending);this.renderBuffer(e,h,l,I,j)}}};this.render=function(e,h){var l,g,j,i,s=e.lights,t=e.fog;this.initWebGLObjects(e);this.autoClear&&this.clear();h.autoUpdateMatrix&&h.updateMatrix();S.set(h.matrix.flatten());P.set(h.projectionMatrix.flatten());l=0;for(g=
e.__webGLObjects.length;l<g;l++){j=e.__webGLObjects[l];i=j.object;j=j.buffer;if(i.visible){this.setupMatrices(i,h);this.renderPass(h,s,t,i,j,THREE.NormalBlending,false)}}l=0;for(g=e.__webGLObjects.length;l<g;l++){j=e.__webGLObjects[l];i=j.object;j=j.buffer;if(i.visible){this.setupMatrices(i,h);this.renderPass(h,s,t,i,j,THREE.AdditiveBlending,false);this.renderPass(h,s,t,i,j,THREE.SubtractiveBlending,false);this.renderPass(h,s,t,i,j,THREE.AdditiveBlending,true);this.renderPass(h,s,t,i,j,THREE.SubtractiveBlending,
true);this.renderPass(h,s,t,i,j,THREE.NormalBlending,true)}}};this.initWebGLObjects=function(e){var h,l,g,j,i,s;if(!e.__webGLObjects){e.__webGLObjects=[];e.__webGLObjectsMap={}}h=0;for(l=e.objects.length;h<l;h++){g=e.objects[h];if(e.__webGLObjectsMap[g.id]==undefined)e.__webGLObjectsMap[g.id]={};s=e.__webGLObjectsMap[g.id];if(g instanceof THREE.Mesh)for(i in g.geometry.geometryChunks){j=g.geometry.geometryChunks[i];j.__webGLVertexBuffer||this.createBuffers(g,i);if(s[i]==undefined){j={buffer:j,object:g};
e.__webGLObjects.push(j);s[i]=1}}}};this.removeObject=function(e,h){var l,g;for(l=e.__webGLObjects.length-1;l>=0;l--){g=e.__webGLObjects[l].object;h==g&&e.__webGLObjects.splice(l,1)}};this.setupMatrices=function(e,h){e.autoUpdateMatrix&&e.updateMatrix();R.multiply(h.matrix,e.matrix);q.set(R.flatten());V=THREE.Matrix4.makeInvert3x3(R).transpose();C.set(V.m);J.set(e.matrix.flatten())};this.loadMatrices=function(e){c.uniformMatrix4fv(e.uniforms.viewMatrix,false,S);c.uniformMatrix4fv(e.uniforms.modelViewMatrix,
false,q);c.uniformMatrix4fv(e.uniforms.projectionMatrix,false,P);c.uniformMatrix3fv(e.uniforms.normalMatrix,false,C);c.uniformMatrix4fv(e.uniforms.objectMatrix,false,J)};this.loadCamera=function(e,h){c.uniform3f(e.uniforms.cameraPosition,h.position.x,h.position.y,h.position.z)};this.setBlending=function(e){switch(e){case THREE.AdditiveBlending:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ONE,c.ONE);break;case THREE.SubtractiveBlending:c.blendFunc(c.DST_COLOR,c.ZERO);break;default:c.blendEquation(c.FUNC_ADD);
c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=function(e,h){if(e){!h||h=="ccw"?c.frontFace(c.CCW):c.frontFace(c.CW);if(e=="back")c.cullFace(c.BACK);else e=="front"?c.cullFace(c.FRONT):c.cullFace(c.FRONT_AND_BACK);c.enable(c.CULL_FACE)}else c.disable(c.CULL_FACE)};this.supportsVertexTextures=function(){return c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_uniforms:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, 1.0 ), fogFactor );\n#endif"};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",
vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},
fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},fragment_shader:["uniform vec3 color;\nuniform float opacity;\n#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif\n#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",THREE.Snippets.fog_uniforms,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nvec4 cubeColor = vec4( 1.0, 1.0, 1.0, 1.0 );\n#ifdef USE_MAP\nmapColor = texture2D( map, vUv );\n#endif\n#ifdef USE_ENVMAP\ncubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = mix( mColor * mapColor, cubeColor, reflectivity );\n} else {\ngl_FragColor = mColor * mapColor * cubeColor;\n}\n#else\ngl_FragColor = mColor * mapColor;\n#endif",
THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif\n#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif\nvoid main() {\n#ifdef USE_MAP\nvUv = uv;\n#endif\n#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"}};
THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
