// ThreeDebug.js r32 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,c,d){this.r=a;this.g=c;this.b=d;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHSV:function(a,c,d){var g,i,l,b,r,m;if(d==0)g=i=l=0;else{b=Math.floor(a*6);r=a*6-b;a=d*(1-c);m=d*(1-c*r);c=d*(1-c*(1-r));switch(b){case 1:g=m;i=d;l=a;break;case 2:g=a;i=d;l=c;break;case 3:g=a;i=m;l=d;break;case 4:g=c;i=a;l=d;break;case 5:g=d;i=a;l=m;break;case 6:case 0:g=d;i=c;l=a}}this.r=g;this.g=i;this.b=l;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},
setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+
this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,c){this.x=a||0;this.y=c||0};
THREE.Vector2.prototype={set:function(a,c){this.x=a;this.y=c;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,c,d){this.x=a||0;this.y=c||0;this.z=d||0};
THREE.Vector3.prototype={set:function(a,c,d){this.x=a;this.y=c;this.z=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,c){this.x=a.y*c.z-a.z*c.y;this.y=a.z*c.x-a.x*c.z;this.z=a.x*c.y-a.y*c.x;return this},crossSelf:function(a){var c=this.x,d=this.y,g=this.z;this.x=d*a.z-g*a.y;this.y=g*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},multiply:function(a,c){this.x=a.x*c.x;this.y=a.y*c.y;this.z=a.z*c.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=
a.z;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var c=this.x-a.x,d=this.y-a.y;a=this.z-a.z;return Math.sqrt(c*c+d*d+a*a)},distanceToSquared:function(a){var c=this.x-a.x,d=this.y-a.y;a=this.z-a.z;return c*c+d*d+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=
-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,c,d,g){this.x=a||0;this.y=c||0;this.z=d||0;this.w=g||1};
THREE.Vector4.prototype={set:function(a,c,d,g){this.x=a;this.y=c;this.z=d;this.w=g;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;this.w=a.w+c.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;this.w=a.w-c.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,c){this.x+=(a.x-this.x)*c;this.y+=(a.y-this.y)*c;this.z+=(a.z-this.z)*c;this.w+=(a.w-this.w)*c},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,c){this.origin=a||new THREE.Vector3;this.direction=c||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var c,d,g=a.objects,i=[];a=0;for(c=g.length;a<c;a++){d=g[a];if(d instanceof THREE.Mesh)i=i.concat(this.intersectObject(d))}i.sort(function(l,b){return l.distance-b.distance});return i},intersectObject:function(a){function c(M,s,T,F){F=F.clone().subSelf(s);T=T.clone().subSelf(s);var Q=M.clone().subSelf(s);M=F.dot(F);s=F.dot(T);F=F.dot(Q);var f=T.dot(T);T=T.dot(Q);Q=1/(M*f-s*s);f=(f*F-s*T)*Q;M=(M*T-s*F)*Q;return f>0&&M>0&&f+M<1}var d,g,i,l,b,r,m,n,z,y,
w,x=a.geometry,I=x.vertices,N=[];d=0;for(g=x.faces.length;d<g;d++){i=x.faces[d];y=this.origin.clone();w=this.direction.clone();l=a.matrix.multiplyVector3(I[i.a].position.clone());b=a.matrix.multiplyVector3(I[i.b].position.clone());r=a.matrix.multiplyVector3(I[i.c].position.clone());m=i instanceof THREE.Face4?a.matrix.multiplyVector3(I[i.d].position.clone()):null;n=a.rotationMatrix.multiplyVector3(i.normal.clone());z=w.dot(n);if(z<0){n=n.dot((new THREE.Vector3).sub(l,y))/z;y=y.addSelf(w.multiplyScalar(n));
if(i instanceof THREE.Face3){if(c(y,l,b,r)){i={distance:this.origin.distanceTo(y),point:y,face:i,object:a};N.push(i)}}else if(i instanceof THREE.Face4)if(c(y,l,b,m)||c(y,b,r,m)){i={distance:this.origin.distanceTo(y),point:y,face:i,object:a};N.push(i)}}}return N}};
THREE.Rectangle=function(){function a(){l=g-c;b=i-d}var c,d,g,i,l,b,r=true;this.getX=function(){return c};this.getY=function(){return d};this.getWidth=function(){return l};this.getHeight=function(){return b};this.getLeft=function(){return c};this.getTop=function(){return d};this.getRight=function(){return g};this.getBottom=function(){return i};this.set=function(m,n,z,y){r=false;c=m;d=n;g=z;i=y;a()};this.addPoint=function(m,n){if(r){r=false;c=m;d=n;g=m;i=n}else{c=c<m?c:m;d=d<n?d:n;g=g>m?g:m;i=i>n?
i:n}a()};this.add3Points=function(m,n,z,y,w,x){if(r){r=false;c=m<z?m<w?m:w:z<w?z:w;d=n<y?n<x?n:x:y<x?y:x;g=m>z?m>w?m:w:z>w?z:w;i=n>y?n>x?n:x:y>x?y:x}else{c=m<z?m<w?m<c?m:c:w<c?w:c:z<w?z<c?z:c:w<c?w:c;d=n<y?n<x?n<d?n:d:x<d?x:d:y<x?y<d?y:d:x<d?x:d;g=m>z?m>w?m>g?m:g:w>g?w:g:z>w?z>g?z:g:w>g?w:g;i=n>y?n>x?n>i?n:i:x>i?x:i:y>x?y>i?y:i:x>i?x:i}a()};this.addRectangle=function(m){if(r){r=false;c=m.getLeft();d=m.getTop();g=m.getRight();i=m.getBottom()}else{c=c<m.getLeft()?c:m.getLeft();d=d<m.getTop()?d:m.getTop();
g=g>m.getRight()?g:m.getRight();i=i>m.getBottom()?i:m.getBottom()}a()};this.inflate=function(m){c-=m;d-=m;g+=m;i+=m;a()};this.minSelf=function(m){c=c>m.getLeft()?c:m.getLeft();d=d>m.getTop()?d:m.getTop();g=g<m.getRight()?g:m.getRight();i=i<m.getBottom()?i:m.getBottom();a()};this.instersects=function(m){return Math.min(g,m.getRight())-Math.max(c,m.getLeft())>=0&&Math.min(i,m.getBottom())-Math.max(d,m.getTop())>=0};this.empty=function(){r=true;i=g=d=c=0;a()};this.isEmpty=function(){return r};this.toString=
function(){return"THREE.Rectangle ( left: "+c+", right: "+g+", top: "+d+", bottom: "+i+", width: "+l+", height: "+b+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a,c=this.m;a=c[1];c[1]=c[3];c[3]=a;a=c[2];c[2]=c[6];c[6]=a;a=c[5];c[5]=c[7];c[7]=a;return this}};
THREE.Matrix4=function(a,c,d,g,i,l,b,r,m,n,z,y,w,x,I,N){this.n11=a||1;this.n12=c||0;this.n13=d||0;this.n14=g||0;this.n21=i||0;this.n22=l||1;this.n23=b||0;this.n24=r||0;this.n31=m||0;this.n32=n||0;this.n33=z||1;this.n34=y||0;this.n41=w||0;this.n42=x||0;this.n43=I||0;this.n44=N||1;this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,c,d,g,i,l,b,r,m,n,z,y,w,x,I,N){this.n11=a;this.n12=c;this.n13=d;this.n14=g;this.n21=i;this.n22=l;this.n23=b;this.n24=r;this.n31=m;this.n32=n;this.n33=z;this.n34=y;this.n41=w;this.n42=x;this.n43=I;this.n44=N;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,c,d){var g=THREE.Matrix4.__tmpVec1,i=THREE.Matrix4.__tmpVec2,l=THREE.Matrix4.__tmpVec3;l.sub(a,c).normalize();g.cross(d,l).normalize();i.cross(l,g).normalize();this.n11=g.x;this.n12=g.y;this.n13=g.z;this.n14=-g.dot(a);this.n21=i.x;this.n22=i.y;this.n23=i.z;this.n24=-i.dot(a);
this.n31=l.x;this.n32=l.y;this.n33=l.z;this.n34=-l.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var c=a.x,d=a.y,g=a.z,i=1/(this.n41*c+this.n42*d+this.n43*g+this.n44);a.x=(this.n11*c+this.n12*d+this.n13*g+this.n14)*i;a.y=(this.n21*c+this.n22*d+this.n23*g+this.n24)*i;a.z=(this.n31*c+this.n32*d+this.n33*g+this.n34)*i;return a},multiplyVector4:function(a){var c=a.x,d=a.y,g=a.z,i=a.w;a.x=this.n11*c+this.n12*d+this.n13*g+this.n14*i;a.y=this.n21*c+this.n22*d+this.n23*
g+this.n24*i;a.z=this.n31*c+this.n32*d+this.n33*g+this.n34*i;a.w=this.n41*c+this.n42*d+this.n43*g+this.n44*i;return a},crossVector:function(a){var c=new THREE.Vector4;c.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;c.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;c.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;c.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return c},multiply:function(a,c){var d=a.n11,g=a.n12,i=a.n13,l=a.n14,b=a.n21,r=a.n22,m=a.n23,n=a.n24,z=a.n31,
y=a.n32,w=a.n33,x=a.n34,I=a.n41,N=a.n42,M=a.n43,s=a.n44,T=c.n11,F=c.n12,Q=c.n13,f=c.n14,p=c.n21,h=c.n22,e=c.n23,o=c.n24,j=c.n31,t=c.n32,q=c.n33,k=c.n34,u=c.n41,C=c.n42,v=c.n43,O=c.n44;this.n11=d*T+g*p+i*j+l*u;this.n12=d*F+g*h+i*t+l*C;this.n13=d*Q+g*e+i*q+l*v;this.n14=d*f+g*o+i*k+l*O;this.n21=b*T+r*p+m*j+n*u;this.n22=b*F+r*h+m*t+n*C;this.n23=b*Q+r*e+m*q+n*v;this.n24=b*f+r*o+m*k+n*O;this.n31=z*T+y*p+w*j+x*u;this.n32=z*F+y*h+w*t+x*C;this.n33=z*Q+y*e+w*q+x*v;this.n34=z*f+y*o+w*k+x*O;this.n41=I*T+N*p+
M*j+s*u;this.n42=I*F+N*h+M*t+s*C;this.n43=I*Q+N*e+M*q+s*v;this.n44=I*f+N*o+M*k+s*O;return this},multiplySelf:function(a){var c=this.n11,d=this.n12,g=this.n13,i=this.n14,l=this.n21,b=this.n22,r=this.n23,m=this.n24,n=this.n31,z=this.n32,y=this.n33,w=this.n34,x=this.n41,I=this.n42,N=this.n43,M=this.n44,s=a.n11,T=a.n21,F=a.n31,Q=a.n41,f=a.n12,p=a.n22,h=a.n32,e=a.n42,o=a.n13,j=a.n23,t=a.n33,q=a.n43,k=a.n14,u=a.n24,C=a.n34;a=a.n44;this.n11=c*s+d*T+g*F+i*Q;this.n12=c*f+d*p+g*h+i*e;this.n13=c*o+d*j+g*t+i*
q;this.n14=c*k+d*u+g*C+i*a;this.n21=l*s+b*T+r*F+m*Q;this.n22=l*f+b*p+r*h+m*e;this.n23=l*o+b*j+r*t+m*q;this.n24=l*k+b*u+r*C+m*a;this.n31=n*s+z*T+y*F+w*Q;this.n32=n*f+z*p+y*h+w*e;this.n33=n*o+z*j+y*t+w*q;this.n34=n*k+z*u+y*C+w*a;this.n41=x*s+I*T+N*F+M*Q;this.n42=x*f+I*p+N*h+M*e;this.n43=x*o+I*j+N*t+M*q;this.n44=x*k+I*u+N*C+M*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=
a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){var a=this.n11,c=this.n12,d=this.n13,g=this.n14,i=this.n21,l=this.n22,b=this.n23,r=this.n24,m=this.n31,n=this.n32,z=this.n33,y=this.n34,w=this.n41,x=this.n42,I=this.n43,N=this.n44;return g*b*n*w-d*r*n*w-g*l*z*w+c*r*z*w+d*l*y*w-c*b*y*w-g*b*m*x+d*r*m*x+g*i*z*x-a*r*z*x-d*i*y*x+a*b*y*x+g*l*m*I-c*r*m*I-g*i*n*I+a*r*n*I+c*i*y*I-a*l*y*I-d*l*m*N+c*b*m*N+d*i*n*N-a*b*n*N-c*i*z*N+a*l*z*N},transpose:function(){function a(c,d,
g){var i=c[d];c[d]=c[g];c[g]=i}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){var a=this.flat;a[0]=this.n11;
a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},setTranslation:function(a,c,d){this.set(1,0,0,a,0,1,0,c,0,0,1,d,0,0,0,1);return this},setScale:function(a,c,d){this.set(a,0,0,0,0,c,0,0,0,0,d,0,0,0,0,1);return this},setRotX:function(a){var c=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,c,-a,0,0,a,c,0,0,0,0,1);return this},setRotY:function(a){var c=
Math.cos(a);a=Math.sin(a);this.set(c,0,a,0,0,1,0,0,-a,0,c,0,0,0,0,1);return this},setRotZ:function(a){var c=Math.cos(a);a=Math.sin(a);this.set(c,-a,0,0,a,c,0,0,0,0,1,0,0,0,0,1);return this},setRotAxis:function(a,c){var d=Math.cos(c),g=Math.sin(c),i=1-d,l=a.x,b=a.y,r=a.z,m=i*l,n=i*b;this.set(m*l+d,m*b-g*r,m*r+g*b,0,m*b+g*r,n*b+d,n*r-g*l,0,m*r-g*b,n*r+g*l,i*r*r+d,0,0,0,0,1);return this},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+
this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,c,d){var g=new THREE.Matrix4;g.setTranslation(a,c,d);return g};THREE.Matrix4.scaleMatrix=function(a,c,d){var g=new THREE.Matrix4;g.setScale(a,c,d);return g};THREE.Matrix4.rotationXMatrix=function(a){var c=new THREE.Matrix4;c.setRotX(a);return c};
THREE.Matrix4.rotationYMatrix=function(a){var c=new THREE.Matrix4;c.setRotY(a);return c};THREE.Matrix4.rotationZMatrix=function(a){var c=new THREE.Matrix4;c.setRotZ(a);return c};THREE.Matrix4.rotationAxisAngleMatrix=function(a,c){var d=new THREE.Matrix4;d.setRotAxis(a,c);return d};
THREE.Matrix4.makeInvert=function(a){var c=a.n11,d=a.n12,g=a.n13,i=a.n14,l=a.n21,b=a.n22,r=a.n23,m=a.n24,n=a.n31,z=a.n32,y=a.n33,w=a.n34,x=a.n41,I=a.n42,N=a.n43,M=a.n44,s=new THREE.Matrix4;s.n11=r*w*I-m*y*I+m*z*N-b*w*N-r*z*M+b*y*M;s.n12=i*y*I-g*w*I-i*z*N+d*w*N+g*z*M-d*y*M;s.n13=g*m*I-i*r*I+i*b*N-d*m*N-g*b*M+d*r*M;s.n14=i*r*z-g*m*z-i*b*y+d*m*y+g*b*w-d*r*w;s.n21=m*y*x-r*w*x-m*n*N+l*w*N+r*n*M-l*y*M;s.n22=g*w*x-i*y*x+i*n*N-c*w*N-g*n*M+c*y*M;s.n23=i*r*x-g*m*x-i*l*N+c*m*N+g*l*M-c*r*M;s.n24=g*m*n-i*r*n+
i*l*y-c*m*y-g*l*w+c*r*w;s.n31=b*w*x-m*z*x+m*n*I-l*w*I-b*n*M+l*z*M;s.n32=i*z*x-d*w*x-i*n*I+c*w*I+d*n*M-c*z*M;s.n33=g*m*x-i*b*x+i*l*I-c*m*I-d*l*M+c*b*M;s.n34=i*b*n-d*m*n-i*l*z+c*m*z+d*l*w-c*b*w;s.n41=r*z*x-b*y*x-r*n*I+l*y*I+b*n*N-l*z*N;s.n42=d*y*x-g*z*x+g*n*I-c*y*I-d*n*N+c*z*N;s.n43=g*b*x-d*r*x-g*l*I+c*r*I+d*l*N-c*b*N;s.n44=d*r*n-g*b*n+g*l*z-c*r*z-d*l*y+c*b*y;s.multiplyScalar(1/a.determinant());return s};
THREE.Matrix4.makeInvert3x3=function(a){var c=a.flatten();a=a.m33;var d=a.m,g=c[10]*c[5]-c[6]*c[9],i=-c[10]*c[1]+c[2]*c[9],l=c[6]*c[1]-c[2]*c[5],b=-c[10]*c[4]+c[6]*c[8],r=c[10]*c[0]-c[2]*c[8],m=-c[6]*c[0]+c[2]*c[4],n=c[9]*c[4]-c[5]*c[8],z=-c[9]*c[0]+c[1]*c[8],y=c[5]*c[0]-c[1]*c[4];c=c[0]*g+c[1]*b+c[2]*n;if(c==0)throw"matrix not invertible";c=1/c;d[0]=c*g;d[1]=c*i;d[2]=c*l;d[3]=c*b;d[4]=c*r;d[5]=c*m;d[6]=c*n;d[7]=c*z;d[8]=c*y;return a};
THREE.Matrix4.makeFrustum=function(a,c,d,g,i,l){var b,r,m;b=new THREE.Matrix4;r=2*i/(c-a);m=2*i/(g-d);a=(c+a)/(c-a);d=(g+d)/(g-d);g=-(l+i)/(l-i);i=-2*l*i/(l-i);b.n11=r;b.n12=0;b.n13=a;b.n14=0;b.n21=0;b.n22=m;b.n23=d;b.n24=0;b.n31=0;b.n32=0;b.n33=g;b.n34=i;b.n41=0;b.n42=0;b.n43=-1;b.n44=0;return b};THREE.Matrix4.makePerspective=function(a,c,d,g){var i;a=d*Math.tan(a*Math.PI/360);i=-a;return THREE.Matrix4.makeFrustum(i*c,a*c,i,a,d,g)};
THREE.Matrix4.makeOrtho=function(a,c,d,g,i,l){var b,r,m,n;b=new THREE.Matrix4;r=c-a;m=d-g;n=l-i;a=(c+a)/r;d=(d+g)/m;i=(l+i)/n;b.n11=2/r;b.n12=0;b.n13=0;b.n14=-a;b.n21=0;b.n22=2/m;b.n23=0;b.n24=-d;b.n31=0;b.n32=0;b.n33=-2/n;b.n34=-i;b.n41=0;b.n42=0;b.n43=0;b.n44=1;return b};THREE.Matrix4.__tmpVec1=new THREE.Vector3;THREE.Matrix4.__tmpVec2=new THREE.Vector3;THREE.Matrix4.__tmpVec3=new THREE.Vector3;
THREE.Vertex=function(a,c){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=c||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,c,d,g,i){this.a=a;this.b=c;this.c=d;this.centroid=new THREE.Vector3;this.normal=g instanceof THREE.Vector3?g:new THREE.Vector3;this.vertexNormals=g instanceof Array?g:[];this.materials=i instanceof Array?i:[i]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,c,d,g,i,l){this.a=a;this.b=c;this.c=d;this.d=g;this.centroid=new THREE.Vector3;this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3;this.vertexNormals=i instanceof Array?i:[];this.materials=l instanceof Array?l:[l]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,c){this.u=a||0;this.v=c||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.uvs2=[];this.colors=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,c,d;a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];d.centroid.set(0,0,0);if(d instanceof THREE.Face3){d.centroid.addSelf(this.vertices[d.a].position);d.centroid.addSelf(this.vertices[d.b].position);d.centroid.addSelf(this.vertices[d.c].position);d.centroid.divideScalar(3)}else if(d instanceof THREE.Face4){d.centroid.addSelf(this.vertices[d.a].position);d.centroid.addSelf(this.vertices[d.b].position);d.centroid.addSelf(this.vertices[d.c].position);
d.centroid.addSelf(this.vertices[d.d].position);d.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var c,d,g,i,l,b,r=new THREE.Vector3,m=new THREE.Vector3;g=0;for(i=this.vertices.length;g<i;g++){l=this.vertices[g];l.normal.set(0,0,0)}g=0;for(i=this.faces.length;g<i;g++){l=this.faces[g];if(a&&l.vertexNormals.length){r.set(0,0,0);c=0;for(d=l.normal.length;c<d;c++)r.addSelf(l.vertexNormals[c]);r.divideScalar(3)}else{c=this.vertices[l.a];d=this.vertices[l.b];b=this.vertices[l.c];r.sub(b.position,
d.position);m.sub(c.position,d.position);r.crossSelf(m)}r.isZero()||r.normalize();l.normal.copy(r)}},computeVertexNormals:function(){var a,c,d,g;if(this.__tmpVertices==undefined){g=this.__tmpVertices=Array(this.vertices.length);a=0;for(c=this.vertices.length;a<c;a++)g[a]=new THREE.Vector3;a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];if(d instanceof THREE.Face3)d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(d instanceof THREE.Face4)d.vertexNormals=[new THREE.Vector3,
new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}}else{g=this.__tmpVertices;a=0;for(c=this.vertices.length;a<c;a++)g[a].set(0,0,0)}a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];if(d instanceof THREE.Face3){g[d.a].addSelf(d.normal);g[d.b].addSelf(d.normal);g[d.c].addSelf(d.normal)}else if(d instanceof THREE.Face4){g[d.a].addSelf(d.normal);g[d.b].addSelf(d.normal);g[d.c].addSelf(d.normal);g[d.d].addSelf(d.normal)}}a=0;for(c=this.vertices.length;a<c;a++)g[a].normalize();a=0;for(c=this.faces.length;a<
c;a++){d=this.faces[a];if(d instanceof THREE.Face3){d.vertexNormals[0].copy(g[d.a]);d.vertexNormals[1].copy(g[d.b]);d.vertexNormals[2].copy(g[d.c])}else if(d instanceof THREE.Face4){d.vertexNormals[0].copy(g[d.a]);d.vertexNormals[1].copy(g[d.b]);d.vertexNormals[2].copy(g[d.c]);d.vertexNormals[3].copy(g[d.d])}}},computeTangents:function(){function a(k,u,C,v,O,G,D){l=k.vertices[u].position;b=k.vertices[C].position;r=k.vertices[v].position;m=i[O];n=i[G];z=i[D];y=b.x-l.x;w=r.x-l.x;x=b.y-l.y;I=r.y-l.y;
N=b.z-l.z;M=r.z-l.z;s=n.u-m.u;T=z.u-m.u;F=n.v-m.v;Q=z.v-m.v;f=1/(s*Q-T*F);e.set((Q*y-F*w)*f,(Q*x-F*I)*f,(Q*N-F*M)*f);o.set((s*w-T*y)*f,(s*I-T*x)*f,(s*M-T*N)*f);p[u].addSelf(e);p[C].addSelf(e);p[v].addSelf(e);h[u].addSelf(o);h[C].addSelf(o);h[v].addSelf(o)}var c,d,g,i,l,b,r,m,n,z,y,w,x,I,N,M,s,T,F,Q,f,p=[],h=[],e=new THREE.Vector3,o=new THREE.Vector3,j=new THREE.Vector3,t=new THREE.Vector3,q=new THREE.Vector3;c=0;for(d=this.vertices.length;c<d;c++){p[c]=new THREE.Vector3;h[c]=new THREE.Vector3}c=0;
for(d=this.faces.length;c<d;c++){g=this.faces[c];i=this.uvs[c];if(g instanceof THREE.Face3){a(this,g.a,g.b,g.c,0,1,2);this.vertices[g.a].normal.copy(g.vertexNormals[0]);this.vertices[g.b].normal.copy(g.vertexNormals[1]);this.vertices[g.c].normal.copy(g.vertexNormals[2])}else if(g instanceof THREE.Face4){a(this,g.a,g.b,g.c,0,1,2);a(this,g.a,g.b,g.d,0,1,3);this.vertices[g.a].normal.copy(g.vertexNormals[0]);this.vertices[g.b].normal.copy(g.vertexNormals[1]);this.vertices[g.c].normal.copy(g.vertexNormals[2]);
this.vertices[g.d].normal.copy(g.vertexNormals[3])}}c=0;for(d=this.vertices.length;c<d;c++){q.copy(this.vertices[c].normal);g=p[c];j.copy(g);j.subSelf(q.multiplyScalar(q.dot(g))).normalize();t.cross(this.vertices[c].normal,g);g=t.dot(h[c]);g=g<0?-1:1;this.vertices[c].tangent.set(j.x,j.y,j.z,g)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],
z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var c=1,d=this.vertices.length;c<d;c++){a=this.vertices[c];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>
this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,c=0,d=this.vertices.length;c<d;c++)a=Math.max(a,this.vertices[c].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(z){var y=[];c=0;for(d=z.length;c<d;c++)z[c]==undefined?y.push("undefined"):y.push(z[c].toString());return y.join("_")}var c,d,g,i,l,b,r,m,n={};g=0;for(i=this.faces.length;g<i;g++){l=this.faces[g];
b=l.materials;r=a(b);if(n[r]==undefined)n[r]={hash:r,counter:0};m=n[r].hash+"_"+n[r].counter;if(this.geometryChunks[m]==undefined)this.geometryChunks[m]={faces:[],materials:b,vertices:0};l=l instanceof THREE.Face3?3:4;if(this.geometryChunks[m].vertices+l>65535){n[r].counter+=1;m=n[r].hash+"_"+n[r].counter;if(this.geometryChunks[m]==undefined)this.geometryChunks[m]={faces:[],materials:b,vertices:0}}this.geometryChunks[m].faces.push(g);this.geometryChunks[m].vertices+=l}},toString:function(){return"THREE.Geometry ( vertices: "+
this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,c,d,g){this.fov=a;this.aspect=c;this.near=d;this.far=g;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.tmpVec=new THREE.Vector3;this.translateX=function(i){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(i);this.tmpVec.crossSelf(this.up);this.position.addSelf(this.tmpVec);this.target.position.addSelf(this.tmpVec)};
this.translateZ=function(i){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(i);this.position.subSelf(this.tmpVec);this.target.position.subSelf(this.tmpVec)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};
THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=c||1};THREE.DirectionalLight.prototype=new THREE.Light;
THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=c||1};THREE.PointLight.prototype=new THREE.Light;THREE.PointLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.tmpMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){var a=this.position,c=this.rotation,d=this.scale,g=this.tmpMatrix;this.matrix.setTranslation(a.x,a.y,a.z);this.rotationMatrix.setRotX(c.x);if(c.y!=0){g.setRotY(c.y);this.rotationMatrix.multiplySelf(g)}if(c.z!=0){g.setRotZ(c.z);this.rotationMatrix.multiplySelf(g)}this.matrix.multiplySelf(this.rotationMatrix);if(d.x!=0||d.y!=0||d.z!=0){g.setScale(d.x,d.y,d.z);this.matrix.multiplySelf(g)}}};THREE.Object3DCounter={value:0};
THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.sortParticles=false};THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;
THREE.Line=function(a,c,d){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.type=d!=undefined?d:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;THREE.Mesh=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};
THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;THREE.BillboardBlending=3;
THREE.LineBasicMaterial=function(a){this.id=THREE.LineBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.depth_test=true;this.linewidth=1;this.linejoin=this.linecap="round";this.vertex_colors=false;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.linewidth!==undefined)this.linewidth=
a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin;if(a.vertex_colors!==undefined)this.vertex_colors=a.vertex_colors}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>vertex_colors: "+this.vertex_colors+"<br/>)"}};THREE.LineBasicMaterialCounter={value:0};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.opacity=1;this.env_map=this.light_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.depth_test=true;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";this.vertex_colors=false;if(a){a.color!==
undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.map!==undefined)this.map=a.map;if(a.light_map!==undefined)this.light_map=a.light_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==
undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin;if(a.vertex_colors!==undefined)this.vertex_colors=a.vertex_colors}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>map: "+this.map+"<br/>light_map: "+this.light_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+
"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>vertex_colors: "+this.vertex_colors+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.opacity=1;this.env_map=this.light_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.depth_test=true;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";this.vertex_colors=false;if(a){a.color!==
undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.map!==undefined)this.map=a.map;if(a.light_map!==undefined)this.light_map=a.light_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==
undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin;if(a.vertex_colors!==undefined)this.vertex_colors=a.vertex_colors}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>map: "+this.map+"<br/>light_map: "+this.light_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>wireframe: "+this.wireframe+
"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>vertex_colors: "+this.vertex_colors+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.opacity=1;this.env_map=this.light_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.depth_test=true;this.wireframe=false;this.wireframe_linewidth=
1;this.wireframe_linejoin=this.wireframe_linecap="round";this.vertex_colors=false;if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.light_map!==undefined)this.light_map=a.light_map;if(a.map!==undefined)this.map=a.map;if(a.env_map!==undefined)this.env_map=
a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=
a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin;if(a.vertex_colors!==undefined)this.vertex_colors=a.vertex_colors}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>opacity: "+this.opacity+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>depth_test: "+
this.depth_test+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>vertex_colors: "+this.vertex_colors+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.id=THREE.MeshDepthMaterialCounter.value++;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.depth_test=true;this.wireframe=false;this.wireframe_linewidth=1;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial (<br/>id: "+this.id+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>)"}};THREE.MeshDepthMaterialCounter={value:0};
THREE.MeshNormalMaterial=function(a){this.id=THREE.MeshNormalMaterialCounter.value++;this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;this.depth_test=true;this.wireframe=false;this.wireframe_linewidth=1;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial (<br/>id: "+this.id+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>)"}};THREE.MeshNormalMaterialCounter={value:0};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.depth_test=true;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";this.vertex_colors=false;if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=
a.vertex_shader;if(a.uniforms!==undefined)this.uniforms=a.uniforms;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==
undefined)this.wireframe_linejoin=a.wireframe_linejoin;if(a.vertex_colors!==undefined)this.vertex_colors=a.vertex_colors}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>vertex_colors: "+this.vertex_colors+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.id=THREE.ParticleBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.opacity=1;this.map=null;this.size=1;this.blending=THREE.NormalBlending;this.depth_test=true;this.offset=new THREE.Vector2;this.vertex_colors=false;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.map!==undefined)this.map=a.map;if(a.size!==undefined)this.size=a.size;if(a.blending!==undefined)this.blending=a.blending;
if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.vertex_colors!==undefined)this.vertex_colors=a.vertex_colors}};THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>map: "+this.map+"<br/>size: "+this.size+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>vertex_colors: "+this.vertex_colors+"<br/>)"}};THREE.ParticleBasicMaterialCounter={value:0};
THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};
THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};THREE.Texture=function(a,c,d,g,i,l){this.image=a;this.mapping=c!==undefined?c:new THREE.UVMapping;this.wrap_s=d!==undefined?d:THREE.ClampToEdgeWrapping;this.wrap_t=g!==undefined?g:THREE.ClampToEdgeWrapping;this.mag_filter=i!==undefined?i:THREE.LinearFilter;this.min_filter=l!==undefined?l:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;
THREE.RenderTarget=function(a,c,d){this.width=a;this.height=c;d=d||{};this.wrap_s=d.wrap_s!==undefined?d.wrap_s:THREE.ClampToEdgeWrapping;this.wrap_t=d.wrap_t!==undefined?d.wrap_t:THREE.ClampToEdgeWrapping;this.mag_filter=d.mag_filter!==undefined?d.mag_filter:THREE.LinearFilter;this.min_filter=d.min_filter!==undefined?d.min_filter:THREE.LinearMipMapLinearFilter;this.format=d.format!==undefined?d.format:THREE.RGBFormat;this.type=d.type!==undefined?d.type:THREE.UnsignedByteType};
var Uniforms={clone:function(a){var c,d,g,i={};for(c in a){i[c]={};for(d in a[c]){g=a[c][d];i[c][d]=g instanceof THREE.Color||g instanceof THREE.Vector3||g instanceof THREE.Texture?g.clone():g}}return i},merge:function(a){var c,d,g,i={};for(c=0;c<a.length;c++){g=this.clone(a[c]);for(d in g)i[d]=g[d]}return i}};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,c,d){this.color=new THREE.Color(a);this.near=c||1;this.far=d||1E3};THREE.FogExp2=function(a,c){this.color=new THREE.Color(a);this.density=c||2.5E-4};
THREE.Projector=function(){function a(h,e){return e.z-h.z}function c(h,e){var o=0,j=1,t=h.z+h.w,q=e.z+e.w,k=-h.z+h.w,u=-e.z+e.w;if(t>=0&&q>=0&&k>=0&&u>=0)return true;else if(t<0&&q<0||k<0&&u<0)return false;else{if(t<0)o=Math.max(o,t/(t-q));else if(q<0)j=Math.min(j,t/(t-q));if(k<0)o=Math.max(o,k/(k-u));else if(u<0)j=Math.min(j,k/(k-u));if(j<o)return false;else{h.lerpSelf(e,o);e.lerpSelf(h,1-j);return true}}}var d,g,i=[],l,b,r,m=[],n,z,y=[],w,x,I=[],N=new THREE.Vector4,M=new THREE.Vector4,s=new THREE.Matrix4,
T=new THREE.Matrix4,F=[],Q=new THREE.Vector4,f=new THREE.Vector4,p;this.projectObjects=function(h,e,o){var j=[],t,q;g=0;s.multiply(e.projectionMatrix,e.matrix);F[0]=new THREE.Vector4(s.n41-s.n11,s.n42-s.n12,s.n43-s.n13,s.n44-s.n14);F[1]=new THREE.Vector4(s.n41+s.n11,s.n42+s.n12,s.n43+s.n13,s.n44+s.n14);F[2]=new THREE.Vector4(s.n41+s.n21,s.n42+s.n22,s.n43+s.n23,s.n44+s.n24);F[3]=new THREE.Vector4(s.n41-s.n21,s.n42-s.n22,s.n43-s.n23,s.n44-s.n24);F[4]=new THREE.Vector4(s.n41-s.n31,s.n42-s.n32,s.n43-
s.n33,s.n44-s.n34);F[5]=new THREE.Vector4(s.n41+s.n31,s.n42+s.n32,s.n43+s.n33,s.n44+s.n34);e=0;for(t=F.length;e<t;e++){q=F[e];q.divideScalar(Math.sqrt(q.x*q.x+q.y*q.y+q.z*q.z))}t=h.objects;h=0;for(e=t.length;h<e;h++){q=t[h];var k;if(!(k=!q.visible)){if(k=q instanceof THREE.Mesh){a:{k=void 0;for(var u=q.position,C=-q.geometry.boundingSphere.radius*Math.max(q.scale.x,Math.max(q.scale.y,q.scale.z)),v=0;v<6;v++){k=F[v].x*u.x+F[v].y*u.y+F[v].z*u.z+F[v].w;if(k<=C){k=false;break a}}k=true}k=!k}k=k}if(!k){d=
i[g]=i[g]||new THREE.RenderableObject;N.copy(q.position);s.multiplyVector3(N);d.object=q;d.z=N.z;j.push(d);g++}}o&&j.sort(a);return j};this.projectScene=function(h,e,o){var j=[],t=e.near,q=e.far,k,u,C,v,O,G,D,V,U,J,H,K,P,A,L,X;r=z=x=0;e.autoUpdateMatrix&&e.updateMatrix();s.multiply(e.projectionMatrix,e.matrix);G=this.projectObjects(h,e,true);h=0;for(k=G.length;h<k;h++){D=G[h].object;if(D.visible){D.autoUpdateMatrix&&D.updateMatrix();V=D.matrix;U=D.rotationMatrix;J=D.materials;H=D.overdraw;if(D instanceof
THREE.Mesh){K=D.geometry;P=K.vertices;u=0;for(C=P.length;u<C;u++){A=P[u];A.positionWorld.copy(A.position);V.multiplyVector3(A.positionWorld);v=A.positionScreen;v.copy(A.positionWorld);s.multiplyVector4(v);v.x/=v.w;v.y/=v.w;A.__visible=v.z>t&&v.z<q}K=K.faces;u=0;for(C=K.length;u<C;u++){A=K[u];if(A instanceof THREE.Face3){v=P[A.a];O=P[A.b];L=P[A.c];if(v.__visible&&O.__visible&&L.__visible)if(D.doubleSided||D.flipSided!=(L.positionScreen.x-v.positionScreen.x)*(O.positionScreen.y-v.positionScreen.y)-
(L.positionScreen.y-v.positionScreen.y)*(O.positionScreen.x-v.positionScreen.x)<0){l=m[r]=m[r]||new THREE.RenderableFace3;l.v1.positionWorld.copy(v.positionWorld);l.v2.positionWorld.copy(O.positionWorld);l.v3.positionWorld.copy(L.positionWorld);l.v1.positionScreen.copy(v.positionScreen);l.v2.positionScreen.copy(O.positionScreen);l.v3.positionScreen.copy(L.positionScreen);l.normalWorld.copy(A.normal);U.multiplyVector3(l.normalWorld);l.centroidWorld.copy(A.centroid);V.multiplyVector3(l.centroidWorld);
l.centroidScreen.copy(l.centroidWorld);s.multiplyVector3(l.centroidScreen);L=A.vertexNormals;p=l.vertexNormalsWorld;v=0;for(O=L.length;v<O;v++){X=p[v]=p[v]||new THREE.Vector3;X.copy(L[v]);U.multiplyVector3(X)}l.z=l.centroidScreen.z;l.meshMaterials=J;l.faceMaterials=A.materials;l.overdraw=H;if(D.geometry.uvs[u]){l.uvs[0]=D.geometry.uvs[u][0];l.uvs[1]=D.geometry.uvs[u][1];l.uvs[2]=D.geometry.uvs[u][2]}j.push(l);r++}}else if(A instanceof THREE.Face4){v=P[A.a];O=P[A.b];L=P[A.c];X=P[A.d];if(v.__visible&&
O.__visible&&L.__visible&&X.__visible)if(D.doubleSided||D.flipSided!=((X.positionScreen.x-v.positionScreen.x)*(O.positionScreen.y-v.positionScreen.y)-(X.positionScreen.y-v.positionScreen.y)*(O.positionScreen.x-v.positionScreen.x)<0||(O.positionScreen.x-L.positionScreen.x)*(X.positionScreen.y-L.positionScreen.y)-(O.positionScreen.y-L.positionScreen.y)*(X.positionScreen.x-L.positionScreen.x)<0)){l=m[r]=m[r]||new THREE.RenderableFace3;l.v1.positionWorld.copy(v.positionWorld);l.v2.positionWorld.copy(O.positionWorld);
l.v3.positionWorld.copy(X.positionWorld);l.v1.positionScreen.copy(v.positionScreen);l.v2.positionScreen.copy(O.positionScreen);l.v3.positionScreen.copy(X.positionScreen);l.normalWorld.copy(A.normal);U.multiplyVector3(l.normalWorld);l.centroidWorld.copy(A.centroid);V.multiplyVector3(l.centroidWorld);l.centroidScreen.copy(l.centroidWorld);s.multiplyVector3(l.centroidScreen);l.z=l.centroidScreen.z;l.meshMaterials=J;l.faceMaterials=A.materials;l.overdraw=H;if(D.geometry.uvs[u]){l.uvs[0]=D.geometry.uvs[u][0];
l.uvs[1]=D.geometry.uvs[u][1];l.uvs[2]=D.geometry.uvs[u][3]}j.push(l);r++;b=m[r]=m[r]||new THREE.RenderableFace3;b.v1.positionWorld.copy(O.positionWorld);b.v2.positionWorld.copy(L.positionWorld);b.v3.positionWorld.copy(X.positionWorld);b.v1.positionScreen.copy(O.positionScreen);b.v2.positionScreen.copy(L.positionScreen);b.v3.positionScreen.copy(X.positionScreen);b.normalWorld.copy(l.normalWorld);b.centroidWorld.copy(l.centroidWorld);b.centroidScreen.copy(l.centroidScreen);b.z=b.centroidScreen.z;b.meshMaterials=
J;b.faceMaterials=A.materials;b.overdraw=H;if(D.geometry.uvs[u]){b.uvs[0]=D.geometry.uvs[u][1];b.uvs[1]=D.geometry.uvs[u][2];b.uvs[2]=D.geometry.uvs[u][3]}j.push(b);r++}}}}else if(D instanceof THREE.Line){T.multiply(s,V);P=D.geometry.vertices;A=P[0];A.positionScreen.copy(A.position);T.multiplyVector4(A.positionScreen);u=1;for(C=P.length;u<C;u++){v=P[u];v.positionScreen.copy(v.position);T.multiplyVector4(v.positionScreen);O=P[u-1];Q.copy(v.positionScreen);f.copy(O.positionScreen);if(c(Q,f)){Q.multiplyScalar(1/
Q.w);f.multiplyScalar(1/f.w);n=y[z]=y[z]||new THREE.RenderableLine;n.v1.positionScreen.copy(Q);n.v2.positionScreen.copy(f);n.z=Math.max(Q.z,f.z);n.materials=D.materials;j.push(n);z++}}}else if(D instanceof THREE.Particle){M.set(D.position.x,D.position.y,D.position.z,1);s.multiplyVector4(M);M.z/=M.w;if(M.z>0&&M.z<1){w=I[x]=I[x]||new THREE.RenderableParticle;w.x=M.x/M.w;w.y=M.y/M.w;w.z=M.z;w.rotation=D.rotation.z;w.scale.x=D.scale.x*Math.abs(w.x-(M.x+e.projectionMatrix.n11)/(M.w+e.projectionMatrix.n14));
w.scale.y=D.scale.y*Math.abs(w.y-(M.y+e.projectionMatrix.n22)/(M.w+e.projectionMatrix.n24));w.materials=D.materials;j.push(w);x++}}}}o&&j.sort(a);return j};this.unprojectVector=function(h,e){var o=THREE.Matrix4.makeInvert(e.matrix);o.multiplySelf(THREE.Matrix4.makeInvert(e.projectionMatrix));o.multiplyVector3(h);return h}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,c=new THREE.Projector,d,g,i,l;this.domElement=document.createElement("div");this.setSize=function(b,r){d=b;g=r;i=d/2;l=g/2};this.render=function(b,r){var m,n,z,y,w,x,I,N;a=c.projectScene(b,r);m=0;for(n=a.length;m<n;m++){w=a[m];if(w instanceof THREE.RenderableParticle){I=w.x*i+i;N=w.y*l+l;z=0;for(y=w.material.length;z<y;z++){x=w.material[z];if(x instanceof THREE.ParticleDOMMaterial){x=x.domElement;x.style.left=I+"px";x.style.top=N+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(aa){if(w!=aa)n.globalAlpha=w=aa}function c(aa){if(x!=aa){switch(aa){case THREE.NormalBlending:n.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:n.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:n.globalCompositeOperation="darker"}x=aa}}var d=null,g=new THREE.Projector,i=document.createElement("canvas"),l,b,r,m,n=i.getContext("2d"),z=new THREE.Color(0),y=0,w=1,x=0,I=null,N=null,M=1,s,T,F,Q,f,p,h,e,o,j=new THREE.Color,
t=new THREE.Color,q=new THREE.Color,k=new THREE.Color,u=new THREE.Color,C,v,O,G,D,V,U,J,H,K=new THREE.Rectangle,P=new THREE.Rectangle,A=new THREE.Rectangle,L=false,X=new THREE.Color,ga=new THREE.Color,da=new THREE.Color,Y=new THREE.Color,ba=Math.PI*2,Z=new THREE.Vector3,ea,wa,ha,ia,sa,pa,qa=16;ea=document.createElement("canvas");ea.width=ea.height=2;wa=ea.getContext("2d");wa.fillStyle="rgba(0,0,0,1)";wa.fillRect(0,0,2,2);ha=wa.getImageData(0,0,2,2);ia=ha.data;sa=document.createElement("canvas");sa.width=
sa.height=qa;pa=sa.getContext("2d");pa.translate(-qa/2,-qa/2);pa.scale(qa,qa);qa--;this.domElement=i;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(aa,ma){l=aa;b=ma;r=l/2;m=b/2;i.width=l;i.height=b;K.set(-r,-m,r,m);w=1;x=0;N=I=null;M=1};this.setClearColor=function(aa,ma){z=aa;y=ma;P.set(-r,-m,r,m);n.setTransform(1,0,0,-1,r,m);this.clear()};this.setClearColorHex=function(aa,ma){z.setHex(aa);y=ma;P.set(-r,-m,r,m);n.setTransform(1,0,0,-1,r,m);this.clear()};this.clear=function(){n.setTransform(1,
0,0,-1,r,m);if(!P.isEmpty()){P.inflate(1);P.minSelf(K);if(z.hex==0&&y==0)n.clearRect(P.getX(),P.getY(),P.getWidth(),P.getHeight());else{c(THREE.NormalBlending);a(1);n.fillStyle="rgba("+Math.floor(z.r*255)+","+Math.floor(z.g*255)+","+Math.floor(z.b*255)+","+y+")";n.fillRect(P.getX(),P.getY(),P.getWidth(),P.getHeight())}P.empty()}};this.render=function(aa,ma){function ka(B){var W,S,E,R=B.lights;ga.setRGB(0,0,0);da.setRGB(0,0,0);Y.setRGB(0,0,0);B=0;for(W=R.length;B<W;B++){S=R[B];E=S.color;if(S instanceof
THREE.AmbientLight){ga.r+=E.r;ga.g+=E.g;ga.b+=E.b}else if(S instanceof THREE.DirectionalLight){da.r+=E.r;da.g+=E.g;da.b+=E.b}else if(S instanceof THREE.PointLight){Y.r+=E.r;Y.g+=E.g;Y.b+=E.b}}}function xa(B,W,S,E){var R,$,fa,ja,la=B.lights;B=0;for(R=la.length;B<R;B++){$=la[B];fa=$.color;ja=$.intensity;if($ instanceof THREE.DirectionalLight){$=S.dot($.position)*ja;if($>0){E.r+=fa.r*$;E.g+=fa.g*$;E.b+=fa.b*$}}else if($ instanceof THREE.PointLight){Z.sub($.position,W);Z.normalize();$=S.dot(Z)*ja;if($>
0){E.r+=fa.r*$;E.g+=fa.g*$;E.b+=fa.b*$}}}}function Ga(B,W,S){if(S.opacity!=0){a(S.opacity);c(S.blending);var E,R,$,fa,ja,la;if(S instanceof THREE.ParticleBasicMaterial){if(S.map&&S.map.image.loaded){fa=S.map.image;ja=fa.width>>1;la=fa.height>>1;R=W.scale.x*r;$=W.scale.y*m;S=R*ja;E=$*la;A.set(B.x-S,B.y-E,B.x+S,B.y+E);if(!K.instersects(A))return;n.save();n.translate(B.x,B.y);n.rotate(-W.rotation);n.scale(R,-$);n.translate(-ja,-la);n.drawImage(fa,0,0);n.restore()}n.beginPath();n.moveTo(B.x-10,B.y);n.lineTo(B.x+
10,B.y);n.moveTo(B.x,B.y-10);n.lineTo(B.x,B.y+10);n.closePath();n.strokeStyle="rgb(255,255,0)";n.stroke()}else if(S instanceof THREE.ParticleCircleMaterial){if(L){X.r=ga.r+da.r+Y.r;X.g=ga.g+da.g+Y.g;X.b=ga.b+da.b+Y.b;j.r=S.color.r*X.r;j.g=S.color.g*X.g;j.b=S.color.b*X.b;j.updateStyleString()}else j.__styleString=S.color.__styleString;S=W.scale.x*r;E=W.scale.y*m;A.set(B.x-S,B.y-E,B.x+S,B.y+E);if(K.instersects(A)){R=j.__styleString;if(N!=R)n.fillStyle=N=R;n.save();n.translate(B.x,B.y);n.rotate(-W.rotation);
n.scale(S,E);n.beginPath();n.arc(0,0,1,0,ba,true);n.closePath();n.fill();n.restore()}}}}function Ha(B,W,S,E){if(E.opacity!=0){a(E.opacity);c(E.blending);n.beginPath();n.moveTo(B.positionScreen.x,B.positionScreen.y);n.lineTo(W.positionScreen.x,W.positionScreen.y);n.closePath();if(E instanceof THREE.LineBasicMaterial){j.__styleString=E.color.__styleString;B=E.linewidth;if(M!=B)n.lineWidth=M=B;B=j.__styleString;if(I!=B)n.strokeStyle=I=B;n.stroke();A.inflate(E.linewidth*2)}}}function Da(B,W,S,E,R,$){if(R.opacity!=
0){a(R.opacity);c(R.blending);Q=B.positionScreen.x;f=B.positionScreen.y;p=W.positionScreen.x;h=W.positionScreen.y;e=S.positionScreen.x;o=S.positionScreen.y;n.beginPath();n.moveTo(Q,f);n.lineTo(p,h);n.lineTo(e,o);n.lineTo(Q,f);n.closePath();if(R instanceof THREE.MeshBasicMaterial)if(R.map)R.map.image.loaded&&R.map.mapping instanceof THREE.UVMapping&&Aa(Q,f,p,h,e,o,R.map.image,E.uvs[0].u,E.uvs[0].v,E.uvs[1].u,E.uvs[1].v,E.uvs[2].u,E.uvs[2].v);else if(R.env_map){if(R.env_map.image.loaded)if(R.env_map.mapping instanceof
THREE.SphericalReflectionMapping){B=ma.matrix;Z.copy(E.vertexNormalsWorld[0]);G=(Z.x*B.n11+Z.y*B.n12+Z.z*B.n13)*0.5+0.5;D=-(Z.x*B.n21+Z.y*B.n22+Z.z*B.n23)*0.5+0.5;Z.copy(E.vertexNormalsWorld[1]);V=(Z.x*B.n11+Z.y*B.n12+Z.z*B.n13)*0.5+0.5;U=-(Z.x*B.n21+Z.y*B.n22+Z.z*B.n23)*0.5+0.5;Z.copy(E.vertexNormalsWorld[2]);J=(Z.x*B.n11+Z.y*B.n12+Z.z*B.n13)*0.5+0.5;H=-(Z.x*B.n21+Z.y*B.n22+Z.z*B.n23)*0.5+0.5;Aa(Q,f,p,h,e,o,R.env_map.image,G,D,V,U,J,H)}}else R.wireframe?na(R.color.__styleString,R.wireframe_linewidth):
Ea(R.color.__styleString);else if(R instanceof THREE.MeshLambertMaterial){if(R.map&&!R.wireframe){R.map.mapping instanceof THREE.UVMapping&&Aa(Q,f,p,h,e,o,R.map.image,E.uvs[0].u,E.uvs[0].v,E.uvs[1].u,E.uvs[1].v,E.uvs[2].u,E.uvs[2].v);c(THREE.SubtractiveBlending)}if(L)if(!R.wireframe&&R.shading==THREE.SmoothShading&&E.vertexNormalsWorld.length==3){t.r=q.r=k.r=ga.r;t.g=q.g=k.g=ga.g;t.b=q.b=k.b=ga.b;xa($,E.v1.positionWorld,E.vertexNormalsWorld[0],t);xa($,E.v2.positionWorld,E.vertexNormalsWorld[1],q);
xa($,E.v3.positionWorld,E.vertexNormalsWorld[2],k);u.r=(q.r+k.r)*0.5;u.g=(q.g+k.g)*0.5;u.b=(q.b+k.b)*0.5;O=Ma(t,q,k,u);Aa(Q,f,p,h,e,o,O,0,0,1,0,0,1)}else{X.r=ga.r;X.g=ga.g;X.b=ga.b;xa($,E.centroidWorld,E.normalWorld,X);j.r=R.color.r*X.r;j.g=R.color.g*X.g;j.b=R.color.b*X.b;j.updateStyleString();R.wireframe?na(j.__styleString,R.wireframe_linewidth):Ea(j.__styleString)}else R.wireframe?na(R.color.__styleString,R.wireframe_linewidth):Ea(R.color.__styleString)}else if(R instanceof THREE.MeshDepthMaterial){C=
ma.near;v=ma.far;t.r=t.g=t.b=1-Ia(B.positionScreen.z,C,v);q.r=q.g=q.b=1-Ia(W.positionScreen.z,C,v);k.r=k.g=k.b=1-Ia(S.positionScreen.z,C,v);u.r=(q.r+k.r)*0.5;u.g=(q.g+k.g)*0.5;u.b=(q.b+k.b)*0.5;O=Ma(t,q,k,u);Aa(Q,f,p,h,e,o,O,0,0,1,0,0,1)}else if(R instanceof THREE.MeshNormalMaterial){j.r=Ja(E.normalWorld.x);j.g=Ja(E.normalWorld.y);j.b=Ja(E.normalWorld.z);j.updateStyleString();R.wireframe?na(j.__styleString,R.wireframe_linewidth):Ea(j.__styleString)}}}function na(B,W){if(I!=B)n.strokeStyle=I=B;if(M!=
W)n.lineWidth=M=W;n.stroke();A.inflate(W*2)}function Ea(B){if(N!=B)n.fillStyle=N=B;n.fill()}function Aa(B,W,S,E,R,$,fa,ja,la,ta,oa,ua,Ba){var ya,va;ya=fa.width-1;va=fa.height-1;ja*=ya;la*=va;ta*=ya;oa*=va;ua*=ya;Ba*=va;S-=B;E-=W;R-=B;$-=W;ta-=ja;oa-=la;ua-=ja;Ba-=la;va=1/(ta*Ba-ua*oa);ya=(Ba*S-oa*R)*va;oa=(Ba*E-oa*$)*va;S=(ta*R-ua*S)*va;E=(ta*$-ua*E)*va;B=B-ya*ja-S*la;W=W-oa*ja-E*la;n.save();n.transform(ya,oa,S,E,B,W);n.clip();n.drawImage(fa,0,0);n.restore()}function Ma(B,W,S,E){var R=~~(B.r*255),
$=~~(B.g*255);B=~~(B.b*255);var fa=~~(W.r*255),ja=~~(W.g*255);W=~~(W.b*255);var la=~~(S.r*255),ta=~~(S.g*255);S=~~(S.b*255);var oa=~~(E.r*255),ua=~~(E.g*255);E=~~(E.b*255);ia[0]=R<0?0:R>255?255:R;ia[1]=$<0?0:$>255?255:$;ia[2]=B<0?0:B>255?255:B;ia[4]=fa<0?0:fa>255?255:fa;ia[5]=ja<0?0:ja>255?255:ja;ia[6]=W<0?0:W>255?255:W;ia[8]=la<0?0:la>255?255:la;ia[9]=ta<0?0:ta>255?255:ta;ia[10]=S<0?0:S>255?255:S;ia[12]=oa<0?0:oa>255?255:oa;ia[13]=ua<0?0:ua>255?255:ua;ia[14]=E<0?0:E>255?255:E;wa.putImageData(ha,
0,0);pa.drawImage(ea,0,0);return sa}function Ia(B,W,S){B=(B-W)/(S-W);return B*B*(3-2*B)}function Ja(B){B=(B+1)*0.5;return B<0?0:B>1?1:B}function Ka(B,W){var S=W.x-B.x,E=W.y-B.y,R=1/Math.sqrt(S*S+E*E);S*=R;E*=R;W.x+=S;W.y+=E;B.x-=S;B.y-=E}var Fa,Na,ca,ra,za,La,Oa,Ca;this.autoClear?this.clear():n.setTransform(1,0,0,-1,r,m);d=g.projectScene(aa,ma,this.sortElements);n.fillStyle="rgba( 0, 255, 255, 0.5 )";n.fillRect(K.getX(),K.getY(),K.getWidth(),K.getHeight());(L=aa.lights.length>0)&&ka(aa);Fa=0;for(Na=
d.length;Fa<Na;Fa++){ca=d[Fa];A.empty();if(ca instanceof THREE.RenderableParticle){s=ca;s.x*=r;s.y*=m;ra=0;for(za=ca.materials.length;ra<za;ra++)Ga(s,ca,ca.materials[ra],aa)}else if(ca instanceof THREE.RenderableLine){s=ca.v1;T=ca.v2;s.positionScreen.x*=r;s.positionScreen.y*=m;T.positionScreen.x*=r;T.positionScreen.y*=m;A.addPoint(s.positionScreen.x,s.positionScreen.y);A.addPoint(T.positionScreen.x,T.positionScreen.y);if(K.instersects(A)){ra=0;for(za=ca.materials.length;ra<za;)Ha(s,T,ca,ca.materials[ra++],
aa)}}else if(ca instanceof THREE.RenderableFace3){s=ca.v1;T=ca.v2;F=ca.v3;s.positionScreen.x*=r;s.positionScreen.y*=m;T.positionScreen.x*=r;T.positionScreen.y*=m;F.positionScreen.x*=r;F.positionScreen.y*=m;if(ca.overdraw){Ka(s.positionScreen,T.positionScreen);Ka(T.positionScreen,F.positionScreen);Ka(F.positionScreen,s.positionScreen)}A.add3Points(s.positionScreen.x,s.positionScreen.y,T.positionScreen.x,T.positionScreen.y,F.positionScreen.x,F.positionScreen.y);if(K.instersects(A)){ra=0;for(za=ca.meshMaterials.length;ra<
za;){Ca=ca.meshMaterials[ra++];if(Ca instanceof THREE.MeshFaceMaterial){La=0;for(Oa=ca.faceMaterials.length;La<Oa;)(Ca=ca.faceMaterials[La++])&&Da(s,T,F,ca,Ca,aa)}else Da(s,T,F,ca,Ca,aa)}}}P.addRectangle(A)}n.lineWidth=1;n.strokeStyle="rgba( 255, 0, 0, 0.5 )";n.strokeRect(P.getX(),P.getY(),P.getWidth(),P.getHeight());n.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(G,D,V){var U,J,H,K;U=0;for(J=G.lights.length;U<J;U++){H=G.lights[U];if(H instanceof THREE.DirectionalLight){K=D.normalWorld.dot(H.position)*H.intensity;if(K>0){V.r+=H.color.r*K;V.g+=H.color.g*K;V.b+=H.color.b*K}}else if(H instanceof THREE.PointLight){o.sub(H.position,D.centroidWorld);o.normalize();K=D.normalWorld.dot(o)*H.intensity;if(K>0){V.r+=H.color.r*K;V.g+=H.color.g*K;V.b+=H.color.b*K}}}}function c(G,D,V,U,J,H){k=g(u++);k.setAttribute("d","M "+G.positionScreen.x+
" "+G.positionScreen.y+" L "+D.positionScreen.x+" "+D.positionScreen.y+" L "+V.positionScreen.x+","+V.positionScreen.y+"z");if(J instanceof THREE.MeshBasicMaterial)F.__styleString=J.color.__styleString;else if(J instanceof THREE.MeshLambertMaterial)if(T){Q.r=f.r;Q.g=f.g;Q.b=f.b;a(H,U,Q);F.r=J.color.r*Q.r;F.g=J.color.g*Q.g;F.b=J.color.b*Q.b;F.updateStyleString()}else F.__styleString=J.color.__styleString;else if(J instanceof THREE.MeshDepthMaterial){e=1-J.__2near/(J.__farPlusNear-U.z*J.__farMinusNear);
F.setRGB(e,e,e)}else J instanceof THREE.MeshNormalMaterial&&F.setRGB(i(U.normalWorld.x),i(U.normalWorld.y),i(U.normalWorld.z));J.wireframe?k.setAttribute("style","fill: none; stroke: "+F.__styleString+"; stroke-width: "+J.wireframe_linewidth+"; stroke-opacity: "+J.opacity+"; stroke-linecap: "+J.wireframe_linecap+"; stroke-linejoin: "+J.wireframe_linejoin):k.setAttribute("style","fill: "+F.__styleString+"; fill-opacity: "+J.opacity);r.appendChild(k)}function d(G,D,V,U,J,H,K){k=g(u++);k.setAttribute("d",
"M "+G.positionScreen.x+" "+G.positionScreen.y+" L "+D.positionScreen.x+" "+D.positionScreen.y+" L "+V.positionScreen.x+","+V.positionScreen.y+" L "+U.positionScreen.x+","+U.positionScreen.y+"z");if(H instanceof THREE.MeshBasicMaterial)F.__styleString=H.color.__styleString;else if(H instanceof THREE.MeshLambertMaterial)if(T){Q.r=f.r;Q.g=f.g;Q.b=f.b;a(K,J,Q);F.r=H.color.r*Q.r;F.g=H.color.g*Q.g;F.b=H.color.b*Q.b;F.updateStyleString()}else F.__styleString=H.color.__styleString;else if(H instanceof THREE.MeshDepthMaterial){e=
1-H.__2near/(H.__farPlusNear-J.z*H.__farMinusNear);F.setRGB(e,e,e)}else H instanceof THREE.MeshNormalMaterial&&F.setRGB(i(J.normalWorld.x),i(J.normalWorld.y),i(J.normalWorld.z));H.wireframe?k.setAttribute("style","fill: none; stroke: "+F.__styleString+"; stroke-width: "+H.wireframe_linewidth+"; stroke-opacity: "+H.opacity+"; stroke-linecap: "+H.wireframe_linecap+"; stroke-linejoin: "+H.wireframe_linejoin):k.setAttribute("style","fill: "+F.__styleString+"; fill-opacity: "+H.opacity);r.appendChild(k)}
function g(G){if(j[G]==null){j[G]=document.createElementNS("http://www.w3.org/2000/svg","path");O==0&&j[G].setAttribute("shape-rendering","crispEdges");return j[G]}return j[G]}function i(G){return G<0?Math.min((1+G)*0.5,0.5):0.5+Math.min(G*0.5,0.5)}var l=null,b=new THREE.Projector,r=document.createElementNS("http://www.w3.org/2000/svg","svg"),m,n,z,y,w,x,I,N,M=new THREE.Rectangle,s=new THREE.Rectangle,T=false,F=new THREE.Color(16777215),Q=new THREE.Color(16777215),f=new THREE.Color(0),p=new THREE.Color(0),
h=new THREE.Color(0),e,o=new THREE.Vector3,j=[],t=[],q=[],k,u,C,v,O=1;this.domElement=r;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(G){switch(G){case "high":O=1;break;case "low":O=0}};this.setSize=function(G,D){m=G;n=D;z=m/2;y=n/2;r.setAttribute("viewBox",-z+" "+-y+" "+m+" "+n);r.setAttribute("width",m);r.setAttribute("height",n);M.set(-z,-y,z,y)};this.clear=function(){for(;r.childNodes.length>0;)r.removeChild(r.childNodes[0])};this.render=function(G,D){var V,U,
J,H,K,P,A,L;this.autoClear&&this.clear();l=b.projectScene(G,D,this.sortElements);v=C=u=0;if(T=G.lights.length>0){A=G.lights;f.setRGB(0,0,0);p.setRGB(0,0,0);h.setRGB(0,0,0);V=0;for(U=A.length;V<U;V++){J=A[V];H=J.color;if(J instanceof THREE.AmbientLight){f.r+=H.r;f.g+=H.g;f.b+=H.b}else if(J instanceof THREE.DirectionalLight){p.r+=H.r;p.g+=H.g;p.b+=H.b}else if(J instanceof THREE.PointLight){h.r+=H.r;h.g+=H.g;h.b+=H.b}}}V=0;for(U=l.length;V<U;V++){A=l[V];s.empty();if(A instanceof THREE.RenderableParticle){w=
A;w.x*=z;w.y*=-y;J=0;for(H=A.materials.length;J<H;J++)if(L=A.materials[J]){K=w;P=A;L=L;var X=C++;if(t[X]==null){t[X]=document.createElementNS("http://www.w3.org/2000/svg","circle");O==0&&t[X].setAttribute("shape-rendering","crispEdges")}k=t[X];k.setAttribute("cx",K.x);k.setAttribute("cy",K.y);k.setAttribute("r",P.scale.x*z);if(L instanceof THREE.ParticleCircleMaterial){if(T){Q.r=f.r+p.r+h.r;Q.g=f.g+p.g+h.g;Q.b=f.b+p.b+h.b;F.r=L.color.r*Q.r;F.g=L.color.g*Q.g;F.b=L.color.b*Q.b;F.updateStyleString()}else F=
L.color;k.setAttribute("style","fill: "+F.__styleString)}r.appendChild(k)}}else if(A instanceof THREE.RenderableLine){w=A.v1;x=A.v2;w.positionScreen.x*=z;w.positionScreen.y*=-y;x.positionScreen.x*=z;x.positionScreen.y*=-y;s.addPoint(w.positionScreen.x,w.positionScreen.y);s.addPoint(x.positionScreen.x,x.positionScreen.y);if(M.instersects(s)){J=0;for(H=A.materials.length;J<H;)if(L=A.materials[J++]){K=w;P=x;L=L;X=v++;if(q[X]==null){q[X]=document.createElementNS("http://www.w3.org/2000/svg","line");O==
0&&q[X].setAttribute("shape-rendering","crispEdges")}k=q[X];k.setAttribute("x1",K.positionScreen.x);k.setAttribute("y1",K.positionScreen.y);k.setAttribute("x2",P.positionScreen.x);k.setAttribute("y2",P.positionScreen.y);if(L instanceof THREE.LineBasicMaterial){F.__styleString=L.color.__styleString;k.setAttribute("style","fill: none; stroke: "+F.__styleString+"; stroke-width: "+L.linewidth+"; stroke-opacity: "+L.opacity+"; stroke-linecap: "+L.linecap+"; stroke-linejoin: "+L.linejoin);r.appendChild(k)}}}}else if(A instanceof
THREE.RenderableFace3){w=A.v1;x=A.v2;I=A.v3;w.positionScreen.x*=z;w.positionScreen.y*=-y;x.positionScreen.x*=z;x.positionScreen.y*=-y;I.positionScreen.x*=z;I.positionScreen.y*=-y;s.addPoint(w.positionScreen.x,w.positionScreen.y);s.addPoint(x.positionScreen.x,x.positionScreen.y);s.addPoint(I.positionScreen.x,I.positionScreen.y);if(M.instersects(s)){J=0;for(H=A.meshMaterials.length;J<H;){L=A.meshMaterials[J++];if(L instanceof THREE.MeshFaceMaterial){K=0;for(P=A.faceMaterials.length;K<P;)(L=A.faceMaterials[K++])&&
c(w,x,I,A,L,G)}else L&&c(w,x,I,A,L,G)}}}else if(A instanceof THREE.RenderableFace4){w=A.v1;x=A.v2;I=A.v3;N=A.v4;w.positionScreen.x*=z;w.positionScreen.y*=-y;x.positionScreen.x*=z;x.positionScreen.y*=-y;I.positionScreen.x*=z;I.positionScreen.y*=-y;N.positionScreen.x*=z;N.positionScreen.y*=-y;s.addPoint(w.positionScreen.x,w.positionScreen.y);s.addPoint(x.positionScreen.x,x.positionScreen.y);s.addPoint(I.positionScreen.x,I.positionScreen.y);s.addPoint(N.positionScreen.x,N.positionScreen.y);if(M.instersects(s)){J=
0;for(H=A.meshMaterials.length;J<H;){L=A.meshMaterials[J++];if(L instanceof THREE.MeshFaceMaterial){K=0;for(P=A.faceMaterials.length;K<P;)(L=A.faceMaterials[K++])&&d(w,x,I,N,A,L,G)}else L&&d(w,x,I,N,A,L,G)}}}}}};
THREE.WebGLRenderer=function(a){function c(f,p){f.fragment_shader=p.fragment_shader;f.vertex_shader=p.vertex_shader;f.uniforms=Uniforms.clone(p.uniforms)}function d(f){if(f.doubleSided)b.disable(b.CULL_FACE);else{b.enable(b.CULL_FACE);f.flipSided?b.frontFace(b.CW):b.frontFace(b.CCW)}}function g(f,p){var h;if(f=="fragment")h=b.createShader(b.FRAGMENT_SHADER);else if(f=="vertex")h=b.createShader(b.VERTEX_SHADER);b.shaderSource(h,p);b.compileShader(h);if(!b.getShaderParameter(h,b.COMPILE_STATUS)){alert(b.getShaderInfoLog(h));
return null}return h}function i(f){switch(f){case THREE.RepeatWrapping:return b.REPEAT;case THREE.ClampToEdgeWrapping:return b.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return b.MIRRORED_REPEAT;case THREE.NearestFilter:return b.NEAREST;case THREE.NearestMipMapNearestFilter:return b.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return b.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return b.LINEAR;case THREE.LinearMipMapNearestFilter:return b.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return b.LINEAR_MIPMAP_LINEAR;
case THREE.ByteType:return b.BYTE;case THREE.UnsignedByteType:return b.UNSIGNED_BYTE;case THREE.ShortType:return b.SHORT;case THREE.UnsignedShortType:return b.UNSIGNED_SHORT;case THREE.IntType:return b.INT;case THREE.UnsignedShortType:return b.UNSIGNED_INT;case THREE.FloatType:return b.FLOAT;case THREE.AlphaFormat:return b.ALPHA;case THREE.RGBFormat:return b.RGB;case THREE.RGBAFormat:return b.RGBA;case THREE.LuminanceFormat:return b.LUMINANCE;case THREE.LuminanceAlphaFormat:return b.LUMINANCE_ALPHA}return 0}
var l=document.createElement("canvas"),b,r=null,m=null,n=new THREE.Matrix4,z,y=new Float32Array(16),w=new Float32Array(16),x=new Float32Array(16),I=new Float32Array(9),N=new Float32Array(16),M=new THREE.Matrix4,s=new THREE.Vector4,T=true,F=new THREE.Color(0),Q=0;if(a){if(a.antialias!==undefined)T=a.antialias;a.clearColor!==undefined&&F.setHex(a.clearColor);if(a.clearAlpha!==undefined)Q=a.clearAlpha}this.domElement=l;this.autoClear=true;(function(f,p,h){try{b=l.getContext("experimental-webgl",{antialias:f})}catch(e){console.log(e)}if(!b){alert("WebGL not supported");
throw"cannot create webgl context";}b.clearColor(0,0,0,1);b.clearDepth(1);b.enable(b.DEPTH_TEST);b.depthFunc(b.LEQUAL);b.frontFace(b.CCW);b.cullFace(b.BACK);b.enable(b.CULL_FACE);b.enable(b.BLEND);b.blendFunc(b.ONE,b.ONE_MINUS_SRC_ALPHA);b.clearColor(p.r,p.g,p.b,h)})(T,F,Q);this.context=b;this.lights={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[]}};this.setSize=function(f,p){l.width=f;l.height=p;b.viewport(0,0,l.width,l.height)};this.setClearColorHex=
function(f,p){var h=new THREE.Color(f);b.clearColor(h.r,h.g,h.b,p)};this.setClearColor=function(f,p){b.clearColor(f.r,f.g,f.b,p)};this.clear=function(){b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT)};this.setupLights=function(f,p){var h,e,o,j=0,t=0,q=0,k,u,C,v=this.lights,O=v.directional.colors,G=v.directional.positions,D=v.point.colors,V=v.point.positions,U=0,J=0;h=0;for(e=p.length;h<e;h++){o=p[h];k=o.color;u=o.position;C=o.intensity;if(o instanceof THREE.AmbientLight){j+=k.r;t+=k.g;q+=k.b}else if(o instanceof
THREE.DirectionalLight){O[U*3]=k.r*C;O[U*3+1]=k.g*C;O[U*3+2]=k.b*C;G[U*3]=u.x;G[U*3+1]=u.y;G[U*3+2]=u.z;U+=1}else if(o instanceof THREE.PointLight){D[J*3]=k.r*C;D[J*3+1]=k.g*C;D[J*3+2]=k.b*C;V[J*3]=u.x;V[J*3+1]=u.y;V[J*3+2]=u.z;J+=1}}v.point.length=J;v.directional.length=U;v.ambient[0]=j;v.ambient[1]=t;v.ambient[2]=q};this.createParticleBuffers=function(f){f.__webGLVertexBuffer=b.createBuffer();f.__webGLColorBuffer=b.createBuffer();f.__webGLParticleBuffer=b.createBuffer()};this.createLineBuffers=
function(f){f.__webGLVertexBuffer=b.createBuffer();f.__webGLColorBuffer=b.createBuffer();f.__webGLLineBuffer=b.createBuffer()};this.createMeshBuffers=function(f){f.__webGLVertexBuffer=b.createBuffer();f.__webGLNormalBuffer=b.createBuffer();f.__webGLTangentBuffer=b.createBuffer();f.__webGLColorBuffer=b.createBuffer();f.__webGLUVBuffer=b.createBuffer();f.__webGLUV2Buffer=b.createBuffer();f.__webGLFaceBuffer=b.createBuffer();f.__webGLLineBuffer=b.createBuffer()};this.initLineBuffers=function(f){var p=
f.vertices.length;f.__vertexArray=new Float32Array(p*3);f.__colorArray=new Float32Array(p*3);f.__lineArray=new Uint16Array(p);f.__webGLLineCount=p};this.initParticleBuffers=function(f){var p=f.vertices.length;f.__vertexArray=new Float32Array(p*3);f.__colorArray=new Float32Array(p*3);f.__particleArray=new Uint16Array(p);f.__sortArray=[];f.__webGLParticleCount=p};this.initMeshBuffers=function(f,p){var h,e,o=0,j=0,t=0,q=p.geometry.faces,k=f.faces;h=0;for(e=k.length;h<e;h++){fi=k[h];face=q[fi];if(face instanceof
THREE.Face3){o+=3;j+=1;t+=3}else if(face instanceof THREE.Face4){o+=4;j+=2;t+=4}}f.__vertexArray=new Float32Array(o*3);f.__normalArray=new Float32Array(o*3);f.__tangentArray=new Float32Array(o*4);f.__colorArray=new Float32Array(o*3);f.__uvArray=new Float32Array(o*2);f.__uv2Array=new Float32Array(o*2);f.__faceArray=new Uint16Array(j*3);f.__lineArray=new Uint16Array(t*2);o=false;h=0;for(e=p.materials.length;h<e;h++){q=p.materials[h];if(q instanceof THREE.MeshFaceMaterial){q=0;for(k=f.materials.length;q<
k;q++)if(f.materials[q]&&f.materials[q].shading!=undefined&&f.materials[q].shading==THREE.SmoothShading){o=true;break}}else if(q&&q.shading!=undefined&&q.shading==THREE.SmoothShading){o=true;break}if(o)break}f.__needsSmoothNormals=o;f.__webGLFaceCount=j*3;f.__webGLLineCount=t*2};this.setMeshBuffers=function(f,p,h){var e,o,j,t,q,k,u,C,v,O,G=0,D=0,V=0,U=0,J=0,H=0,K=0,P=0,A=0,L=f.__vertexArray,X=f.__uvArray,ga=f.__uv2Array,da=f.__normalArray,Y=f.__tangentArray,ba=f.__colorArray,Z=f.__faceArray,ea=f.__lineArray,
wa=f.__needsSmoothNormals,ha=p.geometry,ia=ha.__dirtyVertices,sa=ha.__dirtyElements,pa=ha.__dirtyUvs,qa=ha.__dirtyNormals,aa=ha.__dirtyTangents,ma=ha.__dirtyColors,ka=ha.vertices,xa=f.faces,Ga=ha.faces,Ha=ha.uvs,Da=ha.uvs2,na=ha.colors;p=0;for(e=xa.length;p<e;p++){o=xa[p];j=Ga[o];k=Ha[o];o=Da[o];t=j.vertexNormals;q=j.normal;if(j instanceof THREE.Face3){if(ia){u=ka[j.a].position;C=ka[j.b].position;v=ka[j.c].position;L[D]=u.x;L[D+1]=u.y;L[D+2]=u.z;L[D+3]=C.x;L[D+4]=C.y;L[D+5]=C.z;L[D+6]=v.x;L[D+7]=
v.y;L[D+8]=v.z;D+=9}if(ma&&na.length){u=na[j.a];C=na[j.b];v=na[j.c];ba[A]=u.r;ba[A+1]=u.g;ba[A+2]=u.b;ba[A+3]=C.r;ba[A+4]=C.g;ba[A+5]=C.b;ba[A+6]=v.r;ba[A+7]=v.g;ba[A+8]=v.b;A+=9}if(aa&&ha.hasTangents){u=ka[j.a].tangent;C=ka[j.b].tangent;v=ka[j.c].tangent;Y[K]=u.x;Y[K+1]=u.y;Y[K+2]=u.z;Y[K+3]=u.w;Y[K+4]=C.x;Y[K+5]=C.y;Y[K+6]=C.z;Y[K+7]=C.w;Y[K+8]=v.x;Y[K+9]=v.y;Y[K+10]=v.z;Y[K+11]=v.w;K+=12}if(qa)if(t.length==3&&wa)for(j=0;j<3;j++){q=t[j];da[H]=q.x;da[H+1]=q.y;da[H+2]=q.z;H+=3}else for(j=0;j<3;j++){da[H]=
q.x;da[H+1]=q.y;da[H+2]=q.z;H+=3}if(pa&&k)for(j=0;j<3;j++){t=k[j];X[V]=t.u;X[V+1]=t.v;V+=2}if(pa&&o)for(j=0;j<3;j++){k=o[j];ga[U]=k.u;ga[U+1]=k.v;U+=2}if(sa){Z[J]=G;Z[J+1]=G+1;Z[J+2]=G+2;J+=3;ea[P]=G;ea[P+1]=G+1;ea[P+2]=G;ea[P+3]=G+2;ea[P+4]=G+1;ea[P+5]=G+2;P+=6;G+=3}}else if(j instanceof THREE.Face4){if(ia){u=ka[j.a].position;C=ka[j.b].position;v=ka[j.c].position;O=ka[j.d].position;L[D]=u.x;L[D+1]=u.y;L[D+2]=u.z;L[D+3]=C.x;L[D+4]=C.y;L[D+5]=C.z;L[D+6]=v.x;L[D+7]=v.y;L[D+8]=v.z;L[D+9]=O.x;L[D+10]=
O.y;L[D+11]=O.z;D+=12}if(ma&&na.length){u=na[j.a];C=na[j.b];v=na[j.d];ba[A]=u.r;ba[A+1]=u.g;ba[A+2]=u.b;ba[A+3]=C.r;ba[A+4]=C.g;ba[A+5]=C.b;ba[A+6]=v.r;ba[A+7]=v.g;ba[A+8]=v.b;ba[A+9]=(void 0).r;ba[A+10]=(void 0).g;ba[A+11]=(void 0).b;A+=12}if(aa&&ha.hasTangents){u=ka[j.a].tangent;C=ka[j.b].tangent;v=ka[j.c].tangent;j=ka[j.d].tangent;Y[K]=u.x;Y[K+1]=u.y;Y[K+2]=u.z;Y[K+3]=u.w;Y[K+4]=C.x;Y[K+5]=C.y;Y[K+6]=C.z;Y[K+7]=C.w;Y[K+8]=v.x;Y[K+9]=v.y;Y[K+10]=v.z;Y[K+11]=v.w;Y[K+12]=j.x;Y[K+13]=j.y;Y[K+14]=j.z;
Y[K+15]=j.w;K+=16}if(qa)if(t.length==4&&wa)for(j=0;j<4;j++){q=t[j];da[H]=q.x;da[H+1]=q.y;da[H+2]=q.z;H+=3}else for(j=0;j<4;j++){da[H]=q.x;da[H+1]=q.y;da[H+2]=q.z;H+=3}if(pa&&k)for(j=0;j<4;j++){t=k[j];X[V]=t.u;X[V+1]=t.v;V+=2}if(pa&&o)for(j=0;j<4;j++){k=o[j];ga[U]=k.u;ga[U+1]=k.v;U+=2}if(sa){Z[J]=G;Z[J+1]=G+1;Z[J+2]=G+2;Z[J+3]=G;Z[J+4]=G+2;Z[J+5]=G+3;J+=6;ea[P]=G;ea[P+1]=G+1;ea[P+2]=G;ea[P+3]=G+3;ea[P+4]=G+1;ea[P+5]=G+2;ea[P+6]=G+2;ea[P+7]=G+3;P+=8;G+=4}}}if(ia){b.bindBuffer(b.ARRAY_BUFFER,f.__webGLVertexBuffer);
b.bufferData(b.ARRAY_BUFFER,L,h)}if(ma&&na.length){b.bindBuffer(b.ARRAY_BUFFER,f.__webGLColorBuffer);b.bufferData(b.ARRAY_BUFFER,ba,h)}if(qa){b.bindBuffer(b.ARRAY_BUFFER,f.__webGLNormalBuffer);b.bufferData(b.ARRAY_BUFFER,da,h)}if(aa&&ha.hasTangents){b.bindBuffer(b.ARRAY_BUFFER,f.__webGLTangentBuffer);b.bufferData(b.ARRAY_BUFFER,Y,h)}if(pa&&V>0){b.bindBuffer(b.ARRAY_BUFFER,f.__webGLUVBuffer);b.bufferData(b.ARRAY_BUFFER,X,h)}if(pa&&U>0){b.bindBuffer(b.ARRAY_BUFFER,f.__webGLUV2Buffer);b.bufferData(b.ARRAY_BUFFER,
ga,h)}if(sa){b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,f.__webGLFaceBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,Z,h);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,f.__webGLLineBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,ea,h)}};this.setLineBuffers=function(f,p){var h,e,o,j=f.vertices,t=f.colors,q=j.length,k=t.length,u=f.__vertexArray,C=f.__colorArray,v=f.__lineArray,O=f.__dirtyColors,G=f.__dirtyElements;if(f.__dirtyVertices){for(h=0;h<q;h++){e=j[h].position;o=h*3;u[o]=e.x;u[o+1]=e.y;u[o+2]=e.z}b.bindBuffer(b.ARRAY_BUFFER,
f.__webGLVertexBuffer);b.bufferData(b.ARRAY_BUFFER,u,p)}if(O){for(h=0;h<k;h++){color=t[h];o=h*3;C[o]=color.r;C[o+1]=color.g;C[o+2]=color.b}b.bindBuffer(b.ARRAY_BUFFER,f.__webGLColorBuffer);b.bufferData(b.ARRAY_BUFFER,C,p)}if(G){for(h=0;h<q;h++)v[h]=h;b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,f.__webGLLineBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,v,p)}};this.setParticleBuffers=function(f,p,h,e){var o,j,t;j=f.vertices;var q=j.length,k=f.colors,u=k.length,C=f.__vertexArray,v=f.__particleArray,O=f.__colorArray,
G=f.__sortArray,D=f.__dirtyVertices,V=f.__dirtyElements,U=f.__dirtyColors;if(h.sortParticles){M.multiply(e.projectionMatrix,e.matrix);M.multiplySelf(h.matrix);for(o=0;o<q;o++){t=j[o].position;s.copy(t);M.multiplyVector3(s);G[o]=[s.z,o]}G.sort(function(J,H){return H[0]-J[0]});for(o=0;o<q;o++){t=j[G[o][1]].position;e=o*3;C[e]=t.x;C[e+1]=t.y;C[e+2]=t.z}for(j=0;j<u;j++){e=j*3;color=k[G[j][1]];O[e]=color.r;O[e+1]=color.g;O[e+2]=color.b}}else{if(D)for(o=0;o<q;o++){t=j[o].position;e=o*3;C[e]=t.x;C[e+1]=
t.y;C[e+2]=t.z}if(U)for(j=0;j<u;j++){color=k[j];e=j*3;O[e]=color.r;O[e+1]=color.g;O[e+2]=color.b}}if(V){for(o=0;o<q;o++)v[o]=o;b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,f.__webGLParticleBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,v,p)}if(D||h.sortParticles){b.bindBuffer(b.ARRAY_BUFFER,f.__webGLVertexBuffer);b.bufferData(b.ARRAY_BUFFER,C,p)}if(U||h.sortParticles){b.bindBuffer(b.ARRAY_BUFFER,f.__webGLColorBuffer);b.bufferData(b.ARRAY_BUFFER,O,p)}};this.initMaterial=function(f,p,h){if(!f.program){var e,o;
if(f instanceof THREE.MeshDepthMaterial)c(f,THREE.ShaderLib.depth);else if(f instanceof THREE.MeshNormalMaterial)c(f,THREE.ShaderLib.normal);else if(f instanceof THREE.MeshBasicMaterial)c(f,THREE.ShaderLib.basic);else if(f instanceof THREE.MeshLambertMaterial)c(f,THREE.ShaderLib.lambert);else if(f instanceof THREE.MeshPhongMaterial)c(f,THREE.ShaderLib.phong);else if(f instanceof THREE.LineBasicMaterial)c(f,THREE.ShaderLib.basic);else f instanceof THREE.ParticleBasicMaterial&&c(f,THREE.ShaderLib.particle_basic);
var j,t,q,k;o=q=k=0;for(j=p.length;o<j;o++){t=p[o];t instanceof THREE.DirectionalLight&&q++;t instanceof THREE.PointLight&&k++}if(k+q<=4){p=q;k=k}else{p=Math.ceil(4*q/(k+q));k=4-p}o={directional:p,point:k};k=f.fragment_shader;p=f.vertex_shader;j={fog:h,map:f.map,env_map:f.env_map,light_map:f.light_map,vertex_colors:f.vertex_colors,maxDirLights:o.directional,maxPointLights:o.point};h=b.createProgram();o=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+j.maxDirLights,"#define MAX_POINT_LIGHTS "+
j.maxPointLights,j.fog?"#define USE_FOG":"",j.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",j.map?"#define USE_MAP":"",j.env_map?"#define USE_ENVMAP":"",j.light_map?"#define USE_LIGHTMAP":"",j.vertex_colors?"#define USE_COLOR":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");j=[b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+j.maxDirLights,"#define MAX_POINT_LIGHTS "+j.maxPointLights,j.map?"#define USE_MAP":"",
j.env_map?"#define USE_ENVMAP":"",j.light_map?"#define USE_LIGHTMAP":"",j.vertex_colors?"#define USE_COLOR":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec3 color;\nattribute vec2 uv;\nattribute vec2 uv2;\n"].join("\n");b.attachShader(h,g("fragment",o+k));b.attachShader(h,g("vertex",j+p));b.linkProgram(h);
b.getProgramParameter(h,b.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+b.getProgramParameter(h,b.VALIDATE_STATUS)+", gl error ["+b.getError()+"]");h.uniforms={};h.attributes={};f.program=h;h=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(e in f.uniforms)h.push(e);e=f.program;k=0;for(p=h.length;k<p;k++){o=h[k];e.uniforms[o]=b.getUniformLocation(e,o)}f=f.program;e=["position","normal","uv","uv2","tangent","color"];h=0;
for(k=e.length;h<k;h++){p=e[h];f.attributes[p]=b.getAttribLocation(f,p)}}};this.setProgram=function(f,p,h,e){this.initMaterial(e,p,h);var o=e.program;if(o!=r){b.useProgram(o);r=o}this.loadCamera(o,f);this.loadMatrices(o);if(e instanceof THREE.MeshPhongMaterial||e instanceof THREE.MeshLambertMaterial){this.setupLights(o,p);p=this.lights;e.uniforms.enableLighting.value=p.directional.length+p.point.length;e.uniforms.ambientLightColor.value=p.ambient;e.uniforms.directionalLightColor.value=p.directional.colors;
e.uniforms.directionalLightDirection.value=p.directional.positions;e.uniforms.pointLightColor.value=p.point.colors;e.uniforms.pointLightPosition.value=p.point.positions}if(e instanceof THREE.MeshBasicMaterial||e instanceof THREE.MeshLambertMaterial||e instanceof THREE.MeshPhongMaterial){e.uniforms.diffuse.value.setRGB(e.color.r*e.opacity,e.color.g*e.opacity,e.color.b*e.opacity);e.uniforms.opacity.value=e.opacity;e.uniforms.map.texture=e.map;e.uniforms.light_map.texture=e.light_map;e.uniforms.env_map.texture=
e.env_map;e.uniforms.reflectivity.value=e.reflectivity;e.uniforms.refraction_ratio.value=e.refraction_ratio;e.uniforms.combine.value=e.combine;e.uniforms.useRefract.value=e.env_map&&e.env_map.mapping instanceof THREE.CubeRefractionMapping;if(h){e.uniforms.fogColor.value.setHex(h.color.hex);if(h instanceof THREE.Fog){e.uniforms.fogNear.value=h.near;e.uniforms.fogFar.value=h.far}else if(h instanceof THREE.FogExp2)e.uniforms.fogDensity.value=h.density}}if(e instanceof THREE.LineBasicMaterial){e.uniforms.diffuse.value.setRGB(e.color.r*
e.opacity,e.color.g*e.opacity,e.color.b*e.opacity);e.uniforms.opacity.value=e.opacity;if(h){e.uniforms.fogColor.value.setHex(h.color.hex);if(h instanceof THREE.Fog){e.uniforms.fogNear.value=h.near;e.uniforms.fogFar.value=h.far}else if(h instanceof THREE.FogExp2)e.uniforms.fogDensity.value=h.density}}if(e instanceof THREE.ParticleBasicMaterial){e.uniforms.psColor.value.setRGB(e.color.r*e.opacity,e.color.g*e.opacity,e.color.b*e.opacity);e.uniforms.opacity.value=e.opacity;e.uniforms.size.value=e.size;
e.uniforms.map.texture=e.map;if(h){e.uniforms.fogColor.value.setHex(h.color.hex);if(h instanceof THREE.Fog){e.uniforms.fogNear.value=h.near;e.uniforms.fogFar.value=h.far}else if(h instanceof THREE.FogExp2)e.uniforms.fogDensity.value=h.density}}if(e instanceof THREE.MeshPhongMaterial){e.uniforms.ambient.value.setRGB(e.ambient.r,e.ambient.g,e.ambient.b);e.uniforms.specular.value.setRGB(e.specular.r,e.specular.g,e.specular.b);e.uniforms.shininess.value=e.shininess}if(e instanceof THREE.MeshDepthMaterial){e.uniforms.mNear.value=
f.near;e.uniforms.mFar.value=f.far;e.uniforms.opacity.value=e.opacity}if(e instanceof THREE.MeshNormalMaterial)e.uniforms.opacity.value=e.opacity;f=e.uniforms;var j,t;for(j in f)if(t=o.uniforms[j]){e=f[j];p=e.type;h=e.value;if(p=="i")b.uniform1i(t,h);else if(p=="f")b.uniform1f(t,h);else if(p=="fv1")b.uniform1fv(t,h);else if(p=="fv")b.uniform3fv(t,h);else if(p=="v2")b.uniform2f(t,h.x,h.y);else if(p=="v3")b.uniform3f(t,h.x,h.y,h.z);else if(p=="c")b.uniform3f(t,h.r,h.g,h.b);else if(p=="t"){b.uniform1i(t,
h);if(e=e.texture)if(e.image instanceof Array&&e.image.length==6){e=e;h=h;if(e.image.length==6){if(!e.image.__webGLTextureCube&&!e.image.__cubeMapInitialized&&e.image.loadCount==6){e.image.__webGLTextureCube=b.createTexture();b.bindTexture(b.TEXTURE_CUBE_MAP,e.image.__webGLTextureCube);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_MAG_FILTER,b.LINEAR);b.texParameteri(b.TEXTURE_CUBE_MAP,
b.TEXTURE_MIN_FILTER,b.LINEAR_MIPMAP_LINEAR);for(p=0;p<6;++p)b.texImage2D(b.TEXTURE_CUBE_MAP_POSITIVE_X+p,0,b.RGBA,b.RGBA,b.UNSIGNED_BYTE,e.image[p]);b.generateMipmap(b.TEXTURE_CUBE_MAP);b.bindTexture(b.TEXTURE_CUBE_MAP,null);e.image.__cubeMapInitialized=true}b.activeTexture(b.TEXTURE0+h);b.bindTexture(b.TEXTURE_CUBE_MAP,e.image.__webGLTextureCube)}}else{e=e;h=h;if(!e.__webGLTexture&&e.image.loaded){e.__webGLTexture=b.createTexture();b.bindTexture(b.TEXTURE_2D,e.__webGLTexture);b.texImage2D(b.TEXTURE_2D,
0,b.RGBA,b.RGBA,b.UNSIGNED_BYTE,e.image);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,i(e.wrap_s));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,i(e.wrap_t));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,i(e.mag_filter));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,i(e.min_filter));b.generateMipmap(b.TEXTURE_2D);b.bindTexture(b.TEXTURE_2D,null)}b.activeTexture(b.TEXTURE0+h);b.bindTexture(b.TEXTURE_2D,e.__webGLTexture)}}}return o};this.renderBuffer=function(f,p,h,e,o,j){f=this.setProgram(f,
p,h,e,j).attributes;b.bindBuffer(b.ARRAY_BUFFER,o.__webGLVertexBuffer);b.vertexAttribPointer(f.position,3,b.FLOAT,false,0,0);b.enableVertexAttribArray(f.position);if(f.color>=0){b.bindBuffer(b.ARRAY_BUFFER,o.__webGLColorBuffer);b.vertexAttribPointer(f.color,3,b.FLOAT,false,0,0);b.enableVertexAttribArray(f.color)}if(f.normal>=0){b.bindBuffer(b.ARRAY_BUFFER,o.__webGLNormalBuffer);b.vertexAttribPointer(f.normal,3,b.FLOAT,false,0,0);b.enableVertexAttribArray(f.normal)}if(f.tangent>=0){b.bindBuffer(b.ARRAY_BUFFER,
o.__webGLTangentBuffer);b.vertexAttribPointer(f.tangent,4,b.FLOAT,false,0,0);b.enableVertexAttribArray(f.tangent)}if(f.uv>=0)if(o.__webGLUVBuffer){b.bindBuffer(b.ARRAY_BUFFER,o.__webGLUVBuffer);b.vertexAttribPointer(f.uv,2,b.FLOAT,false,0,0);b.enableVertexAttribArray(f.uv)}else b.disableVertexAttribArray(f.uv);if(f.uv2>=0)if(o.__webGLUV2Buffer){b.bindBuffer(b.ARRAY_BUFFER,o.__webGLUV2Buffer);b.vertexAttribPointer(f.uv2,2,b.FLOAT,false,0,0);b.enableVertexAttribArray(f.uv2)}else b.disableVertexAttribArray(f.uv2);
if(e.wireframe||e instanceof THREE.LineBasicMaterial){f=e.wireframe_linewidth!==undefined?e.wireframe_linewidth:e.linewidth!==undefined?e.linewidth:1;e=e instanceof THREE.LineBasicMaterial&&j.type==THREE.LineStrip?b.LINE_STRIP:b.LINES;b.lineWidth(f);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,o.__webGLLineBuffer);b.drawElements(e,o.__webGLLineCount,b.UNSIGNED_SHORT,0)}else if(e instanceof THREE.ParticleBasicMaterial){b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,o.__webGLParticleBuffer);b.drawElements(b.POINTS,o.__webGLParticleCount,
b.UNSIGNED_SHORT,0)}else{b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,o.__webGLFaceBuffer);b.drawElements(b.TRIANGLES,o.__webGLFaceCount,b.UNSIGNED_SHORT,0)}};this.renderPass=function(f,p,h,e,o,j,t){var q,k,u,C,v;u=0;for(C=e.materials.length;u<C;u++){q=e.materials[u];if(q instanceof THREE.MeshFaceMaterial){q=0;for(k=o.materials.length;q<k;q++)if((v=o.materials[q])&&v.blending==j&&v.opacity<1==t){this.setBlending(v.blending);this.setDepthTest(v.depth_test);this.renderBuffer(f,p,h,v,o,e)}}else if((v=q)&&v.blending==
j&&v.opacity<1==t){this.setBlending(v.blending);this.setDepthTest(v.depth_test);this.renderBuffer(f,p,h,v,o,e)}}};this.renderPassImmediate=function(f,p,h,e,o,j){var t,q,k,u;t=0;for(q=e.materials.length;t<q;t++)if((k=e.materials[t])&&k.blending==o&&k.opacity<1==j){this.setBlending(k.blending);this.setDepthTest(k.depth_test);u=this.setProgram(f,p,h,k,e);e.render(function(C){var v=u;if(!C.__webGLVertexBuffer)C.__webGLVertexBuffer=b.createBuffer();if(!C.__webGLNormalBuffer)C.__webGLNormalBuffer=b.createBuffer();
if(C.hasPos){b.bindBuffer(b.ARRAY_BUFFER,C.__webGLVertexBuffer);b.bufferData(b.ARRAY_BUFFER,C.positionArray,b.DYNAMIC_DRAW);b.enableVertexAttribArray(v.attributes.position);b.vertexAttribPointer(v.attributes.position,3,b.FLOAT,false,0,0)}if(C.hasNormal){b.bindBuffer(b.ARRAY_BUFFER,C.__webGLNormalBuffer);b.bufferData(b.ARRAY_BUFFER,C.normalArray,b.DYNAMIC_DRAW);b.enableVertexAttribArray(v.attributes.normal);b.vertexAttribPointer(v.attributes.normal,3,b.FLOAT,false,0,0)}b.drawArrays(b.TRIANGLES,0,C.count);
C.count=0})}};this.render=function(f,p,h,e){var o,j,t,q,k=f.lights,u=f.fog;p.autoUpdateMatrix&&p.updateMatrix();y.set(p.matrix.flatten());x.set(p.projectionMatrix.flatten());this.initWebGLObjects(f,p);e=e!==undefined?e:true;if(h&&!h.__webGLFramebuffer){h.__webGLFramebuffer=b.createFramebuffer();h.__webGLRenderbuffer=b.createRenderbuffer();h.__webGLTexture=b.createTexture();b.bindRenderbuffer(b.RENDERBUFFER,h.__webGLRenderbuffer);b.renderbufferStorage(b.RENDERBUFFER,b.DEPTH_COMPONENT16,h.width,h.height);
b.bindTexture(b.TEXTURE_2D,h.__webGLTexture);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,i(h.wrap_s));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,i(h.wrap_t));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,i(h.mag_filter));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,i(h.min_filter));b.texImage2D(b.TEXTURE_2D,0,i(h.format),h.width,h.height,0,i(h.format),i(h.type),null);b.bindFramebuffer(b.FRAMEBUFFER,h.__webGLFramebuffer);b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,
h.__webGLTexture,0);b.framebufferRenderbuffer(b.FRAMEBUFFER,b.DEPTH_ATTACHMENT,b.RENDERBUFFER,h.__webGLRenderbuffer);b.bindTexture(b.TEXTURE_2D,null);b.bindRenderbuffer(b.RENDERBUFFER,null);b.bindFramebuffer(b.FRAMEBUFFER,null)}if(h){o=h.__webGLFramebuffer;q=h.width;j=h.height}else{o=null;q=l.width;j=l.height}if(o!=m){b.bindFramebuffer(b.FRAMEBUFFER,o);b.viewport(0,0,q,j);e&&b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT);m=o}this.autoClear&&this.clear();o=f.__webGLObjects.length;for(e=0;e<o;e++){t=
f.__webGLObjects[e];q=t.object;q.visible&&q.autoUpdateMatrix&&q.updateMatrix()}j=f.__webGLObjectsImmediate.length;for(e=0;e<j;e++){t=f.__webGLObjectsImmediate[e];q=t.object;q.visible&&q.autoUpdateMatrix&&q.updateMatrix()}for(e=0;e<o;e++){t=f.__webGLObjects[e];q=t.object;j=t.buffer;if(q.visible){d(q);this.setupMatrices(q,p);this.renderPass(p,k,u,q,j,THREE.NormalBlending,false)}}for(e=0;e<f.__webGLObjectsImmediate.length;e++){t=f.__webGLObjectsImmediate[e];q=t.object;if(q.visible){d(q);this.setupMatrices(q,
p);this.renderPassImmediate(p,k,u,q,THREE.NormalBlending,false)}}for(e=0;e<o;e++){t=f.__webGLObjects[e];q=t.object;j=t.buffer;if(q.visible){d(q);this.setupMatrices(q,p);this.renderPass(p,k,u,q,j,THREE.AdditiveBlending,false);this.renderPass(p,k,u,q,j,THREE.SubtractiveBlending,false);this.renderPass(p,k,u,q,j,THREE.AdditiveBlending,true);this.renderPass(p,k,u,q,j,THREE.SubtractiveBlending,true);this.renderPass(p,k,u,q,j,THREE.NormalBlending,true);this.renderPass(p,k,u,q,j,THREE.BillboardBlending,false)}}for(e=
0;e<f.__webGLObjectsImmediate.length;e++){t=f.__webGLObjectsImmediate[e];q=t.object;if(q.visible){d(q);this.setupMatrices(q,p);this.renderPassImmediate(p,k,u,q,THREE.NormalBlending,true)}}if(h&&h.min_filter!==THREE.NearestFilter&&h.min_filter!==THREE.LinearFilter){b.bindTexture(b.TEXTURE_2D,h.__webGLTexture);b.generateMipmap(b.TEXTURE_2D);b.bindTexture(b.TEXTURE_2D,null)}};this.initWebGLObjects=function(f,p){function h(v,O,G,D){if(v[O]==undefined){f.__webGLObjects.push({buffer:G,object:D});v[O]=1}}
function e(v,O,G){if(v[O]==undefined){f.__webGLObjectsImmediate.push({object:G});v[O]=1}}var o,j,t,q,k,u,C;if(!f.__webGLObjects){f.__webGLObjects=[];f.__webGLObjectsMap={};f.__webGLObjectsImmediate=[]}o=0;for(j=f.objects.length;o<j;o++){t=f.objects[o];k=t.geometry;if(f.__webGLObjectsMap[t.id]==undefined)f.__webGLObjectsMap[t.id]={};C=f.__webGLObjectsMap[t.id];if(t instanceof THREE.Mesh){for(q in k.geometryChunks){u=k.geometryChunks[q];if(!u.__webGLVertexBuffer){this.createMeshBuffers(u);this.initMeshBuffers(u,
t);k.__dirtyVertices=true;k.__dirtyElements=true;k.__dirtyUvs=true;k.__dirtyNormals=true;k.__dirtyTangents=true;k.__dirtyColors=true}if(k.__dirtyVertices||k.__dirtyElements||k.__dirtyUvs||k.__dirtyNormals||k.__dirtyColors||k.__dirtyTangents)this.setMeshBuffers(u,t,b.DYNAMIC_DRAW);h(C,q,u,t)}k.__dirtyVertices=false;k.__dirtyElements=false;k.__dirtyUvs=false;k.__dirtyNormals=false;k.__dirtyTangents=false;k.__dirtyColors=false}else if(t instanceof THREE.Line){if(!k.__webGLVertexBuffer){this.createLineBuffers(k);
this.initLineBuffers(k);k.__dirtyVertices=true;k.__dirtyElements=true;k.__dirtyColors=true}if(k.__dirtyVertices||k.__dirtyColors)this.setLineBuffers(k,b.DYNAMIC_DRAW);h(C,0,k,t);k.__dirtyVertices=false;k.__dirtyElements=false}else if(t instanceof THREE.ParticleSystem){if(!k.__webGLVertexBuffer){this.createParticleBuffers(k);this.initParticleBuffers(k);k.__dirtyVertices=true;k.__dirtyColors=true;k.__dirtyElements=true}if(k.__dirtyVertices||k.__dirtyColors||t.sortParticles)this.setParticleBuffers(k,
b.DYNAMIC_DRAW,t,p);h(C,0,k,t);k.__dirtyVertices=false;k.__dirtyColors=false;k.__dirtyElements=false}else t instanceof THREE.MarchingCubes&&e(C,0,t)}};this.removeObject=function(f,p){var h,e;for(h=f.__webGLObjects.length-1;h>=0;h--){e=f.__webGLObjects[h].object;p==e&&f.__webGLObjects.splice(h,1)}};this.setupMatrices=function(f,p){n.multiply(p.matrix,f.matrix);w.set(n.flatten());z=THREE.Matrix4.makeInvert3x3(n).transpose();I.set(z.m);N.set(f.matrix.flatten())};this.loadMatrices=function(f){b.uniformMatrix4fv(f.uniforms.viewMatrix,
false,y);b.uniformMatrix4fv(f.uniforms.modelViewMatrix,false,w);b.uniformMatrix4fv(f.uniforms.projectionMatrix,false,x);b.uniformMatrix3fv(f.uniforms.normalMatrix,false,I);b.uniformMatrix4fv(f.uniforms.objectMatrix,false,N)};this.loadCamera=function(f,p){b.uniform3f(f.uniforms.cameraPosition,p.position.x,p.position.y,p.position.z)};this.setDepthTest=function(f){f?b.enable(b.DEPTH_TEST):b.disable(b.DEPTH_TEST)};this.setBlending=function(f){switch(f){case THREE.AdditiveBlending:b.blendEquation(b.FUNC_ADD);
b.blendFunc(b.ONE,b.ONE);break;case THREE.SubtractiveBlending:b.blendFunc(b.DST_COLOR,b.ZERO);break;case THREE.BillboardBlending:b.blendEquation(b.FUNC_ADD);b.blendFunc(b.SRC_ALPHA,b.ONE_MINUS_SRC_ALPHA);break;default:b.blendEquation(b.FUNC_ADD);b.blendFunc(b.ONE,b.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=function(f,p){if(f){!p||p=="ccw"?b.frontFace(b.CCW):b.frontFace(b.CW);if(f=="back")b.cullFace(b.BACK);else f=="front"?b.cullFace(b.FRONT):b.cullFace(b.FRONT_AND_BACK);b.enable(b.CULL_FACE)}else b.disable(b.CULL_FACE)};
this.supportsVertexTextures=function(){return b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\ncubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = vec4( mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity ), opacity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, gl_PointCoord );\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D light_map;\n#endif",
lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\nlightmapColor = texture2D( light_map, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}",
lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\nvertexColor = vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\nvColor = color;\n#endif"};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},light_map:{type:"t",value:2,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",
value:1},ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{opacity:{type:"f",
value:1}},fragment_shader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}",vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsLib.common,fragment_shader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.Snippets.color_pars_fragment,
THREE.Snippets.map_pars_fragment,THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( diffuse, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 lightmapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );\nvec4 vertexColor = vec4( 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lightmap_fragment,THREE.Snippets.color_fragment,"gl_FragColor = mColor * mapColor * lightmapColor * vertexColor;",THREE.Snippets.envmap_fragment,
THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.color_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,THREE.Snippets.color_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},lambert:{uniforms:Uniforms.merge([THREE.UniformsLib.common,
THREE.UniformsLib.lights]),fragment_shader:["uniform vec3 diffuse;\nuniform float opacity;\nvarying vec3 vLightWeighting;",THREE.Snippets.map_pars_fragment,THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( diffuse, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 lightmapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lightmap_fragment,"gl_FragColor =  mColor * mapColor * lightmapColor * vec4( vLightWeighting, 1.0 );",
THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,
"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},phong:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),fragment_shader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",THREE.Snippets.map_pars_fragment,THREE.Snippets.lightmap_pars_fragment,
THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,THREE.Snippets.lights_pars_fragment,"void main() {\nvec4 mColor = vec4( diffuse, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 lightmapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lights_fragment,THREE.Snippets.lightmap_fragment,"gl_FragColor =  mapColor * lightmapColor * totalLight * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),
vertex_shader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",
THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},particle_basic:{uniforms:THREE.UniformsLib.particle,fragment_shader:["uniform vec3 psColor;\nuniform float opacity;",THREE.Snippets.color_pars_fragment,THREE.Snippets.map_particle_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( psColor, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 vertexColor = vec4( 1.0 );",THREE.Snippets.map_particle_fragment,THREE.Snippets.color_fragment,
"gl_FragColor = mColor * mapColor * vertexColor;",THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["uniform float size;",THREE.Snippets.color_pars_vertex,"void main() {",THREE.Snippets.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\ngl_PointSize = size;\n}"].join("\n")}};THREE.RenderableObject=function(){this.z=this.object=null};
THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};
THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
