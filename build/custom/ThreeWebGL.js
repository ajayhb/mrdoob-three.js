// ThreeWebGL.js r47dev - http://github.com/mrdoob/three.js
var THREE=THREE||{};if(!self.Int32Array)self.Int32Array=Array,self.Float32Array=Array;THREE.Color=function(a){a!==void 0&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var d,f,g;if(c===0)this.r=this.g=this.b=0;else switch(d=Math.floor(a*6),f=a*6-d,a=c*(1-b),g=c*(1-
b*f),b=c*(1-b*(1-f)),d){case 1:this.r=g;this.g=c;this.b=a;break;case 2:this.r=a;this.g=c;this.b=b;break;case 3:this.r=a;this.g=g;this.b=c;break;case 4:this.r=b;this.g=a;this.b=c;break;case 5:this.r=c;this.g=a;this.b=g;break;case 6:case 0:this.r=c,this.g=b,this.b=a}return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},getHex:function(){return~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},getContextStyle:function(){return"rgb("+
Math.floor(this.r*255)+","+Math.floor(this.g*255)+","+Math.floor(this.b*255)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},
divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},
equals:function(a){return a.x===this.x&&a.y===this.y}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},
addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},
divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):this.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return this.x+this.y+this.z},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;this.x=c*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-c*a.x;return this},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,a).lengthSq()},setPositionFromMatrix:function(a){this.x=a.n14;this.y=a.n24;this.z=a.n34},setRotationFromMatrix:function(a){var b=Math.cos(this.y);
this.y=Math.asin(a.n13);Math.abs(b)>1.0E-5?(this.x=Math.atan2(-a.n23/b,a.n33/b),this.z=Math.atan2(-a.n12/b,a.n11/b)):(this.x=0,this.z=Math.atan2(a.n21,a.n22))},isZero:function(){return this.lengthSq()<1.0E-4}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=d!==void 0?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w!==void 0?a.w:1},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-
b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},
normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this}};
THREE.Ray=function(a,b){function c(a,b,c){q.sub(c,a);y=q.dot(b);if(y<=0)return null;D=s.add(a,m.copy(b).multiplyScalar(y));return L=c.distanceTo(D)}function d(a,b,c,d){q.sub(d,b);s.sub(c,b);m.sub(a,b);sa=q.dot(q);fa=q.dot(s);la=q.dot(m);ka=s.dot(s);G=s.dot(m);N=1/(sa*ka-fa*fa);M=(ka*la-fa*G)*N;E=(sa*G-fa*la)*N;return M>=0&&E>=0&&M+E<1}this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3;this.intersectScene=function(a){return this.intersectObjects(a.children)};this.intersectObjects=
function(a){var b,c,d=[];b=0;for(c=a.length;b<c;b++)Array.prototype.push.apply(d,this.intersectObject(a[b]));d.sort(function(a,b){return a.distance-b.distance});return d};var f=new THREE.Vector3,g=new THREE.Vector3,h=new THREE.Vector3,i=new THREE.Vector3,a=new THREE.Vector3,b=new THREE.Vector3,n=new THREE.Vector3,l=new THREE.Vector3,j=new THREE.Vector3;this.intersectObject=function(m){for(var q,y=[],s=0,qa=m.children.length;s<qa;s++)Array.prototype.push.apply(y,this.intersectObject(m.children[s]));
if(m instanceof THREE.Particle){s=c(this.origin,this.direction,m.matrixWorld.getPosition());if(s===null||s>m.scale.x)return[];q={distance:s,point:m.position,face:null,object:m};y.push(q)}else if(m instanceof THREE.Mesh){s=c(this.origin,this.direction,m.matrixWorld.getPosition());if(s===null||s>m.geometry.boundingSphere.radius*Math.max(m.scale.x,Math.max(m.scale.y,m.scale.z)))return y;var D,L=m.geometry,oa=L.vertices,G;m.matrixRotationWorld.extractRotation(m.matrixWorld);s=0;for(qa=L.faces.length;s<
qa;s++)if(q=L.faces[s],a.copy(this.origin),b.copy(this.direction),G=m.matrixWorld,n=G.multiplyVector3(n.copy(q.centroid)).subSelf(a),D=n.dot(b),!(D<=0)&&(f=G.multiplyVector3(f.copy(oa[q.a].position)),g=G.multiplyVector3(g.copy(oa[q.b].position)),h=G.multiplyVector3(h.copy(oa[q.c].position)),q instanceof THREE.Face4&&(i=G.multiplyVector3(i.copy(oa[q.d].position))),l=m.matrixRotationWorld.multiplyVector3(l.copy(q.normal)),D=b.dot(l),m.doubleSided||(m.flipSided?D>0:D<0)))if(D=l.dot(n.sub(f,a))/D,j.add(a,
b.multiplyScalar(D)),q instanceof THREE.Face3)d(j,f,g,h)&&(q={distance:a.distanceTo(j),point:j.clone(),face:q,object:m},y.push(q));else if(q instanceof THREE.Face4&&(d(j,f,g,i)||d(j,g,h,i)))q={distance:a.distanceTo(j),point:j.clone(),face:q,object:m},y.push(q)}return y};var q=new THREE.Vector3,s=new THREE.Vector3,m=new THREE.Vector3,y,D,L,sa,fa,la,ka,G,N,M,E};
THREE.Rectangle=function(){function a(){g=d-b;h=f-c}var b,c,d,f,g,h,i=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return g};this.getHeight=function(){return h};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return d};this.getBottom=function(){return f};this.set=function(g,h,j,q){i=!1;b=g;c=h;d=j;f=q;a()};this.addPoint=function(g,h){i?(i=!1,b=g,c=h,d=g,f=h):(b=b<g?b:g,c=c<h?c:h,d=d>g?d:g,f=f>h?f:h);a()};this.add3Points=
function(g,h,j,q,s,m){i?(i=!1,b=g<j?g<s?g:s:j<s?j:s,c=h<q?h<m?h:m:q<m?q:m,d=g>j?g>s?g:s:j>s?j:s,f=h>q?h>m?h:m:q>m?q:m):(b=g<j?g<s?g<b?g:b:s<b?s:b:j<s?j<b?j:b:s<b?s:b,c=h<q?h<m?h<c?h:c:m<c?m:c:q<m?q<c?q:c:m<c?m:c,d=g>j?g>s?g>d?g:d:s>d?s:d:j>s?j>d?j:d:s>d?s:d,f=h>q?h>m?h>f?h:f:m>f?m:f:q>m?q>f?q:f:m>f?m:f);a()};this.addRectangle=function(g){i?(i=!1,b=g.getLeft(),c=g.getTop(),d=g.getRight(),f=g.getBottom()):(b=b<g.getLeft()?b:g.getLeft(),c=c<g.getTop()?c:g.getTop(),d=d>g.getRight()?d:g.getRight(),f=f>
g.getBottom()?f:g.getBottom());a()};this.inflate=function(g){b-=g;c-=g;d+=g;f+=g;a()};this.minSelf=function(g){b=b>g.getLeft()?b:g.getLeft();c=c>g.getTop()?c:g.getTop();d=d<g.getRight()?d:g.getRight();f=f<g.getBottom()?f:g.getBottom();a()};this.intersects=function(a){return Math.min(d,a.getRight())-Math.max(b,a.getLeft())>=0&&Math.min(f,a.getBottom())-Math.max(c,a.getTop())>=0};this.empty=function(){i=!0;f=d=c=b=0;a()};this.isEmpty=function(){return i}};
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,f){return d+(a-b)*(f-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535}};THREE.Matrix3=function(){this.m=[]};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,transpose:function(){var a,b=this.m;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};
THREE.Matrix4=function(a,b,c,d,f,g,h,i,n,l,j,q,s,m,y,D){this.set(a!==void 0?a:1,b||0,c||0,d||0,f||0,g!==void 0?g:1,h||0,i||0,n||0,l||0,j!==void 0?j:1,q||0,s||0,m||0,y||0,D!==void 0?D:1);this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,f,g,h,i,n,l,j,q,s,m,y,D){this.n11=a;this.n12=b;this.n13=c;this.n14=d;this.n21=f;this.n22=g;this.n23=h;this.n24=i;this.n31=n;this.n32=l;this.n33=j;this.n34=q;this.n41=s;this.n42=m;this.n43=y;this.n44=D;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.set(a.n11,a.n12,a.n13,a.n14,a.n21,a.n22,a.n23,a.n24,a.n31,a.n32,a.n33,a.n34,a.n41,a.n42,a.n43,a.n44);return this},lookAt:function(a,
b,c){var d=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(a,b).normalize();if(g.length()===0)g.z=1;d.cross(c,g).normalize();d.length()===0&&(g.x+=1.0E-4,d.cross(c,g).normalize());f.cross(g,d).normalize();this.n11=d.x;this.n12=f.x;this.n13=g.x;this.n21=d.y;this.n22=f.y;this.n23=g.y;this.n31=d.z;this.n32=f.z;this.n33=g.z;return this},multiply:function(a,b){var c=a.n11,d=a.n12,f=a.n13,g=a.n14,h=a.n21,i=a.n22,n=a.n23,l=a.n24,j=a.n31,q=a.n32,s=a.n33,m=a.n34,y=a.n41,D=a.n42,L=a.n43,
sa=a.n44,fa=b.n11,la=b.n12,ka=b.n13,G=b.n14,N=b.n21,M=b.n22,E=b.n23,na=b.n24,K=b.n31,$=b.n32,X=b.n33,qa=b.n34,ua=b.n41,ga=b.n42,oa=b.n43,Aa=b.n44;this.n11=c*fa+d*N+f*K+g*ua;this.n12=c*la+d*M+f*$+g*ga;this.n13=c*ka+d*E+f*X+g*oa;this.n14=c*G+d*na+f*qa+g*Aa;this.n21=h*fa+i*N+n*K+l*ua;this.n22=h*la+i*M+n*$+l*ga;this.n23=h*ka+i*E+n*X+l*oa;this.n24=h*G+i*na+n*qa+l*Aa;this.n31=j*fa+q*N+s*K+m*ua;this.n32=j*la+q*M+s*$+m*ga;this.n33=j*ka+q*E+s*X+m*oa;this.n34=j*G+q*na+s*qa+m*Aa;this.n41=y*fa+D*N+L*K+sa*ua;
this.n42=y*la+D*M+L*$+sa*ga;this.n43=y*ka+D*E+L*X+sa*oa;this.n44=y*G+D*na+L*qa+sa*Aa;return this},multiplySelf:function(a){return this.multiply(this,a)},multiplyToArray:function(a,b,c){this.multiply(a,b);c[0]=this.n11;c[1]=this.n21;c[2]=this.n31;c[3]=this.n41;c[4]=this.n12;c[5]=this.n22;c[6]=this.n32;c[7]=this.n42;c[8]=this.n13;c[9]=this.n23;c[10]=this.n33;c[11]=this.n43;c[12]=this.n14;c[13]=this.n24;c[14]=this.n34;c[15]=this.n44;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=
a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},multiplyVector3:function(a){var b=a.x,c=a.y,d=a.z,f=1/(this.n41*b+this.n42*c+this.n43*d+this.n44);a.x=(this.n11*b+this.n12*c+this.n13*d+this.n14)*f;a.y=(this.n21*b+this.n22*c+this.n23*d+this.n24)*f;a.z=(this.n31*b+this.n32*c+this.n33*d+this.n34)*f;return a},multiplyVector4:function(a){var b=a.x,c=a.y,d=a.z,f=a.w;a.x=this.n11*b+this.n12*
c+this.n13*d+this.n14*f;a.y=this.n21*b+this.n22*c+this.n23*d+this.n24*f;a.z=this.n31*b+this.n32*c+this.n33*d+this.n34*f;a.w=this.n41*b+this.n42*c+this.n43*d+this.n44*f;return a},rotateAxis:function(a){var b=a.x,c=a.y,d=a.z;a.x=b*this.n11+c*this.n12+d*this.n13;a.y=b*this.n21+c*this.n22+d*this.n23;a.z=b*this.n31+c*this.n32+d*this.n33;a.normalize();return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*
a.z+this.n24*a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},determinant:function(){var a=this.n11,b=this.n12,c=this.n13,d=this.n14,f=this.n21,g=this.n22,h=this.n23,i=this.n24,n=this.n31,l=this.n32,j=this.n33,q=this.n34,s=this.n41,m=this.n42,y=this.n43,D=this.n44;return d*h*l*s-c*i*l*s-d*g*j*s+b*i*j*s+c*g*q*s-b*h*q*s-d*h*n*m+c*i*n*m+d*f*j*m-a*i*j*m-c*f*q*m+a*h*q*m+d*g*n*y-b*i*n*y-d*f*l*y+a*i*l*y+b*f*q*y-a*g*q*y-c*
g*n*D+b*h*n*D+c*f*l*D-a*h*l*D-b*f*j*D+a*g*j*D},transpose:function(){var a;a=this.n21;this.n21=this.n12;this.n12=a;a=this.n31;this.n31=this.n13;this.n13=a;a=this.n32;this.n32=this.n23;this.n23=a;a=this.n41;this.n41=this.n14;this.n14=a;a=this.n42;this.n42=this.n24;this.n24=a;a=this.n43;this.n43=this.n34;this.n43=a;return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;
a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){this.flat[0]=this.n11;this.flat[1]=this.n21;this.flat[2]=this.n31;this.flat[3]=this.n41;this.flat[4]=this.n12;this.flat[5]=this.n22;this.flat[6]=this.n32;this.flat[7]=this.n42;this.flat[8]=this.n13;this.flat[9]=this.n23;this.flat[10]=this.n33;this.flat[11]=this.n43;this.flat[12]=this.n14;this.flat[13]=this.n24;this.flat[14]=this.n34;this.flat[15]=this.n44;return this.flat},
flattenToArray:function(a){a[0]=this.n11;a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},flattenToArrayOffset:function(a,b){a[b]=this.n11;a[b+1]=this.n21;a[b+2]=this.n31;a[b+3]=this.n41;a[b+4]=this.n12;a[b+5]=this.n22;a[b+6]=this.n32;a[b+7]=this.n42;a[b+8]=this.n13;a[b+9]=this.n23;a[b+10]=this.n33;a[b+11]=this.n43;a[b+12]=
this.n14;a[b+13]=this.n24;a[b+14]=this.n34;a[b+15]=this.n44;return a},setTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},setScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},setRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},setRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},setRotationZ:function(a){var b=Math.cos(a),
a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},setRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),f=1-c,g=a.x,h=a.y,i=a.z,n=f*g,l=f*h;this.set(n*g+c,n*h-d*i,n*i+d*h,0,n*h+d*i,l*h+c,l*i-d*g,0,n*i-d*h,l*i+d*g,f*i*i+c,0,0,0,0,1);return this},setPosition:function(a){this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},getPosition:function(){return THREE.Matrix4.__v1.set(this.n14,this.n24,this.n34)},getColumnX:function(){return THREE.Matrix4.__v1.set(this.n11,this.n21,
this.n31)},getColumnY:function(){return THREE.Matrix4.__v1.set(this.n12,this.n22,this.n32)},getColumnZ:function(){return THREE.Matrix4.__v1.set(this.n13,this.n23,this.n33)},getInverse:function(a){var b=a.n11,c=a.n12,d=a.n13,f=a.n14,g=a.n21,h=a.n22,i=a.n23,n=a.n24,l=a.n31,j=a.n32,q=a.n33,s=a.n34,m=a.n41,y=a.n42,D=a.n43,L=a.n44;this.n11=i*s*y-n*q*y+n*j*D-h*s*D-i*j*L+h*q*L;this.n12=f*q*y-d*s*y-f*j*D+c*s*D+d*j*L-c*q*L;this.n13=d*n*y-f*i*y+f*h*D-c*n*D-d*h*L+c*i*L;this.n14=f*i*j-d*n*j-f*h*q+c*n*q+d*h*s-
c*i*s;this.n21=n*q*m-i*s*m-n*l*D+g*s*D+i*l*L-g*q*L;this.n22=d*s*m-f*q*m+f*l*D-b*s*D-d*l*L+b*q*L;this.n23=f*i*m-d*n*m-f*g*D+b*n*D+d*g*L-b*i*L;this.n24=d*n*l-f*i*l+f*g*q-b*n*q-d*g*s+b*i*s;this.n31=h*s*m-n*j*m+n*l*y-g*s*y-h*l*L+g*j*L;this.n32=f*j*m-c*s*m-f*l*y+b*s*y+c*l*L-b*j*L;this.n33=d*n*m-f*h*m+f*g*y-b*n*y-c*g*L+b*h*L;this.n34=f*h*l-c*n*l-f*g*j+b*n*j+c*g*s-b*h*s;this.n41=i*j*m-h*q*m-i*l*y+g*q*y+h*l*D-g*j*D;this.n42=c*q*m-d*j*m+d*l*y-b*q*y-c*l*D+b*j*D;this.n43=d*h*m-c*i*m-d*g*y+b*i*y+c*g*D-b*h*D;
this.n44=c*i*l-d*h*l+d*g*j-b*i*j-c*g*q+b*h*q;this.multiplyScalar(1/a.determinant());return this},setRotationFromEuler:function(a,b){var c=a.x,d=a.y,f=a.z,g=Math.cos(c),c=Math.sin(c),h=Math.cos(d),d=Math.sin(d),i=Math.cos(f),f=Math.sin(f);switch(b){case "YXZ":var n=h*i,l=h*f,j=d*i,q=d*f;this.n11=n+q*c;this.n12=j*c-l;this.n13=g*d;this.n21=g*f;this.n22=g*i;this.n23=-c;this.n31=l*c-j;this.n32=q+n*c;this.n33=g*h;break;case "ZXY":n=h*i;l=h*f;j=d*i;q=d*f;this.n11=n-q*c;this.n12=-g*f;this.n13=j+l*c;this.n21=
l+j*c;this.n22=g*i;this.n23=q-n*c;this.n31=-g*d;this.n32=c;this.n33=g*h;break;case "ZYX":n=g*i;l=g*f;j=c*i;q=c*f;this.n11=h*i;this.n12=j*d-l;this.n13=n*d+q;this.n21=h*f;this.n22=q*d+n;this.n23=l*d-j;this.n31=-d;this.n32=c*h;this.n33=g*h;break;case "YZX":n=g*h;l=g*d;j=c*h;q=c*d;this.n11=h*i;this.n12=q-n*f;this.n13=j*f+l;this.n21=f;this.n22=g*i;this.n23=-c*i;this.n31=-d*i;this.n32=l*f+j;this.n33=n-q*f;break;case "XZY":n=g*h;l=g*d;j=c*h;q=c*d;this.n11=h*i;this.n12=-f;this.n13=d*i;this.n21=n*f+q;this.n22=
g*i;this.n23=l*f-j;this.n31=j*f-l;this.n32=c*i;this.n33=q*f+n;break;default:n=g*i,l=g*f,j=c*i,q=c*f,this.n11=h*i,this.n12=-h*f,this.n13=d,this.n21=l+j*d,this.n22=n-q*d,this.n23=-c*h,this.n31=q-n*d,this.n32=j+l*d,this.n33=g*h}return this},setRotationFromQuaternion:function(a){var b=a.x,c=a.y,d=a.z,f=a.w,g=b+b,h=c+c,i=d+d,a=b*g,n=b*h;b*=i;var l=c*h;c*=i;d*=i;g*=f;h*=f;f*=i;this.n11=1-(l+d);this.n12=n-f;this.n13=b+h;this.n21=n+f;this.n22=1-(a+d);this.n23=c-g;this.n31=b-h;this.n32=c+g;this.n33=1-(a+l);
return this},scale:function(a){var b=a.x,c=a.y,a=a.z;this.n11*=b;this.n12*=c;this.n13*=a;this.n21*=b;this.n22*=c;this.n23*=a;this.n31*=b;this.n32*=c;this.n33*=a;this.n41*=b;this.n42*=c;this.n43*=a;return this},compose:function(a,b,c){var d=THREE.Matrix4.__m1,f=THREE.Matrix4.__m2;d.identity();d.setRotationFromQuaternion(b);f.setScale(c.x,c.y,c.z);this.multiply(d,f);this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},decompose:function(a,b,c){var d=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;
d.set(this.n11,this.n21,this.n31);f.set(this.n12,this.n22,this.n32);g.set(this.n13,this.n23,this.n33);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=d.length();c.y=f.length();c.z=g.length();a.x=this.n14;a.y=this.n24;a.z=this.n34;d=THREE.Matrix4.__m1;d.copy(this);d.n11/=c.x;d.n21/=c.x;d.n31/=c.x;d.n12/=c.y;d.n22/=c.y;d.n32/=c.y;d.n13/=c.z;d.n23/=c.z;d.n33/=c.z;b.setFromRotationMatrix(d);return[a,
b,c]},extractPosition:function(a){this.n14=a.n14;this.n24=a.n24;this.n34=a.n34;return this},extractRotation:function(a){var b=THREE.Matrix4.__v1,c=1/b.set(a.n11,a.n21,a.n31).length(),d=1/b.set(a.n12,a.n22,a.n32).length(),b=1/b.set(a.n13,a.n23,a.n33).length();this.n11=a.n11*c;this.n21=a.n21*c;this.n31=a.n31*c;this.n12=a.n12*d;this.n22=a.n22*d;this.n32=a.n32*d;this.n13=a.n13*b;this.n23=a.n23*b;this.n33=a.n33*b;return this}};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.m33,c=b.m,d=a.n33*a.n22-a.n32*a.n23,f=-a.n33*a.n21+a.n31*a.n23,g=a.n32*a.n21-a.n31*a.n22,h=-a.n33*a.n12+a.n32*a.n13,i=a.n33*a.n11-a.n31*a.n13,n=-a.n32*a.n11+a.n31*a.n12,l=a.n23*a.n12-a.n22*a.n13,j=-a.n23*a.n11+a.n21*a.n13,q=a.n22*a.n11-a.n21*a.n12,a=a.n11*d+a.n21*h+a.n31*l;a===0&&console.error("THREE.Matrix4.makeInvert3x3: Matrix not invertible.");a=1/a;c[0]=a*d;c[1]=a*f;c[2]=a*g;c[3]=a*h;c[4]=a*i;c[5]=a*n;c[6]=a*l;c[7]=a*j;c[8]=a*q;return b};
THREE.Matrix4.makeFrustum=function(a,b,c,d,f,g){var h;h=new THREE.Matrix4;h.n11=2*f/(b-a);h.n12=0;h.n13=(b+a)/(b-a);h.n14=0;h.n21=0;h.n22=2*f/(d-c);h.n23=(d+c)/(d-c);h.n24=0;h.n31=0;h.n32=0;h.n33=-(g+f)/(g-f);h.n34=-2*g*f/(g-f);h.n41=0;h.n42=0;h.n43=-1;h.n44=0;return h};THREE.Matrix4.makePerspective=function(a,b,c,d){var f,a=c*Math.tan(a*Math.PI/360);f=-a;return THREE.Matrix4.makeFrustum(f*b,a*b,f,a,c,d)};
THREE.Matrix4.makeOrtho=function(a,b,c,d,f,g){var h,i,n,l;h=new THREE.Matrix4;i=b-a;n=c-d;l=g-f;h.n11=2/i;h.n12=0;h.n13=0;h.n14=-((b+a)/i);h.n21=0;h.n22=2/n;h.n23=0;h.n24=-((c+d)/n);h.n31=0;h.n32=0;h.n33=-2/l;h.n34=-((g+f)/l);h.n41=0;h.n42=0;h.n43=0;h.n44=1;return h};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.Object3D=function(){this.name="";this.id=THREE.Object3DCount++;this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder="XYZ";this.scale=new THREE.Vector3(1,1,1);this.flipSided=this.doubleSided=this.dynamic=!1;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=
!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)},add:function(a){if(this.children.indexOf(a)===
-1){a.parent!==void 0&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(b!==-1){a.parent=void 0;this.children.splice(b,1);for(b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.removeObject(a)}},getChildByName:function(a,b){var c,d,f;c=0;for(d=this.children.length;c<d;c++){f=this.children[c];if(f.name===a)return f;
if(b&&(f=f.getChildByName(a,b),f!==void 0))return f}},updateMatrix:function(){this.matrix.setPosition(this.position);this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder);if(this.scale.x!==1||this.scale.y!==1||this.scale.z!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&
this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)}};THREE.Object3DCount=0;
THREE.Projector=function(){function a(){var a=h[g]=h[g]||new THREE.RenderableObject;g++;return a}function b(){var a=l[n]=l[n]||new THREE.RenderableVertex;n++;return a}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,g=a.z+a.w,f=b.z+b.w,h=-a.z+a.w,i=-b.z+b.w;return g>=0&&f>=0&&h>=0&&i>=0?!0:g<0&&f<0||h<0&&i<0?!1:(g<0?c=Math.max(c,g/(g-f)):f<0&&(d=Math.min(d,g/(g-f))),h<0?c=Math.max(c,h/(h-i)):i<0&&(d=Math.min(d,h/(h-i))),d<c?!1:(a.lerpSelf(b,c),b.lerpSelf(a,1-d),!0))}var f,g,h=[],i,n,l=[],
j,q,s=[],m,y=[],D,L,sa=[],fa,la,ka=[],G={objects:[],sprites:[],lights:[],elements:[]},N=new THREE.Vector3,M=new THREE.Vector4,E=new THREE.Matrix4,na=new THREE.Matrix4,K=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],$=new THREE.Vector4,X=new THREE.Vector4;this.computeFrustum=function(a){K[0].set(a.n41-a.n11,a.n42-a.n12,a.n43-a.n13,a.n44-a.n14);K[1].set(a.n41+a.n11,a.n42+a.n12,a.n43+a.n13,a.n44+a.n14);K[2].set(a.n41+a.n21,a.n42+a.n22,a.n43+
a.n23,a.n44+a.n24);K[3].set(a.n41-a.n21,a.n42-a.n22,a.n43-a.n23,a.n44-a.n24);K[4].set(a.n41-a.n31,a.n42-a.n32,a.n43-a.n33,a.n44-a.n34);K[5].set(a.n41+a.n31,a.n42+a.n32,a.n43+a.n33,a.n44+a.n34);for(a=0;a<6;a++){var b=K[a];b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))}};this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);E.multiply(b.projectionMatrix,b.matrixWorldInverse);E.multiplyVector3(a);return a};this.unprojectVector=function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);
E.multiply(b.matrixWorld,b.projectionMatrixInverse);E.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectGraph=function(b,d){g=0;G.objects.length=0;G.sprites.length=0;G.lights.length=0;var h=function(b){if(b.visible!==!1){var c;if(c=b instanceof THREE.Mesh||b instanceof THREE.Line)if(!(c=b.frustumCulled===!1))a:{for(var d=b.matrixWorld,
g=-b.geometry.boundingSphere.radius*Math.max(b.scale.x,Math.max(b.scale.y,b.scale.z)),i=0;i<6;i++)if(c=K[i].x*d.n14+K[i].y*d.n24+K[i].z*d.n34+K[i].w,c<=g){c=!1;break a}c=!0}c?(E.multiplyVector3(N.copy(b.position)),f=a(),f.object=b,f.z=N.z,G.objects.push(f)):b instanceof THREE.Sprite||b instanceof THREE.Particle?(E.multiplyVector3(N.copy(b.position)),f=a(),f.object=b,f.z=N.z,G.sprites.push(f)):b instanceof THREE.Light&&G.lights.push(b);c=0;for(d=b.children.length;c<d;c++)h(b.children[c])}};h(b);d&&
G.objects.sort(c);return G};this.projectScene=function(a,g,f){var h=g.near,N=g.far,K,ra,ba,Q,J,R,C,e,O,va,ta,wa,xa,Da,Ba,ya;la=L=m=q=0;G.elements.length=0;g.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),a.add(g));a.updateMatrixWorld();g.matrixWorldInverse.getInverse(g.matrixWorld);E.multiply(g.projectionMatrix,g.matrixWorldInverse);this.computeFrustum(E);G=this.projectGraph(a,!1);a=0;for(K=G.objects.length;a<K;a++)if(O=G.objects[a].object,va=O.matrixWorld,
wa=O.material,n=0,O instanceof THREE.Mesh){ta=O.geometry;xa=O.geometry.materials;Q=ta.vertices;Da=ta.faces;Ba=ta.faceVertexUvs;ta=O.matrixRotationWorld.extractRotation(va);ra=0;for(ba=Q.length;ra<ba;ra++)i=b(),i.positionWorld.copy(Q[ra].position),va.multiplyVector3(i.positionWorld),i.positionScreen.copy(i.positionWorld),E.multiplyVector4(i.positionScreen),i.positionScreen.x/=i.positionScreen.w,i.positionScreen.y/=i.positionScreen.w,i.visible=i.positionScreen.z>h&&i.positionScreen.z<N;Q=0;for(ra=Da.length;Q<
ra;Q++){ba=Da[Q];if(ba instanceof THREE.Face3)if(J=l[ba.a],R=l[ba.b],C=l[ba.c],J.visible&&R.visible&&C.visible&&(O.doubleSided||O.flipSided!=(C.positionScreen.x-J.positionScreen.x)*(R.positionScreen.y-J.positionScreen.y)-(C.positionScreen.y-J.positionScreen.y)*(R.positionScreen.x-J.positionScreen.x)<0))e=s[q]=s[q]||new THREE.RenderableFace3,q++,j=e,j.v1.copy(J),j.v2.copy(R),j.v3.copy(C);else continue;else if(ba instanceof THREE.Face4)if(J=l[ba.a],R=l[ba.b],C=l[ba.c],e=l[ba.d],J.visible&&R.visible&&
C.visible&&e.visible&&(O.doubleSided||O.flipSided!=((e.positionScreen.x-J.positionScreen.x)*(R.positionScreen.y-J.positionScreen.y)-(e.positionScreen.y-J.positionScreen.y)*(R.positionScreen.x-J.positionScreen.x)<0||(R.positionScreen.x-C.positionScreen.x)*(e.positionScreen.y-C.positionScreen.y)-(R.positionScreen.y-C.positionScreen.y)*(e.positionScreen.x-C.positionScreen.x)<0)))ya=y[m]=y[m]||new THREE.RenderableFace4,m++,j=ya,j.v1.copy(J),j.v2.copy(R),j.v3.copy(C),j.v4.copy(e);else continue;j.normalWorld.copy(ba.normal);
ta.multiplyVector3(j.normalWorld);j.centroidWorld.copy(ba.centroid);va.multiplyVector3(j.centroidWorld);j.centroidScreen.copy(j.centroidWorld);E.multiplyVector3(j.centroidScreen);C=ba.vertexNormals;J=0;for(R=C.length;J<R;J++)e=j.vertexNormalsWorld[J],e.copy(C[J]),ta.multiplyVector3(e);J=0;for(R=Ba.length;J<R;J++)if(ya=Ba[J][Q]){C=0;for(e=ya.length;C<e;C++)j.uvs[J][C]=ya[C]}j.material=wa;j.faceMaterial=ba.materialIndex!==null?xa[ba.materialIndex]:null;j.z=j.centroidScreen.z;G.elements.push(j)}}else if(O instanceof
THREE.Line){na.multiply(E,va);Q=O.geometry.vertices;J=b();J.positionScreen.copy(Q[0].position);na.multiplyVector4(J.positionScreen);ra=1;for(ba=Q.length;ra<ba;ra++)if(J=b(),J.positionScreen.copy(Q[ra].position),na.multiplyVector4(J.positionScreen),R=l[n-2],$.copy(J.positionScreen),X.copy(R.positionScreen),d($,X))$.multiplyScalar(1/$.w),X.multiplyScalar(1/X.w),O=sa[L]=sa[L]||new THREE.RenderableLine,L++,D=O,D.v1.positionScreen.copy($),D.v2.positionScreen.copy(X),D.z=Math.max($.z,X.z),D.material=wa,
G.elements.push(D)}a=0;for(K=G.sprites.length;a<K;a++)if(O=G.sprites[a].object,va=O.matrixWorld,O instanceof THREE.Particle&&(M.set(va.n14,va.n24,va.n34,1),E.multiplyVector4(M),M.z/=M.w,M.z>0&&M.z<1))h=ka[la]=ka[la]||new THREE.RenderableParticle,la++,fa=h,fa.x=M.x/M.w,fa.y=M.y/M.w,fa.z=M.z,fa.rotation=O.rotation.z,fa.scale.x=O.scale.x*Math.abs(fa.x-(M.x+g.projectionMatrix.n11)/(M.w+g.projectionMatrix.n14)),fa.scale.y=O.scale.y*Math.abs(fa.y-(M.y+g.projectionMatrix.n22)/(M.w+g.projectionMatrix.n24)),
fa.material=O.material,G.elements.push(fa);f&&G.elements.sort(c);return G}};THREE.Quaternion=function(a,b,c,d){this.set(a||0,b||0,c||0,d!==void 0?d:1)};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a){var b=Math.PI/360,c=a.x*b,d=a.y*b,f=a.z*b,a=Math.cos(d),d=Math.sin(d),b=Math.cos(-f),f=Math.sin(-f),g=Math.cos(c),c=Math.sin(c),h=a*b,i=d*f;this.w=h*g-i*c;this.x=h*c+i*g;this.y=d*b*g+a*f*c;this.z=a*f*g-d*b*c;return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);
this.x=a.x*d;this.y=a.y*d;this.z=a.z*d;this.w=Math.cos(c);return this},setFromRotationMatrix:function(a){var b=Math.pow(a.determinant(),1/3);this.w=Math.sqrt(Math.max(0,b+a.n11+a.n22+a.n33))/2;this.x=Math.sqrt(Math.max(0,b+a.n11-a.n22-a.n33))/2;this.y=Math.sqrt(Math.max(0,b-a.n11+a.n22-a.n33))/2;this.z=Math.sqrt(Math.max(0,b-a.n11-a.n22+a.n33))/2;this.x=a.n32-a.n23<0?-Math.abs(this.x):Math.abs(this.x);this.y=a.n13-a.n31<0?-Math.abs(this.y):Math.abs(this.y);this.z=a.n21-a.n12<0?-Math.abs(this.z):Math.abs(this.z);
this.normalize();return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);a===0?this.w=this.z=this.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiplySelf:function(a){var b=
this.x,c=this.y,d=this.z,f=this.w,g=a.x,h=a.y,i=a.z,a=a.w;this.x=b*a+f*g+c*i-d*h;this.y=c*a+f*h+d*g-b*i;this.z=d*a+f*i+b*h-c*g;this.w=f*a-b*g-c*h-d*i;return this},multiply:function(a,b){this.x=a.x*b.w+a.y*b.z-a.z*b.y+a.w*b.x;this.y=-a.x*b.z+a.y*b.w+a.z*b.x+a.w*b.y;this.z=a.x*b.y-a.y*b.x+a.z*b.w+a.w*b.z;this.w=-a.x*b.x-a.y*b.y-a.z*b.z+a.w*b.w;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,d=a.y,f=a.z,g=this.x,h=this.y,i=this.z,n=this.w,l=n*c+h*f-i*d,j=n*d+i*c-g*f,q=n*f+g*d-h*c,c=-g*
c-h*d-i*f;b.x=l*n+c*-g+j*-i-q*-h;b.y=j*n+c*-h+q*-g-l*-i;b.z=q*n+c*-i+l*-h-j*-g;return b}};
THREE.Quaternion.slerp=function(a,b,c,d){var f=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;f<0?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,f=-f):c.copy(b);if(Math.abs(f)>=1)return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;var g=Math.acos(f),f=Math.sqrt(1-f*f);if(Math.abs(f)<0.0010)return c.w=0.5*(a.w+b.w),c.x=0.5*(a.x+b.x),c.y=0.5*(a.y+b.y),c.z=0.5*(a.z+b.z),c;b=Math.sin((1-d)*g)/f;d=Math.sin(d*g)/f;c.w=a.w*b+c.w*d;c.x=a.x*b+c.x*d;c.y=a.y*b+c.y*d;c.z=a.z*b+c.z*d;return c};THREE.Vertex=function(a){this.position=a||new THREE.Vector3};
THREE.Face3=function(a,b,c,d,f,g){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=g;this.centroid=new THREE.Vector3};
THREE.Face4=function(a,b,c,d,f,g,h){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.color=g instanceof THREE.Color?g:new THREE.Color;this.vertexColors=g instanceof Array?g:[];this.vertexTangents=[];this.materialIndex=h;this.centroid=new THREE.Vector3};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){this.id=THREE.GeometryCount++;this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.dynamic=this.hasTangents=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a,new THREE.Vector3(1,1,1));for(var c=0,d=this.vertices.length;c<d;c++)a.multiplyVector3(this.vertices[c].position);c=0;for(d=this.faces.length;c<d;c++){var f=this.faces[c];b.multiplyVector3(f.normal);for(var g=0,h=f.vertexNormals.length;g<h;g++)b.multiplyVector3(f.vertexNormals[g]);a.multiplyVector3(f.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<
b;a++)c=this.faces[a],c.centroid.set(0,0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a].position),c.centroid.addSelf(this.vertices[c.b].position),c.centroid.addSelf(this.vertices[c.c].position),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a].position),c.centroid.addSelf(this.vertices[c.b].position),c.centroid.addSelf(this.vertices[c.c].position),c.centroid.addSelf(this.vertices[c.d].position),c.centroid.divideScalar(4))},computeFaceNormals:function(){var a,
b,c,d,f,g,h=new THREE.Vector3,i=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],d=this.vertices[c.a],f=this.vertices[c.b],g=this.vertices[c.c],h.sub(g.position,f.position),i.sub(d.position,f.position),h.crossSelf(i),h.isZero()||h.normalize(),c.normal.copy(h)},computeVertexNormals:function(){var a,b,c,d;if(this.__tmpVertices===void 0){d=this.__tmpVertices=Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)d[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)if(c=
this.faces[a],c instanceof THREE.Face3)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(c instanceof THREE.Face4)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else{d=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)d[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal)):c instanceof THREE.Face4&&(d[c.a].addSelf(c.normal),
d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal),d[c.d].addSelf(c.normal));a=0;for(b=this.vertices.length;a<b;a++)d[a].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c])):c instanceof THREE.Face4&&(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c]),c.vertexNormals[3].copy(d[c.d]))},computeTangents:function(){function a(a,
b,c,d,g,f,E){i=a.vertices[b].position;n=a.vertices[c].position;l=a.vertices[d].position;j=h[g];q=h[f];s=h[E];m=n.x-i.x;y=l.x-i.x;D=n.y-i.y;L=l.y-i.y;sa=n.z-i.z;fa=l.z-i.z;la=q.u-j.u;ka=s.u-j.u;G=q.v-j.v;N=s.v-j.v;M=1/(la*N-ka*G);$.set((N*m-G*y)*M,(N*D-G*L)*M,(N*sa-G*fa)*M);X.set((la*y-ka*m)*M,(la*L-ka*D)*M,(la*fa-ka*sa)*M);na[b].addSelf($);na[c].addSelf($);na[d].addSelf($);K[b].addSelf(X);K[c].addSelf(X);K[d].addSelf(X)}var b,c,d,f,g,h,i,n,l,j,q,s,m,y,D,L,sa,fa,la,ka,G,N,M,E,na=[],K=[],$=new THREE.Vector3,
X=new THREE.Vector3,qa=new THREE.Vector3,ua=new THREE.Vector3,ga=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)na[b]=new THREE.Vector3,K[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)g=this.faces[b],h=this.faceVertexUvs[0][b],g instanceof THREE.Face3?a(this,g.a,g.b,g.c,0,1,2):g instanceof THREE.Face4&&(a(this,g.a,g.b,g.c,0,1,2),a(this,g.a,g.b,g.d,0,1,3));var oa=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){g=this.faces[b];for(d=0;d<g.vertexNormals.length;d++)ga.copy(g.vertexNormals[d]),
f=g[oa[d]],E=na[f],qa.copy(E),qa.subSelf(ga.multiplyScalar(ga.dot(E))).normalize(),ua.cross(g.vertexNormals[d],E),f=ua.dot(K[f]),f=f<0?-1:1,g.vertexTangents[d]=new THREE.Vector4(qa.x,qa.y,qa.z,f)}this.hasTangents=!0},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,c=this.vertices.length;b<
c;b++){a=this.vertices[b];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=
0,b=0,c=this.vertices.length;b<c;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},mergeVertices:function(){var a={},b=[],c=[],d,f=Math.pow(10,4),g,h;g=0;for(h=this.vertices.length;g<h;g++)d=this.vertices[g].position,d=[Math.round(d.x*f),Math.round(d.y*f),Math.round(d.z*f)].join("_"),a[d]===void 0?(a[d]=g,b.push(this.vertices[g]),c[g]=b.length-1):c[g]=c[a[d]];g=0;for(h=this.faces.length;g<h;g++)if(a=this.faces[g],a instanceof THREE.Face3)a.a=c[a.a],a.b=c[a.b],a.c=
c[a.c];else if(a instanceof THREE.Face4)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c],a.d=c[a.d];this.vertices=b}};THREE.GeometryCount=0;
THREE.Spline=function(a){function b(a,b,c,d,g,f,h){a=(c-a)*0.5;d=(d-b)*0.5;return(2*(b-c)+a+d)*h+(-3*(b-c)-2*a-d)*f+a*g+b}this.points=a;var c=[],d={x:0,y:0,z:0},f,g,h,i,n,l,j,q,s;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){f=(this.points.length-1)*a;g=Math.floor(f);h=f-g;c[0]=g===0?g:g-1;c[1]=g;c[2]=g>this.points.length-2?g:g+1;c[3]=g>this.points.length-3?g:g+2;l=this.points[c[0]];j=this.points[c[1]];
q=this.points[c[2]];s=this.points[c[3]];i=h*h;n=h*i;d.x=b(l.x,j.x,q.x,s.x,h,i,n);d.y=b(l.y,j.y,q.y,s.y,h,i,n);d.z=b(l.z,j.z,q.z,s.z,h,i,n);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,g=b=b=0,f=new THREE.Vector3,h=new THREE.Vector3,i=[],j=0;i[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=a/c,d=this.getPoint(b),h.copy(d),j+=h.distanceTo(f),
f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=g&&(i[b]=j,g=b);i[i.length]=j;return{chunks:i,total:j}};this.reparametrizeByArcLength=function(a){var b,c,d,g,f,h,i=[],j=new THREE.Vector3,q=this.getLength();i.push(j.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=q.chunks[b]-q.chunks[b-1];h=Math.ceil(a*c/q.total);g=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<h-1;c++)d=g+c*(1/h)*(f-g),d=this.getPoint(d),i.push(j.copy(d).clone());i.push(j.copy(this.points[b]).clone())}this.points=
i}};THREE.Edge=function(a,b,c,d){this.vertices=[a,b];this.vertexIndices=[c,d];this.faces=[];this.faceIndices=[]};THREE.Camera=function(){if(arguments.length)return console.warn("DEPRECATED: Camera() is now PerspectiveCamera() or OrthographicCamera()."),new THREE.PerspectiveCamera(arguments[0],arguments[1],arguments[2],arguments[3]);THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};
THREE.Camera.prototype=new THREE.Object3D;THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)};THREE.OrthographicCamera=function(a,b,c,d,f,g){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=f!==void 0?f:0.1;this.far=g!==void 0?g:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=new THREE.Camera;
THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makeOrtho(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=a!==void 0?a:50;this.aspect=b!==void 0?b:1;this.near=c!==void 0?c:0.1;this.far=d!==void 0?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=new THREE.Camera;
THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;THREE.PerspectiveCamera.prototype.setLens=function(a,b){this.fov=2*Math.atan((b!==void 0?b:43.25)/(a*2));this.fov*=180/Math.PI;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,f,g){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=f;this.height=g;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix=THREE.Matrix4.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,
this.far)};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=new THREE.Object3D;THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.supr=THREE.Object3D.prototype;THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;
THREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0};THREE.PointLight.prototype=new THREE.Light;
THREE.PointLight.prototype.constructor=THREE.PointLight;THREE.SpotLight=function(a,b,c,d){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0;this.castShadow=d!==void 0?d:!1};THREE.SpotLight.prototype=new THREE.Light;THREE.SpotLight.prototype.constructor=THREE.SpotLight;
THREE.Material=function(a){this.name="";this.id=THREE.MaterialCount++;a=a||{};this.opacity=a.opacity!==void 0?a.opacity:1;this.transparent=a.transparent!==void 0?a.transparent:!1;this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.depthTest=a.depthTest!==void 0?a.depthTest:!0;this.depthWrite=a.depthWrite!==void 0?a.depthWrite:!0;this.polygonOffset=a.polygonOffset!==void 0?a.polygonOffset:!1;this.polygonOffsetFactor=a.polygonOffsetFactor!==void 0?a.polygonOffsetFactor:0;this.polygonOffsetUnits=
a.polygonOffsetUnits!==void 0?a.polygonOffsetUnits:0;this.alphaTest=a.alphaTest!==void 0?a.alphaTest:0;this.overdraw=a.overdraw!==void 0?a.overdraw:!1};THREE.MaterialCount=0;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;THREE.MultiplyBlending=3;THREE.AdditiveAlphaBlending=4;
THREE.LineBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.linewidth=a.linewidth!==void 0?a.linewidth:1;this.linecap=a.linecap!==void 0?a.linecap:"round";this.linejoin=a.linejoin!==void 0?a.linejoin:"round";this.vertexColors=a.vertexColors?a.vertexColors:!1;this.fog=a.fog!==void 0?a.fog:!0};THREE.LineBasicMaterial.prototype=new THREE.Material;THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:null;this.lightMap=a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:
!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:
!1};THREE.MeshBasicMaterial.prototype=new THREE.Material;THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(328965);this.map=a.map!==void 0?a.map:null;this.lightMap=a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=
a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=
a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.MeshLambertMaterial.prototype=new THREE.Material;THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(328965);this.specular=a.specular!==void 0?new THREE.Color(a.specular):new THREE.Color(1118481);this.shininess=a.shininess!==void 0?a.shininess:30;this.metal=a.metal!==void 0?a.metal:!1;this.perPixel=a.perPixel!==void 0?a.perPixel:!1;this.map=a.map!==void 0?a.map:null;this.lightMap=
a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=
a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.MeshPhongMaterial.prototype=new THREE.Material;THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1};THREE.MeshDepthMaterial.prototype=new THREE.Material;THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading?a.shading:THREE.FlatShading;this.wireframe=a.wireframe?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth?a.wireframeLinewidth:1};THREE.MeshNormalMaterial.prototype=new THREE.Material;THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshFaceMaterial=function(){};
THREE.MeshShaderMaterial=function(a){console.warn("DEPRECATED: MeshShaderMaterial() is now ShaderMaterial().");return new THREE.ShaderMaterial(a)};
THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:null;this.size=a.size!==void 0?a.size:1;this.sizeAttenuation=a.sizeAttenuation!==void 0?a.sizeAttenuation:!0;this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.fog=a.fog!==void 0?a.fog:!0};THREE.ParticleBasicMaterial.prototype=new THREE.Material;THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial;
THREE.ShaderMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.fragmentShader=a.fragmentShader!==void 0?a.fragmentShader:"void main() {}";this.vertexShader=a.vertexShader!==void 0?a.vertexShader:"void main() {}";this.uniforms=a.uniforms!==void 0?a.uniforms:{};this.attributes=a.attributes;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.fog=a.fog!==
void 0?a.fog:!1;this.lights=a.lights!==void 0?a.lights:!1;this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.ShaderMaterial.prototype=new THREE.Material;THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;
THREE.Texture=function(a,b,c,d,f,g){this.id=THREE.TextureCount++;this.image=a;this.mapping=b!==void 0?b:new THREE.UVMapping;this.wrapS=c!==void 0?c:THREE.ClampToEdgeWrapping;this.wrapT=d!==void 0?d:THREE.ClampToEdgeWrapping;this.magFilter=f!==void 0?f:THREE.LinearFilter;this.minFilter=g!==void 0?g:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a}};THREE.TextureCount=0;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;
THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;THREE.DataTexture=function(a,b,c,d,f,g,h,i,n){THREE.Texture.call(this,null,f,g,h,i,n);this.image={data:a,width:b,height:c};this.format=d!==void 0?d:THREE.RGBAFormat};THREE.DataTexture.prototype=new THREE.Texture;THREE.DataTexture.prototype.constructor=THREE.DataTexture;
THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.data.slice(0),this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b;this.sortParticles=!1};
THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=b;this.type=c!==void 0?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b;if(b instanceof Array)console.warn("DEPRECATED: Mesh material can no longer be an Array. Using material at index 0..."),this.material=b[0];if(this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};
for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.supr=THREE.Object3D.prototype;
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(this.morphTargetDictionary[a]!==void 0)return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=new THREE.Object3D;THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.supr=THREE.Object3D.prototype;
THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b){THREE.Mesh.call(this,a,b);this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var c,d,f,g,h,i;if(this.geometry.bones!==void 0){for(c=0;c<this.geometry.bones.length;c++)f=this.geometry.bones[c],g=f.pos,h=f.rotq,i=f.scl,d=this.addBone(),d.name=f.name,d.position.set(g[0],g[1],g[2]),d.quaternion.set(h[0],h[1],h[2],h[3]),d.useQuaternion=!0,i!==void 0?d.scale.set(i[0],i[1],i[2]):d.scale.set(1,1,1);for(c=0;c<this.bones.length;c++)f=this.geometry.bones[c],
d=this.bones[c],f.parent===-1?this.add(d):this.bones[f.parent].add(d);this.boneMatrices=new Float32Array(16*this.bones.length);this.pose()}};THREE.SkinnedMesh.prototype=new THREE.Mesh;THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.addBone=function(a){a===void 0&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}for(var b=this.bones.length,c=this.bones,d=this.boneMatrices,a=0;a<b;a++)c[a].skinMatrix.flattenToArrayOffset(d,
a*16)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a,b=[],c=0;c<this.bones.length;c++){a=this.bones[c];var d=new THREE.Matrix4;d.getInverse(a.skinMatrix);b.push(d);a.skinMatrix.flattenToArrayOffset(this.boneMatrices,c*16)}if(this.geometry.skinVerticesA===void 0){this.geometry.skinVerticesA=[];this.geometry.skinVerticesB=[];for(a=0;a<this.geometry.skinIndices.length;a++){var c=this.geometry.vertices[a].position,f=this.geometry.skinIndices[a].x,g=this.geometry.skinIndices[a].y,d=
new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesA.push(b[f].multiplyVector3(d));d=new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesB.push(b[g].multiplyVector3(d));this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y!==1&&(c=(1-(this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y))*0.5,this.geometry.skinWeights[a].x+=c,this.geometry.skinWeights[a].y+=c)}}};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};
THREE.Ribbon.prototype=new THREE.Object3D;THREE.Ribbon.prototype.constructor=THREE.Ribbon;THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=new THREE.Object3D;THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.supr=THREE.Object3D.prototype;THREE.LOD.prototype.addLevel=function(a,b){b===void 0&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length;c++)if(b<this.LODs[c].visibleAtDistance)break;this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(this.LODs.length>1){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.n31*this.position.x+a.n32*this.position.y+a.n33*this.position.z+a.n34);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=!1}};
THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map instanceof THREE.Texture?a.map:THREE.ImageUtils.loadTexture(a.map);this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.useScreenCoordinates=a.useScreenCoordinates!==void 0?a.useScreenCoordinates:!0;this.mergeWith3D=a.mergeWith3D!==void 0?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=a.affectedByDistance!==void 0?a.affectedByDistance:
!this.useScreenCoordinates;this.scaleByViewport=a.scaleByViewport!==void 0?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1)};THREE.Sprite.prototype=new THREE.Object3D;THREE.Sprite.prototype.constructor=THREE.Sprite;
THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(this.scale.x!==1||this.scale.y!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);
THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);
THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.objects=[];this.lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=new THREE.Object3D;THREE.Scene.prototype.constructor=THREE.Scene;
THREE.Scene.prototype.addObject=function(a){if(a instanceof THREE.Light)this.lights.indexOf(a)===-1&&this.lights.push(a);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&this.objects.indexOf(a)===-1){this.objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);b!==-1&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.addObject(a.children[b])};
THREE.Scene.prototype.removeObject=function(a){if(a instanceof THREE.Light){var b=this.lights.indexOf(a);b!==-1&&this.lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.objects.indexOf(a),b!==-1&&(this.objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),b!==-1&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=b!==void 0?b:1;this.far=c!==void 0?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b!==void 0?b:2.5E-4};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity );\n} else {\ngl_FragColor.xyz = gl_FragColor.xyz * cubeColor.xyz;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",
lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif",
lights_lambert_vertex:"vLightWeighting = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat pointLightWeighting = max( dot( transformedNormal, lVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting * lDistance;\n}\n#endif\nvLightWeighting = vLightWeighting * diffuse + ambient * ambientLightColor;",
lights_phong_pars_vertex:"#if MAX_POINT_LIGHTS > 0\n#ifndef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif",lights_phong_vertex:"#if MAX_POINT_LIGHTS > 0\n#ifndef PHONG_PER_PIXEL\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDistance = lDistance;\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\nfloat pointSpecularWeight = pow( pointDotNormalHalf, shininess );\n#ifdef PHYSICALLY_BASED_SHADING\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance;\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * pointDistance;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = pow( dirDotNormalHalf, shininess );\n#ifdef PHYSICALLY_BASED_SHADING\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * viewMatrix * objectMatrix * gl_Position;\n#endif",
morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\nuniform float morphTargetInfluences[ 8 ];\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0, 0.0, 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",
default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform float shadowDarkness;\nuniform float shadowBias;\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",
shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_SOFT\nconst float xPixelOffset = 1.0 / SHADOWMAP_WIDTH;\nconst float yPixelOffset = 1.0 / SHADOWMAP_HEIGHT;\n#endif\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nshadowCoord.z += shadowBias;\nif ( shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0 ) {\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nfor ( float y = -1.25; y <= 1.25; y += 1.25 )\nfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\nvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadow += 1.0;\n}\nshadow /= 9.0;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( shadowDarkness );\n#endif\n}\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,f={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)f[c]=d[c];return f},clone:function(a){var b,c,d,f={};for(b in a)for(c in f[b]={},a[b])d=a[b][c],f[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return f}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},fog:{fogDensity:{type:"f",
value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",
value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:6,texture:[]},shadowMatrix:{type:"m4v",value:[]},shadowBias:{type:"f",value:0.0039},shadowDarkness:{type:"f",value:0.2}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",
value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(328965)}}]),vertexShader:["varying vec3 vLightWeighting;",THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",
THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightWeighting;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",
THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,"gl_FragColor.xyz = gl_FragColor.xyz * vLightWeighting;",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",
value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),vertexShader:["varying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",
THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = -mvPosition.xyz;\nvec3 transformedNormal = normalMatrix * normal;\nvNormal = transformedNormal;",THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,
"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,
THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,
THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){if(a.__webglCustomAttributesList===void 0)a.__webglCustomAttributesList=[];for(var g in d.attributes){var f=d.attributes[g];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var h=1;f.type==="v2"?h=2:f.type==="v3"?h=3:f.type==="v4"?h=4:f.type==="c"&&(h=3);f.size=h;f.array=new Float32Array(c*h);f.buffer=e.createBuffer();f.buffer.belongsToAttribute=g;f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}
function c(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;else if(b.materialIndex>=0)return a.geometry.materials[b.materialIndex]}function d(a){if(a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial)return!1;return a&&a.shading!==void 0&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function f(a){if(a.vertexColors)return a.vertexColors;return!1}function g(a){if(a.map||a.lightMap||a instanceof THREE.ShaderMaterial)return!0;
return!1}function h(a,b,c){var d,g,f,h,o=a.vertices;h=o.length;var r=a.colors,i=r.length,t=a.__vertexArray,j=a.__colorArray,k=a.__sortArray,w=a.__dirtyVertices,q=a.__dirtyColors,n=a.__webglCustomAttributesList;if(c.sortParticles){za.multiplySelf(c.matrixWorld);for(d=0;d<h;d++)g=o[d].position,Ca.copy(g),za.multiplyVector3(Ca),k[d]=[Ca.z,d];k.sort(function(a,b){return b[0]-a[0]});for(d=0;d<h;d++)g=o[k[d][1]].position,f=d*3,t[f]=g.x,t[f+1]=g.y,t[f+2]=g.z;for(d=0;d<i;d++)f=d*3,g=r[k[d][1]],j[f]=g.r,j[f+
1]=g.g,j[f+2]=g.b;if(n){r=0;for(i=n.length;r<i;r++)if(o=n[r],o.boundTo===void 0||o.boundTo==="vertices")if(f=0,g=o.value.length,o.size===1)for(d=0;d<g;d++)h=k[d][1],o.array[d]=o.value[h];else if(o.size===2)for(d=0;d<g;d++)h=k[d][1],h=o.value[h],o.array[f]=h.x,o.array[f+1]=h.y,f+=2;else if(o.size===3)if(o.type==="c")for(d=0;d<g;d++)h=k[d][1],h=o.value[h],o.array[f]=h.r,o.array[f+1]=h.g,o.array[f+2]=h.b,f+=3;else for(d=0;d<g;d++)h=k[d][1],h=o.value[h],o.array[f]=h.x,o.array[f+1]=h.y,o.array[f+2]=h.z,
f+=3;else if(o.size===4)for(d=0;d<g;d++)h=k[d][1],h=o.value[h],o.array[f]=h.x,o.array[f+1]=h.y,o.array[f+2]=h.z,o.array[f+3]=h.w,f+=4}}else{if(w)for(d=0;d<h;d++)g=o[d].position,f=d*3,t[f]=g.x,t[f+1]=g.y,t[f+2]=g.z;if(q)for(d=0;d<i;d++)g=r[d],f=d*3,j[f]=g.r,j[f+1]=g.g,j[f+2]=g.b;if(n){r=0;for(i=n.length;r<i;r++)if(o=n[r],o.needsUpdate&&(o.boundTo===void 0||o.boundTo==="vertices"))if(g=o.value.length,f=0,o.size===1)for(d=0;d<g;d++)o.array[d]=o.value[d];else if(o.size===2)for(d=0;d<g;d++)h=o.value[d],
o.array[f]=h.x,o.array[f+1]=h.y,f+=2;else if(o.size===3)if(o.type==="c")for(d=0;d<g;d++)h=o.value[d],o.array[f]=h.r,o.array[f+1]=h.g,o.array[f+2]=h.b,f+=3;else for(d=0;d<g;d++)h=o.value[d],o.array[f]=h.x,o.array[f+1]=h.y,o.array[f+2]=h.z,f+=3;else if(o.size===4)for(d=0;d<g;d++)h=o.value[d],o.array[f]=h.x,o.array[f+1]=h.y,o.array[f+2]=h.z,o.array[f+3]=h.w,f+=4}}if(w||c.sortParticles)e.bindBuffer(e.ARRAY_BUFFER,a.__webglVertexBuffer),e.bufferData(e.ARRAY_BUFFER,t,b);if(q||c.sortParticles)e.bindBuffer(e.ARRAY_BUFFER,
a.__webglColorBuffer),e.bufferData(e.ARRAY_BUFFER,j,b);if(n){r=0;for(i=n.length;r<i;r++)if(o=n[r],o.needsUpdate||c.sortParticles)e.bindBuffer(e.ARRAY_BUFFER,o.buffer),e.bufferData(e.ARRAY_BUFFER,o.array,b)}}function i(a,b,c){if(!a.__webglVertexBuffer)a.__webglVertexBuffer=e.createBuffer();if(!a.__webglNormalBuffer)a.__webglNormalBuffer=e.createBuffer();a.hasPos&&(e.bindBuffer(e.ARRAY_BUFFER,a.__webglVertexBuffer),e.bufferData(e.ARRAY_BUFFER,a.positionArray,e.DYNAMIC_DRAW),e.enableVertexAttribArray(b.attributes.position),
e.vertexAttribPointer(b.attributes.position,3,e.FLOAT,!1,0,0));if(a.hasNormal){e.bindBuffer(e.ARRAY_BUFFER,a.__webglNormalBuffer);if(c===THREE.FlatShading){var d,f,g,h,o,r,i,t,j,k,w=a.count*3;for(k=0;k<w;k+=9)c=a.normalArray,d=c[k],f=c[k+1],g=c[k+2],h=c[k+3],r=c[k+4],t=c[k+5],o=c[k+6],i=c[k+7],j=c[k+8],d=(d+h+o)/3,f=(f+r+i)/3,g=(g+t+j)/3,c[k]=d,c[k+1]=f,c[k+2]=g,c[k+3]=d,c[k+4]=f,c[k+5]=g,c[k+6]=d,c[k+7]=f,c[k+8]=g}e.bufferData(e.ARRAY_BUFFER,a.normalArray,e.DYNAMIC_DRAW);e.enableVertexAttribArray(b.attributes.normal);
e.vertexAttribPointer(b.attributes.normal,3,e.FLOAT,!1,0,0)}e.drawArrays(e.TRIANGLES,0,a.count);a.count=0}function n(a,b,c,d,f,g){if(d.opacity!==0){var h,o,c=ka(a,b,c,d,g),b=c.attributes,a=!1,c=f.id*16777215+c.id*2+(d.wireframe?1:0);c!==xa&&(xa=c,a=!0);if(!d.morphTargets&&b.position>=0)a&&(e.bindBuffer(e.ARRAY_BUFFER,f.__webglVertexBuffer),e.vertexAttribPointer(b.position,3,e.FLOAT,!1,0,0));else if(g.morphTargetBase){c=d.program.attributes;g.morphTargetBase!==-1?(e.bindBuffer(e.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[g.morphTargetBase]),
e.vertexAttribPointer(c.position,3,e.FLOAT,!1,0,0)):c.position>=0&&(e.bindBuffer(e.ARRAY_BUFFER,f.__webglVertexBuffer),e.vertexAttribPointer(c.position,3,e.FLOAT,!1,0,0));if(g.morphTargetForcedOrder.length){h=0;var r=g.morphTargetForcedOrder;for(o=g.morphTargetInfluences;h<d.numSupportedMorphTargets&&h<r.length;)e.bindBuffer(e.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[r[h]]),e.vertexAttribPointer(c["morphTarget"+h],3,e.FLOAT,!1,0,0),g.__webglMorphTargetInfluences[h]=o[r[h]],h++}else{var r=[],i=-1,
t=0;o=g.morphTargetInfluences;var j,k=o.length;h=0;for(g.morphTargetBase!==-1&&(r[g.morphTargetBase]=!0);h<d.numSupportedMorphTargets;){for(j=0;j<k;j++)!r[j]&&o[j]>i&&(t=j,i=o[t]);e.bindBuffer(e.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[t]);e.vertexAttribPointer(c["morphTarget"+h],3,e.FLOAT,!1,0,0);g.__webglMorphTargetInfluences[h]=i;r[t]=1;i=-1;h++}}d.program.uniforms.morphTargetInfluences!==null&&e.uniform1fv(d.program.uniforms.morphTargetInfluences,g.__webglMorphTargetInfluences)}if(a){if(f.__webglCustomAttributesList){h=
0;for(o=f.__webglCustomAttributesList.length;h<o;h++)c=f.__webglCustomAttributesList[h],b[c.buffer.belongsToAttribute]>=0&&(e.bindBuffer(e.ARRAY_BUFFER,c.buffer),e.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,e.FLOAT,!1,0,0))}b.color>=0&&(e.bindBuffer(e.ARRAY_BUFFER,f.__webglColorBuffer),e.vertexAttribPointer(b.color,3,e.FLOAT,!1,0,0));b.normal>=0&&(e.bindBuffer(e.ARRAY_BUFFER,f.__webglNormalBuffer),e.vertexAttribPointer(b.normal,3,e.FLOAT,!1,0,0));b.tangent>=0&&(e.bindBuffer(e.ARRAY_BUFFER,
f.__webglTangentBuffer),e.vertexAttribPointer(b.tangent,4,e.FLOAT,!1,0,0));b.uv>=0&&(f.__webglUVBuffer?(e.bindBuffer(e.ARRAY_BUFFER,f.__webglUVBuffer),e.vertexAttribPointer(b.uv,2,e.FLOAT,!1,0,0),e.enableVertexAttribArray(b.uv)):e.disableVertexAttribArray(b.uv));b.uv2>=0&&(f.__webglUV2Buffer?(e.bindBuffer(e.ARRAY_BUFFER,f.__webglUV2Buffer),e.vertexAttribPointer(b.uv2,2,e.FLOAT,!1,0,0),e.enableVertexAttribArray(b.uv2)):e.disableVertexAttribArray(b.uv2));d.skinning&&b.skinVertexA>=0&&b.skinVertexB>=
0&&b.skinIndex>=0&&b.skinWeight>=0&&(e.bindBuffer(e.ARRAY_BUFFER,f.__webglSkinVertexABuffer),e.vertexAttribPointer(b.skinVertexA,4,e.FLOAT,!1,0,0),e.bindBuffer(e.ARRAY_BUFFER,f.__webglSkinVertexBBuffer),e.vertexAttribPointer(b.skinVertexB,4,e.FLOAT,!1,0,0),e.bindBuffer(e.ARRAY_BUFFER,f.__webglSkinIndicesBuffer),e.vertexAttribPointer(b.skinIndex,4,e.FLOAT,!1,0,0),e.bindBuffer(e.ARRAY_BUFFER,f.__webglSkinWeightsBuffer),e.vertexAttribPointer(b.skinWeight,4,e.FLOAT,!1,0,0))}g instanceof THREE.Mesh?(d.wireframe?
(d=d.wireframeLinewidth,d!==Fa&&(e.lineWidth(d),Fa=d),a&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,f.__webglLineBuffer),e.drawElements(e.LINES,f.__webglLineCount,e.UNSIGNED_SHORT,0)):(a&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,f.__webglFaceBuffer),e.drawElements(e.TRIANGLES,f.__webglFaceCount,e.UNSIGNED_SHORT,0)),C.info.render.calls++,C.info.render.vertices+=f.__webglFaceCount,C.info.render.faces+=f.__webglFaceCount/3):g instanceof THREE.Line?(g=g.type===THREE.LineStrip?e.LINE_STRIP:e.LINES,d=d.linewidth,d!==
Fa&&(e.lineWidth(d),Fa=d),e.drawArrays(g,0,f.__webglLineCount),C.info.render.calls++):g instanceof THREE.ParticleSystem?(e.drawArrays(e.POINTS,0,f.__webglParticleCount),C.info.render.calls++):g instanceof THREE.Ribbon&&(e.drawArrays(e.TRIANGLE_STRIP,0,f.__webglVertexCount),C.info.render.calls++)}}function l(a){pa[0].set(a.n41-a.n11,a.n42-a.n12,a.n43-a.n13,a.n44-a.n14);pa[1].set(a.n41+a.n11,a.n42+a.n12,a.n43+a.n13,a.n44+a.n14);pa[2].set(a.n41+a.n21,a.n42+a.n22,a.n43+a.n23,a.n44+a.n24);pa[3].set(a.n41-
a.n21,a.n42-a.n22,a.n43-a.n23,a.n44-a.n24);pa[4].set(a.n41-a.n31,a.n42-a.n32,a.n43-a.n33,a.n44-a.n34);pa[5].set(a.n41+a.n31,a.n42+a.n32,a.n43+a.n33,a.n44+a.n34);for(var b,a=0;a<6;a++)b=pa[a],b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))}function j(a){for(var b=a.matrixWorld,c=-a.geometry.boundingSphere.radius*Math.max(a.scale.x,Math.max(a.scale.y,a.scale.z)),e=0;e<6;e++)if(a=pa[e].x*b.n14+pa[e].y*b.n24+pa[e].z*b.n34+pa[e].w,a<=c)return!1;return!0}function q(a,b){return b.z-a.z}function s(a){var b,
c,d,f,g,h,o,r,q=0,t=a.lights;ma||(ma=new THREE.PerspectiveCamera(C.shadowCameraFov,C.shadowMapWidth/C.shadowMapHeight,C.shadowCameraNear,C.shadowCameraFar));b=0;for(c=t.length;b<c;b++)if(r=t[b],r.castShadow&&r instanceof THREE.SpotLight){wa=-1;C.shadowMap[q]||(C.shadowMap[q]=new THREE.WebGLRenderTarget(C.shadowMapWidth,C.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),Ga[q]=new THREE.Matrix4);d=C.shadowMap[q];f=Ga[q];ma.position.copy(r.position);
ma.lookAt(r.target.position);ma.parent==null&&(console.warn("Camera is not on the Scene. Adding it..."),a.add(ma),this.autoUpdateScene&&a.updateMatrixWorld());ma.matrixWorldInverse.getInverse(ma.matrixWorld);f.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);f.multiplySelf(ma.projectionMatrix);f.multiplySelf(ma.matrixWorldInverse);ma.matrixWorldInverse.flattenToArray(Ha);ma.projectionMatrix.flattenToArray(Ia);za.multiply(ma.projectionMatrix,ma.matrixWorldInverse);l(za);qa(d);e.clearColor(1,1,1,1);
C.clear();e.clearColor(Q.r,Q.g,Q.b,J);f=a.__webglObjects.length;for(d=0;d<f;d++)if(h=a.__webglObjects[d],r=h.object,h.render=!1,r.visible&&r.castShadow&&(!(r instanceof THREE.Mesh)||!r.frustumCulled||j(r)))r.matrixWorld.flattenToArray(r._objectMatrixArray),G(r,ma,!1),h.render=!0;M(!0);C.setBlending(THREE.NormalBlending);for(d=0;d<f;d++)if(h=a.__webglObjects[d],h.render)r=h.object,h=h.buffer,N(r),o=r.customDepthMaterial?r.customDepthMaterial:r.geometry.morphTargets.length?La:Ea,n(ma,t,null,o,h,r);
f=a.__webglObjectsImmediate.length;for(d=0;d<f;d++)h=a.__webglObjectsImmediate[d],r=h.object,r.visible&&r.castShadow&&(r.matrixAutoUpdate&&r.matrixWorld.flattenToArray(r._objectMatrixArray),xa=-1,G(r,ma,!1),N(r),g=ka(ma,t,null,Ea,r),r.immediateRenderCallback?r.immediateRenderCallback(g,e,pa):r.render(function(a){i(a,g,Ea.shading)}));q++}}function m(a,b,c,e,d,f,g,h){var r,i,t,j;b?(i=a.length-1,j=b=-1):(i=0,b=a.length,j=1);for(var k=i;k!==b;k+=j)if(r=a[k],r.render){i=r.object;t=r.buffer;if(h)r=h;else{r=
r[c];if(!r)continue;g&&C.setBlending(r.blending);M(r.depthTest);E(r.depthWrite);na(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits)}N(i);n(e,d,f,r,t,i)}}function y(a,b,c,d,f,g,h){for(var o,r,j,t,q=0,k=a.length;q<k;q++)if(o=a[q],r=o.object,r.visible){xa=-1;if(h)j=h;else{j=o[b];if(!j)continue;g&&this.setBlending(j.blending);M(j.depthTest);E(j.depthWrite);na(j.polygonOffset,j.polygonOffsetFactor,j.polygonOffsetUnits)}N(r);t=ka(c,d,f,j,r);r.immediateRenderCallback?r.immediateRenderCallback(t,
e,pa):r.render(function(a){i(a,t,j.shading)})}}function D(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}function L(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function sa(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function fa(a,b){for(var c=a.length-1;c>=0;c--)a[c].object===b&&a.splice(c,1)}function la(a,b){for(var c=a.length-1;c>=0;c--)a[c]===b&&a.splice(c,1)}function ka(a,b,c,d,f){d.program||C.initMaterial(d,b,c,f);if(d.morphTargets&&
!f.__webglMorphTargetInfluences){f.__webglMorphTargetInfluences=new Float32Array(C.maxMorphTargets);for(var g=0,h=C.maxMorphTargets;g<h;g++)f.__webglMorphTargetInfluences[g]=0}var o=!1,g=d.program,h=g.uniforms,r=d.uniforms;g!==va&&(e.useProgram(g),va=g,o=!0);if(d.id!==wa)wa=d.id,o=!0;if(o){e.uniformMatrix4fv(h.projectionMatrix,!1,Ia);if(c&&d.fog)if(r.fogColor.value=c.color,c instanceof THREE.Fog)r.fogNear.value=c.near,r.fogFar.value=c.far;else if(c instanceof THREE.FogExp2)r.fogDensity.value=c.density;
if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){for(var i,t,j=0,k=0,w=0,q,n,l,m=Ra,s=m.directional.colors,D=m.directional.positions,v=m.point.colors,y=m.point.positions,G=m.point.distances,x=0,L=0,c=i=l=0,o=b.length;c<o;c++)if(i=b[c],t=i.color,q=i.position,n=i.intensity,l=i.distance,i instanceof THREE.AmbientLight)C.gammaInput?(j+=t.r*t.r,k+=t.g*t.g,w+=t.b*t.b):(j+=t.r,k+=t.g,w+=t.b);else if(i instanceof THREE.DirectionalLight)l=x*3,C.gammaInput?(s[l]=t.r*
t.r*n*n,s[l+1]=t.g*t.g*n*n,s[l+2]=t.b*t.b*n*n):(s[l]=t.r*n,s[l+1]=t.g*n,s[l+2]=t.b*n),D[l]=q.x,D[l+1]=q.y,D[l+2]=q.z,x+=1;else if(i instanceof THREE.SpotLight)l=x*3,C.gammaInput?(s[l]=t.r*t.r*n*n,s[l+1]=t.g*t.g*n*n,s[l+2]=t.b*t.b*n*n):(s[l]=t.r*n,s[l+1]=t.g*n,s[l+2]=t.b*n),t=1/q.length(),D[l]=q.x*t,D[l+1]=q.y*t,D[l+2]=q.z*t,x+=1;else if(i instanceof THREE.PointLight)i=L*3,C.gammaInput?(v[i]=t.r*t.r*n*n,v[i+1]=t.g*t.g*n*n,v[i+2]=t.b*t.b*n*n):(v[i]=t.r*n,v[i+1]=t.g*n,v[i+2]=t.b*n),y[i]=q.x,y[i+1]=q.y,
y[i+2]=q.z,G[L]=l,L+=1;c=x*3;for(o=s.length;c<o;c++)s[c]=0;c=L*3;for(o=v.length;c<o;c++)v[c]=0;m.point.length=L;m.directional.length=x;m.ambient[0]=j;m.ambient[1]=k;m.ambient[2]=w;b=Ra;r.ambientLightColor.value=b.ambient;r.directionalLightColor.value=b.directional.colors;r.directionalLightDirection.value=b.directional.positions;r.pointLightColor.value=b.point.colors;r.pointLightPosition.value=b.point.positions;r.pointLightDistance.value=b.point.distances}if(d instanceof THREE.MeshBasicMaterial||d instanceof
THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial)r.opacity.value=d.opacity,C.gammaInput?r.diffuse.value.copyGammaToLinear(d.color):r.diffuse.value=d.color,(r.map.texture=d.map)&&r.offsetRepeat.value.set(d.map.offset.x,d.map.offset.y,d.map.repeat.x,d.map.repeat.y),r.lightMap.texture=d.lightMap,r.envMap.texture=d.envMap,r.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,r.reflectivity.value=d.reflectivity,r.refractionRatio.value=d.refractionRatio,r.combine.value=
d.combine,r.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping;if(d instanceof THREE.LineBasicMaterial)r.diffuse.value=d.color,r.opacity.value=d.opacity;else if(d instanceof THREE.ParticleBasicMaterial)r.psColor.value=d.color,r.opacity.value=d.opacity,r.size.value=d.size,r.scale.value=oa.height/2,r.map.texture=d.map;else if(d instanceof THREE.MeshPhongMaterial)r.shininess.value=d.shininess,C.gammaInput?(r.ambient.value.copyGammaToLinear(d.ambient),r.specular.value.copyGammaToLinear(d.specular)):
(r.ambient.value=d.ambient,r.specular.value=d.specular);else if(d instanceof THREE.MeshLambertMaterial)C.gammaInput?r.ambient.value.copyGammaToLinear(d.ambient):r.ambient.value=d.ambient;else if(d instanceof THREE.MeshDepthMaterial)r.mNear.value=a.near,r.mFar.value=a.far,r.opacity.value=d.opacity;else if(d instanceof THREE.MeshNormalMaterial)r.opacity.value=d.opacity;if(f.receiveShadow&&!d._shadowPass&&r.shadowMatrix){for(b=0;b<Ga.length;b++)r.shadowMatrix.value[b]=Ga[b],r.shadowMap.texture[b]=C.shadowMap[b];
r.shadowDarkness.value=C.shadowMapDarkness;r.shadowBias.value=C.shadowMapBias}b=d.uniformsList;r=0;for(c=b.length;r<c;r++)if(k=g.uniforms[b[r][1]])if(j=b[r][0],w=j.type,o=j.value,w==="i")e.uniform1i(k,o);else if(w==="f")e.uniform1f(k,o);else if(w==="v2")e.uniform2f(k,o.x,o.y);else if(w==="v3")e.uniform3f(k,o.x,o.y,o.z);else if(w==="v4")e.uniform4f(k,o.x,o.y,o.z,o.w);else if(w==="c")e.uniform3f(k,o.r,o.g,o.b);else if(w==="fv1")e.uniform1fv(k,o);else if(w==="fv")e.uniform3fv(k,o);else if(w==="v3v"){if(!j._array)j._array=
new Float32Array(3*o.length);w=0;for(q=o.length;w<q;w++)m=w*3,j._array[m]=o[w].x,j._array[m+1]=o[w].y,j._array[m+2]=o[w].z;e.uniform3fv(k,j._array)}else if(w==="m4"){if(!j._array)j._array=new Float32Array(16);o.flattenToArray(j._array);e.uniformMatrix4fv(k,!1,j._array)}else if(w==="m4v"){if(!j._array)j._array=new Float32Array(16*o.length);w=0;for(q=o.length;w<q;w++)o[w].flattenToArrayOffset(j._array,w*16);e.uniformMatrix4fv(k,!1,j._array)}else if(w==="t"){if(e.uniform1i(k,o),k=j.texture)if(k.image instanceof
Array&&k.image.length===6){if(j=k,j.image.length===6)if(j.needsUpdate){if(!j.image.__webglTextureCube)j.image.__webglTextureCube=e.createTexture();e.activeTexture(e.TEXTURE0+o);e.bindTexture(e.TEXTURE_CUBE_MAP,j.image.__webglTextureCube);o=$(e.TEXTURE_CUBE_MAP,j,j.image[0]);for(k=0;k<6;k++)e.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+k,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,j.image[k]);o&&e.generateMipmap(e.TEXTURE_CUBE_MAP);j.needsUpdate=!1}else e.activeTexture(e.TEXTURE0+o),e.bindTexture(e.TEXTURE_CUBE_MAP,
j.image.__webglTextureCube)}else k instanceof THREE.WebGLRenderTargetCube?(j=k,e.activeTexture(e.TEXTURE0+o),e.bindTexture(e.TEXTURE_CUBE_MAP,j.__webglTexture)):C.setTexture(k,o)}else if(w==="tv"){if(!j._array){j._array=[];w=0;for(q=j.texture.length;w<q;w++)j._array[w]=o+w}e.uniform1iv(k,j._array);w=0;for(q=j.texture.length;w<q;w++)(k=j.texture[w])&&C.setTexture(k,j._array[w])}(d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&h.cameraPosition!==null&&e.uniform3f(h.cameraPosition,
a.position.x,a.position.y,a.position.z);(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&h.viewMatrix!==null&&e.uniformMatrix4fv(h.viewMatrix,!1,Ha);d.skinning&&(e.uniformMatrix4fv(h.cameraInverseMatrix,!1,Ha),e.uniformMatrix4fv(h.boneGlobalMatrices,!1,f.boneMatrices))}e.uniformMatrix4fv(h.modelViewMatrix,!1,f._modelViewMatrixArray);h.normalMatrix&&e.uniformMatrix3fv(h.normalMatrix,!1,f._normalMatrixArray);(d instanceof
THREE.ShaderMaterial||d.envMap||d.skinning||f.receiveShadow)&&h.objectMatrix!==null&&e.uniformMatrix4fv(h.objectMatrix,!1,f._objectMatrixArray);return g}function G(a,b,c){a._modelViewMatrix.multiplyToArray(b.matrixWorldInverse,a.matrixWorld,a._modelViewMatrixArray);c&&THREE.Matrix4.makeInvert3x3(a._modelViewMatrix).transposeIntoArray(a._normalMatrixArray)}function N(a){if(Ba!==a.doubleSided)a.doubleSided?e.disable(e.CULL_FACE):e.enable(e.CULL_FACE),Ba=a.doubleSided;if(ya!==a.flipSided)a.flipSided?
e.frontFace(e.CW):e.frontFace(e.CCW),ya=a.flipSided}function M(a){Ma!==a&&(a?e.enable(e.DEPTH_TEST):e.disable(e.DEPTH_TEST),Ma=a)}function E(a){Na!==a&&(e.depthMask(a),Na=a)}function na(a,b,c){Sa!==a&&(a?e.enable(e.POLYGON_OFFSET_FILL):e.disable(e.POLYGON_OFFSET_FILL),Sa=a);if(a&&(Ta!==b||Ua!==c))e.polygonOffset(b,c),Ta=b,Ua=c}function K(a,b){var c;a==="fragment"?c=e.createShader(e.FRAGMENT_SHADER):a==="vertex"&&(c=e.createShader(e.VERTEX_SHADER));e.shaderSource(c,b);e.compileShader(c);if(!e.getShaderParameter(c,
e.COMPILE_STATUS))return console.error(e.getShaderInfoLog(c)),console.error(b),null;return c}function $(a,b,c){return(c.width&c.width-1)===0&&(c.height&c.height-1)===0?(e.texParameteri(a,e.TEXTURE_WRAP_S,ga(b.wrapS)),e.texParameteri(a,e.TEXTURE_WRAP_T,ga(b.wrapT)),e.texParameteri(a,e.TEXTURE_MAG_FILTER,ga(b.magFilter)),e.texParameteri(a,e.TEXTURE_MIN_FILTER,ga(b.minFilter)),!0):(e.texParameteri(a,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(a,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(a,
e.TEXTURE_MAG_FILTER,ua(b.magFilter)),e.texParameteri(a,e.TEXTURE_MIN_FILTER,ua(b.minFilter)),!1)}function X(a,b){e.bindRenderbuffer(e.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,b.width,b.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,b.width,b.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,
e.RENDERBUFFER,a)):e.renderbufferStorage(e.RENDERBUFFER,e.RGBA4,b.width,b.height)}function qa(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){if(a.depthBuffer===void 0)a.depthBuffer=!0;if(a.stencilBuffer===void 0)a.stencilBuffer=!0;a.__webglTexture=e.createTexture();if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];e.bindTexture(e.TEXTURE_CUBE_MAP,a.__webglTexture);$(e.TEXTURE_CUBE_MAP,a,a);for(var c=0;c<6;c++){a.__webglFramebuffer[c]=e.createFramebuffer();a.__webglRenderbuffer[c]=
e.createRenderbuffer();e.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+c,0,ga(a.format),a.width,a.height,0,ga(a.format),ga(a.type),null);var d=a,f=e.TEXTURE_CUBE_MAP_POSITIVE_X+c;e.bindFramebuffer(e.FRAMEBUFFER,a.__webglFramebuffer[c]);e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,f,d.__webglTexture,0);X(a.__webglRenderbuffer[c],a)}}else a.__webglFramebuffer=e.createFramebuffer(),a.__webglRenderbuffer=e.createRenderbuffer(),e.bindTexture(e.TEXTURE_2D,a.__webglTexture),$(e.TEXTURE_2D,a,a),e.texImage2D(e.TEXTURE_2D,
0,ga(a.format),a.width,a.height,0,ga(a.format),ga(a.type),null),c=e.TEXTURE_2D,e.bindFramebuffer(e.FRAMEBUFFER,a.__webglFramebuffer),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,c,a.__webglTexture,0),X(a.__webglRenderbuffer,a);b?e.bindTexture(e.TEXTURE_CUBE_MAP,null):e.bindTexture(e.TEXTURE_2D,null);e.bindRenderbuffer(e.RENDERBUFFER,null);e.bindFramebuffer(e.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,f=d=0):(b=null,c=Ja,a=
Ka,d=Oa,f=Pa);b!==ta&&(e.bindFramebuffer(e.FRAMEBUFFER,b),e.viewport(d,f,c,a),ta=b)}function ua(a){switch(a){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return e.NEAREST;default:return e.LINEAR}}function ga(a){switch(a){case THREE.RepeatWrapping:return e.REPEAT;case THREE.ClampToEdgeWrapping:return e.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return e.MIRRORED_REPEAT;case THREE.NearestFilter:return e.NEAREST;case THREE.NearestMipMapNearestFilter:return e.NEAREST_MIPMAP_NEAREST;
case THREE.NearestMipMapLinearFilter:return e.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return e.LINEAR;case THREE.LinearMipMapNearestFilter:return e.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return e.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return e.BYTE;case THREE.UnsignedByteType:return e.UNSIGNED_BYTE;case THREE.ShortType:return e.SHORT;case THREE.UnsignedShortType:return e.UNSIGNED_SHORT;case THREE.IntType:return e.INT;case THREE.UnsignedShortType:return e.UNSIGNED_INT;case THREE.FloatType:return e.FLOAT;
case THREE.AlphaFormat:return e.ALPHA;case THREE.RGBFormat:return e.RGB;case THREE.RGBAFormat:return e.RGBA;case THREE.LuminanceFormat:return e.LUMINANCE;case THREE.LuminanceAlphaFormat:return e.LUMINANCE_ALPHA}return 0}var a=a||{},oa=a.canvas!==void 0?a.canvas:document.createElement("canvas"),Aa=a.precision!==void 0?a.precision:"highp",Wa=a.antialias!==void 0?a.antialias:!1,ra=a.stencil!==void 0?a.stencil:!0,ba=a.preserveDrawingBuffer!==void 0?a.preserveDrawingBuffer:!1,Q=a.clearColor!==void 0?new THREE.Color(a.clearColor):
new THREE.Color(0),J=a.clearAlpha!==void 0?a.clearAlpha:0,R=a.maxLights!==void 0?a.maxLights:4;this.domElement=oa;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapBias=0.0039;this.shadowMapDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCameraNear=1;this.shadowCameraFar=5E3;this.shadowCameraFov=
50;this.shadowMap=[];this.shadowMapEnabled=!1;this.shadowMapSoft=this.shadowMapAutoUpdate=!0;this.maxMorphTargets=8;this.renderPlugins=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0}};var C=this,e,O=[],va=null,ta=null,wa=-1,xa=null,Da=0,Ba=null,ya=null,Qa=null,Ma=null,Na=null,Sa=null,Ta=null,Ua=null,Fa=null,Oa=0,Pa=0,Ja=0,Ka=0,pa=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],za=new THREE.Matrix4,
Ia=new Float32Array(16),Ha=new Float32Array(16),Ca=new THREE.Vector4,Ra={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]}},ma,Ga=[],Ea,La;e=function(){var a;try{if(!(a=oa.getContext("experimental-webgl",{antialias:Wa,stencil:ra,preserveDrawingBuffer:ba})))throw"Error creating WebGL context.";console.log(navigator.userAgent+" | "+a.getParameter(a.VERSION)+" | "+a.getParameter(a.VENDOR)+" | "+a.getParameter(a.RENDERER)+" | "+a.getParameter(a.SHADING_LANGUAGE_VERSION))}catch(b){console.error(b)}return a}();
e.clearColor(0,0,0,1);e.clearDepth(1);e.clearStencil(0);e.enable(e.DEPTH_TEST);e.depthFunc(e.LEQUAL);e.frontFace(e.CCW);e.cullFace(e.BACK);e.enable(e.CULL_FACE);e.enable(e.BLEND);e.blendEquation(e.FUNC_ADD);e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA);e.clearColor(Q.r,Q.g,Q.b,J);(function(){var a=THREE.ShaderLib.depthRGBA,b=THREE.UniformsUtils.clone(a.uniforms);Ea=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:b});La=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,
vertexShader:a.vertexShader,uniforms:b,morphTargets:!0});Ea._shadowPass=!0;La._shadowPass=!0})();this.context=e;var Va=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0;this.getContext=function(){return e};this.supportsVertexTextures=function(){return Va};this.setSize=function(a,b){oa.width=a;oa.height=b;this.setViewport(0,0,oa.width,oa.height)};this.setViewport=function(a,b,c,d){Oa=a;Pa=b;Ja=c;Ka=d;e.viewport(Oa,Pa,Ja,Ka)};this.setScissor=function(a,b,c,d){e.scissor(a,b,c,d)};this.enableScissorTest=
function(a){a?e.enable(e.SCISSOR_TEST):e.disable(e.SCISSOR_TEST)};this.setClearColorHex=function(a,b){Q.setHex(a);J=b;e.clearColor(Q.r,Q.g,Q.b,J)};this.setClearColor=function(a,b){Q.copy(a);J=b;e.clearColor(Q.r,Q.g,Q.b,J)};this.getClearColor=function(){return Q};this.getClearAlpha=function(){return J};this.clear=function(a,b,c){var d=0;if(a===void 0||a)d|=e.COLOR_BUFFER_BIT;if(b===void 0||b)d|=e.DEPTH_BUFFER_BIT;if(c===void 0||c)d|=e.STENCIL_BUFFER_BIT;e.clear(d)};this.clearTarget=function(a,b,c,
d){qa(a);this.clear(b,c,d)};this.addPlugin=function(a){a.init(this);this.renderPlugins.push(a)};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._objectMatrixArray,a instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups){var c=a.geometry.geometryGroups[b];e.deleteBuffer(c.__webglVertexBuffer);e.deleteBuffer(c.__webglNormalBuffer);e.deleteBuffer(c.__webglTangentBuffer);e.deleteBuffer(c.__webglColorBuffer);
e.deleteBuffer(c.__webglUVBuffer);e.deleteBuffer(c.__webglUV2Buffer);e.deleteBuffer(c.__webglSkinVertexABuffer);e.deleteBuffer(c.__webglSkinVertexBBuffer);e.deleteBuffer(c.__webglSkinIndicesBuffer);e.deleteBuffer(c.__webglSkinWeightsBuffer);e.deleteBuffer(c.__webglFaceBuffer);e.deleteBuffer(c.__webglLineBuffer);if(c.numMorphTargets)for(var d=0,f=c.numMorphTargets;d<f;d++)e.deleteBuffer(c.__webglMorphTargetsBuffers[d]);if(c.__webglCustomAttributesList)for(d in d=void 0,c.__webglCustomAttributesList)e.deleteBuffer(c.__webglCustomAttributesList[d].buffer);
C.info.memory.geometries--}else if(a instanceof THREE.Ribbon)a=a.geometry,e.deleteBuffer(a.__webglVertexBuffer),e.deleteBuffer(a.__webglColorBuffer),C.info.memory.geometries--;else if(a instanceof THREE.Line)a=a.geometry,e.deleteBuffer(a.__webglVertexBuffer),e.deleteBuffer(a.__webglColorBuffer),C.info.memory.geometries--;else if(a instanceof THREE.ParticleSystem)a=a.geometry,e.deleteBuffer(a.__webglVertexBuffer),e.deleteBuffer(a.__webglColorBuffer),C.info.memory.geometries--};this.deallocateTexture=
function(a){if(a.__webglInit)a.__webglInit=!1,e.deleteTexture(a.__webglTexture),C.info.memory.textures--};this.updateShadowMap=function(a,b){s(a,b)};this.render=function(a,b,c,d){var f,g,h,o,i=a.lights,n=a.fog;wa=-1;this.autoUpdateObjects&&this.initWebGLObjects(a);b.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),a.add(b));this.autoUpdateScene&&a.updateMatrixWorld();this.shadowMapEnabled&&this.shadowMapAutoUpdate&&s(a,b);C.info.render.calls=0;C.info.render.vertices=
0;C.info.render.faces=0;b.matrixWorldInverse.getInverse(b.matrixWorld);b.matrixWorldInverse.flattenToArray(Ha);b.projectionMatrix.flattenToArray(Ia);za.multiply(b.projectionMatrix,b.matrixWorldInverse);l(za);qa(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);o=a.__webglObjects;d=0;for(f=o.length;d<f;d++)if(g=o[d],h=g.object,g.render=!1,h.visible&&(!(h instanceof THREE.Mesh)||!h.frustumCulled||j(h))){h.matrixWorld.flattenToArray(h._objectMatrixArray);
G(h,b,!0);var t=g,D=t.object,k=t.buffer,w=void 0,w=w=void 0,w=D.material;if(w instanceof THREE.MeshFaceMaterial){if(w=k.materialIndex,w>=0)w=D.geometry.materials[w],w.transparent?(t.transparent=w,t.opaque=null):(t.opaque=w,t.transparent=null)}else if(w)w.transparent?(t.transparent=w,t.opaque=null):(t.opaque=w,t.transparent=null);g.render=!0;if(this.sortObjects)h.renderDepth?g.z=h.renderDepth:(Ca.copy(h.position),za.multiplyVector3(Ca),g.z=Ca.z)}this.sortObjects&&o.sort(q);o=a.__webglObjectsImmediate;
d=0;for(f=o.length;d<f;d++)if(g=o[d],h=g.object,h.visible)h.matrixAutoUpdate&&h.matrixWorld.flattenToArray(h._objectMatrixArray),G(h,b,!0),h=g.object.material,h.transparent?(g.transparent=h,g.opaque=null):(g.opaque=h,g.transparent=null);a.overrideMaterial?(this.setBlending(a.overrideMaterial.blending),M(a.overrideMaterial.depthTest),E(a.overrideMaterial.depthWrite),na(a.overrideMaterial.polygonOffset,a.overrideMaterial.polygonOffsetFactor,a.overrideMaterial.polygonOffsetUnits),m(a.__webglObjects,
!1,"",b,i,n,!0,a.overrideMaterial),y(a.__webglObjectsImmediate,"",b,i,n,!1,a.overrideMaterial)):(this.setBlending(THREE.NormalBlending),m(a.__webglObjects,!0,"opaque",b,i,n,!1),y(a.__webglObjectsImmediate,"opaque",b,i,n,!1),m(a.__webglObjects,!1,"transparent",b,i,n,!0),y(a.__webglObjectsImmediate,"transparent",b,i,n,!0));if(this.renderPlugins.length){d=0;for(f=this.renderPlugins.length;d<f;d++)this.renderPlugins[d].render(a,b,Ja,Ka,Ia),va=null,xa=Na=Ma=Qa=-1}c&&c.minFilter!==THREE.NearestFilter&&
c.minFilter!==THREE.LinearFilter&&(c instanceof THREE.WebGLRenderTargetCube?(e.bindTexture(e.TEXTURE_CUBE_MAP,c.__webglTexture),e.generateMipmap(e.TEXTURE_CUBE_MAP),e.bindTexture(e.TEXTURE_CUBE_MAP,null)):(e.bindTexture(e.TEXTURE_2D,c.__webglTexture),e.generateMipmap(e.TEXTURE_2D),e.bindTexture(e.TEXTURE_2D,null)))};this.initWebGLObjects=function(a){if(!a.__webglObjects)a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[];for(;a.__objectsAdded.length;){var i=a.__objectsAdded[0],
j=a,q=void 0,n=void 0,l=void 0;if(!i.__webglInit)if(i.__webglInit=!0,i._modelViewMatrix=new THREE.Matrix4,i._normalMatrixArray=new Float32Array(9),i._modelViewMatrixArray=new Float32Array(16),i._objectMatrixArray=new Float32Array(16),i.matrixWorld.flattenToArray(i._objectMatrixArray),i instanceof THREE.Mesh){n=i.geometry;if(n.geometryGroups===void 0){var l=n,m=void 0,o=void 0,r=void 0,s=void 0,t=void 0,y=void 0,k=void 0,w={},G=l.morphTargets.length;l.geometryGroups={};m=0;for(o=l.faces.length;m<o;m++)r=
l.faces[m],s=r.materialIndex,y=s!==void 0?s:-1,w[y]===void 0&&(w[y]={hash:y,counter:0}),k=w[y].hash+"_"+w[y].counter,l.geometryGroups[k]===void 0&&(l.geometryGroups[k]={faces3:[],faces4:[],materialIndex:s,vertices:0,numMorphTargets:G}),t=r instanceof THREE.Face3?3:4,l.geometryGroups[k].vertices+t>65535&&(w[y].counter+=1,k=w[y].hash+"_"+w[y].counter,l.geometryGroups[k]===void 0&&(l.geometryGroups[k]={faces3:[],faces4:[],materialIndex:s,vertices:0,numMorphTargets:G})),r instanceof THREE.Face3?l.geometryGroups[k].faces3.push(m):
l.geometryGroups[k].faces4.push(m),l.geometryGroups[k].vertices+=t;l.geometryGroupsList=[];m=void 0;for(m in l.geometryGroups)l.geometryGroups[m].id=Da++,l.geometryGroupsList.push(l.geometryGroups[m])}for(q in n.geometryGroups)if(l=n.geometryGroups[q],!l.__webglVertexBuffer){m=l;m.__webglVertexBuffer=e.createBuffer();m.__webglNormalBuffer=e.createBuffer();m.__webglTangentBuffer=e.createBuffer();m.__webglColorBuffer=e.createBuffer();m.__webglUVBuffer=e.createBuffer();m.__webglUV2Buffer=e.createBuffer();
m.__webglSkinVertexABuffer=e.createBuffer();m.__webglSkinVertexBBuffer=e.createBuffer();m.__webglSkinIndicesBuffer=e.createBuffer();m.__webglSkinWeightsBuffer=e.createBuffer();m.__webglFaceBuffer=e.createBuffer();m.__webglLineBuffer=e.createBuffer();if(m.numMorphTargets){r=o=void 0;m.__webglMorphTargetsBuffers=[];o=0;for(r=m.numMorphTargets;o<r;o++)m.__webglMorphTargetsBuffers.push(e.createBuffer())}C.info.memory.geometries++;s=i;t=s.geometry;o=l.faces3;y=l.faces4;m=o.length*3+y.length*4;r=o.length*
1+y.length*2;y=o.length*3+y.length*4;o=c(s,l);k=g(o);w=d(o);G=f(o);l.__vertexArray=new Float32Array(m*3);if(w)l.__normalArray=new Float32Array(m*3);if(t.hasTangents)l.__tangentArray=new Float32Array(m*4);if(G)l.__colorArray=new Float32Array(m*3);if(k){if(t.faceUvs.length>0||t.faceVertexUvs.length>0)l.__uvArray=new Float32Array(m*2);if(t.faceUvs.length>1||t.faceVertexUvs.length>1)l.__uv2Array=new Float32Array(m*2)}if(s.geometry.skinWeights.length&&s.geometry.skinIndices.length)l.__skinVertexAArray=
new Float32Array(m*4),l.__skinVertexBArray=new Float32Array(m*4),l.__skinIndexArray=new Float32Array(m*4),l.__skinWeightArray=new Float32Array(m*4);l.__faceArray=new Uint16Array(r*3);l.__lineArray=new Uint16Array(y*2);if(l.numMorphTargets){l.__morphTargetsArrays=[];s=0;for(t=l.numMorphTargets;s<t;s++)l.__morphTargetsArrays.push(new Float32Array(m*3))}l.__webglFaceCount=r*3;l.__webglLineCount=y*2;if(o.attributes){if(l.__webglCustomAttributesList===void 0)l.__webglCustomAttributesList=[];r=void 0;for(r in o.attributes){var s=
o.attributes[r],t={},ia;for(ia in s)t[ia]=s[ia];if(!t.__webglInitialized||t.createUniqueBuffers)t.__webglInitialized=!0,y=1,t.type==="v2"?y=2:t.type==="v3"?y=3:t.type==="v4"?y=4:t.type==="c"&&(y=3),t.size=y,t.array=new Float32Array(m*y),t.buffer=e.createBuffer(),t.buffer.belongsToAttribute=r,s.needsUpdate=!0,t.__original=s;l.__webglCustomAttributesList.push(t)}}l.__inittedArrays=!0;n.__dirtyVertices=!0;n.__dirtyMorphTargets=!0;n.__dirtyElements=!0;n.__dirtyUvs=!0;n.__dirtyNormals=!0;n.__dirtyTangents=
!0;n.__dirtyColors=!0}}else if(i instanceof THREE.Ribbon){if(n=i.geometry,!n.__webglVertexBuffer)l=n,l.__webglVertexBuffer=e.createBuffer(),l.__webglColorBuffer=e.createBuffer(),C.info.memory.geometries++,l=n,m=l.vertices.length,l.__vertexArray=new Float32Array(m*3),l.__colorArray=new Float32Array(m*3),l.__webglVertexCount=m,n.__dirtyVertices=!0,n.__dirtyColors=!0}else if(i instanceof THREE.Line){if(n=i.geometry,!n.__webglVertexBuffer)l=n,l.__webglVertexBuffer=e.createBuffer(),l.__webglColorBuffer=
e.createBuffer(),C.info.memory.geometries++,l=n,m=i,o=l.vertices.length,l.__vertexArray=new Float32Array(o*3),l.__colorArray=new Float32Array(o*3),l.__webglLineCount=o,b(l,m),n.__dirtyVertices=!0,n.__dirtyColors=!0}else if(i instanceof THREE.ParticleSystem&&(n=i.geometry,!n.__webglVertexBuffer))l=n,l.__webglVertexBuffer=e.createBuffer(),l.__webglColorBuffer=e.createBuffer(),C.info.geometries++,l=n,m=i,o=l.vertices.length,l.__vertexArray=new Float32Array(o*3),l.__colorArray=new Float32Array(o*3),l.__sortArray=
[],l.__webglParticleCount=o,b(l,m),n.__dirtyVertices=!0,n.__dirtyColors=!0;if(!i.__webglActive){if(i instanceof THREE.Mesh)for(q in n=i.geometry,n.geometryGroups)l=n.geometryGroups[q],D(j.__webglObjects,l,i);else i instanceof THREE.Ribbon||i instanceof THREE.Line||i instanceof THREE.ParticleSystem?(n=i.geometry,D(j.__webglObjects,n,i)):THREE.MarchingCubes!==void 0&&i instanceof THREE.MarchingCubes||i.immediateRenderCallback?j.__webglObjectsImmediate.push({object:i,opaque:null,transparent:null}):i instanceof
THREE.Sprite?j.__webglSprites.push(i):i instanceof THREE.LensFlare&&j.__webglFlares.push(i);i.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;)i=a.__objectsRemoved[0],j=a,i instanceof THREE.Mesh||i instanceof THREE.ParticleSystem||i instanceof THREE.Ribbon||i instanceof THREE.Line?fa(j.__webglObjects,i):i instanceof THREE.Sprite?la(j.__webglSprites,i):i instanceof THREE.LensFlare?la(j.__webglFlares,i):(i instanceof THREE.MarchingCubes||i.immediateRenderCallback)&&fa(j.__webglObjectsImmediate,
i),i.__webglActive=!1,a.__objectsRemoved.splice(0,1);i=0;for(j=a.__webglObjects.length;i<j;i++)if(ia=a.__webglObjects[i].object,q=ia.geometry,n=r=o=void 0,ia instanceof THREE.Mesh){l=0;for(m=q.geometryGroupsList.length;l<m;l++)if(o=q.geometryGroupsList[l],n=c(ia,o),r=n.attributes&&L(n),q.__dirtyVertices||q.__dirtyMorphTargets||q.__dirtyElements||q.__dirtyUvs||q.__dirtyNormals||q.__dirtyColors||q.__dirtyTangents||r){var I=ia,r=e.DYNAMIC_DRAW,s=!q.dynamic,k=n;if(o.__inittedArrays){var t=d(k),y=f(k),
J=g(k),M=t===THREE.SmoothShading,E=w=k=void 0,v=void 0,Y=void 0,K=void 0,x=void 0,aa=void 0,O=void 0,Q=E=void 0,z=void 0,A=void 0,B=void 0,Z=v=void 0,ca=void 0,ja=void 0,S=v=O=void 0,T=void 0,N=B=A=z=x=void 0,F=v=B=A=z=N=B=A=z=N=B=A=z=void 0,H=void 0,R=K=void 0,$=void 0,V=void 0,ka=void 0,da=void 0,ga=Q=V=H=0,ba=0,X=F=E=0,P=x=Z=0,u=0,ea=void 0,P=o.__vertexArray,$=o.__uvArray,u=o.__uv2Array,R=o.__normalArray,Y=o.__tangentArray,ca=o.__colorArray,S=o.__skinVertexAArray,T=o.__skinVertexBArray,aa=o.__skinIndexArray,
ha=o.__skinWeightArray,N=o.__morphTargetsArrays,G=o.__webglCustomAttributesList,p=void 0,p=o.__faceArray,ea=o.__lineArray,ja=I.geometry,oa=ja.__dirtyElements,na=ja.__dirtyUvs,K=ja.__dirtyNormals,O=ja.__dirtyTangents,qa=ja.__dirtyColors,ka=ja.__dirtyMorphTargets,da=ja.vertices,I=o.faces3,U=o.faces4,W=ja.faces,ma=ja.faceVertexUvs[0],va=ja.faceVertexUvs[1],pa=ja.skinVerticesA,ra=ja.skinVerticesB,ua=ja.skinIndices,ta=ja.skinWeights,wa=ja.morphTargets;if(ja.__dirtyVertices){k=0;for(w=I.length;k<w;k++)v=
W[I[k]],z=da[v.a].position,A=da[v.b].position,B=da[v.c].position,P[V]=z.x,P[V+1]=z.y,P[V+2]=z.z,P[V+3]=A.x,P[V+4]=A.y,P[V+5]=A.z,P[V+6]=B.x,P[V+7]=B.y,P[V+8]=B.z,V+=9;k=0;for(w=U.length;k<w;k++)v=W[U[k]],z=da[v.a].position,A=da[v.b].position,B=da[v.c].position,v=da[v.d].position,P[V]=z.x,P[V+1]=z.y,P[V+2]=z.z,P[V+3]=A.x,P[V+4]=A.y,P[V+5]=A.z,P[V+6]=B.x,P[V+7]=B.y,P[V+8]=B.z,P[V+9]=v.x,P[V+10]=v.y,P[V+11]=v.z,V+=12;e.bindBuffer(e.ARRAY_BUFFER,o.__webglVertexBuffer);e.bufferData(e.ARRAY_BUFFER,P,r)}if(ka){V=
0;for(ka=wa.length;V<ka;V++){k=P=0;for(w=I.length;k<w;k++)v=W[I[k]],z=wa[V].vertices[v.a].position,A=wa[V].vertices[v.b].position,B=wa[V].vertices[v.c].position,da=N[V],da[P]=z.x,da[P+1]=z.y,da[P+2]=z.z,da[P+3]=A.x,da[P+4]=A.y,da[P+5]=A.z,da[P+6]=B.x,da[P+7]=B.y,da[P+8]=B.z,P+=9;k=0;for(w=U.length;k<w;k++)v=W[U[k]],z=wa[V].vertices[v.a].position,A=wa[V].vertices[v.b].position,B=wa[V].vertices[v.c].position,v=wa[V].vertices[v.d].position,da=N[V],da[P]=z.x,da[P+1]=z.y,da[P+2]=z.z,da[P+3]=A.x,da[P+4]=
A.y,da[P+5]=A.z,da[P+6]=B.x,da[P+7]=B.y,da[P+8]=B.z,da[P+9]=v.x,da[P+10]=v.y,da[P+11]=v.z,P+=12;e.bindBuffer(e.ARRAY_BUFFER,o.__webglMorphTargetsBuffers[V]);e.bufferData(e.ARRAY_BUFFER,N[V],r)}}if(ta.length){k=0;for(w=I.length;k<w;k++)v=W[I[k]],z=ta[v.a],A=ta[v.b],B=ta[v.c],ha[x]=z.x,ha[x+1]=z.y,ha[x+2]=z.z,ha[x+3]=z.w,ha[x+4]=A.x,ha[x+5]=A.y,ha[x+6]=A.z,ha[x+7]=A.w,ha[x+8]=B.x,ha[x+9]=B.y,ha[x+10]=B.z,ha[x+11]=B.w,z=ua[v.a],A=ua[v.b],B=ua[v.c],aa[x]=z.x,aa[x+1]=z.y,aa[x+2]=z.z,aa[x+3]=z.w,aa[x+4]=
A.x,aa[x+5]=A.y,aa[x+6]=A.z,aa[x+7]=A.w,aa[x+8]=B.x,aa[x+9]=B.y,aa[x+10]=B.z,aa[x+11]=B.w,z=pa[v.a],A=pa[v.b],B=pa[v.c],S[x]=z.x,S[x+1]=z.y,S[x+2]=z.z,S[x+3]=1,S[x+4]=A.x,S[x+5]=A.y,S[x+6]=A.z,S[x+7]=1,S[x+8]=B.x,S[x+9]=B.y,S[x+10]=B.z,S[x+11]=1,z=ra[v.a],A=ra[v.b],B=ra[v.c],T[x]=z.x,T[x+1]=z.y,T[x+2]=z.z,T[x+3]=1,T[x+4]=A.x,T[x+5]=A.y,T[x+6]=A.z,T[x+7]=1,T[x+8]=B.x,T[x+9]=B.y,T[x+10]=B.z,T[x+11]=1,x+=12;k=0;for(w=U.length;k<w;k++)v=W[U[k]],z=ta[v.a],A=ta[v.b],B=ta[v.c],N=ta[v.d],ha[x]=z.x,ha[x+1]=
z.y,ha[x+2]=z.z,ha[x+3]=z.w,ha[x+4]=A.x,ha[x+5]=A.y,ha[x+6]=A.z,ha[x+7]=A.w,ha[x+8]=B.x,ha[x+9]=B.y,ha[x+10]=B.z,ha[x+11]=B.w,ha[x+12]=N.x,ha[x+13]=N.y,ha[x+14]=N.z,ha[x+15]=N.w,z=ua[v.a],A=ua[v.b],B=ua[v.c],N=ua[v.d],aa[x]=z.x,aa[x+1]=z.y,aa[x+2]=z.z,aa[x+3]=z.w,aa[x+4]=A.x,aa[x+5]=A.y,aa[x+6]=A.z,aa[x+7]=A.w,aa[x+8]=B.x,aa[x+9]=B.y,aa[x+10]=B.z,aa[x+11]=B.w,aa[x+12]=N.x,aa[x+13]=N.y,aa[x+14]=N.z,aa[x+15]=N.w,z=pa[v.a],A=pa[v.b],B=pa[v.c],N=pa[v.d],S[x]=z.x,S[x+1]=z.y,S[x+2]=z.z,S[x+3]=1,S[x+4]=
A.x,S[x+5]=A.y,S[x+6]=A.z,S[x+7]=1,S[x+8]=B.x,S[x+9]=B.y,S[x+10]=B.z,S[x+11]=1,S[x+12]=N.x,S[x+13]=N.y,S[x+14]=N.z,S[x+15]=1,z=ra[v.a],A=ra[v.b],B=ra[v.c],v=ra[v.d],T[x]=z.x,T[x+1]=z.y,T[x+2]=z.z,T[x+3]=1,T[x+4]=A.x,T[x+5]=A.y,T[x+6]=A.z,T[x+7]=1,T[x+8]=B.x,T[x+9]=B.y,T[x+10]=B.z,T[x+11]=1,T[x+12]=v.x,T[x+13]=v.y,T[x+14]=v.z,T[x+15]=1,x+=16;x>0&&(e.bindBuffer(e.ARRAY_BUFFER,o.__webglSkinVertexABuffer),e.bufferData(e.ARRAY_BUFFER,S,r),e.bindBuffer(e.ARRAY_BUFFER,o.__webglSkinVertexBBuffer),e.bufferData(e.ARRAY_BUFFER,
T,r),e.bindBuffer(e.ARRAY_BUFFER,o.__webglSkinIndicesBuffer),e.bufferData(e.ARRAY_BUFFER,aa,r),e.bindBuffer(e.ARRAY_BUFFER,o.__webglSkinWeightsBuffer),e.bufferData(e.ARRAY_BUFFER,ha,r))}if(qa&&y){k=0;for(w=I.length;k<w;k++)v=W[I[k]],x=v.vertexColors,aa=v.color,x.length===3&&y===THREE.VertexColors?(v=x[0],S=x[1],T=x[2]):T=S=v=aa,ca[Z]=v.r,ca[Z+1]=v.g,ca[Z+2]=v.b,ca[Z+3]=S.r,ca[Z+4]=S.g,ca[Z+5]=S.b,ca[Z+6]=T.r,ca[Z+7]=T.g,ca[Z+8]=T.b,Z+=9;k=0;for(w=U.length;k<w;k++)v=W[U[k]],x=v.vertexColors,aa=v.color,
x.length===4&&y===THREE.VertexColors?(v=x[0],S=x[1],T=x[2],x=x[3]):x=T=S=v=aa,ca[Z]=v.r,ca[Z+1]=v.g,ca[Z+2]=v.b,ca[Z+3]=S.r,ca[Z+4]=S.g,ca[Z+5]=S.b,ca[Z+6]=T.r,ca[Z+7]=T.g,ca[Z+8]=T.b,ca[Z+9]=x.r,ca[Z+10]=x.g,ca[Z+11]=x.b,Z+=12;Z>0&&(e.bindBuffer(e.ARRAY_BUFFER,o.__webglColorBuffer),e.bufferData(e.ARRAY_BUFFER,ca,r))}if(O&&ja.hasTangents){k=0;for(w=I.length;k<w;k++)v=W[I[k]],O=v.vertexTangents,Z=O[0],ca=O[1],ja=O[2],Y[F]=Z.x,Y[F+1]=Z.y,Y[F+2]=Z.z,Y[F+3]=Z.w,Y[F+4]=ca.x,Y[F+5]=ca.y,Y[F+6]=ca.z,Y[F+
7]=ca.w,Y[F+8]=ja.x,Y[F+9]=ja.y,Y[F+10]=ja.z,Y[F+11]=ja.w,F+=12;k=0;for(w=U.length;k<w;k++)v=W[U[k]],O=v.vertexTangents,Z=O[0],ca=O[1],ja=O[2],O=O[3],Y[F]=Z.x,Y[F+1]=Z.y,Y[F+2]=Z.z,Y[F+3]=Z.w,Y[F+4]=ca.x,Y[F+5]=ca.y,Y[F+6]=ca.z,Y[F+7]=ca.w,Y[F+8]=ja.x,Y[F+9]=ja.y,Y[F+10]=ja.z,Y[F+11]=ja.w,Y[F+12]=O.x,Y[F+13]=O.y,Y[F+14]=O.z,Y[F+15]=O.w,F+=16;e.bindBuffer(e.ARRAY_BUFFER,o.__webglTangentBuffer);e.bufferData(e.ARRAY_BUFFER,Y,r)}if(K&&t){k=0;for(w=I.length;k<w;k++)if(v=W[I[k]],Y=v.vertexNormals,K=v.normal,
Y.length===3&&M)for(F=0;F<3;F++)K=Y[F],R[E]=K.x,R[E+1]=K.y,R[E+2]=K.z,E+=3;else for(F=0;F<3;F++)R[E]=K.x,R[E+1]=K.y,R[E+2]=K.z,E+=3;k=0;for(w=U.length;k<w;k++)if(v=W[U[k]],Y=v.vertexNormals,K=v.normal,Y.length===4&&M)for(F=0;F<4;F++)K=Y[F],R[E]=K.x,R[E+1]=K.y,R[E+2]=K.z,E+=3;else for(F=0;F<4;F++)R[E]=K.x,R[E+1]=K.y,R[E+2]=K.z,E+=3;e.bindBuffer(e.ARRAY_BUFFER,o.__webglNormalBuffer);e.bufferData(e.ARRAY_BUFFER,R,r)}if(na&&ma&&J){k=0;for(w=I.length;k<w;k++)if(E=I[k],E=ma[E],E!==void 0)for(F=0;F<3;F++)R=
E[F],$[Q]=R.u,$[Q+1]=R.v,Q+=2;k=0;for(w=U.length;k<w;k++)if(E=U[k],E=ma[E],E!==void 0)for(F=0;F<4;F++)R=E[F],$[Q]=R.u,$[Q+1]=R.v,Q+=2;Q>0&&(e.bindBuffer(e.ARRAY_BUFFER,o.__webglUVBuffer),e.bufferData(e.ARRAY_BUFFER,$,r))}if(na&&va&&J){k=0;for(w=I.length;k<w;k++)if(E=I[k],Q=va[E],Q!==void 0)for(F=0;F<3;F++)$=Q[F],u[ga]=$.u,u[ga+1]=$.v,ga+=2;k=0;for(w=U.length;k<w;k++)if(E=U[k],Q=va[E],Q!==void 0)for(F=0;F<4;F++)$=Q[F],u[ga]=$.u,u[ga+1]=$.v,ga+=2;ga>0&&(e.bindBuffer(e.ARRAY_BUFFER,o.__webglUV2Buffer),
e.bufferData(e.ARRAY_BUFFER,u,r))}if(oa){k=0;for(w=I.length;k<w;k++)p[ba]=H,p[ba+1]=H+1,p[ba+2]=H+2,ba+=3,ea[X]=H,ea[X+1]=H+1,ea[X+2]=H,ea[X+3]=H+2,ea[X+4]=H+1,ea[X+5]=H+2,X+=6,H+=3;k=0;for(w=U.length;k<w;k++)p[ba]=H,p[ba+1]=H+1,p[ba+2]=H+3,p[ba+3]=H+1,p[ba+4]=H+2,p[ba+5]=H+3,ba+=6,ea[X]=H,ea[X+1]=H+1,ea[X+2]=H,ea[X+3]=H+3,ea[X+4]=H+1,ea[X+5]=H+2,ea[X+6]=H+2,ea[X+7]=H+3,X+=8,H+=4;e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,o.__webglFaceBuffer);e.bufferData(e.ELEMENT_ARRAY_BUFFER,p,r);e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,
o.__webglLineBuffer);e.bufferData(e.ELEMENT_ARRAY_BUFFER,ea,r)}if(G){F=0;for(H=G.length;F<H;F++)if(p=G[F],p.__original.needsUpdate){u=0;if(p.size===1)if(p.boundTo===void 0||p.boundTo==="vertices"){k=0;for(w=I.length;k<w;k++)v=W[I[k]],p.array[u]=p.value[v.a],p.array[u+1]=p.value[v.b],p.array[u+2]=p.value[v.c],u+=3;k=0;for(w=U.length;k<w;k++)v=W[U[k]],p.array[u]=p.value[v.a],p.array[u+1]=p.value[v.b],p.array[u+2]=p.value[v.c],p.array[u+3]=p.value[v.d],u+=4}else{if(p.boundTo==="faces"){k=0;for(w=I.length;k<
w;k++)ea=p.value[I[k]],p.array[u]=ea,p.array[u+1]=ea,p.array[u+2]=ea,u+=3;k=0;for(w=U.length;k<w;k++)ea=p.value[U[k]],p.array[u]=ea,p.array[u+1]=ea,p.array[u+2]=ea,p.array[u+3]=ea,u+=4}}else if(p.size===2)if(p.boundTo===void 0||p.boundTo==="vertices"){k=0;for(w=I.length;k<w;k++)v=W[I[k]],z=p.value[v.a],A=p.value[v.b],B=p.value[v.c],p.array[u]=z.x,p.array[u+1]=z.y,p.array[u+2]=A.x,p.array[u+3]=A.y,p.array[u+4]=B.x,p.array[u+5]=B.y,u+=6;k=0;for(w=U.length;k<w;k++)v=W[U[k]],z=p.value[v.a],A=p.value[v.b],
B=p.value[v.c],v=p.value[v.d],p.array[u]=z.x,p.array[u+1]=z.y,p.array[u+2]=A.x,p.array[u+3]=A.y,p.array[u+4]=B.x,p.array[u+5]=B.y,p.array[u+6]=v.x,p.array[u+7]=v.y,u+=8}else{if(p.boundTo==="faces"){k=0;for(w=I.length;k<w;k++)B=A=z=ea=p.value[I[k]],p.array[u]=z.x,p.array[u+1]=z.y,p.array[u+2]=A.x,p.array[u+3]=A.y,p.array[u+4]=B.x,p.array[u+5]=B.y,u+=6;k=0;for(w=U.length;k<w;k++)v=B=A=z=ea=p.value[U[k]],p.array[u]=z.x,p.array[u+1]=z.y,p.array[u+2]=A.x,p.array[u+3]=A.y,p.array[u+4]=B.x,p.array[u+5]=
B.y,p.array[u+6]=v.x,p.array[u+7]=v.y,u+=8}}else if(p.size===3)if(t=p.type==="c"?["r","g","b"]:["x","y","z"],p.boundTo===void 0||p.boundTo==="vertices"){k=0;for(w=I.length;k<w;k++)v=W[I[k]],z=p.value[v.a],A=p.value[v.b],B=p.value[v.c],p.array[u]=z[t[0]],p.array[u+1]=z[t[1]],p.array[u+2]=z[t[2]],p.array[u+3]=A[t[0]],p.array[u+4]=A[t[1]],p.array[u+5]=A[t[2]],p.array[u+6]=B[t[0]],p.array[u+7]=B[t[1]],p.array[u+8]=B[t[2]],u+=9;k=0;for(w=U.length;k<w;k++)v=W[U[k]],z=p.value[v.a],A=p.value[v.b],B=p.value[v.c],
v=p.value[v.d],p.array[u]=z[t[0]],p.array[u+1]=z[t[1]],p.array[u+2]=z[t[2]],p.array[u+3]=A[t[0]],p.array[u+4]=A[t[1]],p.array[u+5]=A[t[2]],p.array[u+6]=B[t[0]],p.array[u+7]=B[t[1]],p.array[u+8]=B[t[2]],p.array[u+9]=v[t[0]],p.array[u+10]=v[t[1]],p.array[u+11]=v[t[2]],u+=12}else{if(p.boundTo==="faces"){k=0;for(w=I.length;k<w;k++)B=A=z=ea=p.value[I[k]],p.array[u]=z[t[0]],p.array[u+1]=z[t[1]],p.array[u+2]=z[t[2]],p.array[u+3]=A[t[0]],p.array[u+4]=A[t[1]],p.array[u+5]=A[t[2]],p.array[u+6]=B[t[0]],p.array[u+
7]=B[t[1]],p.array[u+8]=B[t[2]],u+=9;k=0;for(w=U.length;k<w;k++)v=B=A=z=ea=p.value[U[k]],p.array[u]=z[t[0]],p.array[u+1]=z[t[1]],p.array[u+2]=z[t[2]],p.array[u+3]=A[t[0]],p.array[u+4]=A[t[1]],p.array[u+5]=A[t[2]],p.array[u+6]=B[t[0]],p.array[u+7]=B[t[1]],p.array[u+8]=B[t[2]],p.array[u+9]=v[t[0]],p.array[u+10]=v[t[1]],p.array[u+11]=v[t[2]],u+=12}}else if(p.size===4)if(p.boundTo===void 0||p.boundTo==="vertices"){k=0;for(w=I.length;k<w;k++)v=W[I[k]],z=p.value[v.a],A=p.value[v.b],B=p.value[v.c],p.array[u]=
z.x,p.array[u+1]=z.y,p.array[u+2]=z.z,p.array[u+3]=z.w,p.array[u+4]=A.x,p.array[u+5]=A.y,p.array[u+6]=A.z,p.array[u+7]=A.w,p.array[u+8]=B.x,p.array[u+9]=B.y,p.array[u+10]=B.z,p.array[u+11]=B.w,u+=12;k=0;for(w=U.length;k<w;k++)v=W[U[k]],z=p.value[v.a],A=p.value[v.b],B=p.value[v.c],v=p.value[v.d],p.array[u]=z.x,p.array[u+1]=z.y,p.array[u+2]=z.z,p.array[u+3]=z.w,p.array[u+4]=A.x,p.array[u+5]=A.y,p.array[u+6]=A.z,p.array[u+7]=A.w,p.array[u+8]=B.x,p.array[u+9]=B.y,p.array[u+10]=B.z,p.array[u+11]=B.w,p.array[u+
12]=v.x,p.array[u+13]=v.y,p.array[u+14]=v.z,p.array[u+15]=v.w,u+=16}else if(p.boundTo==="faces"){k=0;for(w=I.length;k<w;k++)B=A=z=ea=p.value[I[k]],p.array[u]=z.x,p.array[u+1]=z.y,p.array[u+2]=z.z,p.array[u+3]=z.w,p.array[u+4]=A.x,p.array[u+5]=A.y,p.array[u+6]=A.z,p.array[u+7]=A.w,p.array[u+8]=B.x,p.array[u+9]=B.y,p.array[u+10]=B.z,p.array[u+11]=B.w,u+=12;k=0;for(w=U.length;k<w;k++)v=B=A=z=ea=p.value[U[k]],p.array[u]=z.x,p.array[u+1]=z.y,p.array[u+2]=z.z,p.array[u+3]=z.w,p.array[u+4]=A.x,p.array[u+
5]=A.y,p.array[u+6]=A.z,p.array[u+7]=A.w,p.array[u+8]=B.x,p.array[u+9]=B.y,p.array[u+10]=B.z,p.array[u+11]=B.w,p.array[u+12]=v.x,p.array[u+13]=v.y,p.array[u+14]=v.z,p.array[u+15]=v.w,u+=16}e.bindBuffer(e.ARRAY_BUFFER,p.buffer);e.bufferData(e.ARRAY_BUFFER,p.array,r)}}s&&(delete o.__inittedArrays,delete o.__colorArray,delete o.__normalArray,delete o.__tangentArray,delete o.__uvArray,delete o.__uv2Array,delete o.__faceArray,delete o.__vertexArray,delete o.__lineArray,delete o.__skinVertexAArray,delete o.__skinVertexBArray,
delete o.__skinIndexArray,delete o.__skinWeightArray)}}q.__dirtyVertices=!1;q.__dirtyMorphTargets=!1;q.__dirtyElements=!1;q.__dirtyUvs=!1;q.__dirtyNormals=!1;q.__dirtyColors=!1;q.__dirtyTangents=!1;n.attributes&&sa(n)}else if(ia instanceof THREE.Ribbon){if(q.__dirtyVertices||q.__dirtyColors){n=q;ia=e.DYNAMIC_DRAW;t=l=t=s=s=void 0;y=n.vertices;m=n.colors;k=y.length;o=m.length;w=n.__vertexArray;r=n.__colorArray;G=n.__dirtyColors;if(n.__dirtyVertices){for(s=0;s<k;s++)t=y[s].position,l=s*3,w[l]=t.x,w[l+
1]=t.y,w[l+2]=t.z;e.bindBuffer(e.ARRAY_BUFFER,n.__webglVertexBuffer);e.bufferData(e.ARRAY_BUFFER,w,ia)}if(G){for(s=0;s<o;s++)t=m[s],l=s*3,r[l]=t.r,r[l+1]=t.g,r[l+2]=t.b;e.bindBuffer(e.ARRAY_BUFFER,n.__webglColorBuffer);e.bufferData(e.ARRAY_BUFFER,r,ia)}}q.__dirtyVertices=!1;q.__dirtyColors=!1}else if(ia instanceof THREE.Line){n=c(ia,o);r=n.attributes&&L(n);if(q.__dirtyVertices||q.__dirtyColors||r){ia=q;l=e.DYNAMIC_DRAW;k=m=M=y=J=void 0;y=ia.vertices;o=ia.colors;k=y.length;r=o.length;w=ia.__vertexArray;
s=ia.__colorArray;G=ia.__dirtyColors;t=ia.__webglCustomAttributesList;H=W=U=I=M=J=void 0;if(ia.__dirtyVertices){for(J=0;J<k;J++)M=y[J].position,m=J*3,w[m]=M.x,w[m+1]=M.y,w[m+2]=M.z;e.bindBuffer(e.ARRAY_BUFFER,ia.__webglVertexBuffer);e.bufferData(e.ARRAY_BUFFER,w,l)}if(G){for(y=0;y<r;y++)k=o[y],m=y*3,s[m]=k.r,s[m+1]=k.g,s[m+2]=k.b;e.bindBuffer(e.ARRAY_BUFFER,ia.__webglColorBuffer);e.bufferData(e.ARRAY_BUFFER,s,l)}if(t){J=0;for(M=t.length;J<M;J++)if(H=t[J],H.needsUpdate&&(H.boundTo===void 0||H.boundTo===
"vertices")){m=0;U=H.value.length;if(H.size===1)for(I=0;I<U;I++)H.array[I]=H.value[I];else if(H.size===2)for(I=0;I<U;I++)W=H.value[I],H.array[m]=W.x,H.array[m+1]=W.y,m+=2;else if(H.size===3)if(H.type==="c")for(I=0;I<U;I++)W=H.value[I],H.array[m]=W.r,H.array[m+1]=W.g,H.array[m+2]=W.b,m+=3;else for(I=0;I<U;I++)W=H.value[I],H.array[m]=W.x,H.array[m+1]=W.y,H.array[m+2]=W.z,m+=3;else if(H.size===4)for(I=0;I<U;I++)W=H.value[I],H.array[m]=W.x,H.array[m+1]=W.y,H.array[m+2]=W.z,H.array[m+3]=W.w,m+=4;e.bindBuffer(e.ARRAY_BUFFER,
H.buffer);e.bufferData(e.ARRAY_BUFFER,H.array,l)}}}q.__dirtyVertices=!1;q.__dirtyColors=!1;n.attributes&&sa(n)}else if(ia instanceof THREE.ParticleSystem)n=c(ia,o),r=n.attributes&&L(n),(q.__dirtyVertices||q.__dirtyColors||ia.sortParticles||r)&&h(q,e.DYNAMIC_DRAW,ia),q.__dirtyVertices=!1,q.__dirtyColors=!1,n.attributes&&sa(n)};this.initMaterial=function(a,b,c,d){var f,g,h,i;a instanceof THREE.MeshDepthMaterial?i="depth":a instanceof THREE.MeshNormalMaterial?i="normal":a instanceof THREE.MeshBasicMaterial?
i="basic":a instanceof THREE.MeshLambertMaterial?i="lambert":a instanceof THREE.MeshPhongMaterial?i="phong":a instanceof THREE.LineBasicMaterial?i="basic":a instanceof THREE.ParticleBasicMaterial&&(i="particle_basic");if(i){var j=THREE.ShaderLib[i];a.uniforms=THREE.UniformsUtils.clone(j.uniforms);a.vertexShader=j.vertexShader;a.fragmentShader=j.fragmentShader}var l,n,q;l=q=j=0;for(n=b.length;l<n;l++)h=b[l],h instanceof THREE.SpotLight&&q++,h instanceof THREE.DirectionalLight&&q++,h instanceof THREE.PointLight&&
j++;j+q<=R?l=q:(l=Math.ceil(R*q/(j+q)),j=R-l);h={directional:l,point:j};j=q=0;for(l=b.length;j<l;j++)n=b[j],n instanceof THREE.SpotLight&&n.castShadow&&q++;var k=50;if(d!==void 0&&d instanceof THREE.SkinnedMesh)k=d.bones.length;var m;a:{l=a.fragmentShader;n=a.vertexShader;var j=a.uniforms,b=a.attributes,c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,morphTargets:a.morphTargets,maxMorphTargets:this.maxMorphTargets,
maxDirLights:h.directional,maxPointLights:h.point,maxBones:k,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapWidth:this.shadowMapWidth,shadowMapHeight:this.shadowMapHeight,maxShadows:q,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel},s,d=[];i?d.push(i):(d.push(l),d.push(n));for(s in c)d.push(s),d.push(c[s]);i=d.join();s=0;for(d=O.length;s<d;s++)if(O[s].code===i){m=O[s].program;break a}s=e.createProgram();d=[Va?"#define VERTEX_TEXTURES":"",
C.gammaInput?"#define GAMMA_INPUT":"",C.gammaOutput?"#define GAMMA_OUTPUT":"",C.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.morphTargets?"#define USE_MORPHTARGETS":
"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform mat4 cameraInverseMatrix;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
h=["#ifdef GL_ES","precision "+Aa+" float;","#endif","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",C.gammaInput?"#define GAMMA_INPUT":"",C.gammaOutput?"#define GAMMA_OUTPUT":"",C.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":
"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapSoft?"#define SHADOWMAP_WIDTH "+c.shadowMapWidth.toFixed(1):"",c.shadowMapSoft?"#define SHADOWMAP_HEIGHT "+c.shadowMapHeight.toFixed(1):"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");e.attachShader(s,K("fragment",h+l));e.attachShader(s,
K("vertex",d+n));e.linkProgram(s);e.getProgramParameter(s,e.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+e.getProgramParameter(s,e.VALIDATE_STATUS)+", gl error ["+e.getError()+"]");s.uniforms={};s.attributes={};var y,d=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","cameraInverseMatrix","boneGlobalMatrices","morphTargetInfluences"];for(y in j)d.push(y);y=d;d=0;for(j=y.length;d<j;d++)l=y[d],s.uniforms[l]=e.getUniformLocation(s,
l);d=["position","normal","uv","uv2","tangent","color","skinVertexA","skinVertexB","skinIndex","skinWeight"];for(y=0;y<c.maxMorphTargets;y++)d.push("morphTarget"+y);for(m in b)d.push(m);m=d;y=0;for(b=m.length;y<b;y++)c=m[y],s.attributes[c]=e.getAttribLocation(s,c);s.id=O.length;O.push({program:s,code:i});C.info.memory.programs=O.length;m=s}a.program=m;m=a.program.attributes;m.position>=0&&e.enableVertexAttribArray(m.position);m.color>=0&&e.enableVertexAttribArray(m.color);m.normal>=0&&e.enableVertexAttribArray(m.normal);
m.tangent>=0&&e.enableVertexAttribArray(m.tangent);a.skinning&&m.skinVertexA>=0&&m.skinVertexB>=0&&m.skinIndex>=0&&m.skinWeight>=0&&(e.enableVertexAttribArray(m.skinVertexA),e.enableVertexAttribArray(m.skinVertexB),e.enableVertexAttribArray(m.skinIndex),e.enableVertexAttribArray(m.skinWeight));if(a.attributes)for(g in a.attributes)m[g]!==void 0&&m[g]>=0&&e.enableVertexAttribArray(m[g]);if(a.morphTargets)for(g=a.numSupportedMorphTargets=0;g<this.maxMorphTargets;g++)y="morphTarget"+g,m[y]>=0&&(e.enableVertexAttribArray(m[y]),
a.numSupportedMorphTargets++);a.uniformsList=[];for(f in a.uniforms)a.uniformsList.push([a.uniforms[f],f])};this.setFaceCulling=function(a,b){a?(!b||b==="ccw"?e.frontFace(e.CCW):e.frontFace(e.CW),a==="back"?e.cullFace(e.BACK):a==="front"?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK),e.enable(e.CULL_FACE)):e.disable(e.CULL_FACE)};this.setBlending=function(a){if(a!==Qa){switch(a){case THREE.AdditiveBlending:e.blendEquation(e.FUNC_ADD);e.blendFunc(e.SRC_ALPHA,e.ONE);break;case THREE.SubtractiveBlending:e.blendEquation(e.FUNC_ADD);
e.blendFunc(e.ZERO,e.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:e.blendEquation(e.FUNC_ADD);e.blendFunc(e.ZERO,e.SRC_COLOR);break;default:e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)}Qa=a}};this.setTexture=function(a,b){if(a.needsUpdate){if(!a.__webglInit)a.__webglInit=!0,a.__webglTexture=e.createTexture(),C.info.memory.textures++;e.activeTexture(e.TEXTURE0+b);e.bindTexture(e.TEXTURE_2D,a.__webglTexture);
var c=$(e.TEXTURE_2D,a,a.image);a instanceof THREE.DataTexture?e.texImage2D(e.TEXTURE_2D,0,ga(a.format),a.image.width,a.image.height,0,ga(a.format),e.UNSIGNED_BYTE,a.image.data):e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,a.image);c&&e.generateMipmap(e.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdated)a.onUpdated()}else e.activeTexture(e.TEXTURE0+b),e.bindTexture(e.TEXTURE_2D,a.__webglTexture)}};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=c.wrapS!==void 0?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=c.wrapT!==void 0?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=c.magFilter!==void 0?c.magFilter:THREE.LinearFilter;this.minFilter=c.minFilter!==void 0?c.minFilter:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=c.format!==void 0?c.format:THREE.RGBAFormat;this.type=c.type!==void 0?c.type:
THREE.UnsignedByteType;this.depthBuffer=c.depthBuffer!==void 0?c.depthBuffer:!0;this.stencilBuffer=c.stencilBuffer!==void 0?c.stencilBuffer:!0};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;return a};THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};
THREE.WebGLRenderTargetCube.prototype=new THREE.WebGLRenderTarget;THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;
