// ThreeWebGL.js r46dev - http://github.com/mrdoob/three.js
var THREE=THREE||{};if(!self.Int32Array)self.Int32Array=Array,self.Float32Array=Array;THREE.Color=function(a){a!==void 0&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var e,h,f;if(c===0)this.r=this.g=this.b=0;else switch(e=Math.floor(a*6),h=a*6-e,a=c*(1-b),f=c*(1-
b*h),b=c*(1-b*(1-h)),e){case 1:this.r=f;this.g=c;this.b=a;break;case 2:this.r=a;this.g=c;this.b=b;break;case 3:this.r=a;this.g=f;this.b=c;break;case 4:this.r=b;this.g=a;this.b=c;break;case 5:this.r=c;this.g=a;this.b=f;break;case 6:case 0:this.r=c,this.g=b,this.b=a}return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},getHex:function(){return~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},getContextStyle:function(){return"rgb("+
Math.floor(this.r*255)+","+Math.floor(this.g*255)+","+Math.floor(this.b*255)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},
divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},
equals:function(a){return a.x===this.x&&a.y===this.y}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},
addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},
divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):this.set(0,0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return this.x+this.y+this.z},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){return this.set(this.y*a.z-this.z*a.y,this.z*a.x-this.x*a.z,this.x*a.y-this.y*a.x)},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,a).lengthSq()},setPositionFromMatrix:function(a){this.x=a.n14;this.y=a.n24;this.z=a.n34},setRotationFromMatrix:function(a){var b=Math.cos(this.y);this.y=Math.asin(a.n13);
Math.abs(b)>1.0E-5?(this.x=Math.atan2(-a.n23/b,a.n33/b),this.z=Math.atan2(-a.n12/b,a.n11/b)):(this.x=0,this.z=Math.atan2(a.n21,a.n22))},isZero:function(){return this.lengthSq()<1.0E-4}};THREE.Vector4=function(a,b,c,e){this.x=a||0;this.y=b||0;this.z=c||0;this.w=e!==void 0?e:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,e){this.x=a;this.y=b;this.z=c;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w!==void 0?a.w:1},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-
b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},
normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this}};THREE.Ray=function(a,b){this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3};
THREE.Ray.prototype={constructor:THREE.Ray,intersectScene:function(a){return this.intersectObjects(a.children)},intersectObjects:function(a){var b,c,e=[];b=0;for(c=a.length;b<c;b++)Array.prototype.push.apply(e,this.intersectObject(a[b]));e.sort(function(a,b){return a.distance-b.distance});return e},intersectObject:function(a){function b(a,b,c){var e;e=c.clone().subSelf(a).dot(b);if(e<=0)return null;a=a.clone().addSelf(b.clone().multiplyScalar(e));return c.distanceTo(a)}function c(a,b,c,A){e.copy(A).subSelf(b);
h.copy(c).subSelf(b);f.copy(a).subSelf(b);i=e.dot(e);j=e.dot(h);m=e.dot(f);l=h.dot(h);k=h.dot(f);s=1/(i*l-j*j);t=(l*m-j*k)*s;z=(i*k-j*m)*s;return t>=0&&z>=0&&t+z<1}for(var e=new THREE.Vector3,h=new THREE.Vector3,f=new THREE.Vector3,i,j,m,l,k,s,t,z,A,B=[],D=0,pa=a.children.length;D<pa;D++)Array.prototype.push.apply(B,this.intersectObject(a.children[D]));if(a instanceof THREE.Particle){D=b(this.origin,this.direction,a.matrixWorld.getPosition());if(D===null||D>a.scale.x)return[];A={distance:D,point:a.position,
face:null,object:a};B.push(A)}else if(a instanceof THREE.Mesh){D=b(this.origin,this.direction,a.matrixWorld.getPosition());if(D===null||D>a.geometry.boundingSphere.radius*Math.max(a.scale.x,Math.max(a.scale.y,a.scale.z)))return B;var H,ka,qa,M,U,C,J,T,P=a.geometry,V=P.vertices;a.matrixRotationWorld.extractRotation(a.matrixWorld);D=0;for(pa=P.faces.length;D<pa;D++)if(A=P.faces[D],J=this.origin.clone(),T=this.direction.clone(),M=a.matrixWorld,H=M.multiplyVector3(A.centroid.clone()).subSelf(J),C=H.dot(T),
!(C<=0)&&(H=M.multiplyVector3(V[A.a].position.clone()),ka=M.multiplyVector3(V[A.b].position.clone()),qa=M.multiplyVector3(V[A.c].position.clone()),M=A instanceof THREE.Face4?M.multiplyVector3(V[A.d].position.clone()):null,U=a.matrixRotationWorld.multiplyVector3(A.normal.clone()),C=T.dot(U),a.doubleSided||(a.flipSided?C>0:C<0)))if(C=U.dot((new THREE.Vector3).sub(H,J))/C,J=J.addSelf(T.multiplyScalar(C)),A instanceof THREE.Face3)c(J,H,ka,qa)&&(A={distance:this.origin.distanceTo(J),point:J,face:A,object:a},
B.push(A));else if(A instanceof THREE.Face4&&(c(J,H,ka,M)||c(J,ka,qa,M)))A={distance:this.origin.distanceTo(J),point:J,face:A,object:a},B.push(A)}return B}};
THREE.Rectangle=function(){function a(){f=e-b;i=h-c}var b,c,e,h,f,i,j=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return f};this.getHeight=function(){return i};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return e};this.getBottom=function(){return h};this.set=function(f,i,k,s){j=!1;b=f;c=i;e=k;h=s;a()};this.addPoint=function(f,i){j?(j=!1,b=f,c=i,e=f,h=i):(b=b<f?b:f,c=c<i?c:i,e=e>f?e:f,h=h>i?h:i);a()};this.add3Points=
function(f,i,k,s,t,z){j?(j=!1,b=f<k?f<t?f:t:k<t?k:t,c=i<s?i<z?i:z:s<z?s:z,e=f>k?f>t?f:t:k>t?k:t,h=i>s?i>z?i:z:s>z?s:z):(b=f<k?f<t?f<b?f:b:t<b?t:b:k<t?k<b?k:b:t<b?t:b,c=i<s?i<z?i<c?i:c:z<c?z:c:s<z?s<c?s:c:z<c?z:c,e=f>k?f>t?f>e?f:e:t>e?t:e:k>t?k>e?k:e:t>e?t:e,h=i>s?i>z?i>h?i:h:z>h?z:h:s>z?s>h?s:h:z>h?z:h);a()};this.addRectangle=function(f){j?(j=!1,b=f.getLeft(),c=f.getTop(),e=f.getRight(),h=f.getBottom()):(b=b<f.getLeft()?b:f.getLeft(),c=c<f.getTop()?c:f.getTop(),e=e>f.getRight()?e:f.getRight(),h=h>
f.getBottom()?h:f.getBottom());a()};this.inflate=function(f){b-=f;c-=f;e+=f;h+=f;a()};this.minSelf=function(f){b=b>f.getLeft()?b:f.getLeft();c=c>f.getTop()?c:f.getTop();e=e<f.getRight()?e:f.getRight();h=h<f.getBottom()?h:f.getBottom();a()};this.intersects=function(a){return Math.min(e,a.getRight())-Math.max(b,a.getLeft())>=0&&Math.min(h,a.getBottom())-Math.max(c,a.getTop())>=0};this.empty=function(){j=!0;h=e=c=b=0;a()};this.isEmpty=function(){return j}};
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,e,h){return e+(a-b)*(h-e)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535}};THREE.Matrix3=function(){this.m=[]};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,transpose:function(){var a,b=this.m;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};
THREE.Matrix4=function(a,b,c,e,h,f,i,j,m,l,k,s,t,z,A,B){this.set(a!==void 0?a:1,b||0,c||0,e||0,h||0,f!==void 0?f:1,i||0,j||0,m||0,l||0,k!==void 0?k:1,s||0,t||0,z||0,A||0,B!==void 0?B:1);this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,e,h,f,i,j,m,l,k,s,t,z,A,B){this.n11=a;this.n12=b;this.n13=c;this.n14=e;this.n21=h;this.n22=f;this.n23=i;this.n24=j;this.n31=m;this.n32=l;this.n33=k;this.n34=s;this.n41=t;this.n42=z;this.n43=A;this.n44=B;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.set(a.n11,a.n12,a.n13,a.n14,a.n21,a.n22,a.n23,a.n24,a.n31,a.n32,a.n33,a.n34,a.n41,a.n42,a.n43,a.n44);return this},lookAt:function(a,
b,c){var e=THREE.Matrix4.__v1,h=THREE.Matrix4.__v2,f=THREE.Matrix4.__v3;f.sub(a,b).normalize();if(f.length()===0)f.z=1;e.cross(c,f).normalize();e.length()===0&&(f.x+=1.0E-4,e.cross(c,f).normalize());h.cross(f,e).normalize();this.n11=e.x;this.n12=h.x;this.n13=f.x;this.n21=e.y;this.n22=h.y;this.n23=f.y;this.n31=e.z;this.n32=h.z;this.n33=f.z;return this},multiply:function(a,b){var c=a.n11,e=a.n12,h=a.n13,f=a.n14,i=a.n21,j=a.n22,m=a.n23,l=a.n24,k=a.n31,s=a.n32,t=a.n33,z=a.n34,A=a.n41,B=a.n42,D=a.n43,
pa=a.n44,H=b.n11,ka=b.n12,qa=b.n13,M=b.n14,U=b.n21,C=b.n22,J=b.n23,T=b.n24,P=b.n31,V=b.n32,ja=b.n33,Z=b.n34,ya=b.n41,ia=b.n42,G=b.n43,d=b.n44;this.n11=c*H+e*U+h*P+f*ya;this.n12=c*ka+e*C+h*V+f*ia;this.n13=c*qa+e*J+h*ja+f*G;this.n14=c*M+e*T+h*Z+f*d;this.n21=i*H+j*U+m*P+l*ya;this.n22=i*ka+j*C+m*V+l*ia;this.n23=i*qa+j*J+m*ja+l*G;this.n24=i*M+j*T+m*Z+l*d;this.n31=k*H+s*U+t*P+z*ya;this.n32=k*ka+s*C+t*V+z*ia;this.n33=k*qa+s*J+t*ja+z*G;this.n34=k*M+s*T+t*Z+z*d;this.n41=A*H+B*U+D*P+pa*ya;this.n42=A*ka+B*C+
D*V+pa*ia;this.n43=A*qa+B*J+D*ja+pa*G;this.n44=A*M+B*T+D*Z+pa*d;return this},multiplySelf:function(a){return this.multiply(this,a)},multiplyToArray:function(a,b,c){this.multiply(a,b);c[0]=this.n11;c[1]=this.n21;c[2]=this.n31;c[3]=this.n41;c[4]=this.n12;c[5]=this.n22;c[6]=this.n32;c[7]=this.n42;c[8]=this.n13;c[9]=this.n23;c[10]=this.n33;c[11]=this.n43;c[12]=this.n14;c[13]=this.n24;c[14]=this.n34;c[15]=this.n44;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;
this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},multiplyVector3:function(a){var b=a.x,c=a.y,e=a.z,h=1/(this.n41*b+this.n42*c+this.n43*e+this.n44);a.x=(this.n11*b+this.n12*c+this.n13*e+this.n14)*h;a.y=(this.n21*b+this.n22*c+this.n23*e+this.n24)*h;a.z=(this.n31*b+this.n32*c+this.n33*e+this.n34)*h;return a},multiplyVector4:function(a){var b=a.x,c=a.y,e=a.z,h=a.w;a.x=this.n11*b+this.n12*c+this.n13*
e+this.n14*h;a.y=this.n21*b+this.n22*c+this.n23*e+this.n24*h;a.z=this.n31*b+this.n32*c+this.n33*e+this.n34*h;a.w=this.n41*b+this.n42*c+this.n43*e+this.n44*h;return a},rotateAxis:function(a){var b=a.x,c=a.y,e=a.z;a.x=b*this.n11+c*this.n12+e*this.n13;a.y=b*this.n21+c*this.n22+e*this.n23;a.z=b*this.n31+c*this.n32+e*this.n33;a.normalize();return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*
a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},determinant:function(){var a=this.n11,b=this.n12,c=this.n13,e=this.n14,h=this.n21,f=this.n22,i=this.n23,j=this.n24,m=this.n31,l=this.n32,k=this.n33,s=this.n34,t=this.n41,z=this.n42,A=this.n43,B=this.n44;return e*i*l*t-c*j*l*t-e*f*k*t+b*j*k*t+c*f*s*t-b*i*s*t-e*i*m*z+c*j*m*z+e*h*k*z-a*j*k*z-c*h*s*z+a*i*s*z+e*f*m*A-b*j*m*A-e*h*l*A+a*j*l*A+b*h*s*A-a*f*s*A-c*f*m*B+b*i*m*B+
c*h*l*B-a*i*l*B-b*h*k*B+a*f*k*B},transpose:function(){var a;a=this.n21;this.n21=this.n12;this.n12=a;a=this.n31;this.n31=this.n13;this.n13=a;a=this.n32;this.n32=this.n23;this.n23=a;a=this.n41;this.n41=this.n14;this.n14=a;a=this.n42;this.n42=this.n24;this.n24=a;a=this.n43;this.n43=this.n34;this.n43=a;return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;
a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){this.flat[0]=this.n11;this.flat[1]=this.n21;this.flat[2]=this.n31;this.flat[3]=this.n41;this.flat[4]=this.n12;this.flat[5]=this.n22;this.flat[6]=this.n32;this.flat[7]=this.n42;this.flat[8]=this.n13;this.flat[9]=this.n23;this.flat[10]=this.n33;this.flat[11]=this.n43;this.flat[12]=this.n14;this.flat[13]=this.n24;this.flat[14]=this.n34;this.flat[15]=this.n44;return this.flat},flattenToArray:function(a){a[0]=
this.n11;a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},flattenToArrayOffset:function(a,b){a[b]=this.n11;a[b+1]=this.n21;a[b+2]=this.n31;a[b+3]=this.n41;a[b+4]=this.n12;a[b+5]=this.n22;a[b+6]=this.n32;a[b+7]=this.n42;a[b+8]=this.n13;a[b+9]=this.n23;a[b+10]=this.n33;a[b+11]=this.n43;a[b+12]=this.n14;a[b+13]=this.n24;a[b+14]=
this.n34;a[b+15]=this.n44;return a},setTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},setScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},setRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},setRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},setRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,-a,0,
0,a,b,0,0,0,0,1,0,0,0,0,1);return this},setRotationAxis:function(a,b){var c=Math.cos(b),e=Math.sin(b),h=1-c,f=a.x,i=a.y,j=a.z,m=h*f,l=h*i;this.set(m*f+c,m*i-e*j,m*j+e*i,0,m*i+e*j,l*i+c,l*j-e*f,0,m*j-e*i,l*j+e*f,h*j*j+c,0,0,0,0,1);return this},setPosition:function(a){this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},getPosition:function(){return THREE.Matrix4.__v1.set(this.n14,this.n24,this.n34)},getColumnX:function(){return THREE.Matrix4.__v1.set(this.n11,this.n21,this.n31)},getColumnY:function(){return THREE.Matrix4.__v1.set(this.n12,
this.n22,this.n32)},getColumnZ:function(){return THREE.Matrix4.__v1.set(this.n13,this.n23,this.n33)},getInverse:function(a){var b=a.n11,c=a.n12,e=a.n13,h=a.n14,f=a.n21,i=a.n22,j=a.n23,m=a.n24,l=a.n31,k=a.n32,s=a.n33,t=a.n34,z=a.n41,A=a.n42,B=a.n43,D=a.n44;this.n11=j*t*A-m*s*A+m*k*B-i*t*B-j*k*D+i*s*D;this.n12=h*s*A-e*t*A-h*k*B+c*t*B+e*k*D-c*s*D;this.n13=e*m*A-h*j*A+h*i*B-c*m*B-e*i*D+c*j*D;this.n14=h*j*k-e*m*k-h*i*s+c*m*s+e*i*t-c*j*t;this.n21=m*s*z-j*t*z-m*l*B+f*t*B+j*l*D-f*s*D;this.n22=e*t*z-h*s*z+
h*l*B-b*t*B-e*l*D+b*s*D;this.n23=h*j*z-e*m*z-h*f*B+b*m*B+e*f*D-b*j*D;this.n24=e*m*l-h*j*l+h*f*s-b*m*s-e*f*t+b*j*t;this.n31=i*t*z-m*k*z+m*l*A-f*t*A-i*l*D+f*k*D;this.n32=h*k*z-c*t*z-h*l*A+b*t*A+c*l*D-b*k*D;this.n33=e*m*z-h*i*z+h*f*A-b*m*A-c*f*D+b*i*D;this.n34=h*i*l-c*m*l-h*f*k+b*m*k+c*f*t-b*i*t;this.n41=j*k*z-i*s*z-j*l*A+f*s*A+i*l*B-f*k*B;this.n42=c*s*z-e*k*z+e*l*A-b*s*A-c*l*B+b*k*B;this.n43=e*i*z-c*j*z-e*f*A+b*j*A+c*f*B-b*i*B;this.n44=c*j*l-e*i*l+e*f*k-b*j*k-c*f*s+b*i*s;this.multiplyScalar(1/a.determinant());
return this},setRotationFromEuler:function(a,b){var c=a.x,e=a.y,h=a.z,f=Math.cos(c),c=Math.sin(c),i=Math.cos(e),e=Math.sin(e),j=Math.cos(h),h=Math.sin(h);switch(b){case "YXZ":var m=i*j,l=i*h,k=e*j,s=e*h;this.n11=m+s*c;this.n12=k*c-l;this.n13=f*e;this.n21=f*h;this.n22=f*j;this.n23=-c;this.n31=l*c-k;this.n32=s+m*c;this.n33=f*i;break;case "ZXY":m=i*j;l=i*h;k=e*j;s=e*h;this.n11=m-s*c;this.n12=-f*h;this.n13=k+l*c;this.n21=l+k*c;this.n22=f*j;this.n23=s-m*c;this.n31=-f*e;this.n32=c;this.n33=f*i;break;case "ZYX":m=
f*j;l=f*h;k=c*j;s=c*h;this.n11=i*j;this.n12=k*e-l;this.n13=m*e+s;this.n21=i*h;this.n22=s*e+m;this.n23=l*e-k;this.n31=-e;this.n32=c*i;this.n33=f*i;break;case "YZX":m=f*i;l=f*e;k=c*i;s=c*e;this.n11=i*j;this.n12=s-m*h;this.n13=k*h+l;this.n21=h;this.n22=f*j;this.n23=-c*j;this.n31=-e*j;this.n32=l*h+k;this.n33=m-s*h;break;case "XZY":m=f*i;l=f*e;k=c*i;s=c*e;this.n11=i*j;this.n12=-h;this.n13=e*j;this.n21=m*h+s;this.n22=f*j;this.n23=l*h-k;this.n31=k*h-l;this.n32=c*j;this.n33=s*h+m;break;default:m=f*j,l=f*
h,k=c*j,s=c*h,this.n11=i*j,this.n12=-i*h,this.n13=e,this.n21=l+k*e,this.n22=m-s*e,this.n23=-c*i,this.n31=s-m*e,this.n32=k+l*e,this.n33=f*i}return this},setRotationFromQuaternion:function(a){var b=a.x,c=a.y,e=a.z,h=a.w,f=b+b,i=c+c,j=e+e,a=b*f,m=b*i;b*=j;var l=c*i;c*=j;e*=j;f*=h;i*=h;h*=j;this.n11=1-(l+e);this.n12=m-h;this.n13=b+i;this.n21=m+h;this.n22=1-(a+e);this.n23=c-f;this.n31=b-i;this.n32=c+f;this.n33=1-(a+l);return this},scale:function(a){var b=a.x,c=a.y,a=a.z;this.n11*=b;this.n12*=c;this.n13*=
a;this.n21*=b;this.n22*=c;this.n23*=a;this.n31*=b;this.n32*=c;this.n33*=a;this.n41*=b;this.n42*=c;this.n43*=a;return this},compose:function(a,b,c){var e=THREE.Matrix4.__m1,h=THREE.Matrix4.__m2;e.identity();e.setRotationFromQuaternion(b);h.setScale(c.x,c.y,c.z);this.multiply(e,h);this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},decompose:function(a,b,c){var e=THREE.Matrix4.__v1,h=THREE.Matrix4.__v2,f=THREE.Matrix4.__v3;e.set(this.n11,this.n21,this.n31);h.set(this.n12,this.n22,this.n32);f.set(this.n13,
this.n23,this.n33);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=e.length();c.y=h.length();c.z=f.length();a.x=this.n14;a.y=this.n24;a.z=this.n34;e=THREE.Matrix4.__m1;e.copy(this);e.n11/=c.x;e.n21/=c.x;e.n31/=c.x;e.n12/=c.y;e.n22/=c.y;e.n32/=c.y;e.n13/=c.z;e.n23/=c.z;e.n33/=c.z;b.setFromRotationMatrix(e);return[a,b,c]},extractPosition:function(a){this.n14=a.n14;this.n24=a.n24;this.n34=a.n34;
return this},extractRotation:function(a){var b=THREE.Matrix4.__v1,c=1/b.set(a.n11,a.n21,a.n31).length(),e=1/b.set(a.n12,a.n22,a.n32).length(),b=1/b.set(a.n13,a.n23,a.n33).length();this.n11=a.n11*c;this.n21=a.n21*c;this.n31=a.n31*c;this.n12=a.n12*e;this.n22=a.n22*e;this.n32=a.n32*e;this.n13=a.n13*b;this.n23=a.n23*b;this.n33=a.n33*b;return this}};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.m33,c=b.m,e=a.n33*a.n22-a.n32*a.n23,h=-a.n33*a.n21+a.n31*a.n23,f=a.n32*a.n21-a.n31*a.n22,i=-a.n33*a.n12+a.n32*a.n13,j=a.n33*a.n11-a.n31*a.n13,m=-a.n32*a.n11+a.n31*a.n12,l=a.n23*a.n12-a.n22*a.n13,k=-a.n23*a.n11+a.n21*a.n13,s=a.n22*a.n11-a.n21*a.n12,a=a.n11*e+a.n21*i+a.n31*l;a===0&&console.error("THREE.Matrix4.makeInvert3x3: Matrix not invertible.");a=1/a;c[0]=a*e;c[1]=a*h;c[2]=a*f;c[3]=a*i;c[4]=a*j;c[5]=a*m;c[6]=a*l;c[7]=a*k;c[8]=a*s;return b};
THREE.Matrix4.makeFrustum=function(a,b,c,e,h,f){var i;i=new THREE.Matrix4;i.n11=2*h/(b-a);i.n12=0;i.n13=(b+a)/(b-a);i.n14=0;i.n21=0;i.n22=2*h/(e-c);i.n23=(e+c)/(e-c);i.n24=0;i.n31=0;i.n32=0;i.n33=-(f+h)/(f-h);i.n34=-2*f*h/(f-h);i.n41=0;i.n42=0;i.n43=-1;i.n44=0;return i};THREE.Matrix4.makePerspective=function(a,b,c,e){var h,a=c*Math.tan(a*Math.PI/360);h=-a;return THREE.Matrix4.makeFrustum(h*b,a*b,h,a,c,e)};
THREE.Matrix4.makeOrtho=function(a,b,c,e,h,f){var i,j,m,l;i=new THREE.Matrix4;j=b-a;m=c-e;l=f-h;i.n11=2/j;i.n12=0;i.n13=0;i.n14=-((b+a)/j);i.n21=0;i.n22=2/m;i.n23=0;i.n24=-((c+e)/m);i.n31=0;i.n32=0;i.n33=-2/l;i.n34=-((f+h)/l);i.n41=0;i.n42=0;i.n43=0;i.n44=1;return i};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.Object3D=function(){this.name="";this.id=THREE.Object3DCount++;this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder="XYZ";this.scale=new THREE.Vector3(1,1,1);this.flipSided=this.doubleSided=this.dynamic=!1;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=
!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)},add:function(a){if(this.children.indexOf(a)===
-1){a.parent!==void 0&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(b!==-1){a.parent=void 0;this.children.splice(b,1);for(b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.removeObject(a)}},getChildByName:function(a,b){var c,e,h;c=0;for(e=this.children.length;c<e;c++){h=this.children[c];if(h.name===a)return h;
if(b&&(h=h.getChildByName(a,b),h!==void 0))return h}},updateMatrix:function(){this.matrix.setPosition(this.position);this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder);if(this.scale.x!==1||this.scale.y!==1||this.scale.z!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&
this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)}};THREE.Object3DCount=0;
THREE.Projector=function(){function a(){var a=i[f]=i[f]||new THREE.RenderableObject;f++;return a}function b(){var a=l[m]=l[m]||new THREE.RenderableVertex;m++;return a}function c(a,b){return b.z-a.z}function e(a,b){var c=0,e=1,d=a.z+a.w,f=b.z+b.w,h=-a.z+a.w,i=-b.z+b.w;return d>=0&&f>=0&&h>=0&&i>=0?!0:d<0&&f<0||h<0&&i<0?!1:(d<0?c=Math.max(c,d/(d-f)):f<0&&(e=Math.min(e,d/(d-f))),h<0?c=Math.max(c,h/(h-i)):i<0&&(e=Math.min(e,h/(h-i))),e<c?!1:(a.lerpSelf(b,c),b.lerpSelf(a,1-e),!0))}var h,f,i=[],j,m,l=[],
k,s,t=[],z,A=[],B,D,pa=[],H,ka,qa=[],M={objects:[],sprites:[],lights:[],elements:[]},U=new THREE.Vector3,C=new THREE.Vector4,J=new THREE.Matrix4,T=new THREE.Matrix4,P=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],V=new THREE.Vector4,ja=new THREE.Vector4;this.computeFrustum=function(a){P[0].set(a.n41-a.n11,a.n42-a.n12,a.n43-a.n13,a.n44-a.n14);P[1].set(a.n41+a.n11,a.n42+a.n12,a.n43+a.n13,a.n44+a.n14);P[2].set(a.n41+a.n21,a.n42+a.n22,a.n43+
a.n23,a.n44+a.n24);P[3].set(a.n41-a.n21,a.n42-a.n22,a.n43-a.n23,a.n44-a.n24);P[4].set(a.n41-a.n31,a.n42-a.n32,a.n43-a.n33,a.n44-a.n34);P[5].set(a.n41+a.n31,a.n42+a.n32,a.n43+a.n33,a.n44+a.n34);for(a=0;a<6;a++){var b=P[a];b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))}};this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);J.multiply(b.projectionMatrix,b.matrixWorldInverse);J.multiplyVector3(a);return a};this.unprojectVector=function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);
J.multiply(b.matrixWorld,b.projectionMatrixInverse);J.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectGraph=function(b,e){f=0;M.objects.length=0;M.sprites.length=0;M.lights.length=0;var i=function(b){if(b.visible!==!1){var d;if(d=b instanceof THREE.Mesh||b instanceof THREE.Line)if(!(d=b.frustumCulled===!1))a:{for(var c=b.matrixWorld,
e=-b.geometry.boundingSphere.radius*Math.max(b.scale.x,Math.max(b.scale.y,b.scale.z)),f=0;f<6;f++)if(d=P[f].x*c.n14+P[f].y*c.n24+P[f].z*c.n34+P[f].w,d<=e){d=!1;break a}d=!0}d?(J.multiplyVector3(U.copy(b.position)),h=a(),h.object=b,h.z=U.z,M.objects.push(h)):b instanceof THREE.Sprite||b instanceof THREE.Particle?(J.multiplyVector3(U.copy(b.position)),h=a(),h.object=b,h.z=U.z,M.sprites.push(h)):b instanceof THREE.Light&&M.lights.push(b);d=0;for(c=b.children.length;d<c;d++)i(b.children[d])}};i(b);e&&
M.objects.sort(c);return M};this.projectScene=function(a,f,h){var i=f.near,d=f.far,P,U,S,$,K,ra,R,ha,N,wa,ua,Ea,Pa,Fa,Aa,za;ka=D=z=s=0;M.elements.length=0;f.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),a.add(f));a.updateMatrixWorld();f.matrixWorldInverse.getInverse(f.matrixWorld);J.multiply(f.projectionMatrix,f.matrixWorldInverse);this.computeFrustum(J);M=this.projectGraph(a,!1);a=0;for(P=M.objects.length;a<P;a++)if(N=M.objects[a].object,wa=N.matrixWorld,
Ea=N.material,m=0,N instanceof THREE.Mesh){ua=N.geometry;Pa=N.geometry.materials;$=ua.vertices;Fa=ua.faces;Aa=ua.faceVertexUvs;ua=N.matrixRotationWorld.extractRotation(wa);U=0;for(S=$.length;U<S;U++)j=b(),j.positionWorld.copy($[U].position),wa.multiplyVector3(j.positionWorld),j.positionScreen.copy(j.positionWorld),J.multiplyVector4(j.positionScreen),j.positionScreen.x/=j.positionScreen.w,j.positionScreen.y/=j.positionScreen.w,j.visible=j.positionScreen.z>i&&j.positionScreen.z<d;$=0;for(U=Fa.length;$<
U;$++){S=Fa[$];if(S instanceof THREE.Face3)if(K=l[S.a],ra=l[S.b],R=l[S.c],K.visible&&ra.visible&&R.visible&&(N.doubleSided||N.flipSided!=(R.positionScreen.x-K.positionScreen.x)*(ra.positionScreen.y-K.positionScreen.y)-(R.positionScreen.y-K.positionScreen.y)*(ra.positionScreen.x-K.positionScreen.x)<0))ha=t[s]=t[s]||new THREE.RenderableFace3,s++,k=ha,k.v1.copy(K),k.v2.copy(ra),k.v3.copy(R);else continue;else if(S instanceof THREE.Face4)if(K=l[S.a],ra=l[S.b],R=l[S.c],ha=l[S.d],K.visible&&ra.visible&&
R.visible&&ha.visible&&(N.doubleSided||N.flipSided!=((ha.positionScreen.x-K.positionScreen.x)*(ra.positionScreen.y-K.positionScreen.y)-(ha.positionScreen.y-K.positionScreen.y)*(ra.positionScreen.x-K.positionScreen.x)<0||(ra.positionScreen.x-R.positionScreen.x)*(ha.positionScreen.y-R.positionScreen.y)-(ra.positionScreen.y-R.positionScreen.y)*(ha.positionScreen.x-R.positionScreen.x)<0)))za=A[z]=A[z]||new THREE.RenderableFace4,z++,k=za,k.v1.copy(K),k.v2.copy(ra),k.v3.copy(R),k.v4.copy(ha);else continue;
k.normalWorld.copy(S.normal);ua.multiplyVector3(k.normalWorld);k.centroidWorld.copy(S.centroid);wa.multiplyVector3(k.centroidWorld);k.centroidScreen.copy(k.centroidWorld);J.multiplyVector3(k.centroidScreen);R=S.vertexNormals;K=0;for(ra=R.length;K<ra;K++)ha=k.vertexNormalsWorld[K],ha.copy(R[K]),ua.multiplyVector3(ha);K=0;for(ra=Aa.length;K<ra;K++)if(za=Aa[K][$]){R=0;for(ha=za.length;R<ha;R++)k.uvs[K][R]=za[R]}k.material=Ea;k.faceMaterial=S.materialIndex!==null?Pa[S.materialIndex]:null;k.z=k.centroidScreen.z;
M.elements.push(k)}}else if(N instanceof THREE.Line){T.multiply(J,wa);$=N.geometry.vertices;K=b();K.positionScreen.copy($[0].position);T.multiplyVector4(K.positionScreen);U=1;for(S=$.length;U<S;U++)if(K=b(),K.positionScreen.copy($[U].position),T.multiplyVector4(K.positionScreen),ra=l[m-2],V.copy(K.positionScreen),ja.copy(ra.positionScreen),e(V,ja))V.multiplyScalar(1/V.w),ja.multiplyScalar(1/ja.w),N=pa[D]=pa[D]||new THREE.RenderableLine,D++,B=N,B.v1.positionScreen.copy(V),B.v2.positionScreen.copy(ja),
B.z=Math.max(V.z,ja.z),B.material=Ea,M.elements.push(B)}a=0;for(P=M.sprites.length;a<P;a++)if(N=M.sprites[a].object,wa=N.matrixWorld,N instanceof THREE.Particle&&(C.set(wa.n14,wa.n24,wa.n34,1),J.multiplyVector4(C),C.z/=C.w,C.z>0&&C.z<1))i=qa[ka]=qa[ka]||new THREE.RenderableParticle,ka++,H=i,H.x=C.x/C.w,H.y=C.y/C.w,H.z=C.z,H.rotation=N.rotation.z,H.scale.x=N.scale.x*Math.abs(H.x-(C.x+f.projectionMatrix.n11)/(C.w+f.projectionMatrix.n14)),H.scale.y=N.scale.y*Math.abs(H.y-(C.y+f.projectionMatrix.n22)/
(C.w+f.projectionMatrix.n24)),H.material=N.material,M.elements.push(H);h&&M.elements.sort(c);return M}};THREE.Quaternion=function(a,b,c,e){this.set(a||0,b||0,c||0,e!==void 0?e:1)};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,e){this.x=a;this.y=b;this.z=c;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a){var b=Math.PI/360,c=a.x*b,e=a.y*b,h=a.z*b,a=Math.cos(e),e=Math.sin(e),b=Math.cos(-h),h=Math.sin(-h),f=Math.cos(c),c=Math.sin(c),i=a*b,j=e*h;this.w=i*f-j*c;this.x=i*c+j*f;this.y=e*b*f+a*h*c;this.z=a*h*f-e*b*c;return this},setFromAxisAngle:function(a,b){var c=b/2,e=Math.sin(c);
this.x=a.x*e;this.y=a.y*e;this.z=a.z*e;this.w=Math.cos(c);return this},setFromRotationMatrix:function(a){var b=Math.pow(a.determinant(),1/3);this.w=Math.sqrt(Math.max(0,b+a.n11+a.n22+a.n33))/2;this.x=Math.sqrt(Math.max(0,b+a.n11-a.n22-a.n33))/2;this.y=Math.sqrt(Math.max(0,b-a.n11+a.n22-a.n33))/2;this.z=Math.sqrt(Math.max(0,b-a.n11-a.n22+a.n33))/2;this.x=a.n32-a.n23<0?-Math.abs(this.x):Math.abs(this.x);this.y=a.n13-a.n31<0?-Math.abs(this.y):Math.abs(this.y);this.z=a.n21-a.n12<0?-Math.abs(this.z):Math.abs(this.z);
this.normalize();return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);a===0?this.w=this.z=this.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiplySelf:function(a){var b=
this.x,c=this.y,e=this.z,h=this.w,f=a.x,i=a.y,j=a.z,a=a.w;this.x=b*a+h*f+c*j-e*i;this.y=c*a+h*i+e*f-b*j;this.z=e*a+h*j+b*i-c*f;this.w=h*a-b*f-c*i-e*j;return this},multiply:function(a,b){this.x=a.x*b.w+a.y*b.z-a.z*b.y+a.w*b.x;this.y=-a.x*b.z+a.y*b.w+a.z*b.x+a.w*b.y;this.z=a.x*b.y-a.y*b.x+a.z*b.w+a.w*b.z;this.w=-a.x*b.x-a.y*b.y-a.z*b.z+a.w*b.w;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,e=a.y,h=a.z,f=this.x,i=this.y,j=this.z,m=this.w,l=m*c+i*h-j*e,k=m*e+j*c-f*h,s=m*h+f*e-i*c,c=-f*
c-i*e-j*h;b.x=l*m+c*-f+k*-j-s*-i;b.y=k*m+c*-i+s*-f-l*-j;b.z=s*m+c*-j+l*-i-k*-f;return b}};
THREE.Quaternion.slerp=function(a,b,c,e){var h=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;h<0?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,h=-h):c.copy(b);if(Math.abs(h)>=1)return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;var f=Math.acos(h),h=Math.sqrt(1-h*h);if(Math.abs(h)<0.0010)return c.w=0.5*(a.w+b.w),c.x=0.5*(a.x+b.x),c.y=0.5*(a.y+b.y),c.z=0.5*(a.z+b.z),c;b=Math.sin((1-e)*f)/h;e=Math.sin(e*f)/h;c.w=a.w*b+c.w*e;c.x=a.x*b+c.x*e;c.y=a.y*b+c.y*e;c.z=a.z*b+c.z*e;return c};THREE.Vertex=function(a){this.position=a||new THREE.Vector3};
THREE.Face3=function(a,b,c,e,h,f){this.a=a;this.b=b;this.c=c;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=h instanceof THREE.Color?h:new THREE.Color;this.vertexColors=h instanceof Array?h:[];this.vertexTangents=[];this.materialIndex=f;this.centroid=new THREE.Vector3};
THREE.Face4=function(a,b,c,e,h,f,i){this.a=a;this.b=b;this.c=c;this.d=e;this.normal=h instanceof THREE.Vector3?h:new THREE.Vector3;this.vertexNormals=h instanceof Array?h:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=i;this.centroid=new THREE.Vector3};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){this.id=THREE.GeometryCount++;this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.dynamic=this.hasTangents=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a,new THREE.Vector3(1,1,1));for(var c=0,e=this.vertices.length;c<e;c++)a.multiplyVector3(this.vertices[c].position);c=0;for(e=this.faces.length;c<e;c++){var h=this.faces[c];b.multiplyVector3(h.normal);for(var f=0,i=h.vertexNormals.length;f<i;f++)b.multiplyVector3(h.vertexNormals[f]);a.multiplyVector3(h.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<
b;a++)c=this.faces[a],c.centroid.set(0,0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a].position),c.centroid.addSelf(this.vertices[c.b].position),c.centroid.addSelf(this.vertices[c.c].position),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a].position),c.centroid.addSelf(this.vertices[c.b].position),c.centroid.addSelf(this.vertices[c.c].position),c.centroid.addSelf(this.vertices[c.d].position),c.centroid.divideScalar(4))},computeFaceNormals:function(a){var b,
c,e,h,f,i,j=new THREE.Vector3,m=new THREE.Vector3;e=0;for(h=this.faces.length;e<h;e++){f=this.faces[e];if(a&&f.vertexNormals.length){j.set(0,0,0);b=0;for(c=f.vertexNormals.length;b<c;b++)j.addSelf(f.vertexNormals[b]);j.divideScalar(3)}else b=this.vertices[f.a],c=this.vertices[f.b],i=this.vertices[f.c],j.sub(i.position,c.position),m.sub(b.position,c.position),j.crossSelf(m);j.isZero()||j.normalize();f.normal.copy(j)}},computeVertexNormals:function(){var a,b,c,e;if(this.__tmpVertices===void 0){e=this.__tmpVertices=
Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)e[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)if(c=this.faces[a],c instanceof THREE.Face3)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(c instanceof THREE.Face4)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else{e=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)e[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof
THREE.Face3?(e[c.a].addSelf(c.normal),e[c.b].addSelf(c.normal),e[c.c].addSelf(c.normal)):c instanceof THREE.Face4&&(e[c.a].addSelf(c.normal),e[c.b].addSelf(c.normal),e[c.c].addSelf(c.normal),e[c.d].addSelf(c.normal));a=0;for(b=this.vertices.length;a<b;a++)e[a].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(c.vertexNormals[0].copy(e[c.a]),c.vertexNormals[1].copy(e[c.b]),c.vertexNormals[2].copy(e[c.c])):c instanceof THREE.Face4&&(c.vertexNormals[0].copy(e[c.a]),
c.vertexNormals[1].copy(e[c.b]),c.vertexNormals[2].copy(e[c.c]),c.vertexNormals[3].copy(e[c.d]))},computeTangents:function(){function a(a,b,c,e,f,h,G){j=a.vertices[b].position;m=a.vertices[c].position;l=a.vertices[e].position;k=i[f];s=i[h];t=i[G];z=m.x-j.x;A=l.x-j.x;B=m.y-j.y;D=l.y-j.y;pa=m.z-j.z;H=l.z-j.z;ka=s.u-k.u;qa=t.u-k.u;M=s.v-k.v;U=t.v-k.v;C=1/(ka*U-qa*M);V.set((U*z-M*A)*C,(U*B-M*D)*C,(U*pa-M*H)*C);ja.set((ka*A-qa*z)*C,(ka*D-qa*B)*C,(ka*H-qa*pa)*C);T[b].addSelf(V);T[c].addSelf(V);T[e].addSelf(V);
P[b].addSelf(ja);P[c].addSelf(ja);P[e].addSelf(ja)}var b,c,e,h,f,i,j,m,l,k,s,t,z,A,B,D,pa,H,ka,qa,M,U,C,J,T=[],P=[],V=new THREE.Vector3,ja=new THREE.Vector3,Z=new THREE.Vector3,ya=new THREE.Vector3,ia=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)T[b]=new THREE.Vector3,P[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)f=this.faces[b],i=this.faceVertexUvs[0][b],f instanceof THREE.Face3?a(this,f.a,f.b,f.c,0,1,2):f instanceof THREE.Face4&&(a(this,f.a,f.b,f.c,0,1,2),a(this,f.a,f.b,
f.d,0,1,3));var G=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){f=this.faces[b];for(e=0;e<f.vertexNormals.length;e++)ia.copy(f.vertexNormals[e]),h=f[G[e]],J=T[h],Z.copy(J),Z.subSelf(ia.multiplyScalar(ia.dot(J))).normalize(),ya.cross(f.vertexNormals[e],J),h=ya.dot(P[h]),h=h<0?-1:1,f.vertexTangents[e]=new THREE.Vector4(Z.x,Z.y,Z.z,h)}this.hasTangents=!0},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],
y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,c=this.vertices.length;b<c;b++){a=this.vertices[b];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<
this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=0,b=0,c=this.vertices.length;b<c;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},mergeVertices:function(){var a={},b=[],c=[],e,h=Math.pow(10,4),f,i;f=0;for(i=this.vertices.length;f<i;f++)e=this.vertices[f].position,e=[Math.round(e.x*h),Math.round(e.y*h),Math.round(e.z*h)].join("_"),
a[e]===void 0?(a[e]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[e]];f=0;for(i=this.faces.length;f<i;f++)if(a=this.faces[f],a instanceof THREE.Face3)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c];else if(a instanceof THREE.Face4)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c],a.d=c[a.d];this.vertices=b}};THREE.GeometryCount=0;
THREE.Spline=function(a){function b(a,b,c,e,f,h,i){a=(c-a)*0.5;e=(e-b)*0.5;return(2*(b-c)+a+e)*i+(-3*(b-c)-2*a-e)*h+a*f+b}this.points=a;var c=[],e={x:0,y:0,z:0},h,f,i,j,m,l,k,s,t;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){h=(this.points.length-1)*a;f=Math.floor(h);i=h-f;c[0]=f===0?f:f-1;c[1]=f;c[2]=f>this.points.length-2?f:f+1;c[3]=f>this.points.length-3?f:f+2;l=this.points[c[0]];k=this.points[c[1]];
s=this.points[c[2]];t=this.points[c[3]];j=i*i;m=i*j;e.x=b(l.x,k.x,s.x,t.x,i,j,m);e.y=b(l.y,k.y,s.y,t.y,i,j,m);e.z=b(l.z,k.z,s.z,t.z,i,j,m);return e};this.getControlPointsArray=function(){var a,b,c=this.points.length,e=[];for(a=0;a<c;a++)b=this.points[a],e[a]=[b.x,b.y,b.z];return e};this.getLength=function(a){var b,c,e=b=b=0,f=new THREE.Vector3,h=new THREE.Vector3,i=[],j=0;i[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=a/c,position=this.getPoint(b),h.copy(position),
j+=h.distanceTo(f),f.copy(position),b*=this.points.length-1,b=Math.floor(b),b!=e&&(i[b]=j,e=b);i[i.length]=j;return{chunks:i,total:j}};this.reparametrizeByArcLength=function(a){var b,c,e,f,h,i,j=[],k=new THREE.Vector3,m=this.getLength();j.push(k.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=m.chunks[b]-m.chunks[b-1];i=Math.ceil(a*c/m.total);f=(b-1)/(this.points.length-1);h=b/(this.points.length-1);for(c=1;c<i-1;c++)e=f+c*(1/i)*(h-f),position=this.getPoint(e),j.push(k.copy(position).clone());
j.push(k.copy(this.points[b]).clone())}this.points=j}};THREE.Edge=function(a,b,c,e){this.vertices=[a,b];this.vertexIndices=[c,e];this.faces=[];this.faceIndices=[]};
THREE.Camera=function(){if(arguments.length)return console.warn("DEPRECATED: Camera() is now PerspectiveCamera() or OrthographicCamera()."),new THREE.PerspectiveCamera(arguments[0],arguments[1],arguments[2],arguments[3]);THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=new THREE.Object3D;THREE.Camera.prototype.constructor=THREE.Camera;
THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)};THREE.OrthographicCamera=function(a,b,c,e,h,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=e;this.near=h!==void 0?h:0.1;this.far=f!==void 0?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=new THREE.Camera;THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;
THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makeOrtho(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.PerspectiveCamera=function(a,b,c,e){THREE.Camera.call(this);this.fov=a!==void 0?a:50;this.aspect=b!==void 0?b:1;this.near=c!==void 0?c:0.1;this.far=e!==void 0?e:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=new THREE.Camera;THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;
THREE.PerspectiveCamera.prototype.setLens=function(a,b){this.fov=2*Math.atan((b!==void 0?b:43.25)/(a*2));this.fov*=180/Math.PI;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,e,h,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=e;this.width=h;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,e=a*c,a=Math.abs(a*b-e),c=Math.abs(b-c);this.projectionMatrix=THREE.Matrix4.makeFrustum(e+this.x*a/this.fullWidth,e+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,
this.far)};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=new THREE.Object3D;THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.supr=THREE.Object3D.prototype;THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;
THREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0};THREE.PointLight.prototype=new THREE.Light;
THREE.PointLight.prototype.constructor=THREE.PointLight;THREE.SpotLight=function(a,b,c,e){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0;this.castShadow=e!==void 0?e:!1};THREE.SpotLight.prototype=new THREE.Light;THREE.SpotLight.prototype.constructor=THREE.SpotLight;
THREE.Material=function(a){this.name="";this.id=THREE.MaterialCount++;a=a||{};this.opacity=a.opacity!==void 0?a.opacity:1;this.transparent=a.transparent!==void 0?a.transparent:!1;this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.depthTest=a.depthTest!==void 0?a.depthTest:!0;this.depthWrite=a.depthWrite!==void 0?a.depthWrite:!0;this.polygonOffset=a.polygonOffset!==void 0?a.polygonOffset:!1;this.polygonOffsetFactor=a.polygonOffsetFactor!==void 0?a.polygonOffsetFactor:0;this.polygonOffsetUnits=
a.polygonOffsetUnits!==void 0?a.polygonOffsetUnits:0;this.alphaTest=a.alphaTest!==void 0?a.alphaTest:0;this.overdraw=a.overdraw!==void 0?a.overdraw:!1};THREE.MaterialCount=0;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;THREE.MultiplyBlending=3;THREE.AdditiveAlphaBlending=4;
THREE.LineBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.linewidth=a.linewidth!==void 0?a.linewidth:1;this.linecap=a.linecap!==void 0?a.linecap:"round";this.linejoin=a.linejoin!==void 0?a.linejoin:"round";this.vertexColors=a.vertexColors?a.vertexColors:!1;this.fog=a.fog!==void 0?a.fog:!0};THREE.LineBasicMaterial.prototype=new THREE.Material;THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:null;this.lightMap=a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:
!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:
!1};THREE.MeshBasicMaterial.prototype=new THREE.Material;THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(328965);this.map=a.map!==void 0?a.map:null;this.lightMap=a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=
a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=
a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.MeshLambertMaterial.prototype=new THREE.Material;THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(328965);this.specular=a.specular!==void 0?new THREE.Color(a.specular):new THREE.Color(1118481);this.shininess=a.shininess!==void 0?a.shininess:30;this.metal=a.metal!==void 0?a.metal:!1;this.perPixel=a.perPixel!==void 0?a.perPixel:!1;this.map=a.map!==void 0?a.map:null;this.lightMap=
a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=
a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.MeshPhongMaterial.prototype=new THREE.Material;THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1};THREE.MeshDepthMaterial.prototype=new THREE.Material;THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading?a.shading:THREE.FlatShading;this.wireframe=a.wireframe?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth?a.wireframeLinewidth:1};THREE.MeshNormalMaterial.prototype=new THREE.Material;THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshFaceMaterial=function(){};
THREE.MeshShaderMaterial=function(a){console.warn("DEPRECATED: MeshShaderMaterial() is now ShaderMaterial().");return new THREE.ShaderMaterial(a)};
THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:null;this.size=a.size!==void 0?a.size:1;this.sizeAttenuation=a.sizeAttenuation!==void 0?a.sizeAttenuation:!0;this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.fog=a.fog!==void 0?a.fog:!0};THREE.ParticleBasicMaterial.prototype=new THREE.Material;THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial;
THREE.ShaderMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.fragmentShader=a.fragmentShader!==void 0?a.fragmentShader:"void main() {}";this.vertexShader=a.vertexShader!==void 0?a.vertexShader:"void main() {}";this.uniforms=a.uniforms!==void 0?a.uniforms:{};this.attributes=a.attributes;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.fog=a.fog!==
void 0?a.fog:!1;this.lights=a.lights!==void 0?a.lights:!1;this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.ShaderMaterial.prototype=new THREE.Material;THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;
THREE.Texture=function(a,b,c,e,h,f){this.id=THREE.TextureCount++;this.image=a;this.mapping=b!==void 0?b:new THREE.UVMapping;this.wrapS=c!==void 0?c:THREE.ClampToEdgeWrapping;this.wrapT=e!==void 0?e:THREE.ClampToEdgeWrapping;this.magFilter=h!==void 0?h:THREE.LinearFilter;this.minFilter=f!==void 0?f:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.needsUpdate=!1};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a}};THREE.TextureCount=0;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;
THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;THREE.DataTexture=function(a,b,c,e,h,f,i,j,m){THREE.Texture.call(this,null,h,f,i,j,m);this.image={data:a,width:b,height:c};this.format=e!==void 0?e:THREE.RGBAFormat};THREE.DataTexture.prototype=new THREE.Texture;THREE.DataTexture.prototype.constructor=THREE.DataTexture;
THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.data.slice(0),this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b;this.sortParticles=!1};
THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=b;this.type=c!==void 0?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b;if(b instanceof Array)console.warn("DEPRECATED: Mesh material can no longer be an Array. Using material at index 0..."),this.material=b[0];if(this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};
for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.supr=THREE.Object3D.prototype;
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(this.morphTargetDictionary[a]!==void 0)return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=new THREE.Object3D;THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.supr=THREE.Object3D.prototype;
THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,e=this.children.length;for(c=0;c<e;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b){THREE.Mesh.call(this,a,b);this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var c,e,h,f,i,j;if(this.geometry.bones!==void 0){for(c=0;c<this.geometry.bones.length;c++)h=this.geometry.bones[c],f=h.pos,i=h.rotq,j=h.scl,e=this.addBone(),e.name=h.name,e.position.set(f[0],f[1],f[2]),e.quaternion.set(i[0],i[1],i[2],i[3]),e.useQuaternion=!0,j!==void 0?e.scale.set(j[0],j[1],j[2]):e.scale.set(1,1,1);for(c=0;c<this.bones.length;c++)h=this.geometry.bones[c],
e=this.bones[c],h.parent===-1?this.add(e):this.bones[h.parent].add(e);this.boneMatrices=new Float32Array(16*this.bones.length);this.pose()}};THREE.SkinnedMesh.prototype=new THREE.Mesh;THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.addBone=function(a){a===void 0&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}b=this.bones.length;ba=this.bones;bm=this.boneMatrices;for(a=0;a<b;a++)ba[a].skinMatrix.flattenToArrayOffset(bm,
a*16)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a,b=[],c=0;c<this.bones.length;c++){a=this.bones[c];var e=new THREE.Matrix4;e.getInverse(a.skinMatrix);b.push(e);a.skinMatrix.flattenToArrayOffset(this.boneMatrices,c*16)}if(this.geometry.skinVerticesA===void 0){this.geometry.skinVerticesA=[];this.geometry.skinVerticesB=[];for(a=0;a<this.geometry.skinIndices.length;a++){var c=this.geometry.vertices[a].position,h=this.geometry.skinIndices[a].x,f=this.geometry.skinIndices[a].y,e=
new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesA.push(b[h].multiplyVector3(e));e=new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesB.push(b[f].multiplyVector3(e));this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y!==1&&(c=(1-(this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y))*0.5,this.geometry.skinWeights[a].x+=c,this.geometry.skinWeights[a].y+=c)}}};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};
THREE.Ribbon.prototype=new THREE.Object3D;THREE.Ribbon.prototype.constructor=THREE.Ribbon;THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=new THREE.Object3D;THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.supr=THREE.Object3D.prototype;THREE.LOD.prototype.addLevel=function(a,b){b===void 0&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length;c++)if(b<this.LODs[c].visibleAtDistance)break;this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(this.LODs.length>1){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.n31*this.position.x+a.n32*this.position.y+a.n33*this.position.z+a.n34);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=!1}};
THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map instanceof THREE.Texture?a.map:THREE.ImageUtils.loadTexture(a.map);this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.useScreenCoordinates=a.useScreenCoordinates!==void 0?a.useScreenCoordinates:!0;this.mergeWith3D=a.mergeWith3D!==void 0?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=a.affectedByDistance!==void 0?a.affectedByDistance:
!this.useScreenCoordinates;this.scaleByViewport=a.scaleByViewport!==void 0?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1)};THREE.Sprite.prototype=new THREE.Object3D;THREE.Sprite.prototype.constructor=THREE.Sprite;
THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(this.scale.x!==1||this.scale.y!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);
THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);
THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.objects=[];this.lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=new THREE.Object3D;THREE.Scene.prototype.constructor=THREE.Scene;
THREE.Scene.prototype.addObject=function(a){if(a instanceof THREE.Light)this.lights.indexOf(a)===-1&&this.lights.push(a);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&this.objects.indexOf(a)===-1){this.objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);b!==-1&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.addObject(a.children[b])};
THREE.Scene.prototype.removeObject=function(a){if(a instanceof THREE.Light){var b=this.lights.indexOf(a);b!==-1&&this.lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.objects.indexOf(a),b!==-1&&(this.objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),b!==-1&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=b!==void 0?b:1;this.far=c!==void 0?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b!==void 0?b:2.5E-4};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity );\n} else {\ngl_FragColor.xyz = gl_FragColor.xyz * cubeColor.xyz;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",
lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif",
lights_lambert_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat pointLightWeighting = max( dot( transformedNormal, lVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting * lDistance;\n}\n#endif\nvLightWeighting = vLightWeighting * diffuse + ambient * ambientLightColor;\n}",
lights_phong_pars_vertex:"#if MAX_POINT_LIGHTS > 0\n#ifndef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif",lights_phong_vertex:"#if MAX_POINT_LIGHTS > 0\n#ifndef PHONG_PER_PIXEL\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDistance = lDistance;\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\nfloat pointSpecularWeight = pow( pointDotNormalHalf, shininess );\n#ifdef PHYSICALLY_BASED_SHADING\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance;\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * pointDistance;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = pow( dirDotNormalHalf, shininess );\n#ifdef PHYSICALLY_BASED_SHADING\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * viewMatrix * objectMatrix * gl_Position;\n#endif",
morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\nuniform float morphTargetInfluences[ 8 ];\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0, 0.0, 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",
default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform float shadowDarkness;\nuniform float shadowBias;\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",
shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_SOFT\nconst float xPixelOffset = 1.0 / SHADOWMAP_WIDTH;\nconst float yPixelOffset = 1.0 / SHADOWMAP_HEIGHT;\n#endif\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nshadowCoord.z += shadowBias;\nif ( shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0 ) {\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nfor ( float y = -1.25; y <= 1.25; y += 1.25 )\nfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\nvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadow += 1.0;\n}\nshadow /= 9.0;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( shadowDarkness );\n#endif\n}\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,e,h={};for(b=0;b<a.length;b++)for(c in e=this.clone(a[b]),e)h[c]=e[c];return h},clone:function(a){var b,c,e,h={};for(b in a)for(c in h[b]={},a[b])e=a[b][c],h[b][c]=e instanceof THREE.Color||e instanceof THREE.Vector2||e instanceof THREE.Vector3||e instanceof THREE.Vector4||e instanceof THREE.Matrix4||e instanceof THREE.Texture?e.clone():e instanceof Array?e.slice():e;return h}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},fog:{fogDensity:{type:"f",
value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:6,texture:[]},shadowMatrix:{type:"m4v",value:[]},shadowBias:{type:"f",value:0.0039},shadowDarkness:{type:"f",value:0.2}}};
THREE.ShaderLib={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"},
depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},
vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(328965)}}]),vertexShader:["varying vec3 vLightWeighting;",THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",
THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightWeighting;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",
THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,"gl_FragColor.xyz = gl_FragColor.xyz * vLightWeighting;",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",
value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),vertexShader:["varying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",
THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = -mvPosition.xyz;\nvec3 transformedNormal = normalMatrix * normal;\nvNormal = transformedNormal;",THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,
"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,
THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,
THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,e=b.material;if(e.attributes){if(a.__webglCustomAttributesList===void 0)a.__webglCustomAttributesList=[];for(var f in e.attributes){originalAttribute=e.attributes[f];attribute={};for(property in originalAttribute)attribute[property]=originalAttribute[property];if(!attribute.__webglInitialized||attribute.createUniqueBuffers)attribute.__webglInitialized=!0,size=1,attribute.type==="v2"?size=2:attribute.type==="v3"?size=3:attribute.type===
"v4"?size=4:attribute.type==="c"&&(size=3),attribute.size=size,attribute.array=new Float32Array(c*size),attribute.buffer=d.createBuffer(),attribute.buffer.belongsToAttribute=f,originalAttribute.needsUpdate=!0,attribute.__original=originalAttribute;a.__webglCustomAttributesList.push(attribute)}}}function c(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;else if(b.materialIndex>=0)return a.geometry.materials[b.materialIndex]}function e(a,b,c){var e,f,h,i=a.vertices,
o=i.length,q=a.colors,p=q.length,j=a.__vertexArray,k=a.__colorArray,m=a.__sortArray,w=a.__dirtyVertices,l=a.__dirtyColors,s=a.__webglCustomAttributesList;if(c.sortParticles){Ba.multiplySelf(c.matrixWorld);for(e=0;e<o;e++)f=i[e].position,Na.copy(f),Ba.multiplyVector3(Na),m[e]=[Na.z,e];m.sort(function(a,b){return b[0]-a[0]});for(e=0;e<o;e++)f=i[m[e][1]].position,h=e*3,j[h]=f.x,j[h+1]=f.y,j[h+2]=f.z;for(e=0;e<p;e++)h=e*3,color=q[m[e][1]],k[h]=color.r,k[h+1]=color.g,k[h+2]=color.b;if(s){q=0;for(p=s.length;q<
p;q++)if(o=s[q],o.boundTo===void 0||o.boundTo==="vertices"){h=0;f=o.value.length;for(e=0;e<f;e++)index=m[e][1],o.size===1?o.array[h]=o.value[index]:(i=o.value[index],o.size===2?(o.array[h]=i.x,o.array[h+1]=i.y):o.size===3?o.type==="c"?(o.array[h]=i.r,o.array[h+1]=i.g,o.array[h+2]=i.b):(o.array[h]=i.x,o.array[h+1]=i.y,o.array[h+2]=i.z):(o.array[h]=i.x,o.array[h+1]=i.y,o.array[h+2]=i.z,o.array[h+3]=i.w)),h+=o.size}}}else{if(w)for(e=0;e<o;e++)f=i[e].position,h=e*3,j[h]=f.x,j[h+1]=f.y,j[h+2]=f.z;if(l)for(e=
0;e<p;e++)color=q[e],h=e*3,k[h]=color.r,k[h+1]=color.g,k[h+2]=color.b;if(s){q=0;for(p=s.length;q<p;q++)if(o=s[q],o.__original.needsUpdate&&(o.boundTo===void 0||o.boundTo==="vertices")){f=o.value.length;for(e=h=0;e<f;e++)offset_custom=o.offset,o.size===1?o.array[h]=o.value[e]:(i=o.value[e],o.size===2?(o.array[h]=i.x,o.array[h+1]=i.y):o.size===3?o.type==="c"?(o.array[h]=i.r,o.array[h+1]=i.g,o.array[h+2]=i.b):(o.array[h]=i.x,o.array[h+1]=i.y,o.array[h+2]=i.z):(o.array[h]=i.x,o.array[h+1]=i.y,o.array[h+
2]=i.z,o.array[h+3]=i.w)),h+=o.size}}}if(w||c.sortParticles)d.bindBuffer(d.ARRAY_BUFFER,a.__webglVertexBuffer),d.bufferData(d.ARRAY_BUFFER,j,b);if(l||c.sortParticles)d.bindBuffer(d.ARRAY_BUFFER,a.__webglColorBuffer),d.bufferData(d.ARRAY_BUFFER,k,b);if(s){q=0;for(p=s.length;q<p;q++)if(o=s[q],o.__original.needsUpdate||c.sortParticles)d.bindBuffer(d.ARRAY_BUFFER,o.buffer),d.bufferData(d.ARRAY_BUFFER,o.array,b)}}function h(a,b,c,e,h){e.program||G.initMaterial(e,b,c,h);if(e.morphTargets&&!h.__webglMorphTargetInfluences){h.__webglMorphTargetInfluences=
new Float32Array(G.maxMorphTargets);for(var f=0,i=G.maxMorphTargets;f<i;f++)h.__webglMorphTargetInfluences[f]=0}var o=!1,f=e.program,i=f.uniforms,q=e.uniforms;f!==Wa&&(d.useProgram(f),Wa=f,o=!0);if(e.id!==$)$=e.id,o=!0;if(o){d.uniformMatrix4fv(i.projectionMatrix,!1,Ta);if(c&&e.fog)if(q.fogColor.value=c.color,c instanceof THREE.Fog)q.fogNear.value=c.near,q.fogFar.value=c.far;else if(c instanceof THREE.FogExp2)q.fogDensity.value=c.density;if(e instanceof THREE.MeshPhongMaterial||e instanceof THREE.MeshLambertMaterial||
e.lights){for(var p,j,k=0,m=0,w=0,s,l,t,u=Ya,y=u.directional.colors,z=u.directional.positions,A=u.point.colors,B=u.point.positions,D=u.point.distances,C=0,I=0,c=p=t=0,o=b.length;c<o;c++)if(p=b[c],j=p.color,s=p.position,l=p.intensity,t=p.distance,p instanceof THREE.AmbientLight)G.gammaInput?(k+=j.r*j.r,m+=j.g*j.g,w+=j.b*j.b):(k+=j.r,m+=j.g,w+=j.b);else if(p instanceof THREE.DirectionalLight)t=C*3,G.gammaInput?(y[t]=j.r*j.r*l*l,y[t+1]=j.g*j.g*l*l,y[t+2]=j.b*j.b*l*l):(y[t]=j.r*l,y[t+1]=j.g*l,y[t+2]=
j.b*l),z[t]=s.x,z[t+1]=s.y,z[t+2]=s.z,C+=1;else if(p instanceof THREE.SpotLight)t=C*3,G.gammaInput?(y[t]=j.r*j.r*l*l,y[t+1]=j.g*j.g*l*l,y[t+2]=j.b*j.b*l*l):(y[t]=j.r*l,y[t+1]=j.g*l,y[t+2]=j.b*l),j=1/s.length(),z[t]=s.x*j,z[t+1]=s.y*j,z[t+2]=s.z*j,C+=1;else if(p instanceof THREE.PointLight)p=I*3,G.gammaInput?(A[p]=j.r*j.r*l*l,A[p+1]=j.g*j.g*l*l,A[p+2]=j.b*j.b*l*l):(A[p]=j.r*l,A[p+1]=j.g*l,A[p+2]=j.b*l),B[p]=s.x,B[p+1]=s.y,B[p+2]=s.z,D[I]=t,I+=1;c=C*3;for(o=y.length;c<o;c++)y[c]=0;c=I*3;for(o=A.length;c<
o;c++)A[c]=0;u.point.length=I;u.directional.length=C;u.ambient[0]=k;u.ambient[1]=m;u.ambient[2]=w;b=Ya;q.enableLighting.value=b.directional.length+b.point.length;q.ambientLightColor.value=b.ambient;q.directionalLightColor.value=b.directional.colors;q.directionalLightDirection.value=b.directional.positions;q.pointLightColor.value=b.point.colors;q.pointLightPosition.value=b.point.positions;q.pointLightDistance.value=b.point.distances}if(e instanceof THREE.MeshBasicMaterial||e instanceof THREE.MeshLambertMaterial||
e instanceof THREE.MeshPhongMaterial)q.opacity.value=e.opacity,G.gammaInput?q.diffuse.value.copyGammaToLinear(e.color):q.diffuse.value=e.color,(q.map.texture=e.map)&&q.offsetRepeat.value.set(e.map.offset.x,e.map.offset.y,e.map.repeat.x,e.map.repeat.y),q.lightMap.texture=e.lightMap,q.envMap.texture=e.envMap,q.flipEnvMap.value=e.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,q.reflectivity.value=e.reflectivity,q.refractionRatio.value=e.refractionRatio,q.combine.value=e.combine,q.useRefract.value=
e.envMap&&e.envMap.mapping instanceof THREE.CubeRefractionMapping;if(e instanceof THREE.LineBasicMaterial)q.diffuse.value=e.color,q.opacity.value=e.opacity;else if(e instanceof THREE.ParticleBasicMaterial)q.psColor.value=e.color,q.opacity.value=e.opacity,q.size.value=e.size,q.scale.value=xa.height/2,q.map.texture=e.map;else if(e instanceof THREE.MeshPhongMaterial)q.shininess.value=e.shininess,G.gammaInput?(q.ambient.value.copyGammaToLinear(e.ambient),q.specular.value.copyGammaToLinear(e.specular)):
(q.ambient.value=e.ambient,q.specular.value=e.specular);else if(e instanceof THREE.MeshLambertMaterial)G.gammaInput?q.ambient.value.copyGammaToLinear(e.ambient):q.ambient.value=e.ambient;else if(e instanceof THREE.MeshDepthMaterial)q.mNear.value=a.near,q.mFar.value=a.far,q.opacity.value=e.opacity;else if(e instanceof THREE.MeshNormalMaterial)q.opacity.value=e.opacity;if(h.receiveShadow&&!e._shadowPass&&q.shadowMatrix){for(b=0;b<Ra.length;b++)q.shadowMatrix.value[b]=Ra[b],q.shadowMap.texture[b]=G.shadowMap[b];
q.shadowDarkness.value=G.shadowMapDarkness;q.shadowBias.value=G.shadowMapBias}b=e.uniformsList;q=0;for(c=b.length;q<c;q++)if(m=f.uniforms[b[q][1]])if(k=b[q][0],w=k.type,o=k.value,w==="i")d.uniform1i(m,o);else if(w==="f")d.uniform1f(m,o);else if(w==="v2")d.uniform2f(m,o.x,o.y);else if(w==="v3")d.uniform3f(m,o.x,o.y,o.z);else if(w==="v4")d.uniform4f(m,o.x,o.y,o.z,o.w);else if(w==="c")d.uniform3f(m,o.r,o.g,o.b);else if(w==="fv1")d.uniform1fv(m,o);else if(w==="fv")d.uniform3fv(m,o);else if(w==="v3v"){if(!k._array)k._array=
new Float32Array(3*o.length);w=0;for(s=o.length;w<s;w++)u=w*3,k._array[u]=o[w].x,k._array[u+1]=o[w].y,k._array[u+2]=o[w].z;d.uniform3fv(m,k._array)}else if(w==="m4"){if(!k._array)k._array=new Float32Array(16);o.flattenToArray(k._array);d.uniformMatrix4fv(m,!1,k._array)}else if(w==="m4v"){if(!k._array)k._array=new Float32Array(16*o.length);w=0;for(s=o.length;w<s;w++)o[w].flattenToArrayOffset(k._array,w*16);d.uniformMatrix4fv(m,!1,k._array)}else if(w==="t"){if(d.uniform1i(m,o),m=k.texture)if(m.image instanceof
Array&&m.image.length===6){if(k=m,k.image.length===6)if(k.needsUpdate){if(!k.image.__webglTextureCube)k.image.__webglTextureCube=d.createTexture();d.activeTexture(d.TEXTURE0+o);d.bindTexture(d.TEXTURE_CUBE_MAP,k.image.__webglTextureCube);for(o=0;o<6;o++)d.texImage2D(d.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,k.image[o]);J(d.TEXTURE_CUBE_MAP,k,k.image[0]);k.needsUpdate=!1}else d.activeTexture(d.TEXTURE0+o),d.bindTexture(d.TEXTURE_CUBE_MAP,k.image.__webglTextureCube)}else m instanceof
THREE.WebGLRenderTargetCube?(k=m,d.activeTexture(d.TEXTURE0+o),d.bindTexture(d.TEXTURE_CUBE_MAP,k.__webglTexture)):T(m,o)}else if(w==="tv"){if(!k._array){k._array=[];w=0;for(s=k.texture.length;w<s;w++)k._array[w]=o+w}d.uniform1iv(m,k._array);w=0;for(s=k.texture.length;w<s;w++)(m=k.texture[w])&&T(m,k._array[w])}(e instanceof THREE.ShaderMaterial||e instanceof THREE.MeshPhongMaterial||e.envMap)&&i.cameraPosition!==null&&d.uniform3f(i.cameraPosition,a.position.x,a.position.y,a.position.z);(e instanceof
THREE.MeshPhongMaterial||e instanceof THREE.MeshLambertMaterial||e instanceof THREE.ShaderMaterial||e.skinning)&&i.viewMatrix!==null&&d.uniformMatrix4fv(i.viewMatrix,!1,Ua);e.skinning&&(d.uniformMatrix4fv(i.cameraInverseMatrix,!1,Ua),d.uniformMatrix4fv(i.boneGlobalMatrices,!1,h.boneMatrices))}d.uniformMatrix4fv(i.modelViewMatrix,!1,h._modelViewMatrixArray);i.normalMatrix&&d.uniformMatrix3fv(i.normalMatrix,!1,h._normalMatrixArray);(e instanceof THREE.ShaderMaterial||e.envMap||e.skinning||h.receiveShadow)&&
i.objectMatrix!==null&&d.uniformMatrix4fv(i.objectMatrix,!1,h._objectMatrixArray);return f}function f(a,b,c,e,f,i){if(e.opacity!==0){var j,o,c=h(a,b,c,e,i),a=c.attributes,b=!1,c=f.id*16777215+c.id*2+(e.wireframe?1:0);c!==K&&(K=c,b=!0);if(!e.morphTargets&&a.position>=0)b&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglVertexBuffer),d.vertexAttribPointer(a.position,3,d.FLOAT,!1,0,0));else if(i.morphTargetBase){c=e.program.attributes;i.morphTargetBase!==-1?(d.bindBuffer(d.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[i.morphTargetBase]),
d.vertexAttribPointer(c.position,3,d.FLOAT,!1,0,0)):c.position>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglVertexBuffer),d.vertexAttribPointer(c.position,3,d.FLOAT,!1,0,0));if(i.morphTargetForcedOrder.length){j=0;var q=i.morphTargetForcedOrder;for(o=i.morphTargetInfluences;j<e.numSupportedMorphTargets&&j<q.length;)d.bindBuffer(d.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[q[j]]),d.vertexAttribPointer(c["morphTarget"+j],3,d.FLOAT,!1,0,0),i.__webglMorphTargetInfluences[j]=o[q[j]],j++}else{var q=[],p=-1,
k=0;o=i.morphTargetInfluences;var m,l=o.length;j=0;for(i.morphTargetBase!==-1&&(q[i.morphTargetBase]=!0);j<e.numSupportedMorphTargets;){for(m=0;m<l;m++)!q[m]&&o[m]>p&&(k=m,p=o[k]);d.bindBuffer(d.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[k]);d.vertexAttribPointer(c["morphTarget"+j],3,d.FLOAT,!1,0,0);i.__webglMorphTargetInfluences[j]=p;q[k]=1;p=-1;j++}}e.program.uniforms.morphTargetInfluences!==null&&d.uniform1fv(e.program.uniforms.morphTargetInfluences,i.__webglMorphTargetInfluences)}if(b){if(f.__webglCustomAttributesList){j=
0;for(o=f.__webglCustomAttributesList.length;j<o;j++)c=f.__webglCustomAttributesList[j],a[c.buffer.belongsToAttribute]>=0&&(d.bindBuffer(d.ARRAY_BUFFER,c.buffer),d.vertexAttribPointer(a[c.buffer.belongsToAttribute],c.size,d.FLOAT,!1,0,0))}a.color>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglColorBuffer),d.vertexAttribPointer(a.color,3,d.FLOAT,!1,0,0));a.normal>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglNormalBuffer),d.vertexAttribPointer(a.normal,3,d.FLOAT,!1,0,0));a.tangent>=0&&(d.bindBuffer(d.ARRAY_BUFFER,
f.__webglTangentBuffer),d.vertexAttribPointer(a.tangent,4,d.FLOAT,!1,0,0));a.uv>=0&&(f.__webglUVBuffer?(d.bindBuffer(d.ARRAY_BUFFER,f.__webglUVBuffer),d.vertexAttribPointer(a.uv,2,d.FLOAT,!1,0,0),d.enableVertexAttribArray(a.uv)):d.disableVertexAttribArray(a.uv));a.uv2>=0&&(f.__webglUV2Buffer?(d.bindBuffer(d.ARRAY_BUFFER,f.__webglUV2Buffer),d.vertexAttribPointer(a.uv2,2,d.FLOAT,!1,0,0),d.enableVertexAttribArray(a.uv2)):d.disableVertexAttribArray(a.uv2));e.skinning&&a.skinVertexA>=0&&a.skinVertexB>=
0&&a.skinIndex>=0&&a.skinWeight>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinVertexABuffer),d.vertexAttribPointer(a.skinVertexA,4,d.FLOAT,!1,0,0),d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinVertexBBuffer),d.vertexAttribPointer(a.skinVertexB,4,d.FLOAT,!1,0,0),d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinIndicesBuffer),d.vertexAttribPointer(a.skinIndex,4,d.FLOAT,!1,0,0),d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinWeightsBuffer),d.vertexAttribPointer(a.skinWeight,4,d.FLOAT,!1,0,0))}i instanceof THREE.Mesh?(e.wireframe?
(d.lineWidth(e.wireframeLinewidth),b&&d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,f.__webglLineBuffer),d.drawElements(d.LINES,f.__webglLineCount,d.UNSIGNED_SHORT,0)):(b&&d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,f.__webglFaceBuffer),d.drawElements(d.TRIANGLES,f.__webglFaceCount,d.UNSIGNED_SHORT,0)),G.info.render.calls++,G.info.render.vertices+=f.__webglFaceCount,G.info.render.faces+=f.__webglFaceCount/3):i instanceof THREE.Line?(i=i.type===THREE.LineStrip?d.LINE_STRIP:d.LINES,d.lineWidth(e.linewidth),d.drawArrays(i,
0,f.__webglLineCount),G.info.render.calls++):i instanceof THREE.ParticleSystem?(d.drawArrays(d.POINTS,0,f.__webglParticleCount),G.info.render.calls++):i instanceof THREE.Ribbon&&(d.drawArrays(d.TRIANGLE_STRIP,0,f.__webglVertexCount),G.info.render.calls++)}}function i(a,b,c){if(!a.__webglVertexBuffer)a.__webglVertexBuffer=d.createBuffer();if(!a.__webglNormalBuffer)a.__webglNormalBuffer=d.createBuffer();a.hasPos&&(d.bindBuffer(d.ARRAY_BUFFER,a.__webglVertexBuffer),d.bufferData(d.ARRAY_BUFFER,a.positionArray,
d.DYNAMIC_DRAW),d.enableVertexAttribArray(b.attributes.position),d.vertexAttribPointer(b.attributes.position,3,d.FLOAT,!1,0,0));if(a.hasNormal){d.bindBuffer(d.ARRAY_BUFFER,a.__webglNormalBuffer);if(c===THREE.FlatShading){var e,f,h,i,j,q,p,k,m,l,s=a.count*3;for(l=0;l<s;l+=9)c=a.normalArray,e=c[l],f=c[l+1],h=c[l+2],i=c[l+3],q=c[l+4],k=c[l+5],j=c[l+6],p=c[l+7],m=c[l+8],e=(e+i+j)/3,f=(f+q+p)/3,h=(h+k+m)/3,c[l]=e,c[l+1]=f,c[l+2]=h,c[l+3]=e,c[l+4]=f,c[l+5]=h,c[l+6]=e,c[l+7]=f,c[l+8]=h}d.bufferData(d.ARRAY_BUFFER,
a.normalArray,d.DYNAMIC_DRAW);d.enableVertexAttribArray(b.attributes.normal);d.vertexAttribPointer(b.attributes.normal,3,d.FLOAT,!1,0,0)}d.drawArrays(d.TRIANGLES,0,a.count);a.count=0}function j(a){if(R!==a.doubleSided)a.doubleSided?d.disable(d.CULL_FACE):d.enable(d.CULL_FACE),R=a.doubleSided;if(ha!==a.flipSided)a.flipSided?d.frontFace(d.CW):d.frontFace(d.CCW),ha=a.flipSided}function m(a){wa!==a&&(a?d.enable(d.DEPTH_TEST):d.disable(d.DEPTH_TEST),wa=a)}function l(a){ua!==a&&(d.depthMask(a),ua=a)}function k(a,
b,c){Ea!==a&&(a?d.enable(d.POLYGON_OFFSET_FILL):d.disable(d.POLYGON_OFFSET_FILL),Ea=a);if(a&&(Pa!==b||Fa!==c))d.polygonOffset(b,c),Pa=b,Fa=c}function s(a){va[0].set(a.n41-a.n11,a.n42-a.n12,a.n43-a.n13,a.n44-a.n14);va[1].set(a.n41+a.n11,a.n42+a.n12,a.n43+a.n13,a.n44+a.n14);va[2].set(a.n41+a.n21,a.n42+a.n22,a.n43+a.n23,a.n44+a.n24);va[3].set(a.n41-a.n21,a.n42-a.n22,a.n43-a.n23,a.n44-a.n24);va[4].set(a.n41-a.n31,a.n42-a.n32,a.n43-a.n33,a.n44-a.n34);va[5].set(a.n41+a.n31,a.n42+a.n32,a.n43+a.n33,a.n44+
a.n34);for(var b,a=0;a<6;a++)b=va[a],b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))}function t(a){for(var b=a.matrixWorld,d=-a.geometry.boundingSphere.radius*Math.max(a.scale.x,Math.max(a.scale.y,a.scale.z)),c=0;c<6;c++)if(a=va[c].x*b.n14+va[c].y*b.n24+va[c].z*b.n34+va[c].w,a<=d)return!1;return!0}function z(a){var b=a.object.material;b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}function A(a){var b=a.object,d=a.buffer,c;c=b.material;if(c instanceof THREE.MeshFaceMaterial){if(d=
d.materialIndex,d>=0)b=b.geometry.materials[d],b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}else if(b=c)b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}function B(a,b){return b.z-a.z}function D(a){var b,c,e,k=0,Q,l,o,q,p=a.lights;X||(X=new THREE.PerspectiveCamera(G.shadowCameraFov,G.shadowMapWidth/G.shadowMapHeight,G.shadowCameraNear,G.shadowCameraFar));b=0;for(c=p.length;b<c;b++)if(e=p[b],e instanceof THREE.SpotLight&&e.castShadow){$=
-1;G.shadowMap[k]||(G.shadowMap[k]=new THREE.WebGLRenderTarget(G.shadowMapWidth,G.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}));Ra[k]||(Ra[k]=new THREE.Matrix4);Q=G.shadowMap[k];l=Ra[k];X.position.copy(e.position);X.lookAt(e.target.position);X.parent==null&&(console.warn("Camera is not on the Scene. Adding it..."),a.add(X));this.autoUpdateScene&&a.updateMatrixWorld();X.matrixWorldInverse.getInverse(X.matrixWorld);l.set(0.5,0,0,0.5,0,0.5,0,0.5,
0,0,0.5,0.5,0,0,0,1);l.multiplySelf(X.projectionMatrix);l.multiplySelf(X.matrixWorldInverse);X.matrixWorldInverse.flattenToArray(Ua);X.projectionMatrix.flattenToArray(Ta);Ba.multiply(X.projectionMatrix,X.matrixWorldInverse);s(Ba);V(Q);d.clearColor(1,1,1,1);G.clear();d.clearColor(sa.r,sa.g,sa.b,Ca);l=a.__webglObjects.length;e=a.__webglObjectsImmediate.length;for(Q=0;Q<l;Q++)o=a.__webglObjects[Q],q=o.object,q.visible&&q.castShadow?!(q instanceof THREE.Mesh)||!q.frustumCulled||t(q)?(q.matrixWorld.flattenToArray(q._objectMatrixArray),
H(q,X,!1),o.render=!0):o.render=!1:o.render=!1;m(!0);C(THREE.NormalBlending);for(Q=0;Q<l;Q++)if(o=a.__webglObjects[Q],o.render)q=o.object,buffer=o.buffer,j(q),o=q.customDepthMaterial?q.customDepthMaterial:q.geometry.morphTargets.length?Za:Va,f(X,p,null,o,buffer,q);for(Q=0;Q<e;Q++)o=a.__webglObjectsImmediate[Q],q=o.object,q.visible&&q.castShadow&&(q.matrixAutoUpdate&&q.matrixWorld.flattenToArray(q._objectMatrixArray),K=-1,H(q,X,!1),j(q),program=h(X,p,null,Va,q),q.immediateRenderCallback?q.immediateRenderCallback(program,
d,va):q.render(function(a){i(a,program,Va.shading)}));k++}}function pa(a,b){var c,e,f;c=u.attributes;var h=u.uniforms,i=Oa/Sa,j,q=[],k=Sa*0.5,l=Oa*0.5,m=!0;d.useProgram(u.program);Wa=u.program;K=wa=N=-1;$a||(d.enableVertexAttribArray(u.attributes.position),d.enableVertexAttribArray(u.attributes.uv),$a=!0);d.disable(d.CULL_FACE);d.enable(d.BLEND);d.depthMask(!0);d.bindBuffer(d.ARRAY_BUFFER,u.vertexBuffer);d.vertexAttribPointer(c.position,2,d.FLOAT,!1,16,0);d.vertexAttribPointer(c.uv,2,d.FLOAT,!1,16,
8);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,u.elementBuffer);d.uniformMatrix4fv(h.projectionMatrix,!1,Ta);d.activeTexture(d.TEXTURE0);d.uniform1i(h.map,0);c=0;for(e=a.__webglSprites.length;c<e;c++)if(f=a.__webglSprites[c],f.visible&&f.opacity!==0)f.useScreenCoordinates?f.z=-f.position.z:(f._modelViewMatrix.multiplyToArray(b.matrixWorldInverse,f.matrixWorld,f._modelViewMatrixArray),f.z=-f._modelViewMatrix.n34);a.__webglSprites.sort(B);c=0;for(e=a.__webglSprites.length;c<e;c++)f=a.__webglSprites[c],f.visible&&
f.opacity!==0&&f.map&&f.map.image&&f.map.image.width&&(f.useScreenCoordinates?(d.uniform1i(h.useScreenCoordinates,1),d.uniform3f(h.screenPosition,(f.position.x-k)/k,(l-f.position.y)/l,Math.max(0,Math.min(1,f.position.z)))):(d.uniform1i(h.useScreenCoordinates,0),d.uniform1i(h.affectedByDistance,f.affectedByDistance?1:0),d.uniformMatrix4fv(h.modelViewMatrix,!1,f._modelViewMatrixArray)),j=f.map.image.width/(f.scaleByViewport?Oa:1),q[0]=j*i*f.scale.x,q[1]=j*f.scale.y,d.uniform2f(h.uvScale,f.uvScale.x,
f.uvScale.y),d.uniform2f(h.uvOffset,f.uvOffset.x,f.uvOffset.y),d.uniform2f(h.alignment,f.alignment.x,f.alignment.y),d.uniform1f(h.opacity,f.opacity),d.uniform3f(h.color,f.color.r,f.color.g,f.color.b),d.uniform1f(h.rotation,f.rotation),d.uniform2fv(h.scale,q),f.mergeWith3D&&!m?(d.enable(d.DEPTH_TEST),m=!0):!f.mergeWith3D&&m&&(d.disable(d.DEPTH_TEST),m=!1),C(f.blending),T(f.map,0),d.drawElements(d.TRIANGLES,6,d.UNSIGNED_SHORT,0));d.enable(d.CULL_FACE);d.enable(d.DEPTH_TEST);d.depthMask(ua)}function H(a,
b,d){a._modelViewMatrix.multiplyToArray(b.matrixWorldInverse,a.matrixWorld,a._modelViewMatrixArray);d&&THREE.Matrix4.makeInvert3x3(a._modelViewMatrix).transposeIntoArray(a._normalMatrixArray)}function ka(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function qa(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function M(a,b){for(var d=a.length-1;d>=0;d--)a[d].object===b&&a.splice(d,1)}function U(a,b,d){a.push({buffer:b,object:d,opaque:null,transparent:null})}
function C(a){if(a!==N){switch(a){case THREE.AdditiveBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.SRC_ALPHA,d.ONE);break;case THREE.SubtractiveBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.ZERO,d.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.ZERO,d.SRC_COLOR);break;default:d.blendEquationSeparate(d.FUNC_ADD,d.FUNC_ADD),d.blendFuncSeparate(d.SRC_ALPHA,d.ONE_MINUS_SRC_ALPHA,d.ONE,d.ONE_MINUS_SRC_ALPHA)}N=a}}function J(a,b,c){(c.width&c.width-
1)===0&&(c.height&c.height-1)===0?(d.texParameteri(a,d.TEXTURE_WRAP_S,ia(b.wrapS)),d.texParameteri(a,d.TEXTURE_WRAP_T,ia(b.wrapT)),d.texParameteri(a,d.TEXTURE_MAG_FILTER,ia(b.magFilter)),d.texParameteri(a,d.TEXTURE_MIN_FILTER,ia(b.minFilter)),d.generateMipmap(a)):(d.texParameteri(a,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(a,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.texParameteri(a,d.TEXTURE_MAG_FILTER,ya(b.magFilter)),d.texParameteri(a,d.TEXTURE_MIN_FILTER,ya(b.minFilter)))}function T(a,b){if(a.needsUpdate){if(!a.__webglInit)a.__webglInit=
!0,a.__webglTexture=d.createTexture(),G.info.memory.textures++;d.activeTexture(d.TEXTURE0+b);d.bindTexture(d.TEXTURE_2D,a.__webglTexture);a instanceof THREE.DataTexture?d.texImage2D(d.TEXTURE_2D,0,ia(a.format),a.image.width,a.image.height,0,ia(a.format),d.UNSIGNED_BYTE,a.image.data):d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,a.image);J(d.TEXTURE_2D,a,a.image);a.needsUpdate=!1}else d.activeTexture(d.TEXTURE0+b),d.bindTexture(d.TEXTURE_2D,a.__webglTexture)}function P(a,b){d.bindRenderbuffer(d.RENDERBUFFER,
a);b.depthBuffer&&!b.stencilBuffer?(d.renderbufferStorage(d.RENDERBUFFER,d.DEPTH_COMPONENT16,b.width,b.height),d.framebufferRenderbuffer(d.FRAMEBUFFER,d.DEPTH_ATTACHMENT,d.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(d.renderbufferStorage(d.RENDERBUFFER,d.DEPTH_STENCIL,b.width,b.height),d.framebufferRenderbuffer(d.FRAMEBUFFER,d.DEPTH_STENCIL_ATTACHMENT,d.RENDERBUFFER,a)):d.renderbufferStorage(d.RENDERBUFFER,d.RGBA4,b.width,b.height)}function V(a){var b=a instanceof THREE.WebGLRenderTargetCube;
if(a&&!a.__webglFramebuffer){if(a.depthBuffer===void 0)a.depthBuffer=!0;if(a.stencilBuffer===void 0)a.stencilBuffer=!0;a.__webglTexture=d.createTexture();if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];d.bindTexture(d.TEXTURE_CUBE_MAP,a.__webglTexture);J(d.TEXTURE_CUBE_MAP,a,a);for(var c=0;c<6;c++){a.__webglFramebuffer[c]=d.createFramebuffer();a.__webglRenderbuffer[c]=d.createRenderbuffer();d.texImage2D(d.TEXTURE_CUBE_MAP_POSITIVE_X+c,0,ia(a.format),a.width,a.height,0,ia(a.format),ia(a.type),
null);var e=a,f=d.TEXTURE_CUBE_MAP_POSITIVE_X+c;d.bindFramebuffer(d.FRAMEBUFFER,a.__webglFramebuffer[c]);d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,f,e.__webglTexture,0);P(a.__webglRenderbuffer[c],a)}}else a.__webglFramebuffer=d.createFramebuffer(),a.__webglRenderbuffer=d.createRenderbuffer(),d.bindTexture(d.TEXTURE_2D,a.__webglTexture),J(d.TEXTURE_2D,a,a),d.texImage2D(d.TEXTURE_2D,0,ia(a.format),a.width,a.height,0,ia(a.format),ia(a.type),null),c=d.TEXTURE_2D,d.bindFramebuffer(d.FRAMEBUFFER,
a.__webglFramebuffer),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,c,a.__webglTexture,0),d.bindRenderbuffer(d.RENDERBUFFER,a.__webglRenderbuffer),P(a.__webglRenderbuffer,a);b?d.bindTexture(d.TEXTURE_CUBE_MAP,null):d.bindTexture(d.TEXTURE_2D,null);d.bindRenderbuffer(d.RENDERBUFFER,null);d.bindFramebuffer(d.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,f=e=0):(b=null,c=Sa,a=Oa,e=Aa,f=za);b!==S&&(d.bindFramebuffer(d.FRAMEBUFFER,
b),d.viewport(e,f,c,a),S=b)}function ja(a){a instanceof THREE.WebGLRenderTargetCube?(d.bindTexture(d.TEXTURE_CUBE_MAP,a.__webglTexture),d.generateMipmap(d.TEXTURE_CUBE_MAP),d.bindTexture(d.TEXTURE_CUBE_MAP,null)):(d.bindTexture(d.TEXTURE_2D,a.__webglTexture),d.generateMipmap(d.TEXTURE_2D),d.bindTexture(d.TEXTURE_2D,null))}function Z(a,b){var c;a==="fragment"?c=d.createShader(d.FRAGMENT_SHADER):a==="vertex"&&(c=d.createShader(d.VERTEX_SHADER));d.shaderSource(c,b);d.compileShader(c);if(!d.getShaderParameter(c,
d.COMPILE_STATUS))return console.error(d.getShaderInfoLog(c)),console.error(b),null;return c}function ya(a){switch(a){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return d.NEAREST;default:return d.LINEAR}}function ia(a){switch(a){case THREE.RepeatWrapping:return d.REPEAT;case THREE.ClampToEdgeWrapping:return d.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return d.MIRRORED_REPEAT;case THREE.NearestFilter:return d.NEAREST;case THREE.NearestMipMapNearestFilter:return d.NEAREST_MIPMAP_NEAREST;
case THREE.NearestMipMapLinearFilter:return d.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return d.LINEAR;case THREE.LinearMipMapNearestFilter:return d.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return d.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return d.BYTE;case THREE.UnsignedByteType:return d.UNSIGNED_BYTE;case THREE.ShortType:return d.SHORT;case THREE.UnsignedShortType:return d.UNSIGNED_SHORT;case THREE.IntType:return d.INT;case THREE.UnsignedShortType:return d.UNSIGNED_INT;case THREE.FloatType:return d.FLOAT;
case THREE.AlphaFormat:return d.ALPHA;case THREE.RGBFormat:return d.RGB;case THREE.RGBAFormat:return d.RGBA;case THREE.LuminanceFormat:return d.LUMINANCE;case THREE.LuminanceAlphaFormat:return d.LUMINANCE_ALPHA}return 0}var G=this,d,Ha=[],Wa=null,S=null,$=-1,K=null,ra=0,R=null,ha=null,N=null,wa=null,ua=null,Ea=null,Pa=null,Fa=null,Aa=0,za=0,Sa=0,Oa=0,va=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],Ba=new THREE.Matrix4,Ta=new Float32Array(16),
Ua=new Float32Array(16),Na=new THREE.Vector4,Ya={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]}},a=a||{},xa=a.canvas!==void 0?a.canvas:document.createElement("canvas"),W=a.stencil!==void 0?a.stencil:!0,cb=a.preserveDrawingBuffer!==void 0?a.preserveDrawingBuffer:!1,db=a.antialias!==void 0?a.antialias:!1,sa=a.clearColor!==void 0?new THREE.Color(a.clearColor):new THREE.Color(0),Ca=a.clearAlpha!==void 0?a.clearAlpha:0,Xa=a.maxLights!==
void 0?a.maxLights:4;this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0}};this.maxMorphTargets=8;this.domElement=xa;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapBias=0.0039;this.shadowMapDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCameraNear=1;this.shadowCameraFar=
5E3;this.shadowCameraFov=50;this.shadowMap=[];this.shadowMapEnabled=!1;this.shadowMapSoft=this.shadowMapAutoUpdate=!0;var X,Ra=[],a=THREE.ShaderLib.depthRGBA,ab=THREE.UniformsUtils.clone(a.uniforms),Va=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:ab}),Za=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:ab,morphTargets:!0});Va._shadowPass=!0;Za._shadowPass=!0;try{if(!(d=xa.getContext("experimental-webgl",
{antialias:db,stencil:W,preserveDrawingBuffer:cb})))throw"Error creating WebGL context.";console.log(navigator.userAgent+" | "+d.getParameter(d.VERSION)+" | "+d.getParameter(d.VENDOR)+" | "+d.getParameter(d.RENDERER)+" | "+d.getParameter(d.SHADING_LANGUAGE_VERSION))}catch(eb){console.error(eb)}d.clearColor(0,0,0,1);d.clearDepth(1);d.clearStencil(0);d.enable(d.DEPTH_TEST);d.depthFunc(d.LEQUAL);d.frontFace(d.CCW);d.cullFace(d.BACK);d.enable(d.CULL_FACE);d.enable(d.BLEND);d.blendEquation(d.FUNC_ADD);
d.blendFunc(d.SRC_ALPHA,d.ONE_MINUS_SRC_ALPHA);d.clearColor(sa.r,sa.g,sa.b,Ca);this.context=d;var bb=d.getParameter(d.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0,u={};u.vertices=new Float32Array(16);u.faces=new Uint16Array(6);W=0;u.vertices[W++]=-1;u.vertices[W++]=-1;u.vertices[W++]=0;u.vertices[W++]=1;u.vertices[W++]=1;u.vertices[W++]=-1;u.vertices[W++]=1;u.vertices[W++]=1;u.vertices[W++]=1;u.vertices[W++]=1;u.vertices[W++]=1;u.vertices[W++]=0;u.vertices[W++]=-1;u.vertices[W++]=1;u.vertices[W++]=0;W=u.vertices[W++]=
0;u.faces[W++]=0;u.faces[W++]=1;u.faces[W++]=2;u.faces[W++]=0;u.faces[W++]=2;u.faces[W++]=3;u.vertexBuffer=d.createBuffer();u.elementBuffer=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,u.vertexBuffer);d.bufferData(d.ARRAY_BUFFER,u.vertices,d.STATIC_DRAW);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,u.elementBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,u.faces,d.STATIC_DRAW);u.program=d.createProgram();d.attachShader(u.program,Z("fragment",THREE.ShaderLib.sprite.fragmentShader));d.attachShader(u.program,Z("vertex",
THREE.ShaderLib.sprite.vertexShader));d.linkProgram(u.program);u.attributes={};u.uniforms={};u.attributes.position=d.getAttribLocation(u.program,"position");u.attributes.uv=d.getAttribLocation(u.program,"uv");u.uniforms.uvOffset=d.getUniformLocation(u.program,"uvOffset");u.uniforms.uvScale=d.getUniformLocation(u.program,"uvScale");u.uniforms.rotation=d.getUniformLocation(u.program,"rotation");u.uniforms.scale=d.getUniformLocation(u.program,"scale");u.uniforms.alignment=d.getUniformLocation(u.program,
"alignment");u.uniforms.color=d.getUniformLocation(u.program,"color");u.uniforms.map=d.getUniformLocation(u.program,"map");u.uniforms.opacity=d.getUniformLocation(u.program,"opacity");u.uniforms.useScreenCoordinates=d.getUniformLocation(u.program,"useScreenCoordinates");u.uniforms.affectedByDistance=d.getUniformLocation(u.program,"affectedByDistance");u.uniforms.screenPosition=d.getUniformLocation(u.program,"screenPosition");u.uniforms.modelViewMatrix=d.getUniformLocation(u.program,"modelViewMatrix");
u.uniforms.projectionMatrix=d.getUniformLocation(u.program,"projectionMatrix");var $a=!1;this.setSize=function(a,b){xa.width=a;xa.height=b;this.setViewport(0,0,xa.width,xa.height)};this.setViewport=function(a,b,c,e){Aa=a;za=b;Sa=c;Oa=e;d.viewport(Aa,za,Sa,Oa)};this.setScissor=function(a,b,c,e){d.scissor(a,b,c,e)};this.enableScissorTest=function(a){a?d.enable(d.SCISSOR_TEST):d.disable(d.SCISSOR_TEST)};this.setClearColorHex=function(a,b){sa.setHex(a);Ca=b;d.clearColor(sa.r,sa.g,sa.b,Ca)};this.setClearColor=
function(a,b){sa.copy(a);Ca=b;d.clearColor(sa.r,sa.g,sa.b,Ca)};this.getClearColor=function(){return sa};this.getClearAlpha=function(){return Ca};this.clear=function(a,b,c){var e=0;if(a===void 0||a)e|=d.COLOR_BUFFER_BIT;if(b===void 0||b)e|=d.DEPTH_BUFFER_BIT;if(c===void 0||c)e|=d.STENCIL_BUFFER_BIT;d.clear(e)};this.getContext=function(){return d};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,
delete a._objectMatrixArray,a instanceof THREE.Mesh)for(g in a.geometry.geometryGroups){var b=a.geometry.geometryGroups[g];d.deleteBuffer(b.__webglVertexBuffer);d.deleteBuffer(b.__webglNormalBuffer);d.deleteBuffer(b.__webglTangentBuffer);d.deleteBuffer(b.__webglColorBuffer);d.deleteBuffer(b.__webglUVBuffer);d.deleteBuffer(b.__webglUV2Buffer);d.deleteBuffer(b.__webglSkinVertexABuffer);d.deleteBuffer(b.__webglSkinVertexBBuffer);d.deleteBuffer(b.__webglSkinIndicesBuffer);d.deleteBuffer(b.__webglSkinWeightsBuffer);
d.deleteBuffer(b.__webglFaceBuffer);d.deleteBuffer(b.__webglLineBuffer);if(b.numMorphTargets)for(var c=0,e=b.numMorphTargets;c<e;c++)d.deleteBuffer(b.__webglMorphTargetsBuffers[c]);G.info.memory.geometries--}else if(a instanceof THREE.Ribbon)a=a.geometry,d.deleteBuffer(a.__webglVertexBuffer),d.deleteBuffer(a.__webglColorBuffer),G.info.memory.geometries--;else if(a instanceof THREE.Line)a=a.geometry,d.deleteBuffer(a.__webglVertexBuffer),d.deleteBuffer(a.__webglColorBuffer),G.info.memory.geometries--;
else if(a instanceof THREE.ParticleSystem)a=a.geometry,d.deleteBuffer(a.__webglVertexBuffer),d.deleteBuffer(a.__webglColorBuffer),G.info.memory.geometries--};this.deallocateTexture=function(a){if(a.__webglInit)a.__webglInit=!1,d.deleteTexture(a.__webglTexture),G.info.memory.textures--};this.initMaterial=function(a,b,c,e){var f,h,i,j;a instanceof THREE.MeshDepthMaterial?j="depth":a instanceof THREE.MeshNormalMaterial?j="normal":a instanceof THREE.MeshBasicMaterial?j="basic":a instanceof THREE.MeshLambertMaterial?
j="lambert":a instanceof THREE.MeshPhongMaterial?j="phong":a instanceof THREE.LineBasicMaterial?j="basic":a instanceof THREE.ParticleBasicMaterial&&(j="particle_basic");if(j){var k=THREE.ShaderLib[j];a.uniforms=THREE.UniformsUtils.clone(k.uniforms);a.vertexShader=k.vertexShader;a.fragmentShader=k.fragmentShader}var p,l,m;p=m=k=0;for(l=b.length;p<l;p++)i=b[p],i instanceof THREE.SpotLight&&m++,i instanceof THREE.DirectionalLight&&m++,i instanceof THREE.PointLight&&k++;k+m<=Xa?p=m:(p=Math.ceil(Xa*m/
(k+m)),k=Xa-p);i={directional:p,point:k};k=m=0;for(p=b.length;k<p;k++)l=b[k],l instanceof THREE.SpotLight&&l.castShadow&&m++;var s=50;if(e!==void 0&&e instanceof THREE.SkinnedMesh)s=e.bones.length;var w;a:{p=a.fragmentShader;l=a.vertexShader;var k=a.uniforms,b=a.attributes,c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,morphTargets:a.morphTargets,maxMorphTargets:this.maxMorphTargets,maxDirLights:i.directional,
maxPointLights:i.point,maxBones:s,shadowMapEnabled:this.shadowMapEnabled&&e.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapWidth:this.shadowMapWidth,shadowMapHeight:this.shadowMapHeight,maxShadows:m,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel},t,e=[];j?e.push(j):(e.push(p),e.push(l));for(t in c)e.push(t),e.push(c[t]);j=e.join();t=0;for(e=Ha.length;t<e;t++)if(Ha[t].code===j){w=Ha[t].program;break a}t=d.createProgram();e=[bb?"#define VERTEX_TEXTURES":"",G.gammaInput?"#define GAMMA_INPUT":
"",G.gammaOutput?"#define GAMMA_OUTPUT":"",G.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":
"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform mat4 cameraInverseMatrix;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
i=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",G.gammaInput?"#define GAMMA_INPUT":"",G.gammaOutput?"#define GAMMA_OUTPUT":"",G.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":
"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapSoft?"#define SHADOWMAP_WIDTH "+c.shadowMapWidth.toFixed(1):"",c.shadowMapSoft?"#define SHADOWMAP_HEIGHT "+c.shadowMapHeight.toFixed(1):"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");d.attachShader(t,Z("fragment",i+p));d.attachShader(t,
Z("vertex",e+l));d.linkProgram(t);d.getProgramParameter(t,d.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+d.getProgramParameter(t,d.VALIDATE_STATUS)+", gl error ["+d.getError()+"]");t.uniforms={};t.attributes={};var u,e=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","cameraInverseMatrix","boneGlobalMatrices","morphTargetInfluences"];for(u in k)e.push(u);u=e;e=0;for(k=u.length;e<k;e++)p=u[e],t.uniforms[p]=d.getUniformLocation(t,
p);e=["position","normal","uv","uv2","tangent","color","skinVertexA","skinVertexB","skinIndex","skinWeight"];for(u=0;u<c.maxMorphTargets;u++)e.push("morphTarget"+u);for(w in b)e.push(w);w=e;u=0;for(b=w.length;u<b;u++)c=w[u],t.attributes[c]=d.getAttribLocation(t,c);t.id=Ha.length;Ha.push({program:t,code:j});G.info.memory.programs=Ha.length;w=t}a.program=w;w=a.program.attributes;w.position>=0&&d.enableVertexAttribArray(w.position);w.color>=0&&d.enableVertexAttribArray(w.color);w.normal>=0&&d.enableVertexAttribArray(w.normal);
w.tangent>=0&&d.enableVertexAttribArray(w.tangent);a.skinning&&w.skinVertexA>=0&&w.skinVertexB>=0&&w.skinIndex>=0&&w.skinWeight>=0&&(d.enableVertexAttribArray(w.skinVertexA),d.enableVertexAttribArray(w.skinVertexB),d.enableVertexAttribArray(w.skinIndex),d.enableVertexAttribArray(w.skinWeight));if(a.attributes)for(h in a.attributes)w[h]!==void 0&&w[h]>=0&&d.enableVertexAttribArray(w[h]);if(a.morphTargets)for(h=a.numSupportedMorphTargets=0;h<this.maxMorphTargets;h++)u="morphTarget"+h,w[u]>=0&&(d.enableVertexAttribArray(w[u]),
a.numSupportedMorphTargets++);a.uniformsList=[];for(f in a.uniforms)a.uniformsList.push([a.uniforms[f],f])};this.clearTarget=function(a,b,c,d){V(a);this.clear(b,c,d)};this.updateShadowMap=function(a,b){D(a,b)};this.render=function(a,b,c,e){var u,Q,Qa,o,q,p,La,M=a.lights,Ma=a.fog;$=-1;this.autoUpdateObjects&&this.initWebGLObjects(a);this.shadowMapEnabled&&this.shadowMapAutoUpdate&&D(a,b);G.info.render.calls=0;G.info.render.vertices=0;G.info.render.faces=0;b.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),
a.add(b));this.autoUpdateScene&&a.updateMatrixWorld();b.matrixWorldInverse.getInverse(b.matrixWorld);b.matrixWorldInverse.flattenToArray(Ua);b.projectionMatrix.flattenToArray(Ta);Ba.multiply(b.projectionMatrix,b.matrixWorldInverse);s(Ba);V(c);(this.autoClear||e)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);Qa=a.__webglObjects.length;for(e=0;e<Qa;e++)if(q=a.__webglObjects[e],p=q.object,p.visible)if(!(p instanceof THREE.Mesh)||!p.frustumCulled||t(p)){if(p.matrixWorld.flattenToArray(p._objectMatrixArray),
H(p,b,!0),A(q),q.render=!0,this.sortObjects)p.renderDepth?q.z=p.renderDepth:(Na.copy(p.position),Ba.multiplyVector3(Na),q.z=Na.z)}else q.render=!1;else q.render=!1;this.sortObjects&&a.__webglObjects.sort(B);o=a.__webglObjectsImmediate.length;for(e=0;e<o;e++)q=a.__webglObjectsImmediate[e],p=q.object,p.visible&&(p.matrixAutoUpdate&&p.matrixWorld.flattenToArray(p._objectMatrixArray),H(p,b,!0),z(q));if(a.overrideMaterial){m(a.overrideMaterial.depthTest);C(a.overrideMaterial.blending);for(e=0;e<Qa;e++)if(q=
a.__webglObjects[e],q.render)p=q.object,La=q.buffer,j(p),f(b,M,Ma,a.overrideMaterial,La,p);for(e=0;e<o;e++)q=a.__webglObjectsImmediate[e],p=q.object,p.visible&&(K=-1,j(p),u=h(b,M,Ma,a.overrideMaterial,p),p.immediateRenderCallback?p.immediateRenderCallback(u,d,va):p.render(function(b){i(b,u,a.overrideMaterial.shading)}))}else{C(THREE.NormalBlending);for(e=Qa-1;e>=0;e--)if(q=a.__webglObjects[e],q.render&&(p=q.object,La=q.buffer,Q=q.opaque))j(p),m(Q.depthTest),l(Q.depthWrite),k(Q.polygonOffset,Q.polygonOffsetFactor,
Q.polygonOffsetUnits),f(b,M,Ma,Q,La,p);for(e=0;e<o;e++)if(q=a.__webglObjectsImmediate[e],p=q.object,p.visible&&(K=-1,Q=q.opaque))j(p),m(Q.depthTest),l(Q.depthWrite),k(Q.polygonOffset,Q.polygonOffsetFactor,Q.polygonOffsetUnits),u=h(b,M,Ma,Q,p),p.immediateRenderCallback?p.immediateRenderCallback(u,d,va):p.render(function(a){i(a,u,Q.shading)});for(e=0;e<Qa;e++)if(q=a.__webglObjects[e],q.render&&(p=q.object,La=q.buffer,Q=q.transparent))j(p),C(Q.blending),m(Q.depthTest),l(Q.depthWrite),k(Q.polygonOffset,
Q.polygonOffsetFactor,Q.polygonOffsetUnits),f(b,M,Ma,Q,La,p);for(e=0;e<o;e++)if(q=a.__webglObjectsImmediate[e],p=q.object,p.visible&&(K=-1,Q=q.transparent))j(p),C(Q.blending),m(Q.depthTest),l(Q.depthWrite),k(Q.polygonOffset,Q.polygonOffsetFactor,Q.polygonOffsetUnits),u=h(b,M,Ma,Q,p),p.immediateRenderCallback?p.immediateRenderCallback(u,d,va):p.render(function(a){i(a,u,Q.shading)})}a.__webglSprites.length&&pa(a,b);c&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&ja(c)};this.initWebGLObjects=
function(a){if(!a.__webglObjects)a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[];for(;a.__objectsAdded.length;){var f=a.__objectsAdded[0],h=a,i=void 0,j=void 0,k=void 0;if(!f.__webglInit)if(f.__webglInit=!0,f._modelViewMatrix=new THREE.Matrix4,f._normalMatrixArray=new Float32Array(9),f._modelViewMatrixArray=new Float32Array(16),f._objectMatrixArray=new Float32Array(16),f.matrixWorld.flattenToArray(f._objectMatrixArray),f instanceof THREE.Mesh){j=f.geometry;if(j.geometryGroups===
void 0){var k=j,l=void 0,o=void 0,q=void 0,p=void 0,m=q=void 0,s=void 0,t={},w=k.morphTargets.length;k.geometryGroups={};l=0;for(o=k.faces.length;l<o;l++)q=k.faces[l],p=q.materialIndex,m=p!==void 0?p:-1,t[m]===void 0&&(t[m]={hash:m,counter:0}),s=t[m].hash+"_"+t[m].counter,k.geometryGroups[s]===void 0&&(k.geometryGroups[s]={faces:[],materialIndex:p,vertices:0,numMorphTargets:w}),q=q instanceof THREE.Face3?3:4,k.geometryGroups[s].vertices+q>65535&&(t[m].counter+=1,s=t[m].hash+"_"+t[m].counter,k.geometryGroups[s]===
void 0&&(k.geometryGroups[s]={faces:[],materialIndex:p,vertices:0,numMorphTargets:w})),k.geometryGroups[s].faces.push(l),k.geometryGroups[s].vertices+=q;k.geometryGroupsList=[];l=void 0;for(l in k.geometryGroups)k.geometryGroups[l].id=ra++,k.geometryGroupsList.push(k.geometryGroups[l])}for(i in j.geometryGroups)if(k=j.geometryGroups[i],!k.__webglVertexBuffer){l=k;l.__webglVertexBuffer=d.createBuffer();l.__webglNormalBuffer=d.createBuffer();l.__webglTangentBuffer=d.createBuffer();l.__webglColorBuffer=
d.createBuffer();l.__webglUVBuffer=d.createBuffer();l.__webglUV2Buffer=d.createBuffer();l.__webglSkinVertexABuffer=d.createBuffer();l.__webglSkinVertexBBuffer=d.createBuffer();l.__webglSkinIndicesBuffer=d.createBuffer();l.__webglSkinWeightsBuffer=d.createBuffer();l.__webglFaceBuffer=d.createBuffer();l.__webglLineBuffer=d.createBuffer();if(l.numMorphTargets){p=o=void 0;l.__webglMorphTargetsBuffers=[];o=0;for(p=l.numMorphTargets;o<p;o++)l.__webglMorphTargetsBuffers.push(d.createBuffer())}G.info.memory.geometries++;
for(var p=f,u=q=t=void 0,m=u=w=u=void 0,s=m=l=0,z=q=void 0,A=void 0,q=o=w=t=void 0,w=p.geometry,z=w.faces,A=k.faces,t=0,q=A.length;t<q;t++)u=A[t],u=z[u],u instanceof THREE.Face3?(l+=3,m+=1,s+=3):u instanceof THREE.Face4&&(l+=4,m+=2,s+=4);t=c(p,k);q=t.map||t.lightMap||t instanceof THREE.ShaderMaterial?!0:!1;A=t instanceof THREE.MeshBasicMaterial&&!t.envMap||t instanceof THREE.MeshDepthMaterial?!1:t&&t.shading!==void 0&&t.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading;z=t.vertexColors?
t.vertexColors:!1;k.__vertexArray=new Float32Array(l*3);if(A)k.__normalArray=new Float32Array(l*3);if(w.hasTangents)k.__tangentArray=new Float32Array(l*4);if(z)k.__colorArray=new Float32Array(l*3);if(q){if(w.faceUvs.length>0||w.faceVertexUvs.length>0)k.__uvArray=new Float32Array(l*2);if(w.faceUvs.length>1||w.faceVertexUvs.length>1)k.__uv2Array=new Float32Array(l*2)}if(p.geometry.skinWeights.length&&p.geometry.skinIndices.length)k.__skinVertexAArray=new Float32Array(l*4),k.__skinVertexBArray=new Float32Array(l*
4),k.__skinIndexArray=new Float32Array(l*4),k.__skinWeightArray=new Float32Array(l*4);k.__faceArray=new Uint16Array(m*3);k.__lineArray=new Uint16Array(s*2);if(k.numMorphTargets){k.__morphTargetsArrays=[];w=0;for(u=k.numMorphTargets;w<u;w++)k.__morphTargetsArrays.push(new Float32Array(l*3))}k.__needsSmoothNormals=A===THREE.SmoothShading;k.__uvType=q;k.__vertexColorType=z;k.__normalType=A;k.__webglFaceCount=m*3;k.__webglLineCount=s*2;if(t.attributes){if(k.__webglCustomAttributesList===void 0)k.__webglCustomAttributesList=
[];p=void 0;for(p in t.attributes){q=t.attributes[p];w={};for(o in q)w[o]=q[o];if(!w.__webglInitialized||w.createUniqueBuffers)w.__webglInitialized=!0,m=1,w.type==="v2"?m=2:w.type==="v3"?m=3:w.type==="v4"?m=4:w.type==="c"&&(m=3),w.size=m,w.array=new Float32Array(l*m),w.buffer=d.createBuffer(),w.buffer.belongsToAttribute=p,q.needsUpdate=!0,w.__original=q;k.__webglCustomAttributesList.push(w)}}k.__inittedArrays=!0;j.__dirtyVertices=!0;j.__dirtyMorphTargets=!0;j.__dirtyElements=!0;j.__dirtyUvs=!0;j.__dirtyNormals=
!0;j.__dirtyTangents=!0;j.__dirtyColors=!0}}else if(f instanceof THREE.Ribbon){if(j=f.geometry,!j.__webglVertexBuffer)k=j,k.__webglVertexBuffer=d.createBuffer(),k.__webglColorBuffer=d.createBuffer(),G.info.memory.geometries++,k=j,l=k.vertices.length,k.__vertexArray=new Float32Array(l*3),k.__colorArray=new Float32Array(l*3),k.__webglVertexCount=l,j.__dirtyVertices=!0,j.__dirtyColors=!0}else if(f instanceof THREE.Line){if(j=f.geometry,!j.__webglVertexBuffer)k=j,k.__webglVertexBuffer=d.createBuffer(),
k.__webglColorBuffer=d.createBuffer(),G.info.memory.geometries++,k=j,l=f,o=k.vertices.length,k.__vertexArray=new Float32Array(o*3),k.__colorArray=new Float32Array(o*3),k.__webglLineCount=o,b(k,l),j.__dirtyVertices=!0,j.__dirtyColors=!0}else if(f instanceof THREE.ParticleSystem&&(j=f.geometry,!j.__webglVertexBuffer))k=j,k.__webglVertexBuffer=d.createBuffer(),k.__webglColorBuffer=d.createBuffer(),G.info.geometries++,k=j,l=f,o=k.vertices.length,k.__vertexArray=new Float32Array(o*3),k.__colorArray=new Float32Array(o*
3),k.__sortArray=[],k.__webglParticleCount=o,b(k,l),j.__dirtyVertices=!0,j.__dirtyColors=!0;if(!f.__webglActive){if(f instanceof THREE.Mesh)for(i in j=f.geometry,j.geometryGroups)k=j.geometryGroups[i],U(h.__webglObjects,k,f);else f instanceof THREE.Ribbon||f instanceof THREE.Line||f instanceof THREE.ParticleSystem?(j=f.geometry,U(h.__webglObjects,j,f)):THREE.MarchingCubes!==void 0&&f instanceof THREE.MarchingCubes||f.immediateRenderCallback?h.__webglObjectsImmediate.push({object:f,opaque:null,transparent:null}):
f instanceof THREE.Sprite&&h.__webglSprites.push(f);f.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){f=a.__objectsRemoved[0];h=a;if(f instanceof THREE.Mesh||f instanceof THREE.ParticleSystem||f instanceof THREE.Ribbon||f instanceof THREE.Line)M(h.__webglObjects,f);else if(f instanceof THREE.Sprite){h=h.__webglSprites;i=f;for(j=h.length-1;j>=0;j--)h[j]===i&&h.splice(j,1)}else(f instanceof THREE.MarchingCubes||f.immediateRenderCallback)&&M(h.__webglObjectsImmediate,f);
f.__webglActive=!1;a.__objectsRemoved.splice(0,1)}f=0;for(h=a.__webglObjects.length;f<h;f++)if(k=a.__webglObjects[f].object,i=k.geometry,j=m=p=void 0,k instanceof THREE.Mesh){l=0;for(o=i.geometryGroupsList.length;l<o;l++)if(p=i.geometryGroupsList[l],j=c(k,p),m=j.attributes&&ka(j),i.__dirtyVertices||i.__dirtyMorphTargets||i.__dirtyElements||i.__dirtyUvs||i.__dirtyNormals||i.__dirtyColors||i.__dirtyTangents||m)if(m=d.DYNAMIC_DRAW,s=!i.dynamic,p.__inittedArrays){var B=w=t=void 0,y=void 0,D=B=void 0,
C=void 0,J=void 0,K=void 0,P=u=A=z=q=void 0,I=void 0,O=void 0,F=void 0,L=void 0,v=y=K=y=J=C=void 0,E=void 0,r=E=v=C=void 0,n=void 0,r=E=v=B=B=D=E=v=y=r=E=v=n=r=E=v=n=r=E=v=void 0,H=0,N=0,V=0,W=0,T=0,R=0,aa=0,S=0,la=0,x=0,ma=0,Y=r=0,Y=void 0,na=p.__vertexArray,ia=p.__uvArray,ja=p.__uv2Array,X=p.__normalArray,ca=p.__tangentArray,oa=p.__colorArray,da=p.__skinVertexAArray,ea=p.__skinVertexBArray,fa=p.__skinIndexArray,ga=p.__skinWeightArray,pa=p.__morphTargetsArrays,$=p.__webglCustomAttributesList,n=void 0,
ha=p.__faceArray,Z=p.__lineArray,va=p.__needsSmoothNormals,z=p.__vertexColorType,q=p.__uvType,A=p.__normalType,ta=k.geometry,sa=ta.__dirtyVertices,wa=ta.__dirtyElements,ua=ta.__dirtyUvs,ya=ta.__dirtyNormals,za=ta.__dirtyTangents,Aa=ta.__dirtyColors,Ba=ta.__dirtyMorphTargets,xa=ta.vertices,Ca=p.faces,Ha=ta.faces,Ea=ta.faceVertexUvs[0],Fa=ta.faceVertexUvs[1],Ia=ta.skinVerticesA,Ja=ta.skinVerticesB,Ka=ta.skinIndices,Ga=ta.skinWeights,Da=ta.morphTargets;if($){v=0;for(E=$.length;v<E;v++)$[v].offset=0,
$[v].offsetSrc=0}t=0;for(w=Ca.length;t<w;t++)if(B=Ca[t],y=Ha[B],Ea&&(u=Ea[B]),Fa&&(P=Fa[B]),B=y.vertexNormals,D=y.normal,C=y.vertexColors,J=y.color,K=y.vertexTangents,y instanceof THREE.Face3){if(sa)I=xa[y.a].position,O=xa[y.b].position,F=xa[y.c].position,na[N]=I.x,na[N+1]=I.y,na[N+2]=I.z,na[N+3]=O.x,na[N+4]=O.y,na[N+5]=O.z,na[N+6]=F.x,na[N+7]=F.y,na[N+8]=F.z,N+=9;if($){v=0;for(E=$.length;v<E;v++)if(n=$[v],n.__original.needsUpdate)r=n.offset,Y=n.offsetSrc,n.size===1?(n.boundTo===void 0||n.boundTo===
"vertices"?(n.array[r]=n.value[y.a],n.array[r+1]=n.value[y.b],n.array[r+2]=n.value[y.c]):n.boundTo==="faces"?(Y=n.value[Y],n.array[r]=Y,n.array[r+1]=Y,n.array[r+2]=Y,n.offsetSrc++):n.boundTo==="faceVertices"&&(n.array[r]=n.value[Y],n.array[r+1]=n.value[Y+1],n.array[r+2]=n.value[Y+2],n.offsetSrc+=3),n.offset+=3):(n.boundTo===void 0||n.boundTo==="vertices"?(I=n.value[y.a],O=n.value[y.b],F=n.value[y.c]):n.boundTo==="faces"?(F=O=I=Y=n.value[Y],n.offsetSrc++):n.boundTo==="faceVertices"&&(I=n.value[Y],
O=n.value[Y+1],F=n.value[Y+2],n.offsetSrc+=3),n.size===2?(n.array[r]=I.x,n.array[r+1]=I.y,n.array[r+2]=O.x,n.array[r+3]=O.y,n.array[r+4]=F.x,n.array[r+5]=F.y,n.offset+=6):n.size===3?(n.type==="c"?(n.array[r]=I.r,n.array[r+1]=I.g,n.array[r+2]=I.b,n.array[r+3]=O.r,n.array[r+4]=O.g,n.array[r+5]=O.b,n.array[r+6]=F.r,n.array[r+7]=F.g,n.array[r+8]=F.b):(n.array[r]=I.x,n.array[r+1]=I.y,n.array[r+2]=I.z,n.array[r+3]=O.x,n.array[r+4]=O.y,n.array[r+5]=O.z,n.array[r+6]=F.x,n.array[r+7]=F.y,n.array[r+8]=F.z),
n.offset+=9):(n.array[r]=I.x,n.array[r+1]=I.y,n.array[r+2]=I.z,n.array[r+3]=I.w,n.array[r+4]=O.x,n.array[r+5]=O.y,n.array[r+6]=O.z,n.array[r+7]=O.w,n.array[r+8]=F.x,n.array[r+9]=F.y,n.array[r+10]=F.z,n.array[r+11]=F.w,n.offset+=12))}if(Ba){v=0;for(E=Da.length;v<E;v++)I=Da[v].vertices[y.a].position,O=Da[v].vertices[y.b].position,F=Da[v].vertices[y.c].position,r=pa[v],r[ma]=I.x,r[ma+1]=I.y,r[ma+2]=I.z,r[ma+3]=O.x,r[ma+4]=O.y,r[ma+5]=O.z,r[ma+6]=F.x,r[ma+7]=F.y,r[ma+8]=F.z;ma+=9}if(Ga.length)v=Ga[y.a],
E=Ga[y.b],r=Ga[y.c],ga[x]=v.x,ga[x+1]=v.y,ga[x+2]=v.z,ga[x+3]=v.w,ga[x+4]=E.x,ga[x+5]=E.y,ga[x+6]=E.z,ga[x+7]=E.w,ga[x+8]=r.x,ga[x+9]=r.y,ga[x+10]=r.z,ga[x+11]=r.w,v=Ka[y.a],E=Ka[y.b],r=Ka[y.c],fa[x]=v.x,fa[x+1]=v.y,fa[x+2]=v.z,fa[x+3]=v.w,fa[x+4]=E.x,fa[x+5]=E.y,fa[x+6]=E.z,fa[x+7]=E.w,fa[x+8]=r.x,fa[x+9]=r.y,fa[x+10]=r.z,fa[x+11]=r.w,v=Ia[y.a],E=Ia[y.b],r=Ia[y.c],da[x]=v.x,da[x+1]=v.y,da[x+2]=v.z,da[x+3]=1,da[x+4]=E.x,da[x+5]=E.y,da[x+6]=E.z,da[x+7]=1,da[x+8]=r.x,da[x+9]=r.y,da[x+10]=r.z,da[x+11]=
1,v=Ja[y.a],E=Ja[y.b],r=Ja[y.c],ea[x]=v.x,ea[x+1]=v.y,ea[x+2]=v.z,ea[x+3]=1,ea[x+4]=E.x,ea[x+5]=E.y,ea[x+6]=E.z,ea[x+7]=1,ea[x+8]=r.x,ea[x+9]=r.y,ea[x+10]=r.z,ea[x+11]=1,x+=12;if(Aa&&z)C.length===3&&z===THREE.VertexColors?(y=C[0],v=C[1],E=C[2]):E=v=y=J,oa[la]=y.r,oa[la+1]=y.g,oa[la+2]=y.b,oa[la+3]=v.r,oa[la+4]=v.g,oa[la+5]=v.b,oa[la+6]=E.r,oa[la+7]=E.g,oa[la+8]=E.b,la+=9;if(za&&ta.hasTangents)C=K[0],J=K[1],y=K[2],ca[aa]=C.x,ca[aa+1]=C.y,ca[aa+2]=C.z,ca[aa+3]=C.w,ca[aa+4]=J.x,ca[aa+5]=J.y,ca[aa+6]=
J.z,ca[aa+7]=J.w,ca[aa+8]=y.x,ca[aa+9]=y.y,ca[aa+10]=y.z,ca[aa+11]=y.w,aa+=12;if(ya&&A)if(B.length===3&&va)for(v=0;v<3;v++)D=B[v],X[R]=D.x,X[R+1]=D.y,X[R+2]=D.z,R+=3;else for(v=0;v<3;v++)X[R]=D.x,X[R+1]=D.y,X[R+2]=D.z,R+=3;if(ua&&u!==void 0&&q)for(v=0;v<3;v++)B=u[v],ia[V]=B.u,ia[V+1]=B.v,V+=2;if(ua&&P!==void 0&&q)for(v=0;v<3;v++)B=P[v],ja[W]=B.u,ja[W+1]=B.v,W+=2;wa&&(ha[T]=H,ha[T+1]=H+1,ha[T+2]=H+2,T+=3,Z[S]=H,Z[S+1]=H+1,Z[S+2]=H,Z[S+3]=H+2,Z[S+4]=H+1,Z[S+5]=H+2,S+=6,H+=3)}else if(y instanceof THREE.Face4){if(sa)I=
xa[y.a].position,O=xa[y.b].position,F=xa[y.c].position,L=xa[y.d].position,na[N]=I.x,na[N+1]=I.y,na[N+2]=I.z,na[N+3]=O.x,na[N+4]=O.y,na[N+5]=O.z,na[N+6]=F.x,na[N+7]=F.y,na[N+8]=F.z,na[N+9]=L.x,na[N+10]=L.y,na[N+11]=L.z,N+=12;if($){v=0;for(E=$.length;v<E;v++)if(n=$[v],n.__original.needsUpdate)r=n.offset,Y=n.offsetSrc,n.size===1?(n.boundTo===void 0||n.boundTo==="vertices"?(n.array[r]=n.value[y.a],n.array[r+1]=n.value[y.b],n.array[r+2]=n.value[y.c],n.array[r+3]=n.value[y.d]):n.boundTo==="faces"?(Y=n.value[Y],
n.array[r]=Y,n.array[r+1]=Y,n.array[r+2]=Y,n.array[r+3]=Y,n.offsetSrc++):n.boundTo==="faceVertices"&&(n.array[r]=n.value[Y],n.array[r+1]=n.value[Y+1],n.array[r+2]=n.value[Y+2],n.array[r+3]=n.value[Y+3],n.offsetSrc+=4),n.offset+=4):(n.boundTo===void 0||n.boundTo==="vertices"?(I=n.value[y.a],O=n.value[y.b],F=n.value[y.c],L=n.value[y.d]):n.boundTo==="faces"?(L=F=O=I=Y=n.value[Y],n.offsetSrc++):n.boundTo==="faceVertices"&&(I=n.value[Y],O=n.value[Y+1],F=n.value[Y+2],L=n.value[Y+3],n.offsetSrc+=4),n.size===
2?(n.array[r]=I.x,n.array[r+1]=I.y,n.array[r+2]=O.x,n.array[r+3]=O.y,n.array[r+4]=F.x,n.array[r+5]=F.y,n.array[r+6]=L.x,n.array[r+7]=L.y,n.offset+=8):n.size===3?(n.type==="c"?(n.array[r]=I.r,n.array[r+1]=I.g,n.array[r+2]=I.b,n.array[r+3]=O.r,n.array[r+4]=O.g,n.array[r+5]=O.b,n.array[r+6]=F.r,n.array[r+7]=F.g,n.array[r+8]=F.b,n.array[r+9]=L.r,n.array[r+10]=L.g,n.array[r+11]=L.b):(n.array[r]=I.x,n.array[r+1]=I.y,n.array[r+2]=I.z,n.array[r+3]=O.x,n.array[r+4]=O.y,n.array[r+5]=O.z,n.array[r+6]=F.x,n.array[r+
7]=F.y,n.array[r+8]=F.z,n.array[r+9]=L.x,n.array[r+10]=L.y,n.array[r+11]=L.z),n.offset+=12):(n.array[r]=I.x,n.array[r+1]=I.y,n.array[r+2]=I.z,n.array[r+3]=I.w,n.array[r+4]=O.x,n.array[r+5]=O.y,n.array[r+6]=O.z,n.array[r+7]=O.w,n.array[r+8]=F.x,n.array[r+9]=F.y,n.array[r+10]=F.z,n.array[r+11]=F.w,n.array[r+12]=L.x,n.array[r+13]=L.y,n.array[r+14]=L.z,n.array[r+15]=L.w,n.offset+=16))}if(Ba){v=0;for(E=Da.length;v<E;v++)I=Da[v].vertices[y.a].position,O=Da[v].vertices[y.b].position,F=Da[v].vertices[y.c].position,
L=Da[v].vertices[y.d].position,r=pa[v],r[ma]=I.x,r[ma+1]=I.y,r[ma+2]=I.z,r[ma+3]=O.x,r[ma+4]=O.y,r[ma+5]=O.z,r[ma+6]=F.x,r[ma+7]=F.y,r[ma+8]=F.z,r[ma+9]=L.x,r[ma+10]=L.y,r[ma+11]=L.z;ma+=12}if(Ga.length)v=Ga[y.a],E=Ga[y.b],r=Ga[y.c],n=Ga[y.d],ga[x]=v.x,ga[x+1]=v.y,ga[x+2]=v.z,ga[x+3]=v.w,ga[x+4]=E.x,ga[x+5]=E.y,ga[x+6]=E.z,ga[x+7]=E.w,ga[x+8]=r.x,ga[x+9]=r.y,ga[x+10]=r.z,ga[x+11]=r.w,ga[x+12]=n.x,ga[x+13]=n.y,ga[x+14]=n.z,ga[x+15]=n.w,v=Ka[y.a],E=Ka[y.b],r=Ka[y.c],n=Ka[y.d],fa[x]=v.x,fa[x+1]=v.y,
fa[x+2]=v.z,fa[x+3]=v.w,fa[x+4]=E.x,fa[x+5]=E.y,fa[x+6]=E.z,fa[x+7]=E.w,fa[x+8]=r.x,fa[x+9]=r.y,fa[x+10]=r.z,fa[x+11]=r.w,fa[x+12]=n.x,fa[x+13]=n.y,fa[x+14]=n.z,fa[x+15]=n.w,v=Ia[y.a],E=Ia[y.b],r=Ia[y.c],n=Ia[y.d],da[x]=v.x,da[x+1]=v.y,da[x+2]=v.z,da[x+3]=1,da[x+4]=E.x,da[x+5]=E.y,da[x+6]=E.z,da[x+7]=1,da[x+8]=r.x,da[x+9]=r.y,da[x+10]=r.z,da[x+11]=1,da[x+12]=n.x,da[x+13]=n.y,da[x+14]=n.z,da[x+15]=1,v=Ja[y.a],E=Ja[y.b],r=Ja[y.c],y=Ja[y.d],ea[x]=v.x,ea[x+1]=v.y,ea[x+2]=v.z,ea[x+3]=1,ea[x+4]=E.x,ea[x+
5]=E.y,ea[x+6]=E.z,ea[x+7]=1,ea[x+8]=r.x,ea[x+9]=r.y,ea[x+10]=r.z,ea[x+11]=1,ea[x+12]=y.x,ea[x+13]=y.y,ea[x+14]=y.z,ea[x+15]=1,x+=16;if(Aa&&z)C.length===4&&z===THREE.VertexColors?(y=C[0],v=C[1],E=C[2],C=C[3]):C=E=v=y=J,oa[la]=y.r,oa[la+1]=y.g,oa[la+2]=y.b,oa[la+3]=v.r,oa[la+4]=v.g,oa[la+5]=v.b,oa[la+6]=E.r,oa[la+7]=E.g,oa[la+8]=E.b,oa[la+9]=C.r,oa[la+10]=C.g,oa[la+11]=C.b,la+=12;if(za&&ta.hasTangents)C=K[0],J=K[1],y=K[2],K=K[3],ca[aa]=C.x,ca[aa+1]=C.y,ca[aa+2]=C.z,ca[aa+3]=C.w,ca[aa+4]=J.x,ca[aa+
5]=J.y,ca[aa+6]=J.z,ca[aa+7]=J.w,ca[aa+8]=y.x,ca[aa+9]=y.y,ca[aa+10]=y.z,ca[aa+11]=y.w,ca[aa+12]=K.x,ca[aa+13]=K.y,ca[aa+14]=K.z,ca[aa+15]=K.w,aa+=16;if(ya&&A)if(B.length===4&&va)for(v=0;v<4;v++)D=B[v],X[R]=D.x,X[R+1]=D.y,X[R+2]=D.z,R+=3;else for(v=0;v<4;v++)X[R]=D.x,X[R+1]=D.y,X[R+2]=D.z,R+=3;if(ua&&u!==void 0&&q)for(v=0;v<4;v++)B=u[v],ia[V]=B.u,ia[V+1]=B.v,V+=2;if(ua&&P!==void 0&&q)for(v=0;v<4;v++)B=P[v],ja[W]=B.u,ja[W+1]=B.v,W+=2;wa&&(ha[T]=H,ha[T+1]=H+1,ha[T+2]=H+3,ha[T+3]=H+1,ha[T+4]=H+2,ha[T+
5]=H+3,T+=6,Z[S]=H,Z[S+1]=H+1,Z[S+2]=H,Z[S+3]=H+3,Z[S+4]=H+1,Z[S+5]=H+2,Z[S+6]=H+2,Z[S+7]=H+3,S+=8,H+=4)}sa&&(d.bindBuffer(d.ARRAY_BUFFER,p.__webglVertexBuffer),d.bufferData(d.ARRAY_BUFFER,na,m));if($){v=0;for(E=$.length;v<E;v++)n=$[v],n.__original.needsUpdate&&(d.bindBuffer(d.ARRAY_BUFFER,n.buffer),d.bufferData(d.ARRAY_BUFFER,n.array,m))}if(Ba){v=0;for(E=Da.length;v<E;v++)d.bindBuffer(d.ARRAY_BUFFER,p.__webglMorphTargetsBuffers[v]),d.bufferData(d.ARRAY_BUFFER,pa[v],m)}Aa&&la>0&&(d.bindBuffer(d.ARRAY_BUFFER,
p.__webglColorBuffer),d.bufferData(d.ARRAY_BUFFER,oa,m));ya&&(d.bindBuffer(d.ARRAY_BUFFER,p.__webglNormalBuffer),d.bufferData(d.ARRAY_BUFFER,X,m));za&&ta.hasTangents&&(d.bindBuffer(d.ARRAY_BUFFER,p.__webglTangentBuffer),d.bufferData(d.ARRAY_BUFFER,ca,m));ua&&V>0&&(d.bindBuffer(d.ARRAY_BUFFER,p.__webglUVBuffer),d.bufferData(d.ARRAY_BUFFER,ia,m));ua&&W>0&&(d.bindBuffer(d.ARRAY_BUFFER,p.__webglUV2Buffer),d.bufferData(d.ARRAY_BUFFER,ja,m));wa&&(d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,p.__webglFaceBuffer),
d.bufferData(d.ELEMENT_ARRAY_BUFFER,ha,m),d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,p.__webglLineBuffer),d.bufferData(d.ELEMENT_ARRAY_BUFFER,Z,m));x>0&&(d.bindBuffer(d.ARRAY_BUFFER,p.__webglSkinVertexABuffer),d.bufferData(d.ARRAY_BUFFER,da,m),d.bindBuffer(d.ARRAY_BUFFER,p.__webglSkinVertexBBuffer),d.bufferData(d.ARRAY_BUFFER,ea,m),d.bindBuffer(d.ARRAY_BUFFER,p.__webglSkinIndicesBuffer),d.bufferData(d.ARRAY_BUFFER,fa,m),d.bindBuffer(d.ARRAY_BUFFER,p.__webglSkinWeightsBuffer),d.bufferData(d.ARRAY_BUFFER,
ga,m));s&&(delete p.__inittedArrays,delete p.__colorArray,delete p.__normalArray,delete p.__tangentArray,delete p.__uvArray,delete p.__uv2Array,delete p.__faceArray,delete p.__vertexArray,delete p.__lineArray,delete p.__skinVertexAArray,delete p.__skinVertexBArray,delete p.__skinIndexArray,delete p.__skinWeightArray)}i.__dirtyVertices=!1;i.__dirtyMorphTargets=!1;i.__dirtyElements=!1;i.__dirtyUvs=!1;i.__dirtyNormals=!1;i.__dirtyColors=!1;i.__dirtyTangents=!1;j.attributes&&qa(j)}else if(k instanceof
THREE.Ribbon){if(i.__dirtyVertices||i.__dirtyColors){j=i;k=d.DYNAMIC_DRAW;l=t=s=s=void 0;w=j.vertices;o=j.colors;q=w.length;p=o.length;z=j.__vertexArray;m=j.__colorArray;A=j.__dirtyColors;if(j.__dirtyVertices){for(s=0;s<q;s++)t=w[s].position,l=s*3,z[l]=t.x,z[l+1]=t.y,z[l+2]=t.z;d.bindBuffer(d.ARRAY_BUFFER,j.__webglVertexBuffer);d.bufferData(d.ARRAY_BUFFER,z,k)}if(A){for(s=0;s<p;s++)color=o[s],l=s*3,m[l]=color.r,m[l+1]=color.g,m[l+2]=color.b;d.bindBuffer(d.ARRAY_BUFFER,j.__webglColorBuffer);d.bufferData(d.ARRAY_BUFFER,
m,k)}}i.__dirtyVertices=!1;i.__dirtyColors=!1}else if(k instanceof THREE.Line){j=c(k,p);m=j.attributes&&ka(j);if(i.__dirtyVertices||i.__dirtyColors||m){k=i;l=d.DYNAMIC_DRAW;o=P=w=u=void 0;w=k.vertices;p=k.colors;q=w.length;m=p.length;z=k.__vertexArray;s=k.__colorArray;A=k.__dirtyColors;t=k.__webglCustomAttributesList;L=F=O=I=P=u=void 0;if(k.__dirtyVertices){for(u=0;u<q;u++)P=w[u].position,o=u*3,z[o]=P.x,z[o+1]=P.y,z[o+2]=P.z;d.bindBuffer(d.ARRAY_BUFFER,k.__webglVertexBuffer);d.bufferData(d.ARRAY_BUFFER,
z,l)}if(A){for(w=0;w<m;w++)color=p[w],o=w*3,s[o]=color.r,s[o+1]=color.g,s[o+2]=color.b;d.bindBuffer(d.ARRAY_BUFFER,k.__webglColorBuffer);d.bufferData(d.ARRAY_BUFFER,s,l)}if(t){u=0;for(P=t.length;u<P;u++)if(L=t[u],L.__original.needsUpdate&&(L.boundTo===void 0||L.boundTo==="vertices")){o=0;O=L.value.length;for(I=0;I<O;I++)L.size===1?L.array[o]=L.value[I]:(F=L.value[I],L.size===2?(L.array[o]=F.x,L.array[o+1]=F.y):L.size===3?L.type==="c"?(L.array[o]=F.r,L.array[o+1]=F.g,L.array[o+2]=F.b):(L.array[o]=
F.x,L.array[o+1]=F.y,L.array[o+2]=F.z):(L.array[o]=F.x,L.array[o+1]=F.y,L.array[o+2]=F.z,L.array[o+3]=F.w)),o+=L.size;d.bindBuffer(d.ARRAY_BUFFER,L.buffer);d.bufferData(d.ARRAY_BUFFER,L.array,l)}}}i.__dirtyVertices=!1;i.__dirtyColors=!1;j.attributes&&qa(j)}else if(k instanceof THREE.ParticleSystem)j=c(k,p),m=j.attributes&&ka(j),(i.__dirtyVertices||i.__dirtyColors||k.sortParticles||m)&&e(i,d.DYNAMIC_DRAW,k),i.__dirtyVertices=!1,i.__dirtyColors=!1,j.attributes&&qa(j)};this.setFaceCulling=function(a,
b){a?(!b||b==="ccw"?d.frontFace(d.CCW):d.frontFace(d.CW),a==="back"?d.cullFace(d.BACK):a==="front"?d.cullFace(d.FRONT):d.cullFace(d.FRONT_AND_BACK),d.enable(d.CULL_FACE)):d.disable(d.CULL_FACE)};this.supportsVertexTextures=function(){return bb}};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=c.wrapS!==void 0?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=c.wrapT!==void 0?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=c.magFilter!==void 0?c.magFilter:THREE.LinearFilter;this.minFilter=c.minFilter!==void 0?c.minFilter:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=c.format!==void 0?c.format:THREE.RGBAFormat;this.type=c.type!==void 0?c.type:
THREE.UnsignedByteType;this.depthBuffer=c.depthBuffer!==void 0?c.depthBuffer:!0;this.stencilBuffer=c.stencilBuffer!==void 0?c.stencilBuffer:!0};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;return a};THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};
THREE.WebGLRenderTargetCube.prototype=new THREE.WebGLRenderTarget;THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;
