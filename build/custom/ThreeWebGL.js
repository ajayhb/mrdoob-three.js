// ThreeWebGL.js r46dev - http://github.com/mrdoob/three.js
var THREE=THREE||{};if(!self.Int32Array)self.Int32Array=Array,self.Float32Array=Array;THREE.Color=function(a){a!==void 0&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var e,h,f;if(c===0)this.r=this.g=this.b=0;else switch(e=Math.floor(a*6),h=a*6-e,a=c*(1-b),f=c*(1-
b*h),b=c*(1-b*(1-h)),e){case 1:this.r=f;this.g=c;this.b=a;break;case 2:this.r=a;this.g=c;this.b=b;break;case 3:this.r=a;this.g=f;this.b=c;break;case 4:this.r=b;this.g=a;this.b=c;break;case 5:this.r=c;this.g=a;this.b=f;break;case 6:case 0:this.r=c,this.g=b,this.b=a}return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},getHex:function(){return~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},getContextStyle:function(){return"rgb("+
Math.floor(this.r*255)+","+Math.floor(this.g*255)+","+Math.floor(this.b*255)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},
divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},
equals:function(a){return a.x===this.x&&a.y===this.y}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},
addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},
divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):this.set(0,0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return this.x+this.y+this.z},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){return this.set(this.y*a.z-this.z*a.y,this.z*a.x-this.x*a.z,this.x*a.y-this.y*a.x)},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,a).lengthSq()},setPositionFromMatrix:function(a){this.x=a.n14;this.y=a.n24;this.z=a.n34},setRotationFromMatrix:function(a){var b=Math.cos(this.y);this.y=Math.asin(a.n13);
Math.abs(b)>1.0E-5?(this.x=Math.atan2(-a.n23/b,a.n33/b),this.z=Math.atan2(-a.n12/b,a.n11/b)):(this.x=0,this.z=Math.atan2(a.n21,a.n22))},isZero:function(){return this.lengthSq()<1.0E-4}};THREE.Vector4=function(a,b,c,e){this.x=a||0;this.y=b||0;this.z=c||0;this.w=e!==void 0?e:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,e){this.x=a;this.y=b;this.z=c;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w!==void 0?a.w:1},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-
b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},
normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this}};THREE.Ray=function(a,b){this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3};
THREE.Ray.prototype={constructor:THREE.Ray,intersectScene:function(a){return this.intersectObjects(a.children)},intersectObjects:function(a){var b,c,e=[];b=0;for(c=a.length;b<c;b++)Array.prototype.push.apply(e,this.intersectObject(a[b]));e.sort(function(a,b){return a.distance-b.distance});return e},intersectObject:function(a){function b(a,b,c){var e;e=c.clone().subSelf(a).dot(b);if(e<=0)return null;a=a.clone().addSelf(b.clone().multiplyScalar(e));return c.distanceTo(a)}function c(a,b,c,A){e.copy(A).subSelf(b);
h.copy(c).subSelf(b);f.copy(a).subSelf(b);i=e.dot(e);j=e.dot(h);m=e.dot(f);o=h.dot(h);k=h.dot(f);p=1/(i*o-j*j);z=(o*m-j*k)*p;y=(i*k-j*m)*p;return z>=0&&y>=0&&z+y<1}for(var e=new THREE.Vector3,h=new THREE.Vector3,f=new THREE.Vector3,i,j,m,o,k,p,z,y,A,D=[],B=0,ra=a.children.length;B<ra;B++)Array.prototype.push.apply(D,this.intersectObject(a.children[B]));if(a instanceof THREE.Particle){B=b(this.origin,this.direction,a.matrixWorld.getPosition());if(B===null||B>a.scale.x)return[];A={distance:B,point:a.position,
face:null,object:a};D.push(A)}else if(a instanceof THREE.Mesh){B=b(this.origin,this.direction,a.matrixWorld.getPosition());if(B===null||B>a.geometry.boundingSphere.radius*Math.max(a.scale.x,Math.max(a.scale.y,a.scale.z)))return D;var J,ka,oa,S,ca,G,R,$,F=a.geometry,N=F.vertices;a.matrixRotationWorld.extractRotation(a.matrixWorld);B=0;for(ra=F.faces.length;B<ra;B++)if(A=F.faces[B],R=this.origin.clone(),$=this.direction.clone(),S=a.matrixWorld,J=S.multiplyVector3(A.centroid.clone()).subSelf(R),G=J.dot($),
!(G<=0)&&(J=S.multiplyVector3(N[A.a].position.clone()),ka=S.multiplyVector3(N[A.b].position.clone()),oa=S.multiplyVector3(N[A.c].position.clone()),S=A instanceof THREE.Face4?S.multiplyVector3(N[A.d].position.clone()):null,ca=a.matrixRotationWorld.multiplyVector3(A.normal.clone()),G=$.dot(ca),a.doubleSided||(a.flipSided?G>0:G<0)))if(G=ca.dot((new THREE.Vector3).sub(J,R))/G,R=R.addSelf($.multiplyScalar(G)),A instanceof THREE.Face3)c(R,J,ka,oa)&&(A={distance:this.origin.distanceTo(R),point:R,face:A,
object:a},D.push(A));else if(A instanceof THREE.Face4&&(c(R,J,ka,S)||c(R,ka,oa,S)))A={distance:this.origin.distanceTo(R),point:R,face:A,object:a},D.push(A)}return D}};
THREE.Rectangle=function(){function a(){f=e-b;i=h-c}var b,c,e,h,f,i,j=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return f};this.getHeight=function(){return i};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return e};this.getBottom=function(){return h};this.set=function(f,i,k,p){j=!1;b=f;c=i;e=k;h=p;a()};this.addPoint=function(f,i){j?(j=!1,b=f,c=i,e=f,h=i):(b=b<f?b:f,c=c<i?c:i,e=e>f?e:f,h=h>i?h:i);a()};this.add3Points=
function(f,i,k,p,z,y){j?(j=!1,b=f<k?f<z?f:z:k<z?k:z,c=i<p?i<y?i:y:p<y?p:y,e=f>k?f>z?f:z:k>z?k:z,h=i>p?i>y?i:y:p>y?p:y):(b=f<k?f<z?f<b?f:b:z<b?z:b:k<z?k<b?k:b:z<b?z:b,c=i<p?i<y?i<c?i:c:y<c?y:c:p<y?p<c?p:c:y<c?y:c,e=f>k?f>z?f>e?f:e:z>e?z:e:k>z?k>e?k:e:z>e?z:e,h=i>p?i>y?i>h?i:h:y>h?y:h:p>y?p>h?p:h:y>h?y:h);a()};this.addRectangle=function(f){j?(j=!1,b=f.getLeft(),c=f.getTop(),e=f.getRight(),h=f.getBottom()):(b=b<f.getLeft()?b:f.getLeft(),c=c<f.getTop()?c:f.getTop(),e=e>f.getRight()?e:f.getRight(),h=h>
f.getBottom()?h:f.getBottom());a()};this.inflate=function(f){b-=f;c-=f;e+=f;h+=f;a()};this.minSelf=function(f){b=b>f.getLeft()?b:f.getLeft();c=c>f.getTop()?c:f.getTop();e=e<f.getRight()?e:f.getRight();h=h<f.getBottom()?h:f.getBottom();a()};this.intersects=function(a){return Math.min(e,a.getRight())-Math.max(b,a.getLeft())>=0&&Math.min(h,a.getBottom())-Math.max(c,a.getTop())>=0};this.empty=function(){j=!0;h=e=c=b=0;a()};this.isEmpty=function(){return j}};
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,e,h){return e+(a-b)*(h-e)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535}};THREE.Matrix3=function(){this.m=[]};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,transpose:function(){var a,b=this.m;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};
THREE.Matrix4=function(a,b,c,e,h,f,i,j,m,o,k,p,z,y,A,D){this.set(a!==void 0?a:1,b||0,c||0,e||0,h||0,f!==void 0?f:1,i||0,j||0,m||0,o||0,k!==void 0?k:1,p||0,z||0,y||0,A||0,D!==void 0?D:1);this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,e,h,f,i,j,m,o,k,p,z,y,A,D){this.n11=a;this.n12=b;this.n13=c;this.n14=e;this.n21=h;this.n22=f;this.n23=i;this.n24=j;this.n31=m;this.n32=o;this.n33=k;this.n34=p;this.n41=z;this.n42=y;this.n43=A;this.n44=D;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.set(a.n11,a.n12,a.n13,a.n14,a.n21,a.n22,a.n23,a.n24,a.n31,a.n32,a.n33,a.n34,a.n41,a.n42,a.n43,a.n44);return this},lookAt:function(a,
b,c){var e=THREE.Matrix4.__v1,h=THREE.Matrix4.__v2,f=THREE.Matrix4.__v3;f.sub(a,b).normalize();if(f.length()===0)f.z=1;e.cross(c,f).normalize();e.length()===0&&(f.x+=1.0E-4,e.cross(c,f).normalize());h.cross(f,e).normalize();this.n11=e.x;this.n12=h.x;this.n13=f.x;this.n21=e.y;this.n22=h.y;this.n23=f.y;this.n31=e.z;this.n32=h.z;this.n33=f.z;return this},multiply:function(a,b){var c=a.n11,e=a.n12,h=a.n13,f=a.n14,i=a.n21,j=a.n22,m=a.n23,o=a.n24,k=a.n31,p=a.n32,z=a.n33,y=a.n34,A=a.n41,D=a.n42,B=a.n43,
ra=a.n44,J=b.n11,ka=b.n12,oa=b.n13,S=b.n14,ca=b.n21,G=b.n22,R=b.n23,$=b.n24,F=b.n31,N=b.n32,na=b.n33,ua=b.n34,ta=b.n41,U=b.n42,K=b.n43,d=b.n44;this.n11=c*J+e*ca+h*F+f*ta;this.n12=c*ka+e*G+h*N+f*U;this.n13=c*oa+e*R+h*na+f*K;this.n14=c*S+e*$+h*ua+f*d;this.n21=i*J+j*ca+m*F+o*ta;this.n22=i*ka+j*G+m*N+o*U;this.n23=i*oa+j*R+m*na+o*K;this.n24=i*S+j*$+m*ua+o*d;this.n31=k*J+p*ca+z*F+y*ta;this.n32=k*ka+p*G+z*N+y*U;this.n33=k*oa+p*R+z*na+y*K;this.n34=k*S+p*$+z*ua+y*d;this.n41=A*J+D*ca+B*F+ra*ta;this.n42=A*ka+
D*G+B*N+ra*U;this.n43=A*oa+D*R+B*na+ra*K;this.n44=A*S+D*$+B*ua+ra*d;return this},multiplySelf:function(a){return this.multiply(this,a)},multiplyToArray:function(a,b,c){this.multiply(a,b);c[0]=this.n11;c[1]=this.n21;c[2]=this.n31;c[3]=this.n41;c[4]=this.n12;c[5]=this.n22;c[6]=this.n32;c[7]=this.n42;c[8]=this.n13;c[9]=this.n23;c[10]=this.n33;c[11]=this.n43;c[12]=this.n14;c[13]=this.n24;c[14]=this.n34;c[15]=this.n44;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=
a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},multiplyVector3:function(a){var b=a.x,c=a.y,e=a.z,h=1/(this.n41*b+this.n42*c+this.n43*e+this.n44);a.x=(this.n11*b+this.n12*c+this.n13*e+this.n14)*h;a.y=(this.n21*b+this.n22*c+this.n23*e+this.n24)*h;a.z=(this.n31*b+this.n32*c+this.n33*e+this.n34)*h;return a},multiplyVector4:function(a){var b=a.x,c=a.y,e=a.z,h=a.w;a.x=this.n11*b+this.n12*c+this.n13*
e+this.n14*h;a.y=this.n21*b+this.n22*c+this.n23*e+this.n24*h;a.z=this.n31*b+this.n32*c+this.n33*e+this.n34*h;a.w=this.n41*b+this.n42*c+this.n43*e+this.n44*h;return a},rotateAxis:function(a){var b=a.x,c=a.y,e=a.z;a.x=b*this.n11+c*this.n12+e*this.n13;a.y=b*this.n21+c*this.n22+e*this.n23;a.z=b*this.n31+c*this.n32+e*this.n33;a.normalize();return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*
a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},determinant:function(){var a=this.n11,b=this.n12,c=this.n13,e=this.n14,h=this.n21,f=this.n22,i=this.n23,j=this.n24,m=this.n31,o=this.n32,k=this.n33,p=this.n34,z=this.n41,y=this.n42,A=this.n43,D=this.n44;return e*i*o*z-c*j*o*z-e*f*k*z+b*j*k*z+c*f*p*z-b*i*p*z-e*i*m*y+c*j*m*y+e*h*k*y-a*j*k*y-c*h*p*y+a*i*p*y+e*f*m*A-b*j*m*A-e*h*o*A+a*j*o*A+b*h*p*A-a*f*p*A-c*f*m*D+b*i*m*D+
c*h*o*D-a*i*o*D-b*h*k*D+a*f*k*D},transpose:function(){var a;a=this.n21;this.n21=this.n12;this.n12=a;a=this.n31;this.n31=this.n13;this.n13=a;a=this.n32;this.n32=this.n23;this.n23=a;a=this.n41;this.n41=this.n14;this.n14=a;a=this.n42;this.n42=this.n24;this.n24=a;a=this.n43;this.n43=this.n34;this.n43=a;return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;
a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){this.flat[0]=this.n11;this.flat[1]=this.n21;this.flat[2]=this.n31;this.flat[3]=this.n41;this.flat[4]=this.n12;this.flat[5]=this.n22;this.flat[6]=this.n32;this.flat[7]=this.n42;this.flat[8]=this.n13;this.flat[9]=this.n23;this.flat[10]=this.n33;this.flat[11]=this.n43;this.flat[12]=this.n14;this.flat[13]=this.n24;this.flat[14]=this.n34;this.flat[15]=this.n44;return this.flat},flattenToArray:function(a){a[0]=
this.n11;a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},flattenToArrayOffset:function(a,b){a[b]=this.n11;a[b+1]=this.n21;a[b+2]=this.n31;a[b+3]=this.n41;a[b+4]=this.n12;a[b+5]=this.n22;a[b+6]=this.n32;a[b+7]=this.n42;a[b+8]=this.n13;a[b+9]=this.n23;a[b+10]=this.n33;a[b+11]=this.n43;a[b+12]=this.n14;a[b+13]=this.n24;a[b+14]=
this.n34;a[b+15]=this.n44;return a},setTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},setScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},setRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},setRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},setRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,-a,0,
0,a,b,0,0,0,0,1,0,0,0,0,1);return this},setRotationAxis:function(a,b){var c=Math.cos(b),e=Math.sin(b),h=1-c,f=a.x,i=a.y,j=a.z,m=h*f,o=h*i;this.set(m*f+c,m*i-e*j,m*j+e*i,0,m*i+e*j,o*i+c,o*j-e*f,0,m*j-e*i,o*j+e*f,h*j*j+c,0,0,0,0,1);return this},setPosition:function(a){this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},getPosition:function(){return THREE.Matrix4.__v1.set(this.n14,this.n24,this.n34)},getColumnX:function(){return THREE.Matrix4.__v1.set(this.n11,this.n21,this.n31)},getColumnY:function(){return THREE.Matrix4.__v1.set(this.n12,
this.n22,this.n32)},getColumnZ:function(){return THREE.Matrix4.__v1.set(this.n13,this.n23,this.n33)},getInverse:function(a){var b=a.n11,c=a.n12,e=a.n13,h=a.n14,f=a.n21,i=a.n22,j=a.n23,m=a.n24,o=a.n31,k=a.n32,p=a.n33,z=a.n34,y=a.n41,A=a.n42,D=a.n43,B=a.n44;this.n11=j*z*A-m*p*A+m*k*D-i*z*D-j*k*B+i*p*B;this.n12=h*p*A-e*z*A-h*k*D+c*z*D+e*k*B-c*p*B;this.n13=e*m*A-h*j*A+h*i*D-c*m*D-e*i*B+c*j*B;this.n14=h*j*k-e*m*k-h*i*p+c*m*p+e*i*z-c*j*z;this.n21=m*p*y-j*z*y-m*o*D+f*z*D+j*o*B-f*p*B;this.n22=e*z*y-h*p*y+
h*o*D-b*z*D-e*o*B+b*p*B;this.n23=h*j*y-e*m*y-h*f*D+b*m*D+e*f*B-b*j*B;this.n24=e*m*o-h*j*o+h*f*p-b*m*p-e*f*z+b*j*z;this.n31=i*z*y-m*k*y+m*o*A-f*z*A-i*o*B+f*k*B;this.n32=h*k*y-c*z*y-h*o*A+b*z*A+c*o*B-b*k*B;this.n33=e*m*y-h*i*y+h*f*A-b*m*A-c*f*B+b*i*B;this.n34=h*i*o-c*m*o-h*f*k+b*m*k+c*f*z-b*i*z;this.n41=j*k*y-i*p*y-j*o*A+f*p*A+i*o*D-f*k*D;this.n42=c*p*y-e*k*y+e*o*A-b*p*A-c*o*D+b*k*D;this.n43=e*i*y-c*j*y-e*f*A+b*j*A+c*f*D-b*i*D;this.n44=c*j*o-e*i*o+e*f*k-b*j*k-c*f*p+b*i*p;this.multiplyScalar(1/a.determinant());
return this},setRotationFromEuler:function(a,b){var c=a.x,e=a.y,h=a.z,f=Math.cos(c),c=Math.sin(c),i=Math.cos(e),e=Math.sin(e),j=Math.cos(h),h=Math.sin(h);switch(b){case "YXZ":var m=i*j,o=i*h,k=e*j,p=e*h;this.n11=m+p*c;this.n12=k*c-o;this.n13=f*e;this.n21=f*h;this.n22=f*j;this.n23=-c;this.n31=o*c-k;this.n32=p+m*c;this.n33=f*i;break;case "ZXY":m=i*j;o=i*h;k=e*j;p=e*h;this.n11=m-p*c;this.n12=-f*h;this.n13=k+o*c;this.n21=o+k*c;this.n22=f*j;this.n23=p-m*c;this.n31=-f*e;this.n32=c;this.n33=f*i;break;case "ZYX":m=
f*j;o=f*h;k=c*j;p=c*h;this.n11=i*j;this.n12=k*e-o;this.n13=m*e+p;this.n21=i*h;this.n22=p*e+m;this.n23=o*e-k;this.n31=-e;this.n32=c*i;this.n33=f*i;break;case "YZX":m=f*i;o=f*e;k=c*i;p=c*e;this.n11=i*j;this.n12=p-m*h;this.n13=k*h+o;this.n21=h;this.n22=f*j;this.n23=-c*j;this.n31=-e*j;this.n32=o*h+k;this.n33=m-p*h;break;case "XZY":m=f*i;o=f*e;k=c*i;p=c*e;this.n11=i*j;this.n12=-h;this.n13=e*j;this.n21=m*h+p;this.n22=f*j;this.n23=o*h-k;this.n31=k*h-o;this.n32=c*j;this.n33=p*h+m;break;default:m=f*j,o=f*
h,k=c*j,p=c*h,this.n11=i*j,this.n12=-i*h,this.n13=e,this.n21=o+k*e,this.n22=m-p*e,this.n23=-c*i,this.n31=p-m*e,this.n32=k+o*e,this.n33=f*i}return this},setRotationFromQuaternion:function(a){var b=a.x,c=a.y,e=a.z,h=a.w,f=b+b,i=c+c,j=e+e,a=b*f,m=b*i;b*=j;var o=c*i;c*=j;e*=j;f*=h;i*=h;h*=j;this.n11=1-(o+e);this.n12=m-h;this.n13=b+i;this.n21=m+h;this.n22=1-(a+e);this.n23=c-f;this.n31=b-i;this.n32=c+f;this.n33=1-(a+o);return this},scale:function(a){var b=a.x,c=a.y,a=a.z;this.n11*=b;this.n12*=c;this.n13*=
a;this.n21*=b;this.n22*=c;this.n23*=a;this.n31*=b;this.n32*=c;this.n33*=a;this.n41*=b;this.n42*=c;this.n43*=a;return this},compose:function(a,b,c){var e=THREE.Matrix4.__m1,h=THREE.Matrix4.__m2;e.identity();e.setRotationFromQuaternion(b);h.setScale(c.x,c.y,c.z);this.multiply(e,h);this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},decompose:function(a,b,c){var e=THREE.Matrix4.__v1,h=THREE.Matrix4.__v2,f=THREE.Matrix4.__v3;e.set(this.n11,this.n21,this.n31);h.set(this.n12,this.n22,this.n32);f.set(this.n13,
this.n23,this.n33);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=e.length();c.y=h.length();c.z=f.length();a.x=this.n14;a.y=this.n24;a.z=this.n34;e=THREE.Matrix4.__m1;e.copy(this);e.n11/=c.x;e.n21/=c.x;e.n31/=c.x;e.n12/=c.y;e.n22/=c.y;e.n32/=c.y;e.n13/=c.z;e.n23/=c.z;e.n33/=c.z;b.setFromRotationMatrix(e);return[a,b,c]},extractPosition:function(a){this.n14=a.n14;this.n24=a.n24;this.n34=a.n34;
return this},extractRotation:function(a){var b=THREE.Matrix4.__v1,c=1/b.set(a.n11,a.n21,a.n31).length(),e=1/b.set(a.n12,a.n22,a.n32).length(),b=1/b.set(a.n13,a.n23,a.n33).length();this.n11=a.n11*c;this.n21=a.n21*c;this.n31=a.n31*c;this.n12=a.n12*e;this.n22=a.n22*e;this.n32=a.n32*e;this.n13=a.n13*b;this.n23=a.n23*b;this.n33=a.n33*b;return this}};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.m33,c=b.m,e=a.n33*a.n22-a.n32*a.n23,h=-a.n33*a.n21+a.n31*a.n23,f=a.n32*a.n21-a.n31*a.n22,i=-a.n33*a.n12+a.n32*a.n13,j=a.n33*a.n11-a.n31*a.n13,m=-a.n32*a.n11+a.n31*a.n12,o=a.n23*a.n12-a.n22*a.n13,k=-a.n23*a.n11+a.n21*a.n13,p=a.n22*a.n11-a.n21*a.n12,a=a.n11*e+a.n21*i+a.n31*o;a===0&&console.error("THREE.Matrix4.makeInvert3x3: Matrix not invertible.");a=1/a;c[0]=a*e;c[1]=a*h;c[2]=a*f;c[3]=a*i;c[4]=a*j;c[5]=a*m;c[6]=a*o;c[7]=a*k;c[8]=a*p;return b};
THREE.Matrix4.makeFrustum=function(a,b,c,e,h,f){var i;i=new THREE.Matrix4;i.n11=2*h/(b-a);i.n12=0;i.n13=(b+a)/(b-a);i.n14=0;i.n21=0;i.n22=2*h/(e-c);i.n23=(e+c)/(e-c);i.n24=0;i.n31=0;i.n32=0;i.n33=-(f+h)/(f-h);i.n34=-2*f*h/(f-h);i.n41=0;i.n42=0;i.n43=-1;i.n44=0;return i};THREE.Matrix4.makePerspective=function(a,b,c,e){var h,a=c*Math.tan(a*Math.PI/360);h=-a;return THREE.Matrix4.makeFrustum(h*b,a*b,h,a,c,e)};
THREE.Matrix4.makeOrtho=function(a,b,c,e,h,f){var i,j,m,o;i=new THREE.Matrix4;j=b-a;m=c-e;o=f-h;i.n11=2/j;i.n12=0;i.n13=0;i.n14=-((b+a)/j);i.n21=0;i.n22=2/m;i.n23=0;i.n24=-((c+e)/m);i.n31=0;i.n32=0;i.n33=-2/o;i.n34=-((f+h)/o);i.n41=0;i.n42=0;i.n43=0;i.n44=1;return i};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.Object3D=function(){this.name="";this.id=THREE.Object3DCount++;this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder="XYZ";this.scale=new THREE.Vector3(1,1,1);this.flipSided=this.doubleSided=this.dynamic=!1;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=
!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)},add:function(a){if(this.children.indexOf(a)===
-1){a.parent!==void 0&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(b!==-1){a.parent=void 0;this.children.splice(b,1);for(b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.removeObject(a)}},getChildByName:function(a,b){var c,e,h;c=0;for(e=this.children.length;c<e;c++){h=this.children[c];if(h.name===a)return h;
if(b&&(h=h.getChildByName(a,b),h!==void 0))return h}},updateMatrix:function(){this.matrix.setPosition(this.position);this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder);if(this.scale.x!==1||this.scale.y!==1||this.scale.z!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&
this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)}};THREE.Object3DCount=0;
THREE.Projector=function(){function a(){var a=i[f]=i[f]||new THREE.RenderableObject;f++;return a}function b(){var a=o[m]=o[m]||new THREE.RenderableVertex;m++;return a}function c(a,b){return b.z-a.z}function e(a,b){var c=0,e=1,d=a.z+a.w,f=b.z+b.w,h=-a.z+a.w,i=-b.z+b.w;return d>=0&&f>=0&&h>=0&&i>=0?!0:d<0&&f<0||h<0&&i<0?!1:(d<0?c=Math.max(c,d/(d-f)):f<0&&(e=Math.min(e,d/(d-f))),h<0?c=Math.max(c,h/(h-i)):i<0&&(e=Math.min(e,h/(h-i))),e<c?!1:(a.lerpSelf(b,c),b.lerpSelf(a,1-e),!0))}var h,f,i=[],j,m,o=[],
k,p,z=[],y,A=[],D,B,ra=[],J,ka,oa=[],S={objects:[],sprites:[],lights:[],elements:[]},ca=new THREE.Vector3,G=new THREE.Vector4,R=new THREE.Matrix4,$=new THREE.Matrix4,F=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],N=new THREE.Vector4,na=new THREE.Vector4;this.computeFrustum=function(a){F[0].set(a.n41-a.n11,a.n42-a.n12,a.n43-a.n13,a.n44-a.n14);F[1].set(a.n41+a.n11,a.n42+a.n12,a.n43+a.n13,a.n44+a.n14);F[2].set(a.n41+a.n21,a.n42+a.n22,a.n43+
a.n23,a.n44+a.n24);F[3].set(a.n41-a.n21,a.n42-a.n22,a.n43-a.n23,a.n44-a.n24);F[4].set(a.n41-a.n31,a.n42-a.n32,a.n43-a.n33,a.n44-a.n34);F[5].set(a.n41+a.n31,a.n42+a.n32,a.n43+a.n33,a.n44+a.n34);for(a=0;a<6;a++){var b=F[a];b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))}};this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);R.multiply(b.projectionMatrix,b.matrixWorldInverse);R.multiplyVector3(a);return a};this.unprojectVector=function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);
R.multiply(b.matrixWorld,b.projectionMatrixInverse);R.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectGraph=function(b,e){f=0;S.objects.length=0;S.sprites.length=0;S.lights.length=0;var i=function(b){if(b.visible!==!1){var d;if(d=b instanceof THREE.Mesh||b instanceof THREE.Line)if(!(d=b.frustumCulled===!1))a:{for(var c=b.matrixWorld,
e=-b.geometry.boundingSphere.radius*Math.max(b.scale.x,Math.max(b.scale.y,b.scale.z)),f=0;f<6;f++)if(d=F[f].x*c.n14+F[f].y*c.n24+F[f].z*c.n34+F[f].w,d<=e){d=!1;break a}d=!0}d?(R.multiplyVector3(ca.copy(b.position)),h=a(),h.object=b,h.z=ca.z,S.objects.push(h)):b instanceof THREE.Sprite||b instanceof THREE.Particle?(R.multiplyVector3(ca.copy(b.position)),h=a(),h.object=b,h.z=ca.z,S.sprites.push(h)):b instanceof THREE.Light&&S.lights.push(b);d=0;for(c=b.children.length;d<c;d++)i(b.children[d])}};i(b);
e&&S.objects.sort(c);return S};this.projectScene=function(a,f,h){var i=f.near,d=f.far,F,ca,ha,pa,L,qa,V,sa,P,va,ya,Fa,Ja,Ga,za,wa;ka=B=y=p=0;S.elements.length=0;f.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),a.add(f));a.updateMatrixWorld();f.matrixWorldInverse.getInverse(f.matrixWorld);R.multiply(f.projectionMatrix,f.matrixWorldInverse);this.computeFrustum(R);S=this.projectGraph(a,!1);a=0;for(F=S.objects.length;a<F;a++)if(P=S.objects[a].object,va=
P.matrixWorld,Fa=P.material,m=0,P instanceof THREE.Mesh){ya=P.geometry;Ja=P.geometry.materials;pa=ya.vertices;Ga=ya.faces;za=ya.faceVertexUvs;ya=P.matrixRotationWorld.extractRotation(va);ca=0;for(ha=pa.length;ca<ha;ca++)j=b(),j.positionWorld.copy(pa[ca].position),va.multiplyVector3(j.positionWorld),j.positionScreen.copy(j.positionWorld),R.multiplyVector4(j.positionScreen),j.positionScreen.x/=j.positionScreen.w,j.positionScreen.y/=j.positionScreen.w,j.visible=j.positionScreen.z>i&&j.positionScreen.z<
d;pa=0;for(ca=Ga.length;pa<ca;pa++){ha=Ga[pa];if(ha instanceof THREE.Face3)if(L=o[ha.a],qa=o[ha.b],V=o[ha.c],L.visible&&qa.visible&&V.visible&&(P.doubleSided||P.flipSided!=(V.positionScreen.x-L.positionScreen.x)*(qa.positionScreen.y-L.positionScreen.y)-(V.positionScreen.y-L.positionScreen.y)*(qa.positionScreen.x-L.positionScreen.x)<0))sa=z[p]=z[p]||new THREE.RenderableFace3,p++,k=sa,k.v1.copy(L),k.v2.copy(qa),k.v3.copy(V);else continue;else if(ha instanceof THREE.Face4)if(L=o[ha.a],qa=o[ha.b],V=o[ha.c],
sa=o[ha.d],L.visible&&qa.visible&&V.visible&&sa.visible&&(P.doubleSided||P.flipSided!=((sa.positionScreen.x-L.positionScreen.x)*(qa.positionScreen.y-L.positionScreen.y)-(sa.positionScreen.y-L.positionScreen.y)*(qa.positionScreen.x-L.positionScreen.x)<0||(qa.positionScreen.x-V.positionScreen.x)*(sa.positionScreen.y-V.positionScreen.y)-(qa.positionScreen.y-V.positionScreen.y)*(sa.positionScreen.x-V.positionScreen.x)<0)))wa=A[y]=A[y]||new THREE.RenderableFace4,y++,k=wa,k.v1.copy(L),k.v2.copy(qa),k.v3.copy(V),
k.v4.copy(sa);else continue;k.normalWorld.copy(ha.normal);ya.multiplyVector3(k.normalWorld);k.centroidWorld.copy(ha.centroid);va.multiplyVector3(k.centroidWorld);k.centroidScreen.copy(k.centroidWorld);R.multiplyVector3(k.centroidScreen);V=ha.vertexNormals;L=0;for(qa=V.length;L<qa;L++)sa=k.vertexNormalsWorld[L],sa.copy(V[L]),ya.multiplyVector3(sa);L=0;for(qa=za.length;L<qa;L++)if(wa=za[L][pa]){V=0;for(sa=wa.length;V<sa;V++)k.uvs[L][V]=wa[V]}k.material=Fa;k.faceMaterial=ha.materialIndex!==null?Ja[ha.materialIndex]:
null;k.z=k.centroidScreen.z;S.elements.push(k)}}else if(P instanceof THREE.Line){$.multiply(R,va);pa=P.geometry.vertices;L=b();L.positionScreen.copy(pa[0].position);$.multiplyVector4(L.positionScreen);ca=1;for(ha=pa.length;ca<ha;ca++)if(L=b(),L.positionScreen.copy(pa[ca].position),$.multiplyVector4(L.positionScreen),qa=o[m-2],N.copy(L.positionScreen),na.copy(qa.positionScreen),e(N,na))N.multiplyScalar(1/N.w),na.multiplyScalar(1/na.w),P=ra[B]=ra[B]||new THREE.RenderableLine,B++,D=P,D.v1.positionScreen.copy(N),
D.v2.positionScreen.copy(na),D.z=Math.max(N.z,na.z),D.material=Fa,S.elements.push(D)}a=0;for(F=S.sprites.length;a<F;a++)if(P=S.sprites[a].object,va=P.matrixWorld,P instanceof THREE.Particle&&(G.set(va.n14,va.n24,va.n34,1),R.multiplyVector4(G),G.z/=G.w,G.z>0&&G.z<1))i=oa[ka]=oa[ka]||new THREE.RenderableParticle,ka++,J=i,J.x=G.x/G.w,J.y=G.y/G.w,J.z=G.z,J.rotation=P.rotation.z,J.scale.x=P.scale.x*Math.abs(J.x-(G.x+f.projectionMatrix.n11)/(G.w+f.projectionMatrix.n14)),J.scale.y=P.scale.y*Math.abs(J.y-
(G.y+f.projectionMatrix.n22)/(G.w+f.projectionMatrix.n24)),J.material=P.material,S.elements.push(J);h&&S.elements.sort(c);return S}};THREE.Quaternion=function(a,b,c,e){this.set(a||0,b||0,c||0,e!==void 0?e:1)};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,e){this.x=a;this.y=b;this.z=c;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a){var b=Math.PI/360,c=a.x*b,e=a.y*b,h=a.z*b,a=Math.cos(e),e=Math.sin(e),b=Math.cos(-h),h=Math.sin(-h),f=Math.cos(c),c=Math.sin(c),i=a*b,j=e*h;this.w=i*f-j*c;this.x=i*c+j*f;this.y=e*b*f+a*h*c;this.z=a*h*f-e*b*c;return this},setFromAxisAngle:function(a,b){var c=b/2,e=Math.sin(c);
this.x=a.x*e;this.y=a.y*e;this.z=a.z*e;this.w=Math.cos(c);return this},setFromRotationMatrix:function(a){var b=Math.pow(a.determinant(),1/3);this.w=Math.sqrt(Math.max(0,b+a.n11+a.n22+a.n33))/2;this.x=Math.sqrt(Math.max(0,b+a.n11-a.n22-a.n33))/2;this.y=Math.sqrt(Math.max(0,b-a.n11+a.n22-a.n33))/2;this.z=Math.sqrt(Math.max(0,b-a.n11-a.n22+a.n33))/2;this.x=a.n32-a.n23<0?-Math.abs(this.x):Math.abs(this.x);this.y=a.n13-a.n31<0?-Math.abs(this.y):Math.abs(this.y);this.z=a.n21-a.n12<0?-Math.abs(this.z):Math.abs(this.z);
this.normalize();return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);a===0?this.w=this.z=this.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiplySelf:function(a){var b=
this.x,c=this.y,e=this.z,h=this.w,f=a.x,i=a.y,j=a.z,a=a.w;this.x=b*a+h*f+c*j-e*i;this.y=c*a+h*i+e*f-b*j;this.z=e*a+h*j+b*i-c*f;this.w=h*a-b*f-c*i-e*j;return this},multiply:function(a,b){this.x=a.x*b.w+a.y*b.z-a.z*b.y+a.w*b.x;this.y=-a.x*b.z+a.y*b.w+a.z*b.x+a.w*b.y;this.z=a.x*b.y-a.y*b.x+a.z*b.w+a.w*b.z;this.w=-a.x*b.x-a.y*b.y-a.z*b.z+a.w*b.w;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,e=a.y,h=a.z,f=this.x,i=this.y,j=this.z,m=this.w,o=m*c+i*h-j*e,k=m*e+j*c-f*h,p=m*h+f*e-i*c,c=-f*
c-i*e-j*h;b.x=o*m+c*-f+k*-j-p*-i;b.y=k*m+c*-i+p*-f-o*-j;b.z=p*m+c*-j+o*-i-k*-f;return b}};
THREE.Quaternion.slerp=function(a,b,c,e){var h=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;h<0?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,h=-h):c.copy(b);if(Math.abs(h)>=1)return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;var f=Math.acos(h),h=Math.sqrt(1-h*h);if(Math.abs(h)<0.0010)return c.w=0.5*(a.w+b.w),c.x=0.5*(a.x+b.x),c.y=0.5*(a.y+b.y),c.z=0.5*(a.z+b.z),c;b=Math.sin((1-e)*f)/h;e=Math.sin(e*f)/h;c.w=a.w*b+c.w*e;c.x=a.x*b+c.x*e;c.y=a.y*b+c.y*e;c.z=a.z*b+c.z*e;return c};THREE.Vertex=function(a){this.position=a||new THREE.Vector3};
THREE.Face3=function(a,b,c,e,h,f){this.a=a;this.b=b;this.c=c;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=h instanceof THREE.Color?h:new THREE.Color;this.vertexColors=h instanceof Array?h:[];this.vertexTangents=[];this.materialIndex=f;this.centroid=new THREE.Vector3};
THREE.Face4=function(a,b,c,e,h,f,i){this.a=a;this.b=b;this.c=c;this.d=e;this.normal=h instanceof THREE.Vector3?h:new THREE.Vector3;this.vertexNormals=h instanceof Array?h:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=i;this.centroid=new THREE.Vector3};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){this.id=THREE.GeometryCount++;this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.dynamic=this.hasTangents=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a,new THREE.Vector3(1,1,1));for(var c=0,e=this.vertices.length;c<e;c++)a.multiplyVector3(this.vertices[c].position);c=0;for(e=this.faces.length;c<e;c++){var h=this.faces[c];b.multiplyVector3(h.normal);for(var f=0,i=h.vertexNormals.length;f<i;f++)b.multiplyVector3(h.vertexNormals[f]);a.multiplyVector3(h.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<
b;a++)c=this.faces[a],c.centroid.set(0,0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a].position),c.centroid.addSelf(this.vertices[c.b].position),c.centroid.addSelf(this.vertices[c.c].position),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a].position),c.centroid.addSelf(this.vertices[c.b].position),c.centroid.addSelf(this.vertices[c.c].position),c.centroid.addSelf(this.vertices[c.d].position),c.centroid.divideScalar(4))},computeFaceNormals:function(a){var b,
c,e,h,f,i,j=new THREE.Vector3,m=new THREE.Vector3;e=0;for(h=this.faces.length;e<h;e++){f=this.faces[e];if(a&&f.vertexNormals.length){j.set(0,0,0);b=0;for(c=f.vertexNormals.length;b<c;b++)j.addSelf(f.vertexNormals[b]);j.divideScalar(3)}else b=this.vertices[f.a],c=this.vertices[f.b],i=this.vertices[f.c],j.sub(i.position,c.position),m.sub(b.position,c.position),j.crossSelf(m);j.isZero()||j.normalize();f.normal.copy(j)}},computeVertexNormals:function(){var a,b,c,e;if(this.__tmpVertices===void 0){e=this.__tmpVertices=
Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)e[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)if(c=this.faces[a],c instanceof THREE.Face3)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(c instanceof THREE.Face4)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else{e=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)e[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof
THREE.Face3?(e[c.a].addSelf(c.normal),e[c.b].addSelf(c.normal),e[c.c].addSelf(c.normal)):c instanceof THREE.Face4&&(e[c.a].addSelf(c.normal),e[c.b].addSelf(c.normal),e[c.c].addSelf(c.normal),e[c.d].addSelf(c.normal));a=0;for(b=this.vertices.length;a<b;a++)e[a].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(c.vertexNormals[0].copy(e[c.a]),c.vertexNormals[1].copy(e[c.b]),c.vertexNormals[2].copy(e[c.c])):c instanceof THREE.Face4&&(c.vertexNormals[0].copy(e[c.a]),
c.vertexNormals[1].copy(e[c.b]),c.vertexNormals[2].copy(e[c.c]),c.vertexNormals[3].copy(e[c.d]))},computeTangents:function(){function a(a,b,c,e,f,h,K){j=a.vertices[b].position;m=a.vertices[c].position;o=a.vertices[e].position;k=i[f];p=i[h];z=i[K];y=m.x-j.x;A=o.x-j.x;D=m.y-j.y;B=o.y-j.y;ra=m.z-j.z;J=o.z-j.z;ka=p.u-k.u;oa=z.u-k.u;S=p.v-k.v;ca=z.v-k.v;G=1/(ka*ca-oa*S);N.set((ca*y-S*A)*G,(ca*D-S*B)*G,(ca*ra-S*J)*G);na.set((ka*A-oa*y)*G,(ka*B-oa*D)*G,(ka*J-oa*ra)*G);$[b].addSelf(N);$[c].addSelf(N);$[e].addSelf(N);
F[b].addSelf(na);F[c].addSelf(na);F[e].addSelf(na)}var b,c,e,h,f,i,j,m,o,k,p,z,y,A,D,B,ra,J,ka,oa,S,ca,G,R,$=[],F=[],N=new THREE.Vector3,na=new THREE.Vector3,ua=new THREE.Vector3,ta=new THREE.Vector3,U=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)$[b]=new THREE.Vector3,F[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)f=this.faces[b],i=this.faceVertexUvs[0][b],f instanceof THREE.Face3?a(this,f.a,f.b,f.c,0,1,2):f instanceof THREE.Face4&&(a(this,f.a,f.b,f.c,0,1,2),a(this,f.a,f.b,
f.d,0,1,3));var K=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){f=this.faces[b];for(e=0;e<f.vertexNormals.length;e++)U.copy(f.vertexNormals[e]),h=f[K[e]],R=$[h],ua.copy(R),ua.subSelf(U.multiplyScalar(U.dot(R))).normalize(),ta.cross(f.vertexNormals[e],R),h=ta.dot(F[h]),h=h<0?-1:1,f.vertexTangents[e]=new THREE.Vector4(ua.x,ua.y,ua.z,h)}this.hasTangents=!0},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],
y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,c=this.vertices.length;b<c;b++){a=this.vertices[b];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<
this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=0,b=0,c=this.vertices.length;b<c;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},mergeVertices:function(){var a={},b=[],c=[],e,h=Math.pow(10,4),f,i;f=0;for(i=this.vertices.length;f<i;f++)e=this.vertices[f].position,e=[Math.round(e.x*h),Math.round(e.y*h),Math.round(e.z*h)].join("_"),
a[e]===void 0?(a[e]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[e]];f=0;for(i=this.faces.length;f<i;f++)if(a=this.faces[f],a instanceof THREE.Face3)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c];else if(a instanceof THREE.Face4)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c],a.d=c[a.d];this.vertices=b}};THREE.GeometryCount=0;
THREE.Spline=function(a){function b(a,b,c,e,f,h,i){a=(c-a)*0.5;e=(e-b)*0.5;return(2*(b-c)+a+e)*i+(-3*(b-c)-2*a-e)*h+a*f+b}this.points=a;var c=[],e={x:0,y:0,z:0},h,f,i,j,m,o,k,p,z;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){h=(this.points.length-1)*a;f=Math.floor(h);i=h-f;c[0]=f===0?f:f-1;c[1]=f;c[2]=f>this.points.length-2?f:f+1;c[3]=f>this.points.length-3?f:f+2;o=this.points[c[0]];k=this.points[c[1]];
p=this.points[c[2]];z=this.points[c[3]];j=i*i;m=i*j;e.x=b(o.x,k.x,p.x,z.x,i,j,m);e.y=b(o.y,k.y,p.y,z.y,i,j,m);e.z=b(o.z,k.z,p.z,z.z,i,j,m);return e};this.getControlPointsArray=function(){var a,b,c=this.points.length,e=[];for(a=0;a<c;a++)b=this.points[a],e[a]=[b.x,b.y,b.z];return e};this.getLength=function(a){var b,c,e=b=b=0,f=new THREE.Vector3,h=new THREE.Vector3,i=[],j=0;i[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=a/c,position=this.getPoint(b),h.copy(position),
j+=h.distanceTo(f),f.copy(position),b*=this.points.length-1,b=Math.floor(b),b!=e&&(i[b]=j,e=b);i[i.length]=j;return{chunks:i,total:j}};this.reparametrizeByArcLength=function(a){var b,c,e,f,h,i,j=[],k=new THREE.Vector3,m=this.getLength();j.push(k.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=m.chunks[b]-m.chunks[b-1];i=Math.ceil(a*c/m.total);f=(b-1)/(this.points.length-1);h=b/(this.points.length-1);for(c=1;c<i-1;c++)e=f+c*(1/i)*(h-f),position=this.getPoint(e),j.push(k.copy(position).clone());
j.push(k.copy(this.points[b]).clone())}this.points=j}};THREE.Edge=function(a,b,c,e){this.vertices=[a,b];this.vertexIndices=[c,e];this.faces=[];this.faceIndices=[]};
THREE.Camera=function(){if(arguments.length)return console.warn("DEPRECATED: Camera() is now PerspectiveCamera() or OrthographicCamera()."),new THREE.PerspectiveCamera(arguments[0],arguments[1],arguments[2],arguments[3]);THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=new THREE.Object3D;THREE.Camera.prototype.constructor=THREE.Camera;
THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)};THREE.OrthographicCamera=function(a,b,c,e,h,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=e;this.near=h!==void 0?h:0.1;this.far=f!==void 0?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=new THREE.Camera;THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;
THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makeOrtho(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.PerspectiveCamera=function(a,b,c,e){THREE.Camera.call(this);this.fov=a!==void 0?a:50;this.aspect=b!==void 0?b:1;this.near=c!==void 0?c:0.1;this.far=e!==void 0?e:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=new THREE.Camera;THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;
THREE.PerspectiveCamera.prototype.setLens=function(a,b){this.fov=2*Math.atan((b!==void 0?b:43.25)/(a*2));this.fov*=180/Math.PI;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,e,h,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=e;this.width=h;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,e=a*c,a=Math.abs(a*b-e),c=Math.abs(b-c);this.projectionMatrix=THREE.Matrix4.makeFrustum(e+this.x*a/this.fullWidth,e+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,
this.far)};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=new THREE.Object3D;THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.supr=THREE.Object3D.prototype;THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;
THREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0};THREE.PointLight.prototype=new THREE.Light;
THREE.PointLight.prototype.constructor=THREE.PointLight;THREE.SpotLight=function(a,b,c,e){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0;this.castShadow=e!==void 0?e:!1};THREE.SpotLight.prototype=new THREE.Light;THREE.SpotLight.prototype.constructor=THREE.SpotLight;
THREE.Material=function(a){this.name="";this.id=THREE.MaterialCount++;a=a||{};this.opacity=a.opacity!==void 0?a.opacity:1;this.transparent=a.transparent!==void 0?a.transparent:!1;this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.depthTest=a.depthTest!==void 0?a.depthTest:!0;this.depthWrite=a.depthWrite!==void 0?a.depthWrite:!0;this.polygonOffset=a.polygonOffset!==void 0?a.polygonOffset:!1;this.polygonOffsetFactor=a.polygonOffsetFactor!==void 0?a.polygonOffsetFactor:0;this.polygonOffsetUnits=
a.polygonOffsetUnits!==void 0?a.polygonOffsetUnits:0;this.alphaTest=a.alphaTest!==void 0?a.alphaTest:0;this.overdraw=a.overdraw!==void 0?a.overdraw:!1};THREE.MaterialCount=0;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;THREE.MultiplyBlending=3;THREE.AdditiveAlphaBlending=4;
THREE.LineBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.linewidth=a.linewidth!==void 0?a.linewidth:1;this.linecap=a.linecap!==void 0?a.linecap:"round";this.linejoin=a.linejoin!==void 0?a.linejoin:"round";this.vertexColors=a.vertexColors?a.vertexColors:!1;this.fog=a.fog!==void 0?a.fog:!0};THREE.LineBasicMaterial.prototype=new THREE.Material;THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:null;this.lightMap=a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:
!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:
!1};THREE.MeshBasicMaterial.prototype=new THREE.Material;THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(328965);this.map=a.map!==void 0?a.map:null;this.lightMap=a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=
a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=
a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.MeshLambertMaterial.prototype=new THREE.Material;THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(328965);this.specular=a.specular!==void 0?new THREE.Color(a.specular):new THREE.Color(1118481);this.shininess=a.shininess!==void 0?a.shininess:30;this.metal=a.metal!==void 0?a.metal:!1;this.perPixel=a.perPixel!==void 0?a.perPixel:!1;this.map=a.map!==void 0?a.map:null;this.lightMap=
a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=
a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.MeshPhongMaterial.prototype=new THREE.Material;THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1};THREE.MeshDepthMaterial.prototype=new THREE.Material;THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading?a.shading:THREE.FlatShading;this.wireframe=a.wireframe?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth?a.wireframeLinewidth:1};THREE.MeshNormalMaterial.prototype=new THREE.Material;THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshFaceMaterial=function(){};
THREE.MeshShaderMaterial=function(a){console.warn("DEPRECATED: MeshShaderMaterial() is now ShaderMaterial().");return new THREE.ShaderMaterial(a)};
THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:null;this.size=a.size!==void 0?a.size:1;this.sizeAttenuation=a.sizeAttenuation!==void 0?a.sizeAttenuation:!0;this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.fog=a.fog!==void 0?a.fog:!0};THREE.ParticleBasicMaterial.prototype=new THREE.Material;THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial;
THREE.ShaderMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.fragmentShader=a.fragmentShader!==void 0?a.fragmentShader:"void main() {}";this.vertexShader=a.vertexShader!==void 0?a.vertexShader:"void main() {}";this.uniforms=a.uniforms!==void 0?a.uniforms:{};this.attributes=a.attributes;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.fog=a.fog!==
void 0?a.fog:!1;this.lights=a.lights!==void 0?a.lights:!1;this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.ShaderMaterial.prototype=new THREE.Material;THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;
THREE.Texture=function(a,b,c,e,h,f){this.id=THREE.TextureCount++;this.image=a;this.mapping=b!==void 0?b:new THREE.UVMapping;this.wrapS=c!==void 0?c:THREE.ClampToEdgeWrapping;this.wrapT=e!==void 0?e:THREE.ClampToEdgeWrapping;this.magFilter=h!==void 0?h:THREE.LinearFilter;this.minFilter=f!==void 0?f:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.needsUpdate=!1};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a}};THREE.TextureCount=0;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;
THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;THREE.DataTexture=function(a,b,c,e,h,f,i,j,m){THREE.Texture.call(this,null,h,f,i,j,m);this.image={data:a,width:b,height:c};this.format=e!==void 0?e:THREE.RGBAFormat};THREE.DataTexture.prototype=new THREE.Texture;THREE.DataTexture.prototype.constructor=THREE.DataTexture;
THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.data.slice(0),this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b;this.sortParticles=!1};
THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=b;this.type=c!==void 0?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b;if(b instanceof Array)console.warn("DEPRECATED: Mesh material can no longer be an Array. Using material at index 0..."),this.material=b[0];if(this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};
for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.supr=THREE.Object3D.prototype;
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(this.morphTargetDictionary[a]!==void 0)return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=new THREE.Object3D;THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.supr=THREE.Object3D.prototype;
THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,e=this.children.length;for(c=0;c<e;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b){THREE.Mesh.call(this,a,b);this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var c,e,h,f,i,j;if(this.geometry.bones!==void 0){for(c=0;c<this.geometry.bones.length;c++)h=this.geometry.bones[c],f=h.pos,i=h.rotq,j=h.scl,e=this.addBone(),e.name=h.name,e.position.set(f[0],f[1],f[2]),e.quaternion.set(i[0],i[1],i[2],i[3]),e.useQuaternion=!0,j!==void 0?e.scale.set(j[0],j[1],j[2]):e.scale.set(1,1,1);for(c=0;c<this.bones.length;c++)h=this.geometry.bones[c],
e=this.bones[c],h.parent===-1?this.add(e):this.bones[h.parent].add(e);this.boneMatrices=new Float32Array(16*this.bones.length);this.pose()}};THREE.SkinnedMesh.prototype=new THREE.Mesh;THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.addBone=function(a){a===void 0&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}b=this.bones.length;ba=this.bones;bm=this.boneMatrices;for(a=0;a<b;a++)ba[a].skinMatrix.flattenToArrayOffset(bm,
a*16)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a,b=[],c=0;c<this.bones.length;c++){a=this.bones[c];var e=new THREE.Matrix4;e.getInverse(a.skinMatrix);b.push(e);a.skinMatrix.flattenToArrayOffset(this.boneMatrices,c*16)}if(this.geometry.skinVerticesA===void 0){this.geometry.skinVerticesA=[];this.geometry.skinVerticesB=[];for(a=0;a<this.geometry.skinIndices.length;a++){var c=this.geometry.vertices[a].position,h=this.geometry.skinIndices[a].x,f=this.geometry.skinIndices[a].y,e=
new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesA.push(b[h].multiplyVector3(e));e=new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesB.push(b[f].multiplyVector3(e));this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y!==1&&(c=(1-(this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y))*0.5,this.geometry.skinWeights[a].x+=c,this.geometry.skinWeights[a].y+=c)}}};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};
THREE.Ribbon.prototype=new THREE.Object3D;THREE.Ribbon.prototype.constructor=THREE.Ribbon;THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=new THREE.Object3D;THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.supr=THREE.Object3D.prototype;THREE.LOD.prototype.addLevel=function(a,b){b===void 0&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length;c++)if(b<this.LODs[c].visibleAtDistance)break;this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(this.LODs.length>1){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.n31*this.position.x+a.n32*this.position.y+a.n33*this.position.z+a.n34);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=!1}};
THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map instanceof THREE.Texture?a.map:THREE.ImageUtils.loadTexture(a.map);this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.useScreenCoordinates=a.useScreenCoordinates!==void 0?a.useScreenCoordinates:!0;this.mergeWith3D=a.mergeWith3D!==void 0?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=a.affectedByDistance!==void 0?a.affectedByDistance:
!this.useScreenCoordinates;this.scaleByViewport=a.scaleByViewport!==void 0?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1)};THREE.Sprite.prototype=new THREE.Object3D;THREE.Sprite.prototype.constructor=THREE.Sprite;
THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(this.scale.x!==1||this.scale.y!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);
THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);
THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.objects=[];this.lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=new THREE.Object3D;THREE.Scene.prototype.constructor=THREE.Scene;
THREE.Scene.prototype.addObject=function(a){if(a instanceof THREE.Light)this.lights.indexOf(a)===-1&&this.lights.push(a);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&this.objects.indexOf(a)===-1){this.objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);b!==-1&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.addObject(a.children[b])};
THREE.Scene.prototype.removeObject=function(a){if(a instanceof THREE.Light){var b=this.lights.indexOf(a);b!==-1&&this.lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.objects.indexOf(a),b!==-1&&(this.objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),b!==-1&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=b!==void 0?b:1;this.far=c!==void 0?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b!==void 0?b:2.5E-4};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity );\n} else {\ngl_FragColor.xyz = gl_FragColor.xyz * cubeColor.xyz;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",
lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif",
lights_lambert_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat pointLightWeighting = max( dot( transformedNormal, lVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting * lDistance;\n}\n#endif\nvLightWeighting = vLightWeighting * diffuse + ambient * ambientLightColor;\n}",
lights_phong_pars_vertex:"#if MAX_POINT_LIGHTS > 0\n#ifndef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif",lights_phong_vertex:"#if MAX_POINT_LIGHTS > 0\n#ifndef PHONG_PER_PIXEL\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDistance = lDistance;\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\nfloat pointSpecularWeight = pow( pointDotNormalHalf, shininess );\n#ifdef PHYSICALLY_BASED_SHADING\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance;\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * pointDistance;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = pow( dirDotNormalHalf, shininess );\n#ifdef PHYSICALLY_BASED_SHADING\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * viewMatrix * objectMatrix * gl_Position;\n#endif",
morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\nuniform float morphTargetInfluences[ 8 ];\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0, 0.0, 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",
default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform float shadowDarkness;\nuniform float shadowBias;\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",
shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_SOFT\nconst float xPixelOffset = 1.0 / SHADOWMAP_WIDTH;\nconst float yPixelOffset = 1.0 / SHADOWMAP_HEIGHT;\n#endif\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nshadowCoord.z += shadowBias;\nif ( shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0 ) {\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nfor ( float y = -1.25; y <= 1.25; y += 1.25 )\nfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\nvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadow += 1.0;\n}\nshadow /= 9.0;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( shadowDarkness );\n#endif\n}\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,e,h={};for(b=0;b<a.length;b++)for(c in e=this.clone(a[b]),e)h[c]=e[c];return h},clone:function(a){var b,c,e,h={};for(b in a)for(c in h[b]={},a[b])e=a[b][c],h[b][c]=e instanceof THREE.Color||e instanceof THREE.Vector2||e instanceof THREE.Vector3||e instanceof THREE.Vector4||e instanceof THREE.Matrix4||e instanceof THREE.Texture?e.clone():e instanceof Array?e.slice():e;return h}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},fog:{fogDensity:{type:"f",
value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:6,texture:[]},shadowMatrix:{type:"m4v",value:[]},shadowBias:{type:"f",value:0.0039},shadowDarkness:{type:"f",value:0.2}}};
THREE.ShaderLib={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"},
depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},
vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(328965)}}]),vertexShader:["varying vec3 vLightWeighting;",THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",
THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightWeighting;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",
THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,"gl_FragColor.xyz = gl_FragColor.xyz * vLightWeighting;",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",
value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),vertexShader:["varying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",
THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = -mvPosition.xyz;\nvec3 transformedNormal = normalMatrix * normal;\nvNormal = transformedNormal;",THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,
"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,
THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,
THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,e=b.material;if(e.attributes){if(a.__webglCustomAttributesList===void 0)a.__webglCustomAttributesList=[];for(var f in e.attributes){originalAttribute=e.attributes[f];attribute={};for(property in originalAttribute)attribute[property]=originalAttribute[property];if(!attribute.__webglInitialized||attribute.createUniqueBuffers)attribute.__webglInitialized=!0,size=1,attribute.type==="v2"?size=2:attribute.type==="v3"?size=3:attribute.type===
"v4"?size=4:attribute.type==="c"&&(size=3),attribute.size=size,attribute.array=new Float32Array(c*size),attribute.buffer=d.createBuffer(),attribute.buffer.belongsToAttribute=f,originalAttribute.needsUpdate=!0,attribute.__original=originalAttribute;a.__webglCustomAttributesList.push(attribute)}}}function c(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;else if(b.materialIndex>=0)return a.geometry.materials[b.materialIndex]}function e(a,b,c){var e,f,h,i=a.vertices,
l=i.length,r=a.colors,j=r.length,q=a.__vertexArray,s=a.__colorArray,Y=a.__sortArray,u=a.__dirtyVertices,k=a.__dirtyColors,m=a.__webglCustomAttributesList;if(c.sortParticles){Ba.multiplySelf(c.matrixWorld);for(e=0;e<l;e++)f=i[e].position,Ha.copy(f),Ba.multiplyVector3(Ha),Y[e]=[Ha.z,e];Y.sort(function(a,b){return b[0]-a[0]});for(e=0;e<l;e++)f=i[Y[e][1]].position,h=e*3,q[h]=f.x,q[h+1]=f.y,q[h+2]=f.z;for(e=0;e<j;e++)h=e*3,color=r[Y[e][1]],s[h]=color.r,s[h+1]=color.g,s[h+2]=color.b;if(m){r=0;for(j=m.length;r<
j;r++)if(l=m[r],l.boundTo===void 0||l.boundTo==="vertices"){h=0;f=l.value.length;for(e=0;e<f;e++)index=Y[e][1],l.size===1?l.array[h]=l.value[index]:(i=l.value[index],l.size===2?(l.array[h]=i.x,l.array[h+1]=i.y):l.size===3?l.type==="c"?(l.array[h]=i.r,l.array[h+1]=i.g,l.array[h+2]=i.b):(l.array[h]=i.x,l.array[h+1]=i.y,l.array[h+2]=i.z):(l.array[h]=i.x,l.array[h+1]=i.y,l.array[h+2]=i.z,l.array[h+3]=i.w)),h+=l.size}}}else{if(u)for(e=0;e<l;e++)f=i[e].position,h=e*3,q[h]=f.x,q[h+1]=f.y,q[h+2]=f.z;if(k)for(e=
0;e<j;e++)color=r[e],h=e*3,s[h]=color.r,s[h+1]=color.g,s[h+2]=color.b;if(m){r=0;for(j=m.length;r<j;r++)if(l=m[r],l.__original.needsUpdate&&(l.boundTo===void 0||l.boundTo==="vertices")){f=l.value.length;for(e=h=0;e<f;e++)offset_custom=l.offset,l.size===1?l.array[h]=l.value[e]:(i=l.value[e],l.size===2?(l.array[h]=i.x,l.array[h+1]=i.y):l.size===3?l.type==="c"?(l.array[h]=i.r,l.array[h+1]=i.g,l.array[h+2]=i.b):(l.array[h]=i.x,l.array[h+1]=i.y,l.array[h+2]=i.z):(l.array[h]=i.x,l.array[h+1]=i.y,l.array[h+
2]=i.z,l.array[h+3]=i.w)),h+=l.size}}}if(u||c.sortParticles)d.bindBuffer(d.ARRAY_BUFFER,a.__webglVertexBuffer),d.bufferData(d.ARRAY_BUFFER,q,b);if(k||c.sortParticles)d.bindBuffer(d.ARRAY_BUFFER,a.__webglColorBuffer),d.bufferData(d.ARRAY_BUFFER,s,b);if(m){r=0;for(j=m.length;r<j;r++)if(l=m[r],l.__original.needsUpdate||c.sortParticles)d.bindBuffer(d.ARRAY_BUFFER,l.buffer),d.bufferData(d.ARRAY_BUFFER,l.array,b)}}function h(a,b,c,e,h){e.program||K.initMaterial(e,b,c,h);if(e.morphTargets&&!h.__webglMorphTargetInfluences){h.__webglMorphTargetInfluences=
new Float32Array(K.maxMorphTargets);for(var f=0,i=K.maxMorphTargets;f<i;f++)h.__webglMorphTargetInfluences[f]=0}var l=!1,f=e.program,i=f.uniforms,r=e.uniforms;f!==Qa&&(d.useProgram(f),Qa=f,l=!0);if(e.id!==pa)pa=e.id,l=!0;if(l){d.uniformMatrix4fv(i.projectionMatrix,!1,Na);if(c&&e.fog)if(r.fogColor.value=c.color,c instanceof THREE.Fog)r.fogNear.value=c.near,r.fogFar.value=c.far;else if(c instanceof THREE.FogExp2)r.fogDensity.value=c.density;if(e instanceof THREE.MeshPhongMaterial||e instanceof THREE.MeshLambertMaterial||
e.lights){for(var j,q,s=0,Y=0,u=0,k,m,o,w=Sa,p=w.directional.colors,z=w.directional.positions,v=w.point.colors,t=w.point.positions,y=w.point.distances,A=0,D=0,c=j=o=0,l=b.length;c<l;c++)if(j=b[c],q=j.color,k=j.position,m=j.intensity,o=j.distance,j instanceof THREE.AmbientLight)K.gammaInput?(s+=q.r*q.r,Y+=q.g*q.g,u+=q.b*q.b):(s+=q.r,Y+=q.g,u+=q.b);else if(j instanceof THREE.DirectionalLight)o=A*3,K.gammaInput?(p[o]=q.r*q.r*m*m,p[o+1]=q.g*q.g*m*m,p[o+2]=q.b*q.b*m*m):(p[o]=q.r*m,p[o+1]=q.g*m,p[o+2]=
q.b*m),z[o]=k.x,z[o+1]=k.y,z[o+2]=k.z,A+=1;else if(j instanceof THREE.SpotLight)o=A*3,K.gammaInput?(p[o]=q.r*q.r*m*m,p[o+1]=q.g*q.g*m*m,p[o+2]=q.b*q.b*m*m):(p[o]=q.r*m,p[o+1]=q.g*m,p[o+2]=q.b*m),q=1/k.length(),z[o]=k.x*q,z[o+1]=k.y*q,z[o+2]=k.z*q,A+=1;else if(j instanceof THREE.PointLight)j=D*3,K.gammaInput?(v[j]=q.r*q.r*m*m,v[j+1]=q.g*q.g*m*m,v[j+2]=q.b*q.b*m*m):(v[j]=q.r*m,v[j+1]=q.g*m,v[j+2]=q.b*m),t[j]=k.x,t[j+1]=k.y,t[j+2]=k.z,y[D]=o,D+=1;c=A*3;for(l=p.length;c<l;c++)p[c]=0;c=D*3;for(l=v.length;c<
l;c++)v[c]=0;w.point.length=D;w.directional.length=A;w.ambient[0]=s;w.ambient[1]=Y;w.ambient[2]=u;b=Sa;r.enableLighting.value=b.directional.length+b.point.length;r.ambientLightColor.value=b.ambient;r.directionalLightColor.value=b.directional.colors;r.directionalLightDirection.value=b.directional.positions;r.pointLightColor.value=b.point.colors;r.pointLightPosition.value=b.point.positions;r.pointLightDistance.value=b.point.distances}if(e instanceof THREE.MeshBasicMaterial||e instanceof THREE.MeshLambertMaterial||
e instanceof THREE.MeshPhongMaterial)r.opacity.value=e.opacity,K.gammaInput?r.diffuse.value.copyGammaToLinear(e.color):r.diffuse.value=e.color,(r.map.texture=e.map)&&r.offsetRepeat.value.set(e.map.offset.x,e.map.offset.y,e.map.repeat.x,e.map.repeat.y),r.lightMap.texture=e.lightMap,r.envMap.texture=e.envMap,r.flipEnvMap.value=e.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,r.reflectivity.value=e.reflectivity,r.refractionRatio.value=e.refractionRatio,r.combine.value=e.combine,r.useRefract.value=
e.envMap&&e.envMap.mapping instanceof THREE.CubeRefractionMapping;if(e instanceof THREE.LineBasicMaterial)r.diffuse.value=e.color,r.opacity.value=e.opacity;else if(e instanceof THREE.ParticleBasicMaterial)r.psColor.value=e.color,r.opacity.value=e.opacity,r.size.value=e.size,r.scale.value=Ca.height/2,r.map.texture=e.map;else if(e instanceof THREE.MeshPhongMaterial)r.shininess.value=e.shininess,K.gammaInput?(r.ambient.value.copyGammaToLinear(e.ambient),r.specular.value.copyGammaToLinear(e.specular)):
(r.ambient.value=e.ambient,r.specular.value=e.specular);else if(e instanceof THREE.MeshLambertMaterial)K.gammaInput?r.ambient.value.copyGammaToLinear(e.ambient):r.ambient.value=e.ambient;else if(e instanceof THREE.MeshDepthMaterial)r.mNear.value=a.near,r.mFar.value=a.far,r.opacity.value=e.opacity;else if(e instanceof THREE.MeshNormalMaterial)r.opacity.value=e.opacity;if(h.receiveShadow&&!e._shadowPass&&r.shadowMatrix){for(b=0;b<La.length;b++)r.shadowMatrix.value[b]=La[b],r.shadowMap.texture[b]=K.shadowMap[b];
r.shadowDarkness.value=K.shadowMapDarkness;r.shadowBias.value=K.shadowMapBias}b=e.uniformsList;r=0;for(c=b.length;r<c;r++)if(Y=f.uniforms[b[r][1]])if(s=b[r][0],u=s.type,l=s.value,u==="i")d.uniform1i(Y,l);else if(u==="f")d.uniform1f(Y,l);else if(u==="v2")d.uniform2f(Y,l.x,l.y);else if(u==="v3")d.uniform3f(Y,l.x,l.y,l.z);else if(u==="v4")d.uniform4f(Y,l.x,l.y,l.z,l.w);else if(u==="c")d.uniform3f(Y,l.r,l.g,l.b);else if(u==="fv1")d.uniform1fv(Y,l);else if(u==="fv")d.uniform3fv(Y,l);else if(u==="v3v"){if(!s._array)s._array=
new Float32Array(3*l.length);u=0;for(k=l.length;u<k;u++)w=u*3,s._array[w]=l[u].x,s._array[w+1]=l[u].y,s._array[w+2]=l[u].z;d.uniform3fv(Y,s._array)}else if(u==="m4"){if(!s._array)s._array=new Float32Array(16);l.flattenToArray(s._array);d.uniformMatrix4fv(Y,!1,s._array)}else if(u==="m4v"){if(!s._array)s._array=new Float32Array(16*l.length);u=0;for(k=l.length;u<k;u++)l[u].flattenToArrayOffset(s._array,u*16);d.uniformMatrix4fv(Y,!1,s._array)}else if(u==="t"){if(d.uniform1i(Y,l),Y=s.texture)if(Y.image instanceof
Array&&Y.image.length===6){if(s=Y,s.image.length===6)if(s.needsUpdate){if(!s.image.__webglTextureCube)s.image.__webglTextureCube=d.createTexture();d.activeTexture(d.TEXTURE0+l);d.bindTexture(d.TEXTURE_CUBE_MAP,s.image.__webglTextureCube);for(l=0;l<6;l++)d.texImage2D(d.TEXTURE_CUBE_MAP_POSITIVE_X+l,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,s.image[l]);R(d.TEXTURE_CUBE_MAP,s,s.image[0]);s.needsUpdate=!1}else d.activeTexture(d.TEXTURE0+l),d.bindTexture(d.TEXTURE_CUBE_MAP,s.image.__webglTextureCube)}else Y instanceof
THREE.WebGLRenderTargetCube?(s=Y,d.activeTexture(d.TEXTURE0+l),d.bindTexture(d.TEXTURE_CUBE_MAP,s.__webglTexture)):$(Y,l)}else if(u==="tv"){if(!s._array){s._array=[];u=0;for(k=s.texture.length;u<k;u++)s._array[u]=l+u}d.uniform1iv(Y,s._array);u=0;for(k=s.texture.length;u<k;u++)(Y=s.texture[u])&&$(Y,s._array[u])}(e instanceof THREE.ShaderMaterial||e instanceof THREE.MeshPhongMaterial||e.envMap)&&i.cameraPosition!==null&&d.uniform3f(i.cameraPosition,a.position.x,a.position.y,a.position.z);(e instanceof
THREE.MeshPhongMaterial||e instanceof THREE.MeshLambertMaterial||e instanceof THREE.ShaderMaterial||e.skinning)&&i.viewMatrix!==null&&d.uniformMatrix4fv(i.viewMatrix,!1,Oa);e.skinning&&(d.uniformMatrix4fv(i.cameraInverseMatrix,!1,Oa),d.uniformMatrix4fv(i.boneGlobalMatrices,!1,h.boneMatrices))}d.uniformMatrix4fv(i.modelViewMatrix,!1,h._modelViewMatrixArray);i.normalMatrix&&d.uniformMatrix3fv(i.normalMatrix,!1,h._normalMatrixArray);(e instanceof THREE.ShaderMaterial||e.envMap||e.skinning||h.receiveShadow)&&
i.objectMatrix!==null&&d.uniformMatrix4fv(i.objectMatrix,!1,h._objectMatrixArray);return f}function f(a,b,c,e,f,i){if(e.opacity!==0){var j,l,c=h(a,b,c,e,i),a=c.attributes,b=!1,c=f.id*16777215+c.id*2+(e.wireframe?1:0);c!==L&&(L=c,b=!0);if(!e.morphTargets&&a.position>=0)b&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglVertexBuffer),d.vertexAttribPointer(a.position,3,d.FLOAT,!1,0,0));else if(i.morphTargetBase){c=e.program.attributes;i.morphTargetBase!==-1?(d.bindBuffer(d.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[i.morphTargetBase]),
d.vertexAttribPointer(c.position,3,d.FLOAT,!1,0,0)):c.position>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglVertexBuffer),d.vertexAttribPointer(c.position,3,d.FLOAT,!1,0,0));if(i.morphTargetForcedOrder.length){j=0;var r=i.morphTargetForcedOrder;for(l=i.morphTargetInfluences;j<e.numSupportedMorphTargets&&j<r.length;)d.bindBuffer(d.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[r[j]]),d.vertexAttribPointer(c["morphTarget"+j],3,d.FLOAT,!1,0,0),i.__webglMorphTargetInfluences[j]=l[r[j]],j++}else{var r=[],m=-1,
q=0;l=i.morphTargetInfluences;var s,k=l.length;j=0;for(i.morphTargetBase!==-1&&(r[i.morphTargetBase]=!0);j<e.numSupportedMorphTargets;){for(s=0;s<k;s++)!r[s]&&l[s]>m&&(q=s,m=l[q]);d.bindBuffer(d.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[q]);d.vertexAttribPointer(c["morphTarget"+j],3,d.FLOAT,!1,0,0);i.__webglMorphTargetInfluences[j]=m;r[q]=1;m=-1;j++}}e.program.uniforms.morphTargetInfluences!==null&&d.uniform1fv(e.program.uniforms.morphTargetInfluences,i.__webglMorphTargetInfluences)}if(b){if(f.__webglCustomAttributesList){j=
0;for(l=f.__webglCustomAttributesList.length;j<l;j++)c=f.__webglCustomAttributesList[j],a[c.buffer.belongsToAttribute]>=0&&(d.bindBuffer(d.ARRAY_BUFFER,c.buffer),d.vertexAttribPointer(a[c.buffer.belongsToAttribute],c.size,d.FLOAT,!1,0,0))}a.color>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglColorBuffer),d.vertexAttribPointer(a.color,3,d.FLOAT,!1,0,0));a.normal>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglNormalBuffer),d.vertexAttribPointer(a.normal,3,d.FLOAT,!1,0,0));a.tangent>=0&&(d.bindBuffer(d.ARRAY_BUFFER,
f.__webglTangentBuffer),d.vertexAttribPointer(a.tangent,4,d.FLOAT,!1,0,0));a.uv>=0&&(f.__webglUVBuffer?(d.bindBuffer(d.ARRAY_BUFFER,f.__webglUVBuffer),d.vertexAttribPointer(a.uv,2,d.FLOAT,!1,0,0),d.enableVertexAttribArray(a.uv)):d.disableVertexAttribArray(a.uv));a.uv2>=0&&(f.__webglUV2Buffer?(d.bindBuffer(d.ARRAY_BUFFER,f.__webglUV2Buffer),d.vertexAttribPointer(a.uv2,2,d.FLOAT,!1,0,0),d.enableVertexAttribArray(a.uv2)):d.disableVertexAttribArray(a.uv2));e.skinning&&a.skinVertexA>=0&&a.skinVertexB>=
0&&a.skinIndex>=0&&a.skinWeight>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinVertexABuffer),d.vertexAttribPointer(a.skinVertexA,4,d.FLOAT,!1,0,0),d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinVertexBBuffer),d.vertexAttribPointer(a.skinVertexB,4,d.FLOAT,!1,0,0),d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinIndicesBuffer),d.vertexAttribPointer(a.skinIndex,4,d.FLOAT,!1,0,0),d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinWeightsBuffer),d.vertexAttribPointer(a.skinWeight,4,d.FLOAT,!1,0,0))}i instanceof THREE.Mesh?(e.wireframe?
(d.lineWidth(e.wireframeLinewidth),b&&d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,f.__webglLineBuffer),d.drawElements(d.LINES,f.__webglLineCount,d.UNSIGNED_SHORT,0)):(b&&d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,f.__webglFaceBuffer),d.drawElements(d.TRIANGLES,f.__webglFaceCount,d.UNSIGNED_SHORT,0)),K.info.render.calls++,K.info.render.vertices+=f.__webglFaceCount,K.info.render.faces+=f.__webglFaceCount/3):i instanceof THREE.Line?(i=i.type===THREE.LineStrip?d.LINE_STRIP:d.LINES,d.lineWidth(e.linewidth),d.drawArrays(i,
0,f.__webglLineCount),K.info.render.calls++):i instanceof THREE.ParticleSystem?(d.drawArrays(d.POINTS,0,f.__webglParticleCount),K.info.render.calls++):i instanceof THREE.Ribbon&&(d.drawArrays(d.TRIANGLE_STRIP,0,f.__webglVertexCount),K.info.render.calls++)}}function i(a,b,c){if(!a.__webglVertexBuffer)a.__webglVertexBuffer=d.createBuffer();if(!a.__webglNormalBuffer)a.__webglNormalBuffer=d.createBuffer();a.hasPos&&(d.bindBuffer(d.ARRAY_BUFFER,a.__webglVertexBuffer),d.bufferData(d.ARRAY_BUFFER,a.positionArray,
d.DYNAMIC_DRAW),d.enableVertexAttribArray(b.attributes.position),d.vertexAttribPointer(b.attributes.position,3,d.FLOAT,!1,0,0));if(a.hasNormal){d.bindBuffer(d.ARRAY_BUFFER,a.__webglNormalBuffer);if(c===THREE.FlatShading){var e,f,h,i,l,j,m,q,s,k,u=a.count*3;for(k=0;k<u;k+=9)c=a.normalArray,e=c[k],f=c[k+1],h=c[k+2],i=c[k+3],j=c[k+4],q=c[k+5],l=c[k+6],m=c[k+7],s=c[k+8],e=(e+i+l)/3,f=(f+j+m)/3,h=(h+q+s)/3,c[k]=e,c[k+1]=f,c[k+2]=h,c[k+3]=e,c[k+4]=f,c[k+5]=h,c[k+6]=e,c[k+7]=f,c[k+8]=h}d.bufferData(d.ARRAY_BUFFER,
a.normalArray,d.DYNAMIC_DRAW);d.enableVertexAttribArray(b.attributes.normal);d.vertexAttribPointer(b.attributes.normal,3,d.FLOAT,!1,0,0)}d.drawArrays(d.TRIANGLES,0,a.count);a.count=0}function j(a){if(V!==a.doubleSided)a.doubleSided?d.disable(d.CULL_FACE):d.enable(d.CULL_FACE),V=a.doubleSided;if(sa!==a.flipSided)a.flipSided?d.frontFace(d.CW):d.frontFace(d.CCW),sa=a.flipSided}function m(a){va!==a&&(a?d.enable(d.DEPTH_TEST):d.disable(d.DEPTH_TEST),va=a)}function o(a){ya!==a&&(d.depthMask(a),ya=a)}function k(a,
b,c){Fa!==a&&(a?d.enable(d.POLYGON_OFFSET_FILL):d.disable(d.POLYGON_OFFSET_FILL),Fa=a);if(a&&(Ja!==b||Ga!==c))d.polygonOffset(b,c),Ja=b,Ga=c}function p(a){xa[0].set(a.n41-a.n11,a.n42-a.n12,a.n43-a.n13,a.n44-a.n14);xa[1].set(a.n41+a.n11,a.n42+a.n12,a.n43+a.n13,a.n44+a.n14);xa[2].set(a.n41+a.n21,a.n42+a.n22,a.n43+a.n23,a.n44+a.n24);xa[3].set(a.n41-a.n21,a.n42-a.n22,a.n43-a.n23,a.n44-a.n24);xa[4].set(a.n41-a.n31,a.n42-a.n32,a.n43-a.n33,a.n44-a.n34);xa[5].set(a.n41+a.n31,a.n42+a.n32,a.n43+a.n33,a.n44+
a.n34);for(var b,a=0;a<6;a++)b=xa[a],b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))}function z(a){for(var b=a.matrixWorld,d=-a.geometry.boundingSphere.radius*Math.max(a.scale.x,Math.max(a.scale.y,a.scale.z)),c=0;c<6;c++)if(a=xa[c].x*b.n14+xa[c].y*b.n24+xa[c].z*b.n34+xa[c].w,a<=d)return!1;return!0}function y(a){var b=a.object.material;b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}function A(a){var b=a.object,d=a.buffer,c;c=b.material;if(c instanceof THREE.MeshFaceMaterial){if(d=
d.materialIndex,d>=0)b=b.geometry.materials[d],b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}else if(b=c)b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}function D(a,b){return b.z-a.z}function B(a){var b,c,e,k=0,Q,o,l,r,M=a.lights;Z||(Z=new THREE.PerspectiveCamera(K.shadowCameraFov,K.shadowMapWidth/K.shadowMapHeight,K.shadowCameraNear,K.shadowCameraFar));b=0;for(c=M.length;b<c;b++)if(e=M[b],e instanceof THREE.SpotLight&&e.castShadow){pa=
-1;K.shadowMap[k]||(K.shadowMap[k]=new THREE.WebGLRenderTarget(K.shadowMapWidth,K.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}));La[k]||(La[k]=new THREE.Matrix4);Q=K.shadowMap[k];o=La[k];Z.position.copy(e.position);Z.lookAt(e.target.position);Z.parent==null&&(console.warn("Camera is not on the Scene. Adding it..."),a.add(Z));this.autoUpdateScene&&a.updateMatrixWorld();Z.matrixWorldInverse.getInverse(Z.matrixWorld);o.set(0.5,0,0,0.5,0,0.5,0,0.5,
0,0,0.5,0.5,0,0,0,1);o.multiplySelf(Z.projectionMatrix);o.multiplySelf(Z.matrixWorldInverse);Z.matrixWorldInverse.flattenToArray(Oa);Z.projectionMatrix.flattenToArray(Na);Ba.multiply(Z.projectionMatrix,Z.matrixWorldInverse);p(Ba);N(Q);d.clearColor(1,1,1,1);K.clear();d.clearColor(la.r,la.g,la.b,Da);o=a.__webglObjects.length;e=a.__webglObjectsImmediate.length;for(Q=0;Q<o;Q++)l=a.__webglObjects[Q],r=l.object,r.visible&&r.castShadow?!(r instanceof THREE.Mesh)||!r.frustumCulled||z(r)?(r.matrixWorld.flattenToArray(r._objectMatrixArray),
J(r,Z,!1),l.render=!0):l.render=!1:l.render=!1;m(!0);G(THREE.NormalBlending);for(Q=0;Q<o;Q++)if(l=a.__webglObjects[Q],l.render)r=l.object,buffer=l.buffer,j(r),l=r.customDepthMaterial?r.customDepthMaterial:r.geometry.morphTargets.length?Ta:Pa,f(Z,M,null,l,buffer,r);for(Q=0;Q<e;Q++)l=a.__webglObjectsImmediate[Q],r=l.object,r.visible&&r.castShadow&&(r.matrixAutoUpdate&&r.matrixWorld.flattenToArray(r._objectMatrixArray),L=-1,J(r,Z,!1),j(r),program=h(Z,M,null,Pa,r),r.immediateRenderCallback?r.immediateRenderCallback(program,
d,xa):r.render(function(a){i(a,program,Pa.shading)}));k++}}function ra(a,b){var c,e,f;c=t.attributes;var h=t.uniforms,i=Ia/Ma,l,j=[],k=Ma*0.5,q=Ia*0.5,s=!0;d.useProgram(t.program);Qa=t.program;L=va=P=-1;Ua||(d.enableVertexAttribArray(t.attributes.position),d.enableVertexAttribArray(t.attributes.uv),Ua=!0);d.disable(d.CULL_FACE);d.enable(d.BLEND);d.depthMask(!0);d.bindBuffer(d.ARRAY_BUFFER,t.vertexBuffer);d.vertexAttribPointer(c.position,2,d.FLOAT,!1,16,0);d.vertexAttribPointer(c.uv,2,d.FLOAT,!1,16,
8);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,t.elementBuffer);d.uniformMatrix4fv(h.projectionMatrix,!1,Na);d.activeTexture(d.TEXTURE0);d.uniform1i(h.map,0);c=0;for(e=a.__webglSprites.length;c<e;c++)if(f=a.__webglSprites[c],f.visible&&f.opacity!==0)f.useScreenCoordinates?f.z=-f.position.z:(f._modelViewMatrix.multiplyToArray(b.matrixWorldInverse,f.matrixWorld,f._modelViewMatrixArray),f.z=-f._modelViewMatrix.n34);a.__webglSprites.sort(D);c=0;for(e=a.__webglSprites.length;c<e;c++)f=a.__webglSprites[c],f.visible&&
f.opacity!==0&&f.map&&f.map.image&&f.map.image.width&&(f.useScreenCoordinates?(d.uniform1i(h.useScreenCoordinates,1),d.uniform3f(h.screenPosition,(f.position.x-k)/k,(q-f.position.y)/q,Math.max(0,Math.min(1,f.position.z)))):(d.uniform1i(h.useScreenCoordinates,0),d.uniform1i(h.affectedByDistance,f.affectedByDistance?1:0),d.uniformMatrix4fv(h.modelViewMatrix,!1,f._modelViewMatrixArray)),l=f.map.image.width/(f.scaleByViewport?Ia:1),j[0]=l*i*f.scale.x,j[1]=l*f.scale.y,d.uniform2f(h.uvScale,f.uvScale.x,
f.uvScale.y),d.uniform2f(h.uvOffset,f.uvOffset.x,f.uvOffset.y),d.uniform2f(h.alignment,f.alignment.x,f.alignment.y),d.uniform1f(h.opacity,f.opacity),d.uniform3f(h.color,f.color.r,f.color.g,f.color.b),d.uniform1f(h.rotation,f.rotation),d.uniform2fv(h.scale,j),f.mergeWith3D&&!s?(d.enable(d.DEPTH_TEST),s=!0):!f.mergeWith3D&&s&&(d.disable(d.DEPTH_TEST),s=!1),G(f.blending),$(f.map,0),d.drawElements(d.TRIANGLES,6,d.UNSIGNED_SHORT,0));d.enable(d.CULL_FACE);d.enable(d.DEPTH_TEST);d.depthMask(ya)}function J(a,
b,d){a._modelViewMatrix.multiplyToArray(b.matrixWorldInverse,a.matrixWorld,a._modelViewMatrixArray);d&&THREE.Matrix4.makeInvert3x3(a._modelViewMatrix).transposeIntoArray(a._normalMatrixArray)}function ka(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function oa(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function S(a,b){for(var d=a.length-1;d>=0;d--)a[d].object===b&&a.splice(d,1)}function ca(a,b,d){a.push({buffer:b,object:d,opaque:null,transparent:null})}
function G(a){if(a!==P){switch(a){case THREE.AdditiveBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.SRC_ALPHA,d.ONE);break;case THREE.SubtractiveBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.ZERO,d.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.ZERO,d.SRC_COLOR);break;default:d.blendEquationSeparate(d.FUNC_ADD,d.FUNC_ADD),d.blendFuncSeparate(d.SRC_ALPHA,d.ONE_MINUS_SRC_ALPHA,d.ONE,d.ONE_MINUS_SRC_ALPHA)}P=a}}function R(a,b,c){(c.width&c.width-
1)===0&&(c.height&c.height-1)===0?(d.texParameteri(a,d.TEXTURE_WRAP_S,U(b.wrapS)),d.texParameteri(a,d.TEXTURE_WRAP_T,U(b.wrapT)),d.texParameteri(a,d.TEXTURE_MAG_FILTER,U(b.magFilter)),d.texParameteri(a,d.TEXTURE_MIN_FILTER,U(b.minFilter)),d.generateMipmap(a)):(d.texParameteri(a,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(a,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.texParameteri(a,d.TEXTURE_MAG_FILTER,ta(b.magFilter)),d.texParameteri(a,d.TEXTURE_MIN_FILTER,ta(b.minFilter)))}function $(a,b){if(a.needsUpdate){if(!a.__webglInit)a.__webglInit=
!0,a.__webglTexture=d.createTexture(),K.info.memory.textures++;d.activeTexture(d.TEXTURE0+b);d.bindTexture(d.TEXTURE_2D,a.__webglTexture);a instanceof THREE.DataTexture?d.texImage2D(d.TEXTURE_2D,0,U(a.format),a.image.width,a.image.height,0,U(a.format),d.UNSIGNED_BYTE,a.image.data):d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,a.image);R(d.TEXTURE_2D,a,a.image);a.needsUpdate=!1}else d.activeTexture(d.TEXTURE0+b),d.bindTexture(d.TEXTURE_2D,a.__webglTexture)}function F(a,b){d.bindRenderbuffer(d.RENDERBUFFER,
a);b.depthBuffer&&!b.stencilBuffer?(d.renderbufferStorage(d.RENDERBUFFER,d.DEPTH_COMPONENT16,b.width,b.height),d.framebufferRenderbuffer(d.FRAMEBUFFER,d.DEPTH_ATTACHMENT,d.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(d.renderbufferStorage(d.RENDERBUFFER,d.DEPTH_STENCIL,b.width,b.height),d.framebufferRenderbuffer(d.FRAMEBUFFER,d.DEPTH_STENCIL_ATTACHMENT,d.RENDERBUFFER,a)):d.renderbufferStorage(d.RENDERBUFFER,d.RGBA4,b.width,b.height)}function N(a){var b=a instanceof THREE.WebGLRenderTargetCube;
if(a&&!a.__webglFramebuffer){if(a.depthBuffer===void 0)a.depthBuffer=!0;if(a.stencilBuffer===void 0)a.stencilBuffer=!0;a.__webglTexture=d.createTexture();if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];d.bindTexture(d.TEXTURE_CUBE_MAP,a.__webglTexture);R(d.TEXTURE_CUBE_MAP,a,a);for(var c=0;c<6;c++){a.__webglFramebuffer[c]=d.createFramebuffer();a.__webglRenderbuffer[c]=d.createRenderbuffer();d.texImage2D(d.TEXTURE_CUBE_MAP_POSITIVE_X+c,0,U(a.format),a.width,a.height,0,U(a.format),U(a.type),
null);var e=a,f=d.TEXTURE_CUBE_MAP_POSITIVE_X+c;d.bindFramebuffer(d.FRAMEBUFFER,a.__webglFramebuffer[c]);d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,f,e.__webglTexture,0);F(a.__webglRenderbuffer[c],a)}}else a.__webglFramebuffer=d.createFramebuffer(),a.__webglRenderbuffer=d.createRenderbuffer(),d.bindTexture(d.TEXTURE_2D,a.__webglTexture),R(d.TEXTURE_2D,a,a),d.texImage2D(d.TEXTURE_2D,0,U(a.format),a.width,a.height,0,U(a.format),U(a.type),null),c=d.TEXTURE_2D,d.bindFramebuffer(d.FRAMEBUFFER,
a.__webglFramebuffer),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,c,a.__webglTexture,0),d.bindRenderbuffer(d.RENDERBUFFER,a.__webglRenderbuffer),F(a.__webglRenderbuffer,a);b?d.bindTexture(d.TEXTURE_CUBE_MAP,null):d.bindTexture(d.TEXTURE_2D,null);d.bindRenderbuffer(d.RENDERBUFFER,null);d.bindFramebuffer(d.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,f=e=0):(b=null,c=Ma,a=Ia,e=za,f=wa);b!==ha&&(d.bindFramebuffer(d.FRAMEBUFFER,
b),d.viewport(e,f,c,a),ha=b)}function na(a){a instanceof THREE.WebGLRenderTargetCube?(d.bindTexture(d.TEXTURE_CUBE_MAP,a.__webglTexture),d.generateMipmap(d.TEXTURE_CUBE_MAP),d.bindTexture(d.TEXTURE_CUBE_MAP,null)):(d.bindTexture(d.TEXTURE_2D,a.__webglTexture),d.generateMipmap(d.TEXTURE_2D),d.bindTexture(d.TEXTURE_2D,null))}function ua(a,b){var c;a==="fragment"?c=d.createShader(d.FRAGMENT_SHADER):a==="vertex"&&(c=d.createShader(d.VERTEX_SHADER));d.shaderSource(c,b);d.compileShader(c);if(!d.getShaderParameter(c,
d.COMPILE_STATUS))return console.error(d.getShaderInfoLog(c)),console.error(b),null;return c}function ta(a){switch(a){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return d.NEAREST;default:return d.LINEAR}}function U(a){switch(a){case THREE.RepeatWrapping:return d.REPEAT;case THREE.ClampToEdgeWrapping:return d.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return d.MIRRORED_REPEAT;case THREE.NearestFilter:return d.NEAREST;case THREE.NearestMipMapNearestFilter:return d.NEAREST_MIPMAP_NEAREST;
case THREE.NearestMipMapLinearFilter:return d.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return d.LINEAR;case THREE.LinearMipMapNearestFilter:return d.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return d.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return d.BYTE;case THREE.UnsignedByteType:return d.UNSIGNED_BYTE;case THREE.ShortType:return d.SHORT;case THREE.UnsignedShortType:return d.UNSIGNED_SHORT;case THREE.IntType:return d.INT;case THREE.UnsignedShortType:return d.UNSIGNED_INT;case THREE.FloatType:return d.FLOAT;
case THREE.AlphaFormat:return d.ALPHA;case THREE.RGBFormat:return d.RGB;case THREE.RGBAFormat:return d.RGBA;case THREE.LuminanceFormat:return d.LUMINANCE;case THREE.LuminanceAlphaFormat:return d.LUMINANCE_ALPHA}return 0}var K=this,d,Ea=[],Qa=null,ha=null,pa=-1,L=null,qa=0,V=null,sa=null,P=null,va=null,ya=null,Fa=null,Ja=null,Ga=null,za=0,wa=0,Ma=0,Ia=0,xa=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],Ba=new THREE.Matrix4,Na=new Float32Array(16),
Oa=new Float32Array(16),Ha=new THREE.Vector4,Sa={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]}},a=a||{},Ca=a.canvas!==void 0?a.canvas:document.createElement("canvas"),da=a.stencil!==void 0?a.stencil:!0,Xa=a.preserveDrawingBuffer!==void 0?a.preserveDrawingBuffer:!1,Ya=a.antialias!==void 0?a.antialias:!1,la=a.clearColor!==void 0?new THREE.Color(a.clearColor):new THREE.Color(0),Da=a.clearAlpha!==void 0?a.clearAlpha:0,Ra=a.maxLights!==
void 0?a.maxLights:4;this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0}};this.maxMorphTargets=8;this.domElement=Ca;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapBias=0.0039;this.shadowMapDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCameraNear=1;this.shadowCameraFar=
5E3;this.shadowCameraFov=50;this.shadowMap=[];this.shadowMapEnabled=!1;this.shadowMapSoft=this.shadowMapAutoUpdate=!0;var Z,La=[],a=THREE.ShaderLib.depthRGBA,Va=THREE.UniformsUtils.clone(a.uniforms),Pa=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:Va}),Ta=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:Va,morphTargets:!0});Pa._shadowPass=!0;Ta._shadowPass=!0;try{if(!(d=Ca.getContext("experimental-webgl",
{antialias:Ya,stencil:da,preserveDrawingBuffer:Xa})))throw"Error creating WebGL context.";console.log(navigator.userAgent+" | "+d.getParameter(d.VERSION)+" | "+d.getParameter(d.VENDOR)+" | "+d.getParameter(d.RENDERER)+" | "+d.getParameter(d.SHADING_LANGUAGE_VERSION))}catch(Za){console.error(Za)}d.clearColor(0,0,0,1);d.clearDepth(1);d.clearStencil(0);d.enable(d.DEPTH_TEST);d.depthFunc(d.LEQUAL);d.frontFace(d.CCW);d.cullFace(d.BACK);d.enable(d.CULL_FACE);d.enable(d.BLEND);d.blendEquation(d.FUNC_ADD);
d.blendFunc(d.SRC_ALPHA,d.ONE_MINUS_SRC_ALPHA);d.clearColor(la.r,la.g,la.b,Da);this.context=d;var Wa=d.getParameter(d.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0,t={};t.vertices=new Float32Array(16);t.faces=new Uint16Array(6);da=0;t.vertices[da++]=-1;t.vertices[da++]=-1;t.vertices[da++]=0;t.vertices[da++]=1;t.vertices[da++]=1;t.vertices[da++]=-1;t.vertices[da++]=1;t.vertices[da++]=1;t.vertices[da++]=1;t.vertices[da++]=1;t.vertices[da++]=1;t.vertices[da++]=0;t.vertices[da++]=-1;t.vertices[da++]=1;t.vertices[da++]=
0;da=t.vertices[da++]=0;t.faces[da++]=0;t.faces[da++]=1;t.faces[da++]=2;t.faces[da++]=0;t.faces[da++]=2;t.faces[da++]=3;t.vertexBuffer=d.createBuffer();t.elementBuffer=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,t.vertexBuffer);d.bufferData(d.ARRAY_BUFFER,t.vertices,d.STATIC_DRAW);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,t.elementBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,t.faces,d.STATIC_DRAW);t.program=d.createProgram();d.attachShader(t.program,ua("fragment",THREE.ShaderLib.sprite.fragmentShader));
d.attachShader(t.program,ua("vertex",THREE.ShaderLib.sprite.vertexShader));d.linkProgram(t.program);t.attributes={};t.uniforms={};t.attributes.position=d.getAttribLocation(t.program,"position");t.attributes.uv=d.getAttribLocation(t.program,"uv");t.uniforms.uvOffset=d.getUniformLocation(t.program,"uvOffset");t.uniforms.uvScale=d.getUniformLocation(t.program,"uvScale");t.uniforms.rotation=d.getUniformLocation(t.program,"rotation");t.uniforms.scale=d.getUniformLocation(t.program,"scale");t.uniforms.alignment=
d.getUniformLocation(t.program,"alignment");t.uniforms.color=d.getUniformLocation(t.program,"color");t.uniforms.map=d.getUniformLocation(t.program,"map");t.uniforms.opacity=d.getUniformLocation(t.program,"opacity");t.uniforms.useScreenCoordinates=d.getUniformLocation(t.program,"useScreenCoordinates");t.uniforms.affectedByDistance=d.getUniformLocation(t.program,"affectedByDistance");t.uniforms.screenPosition=d.getUniformLocation(t.program,"screenPosition");t.uniforms.modelViewMatrix=d.getUniformLocation(t.program,
"modelViewMatrix");t.uniforms.projectionMatrix=d.getUniformLocation(t.program,"projectionMatrix");var Ua=!1;this.setSize=function(a,b){Ca.width=a;Ca.height=b;this.setViewport(0,0,Ca.width,Ca.height)};this.setViewport=function(a,b,c,e){za=a;wa=b;Ma=c;Ia=e;d.viewport(za,wa,Ma,Ia)};this.setScissor=function(a,b,c,e){d.scissor(a,b,c,e)};this.enableScissorTest=function(a){a?d.enable(d.SCISSOR_TEST):d.disable(d.SCISSOR_TEST)};this.setClearColorHex=function(a,b){la.setHex(a);Da=b;d.clearColor(la.r,la.g,la.b,
Da)};this.setClearColor=function(a,b){la.copy(a);Da=b;d.clearColor(la.r,la.g,la.b,Da)};this.getClearColor=function(){return la};this.getClearAlpha=function(){return Da};this.clear=function(a,b,c){var e=0;if(a===void 0||a)e|=d.COLOR_BUFFER_BIT;if(b===void 0||b)e|=d.DEPTH_BUFFER_BIT;if(c===void 0||c)e|=d.STENCIL_BUFFER_BIT;d.clear(e)};this.getContext=function(){return d};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,
delete a._objectMatrixArray,a instanceof THREE.Mesh)for(g in a.geometry.geometryGroups){var b=a.geometry.geometryGroups[g];d.deleteBuffer(b.__webglVertexBuffer);d.deleteBuffer(b.__webglNormalBuffer);d.deleteBuffer(b.__webglTangentBuffer);d.deleteBuffer(b.__webglColorBuffer);d.deleteBuffer(b.__webglUVBuffer);d.deleteBuffer(b.__webglUV2Buffer);d.deleteBuffer(b.__webglSkinVertexABuffer);d.deleteBuffer(b.__webglSkinVertexBBuffer);d.deleteBuffer(b.__webglSkinIndicesBuffer);d.deleteBuffer(b.__webglSkinWeightsBuffer);
d.deleteBuffer(b.__webglFaceBuffer);d.deleteBuffer(b.__webglLineBuffer);if(b.numMorphTargets)for(var c=0,e=b.numMorphTargets;c<e;c++)d.deleteBuffer(b.__webglMorphTargetsBuffers[c]);K.info.memory.geometries--}else if(a instanceof THREE.Ribbon)a=a.geometry,d.deleteBuffer(a.__webglVertexBuffer),d.deleteBuffer(a.__webglColorBuffer),K.info.memory.geometries--;else if(a instanceof THREE.Line)a=a.geometry,d.deleteBuffer(a.__webglVertexBuffer),d.deleteBuffer(a.__webglColorBuffer),K.info.memory.geometries--;
else if(a instanceof THREE.ParticleSystem)a=a.geometry,d.deleteBuffer(a.__webglVertexBuffer),d.deleteBuffer(a.__webglColorBuffer),K.info.memory.geometries--};this.deallocateTexture=function(a){if(a.__webglInit)a.__webglInit=!1,d.deleteTexture(a.__webglTexture),K.info.memory.textures--};this.initMaterial=function(a,b,c,e){var f,h,i,l;a instanceof THREE.MeshDepthMaterial?l="depth":a instanceof THREE.MeshNormalMaterial?l="normal":a instanceof THREE.MeshBasicMaterial?l="basic":a instanceof THREE.MeshLambertMaterial?
l="lambert":a instanceof THREE.MeshPhongMaterial?l="phong":a instanceof THREE.LineBasicMaterial?l="basic":a instanceof THREE.ParticleBasicMaterial&&(l="particle_basic");if(l){var j=THREE.ShaderLib[l];a.uniforms=THREE.UniformsUtils.clone(j.uniforms);a.vertexShader=j.vertexShader;a.fragmentShader=j.fragmentShader}var k,q,s;k=s=j=0;for(q=b.length;k<q;k++)i=b[k],i instanceof THREE.SpotLight&&s++,i instanceof THREE.DirectionalLight&&s++,i instanceof THREE.PointLight&&j++;j+s<=Ra?k=s:(k=Math.ceil(Ra*s/
(j+s)),j=Ra-k);i={directional:k,point:j};j=s=0;for(k=b.length;j<k;j++)q=b[j],q instanceof THREE.SpotLight&&q.castShadow&&s++;var m=50;if(e!==void 0&&e instanceof THREE.SkinnedMesh)m=e.bones.length;var u;a:{k=a.fragmentShader;q=a.vertexShader;var j=a.uniforms,b=a.attributes,c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,morphTargets:a.morphTargets,maxMorphTargets:this.maxMorphTargets,maxDirLights:i.directional,
maxPointLights:i.point,maxBones:m,shadowMapEnabled:this.shadowMapEnabled&&e.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapWidth:this.shadowMapWidth,shadowMapHeight:this.shadowMapHeight,maxShadows:s,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel},o,e=[];l?e.push(l):(e.push(k),e.push(q));for(o in c)e.push(o),e.push(c[o]);l=e.join();o=0;for(e=Ea.length;o<e;o++)if(Ea[o].code===l){u=Ea[o].program;break a}o=d.createProgram();e=[Wa?"#define VERTEX_TEXTURES":"",K.gammaInput?"#define GAMMA_INPUT":
"",K.gammaOutput?"#define GAMMA_OUTPUT":"",K.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.perPixel?"#define PHONG_PER_PIXEL":
"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform mat4 cameraInverseMatrix;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
i=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",K.gammaInput?"#define GAMMA_INPUT":"",K.gammaOutput?"#define GAMMA_OUTPUT":"",K.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":
"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapSoft?"#define SHADOWMAP_WIDTH "+c.shadowMapWidth.toFixed(1):"",c.shadowMapSoft?"#define SHADOWMAP_HEIGHT "+c.shadowMapHeight.toFixed(1):"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");d.attachShader(o,ua("fragment",i+k));d.attachShader(o,
ua("vertex",e+q));d.linkProgram(o);d.getProgramParameter(o,d.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+d.getProgramParameter(o,d.VALIDATE_STATUS)+", gl error ["+d.getError()+"]");o.uniforms={};o.attributes={};var p,e=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","cameraInverseMatrix","boneGlobalMatrices","morphTargetInfluences"];for(p in j)e.push(p);p=e;e=0;for(j=p.length;e<j;e++)k=p[e],o.uniforms[k]=d.getUniformLocation(o,
k);e=["position","normal","uv","uv2","tangent","color","skinVertexA","skinVertexB","skinIndex","skinWeight"];for(p=0;p<c.maxMorphTargets;p++)e.push("morphTarget"+p);for(u in b)e.push(u);u=e;p=0;for(b=u.length;p<b;p++)c=u[p],o.attributes[c]=d.getAttribLocation(o,c);o.id=Ea.length;Ea.push({program:o,code:l});K.info.memory.programs=Ea.length;u=o}a.program=u;u=a.program.attributes;u.position>=0&&d.enableVertexAttribArray(u.position);u.color>=0&&d.enableVertexAttribArray(u.color);u.normal>=0&&d.enableVertexAttribArray(u.normal);
u.tangent>=0&&d.enableVertexAttribArray(u.tangent);a.skinning&&u.skinVertexA>=0&&u.skinVertexB>=0&&u.skinIndex>=0&&u.skinWeight>=0&&(d.enableVertexAttribArray(u.skinVertexA),d.enableVertexAttribArray(u.skinVertexB),d.enableVertexAttribArray(u.skinIndex),d.enableVertexAttribArray(u.skinWeight));if(a.attributes)for(h in a.attributes)u[h]!==void 0&&u[h]>=0&&d.enableVertexAttribArray(u[h]);if(a.morphTargets)for(h=a.numSupportedMorphTargets=0;h<this.maxMorphTargets;h++)p="morphTarget"+h,u[p]>=0&&(d.enableVertexAttribArray(u[p]),
a.numSupportedMorphTargets++);a.uniformsList=[];for(f in a.uniforms)a.uniformsList.push([a.uniforms[f],f])};this.clearTarget=function(a,b,c,d){N(a);this.clear(b,c,d)};this.updateShadowMap=function(a,b){B(a,b)};this.render=function(a,b,c,e){var t,Q,Ka,l,r,M,q,s=a.lights,Y=a.fog;pa=-1;this.autoUpdateObjects&&this.initWebGLObjects(a);this.shadowMapEnabled&&this.shadowMapAutoUpdate&&B(a,b);K.info.render.calls=0;K.info.render.vertices=0;K.info.render.faces=0;b.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),
a.add(b));this.autoUpdateScene&&a.updateMatrixWorld();b.matrixWorldInverse.getInverse(b.matrixWorld);b.matrixWorldInverse.flattenToArray(Oa);b.projectionMatrix.flattenToArray(Na);Ba.multiply(b.projectionMatrix,b.matrixWorldInverse);p(Ba);N(c);(this.autoClear||e)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);Ka=a.__webglObjects.length;for(e=0;e<Ka;e++)if(r=a.__webglObjects[e],M=r.object,M.visible)if(!(M instanceof THREE.Mesh)||!M.frustumCulled||z(M)){if(M.matrixWorld.flattenToArray(M._objectMatrixArray),
J(M,b,!0),A(r),r.render=!0,this.sortObjects)M.renderDepth?r.z=M.renderDepth:(Ha.copy(M.position),Ba.multiplyVector3(Ha),r.z=Ha.z)}else r.render=!1;else r.render=!1;this.sortObjects&&a.__webglObjects.sort(D);l=a.__webglObjectsImmediate.length;for(e=0;e<l;e++)r=a.__webglObjectsImmediate[e],M=r.object,M.visible&&(M.matrixAutoUpdate&&M.matrixWorld.flattenToArray(M._objectMatrixArray),J(M,b,!0),y(r));if(a.overrideMaterial){m(a.overrideMaterial.depthTest);G(a.overrideMaterial.blending);for(e=0;e<Ka;e++)if(r=
a.__webglObjects[e],r.render)M=r.object,q=r.buffer,j(M),f(b,s,Y,a.overrideMaterial,q,M);for(e=0;e<l;e++)r=a.__webglObjectsImmediate[e],M=r.object,M.visible&&(L=-1,j(M),t=h(b,s,Y,a.overrideMaterial,M),M.immediateRenderCallback?M.immediateRenderCallback(t,d,xa):M.render(function(b){i(b,t,a.overrideMaterial.shading)}))}else{G(THREE.NormalBlending);for(e=Ka-1;e>=0;e--)if(r=a.__webglObjects[e],r.render&&(M=r.object,q=r.buffer,Q=r.opaque))j(M),m(Q.depthTest),o(Q.depthWrite),k(Q.polygonOffset,Q.polygonOffsetFactor,
Q.polygonOffsetUnits),f(b,s,Y,Q,q,M);for(e=0;e<l;e++)if(r=a.__webglObjectsImmediate[e],M=r.object,M.visible&&(L=-1,Q=r.opaque))j(M),m(Q.depthTest),o(Q.depthWrite),k(Q.polygonOffset,Q.polygonOffsetFactor,Q.polygonOffsetUnits),t=h(b,s,Y,Q,M),M.immediateRenderCallback?M.immediateRenderCallback(t,d,xa):M.render(function(a){i(a,t,Q.shading)});for(e=0;e<Ka;e++)if(r=a.__webglObjects[e],r.render&&(M=r.object,q=r.buffer,Q=r.transparent))j(M),G(Q.blending),m(Q.depthTest),o(Q.depthWrite),k(Q.polygonOffset,Q.polygonOffsetFactor,
Q.polygonOffsetUnits),f(b,s,Y,Q,q,M);for(e=0;e<l;e++)if(r=a.__webglObjectsImmediate[e],M=r.object,M.visible&&(L=-1,Q=r.transparent))j(M),G(Q.blending),m(Q.depthTest),o(Q.depthWrite),k(Q.polygonOffset,Q.polygonOffsetFactor,Q.polygonOffsetUnits),t=h(b,s,Y,Q,M),M.immediateRenderCallback?M.immediateRenderCallback(t,d,xa):M.render(function(a){i(a,t,Q.shading)})}a.__webglSprites.length&&ra(a,b);c&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&na(c)};this.initWebGLObjects=function(a){if(!a.__webglObjects)a.__webglObjects=
[],a.__webglObjectsImmediate=[],a.__webglSprites=[];for(;a.__objectsAdded.length;){var f=a.__objectsAdded[0],h=a,i=void 0,j=void 0,k=void 0;if(!f.__webglInit)if(f.__webglInit=!0,f._modelViewMatrix=new THREE.Matrix4,f._normalMatrixArray=new Float32Array(9),f._modelViewMatrixArray=new Float32Array(16),f._objectMatrixArray=new Float32Array(16),f.matrixWorld.flattenToArray(f._objectMatrixArray),f instanceof THREE.Mesh){j=f.geometry;if(j.geometryGroups===void 0){var k=j,m=void 0,l=void 0,r=void 0,o=void 0,
q=void 0,s=void 0,p=void 0,u={},t=k.morphTargets.length;k.geometryGroups={};m=0;for(l=k.faces.length;m<l;m++)r=k.faces[m],o=r.materialIndex,s=o!==void 0?o:-1,u[s]===void 0&&(u[s]={hash:s,counter:0}),p=u[s].hash+"_"+u[s].counter,k.geometryGroups[p]===void 0&&(k.geometryGroups[p]={faces3:[],faces4:[],materialIndex:o,vertices:0,numMorphTargets:t}),q=r instanceof THREE.Face3?3:4,k.geometryGroups[p].vertices+q>65535&&(u[s].counter+=1,p=u[s].hash+"_"+u[s].counter,k.geometryGroups[p]===void 0&&(k.geometryGroups[p]=
{faces3:[],faces4:[],materialIndex:o,vertices:0,numMorphTargets:t})),r instanceof THREE.Face3?k.geometryGroups[p].faces3.push(m):k.geometryGroups[p].faces4.push(m),k.geometryGroups[p].vertices+=q;k.geometryGroupsList=[];m=void 0;for(m in k.geometryGroups)k.geometryGroups[m].id=qa++,k.geometryGroupsList.push(k.geometryGroups[m])}for(i in j.geometryGroups)if(k=j.geometryGroups[i],!k.__webglVertexBuffer){m=k;m.__webglVertexBuffer=d.createBuffer();m.__webglNormalBuffer=d.createBuffer();m.__webglTangentBuffer=
d.createBuffer();m.__webglColorBuffer=d.createBuffer();m.__webglUVBuffer=d.createBuffer();m.__webglUV2Buffer=d.createBuffer();m.__webglSkinVertexABuffer=d.createBuffer();m.__webglSkinVertexBBuffer=d.createBuffer();m.__webglSkinIndicesBuffer=d.createBuffer();m.__webglSkinWeightsBuffer=d.createBuffer();m.__webglFaceBuffer=d.createBuffer();m.__webglLineBuffer=d.createBuffer();if(m.numMorphTargets){r=l=void 0;m.__webglMorphTargetsBuffers=[];l=0;for(r=m.numMorphTargets;l<r;l++)m.__webglMorphTargetsBuffers.push(d.createBuffer())}K.info.memory.geometries++;
o=f;q=o.geometry;l=k.faces3;s=k.faces4;m=l.length*3+s.length*4;r=l.length*1+s.length*2;s=l.length*3+s.length*4;l=c(o,k);p=l.map||l.lightMap||l instanceof THREE.ShaderMaterial?!0:!1;u=l instanceof THREE.MeshBasicMaterial&&!l.envMap||l instanceof THREE.MeshDepthMaterial?!1:l&&l.shading!==void 0&&l.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading;t=l.vertexColors?l.vertexColors:!1;k.__vertexArray=new Float32Array(m*3);if(u)k.__normalArray=new Float32Array(m*3);if(q.hasTangents)k.__tangentArray=
new Float32Array(m*4);if(t)k.__colorArray=new Float32Array(m*3);if(p){if(q.faceUvs.length>0||q.faceVertexUvs.length>0)k.__uvArray=new Float32Array(m*2);if(q.faceUvs.length>1||q.faceVertexUvs.length>1)k.__uv2Array=new Float32Array(m*2)}if(o.geometry.skinWeights.length&&o.geometry.skinIndices.length)k.__skinVertexAArray=new Float32Array(m*4),k.__skinVertexBArray=new Float32Array(m*4),k.__skinIndexArray=new Float32Array(m*4),k.__skinWeightArray=new Float32Array(m*4);k.__faceArray=new Uint16Array(r*3);
k.__lineArray=new Uint16Array(s*2);if(k.numMorphTargets){k.__morphTargetsArrays=[];o=0;for(q=k.numMorphTargets;o<q;o++)k.__morphTargetsArrays.push(new Float32Array(m*3))}k.__needsSmoothNormals=u===THREE.SmoothShading;k.__uvType=p;k.__vertexColorType=t;k.__normalType=u;k.__webglFaceCount=r*3;k.__webglLineCount=s*2;if(l.attributes){if(k.__webglCustomAttributesList===void 0)k.__webglCustomAttributesList=[];r=void 0;for(r in l.attributes){var o=l.attributes[r],q={},z;for(z in o)q[z]=o[z];if(!q.__webglInitialized||
q.createUniqueBuffers)q.__webglInitialized=!0,s=1,q.type==="v2"?s=2:q.type==="v3"?s=3:q.type==="v4"?s=4:q.type==="c"&&(s=3),q.size=s,q.array=new Float32Array(m*s),q.buffer=d.createBuffer(),q.buffer.belongsToAttribute=r,o.needsUpdate=!0,q.__original=o;k.__webglCustomAttributesList.push(q)}}k.__inittedArrays=!0;j.__dirtyVertices=!0;j.__dirtyMorphTargets=!0;j.__dirtyElements=!0;j.__dirtyUvs=!0;j.__dirtyNormals=!0;j.__dirtyTangents=!0;j.__dirtyColors=!0}}else if(f instanceof THREE.Ribbon){if(j=f.geometry,
!j.__webglVertexBuffer)k=j,k.__webglVertexBuffer=d.createBuffer(),k.__webglColorBuffer=d.createBuffer(),K.info.memory.geometries++,k=j,m=k.vertices.length,k.__vertexArray=new Float32Array(m*3),k.__colorArray=new Float32Array(m*3),k.__webglVertexCount=m,j.__dirtyVertices=!0,j.__dirtyColors=!0}else if(f instanceof THREE.Line){if(j=f.geometry,!j.__webglVertexBuffer)k=j,k.__webglVertexBuffer=d.createBuffer(),k.__webglColorBuffer=d.createBuffer(),K.info.memory.geometries++,k=j,m=f,l=k.vertices.length,
k.__vertexArray=new Float32Array(l*3),k.__colorArray=new Float32Array(l*3),k.__webglLineCount=l,b(k,m),j.__dirtyVertices=!0,j.__dirtyColors=!0}else if(f instanceof THREE.ParticleSystem&&(j=f.geometry,!j.__webglVertexBuffer))k=j,k.__webglVertexBuffer=d.createBuffer(),k.__webglColorBuffer=d.createBuffer(),K.info.geometries++,k=j,m=f,l=k.vertices.length,k.__vertexArray=new Float32Array(l*3),k.__colorArray=new Float32Array(l*3),k.__sortArray=[],k.__webglParticleCount=l,b(k,m),j.__dirtyVertices=!0,j.__dirtyColors=
!0;if(!f.__webglActive){if(f instanceof THREE.Mesh)for(i in j=f.geometry,j.geometryGroups)k=j.geometryGroups[i],ca(h.__webglObjects,k,f);else f instanceof THREE.Ribbon||f instanceof THREE.Line||f instanceof THREE.ParticleSystem?(j=f.geometry,ca(h.__webglObjects,j,f)):THREE.MarchingCubes!==void 0&&f instanceof THREE.MarchingCubes||f.immediateRenderCallback?h.__webglObjectsImmediate.push({object:f,opaque:null,transparent:null}):f instanceof THREE.Sprite&&h.__webglSprites.push(f);f.__webglActive=!0}a.__objectsAdded.splice(0,
1)}for(;a.__objectsRemoved.length;){f=a.__objectsRemoved[0];h=a;if(f instanceof THREE.Mesh||f instanceof THREE.ParticleSystem||f instanceof THREE.Ribbon||f instanceof THREE.Line)S(h.__webglObjects,f);else if(f instanceof THREE.Sprite){h=h.__webglSprites;i=f;for(j=h.length-1;j>=0;j--)h[j]===i&&h.splice(j,1)}else(f instanceof THREE.MarchingCubes||f.immediateRenderCallback)&&S(h.__webglObjectsImmediate,f);f.__webglActive=!1;a.__objectsRemoved.splice(0,1)}f=0;for(h=a.__webglObjects.length;f<h;f++)if(z=
a.__webglObjects[f].object,i=z.geometry,j=r=l=void 0,z instanceof THREE.Mesh){k=0;for(m=i.geometryGroupsList.length;k<m;k++)if(l=i.geometryGroupsList[k],j=c(z,l),r=j.attributes&&ka(j),i.__dirtyVertices||i.__dirtyMorphTargets||i.__dirtyElements||i.__dirtyUvs||i.__dirtyNormals||i.__dirtyColors||i.__dirtyTangents||r)if(r=d.DYNAMIC_DRAW,o=!i.dynamic,l.__inittedArrays){var y=s=q=void 0,w=void 0,A=void 0,D=void 0,v=void 0,B=void 0,G=void 0,R=void 0,L=y=D=G=void 0,F=t=u=p=void 0,aa=void 0,ea=w=void 0,W=
w=G=void 0,X=void 0,H=v=void 0,C=void 0,T=void 0,J=void 0,E=w=T=C=H=J=T=C=H=J=T=C=H=void 0,I=void 0,P=D=void 0,fa=C=y=void 0,N=void 0,da=L=C=I=0,$=0,V=E=y=0,x=H=v=aa=0,O=0,O=void 0,fa=l.__vertexArray,ha=l.__uvArray,x=l.__uv2Array,P=l.__normalArray,A=l.__tangentArray,ea=l.__colorArray,W=l.__skinVertexAArray,X=l.__skinVertexBArray,B=l.__skinIndexArray,ga=l.__skinWeightArray,T=l.__morphTargetsArrays,U=l.__webglCustomAttributesList,n=void 0,n=l.__faceArray,O=l.__lineArray,na=l.__needsSmoothNormals,G=
l.__vertexColorType,R=l.__uvType,D=l.__normalType,Z=z.geometry,ra=Z.__dirtyElements,pa=Z.__dirtyUvs,sa=Z.__dirtyNormals,ua=Z.__dirtyTangents,xa=Z.__dirtyColors,N=Z.__dirtyMorphTargets,la=Z.vertices,ja=l.faces3,ma=l.faces4,ia=Z.faces,va=Z.faceVertexUvs[0],ya=Z.faceVertexUvs[1],ta=Z.skinVerticesA,wa=Z.skinVerticesB,za=Z.skinIndices,Aa=Z.skinWeights,J=Z.morphTargets;if(Z.__dirtyVertices){q=0;for(s=ja.length;q<s;q++)w=ia[ja[q]],p=la[w.a].position,u=la[w.b].position,t=la[w.c].position,fa[C]=p.x,fa[C+1]=
p.y,fa[C+2]=p.z,fa[C+3]=u.x,fa[C+4]=u.y,fa[C+5]=u.z,fa[C+6]=t.x,fa[C+7]=t.y,fa[C+8]=t.z,C+=9;q=0;for(s=ma.length;q<s;q++)w=ia[ma[q]],p=la[w.a].position,u=la[w.b].position,t=la[w.c].position,F=la[w.d].position,fa[C]=p.x,fa[C+1]=p.y,fa[C+2]=p.z,fa[C+3]=u.x,fa[C+4]=u.y,fa[C+5]=u.z,fa[C+6]=t.x,fa[C+7]=t.y,fa[C+8]=t.z,fa[C+9]=F.x,fa[C+10]=F.y,fa[C+11]=F.z,C+=12;d.bindBuffer(d.ARRAY_BUFFER,l.__webglVertexBuffer);d.bufferData(d.ARRAY_BUFFER,fa,r)}if(N){q=0;for(s=ja.length;q<s;q++){w=ia[ja[q]];C=0;for(fa=
J.length;C<fa;C++)p=J[C].vertices[w.a].position,u=J[C].vertices[w.b].position,t=J[C].vertices[w.c].position,N=T[C],N[H]=p.x,N[H+1]=p.y,N[H+2]=p.z,N[H+3]=u.x,N[H+4]=u.y,N[H+5]=u.z,N[H+6]=t.x,N[H+7]=t.y,N[H+8]=t.z;H+=9}q=0;for(s=ma.length;q<s;q++){w=ia[ma[q]];C=0;for(fa=J.length;C<fa;C++)p=J[C].vertices[w.a].position,u=J[C].vertices[w.b].position,t=J[C].vertices[w.c].position,F=J[C].vertices[w.d].position,N=T[C],N[H]=p.x,N[H+1]=p.y,N[H+2]=p.z,N[H+3]=u.x,N[H+4]=u.y,N[H+5]=u.z,N[H+6]=t.x,N[H+7]=t.y,N[H+
8]=t.z,N[H+9]=F.x,N[H+10]=F.y,N[H+11]=F.z;H+=12}C=0;for(fa=J.length;C<fa;C++)d.bindBuffer(d.ARRAY_BUFFER,l.__webglMorphTargetsBuffers[C]),d.bufferData(d.ARRAY_BUFFER,T[C],r)}if(Aa.length){q=0;for(s=ja.length;q<s;q++)w=ia[ja[q]],H=Aa[w.a],C=Aa[w.b],T=Aa[w.c],ga[v]=H.x,ga[v+1]=H.y,ga[v+2]=H.z,ga[v+3]=H.w,ga[v+4]=C.x,ga[v+5]=C.y,ga[v+6]=C.z,ga[v+7]=C.w,ga[v+8]=T.x,ga[v+9]=T.y,ga[v+10]=T.z,ga[v+11]=T.w,H=za[w.a],C=za[w.b],T=za[w.c],B[v]=H.x,B[v+1]=H.y,B[v+2]=H.z,B[v+3]=H.w,B[v+4]=C.x,B[v+5]=C.y,B[v+6]=
C.z,B[v+7]=C.w,B[v+8]=T.x,B[v+9]=T.y,B[v+10]=T.z,B[v+11]=T.w,H=ta[w.a],C=ta[w.b],T=ta[w.c],W[v]=H.x,W[v+1]=H.y,W[v+2]=H.z,W[v+3]=1,W[v+4]=C.x,W[v+5]=C.y,W[v+6]=C.z,W[v+7]=1,W[v+8]=T.x,W[v+9]=T.y,W[v+10]=T.z,W[v+11]=1,H=wa[w.a],C=wa[w.b],T=wa[w.c],X[v]=H.x,X[v+1]=H.y,X[v+2]=H.z,X[v+3]=1,X[v+4]=C.x,X[v+5]=C.y,X[v+6]=C.z,X[v+7]=1,X[v+8]=T.x,X[v+9]=T.y,X[v+10]=T.z,X[v+11]=1,v+=12;q=0;for(s=ma.length;q<s;q++)w=ia[ma[q]],H=Aa[w.a],C=Aa[w.b],T=Aa[w.c],J=Aa[w.d],ga[v]=H.x,ga[v+1]=H.y,ga[v+2]=H.z,ga[v+3]=
H.w,ga[v+4]=C.x,ga[v+5]=C.y,ga[v+6]=C.z,ga[v+7]=C.w,ga[v+8]=T.x,ga[v+9]=T.y,ga[v+10]=T.z,ga[v+11]=T.w,ga[v+12]=J.x,ga[v+13]=J.y,ga[v+14]=J.z,ga[v+15]=J.w,H=za[w.a],C=za[w.b],T=za[w.c],J=za[w.d],B[v]=H.x,B[v+1]=H.y,B[v+2]=H.z,B[v+3]=H.w,B[v+4]=C.x,B[v+5]=C.y,B[v+6]=C.z,B[v+7]=C.w,B[v+8]=T.x,B[v+9]=T.y,B[v+10]=T.z,B[v+11]=T.w,B[v+12]=J.x,B[v+13]=J.y,B[v+14]=J.z,B[v+15]=J.w,H=ta[w.a],C=ta[w.b],T=ta[w.c],J=ta[w.d],W[v]=H.x,W[v+1]=H.y,W[v+2]=H.z,W[v+3]=1,W[v+4]=C.x,W[v+5]=C.y,W[v+6]=C.z,W[v+7]=1,W[v+8]=
T.x,W[v+9]=T.y,W[v+10]=T.z,W[v+11]=1,W[v+12]=J.x,W[v+13]=J.y,W[v+14]=J.z,W[v+15]=1,H=wa[w.a],C=wa[w.b],T=wa[w.c],w=wa[w.d],X[v]=H.x,X[v+1]=H.y,X[v+2]=H.z,X[v+3]=1,X[v+4]=C.x,X[v+5]=C.y,X[v+6]=C.z,X[v+7]=1,X[v+8]=T.x,X[v+9]=T.y,X[v+10]=T.z,X[v+11]=1,X[v+12]=w.x,X[v+13]=w.y,X[v+14]=w.z,X[v+15]=1,v+=16;v>0&&(d.bindBuffer(d.ARRAY_BUFFER,l.__webglSkinVertexABuffer),d.bufferData(d.ARRAY_BUFFER,W,r),d.bindBuffer(d.ARRAY_BUFFER,l.__webglSkinVertexBBuffer),d.bufferData(d.ARRAY_BUFFER,X,r),d.bindBuffer(d.ARRAY_BUFFER,
l.__webglSkinIndicesBuffer),d.bufferData(d.ARRAY_BUFFER,B,r),d.bindBuffer(d.ARRAY_BUFFER,l.__webglSkinWeightsBuffer),d.bufferData(d.ARRAY_BUFFER,ga,r))}if(xa&&G){q=0;for(s=ja.length;q<s;q++)w=ia[ja[q]],v=w.vertexColors,B=w.color,v.length===3&&G===THREE.VertexColors?(w=v[0],W=v[1],X=v[2]):X=W=w=B,ea[aa]=w.r,ea[aa+1]=w.g,ea[aa+2]=w.b,ea[aa+3]=W.r,ea[aa+4]=W.g,ea[aa+5]=W.b,ea[aa+6]=X.r,ea[aa+7]=X.g,ea[aa+8]=X.b,aa+=9;q=0;for(s=ma.length;q<s;q++)w=ia[ma[q]],v=w.vertexColors,B=w.color,v.length===4&&G===
THREE.VertexColors?(w=v[0],W=v[1],X=v[2],v=v[3]):v=X=W=w=B,ea[aa]=w.r,ea[aa+1]=w.g,ea[aa+2]=w.b,ea[aa+3]=W.r,ea[aa+4]=W.g,ea[aa+5]=W.b,ea[aa+6]=X.r,ea[aa+7]=X.g,ea[aa+8]=X.b,ea[aa+9]=v.r,ea[aa+10]=v.g,ea[aa+11]=v.b,aa+=12;aa>0&&(d.bindBuffer(d.ARRAY_BUFFER,l.__webglColorBuffer),d.bufferData(d.ARRAY_BUFFER,ea,r))}if(ua&&Z.hasTangents){q=0;for(s=ja.length;q<s;q++)w=ia[ja[q]],G=w.vertexTangents,aa=G[0],w=G[1],ea=G[2],A[E]=aa.x,A[E+1]=aa.y,A[E+2]=aa.z,A[E+3]=aa.w,A[E+4]=w.x,A[E+5]=w.y,A[E+6]=w.z,A[E+
7]=w.w,A[E+8]=ea.x,A[E+9]=ea.y,A[E+10]=ea.z,A[E+11]=ea.w,E+=12;q=0;for(s=ma.length;q<s;q++)w=ia[ma[q]],G=w.vertexTangents,aa=G[0],w=G[1],ea=G[2],G=G[3],A[E]=aa.x,A[E+1]=aa.y,A[E+2]=aa.z,A[E+3]=aa.w,A[E+4]=w.x,A[E+5]=w.y,A[E+6]=w.z,A[E+7]=w.w,A[E+8]=ea.x,A[E+9]=ea.y,A[E+10]=ea.z,A[E+11]=ea.w,A[E+12]=G.x,A[E+13]=G.y,A[E+14]=G.z,A[E+15]=G.w,E+=16;d.bindBuffer(d.ARRAY_BUFFER,l.__webglTangentBuffer);d.bufferData(d.ARRAY_BUFFER,A,r)}if(sa&&D){q=0;for(s=ja.length;q<s;q++)if(w=ia[ja[q]],A=w.vertexNormals,
D=w.normal,A.length===3&&na)for(E=0;E<3;E++)D=A[E],P[y]=D.x,P[y+1]=D.y,P[y+2]=D.z,y+=3;else for(E=0;E<3;E++)P[y]=D.x,P[y+1]=D.y,P[y+2]=D.z,y+=3;q=0;for(s=ma.length;q<s;q++)if(w=ia[ma[q]],A=w.vertexNormals,D=w.normal,A.length===4&&na)for(E=0;E<4;E++)D=A[E],P[y]=D.x,P[y+1]=D.y,P[y+2]=D.z,y+=3;else for(E=0;E<4;E++)P[y]=D.x,P[y+1]=D.y,P[y+2]=D.z,y+=3;d.bindBuffer(d.ARRAY_BUFFER,l.__webglNormalBuffer);d.bufferData(d.ARRAY_BUFFER,P,r)}if(pa&&va&&R){q=0;for(s=ja.length;q<s;q++)if(y=ja[q],y=va[y],y!==void 0)for(E=
0;E<3;E++)P=y[E],ha[L]=P.u,ha[L+1]=P.v,L+=2;q=0;for(s=ma.length;q<s;q++)if(y=ma[q],y=va[y],y!==void 0)for(E=0;E<4;E++)P=y[E],ha[L]=P.u,ha[L+1]=P.v,L+=2;L>0&&(d.bindBuffer(d.ARRAY_BUFFER,l.__webglUVBuffer),d.bufferData(d.ARRAY_BUFFER,ha,r))}if(pa&&ya&&R){q=0;for(s=ja.length;q<s;q++)if(y=ja[q],L=ya[y],L!==void 0)for(E=0;E<3;E++)y=L[E],x[da]=y.u,x[da+1]=y.v,da+=2;q=0;for(s=ma.length;q<s;q++)if(y=ma[q],L=ya[y],L!==void 0)for(E=0;E<4;E++)y=L[E],x[da]=y.u,x[da+1]=y.v,da+=2;da>0&&(d.bindBuffer(d.ARRAY_BUFFER,
l.__webglUV2Buffer),d.bufferData(d.ARRAY_BUFFER,x,r))}if(ra){q=0;for(s=ja.length;q<s;q++)n[$]=I,n[$+1]=I+1,n[$+2]=I+2,$+=3,O[V]=I,O[V+1]=I+1,O[V+2]=I,O[V+3]=I+2,O[V+4]=I+1,O[V+5]=I+2,V+=6,I+=3;q=0;for(s=ma.length;q<s;q++)n[$]=I,n[$+1]=I+1,n[$+2]=I+3,n[$+3]=I+1,n[$+4]=I+2,n[$+5]=I+3,$+=6,O[V]=I,O[V+1]=I+1,O[V+2]=I,O[V+3]=I+3,O[V+4]=I+1,O[V+5]=I+2,O[V+6]=I+2,O[V+7]=I+3,V+=8,I+=4;d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,l.__webglFaceBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,n,r);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,
l.__webglLineBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,O,r)}if(U){E=0;for(I=U.length;E<I;E++)U[E].offset=0,U[E].offsetSrc=0;q=0;for(s=ja.length;q<s;q++){w=ia[ja[q]];E=0;for(I=U.length;E<I;E++)if(n=U[E],n.__original.needsUpdate)x=n.offset,O=n.offsetSrc,n.size===1?(n.boundTo===void 0||n.boundTo==="vertices"?(n.array[x]=n.value[w.a],n.array[x+1]=n.value[w.b],n.array[x+2]=n.value[w.c]):n.boundTo==="faces"?(O=n.value[O],n.array[x]=O,n.array[x+1]=O,n.array[x+2]=O,n.offsetSrc++):n.boundTo==="faceVertices"&&
(n.array[x]=n.value[O],n.array[x+1]=n.value[O+1],n.array[x+2]=n.value[O+2],n.offsetSrc+=3),n.offset+=3):(n.boundTo===void 0||n.boundTo==="vertices"?(p=n.value[w.a],u=n.value[w.b],t=n.value[w.c]):n.boundTo==="faces"?(t=u=p=O=n.value[O],n.offsetSrc++):n.boundTo==="faceVertices"&&(p=n.value[O],u=n.value[O+1],t=n.value[O+2],n.offsetSrc+=3),n.size===2?(n.array[x]=p.x,n.array[x+1]=p.y,n.array[x+2]=u.x,n.array[x+3]=u.y,n.array[x+4]=t.x,n.array[x+5]=t.y,n.offset+=6):n.size===3?(n.type==="c"?(n.array[x]=p.r,
n.array[x+1]=p.g,n.array[x+2]=p.b,n.array[x+3]=u.r,n.array[x+4]=u.g,n.array[x+5]=u.b,n.array[x+6]=t.r,n.array[x+7]=t.g,n.array[x+8]=t.b):(n.array[x]=p.x,n.array[x+1]=p.y,n.array[x+2]=p.z,n.array[x+3]=u.x,n.array[x+4]=u.y,n.array[x+5]=u.z,n.array[x+6]=t.x,n.array[x+7]=t.y,n.array[x+8]=t.z),n.offset+=9):(n.array[x]=p.x,n.array[x+1]=p.y,n.array[x+2]=p.z,n.array[x+3]=p.w,n.array[x+4]=u.x,n.array[x+5]=u.y,n.array[x+6]=u.z,n.array[x+7]=u.w,n.array[x+8]=t.x,n.array[x+9]=t.y,n.array[x+10]=t.z,n.array[x+11]=
t.w,n.offset+=12))}q=0;for(s=ma.length;q<s;q++){w=ia[ma[q]];E=0;for(I=U.length;E<I;E++)if(n=U[E],n.__original.needsUpdate)x=n.offset,O=n.offsetSrc,n.size===1?(n.boundTo===void 0||n.boundTo==="vertices"?(n.array[x]=n.value[w.a],n.array[x+1]=n.value[w.b],n.array[x+2]=n.value[w.c],n.array[x+3]=n.value[w.d]):n.boundTo==="faces"?(O=n.value[O],n.array[x]=O,n.array[x+1]=O,n.array[x+2]=O,n.array[x+3]=O,n.offsetSrc++):n.boundTo==="faceVertices"&&(n.array[x]=n.value[O],n.array[x+1]=n.value[O+1],n.array[x+2]=
n.value[O+2],n.array[x+3]=n.value[O+3],n.offsetSrc+=4),n.offset+=4):(n.boundTo===void 0||n.boundTo==="vertices"?(p=n.value[w.a],u=n.value[w.b],t=n.value[w.c],F=n.value[w.d]):n.boundTo==="faces"?(F=t=u=p=O=n.value[O],n.offsetSrc++):n.boundTo==="faceVertices"&&(p=n.value[O],u=n.value[O+1],t=n.value[O+2],F=n.value[O+3],n.offsetSrc+=4),n.size===2?(n.array[x]=p.x,n.array[x+1]=p.y,n.array[x+2]=u.x,n.array[x+3]=u.y,n.array[x+4]=t.x,n.array[x+5]=t.y,n.array[x+6]=F.x,n.array[x+7]=F.y,n.offset+=8):n.size===
3?(n.type==="c"?(n.array[x]=p.r,n.array[x+1]=p.g,n.array[x+2]=p.b,n.array[x+3]=u.r,n.array[x+4]=u.g,n.array[x+5]=u.b,n.array[x+6]=t.r,n.array[x+7]=t.g,n.array[x+8]=t.b,n.array[x+9]=F.r,n.array[x+10]=F.g,n.array[x+11]=F.b):(n.array[x]=p.x,n.array[x+1]=p.y,n.array[x+2]=p.z,n.array[x+3]=u.x,n.array[x+4]=u.y,n.array[x+5]=u.z,n.array[x+6]=t.x,n.array[x+7]=t.y,n.array[x+8]=t.z,n.array[x+9]=F.x,n.array[x+10]=F.y,n.array[x+11]=F.z),n.offset+=12):(n.array[x]=p.x,n.array[x+1]=p.y,n.array[x+2]=p.z,n.array[x+
3]=p.w,n.array[x+4]=u.x,n.array[x+5]=u.y,n.array[x+6]=u.z,n.array[x+7]=u.w,n.array[x+8]=t.x,n.array[x+9]=t.y,n.array[x+10]=t.z,n.array[x+11]=t.w,n.array[x+12]=F.x,n.array[x+13]=F.y,n.array[x+14]=F.z,n.array[x+15]=F.w,n.offset+=16))}E=0;for(I=U.length;E<I;E++)n=U[E],n.__original.needsUpdate&&(d.bindBuffer(d.ARRAY_BUFFER,n.buffer),d.bufferData(d.ARRAY_BUFFER,n.array,r))}o&&(delete l.__inittedArrays,delete l.__colorArray,delete l.__normalArray,delete l.__tangentArray,delete l.__uvArray,delete l.__uv2Array,
delete l.__faceArray,delete l.__vertexArray,delete l.__lineArray,delete l.__skinVertexAArray,delete l.__skinVertexBArray,delete l.__skinIndexArray,delete l.__skinWeightArray)}i.__dirtyVertices=!1;i.__dirtyMorphTargets=!1;i.__dirtyElements=!1;i.__dirtyUvs=!1;i.__dirtyNormals=!1;i.__dirtyColors=!1;i.__dirtyTangents=!1;j.attributes&&oa(j)}else if(z instanceof THREE.Ribbon){if(i.__dirtyVertices||i.__dirtyColors){j=i;z=d.DYNAMIC_DRAW;k=q=o=o=void 0;s=j.vertices;m=j.colors;p=s.length;l=m.length;u=j.__vertexArray;
r=j.__colorArray;t=j.__dirtyColors;if(j.__dirtyVertices){for(o=0;o<p;o++)q=s[o].position,k=o*3,u[k]=q.x,u[k+1]=q.y,u[k+2]=q.z;d.bindBuffer(d.ARRAY_BUFFER,j.__webglVertexBuffer);d.bufferData(d.ARRAY_BUFFER,u,z)}if(t){for(o=0;o<l;o++)color=m[o],k=o*3,r[k]=color.r,r[k+1]=color.g,r[k+2]=color.b;d.bindBuffer(d.ARRAY_BUFFER,j.__webglColorBuffer);d.bufferData(d.ARRAY_BUFFER,r,z)}}i.__dirtyVertices=!1;i.__dirtyColors=!1}else if(z instanceof THREE.Line){j=c(z,l);r=j.attributes&&ka(j);if(i.__dirtyVertices||
i.__dirtyColors||r){z=i;k=d.DYNAMIC_DRAW;m=U=s=F=void 0;s=z.vertices;l=z.colors;p=s.length;r=l.length;u=z.__vertexArray;o=z.__colorArray;t=z.__dirtyColors;q=z.__webglCustomAttributesList;I=ia=ma=ja=U=F=void 0;if(z.__dirtyVertices){for(F=0;F<p;F++)U=s[F].position,m=F*3,u[m]=U.x,u[m+1]=U.y,u[m+2]=U.z;d.bindBuffer(d.ARRAY_BUFFER,z.__webglVertexBuffer);d.bufferData(d.ARRAY_BUFFER,u,k)}if(t){for(s=0;s<r;s++)color=l[s],m=s*3,o[m]=color.r,o[m+1]=color.g,o[m+2]=color.b;d.bindBuffer(d.ARRAY_BUFFER,z.__webglColorBuffer);
d.bufferData(d.ARRAY_BUFFER,o,k)}if(q){F=0;for(U=q.length;F<U;F++)if(I=q[F],I.__original.needsUpdate&&(I.boundTo===void 0||I.boundTo==="vertices")){m=0;ma=I.value.length;for(ja=0;ja<ma;ja++)I.size===1?I.array[m]=I.value[ja]:(ia=I.value[ja],I.size===2?(I.array[m]=ia.x,I.array[m+1]=ia.y):I.size===3?I.type==="c"?(I.array[m]=ia.r,I.array[m+1]=ia.g,I.array[m+2]=ia.b):(I.array[m]=ia.x,I.array[m+1]=ia.y,I.array[m+2]=ia.z):(I.array[m]=ia.x,I.array[m+1]=ia.y,I.array[m+2]=ia.z,I.array[m+3]=ia.w)),m+=I.size;
d.bindBuffer(d.ARRAY_BUFFER,I.buffer);d.bufferData(d.ARRAY_BUFFER,I.array,k)}}}i.__dirtyVertices=!1;i.__dirtyColors=!1;j.attributes&&oa(j)}else if(z instanceof THREE.ParticleSystem)j=c(z,l),r=j.attributes&&ka(j),(i.__dirtyVertices||i.__dirtyColors||z.sortParticles||r)&&e(i,d.DYNAMIC_DRAW,z),i.__dirtyVertices=!1,i.__dirtyColors=!1,j.attributes&&oa(j)};this.setFaceCulling=function(a,b){a?(!b||b==="ccw"?d.frontFace(d.CCW):d.frontFace(d.CW),a==="back"?d.cullFace(d.BACK):a==="front"?d.cullFace(d.FRONT):
d.cullFace(d.FRONT_AND_BACK),d.enable(d.CULL_FACE)):d.disable(d.CULL_FACE)};this.supportsVertexTextures=function(){return Wa}};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=c.wrapS!==void 0?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=c.wrapT!==void 0?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=c.magFilter!==void 0?c.magFilter:THREE.LinearFilter;this.minFilter=c.minFilter!==void 0?c.minFilter:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=c.format!==void 0?c.format:THREE.RGBAFormat;this.type=c.type!==void 0?c.type:
THREE.UnsignedByteType;this.depthBuffer=c.depthBuffer!==void 0?c.depthBuffer:!0;this.stencilBuffer=c.stencilBuffer!==void 0?c.stencilBuffer:!0};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;return a};THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};
THREE.WebGLRenderTargetCube.prototype=new THREE.WebGLRenderTarget;THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;
