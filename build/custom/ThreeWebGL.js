// ThreeWebGL.js r46dev - http://github.com/mrdoob/three.js
var THREE=THREE||{};if(!self.Int32Array)self.Int32Array=Array,self.Float32Array=Array;THREE.Color=function(a){a!==void 0&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var e,h,f;if(c===0)this.r=this.g=this.b=0;else switch(e=Math.floor(a*6),h=a*6-e,a=c*(1-b),f=c*(1-
b*h),b=c*(1-b*(1-h)),e){case 1:this.r=f;this.g=c;this.b=a;break;case 2:this.r=a;this.g=c;this.b=b;break;case 3:this.r=a;this.g=f;this.b=c;break;case 4:this.r=b;this.g=a;this.b=c;break;case 5:this.r=c;this.g=a;this.b=f;break;case 6:case 0:this.r=c,this.g=b,this.b=a}return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},getHex:function(){return~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},getContextStyle:function(){return"rgb("+
Math.floor(this.r*255)+","+Math.floor(this.g*255)+","+Math.floor(this.b*255)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},
divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},
equals:function(a){return a.x===this.x&&a.y===this.y}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},
addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},
divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):this.set(0,0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return this.x+this.y+this.z},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){return this.set(this.y*a.z-this.z*a.y,this.z*a.x-this.x*a.z,this.x*a.y-this.y*a.x)},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,a).lengthSq()},setPositionFromMatrix:function(a){this.x=a.n14;this.y=a.n24;this.z=a.n34},setRotationFromMatrix:function(a){var b=Math.cos(this.y);this.y=Math.asin(a.n13);
Math.abs(b)>1.0E-5?(this.x=Math.atan2(-a.n23/b,a.n33/b),this.z=Math.atan2(-a.n12/b,a.n11/b)):(this.x=0,this.z=Math.atan2(a.n21,a.n22))},isZero:function(){return this.lengthSq()<1.0E-4}};THREE.Vector4=function(a,b,c,e){this.x=a||0;this.y=b||0;this.z=c||0;this.w=e!==void 0?e:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,e){this.x=a;this.y=b;this.z=c;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w!==void 0?a.w:1},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-
b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},
normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this}};THREE.Ray=function(a,b){this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3};
THREE.Ray.prototype={constructor:THREE.Ray,intersectScene:function(a){return this.intersectObjects(a.children)},intersectObjects:function(a){var b,c,e=[];b=0;for(c=a.length;b<c;b++)Array.prototype.push.apply(e,this.intersectObject(a[b]));e.sort(function(a,b){return a.distance-b.distance});return e},intersectObject:function(a){function b(a,b,c){var e;e=c.clone().subSelf(a).dot(b);if(e<=0)return null;a=a.clone().addSelf(b.clone().multiplyScalar(e));return c.distanceTo(a)}function c(a,b,c,y){e.copy(y).subSelf(b);
h.copy(c).subSelf(b);f.copy(a).subSelf(b);i=e.dot(e);j=e.dot(h);m=e.dot(f);n=h.dot(h);k=h.dot(f);o=1/(i*n-j*j);s=(n*m-j*k)*o;z=(i*k-j*m)*o;return s>=0&&z>=0&&s+z<1}for(var e=new THREE.Vector3,h=new THREE.Vector3,f=new THREE.Vector3,i,j,m,n,k,o,s,z,y,A=[],C=0,Z=a.children.length;C<Z;C++)Array.prototype.push.apply(A,this.intersectObject(a.children[C]));if(a instanceof THREE.Particle){C=b(this.origin,this.direction,a.matrixWorld.getPosition());if(C===null||C>a.scale.x)return[];y={distance:C,point:a.position,
face:null,object:a};A.push(y)}else if(a instanceof THREE.Mesh){C=b(this.origin,this.direction,a.matrixWorld.getPosition());if(C===null||C>a.geometry.boundingSphere.radius*Math.max(a.scale.x,Math.max(a.scale.y,a.scale.z)))return A;var R,ma,sa,O,W,B,I,$,K=a.geometry,P=K.vertices;a.matrixRotationWorld.extractRotation(a.matrixWorld);C=0;for(Z=K.faces.length;C<Z;C++)if(y=K.faces[C],I=this.origin.clone(),$=this.direction.clone(),O=a.matrixWorld,R=O.multiplyVector3(y.centroid.clone()).subSelf(I),B=R.dot($),
!(B<=0)&&(R=O.multiplyVector3(P[y.a].position.clone()),ma=O.multiplyVector3(P[y.b].position.clone()),sa=O.multiplyVector3(P[y.c].position.clone()),O=y instanceof THREE.Face4?O.multiplyVector3(P[y.d].position.clone()):null,W=a.matrixRotationWorld.multiplyVector3(y.normal.clone()),B=$.dot(W),a.doubleSided||(a.flipSided?B>0:B<0)))if(B=W.dot((new THREE.Vector3).sub(R,I))/B,I=I.addSelf($.multiplyScalar(B)),y instanceof THREE.Face3)c(I,R,ma,sa)&&(y={distance:this.origin.distanceTo(I),point:I,face:y,object:a},
A.push(y));else if(y instanceof THREE.Face4&&(c(I,R,ma,O)||c(I,ma,sa,O)))y={distance:this.origin.distanceTo(I),point:I,face:y,object:a},A.push(y)}return A}};
THREE.Rectangle=function(){function a(){f=e-b;i=h-c}var b,c,e,h,f,i,j=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return f};this.getHeight=function(){return i};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return e};this.getBottom=function(){return h};this.set=function(f,i,k,o){j=!1;b=f;c=i;e=k;h=o;a()};this.addPoint=function(f,i){j?(j=!1,b=f,c=i,e=f,h=i):(b=b<f?b:f,c=c<i?c:i,e=e>f?e:f,h=h>i?h:i);a()};this.add3Points=
function(f,i,k,o,s,z){j?(j=!1,b=f<k?f<s?f:s:k<s?k:s,c=i<o?i<z?i:z:o<z?o:z,e=f>k?f>s?f:s:k>s?k:s,h=i>o?i>z?i:z:o>z?o:z):(b=f<k?f<s?f<b?f:b:s<b?s:b:k<s?k<b?k:b:s<b?s:b,c=i<o?i<z?i<c?i:c:z<c?z:c:o<z?o<c?o:c:z<c?z:c,e=f>k?f>s?f>e?f:e:s>e?s:e:k>s?k>e?k:e:s>e?s:e,h=i>o?i>z?i>h?i:h:z>h?z:h:o>z?o>h?o:h:z>h?z:h);a()};this.addRectangle=function(f){j?(j=!1,b=f.getLeft(),c=f.getTop(),e=f.getRight(),h=f.getBottom()):(b=b<f.getLeft()?b:f.getLeft(),c=c<f.getTop()?c:f.getTop(),e=e>f.getRight()?e:f.getRight(),h=h>
f.getBottom()?h:f.getBottom());a()};this.inflate=function(f){b-=f;c-=f;e+=f;h+=f;a()};this.minSelf=function(f){b=b>f.getLeft()?b:f.getLeft();c=c>f.getTop()?c:f.getTop();e=e<f.getRight()?e:f.getRight();h=h<f.getBottom()?h:f.getBottom();a()};this.intersects=function(a){return Math.min(e,a.getRight())-Math.max(b,a.getLeft())>=0&&Math.min(h,a.getBottom())-Math.max(c,a.getTop())>=0};this.empty=function(){j=!0;h=e=c=b=0;a()};this.isEmpty=function(){return j}};
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,e,h){return e+(a-b)*(h-e)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535}};THREE.Matrix3=function(){this.m=[]};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,transpose:function(){var a,b=this.m;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};
THREE.Matrix4=function(a,b,c,e,h,f,i,j,m,n,k,o,s,z,y,A){this.set(a!==void 0?a:1,b||0,c||0,e||0,h||0,f!==void 0?f:1,i||0,j||0,m||0,n||0,k!==void 0?k:1,o||0,s||0,z||0,y||0,A!==void 0?A:1);this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,e,h,f,i,j,m,n,k,o,s,z,y,A){this.n11=a;this.n12=b;this.n13=c;this.n14=e;this.n21=h;this.n22=f;this.n23=i;this.n24=j;this.n31=m;this.n32=n;this.n33=k;this.n34=o;this.n41=s;this.n42=z;this.n43=y;this.n44=A;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.set(a.n11,a.n12,a.n13,a.n14,a.n21,a.n22,a.n23,a.n24,a.n31,a.n32,a.n33,a.n34,a.n41,a.n42,a.n43,a.n44);return this},lookAt:function(a,
b,c){var e=THREE.Matrix4.__v1,h=THREE.Matrix4.__v2,f=THREE.Matrix4.__v3;f.sub(a,b).normalize();if(f.length()===0)f.z=1;e.cross(c,f).normalize();e.length()===0&&(f.x+=1.0E-4,e.cross(c,f).normalize());h.cross(f,e).normalize();this.n11=e.x;this.n12=h.x;this.n13=f.x;this.n21=e.y;this.n22=h.y;this.n23=f.y;this.n31=e.z;this.n32=h.z;this.n33=f.z;return this},multiply:function(a,b){var c=a.n11,e=a.n12,h=a.n13,f=a.n14,i=a.n21,j=a.n22,m=a.n23,n=a.n24,k=a.n31,o=a.n32,s=a.n33,z=a.n34,y=a.n41,A=a.n42,C=a.n43,
Z=a.n44,R=b.n11,ma=b.n12,sa=b.n13,O=b.n14,W=b.n21,B=b.n22,I=b.n23,$=b.n24,K=b.n31,P=b.n32,la=b.n33,ka=b.n34,xa=b.n41,U=b.n42,F=b.n43,d=b.n44;this.n11=c*R+e*W+h*K+f*xa;this.n12=c*ma+e*B+h*P+f*U;this.n13=c*sa+e*I+h*la+f*F;this.n14=c*O+e*$+h*ka+f*d;this.n21=i*R+j*W+m*K+n*xa;this.n22=i*ma+j*B+m*P+n*U;this.n23=i*sa+j*I+m*la+n*F;this.n24=i*O+j*$+m*ka+n*d;this.n31=k*R+o*W+s*K+z*xa;this.n32=k*ma+o*B+s*P+z*U;this.n33=k*sa+o*I+s*la+z*F;this.n34=k*O+o*$+s*ka+z*d;this.n41=y*R+A*W+C*K+Z*xa;this.n42=y*ma+A*B+C*
P+Z*U;this.n43=y*sa+A*I+C*la+Z*F;this.n44=y*O+A*$+C*ka+Z*d;return this},multiplySelf:function(a){return this.multiply(this,a)},multiplyToArray:function(a,b,c){this.multiply(a,b);c[0]=this.n11;c[1]=this.n21;c[2]=this.n31;c[3]=this.n41;c[4]=this.n12;c[5]=this.n22;c[6]=this.n32;c[7]=this.n42;c[8]=this.n13;c[9]=this.n23;c[10]=this.n33;c[11]=this.n43;c[12]=this.n14;c[13]=this.n24;c[14]=this.n34;c[15]=this.n44;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=
a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},multiplyVector3:function(a){var b=a.x,c=a.y,e=a.z,h=1/(this.n41*b+this.n42*c+this.n43*e+this.n44);a.x=(this.n11*b+this.n12*c+this.n13*e+this.n14)*h;a.y=(this.n21*b+this.n22*c+this.n23*e+this.n24)*h;a.z=(this.n31*b+this.n32*c+this.n33*e+this.n34)*h;return a},multiplyVector4:function(a){var b=a.x,c=a.y,e=a.z,h=a.w;a.x=this.n11*b+this.n12*c+this.n13*e+this.n14*
h;a.y=this.n21*b+this.n22*c+this.n23*e+this.n24*h;a.z=this.n31*b+this.n32*c+this.n33*e+this.n34*h;a.w=this.n41*b+this.n42*c+this.n43*e+this.n44*h;return a},rotateAxis:function(a){var b=a.x,c=a.y,e=a.z;a.x=b*this.n11+c*this.n12+e*this.n13;a.y=b*this.n21+c*this.n22+e*this.n23;a.z=b*this.n31+c*this.n32+e*this.n33;a.normalize();return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;b.z=this.n31*
a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},determinant:function(){var a=this.n11,b=this.n12,c=this.n13,e=this.n14,h=this.n21,f=this.n22,i=this.n23,j=this.n24,m=this.n31,n=this.n32,k=this.n33,o=this.n34,s=this.n41,z=this.n42,y=this.n43,A=this.n44;return e*i*n*s-c*j*n*s-e*f*k*s+b*j*k*s+c*f*o*s-b*i*o*s-e*i*m*z+c*j*m*z+e*h*k*z-a*j*k*z-c*h*o*z+a*i*o*z+e*f*m*y-b*j*m*y-e*h*n*y+a*j*n*y+b*h*o*y-a*f*o*y-c*f*m*A+b*i*m*A+c*h*n*A-a*i*n*A-
b*h*k*A+a*f*k*A},transpose:function(){var a;a=this.n21;this.n21=this.n12;this.n12=a;a=this.n31;this.n31=this.n13;this.n13=a;a=this.n32;this.n32=this.n23;this.n23=a;a=this.n41;this.n41=this.n14;this.n14=a;a=this.n42;this.n42=this.n24;this.n24=a;a=this.n43;this.n43=this.n34;this.n43=a;return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;
a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){this.flat[0]=this.n11;this.flat[1]=this.n21;this.flat[2]=this.n31;this.flat[3]=this.n41;this.flat[4]=this.n12;this.flat[5]=this.n22;this.flat[6]=this.n32;this.flat[7]=this.n42;this.flat[8]=this.n13;this.flat[9]=this.n23;this.flat[10]=this.n33;this.flat[11]=this.n43;this.flat[12]=this.n14;this.flat[13]=this.n24;this.flat[14]=this.n34;this.flat[15]=this.n44;return this.flat},flattenToArray:function(a){a[0]=
this.n11;a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},flattenToArrayOffset:function(a,b){a[b]=this.n11;a[b+1]=this.n21;a[b+2]=this.n31;a[b+3]=this.n41;a[b+4]=this.n12;a[b+5]=this.n22;a[b+6]=this.n32;a[b+7]=this.n42;a[b+8]=this.n13;a[b+9]=this.n23;a[b+10]=this.n33;a[b+11]=this.n43;a[b+12]=this.n14;a[b+13]=this.n24;a[b+14]=
this.n34;a[b+15]=this.n44;return a},setTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},setScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},setRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},setRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},setRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,-a,0,
0,a,b,0,0,0,0,1,0,0,0,0,1);return this},setRotationAxis:function(a,b){var c=Math.cos(b),e=Math.sin(b),h=1-c,f=a.x,i=a.y,j=a.z,m=h*f,n=h*i;this.set(m*f+c,m*i-e*j,m*j+e*i,0,m*i+e*j,n*i+c,n*j-e*f,0,m*j-e*i,n*j+e*f,h*j*j+c,0,0,0,0,1);return this},setPosition:function(a){this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},getPosition:function(){return THREE.Matrix4.__v1.set(this.n14,this.n24,this.n34)},getColumnX:function(){return THREE.Matrix4.__v1.set(this.n11,this.n21,this.n31)},getColumnY:function(){return THREE.Matrix4.__v1.set(this.n12,
this.n22,this.n32)},getColumnZ:function(){return THREE.Matrix4.__v1.set(this.n13,this.n23,this.n33)},getInverse:function(a){var b=a.n11,c=a.n12,e=a.n13,h=a.n14,f=a.n21,i=a.n22,j=a.n23,m=a.n24,n=a.n31,k=a.n32,o=a.n33,s=a.n34,z=a.n41,y=a.n42,A=a.n43,C=a.n44;this.n11=j*s*y-m*o*y+m*k*A-i*s*A-j*k*C+i*o*C;this.n12=h*o*y-e*s*y-h*k*A+c*s*A+e*k*C-c*o*C;this.n13=e*m*y-h*j*y+h*i*A-c*m*A-e*i*C+c*j*C;this.n14=h*j*k-e*m*k-h*i*o+c*m*o+e*i*s-c*j*s;this.n21=m*o*z-j*s*z-m*n*A+f*s*A+j*n*C-f*o*C;this.n22=e*s*z-h*o*z+
h*n*A-b*s*A-e*n*C+b*o*C;this.n23=h*j*z-e*m*z-h*f*A+b*m*A+e*f*C-b*j*C;this.n24=e*m*n-h*j*n+h*f*o-b*m*o-e*f*s+b*j*s;this.n31=i*s*z-m*k*z+m*n*y-f*s*y-i*n*C+f*k*C;this.n32=h*k*z-c*s*z-h*n*y+b*s*y+c*n*C-b*k*C;this.n33=e*m*z-h*i*z+h*f*y-b*m*y-c*f*C+b*i*C;this.n34=h*i*n-c*m*n-h*f*k+b*m*k+c*f*s-b*i*s;this.n41=j*k*z-i*o*z-j*n*y+f*o*y+i*n*A-f*k*A;this.n42=c*o*z-e*k*z+e*n*y-b*o*y-c*n*A+b*k*A;this.n43=e*i*z-c*j*z-e*f*y+b*j*y+c*f*A-b*i*A;this.n44=c*j*n-e*i*n+e*f*k-b*j*k-c*f*o+b*i*o;this.multiplyScalar(1/a.determinant());
return this},setRotationFromEuler:function(a,b){var c=a.x,e=a.y,h=a.z,f=Math.cos(c),c=Math.sin(c),i=Math.cos(e),e=Math.sin(e),j=Math.cos(h),h=Math.sin(h);switch(b){case "YXZ":var m=i*j,n=i*h,k=e*j,o=e*h;this.n11=m+o*c;this.n12=k*c-n;this.n13=f*e;this.n21=f*h;this.n22=f*j;this.n23=-c;this.n31=n*c-k;this.n32=o+m*c;this.n33=f*i;break;case "ZXY":m=i*j;n=i*h;k=e*j;o=e*h;this.n11=m-o*c;this.n12=-f*h;this.n13=k+n*c;this.n21=n+k*c;this.n22=f*j;this.n23=o-m*c;this.n31=-f*e;this.n32=c;this.n33=f*i;break;case "ZYX":m=
f*j;n=f*h;k=c*j;o=c*h;this.n11=i*j;this.n12=k*e-n;this.n13=m*e+o;this.n21=i*h;this.n22=o*e+m;this.n23=n*e-k;this.n31=-e;this.n32=c*i;this.n33=f*i;break;case "YZX":m=f*i;n=f*e;k=c*i;o=c*e;this.n11=i*j;this.n12=o-m*h;this.n13=k*h+n;this.n21=h;this.n22=f*j;this.n23=-c*j;this.n31=-e*j;this.n32=n*h+k;this.n33=m-o*h;break;case "XZY":m=f*i;n=f*e;k=c*i;o=c*e;this.n11=i*j;this.n12=-h;this.n13=e*j;this.n21=m*h+o;this.n22=f*j;this.n23=n*h-k;this.n31=k*h-n;this.n32=c*j;this.n33=o*h+m;break;default:m=f*j,n=f*
h,k=c*j,o=c*h,this.n11=i*j,this.n12=-i*h,this.n13=e,this.n21=n+k*e,this.n22=m-o*e,this.n23=-c*i,this.n31=o-m*e,this.n32=k+n*e,this.n33=f*i}return this},setRotationFromQuaternion:function(a){var b=a.x,c=a.y,e=a.z,h=a.w,f=b+b,i=c+c,j=e+e,a=b*f,m=b*i;b*=j;var n=c*i;c*=j;e*=j;f*=h;i*=h;h*=j;this.n11=1-(n+e);this.n12=m-h;this.n13=b+i;this.n21=m+h;this.n22=1-(a+e);this.n23=c-f;this.n31=b-i;this.n32=c+f;this.n33=1-(a+n);return this},scale:function(a){var b=a.x,c=a.y,a=a.z;this.n11*=b;this.n12*=c;this.n13*=
a;this.n21*=b;this.n22*=c;this.n23*=a;this.n31*=b;this.n32*=c;this.n33*=a;this.n41*=b;this.n42*=c;this.n43*=a;return this},compose:function(a,b,c){var e=THREE.Matrix4.__m1,h=THREE.Matrix4.__m2;e.identity();e.setRotationFromQuaternion(b);h.setScale(c.x,c.y,c.z);this.multiply(e,h);this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},decompose:function(a,b,c){var e=THREE.Matrix4.__v1,h=THREE.Matrix4.__v2,f=THREE.Matrix4.__v3;e.set(this.n11,this.n21,this.n31);h.set(this.n12,this.n22,this.n32);f.set(this.n13,
this.n23,this.n33);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=e.length();c.y=h.length();c.z=f.length();a.x=this.n14;a.y=this.n24;a.z=this.n34;e=THREE.Matrix4.__m1;e.copy(this);e.n11/=c.x;e.n21/=c.x;e.n31/=c.x;e.n12/=c.y;e.n22/=c.y;e.n32/=c.y;e.n13/=c.z;e.n23/=c.z;e.n33/=c.z;b.setFromRotationMatrix(e);return[a,b,c]},extractPosition:function(a){this.n14=a.n14;this.n24=a.n24;this.n34=a.n34;
return this},extractRotation:function(a){var b=THREE.Matrix4.__v1,c=1/b.set(a.n11,a.n21,a.n31).length(),e=1/b.set(a.n12,a.n22,a.n32).length(),b=1/b.set(a.n13,a.n23,a.n33).length();this.n11=a.n11*c;this.n21=a.n21*c;this.n31=a.n31*c;this.n12=a.n12*e;this.n22=a.n22*e;this.n32=a.n32*e;this.n13=a.n13*b;this.n23=a.n23*b;this.n33=a.n33*b;return this}};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.m33,c=b.m,e=a.n33*a.n22-a.n32*a.n23,h=-a.n33*a.n21+a.n31*a.n23,f=a.n32*a.n21-a.n31*a.n22,i=-a.n33*a.n12+a.n32*a.n13,j=a.n33*a.n11-a.n31*a.n13,m=-a.n32*a.n11+a.n31*a.n12,n=a.n23*a.n12-a.n22*a.n13,k=-a.n23*a.n11+a.n21*a.n13,o=a.n22*a.n11-a.n21*a.n12,a=a.n11*e+a.n21*i+a.n31*n;a===0&&console.error("THREE.Matrix4.makeInvert3x3: Matrix not invertible.");a=1/a;c[0]=a*e;c[1]=a*h;c[2]=a*f;c[3]=a*i;c[4]=a*j;c[5]=a*m;c[6]=a*n;c[7]=a*k;c[8]=a*o;return b};
THREE.Matrix4.makeFrustum=function(a,b,c,e,h,f){var i;i=new THREE.Matrix4;i.n11=2*h/(b-a);i.n12=0;i.n13=(b+a)/(b-a);i.n14=0;i.n21=0;i.n22=2*h/(e-c);i.n23=(e+c)/(e-c);i.n24=0;i.n31=0;i.n32=0;i.n33=-(f+h)/(f-h);i.n34=-2*f*h/(f-h);i.n41=0;i.n42=0;i.n43=-1;i.n44=0;return i};THREE.Matrix4.makePerspective=function(a,b,c,e){var h,a=c*Math.tan(a*Math.PI/360);h=-a;return THREE.Matrix4.makeFrustum(h*b,a*b,h,a,c,e)};
THREE.Matrix4.makeOrtho=function(a,b,c,e,h,f){var i,j,m,n;i=new THREE.Matrix4;j=b-a;m=c-e;n=f-h;i.n11=2/j;i.n12=0;i.n13=0;i.n14=-((b+a)/j);i.n21=0;i.n22=2/m;i.n23=0;i.n24=-((c+e)/m);i.n31=0;i.n32=0;i.n33=-2/n;i.n34=-((f+h)/n);i.n41=0;i.n42=0;i.n43=0;i.n44=1;return i};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.Object3D=function(){this.name="";this.id=THREE.Object3DCount++;this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder="XYZ";this.scale=new THREE.Vector3(1,1,1);this.flipSided=this.doubleSided=this.dynamic=!1;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=
!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)},add:function(a){if(this.children.indexOf(a)===
-1){a.parent!==void 0&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(b!==-1){a.parent=void 0;this.children.splice(b,1);for(b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.removeObject(a)}},getChildByName:function(a,b){var c,e,h;c=0;for(e=this.children.length;c<e;c++){h=this.children[c];if(h.name===a)return h;
if(b&&(h=h.getChildByName(a,b),h!==void 0))return h}},updateMatrix:function(){this.matrix.setPosition(this.position);this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder);if(this.scale.x!==1||this.scale.y!==1||this.scale.z!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&
this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)}};THREE.Object3DCount=0;
THREE.Projector=function(){function a(){var a=i[f]=i[f]||new THREE.RenderableObject;f++;return a}function b(){var a=n[m]=n[m]||new THREE.RenderableVertex;m++;return a}function c(a,b){return b.z-a.z}function e(a,b){var c=0,e=1,d=a.z+a.w,f=b.z+b.w,h=-a.z+a.w,i=-b.z+b.w;return d>=0&&f>=0&&h>=0&&i>=0?!0:d<0&&f<0||h<0&&i<0?!1:(d<0?c=Math.max(c,d/(d-f)):f<0&&(e=Math.min(e,d/(d-f))),h<0?c=Math.max(c,h/(h-i)):i<0&&(e=Math.min(e,h/(h-i))),e<c?!1:(a.lerpSelf(b,c),b.lerpSelf(a,1-e),!0))}var h,f,i=[],j,m,n=[],
k,o,s=[],z,y=[],A,C,Z=[],R,ma,sa=[],O={objects:[],sprites:[],lights:[],elements:[]},W=new THREE.Vector3,B=new THREE.Vector4,I=new THREE.Matrix4,$=new THREE.Matrix4,K=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],P=new THREE.Vector4,la=new THREE.Vector4;this.computeFrustum=function(a){K[0].set(a.n41-a.n11,a.n42-a.n12,a.n43-a.n13,a.n44-a.n14);K[1].set(a.n41+a.n11,a.n42+a.n12,a.n43+a.n13,a.n44+a.n14);K[2].set(a.n41+a.n21,a.n42+a.n22,a.n43+
a.n23,a.n44+a.n24);K[3].set(a.n41-a.n21,a.n42-a.n22,a.n43-a.n23,a.n44-a.n24);K[4].set(a.n41-a.n31,a.n42-a.n32,a.n43-a.n33,a.n44-a.n34);K[5].set(a.n41+a.n31,a.n42+a.n32,a.n43+a.n33,a.n44+a.n34);for(a=0;a<6;a++){var b=K[a];b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))}};this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);I.multiply(b.projectionMatrix,b.matrixWorldInverse);I.multiplyVector3(a);return a};this.unprojectVector=function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);
I.multiply(b.matrixWorld,b.projectionMatrixInverse);I.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectGraph=function(b,e){f=0;O.objects.length=0;O.sprites.length=0;O.lights.length=0;var i=function(b){if(b.visible!==!1){var d;if(d=b instanceof THREE.Mesh||b instanceof THREE.Line)if(!(d=b.frustumCulled===!1))a:{for(var c=b.matrixWorld,
e=-b.geometry.boundingSphere.radius*Math.max(b.scale.x,Math.max(b.scale.y,b.scale.z)),f=0;f<6;f++)if(d=K[f].x*c.n14+K[f].y*c.n24+K[f].z*c.n34+K[f].w,d<=e){d=!1;break a}d=!0}d?(I.multiplyVector3(W.copy(b.position)),h=a(),h.object=b,h.z=W.z,O.objects.push(h)):b instanceof THREE.Sprite||b instanceof THREE.Particle?(I.multiplyVector3(W.copy(b.position)),h=a(),h.object=b,h.z=W.z,O.sprites.push(h)):b instanceof THREE.Light&&O.lights.push(b);d=0;for(c=b.children.length;d<c;d++)i(b.children[d])}};i(b);e&&
O.objects.sort(c);return O};this.projectScene=function(a,f,h){var i=f.near,d=f.far,K,W,T,ta,J,ua,V,aa,L,ya,za,Ja,Qa,Ca,Da,Ba;ma=C=z=o=0;O.elements.length=0;f.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),a.add(f));a.updateMatrixWorld();f.matrixWorldInverse.getInverse(f.matrixWorld);I.multiply(f.projectionMatrix,f.matrixWorldInverse);this.computeFrustum(I);O=this.projectGraph(a,!1);a=0;for(K=O.objects.length;a<K;a++)if(L=O.objects[a].object,ya=L.matrixWorld,
Ja=L.material,m=0,L instanceof THREE.Mesh){za=L.geometry;Qa=L.geometry.materials;ta=za.vertices;Ca=za.faces;Da=za.faceVertexUvs;za=L.matrixRotationWorld.extractRotation(ya);W=0;for(T=ta.length;W<T;W++)j=b(),j.positionWorld.copy(ta[W].position),ya.multiplyVector3(j.positionWorld),j.positionScreen.copy(j.positionWorld),I.multiplyVector4(j.positionScreen),j.positionScreen.x/=j.positionScreen.w,j.positionScreen.y/=j.positionScreen.w,j.visible=j.positionScreen.z>i&&j.positionScreen.z<d;ta=0;for(W=Ca.length;ta<
W;ta++){T=Ca[ta];if(T instanceof THREE.Face3)if(J=n[T.a],ua=n[T.b],V=n[T.c],J.visible&&ua.visible&&V.visible&&(L.doubleSided||L.flipSided!=(V.positionScreen.x-J.positionScreen.x)*(ua.positionScreen.y-J.positionScreen.y)-(V.positionScreen.y-J.positionScreen.y)*(ua.positionScreen.x-J.positionScreen.x)<0))aa=s[o]=s[o]||new THREE.RenderableFace3,o++,k=aa,k.v1.copy(J),k.v2.copy(ua),k.v3.copy(V);else continue;else if(T instanceof THREE.Face4)if(J=n[T.a],ua=n[T.b],V=n[T.c],aa=n[T.d],J.visible&&ua.visible&&
V.visible&&aa.visible&&(L.doubleSided||L.flipSided!=((aa.positionScreen.x-J.positionScreen.x)*(ua.positionScreen.y-J.positionScreen.y)-(aa.positionScreen.y-J.positionScreen.y)*(ua.positionScreen.x-J.positionScreen.x)<0||(ua.positionScreen.x-V.positionScreen.x)*(aa.positionScreen.y-V.positionScreen.y)-(ua.positionScreen.y-V.positionScreen.y)*(aa.positionScreen.x-V.positionScreen.x)<0)))Ba=y[z]=y[z]||new THREE.RenderableFace4,z++,k=Ba,k.v1.copy(J),k.v2.copy(ua),k.v3.copy(V),k.v4.copy(aa);else continue;
k.normalWorld.copy(T.normal);za.multiplyVector3(k.normalWorld);k.centroidWorld.copy(T.centroid);ya.multiplyVector3(k.centroidWorld);k.centroidScreen.copy(k.centroidWorld);I.multiplyVector3(k.centroidScreen);V=T.vertexNormals;J=0;for(ua=V.length;J<ua;J++)aa=k.vertexNormalsWorld[J],aa.copy(V[J]),za.multiplyVector3(aa);J=0;for(ua=Da.length;J<ua;J++)if(Ba=Da[J][ta]){V=0;for(aa=Ba.length;V<aa;V++)k.uvs[J][V]=Ba[V]}k.material=Ja;k.faceMaterial=T.materialIndex!==null?Qa[T.materialIndex]:null;k.z=k.centroidScreen.z;
O.elements.push(k)}}else if(L instanceof THREE.Line){$.multiply(I,ya);ta=L.geometry.vertices;J=b();J.positionScreen.copy(ta[0].position);$.multiplyVector4(J.positionScreen);W=1;for(T=ta.length;W<T;W++)if(J=b(),J.positionScreen.copy(ta[W].position),$.multiplyVector4(J.positionScreen),ua=n[m-2],P.copy(J.positionScreen),la.copy(ua.positionScreen),e(P,la))P.multiplyScalar(1/P.w),la.multiplyScalar(1/la.w),L=Z[C]=Z[C]||new THREE.RenderableLine,C++,A=L,A.v1.positionScreen.copy(P),A.v2.positionScreen.copy(la),
A.z=Math.max(P.z,la.z),A.material=Ja,O.elements.push(A)}a=0;for(K=O.sprites.length;a<K;a++)if(L=O.sprites[a].object,ya=L.matrixWorld,L instanceof THREE.Particle&&(B.set(ya.n14,ya.n24,ya.n34,1),I.multiplyVector4(B),B.z/=B.w,B.z>0&&B.z<1))i=sa[ma]=sa[ma]||new THREE.RenderableParticle,ma++,R=i,R.x=B.x/B.w,R.y=B.y/B.w,R.z=B.z,R.rotation=L.rotation.z,R.scale.x=L.scale.x*Math.abs(R.x-(B.x+f.projectionMatrix.n11)/(B.w+f.projectionMatrix.n14)),R.scale.y=L.scale.y*Math.abs(R.y-(B.y+f.projectionMatrix.n22)/
(B.w+f.projectionMatrix.n24)),R.material=L.material,O.elements.push(R);h&&O.elements.sort(c);return O}};THREE.Quaternion=function(a,b,c,e){this.set(a||0,b||0,c||0,e!==void 0?e:1)};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,e){this.x=a;this.y=b;this.z=c;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a){var b=Math.PI/360,c=a.x*b,e=a.y*b,h=a.z*b,a=Math.cos(e),e=Math.sin(e),b=Math.cos(-h),h=Math.sin(-h),f=Math.cos(c),c=Math.sin(c),i=a*b,j=e*h;this.w=i*f-j*c;this.x=i*c+j*f;this.y=e*b*f+a*h*c;this.z=a*h*f-e*b*c;return this},setFromAxisAngle:function(a,b){var c=b/2,e=Math.sin(c);
this.x=a.x*e;this.y=a.y*e;this.z=a.z*e;this.w=Math.cos(c);return this},setFromRotationMatrix:function(a){var b=Math.pow(a.determinant(),1/3);this.w=Math.sqrt(Math.max(0,b+a.n11+a.n22+a.n33))/2;this.x=Math.sqrt(Math.max(0,b+a.n11-a.n22-a.n33))/2;this.y=Math.sqrt(Math.max(0,b-a.n11+a.n22-a.n33))/2;this.z=Math.sqrt(Math.max(0,b-a.n11-a.n22+a.n33))/2;this.x=a.n32-a.n23<0?-Math.abs(this.x):Math.abs(this.x);this.y=a.n13-a.n31<0?-Math.abs(this.y):Math.abs(this.y);this.z=a.n21-a.n12<0?-Math.abs(this.z):Math.abs(this.z);
this.normalize();return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);a===0?this.w=this.z=this.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiplySelf:function(a){var b=
this.x,c=this.y,e=this.z,h=this.w,f=a.x,i=a.y,j=a.z,a=a.w;this.x=b*a+h*f+c*j-e*i;this.y=c*a+h*i+e*f-b*j;this.z=e*a+h*j+b*i-c*f;this.w=h*a-b*f-c*i-e*j;return this},multiply:function(a,b){this.x=a.x*b.w+a.y*b.z-a.z*b.y+a.w*b.x;this.y=-a.x*b.z+a.y*b.w+a.z*b.x+a.w*b.y;this.z=a.x*b.y-a.y*b.x+a.z*b.w+a.w*b.z;this.w=-a.x*b.x-a.y*b.y-a.z*b.z+a.w*b.w;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,e=a.y,h=a.z,f=this.x,i=this.y,j=this.z,m=this.w,n=m*c+i*h-j*e,k=m*e+j*c-f*h,o=m*h+f*e-i*c,c=-f*
c-i*e-j*h;b.x=n*m+c*-f+k*-j-o*-i;b.y=k*m+c*-i+o*-f-n*-j;b.z=o*m+c*-j+n*-i-k*-f;return b}};
THREE.Quaternion.slerp=function(a,b,c,e){var h=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;h<0?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,h=-h):c.copy(b);if(Math.abs(h)>=1)return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;var f=Math.acos(h),h=Math.sqrt(1-h*h);if(Math.abs(h)<0.0010)return c.w=0.5*(a.w+b.w),c.x=0.5*(a.x+b.x),c.y=0.5*(a.y+b.y),c.z=0.5*(a.z+b.z),c;b=Math.sin((1-e)*f)/h;e=Math.sin(e*f)/h;c.w=a.w*b+c.w*e;c.x=a.x*b+c.x*e;c.y=a.y*b+c.y*e;c.z=a.z*b+c.z*e;return c};THREE.Vertex=function(a){this.position=a||new THREE.Vector3};
THREE.Face3=function(a,b,c,e,h,f){this.a=a;this.b=b;this.c=c;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=h instanceof THREE.Color?h:new THREE.Color;this.vertexColors=h instanceof Array?h:[];this.vertexTangents=[];this.materialIndex=f;this.centroid=new THREE.Vector3};
THREE.Face4=function(a,b,c,e,h,f,i){this.a=a;this.b=b;this.c=c;this.d=e;this.normal=h instanceof THREE.Vector3?h:new THREE.Vector3;this.vertexNormals=h instanceof Array?h:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=i;this.centroid=new THREE.Vector3};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){this.id=THREE.GeometryCount++;this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.dynamic=this.hasTangents=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a,new THREE.Vector3(1,1,1));for(var c=0,e=this.vertices.length;c<e;c++)a.multiplyVector3(this.vertices[c].position);c=0;for(e=this.faces.length;c<e;c++){var h=this.faces[c];b.multiplyVector3(h.normal);for(var f=0,i=h.vertexNormals.length;f<i;f++)b.multiplyVector3(h.vertexNormals[f]);a.multiplyVector3(h.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<
b;a++)c=this.faces[a],c.centroid.set(0,0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a].position),c.centroid.addSelf(this.vertices[c.b].position),c.centroid.addSelf(this.vertices[c.c].position),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a].position),c.centroid.addSelf(this.vertices[c.b].position),c.centroid.addSelf(this.vertices[c.c].position),c.centroid.addSelf(this.vertices[c.d].position),c.centroid.divideScalar(4))},computeFaceNormals:function(a){var b,
c,e,h,f,i,j=new THREE.Vector3,m=new THREE.Vector3;e=0;for(h=this.faces.length;e<h;e++){f=this.faces[e];if(a&&f.vertexNormals.length){j.set(0,0,0);b=0;for(c=f.vertexNormals.length;b<c;b++)j.addSelf(f.vertexNormals[b]);j.divideScalar(3)}else b=this.vertices[f.a],c=this.vertices[f.b],i=this.vertices[f.c],j.sub(i.position,c.position),m.sub(b.position,c.position),j.crossSelf(m);j.isZero()||j.normalize();f.normal.copy(j)}},computeVertexNormals:function(){var a,b,c,e;if(this.__tmpVertices===void 0){e=this.__tmpVertices=
Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)e[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)if(c=this.faces[a],c instanceof THREE.Face3)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(c instanceof THREE.Face4)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else{e=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)e[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof
THREE.Face3?(e[c.a].addSelf(c.normal),e[c.b].addSelf(c.normal),e[c.c].addSelf(c.normal)):c instanceof THREE.Face4&&(e[c.a].addSelf(c.normal),e[c.b].addSelf(c.normal),e[c.c].addSelf(c.normal),e[c.d].addSelf(c.normal));a=0;for(b=this.vertices.length;a<b;a++)e[a].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(c.vertexNormals[0].copy(e[c.a]),c.vertexNormals[1].copy(e[c.b]),c.vertexNormals[2].copy(e[c.c])):c instanceof THREE.Face4&&(c.vertexNormals[0].copy(e[c.a]),
c.vertexNormals[1].copy(e[c.b]),c.vertexNormals[2].copy(e[c.c]),c.vertexNormals[3].copy(e[c.d]))},computeTangents:function(){function a(a,b,c,e,f,h,F){j=a.vertices[b].position;m=a.vertices[c].position;n=a.vertices[e].position;k=i[f];o=i[h];s=i[F];z=m.x-j.x;y=n.x-j.x;A=m.y-j.y;C=n.y-j.y;Z=m.z-j.z;R=n.z-j.z;ma=o.u-k.u;sa=s.u-k.u;O=o.v-k.v;W=s.v-k.v;B=1/(ma*W-sa*O);P.set((W*z-O*y)*B,(W*A-O*C)*B,(W*Z-O*R)*B);la.set((ma*y-sa*z)*B,(ma*C-sa*A)*B,(ma*R-sa*Z)*B);$[b].addSelf(P);$[c].addSelf(P);$[e].addSelf(P);
K[b].addSelf(la);K[c].addSelf(la);K[e].addSelf(la)}var b,c,e,h,f,i,j,m,n,k,o,s,z,y,A,C,Z,R,ma,sa,O,W,B,I,$=[],K=[],P=new THREE.Vector3,la=new THREE.Vector3,ka=new THREE.Vector3,xa=new THREE.Vector3,U=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)$[b]=new THREE.Vector3,K[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)f=this.faces[b],i=this.faceVertexUvs[0][b],f instanceof THREE.Face3?a(this,f.a,f.b,f.c,0,1,2):f instanceof THREE.Face4&&(a(this,f.a,f.b,f.c,0,1,2),a(this,f.a,f.b,
f.d,0,1,3));var F=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){f=this.faces[b];for(e=0;e<f.vertexNormals.length;e++)U.copy(f.vertexNormals[e]),h=f[F[e]],I=$[h],ka.copy(I),ka.subSelf(U.multiplyScalar(U.dot(I))).normalize(),xa.cross(f.vertexNormals[e],I),h=xa.dot(K[h]),h=h<0?-1:1,f.vertexTangents[e]=new THREE.Vector4(ka.x,ka.y,ka.z,h)}this.hasTangents=!0},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],
y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,c=this.vertices.length;b<c;b++){a=this.vertices[b];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<
this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=0,b=0,c=this.vertices.length;b<c;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},mergeVertices:function(){var a={},b=[],c=[],e,h=Math.pow(10,4),f,i;f=0;for(i=this.vertices.length;f<i;f++)e=this.vertices[f].position,e=[Math.round(e.x*h),Math.round(e.y*h),Math.round(e.z*h)].join("_"),
a[e]===void 0?(a[e]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[e]];f=0;for(i=this.faces.length;f<i;f++)if(a=this.faces[f],a instanceof THREE.Face3)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c];else if(a instanceof THREE.Face4)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c],a.d=c[a.d];this.vertices=b}};THREE.GeometryCount=0;
THREE.Spline=function(a){function b(a,b,c,e,f,h,i){a=(c-a)*0.5;e=(e-b)*0.5;return(2*(b-c)+a+e)*i+(-3*(b-c)-2*a-e)*h+a*f+b}this.points=a;var c=[],e={x:0,y:0,z:0},h,f,i,j,m,n,k,o,s;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){h=(this.points.length-1)*a;f=Math.floor(h);i=h-f;c[0]=f===0?f:f-1;c[1]=f;c[2]=f>this.points.length-2?f:f+1;c[3]=f>this.points.length-3?f:f+2;n=this.points[c[0]];k=this.points[c[1]];
o=this.points[c[2]];s=this.points[c[3]];j=i*i;m=i*j;e.x=b(n.x,k.x,o.x,s.x,i,j,m);e.y=b(n.y,k.y,o.y,s.y,i,j,m);e.z=b(n.z,k.z,o.z,s.z,i,j,m);return e};this.getControlPointsArray=function(){var a,b,c=this.points.length,e=[];for(a=0;a<c;a++)b=this.points[a],e[a]=[b.x,b.y,b.z];return e};this.getLength=function(a){var b,c,e=b=b=0,f=new THREE.Vector3,h=new THREE.Vector3,i=[],j=0;i[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=a/c,position=this.getPoint(b),h.copy(position),
j+=h.distanceTo(f),f.copy(position),b*=this.points.length-1,b=Math.floor(b),b!=e&&(i[b]=j,e=b);i[i.length]=j;return{chunks:i,total:j}};this.reparametrizeByArcLength=function(a){var b,c,e,f,h,i,j=[],k=new THREE.Vector3,m=this.getLength();j.push(k.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=m.chunks[b]-m.chunks[b-1];i=Math.ceil(a*c/m.total);f=(b-1)/(this.points.length-1);h=b/(this.points.length-1);for(c=1;c<i-1;c++)e=f+c*(1/i)*(h-f),position=this.getPoint(e),j.push(k.copy(position).clone());
j.push(k.copy(this.points[b]).clone())}this.points=j}};THREE.Edge=function(a,b,c,e){this.vertices=[a,b];this.vertexIndices=[c,e];this.faces=[];this.faceIndices=[]};
THREE.Camera=function(){if(arguments.length)return console.warn("DEPRECATED: Camera() is now PerspectiveCamera() or OrthographicCamera()."),new THREE.PerspectiveCamera(arguments[0],arguments[1],arguments[2],arguments[3]);THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=new THREE.Object3D;THREE.Camera.prototype.constructor=THREE.Camera;
THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)};THREE.OrthographicCamera=function(a,b,c,e,h,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=e;this.near=h!==void 0?h:0.1;this.far=f!==void 0?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=new THREE.Camera;THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;
THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makeOrtho(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.PerspectiveCamera=function(a,b,c,e){THREE.Camera.call(this);this.fov=a!==void 0?a:50;this.aspect=b!==void 0?b:1;this.near=c!==void 0?c:0.1;this.far=e!==void 0?e:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=new THREE.Camera;THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;
THREE.PerspectiveCamera.prototype.setLens=function(a,b){this.fov=2*Math.atan((b!==void 0?b:43.25)/(a*2));this.fov*=180/Math.PI;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,e,h,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=e;this.width=h;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,e=a*c,a=Math.abs(a*b-e),c=Math.abs(b-c);this.projectionMatrix=THREE.Matrix4.makeFrustum(e+this.x*a/this.fullWidth,e+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,
this.far)};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=new THREE.Object3D;THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.supr=THREE.Object3D.prototype;THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;
THREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0};THREE.PointLight.prototype=new THREE.Light;
THREE.PointLight.prototype.constructor=THREE.PointLight;THREE.SpotLight=function(a,b,c,e){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0;this.castShadow=e!==void 0?e:!1};THREE.SpotLight.prototype=new THREE.Light;THREE.SpotLight.prototype.constructor=THREE.SpotLight;
THREE.Material=function(a){this.name="";this.id=THREE.MaterialCount++;a=a||{};this.opacity=a.opacity!==void 0?a.opacity:1;this.transparent=a.transparent!==void 0?a.transparent:!1;this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.depthTest=a.depthTest!==void 0?a.depthTest:!0;this.depthWrite=a.depthWrite!==void 0?a.depthWrite:!0;this.polygonOffset=a.polygonOffset!==void 0?a.polygonOffset:!1;this.polygonOffsetFactor=a.polygonOffsetFactor!==void 0?a.polygonOffsetFactor:0;this.polygonOffsetUnits=
a.polygonOffsetUnits!==void 0?a.polygonOffsetUnits:0;this.alphaTest=a.alphaTest!==void 0?a.alphaTest:0;this.overdraw=a.overdraw!==void 0?a.overdraw:!1};THREE.MaterialCount=0;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;THREE.MultiplyBlending=3;THREE.AdditiveAlphaBlending=4;
THREE.LineBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.linewidth=a.linewidth!==void 0?a.linewidth:1;this.linecap=a.linecap!==void 0?a.linecap:"round";this.linejoin=a.linejoin!==void 0?a.linejoin:"round";this.vertexColors=a.vertexColors?a.vertexColors:!1;this.fog=a.fog!==void 0?a.fog:!0};THREE.LineBasicMaterial.prototype=new THREE.Material;THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:null;this.lightMap=a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:
!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:
!1};THREE.MeshBasicMaterial.prototype=new THREE.Material;THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(328965);this.map=a.map!==void 0?a.map:null;this.lightMap=a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=
a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=
a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.MeshLambertMaterial.prototype=new THREE.Material;THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(328965);this.specular=a.specular!==void 0?new THREE.Color(a.specular):new THREE.Color(1118481);this.shininess=a.shininess!==void 0?a.shininess:30;this.metal=a.metal!==void 0?a.metal:!1;this.perPixel=a.perPixel!==void 0?a.perPixel:!1;this.map=a.map!==void 0?a.map:null;this.lightMap=
a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=
a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.MeshPhongMaterial.prototype=new THREE.Material;THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1};THREE.MeshDepthMaterial.prototype=new THREE.Material;THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading?a.shading:THREE.FlatShading;this.wireframe=a.wireframe?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth?a.wireframeLinewidth:1};THREE.MeshNormalMaterial.prototype=new THREE.Material;THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshFaceMaterial=function(){};
THREE.MeshShaderMaterial=function(a){console.warn("DEPRECATED: MeshShaderMaterial() is now ShaderMaterial().");return new THREE.ShaderMaterial(a)};
THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:null;this.size=a.size!==void 0?a.size:1;this.sizeAttenuation=a.sizeAttenuation!==void 0?a.sizeAttenuation:!0;this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.fog=a.fog!==void 0?a.fog:!0};THREE.ParticleBasicMaterial.prototype=new THREE.Material;THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial;
THREE.ShaderMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.fragmentShader=a.fragmentShader!==void 0?a.fragmentShader:"void main() {}";this.vertexShader=a.vertexShader!==void 0?a.vertexShader:"void main() {}";this.uniforms=a.uniforms!==void 0?a.uniforms:{};this.attributes=a.attributes;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.fog=a.fog!==
void 0?a.fog:!1;this.lights=a.lights!==void 0?a.lights:!1;this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.ShaderMaterial.prototype=new THREE.Material;THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;
THREE.Texture=function(a,b,c,e,h,f){this.id=THREE.TextureCount++;this.image=a;this.mapping=b!==void 0?b:new THREE.UVMapping;this.wrapS=c!==void 0?c:THREE.ClampToEdgeWrapping;this.wrapT=e!==void 0?e:THREE.ClampToEdgeWrapping;this.magFilter=h!==void 0?h:THREE.LinearFilter;this.minFilter=f!==void 0?f:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.needsUpdate=!1};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a}};THREE.TextureCount=0;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;
THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;THREE.DataTexture=function(a,b,c,e,h,f,i,j,m){THREE.Texture.call(this,null,h,f,i,j,m);this.image={data:a,width:b,height:c};this.format=e!==void 0?e:THREE.RGBAFormat};THREE.DataTexture.prototype=new THREE.Texture;THREE.DataTexture.prototype.constructor=THREE.DataTexture;
THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.data.slice(0),this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b;this.sortParticles=!1};
THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=b;this.type=c!==void 0?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b;if(b instanceof Array)console.warn("DEPRECATED: Mesh material can no longer be an Array. Using material at index 0..."),this.material=b[0];if(this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};
for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.supr=THREE.Object3D.prototype;
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(this.morphTargetDictionary[a]!==void 0)return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=new THREE.Object3D;THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.supr=THREE.Object3D.prototype;
THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,e=this.children.length;for(c=0;c<e;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b){THREE.Mesh.call(this,a,b);this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var c,e,h,f,i,j;if(this.geometry.bones!==void 0){for(c=0;c<this.geometry.bones.length;c++)h=this.geometry.bones[c],f=h.pos,i=h.rotq,j=h.scl,e=this.addBone(),e.name=h.name,e.position.set(f[0],f[1],f[2]),e.quaternion.set(i[0],i[1],i[2],i[3]),e.useQuaternion=!0,j!==void 0?e.scale.set(j[0],j[1],j[2]):e.scale.set(1,1,1);for(c=0;c<this.bones.length;c++)h=this.geometry.bones[c],
e=this.bones[c],h.parent===-1?this.add(e):this.bones[h.parent].add(e);this.boneMatrices=new Float32Array(16*this.bones.length);this.pose()}};THREE.SkinnedMesh.prototype=new THREE.Mesh;THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.addBone=function(a){a===void 0&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}b=this.bones.length;ba=this.bones;bm=this.boneMatrices;for(a=0;a<b;a++)ba[a].skinMatrix.flattenToArrayOffset(bm,
a*16)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a,b=[],c=0;c<this.bones.length;c++){a=this.bones[c];var e=new THREE.Matrix4;e.getInverse(a.skinMatrix);b.push(e);a.skinMatrix.flattenToArrayOffset(this.boneMatrices,c*16)}if(this.geometry.skinVerticesA===void 0){this.geometry.skinVerticesA=[];this.geometry.skinVerticesB=[];for(a=0;a<this.geometry.skinIndices.length;a++){var c=this.geometry.vertices[a].position,h=this.geometry.skinIndices[a].x,f=this.geometry.skinIndices[a].y,e=
new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesA.push(b[h].multiplyVector3(e));e=new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesB.push(b[f].multiplyVector3(e));this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y!==1&&(c=(1-(this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y))*0.5,this.geometry.skinWeights[a].x+=c,this.geometry.skinWeights[a].y+=c)}}};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};
THREE.Ribbon.prototype=new THREE.Object3D;THREE.Ribbon.prototype.constructor=THREE.Ribbon;THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=new THREE.Object3D;THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.supr=THREE.Object3D.prototype;THREE.LOD.prototype.addLevel=function(a,b){b===void 0&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length;c++)if(b<this.LODs[c].visibleAtDistance)break;this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(this.LODs.length>1){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.n31*this.position.x+a.n32*this.position.y+a.n33*this.position.z+a.n34);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=!1}};
THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map instanceof THREE.Texture?a.map:THREE.ImageUtils.loadTexture(a.map);this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.useScreenCoordinates=a.useScreenCoordinates!==void 0?a.useScreenCoordinates:!0;this.mergeWith3D=a.mergeWith3D!==void 0?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=a.affectedByDistance!==void 0?a.affectedByDistance:
!this.useScreenCoordinates;this.scaleByViewport=a.scaleByViewport!==void 0?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1)};THREE.Sprite.prototype=new THREE.Object3D;THREE.Sprite.prototype.constructor=THREE.Sprite;
THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(this.scale.x!==1||this.scale.y!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);
THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);
THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.objects=[];this.lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=new THREE.Object3D;THREE.Scene.prototype.constructor=THREE.Scene;
THREE.Scene.prototype.addObject=function(a){if(a instanceof THREE.Light)this.lights.indexOf(a)===-1&&this.lights.push(a);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&this.objects.indexOf(a)===-1){this.objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);b!==-1&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.addObject(a.children[b])};
THREE.Scene.prototype.removeObject=function(a){if(a instanceof THREE.Light){var b=this.lights.indexOf(a);b!==-1&&this.lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.objects.indexOf(a),b!==-1&&(this.objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),b!==-1&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=b!==void 0?b:1;this.far=c!==void 0?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b!==void 0?b:2.5E-4};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity );\n} else {\ngl_FragColor.xyz = gl_FragColor.xyz * cubeColor.xyz;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",
lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif",
lights_lambert_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat pointLightWeighting = max( dot( transformedNormal, lVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting * lDistance;\n}\n#endif\nvLightWeighting = vLightWeighting * diffuse + ambient * ambientLightColor;\n}",
lights_phong_pars_vertex:"#if MAX_POINT_LIGHTS > 0\n#ifndef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif",lights_phong_vertex:"#if MAX_POINT_LIGHTS > 0\n#ifndef PHONG_PER_PIXEL\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDistance = lDistance;\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\nfloat pointSpecularWeight = pow( pointDotNormalHalf, shininess );\n#ifdef PHYSICALLY_BASED_SHADING\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance;\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * pointDistance;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = pow( dirDotNormalHalf, shininess );\n#ifdef PHYSICALLY_BASED_SHADING\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * viewMatrix * objectMatrix * gl_Position;\n#endif",
morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\nuniform float morphTargetInfluences[ 8 ];\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0, 0.0, 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",
default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform float shadowDarkness;\nuniform float shadowBias;\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",
shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_SOFT\nconst float xPixelOffset = 1.0 / SHADOWMAP_WIDTH;\nconst float yPixelOffset = 1.0 / SHADOWMAP_HEIGHT;\n#endif\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nshadowCoord.z += shadowBias;\nif ( shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0 ) {\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nfor ( float y = -1.25; y <= 1.25; y += 1.25 )\nfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\nvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadow += 1.0;\n}\nshadow /= 9.0;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( shadowDarkness );\n#endif\n}\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,e,h={};for(b=0;b<a.length;b++)for(c in e=this.clone(a[b]),e)h[c]=e[c];return h},clone:function(a){var b,c,e,h={};for(b in a)for(c in h[b]={},a[b])e=a[b][c],h[b][c]=e instanceof THREE.Color||e instanceof THREE.Vector2||e instanceof THREE.Vector3||e instanceof THREE.Vector4||e instanceof THREE.Matrix4||e instanceof THREE.Texture?e.clone():e instanceof Array?e.slice():e;return h}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},fog:{fogDensity:{type:"f",
value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:6,texture:[]},shadowMatrix:{type:"m4v",value:[]},shadowBias:{type:"f",value:0.0039},shadowDarkness:{type:"f",value:0.2}}};
THREE.ShaderLib={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"},
depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},
vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(328965)}}]),vertexShader:["varying vec3 vLightWeighting;",THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",
THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightWeighting;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",
THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,"gl_FragColor.xyz = gl_FragColor.xyz * vLightWeighting;",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",
value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),vertexShader:["varying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",
THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = -mvPosition.xyz;\nvec3 transformedNormal = normalMatrix * normal;\nvNormal = transformedNormal;",THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,
"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,
THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,
THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,e=b.material;if(e.attributes){if(a.__webglCustomAttributesList===void 0)a.__webglCustomAttributesList=[];for(var f in e.attributes){originalAttribute=e.attributes[f];attribute={};for(property in originalAttribute)attribute[property]=originalAttribute[property];if(!attribute.__webglInitialized||attribute.createUniqueBuffers)attribute.__webglInitialized=!0,size=1,attribute.type==="v2"?size=2:attribute.type==="v3"?size=3:attribute.type===
"v4"?size=4:attribute.type==="c"&&(size=3),attribute.size=size,attribute.array=new Float32Array(c*size),attribute.buffer=d.createBuffer(),attribute.buffer.belongsToAttribute=f,originalAttribute.needsUpdate=!0,attribute.__original=originalAttribute;a.__webglCustomAttributesList.push(attribute)}}}function c(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;else if(b.materialIndex>=0)return a.geometry.materials[b.materialIndex]}function e(a,b,c){var e,f,h,i=a.vertices,
l=i.length,q=a.colors,j=q.length,k=a.__vertexArray,H=a.__colorArray,m=a.__sortArray,x=a.__dirtyVertices,n=a.__dirtyColors,o=a.__webglCustomAttributesList;if(c.sortParticles){Ea.multiplySelf(c.matrixWorld);for(e=0;e<l;e++)f=i[e].position,Fa.copy(f),Ea.multiplyVector3(Fa),m[e]=[Fa.z,e];m.sort(function(a,b){return b[0]-a[0]});for(e=0;e<l;e++)f=i[m[e][1]].position,h=e*3,k[h]=f.x,k[h+1]=f.y,k[h+2]=f.z;for(e=0;e<j;e++)h=e*3,color=q[m[e][1]],H[h]=color.r,H[h+1]=color.g,H[h+2]=color.b;if(o){q=0;for(j=o.length;q<
j;q++)if(l=o[q],l.boundTo===void 0||l.boundTo==="vertices"){h=0;f=l.value.length;for(e=0;e<f;e++)index=m[e][1],l.size===1?l.array[h]=l.value[index]:(i=l.value[index],l.size===2?(l.array[h]=i.x,l.array[h+1]=i.y):l.size===3?l.type==="c"?(l.array[h]=i.r,l.array[h+1]=i.g,l.array[h+2]=i.b):(l.array[h]=i.x,l.array[h+1]=i.y,l.array[h+2]=i.z):(l.array[h]=i.x,l.array[h+1]=i.y,l.array[h+2]=i.z,l.array[h+3]=i.w)),h+=l.size}}}else{if(x)for(e=0;e<l;e++)f=i[e].position,h=e*3,k[h]=f.x,k[h+1]=f.y,k[h+2]=f.z;if(n)for(e=
0;e<j;e++)color=q[e],h=e*3,H[h]=color.r,H[h+1]=color.g,H[h+2]=color.b;if(o){q=0;for(j=o.length;q<j;q++)if(l=o[q],l.__original.needsUpdate&&(l.boundTo===void 0||l.boundTo==="vertices")){f=l.value.length;for(e=h=0;e<f;e++)offset_custom=l.offset,l.size===1?l.array[h]=l.value[e]:(i=l.value[e],l.size===2?(l.array[h]=i.x,l.array[h+1]=i.y):l.size===3?l.type==="c"?(l.array[h]=i.r,l.array[h+1]=i.g,l.array[h+2]=i.b):(l.array[h]=i.x,l.array[h+1]=i.y,l.array[h+2]=i.z):(l.array[h]=i.x,l.array[h+1]=i.y,l.array[h+
2]=i.z,l.array[h+3]=i.w)),h+=l.size}}}if(x||c.sortParticles)d.bindBuffer(d.ARRAY_BUFFER,a.__webglVertexBuffer),d.bufferData(d.ARRAY_BUFFER,k,b);if(n||c.sortParticles)d.bindBuffer(d.ARRAY_BUFFER,a.__webglColorBuffer),d.bufferData(d.ARRAY_BUFFER,H,b);if(o){q=0;for(j=o.length;q<j;q++)if(l=o[q],l.__original.needsUpdate||c.sortParticles)d.bindBuffer(d.ARRAY_BUFFER,l.buffer),d.bufferData(d.ARRAY_BUFFER,l.array,b)}}function h(a,b,c,e,h){e.program||F.initMaterial(e,b,c,h);if(e.morphTargets&&!h.__webglMorphTargetInfluences){h.__webglMorphTargetInfluences=
new Float32Array(F.maxMorphTargets);for(var f=0,i=F.maxMorphTargets;f<i;f++)h.__webglMorphTargetInfluences[f]=0}var l=!1,f=e.program,i=f.uniforms,q=e.uniforms;f!==Xa&&(d.useProgram(f),Xa=f,l=!0);if(e.id!==ta)ta=e.id,l=!0;if(l){d.uniformMatrix4fv(i.projectionMatrix,!1,Ua);if(c&&e.fog)if(q.fogColor.value=c.color,c instanceof THREE.Fog)q.fogNear.value=c.near,q.fogFar.value=c.far;else if(c instanceof THREE.FogExp2)q.fogDensity.value=c.density;if(e instanceof THREE.MeshPhongMaterial||e instanceof THREE.MeshLambertMaterial||
e.lights){for(var j,k,H=0,m=0,x=0,o,n,s,w=Za,t=w.directional.colors,z=w.directional.positions,y=w.point.colors,A=w.point.positions,C=w.point.distances,B=0,G=0,c=j=s=0,l=b.length;c<l;c++)if(j=b[c],k=j.color,o=j.position,n=j.intensity,s=j.distance,j instanceof THREE.AmbientLight)F.gammaInput?(H+=k.r*k.r,m+=k.g*k.g,x+=k.b*k.b):(H+=k.r,m+=k.g,x+=k.b);else if(j instanceof THREE.DirectionalLight)s=B*3,F.gammaInput?(t[s]=k.r*k.r*n*n,t[s+1]=k.g*k.g*n*n,t[s+2]=k.b*k.b*n*n):(t[s]=k.r*n,t[s+1]=k.g*n,t[s+2]=
k.b*n),z[s]=o.x,z[s+1]=o.y,z[s+2]=o.z,B+=1;else if(j instanceof THREE.SpotLight)s=B*3,F.gammaInput?(t[s]=k.r*k.r*n*n,t[s+1]=k.g*k.g*n*n,t[s+2]=k.b*k.b*n*n):(t[s]=k.r*n,t[s+1]=k.g*n,t[s+2]=k.b*n),k=1/o.length(),z[s]=o.x*k,z[s+1]=o.y*k,z[s+2]=o.z*k,B+=1;else if(j instanceof THREE.PointLight)j=G*3,F.gammaInput?(y[j]=k.r*k.r*n*n,y[j+1]=k.g*k.g*n*n,y[j+2]=k.b*k.b*n*n):(y[j]=k.r*n,y[j+1]=k.g*n,y[j+2]=k.b*n),A[j]=o.x,A[j+1]=o.y,A[j+2]=o.z,C[G]=s,G+=1;c=B*3;for(l=t.length;c<l;c++)t[c]=0;c=G*3;for(l=y.length;c<
l;c++)y[c]=0;w.point.length=G;w.directional.length=B;w.ambient[0]=H;w.ambient[1]=m;w.ambient[2]=x;b=Za;q.enableLighting.value=b.directional.length+b.point.length;q.ambientLightColor.value=b.ambient;q.directionalLightColor.value=b.directional.colors;q.directionalLightDirection.value=b.directional.positions;q.pointLightColor.value=b.point.colors;q.pointLightPosition.value=b.point.positions;q.pointLightDistance.value=b.point.distances}if(e instanceof THREE.MeshBasicMaterial||e instanceof THREE.MeshLambertMaterial||
e instanceof THREE.MeshPhongMaterial)q.opacity.value=e.opacity,F.gammaInput?q.diffuse.value.copyGammaToLinear(e.color):q.diffuse.value=e.color,(q.map.texture=e.map)&&q.offsetRepeat.value.set(e.map.offset.x,e.map.offset.y,e.map.repeat.x,e.map.repeat.y),q.lightMap.texture=e.lightMap,q.envMap.texture=e.envMap,q.flipEnvMap.value=e.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,q.reflectivity.value=e.reflectivity,q.refractionRatio.value=e.refractionRatio,q.combine.value=e.combine,q.useRefract.value=
e.envMap&&e.envMap.mapping instanceof THREE.CubeRefractionMapping;if(e instanceof THREE.LineBasicMaterial)q.diffuse.value=e.color,q.opacity.value=e.opacity;else if(e instanceof THREE.ParticleBasicMaterial)q.psColor.value=e.color,q.opacity.value=e.opacity,q.size.value=e.size,q.scale.value=Ga.height/2,q.map.texture=e.map;else if(e instanceof THREE.MeshPhongMaterial)q.shininess.value=e.shininess,F.gammaInput?(q.ambient.value.copyGammaToLinear(e.ambient),q.specular.value.copyGammaToLinear(e.specular)):
(q.ambient.value=e.ambient,q.specular.value=e.specular);else if(e instanceof THREE.MeshLambertMaterial)F.gammaInput?q.ambient.value.copyGammaToLinear(e.ambient):q.ambient.value=e.ambient;else if(e instanceof THREE.MeshDepthMaterial)q.mNear.value=a.near,q.mFar.value=a.far,q.opacity.value=e.opacity;else if(e instanceof THREE.MeshNormalMaterial)q.opacity.value=e.opacity;if(h.receiveShadow&&!e._shadowPass&&q.shadowMatrix){for(b=0;b<Sa.length;b++)q.shadowMatrix.value[b]=Sa[b],q.shadowMap.texture[b]=F.shadowMap[b];
q.shadowDarkness.value=F.shadowMapDarkness;q.shadowBias.value=F.shadowMapBias}b=e.uniformsList;q=0;for(c=b.length;q<c;q++)if(m=f.uniforms[b[q][1]])if(H=b[q][0],x=H.type,l=H.value,x==="i")d.uniform1i(m,l);else if(x==="f")d.uniform1f(m,l);else if(x==="v2")d.uniform2f(m,l.x,l.y);else if(x==="v3")d.uniform3f(m,l.x,l.y,l.z);else if(x==="v4")d.uniform4f(m,l.x,l.y,l.z,l.w);else if(x==="c")d.uniform3f(m,l.r,l.g,l.b);else if(x==="fv1")d.uniform1fv(m,l);else if(x==="fv")d.uniform3fv(m,l);else if(x==="v3v"){if(!H._array)H._array=
new Float32Array(3*l.length);x=0;for(o=l.length;x<o;x++)w=x*3,H._array[w]=l[x].x,H._array[w+1]=l[x].y,H._array[w+2]=l[x].z;d.uniform3fv(m,H._array)}else if(x==="m4"){if(!H._array)H._array=new Float32Array(16);l.flattenToArray(H._array);d.uniformMatrix4fv(m,!1,H._array)}else if(x==="m4v"){if(!H._array)H._array=new Float32Array(16*l.length);x=0;for(o=l.length;x<o;x++)l[x].flattenToArrayOffset(H._array,x*16);d.uniformMatrix4fv(m,!1,H._array)}else if(x==="t"){if(d.uniform1i(m,l),m=H.texture)if(m.image instanceof
Array&&m.image.length===6){if(H=m,H.image.length===6)if(H.needsUpdate){if(!H.image.__webglTextureCube)H.image.__webglTextureCube=d.createTexture();d.activeTexture(d.TEXTURE0+l);d.bindTexture(d.TEXTURE_CUBE_MAP,H.image.__webglTextureCube);for(l=0;l<6;l++)d.texImage2D(d.TEXTURE_CUBE_MAP_POSITIVE_X+l,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,H.image[l]);I(d.TEXTURE_CUBE_MAP,H,H.image[0]);H.needsUpdate=!1}else d.activeTexture(d.TEXTURE0+l),d.bindTexture(d.TEXTURE_CUBE_MAP,H.image.__webglTextureCube)}else m instanceof
THREE.WebGLRenderTargetCube?(H=m,d.activeTexture(d.TEXTURE0+l),d.bindTexture(d.TEXTURE_CUBE_MAP,H.__webglTexture)):$(m,l)}else if(x==="tv"){if(!H._array){H._array=[];x=0;for(o=H.texture.length;x<o;x++)H._array[x]=l+x}d.uniform1iv(m,H._array);x=0;for(o=H.texture.length;x<o;x++)(m=H.texture[x])&&$(m,H._array[x])}(e instanceof THREE.ShaderMaterial||e instanceof THREE.MeshPhongMaterial||e.envMap)&&i.cameraPosition!==null&&d.uniform3f(i.cameraPosition,a.position.x,a.position.y,a.position.z);(e instanceof
THREE.MeshPhongMaterial||e instanceof THREE.MeshLambertMaterial||e instanceof THREE.ShaderMaterial||e.skinning)&&i.viewMatrix!==null&&d.uniformMatrix4fv(i.viewMatrix,!1,Va);e.skinning&&(d.uniformMatrix4fv(i.cameraInverseMatrix,!1,Va),d.uniformMatrix4fv(i.boneGlobalMatrices,!1,h.boneMatrices))}d.uniformMatrix4fv(i.modelViewMatrix,!1,h._modelViewMatrixArray);i.normalMatrix&&d.uniformMatrix3fv(i.normalMatrix,!1,h._normalMatrixArray);(e instanceof THREE.ShaderMaterial||e.envMap||e.skinning||h.receiveShadow)&&
i.objectMatrix!==null&&d.uniformMatrix4fv(i.objectMatrix,!1,h._objectMatrixArray);return f}function f(a,b,c,e,f,i){if(e.opacity!==0){var j,l,c=h(a,b,c,e,i),a=c.attributes,b=!1,c=f.id*16777215+c.id*2+(e.wireframe?1:0);c!==J&&(J=c,b=!0);if(!e.morphTargets&&a.position>=0)b&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglVertexBuffer),d.vertexAttribPointer(a.position,3,d.FLOAT,!1,0,0));else if(i.morphTargetBase){c=e.program.attributes;i.morphTargetBase!==-1?(d.bindBuffer(d.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[i.morphTargetBase]),
d.vertexAttribPointer(c.position,3,d.FLOAT,!1,0,0)):c.position>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglVertexBuffer),d.vertexAttribPointer(c.position,3,d.FLOAT,!1,0,0));if(i.morphTargetForcedOrder.length){j=0;var q=i.morphTargetForcedOrder;for(l=i.morphTargetInfluences;j<e.numSupportedMorphTargets&&j<q.length;)d.bindBuffer(d.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[q[j]]),d.vertexAttribPointer(c["morphTarget"+j],3,d.FLOAT,!1,0,0),i.__webglMorphTargetInfluences[j]=l[q[j]],j++}else{var q=[],k=-1,
m=0;l=i.morphTargetInfluences;var n,o=l.length;j=0;for(i.morphTargetBase!==-1&&(q[i.morphTargetBase]=!0);j<e.numSupportedMorphTargets;){for(n=0;n<o;n++)!q[n]&&l[n]>k&&(m=n,k=l[m]);d.bindBuffer(d.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[m]);d.vertexAttribPointer(c["morphTarget"+j],3,d.FLOAT,!1,0,0);i.__webglMorphTargetInfluences[j]=k;q[m]=1;k=-1;j++}}e.program.uniforms.morphTargetInfluences!==null&&d.uniform1fv(e.program.uniforms.morphTargetInfluences,i.__webglMorphTargetInfluences)}if(b){if(f.__webglCustomAttributesList){j=
0;for(l=f.__webglCustomAttributesList.length;j<l;j++)c=f.__webglCustomAttributesList[j],a[c.buffer.belongsToAttribute]>=0&&(d.bindBuffer(d.ARRAY_BUFFER,c.buffer),d.vertexAttribPointer(a[c.buffer.belongsToAttribute],c.size,d.FLOAT,!1,0,0))}a.color>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglColorBuffer),d.vertexAttribPointer(a.color,3,d.FLOAT,!1,0,0));a.normal>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglNormalBuffer),d.vertexAttribPointer(a.normal,3,d.FLOAT,!1,0,0));a.tangent>=0&&(d.bindBuffer(d.ARRAY_BUFFER,
f.__webglTangentBuffer),d.vertexAttribPointer(a.tangent,4,d.FLOAT,!1,0,0));a.uv>=0&&(f.__webglUVBuffer?(d.bindBuffer(d.ARRAY_BUFFER,f.__webglUVBuffer),d.vertexAttribPointer(a.uv,2,d.FLOAT,!1,0,0),d.enableVertexAttribArray(a.uv)):d.disableVertexAttribArray(a.uv));a.uv2>=0&&(f.__webglUV2Buffer?(d.bindBuffer(d.ARRAY_BUFFER,f.__webglUV2Buffer),d.vertexAttribPointer(a.uv2,2,d.FLOAT,!1,0,0),d.enableVertexAttribArray(a.uv2)):d.disableVertexAttribArray(a.uv2));e.skinning&&a.skinVertexA>=0&&a.skinVertexB>=
0&&a.skinIndex>=0&&a.skinWeight>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinVertexABuffer),d.vertexAttribPointer(a.skinVertexA,4,d.FLOAT,!1,0,0),d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinVertexBBuffer),d.vertexAttribPointer(a.skinVertexB,4,d.FLOAT,!1,0,0),d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinIndicesBuffer),d.vertexAttribPointer(a.skinIndex,4,d.FLOAT,!1,0,0),d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinWeightsBuffer),d.vertexAttribPointer(a.skinWeight,4,d.FLOAT,!1,0,0))}i instanceof THREE.Mesh?(e.wireframe?
(d.lineWidth(e.wireframeLinewidth),b&&d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,f.__webglLineBuffer),d.drawElements(d.LINES,f.__webglLineCount,d.UNSIGNED_SHORT,0)):(b&&d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,f.__webglFaceBuffer),d.drawElements(d.TRIANGLES,f.__webglFaceCount,d.UNSIGNED_SHORT,0)),F.info.render.calls++,F.info.render.vertices+=f.__webglFaceCount,F.info.render.faces+=f.__webglFaceCount/3):i instanceof THREE.Line?(i=i.type===THREE.LineStrip?d.LINE_STRIP:d.LINES,d.lineWidth(e.linewidth),d.drawArrays(i,
0,f.__webglLineCount),F.info.render.calls++):i instanceof THREE.ParticleSystem?(d.drawArrays(d.POINTS,0,f.__webglParticleCount),F.info.render.calls++):i instanceof THREE.Ribbon&&(d.drawArrays(d.TRIANGLE_STRIP,0,f.__webglVertexCount),F.info.render.calls++)}}function i(a,b,c){if(!a.__webglVertexBuffer)a.__webglVertexBuffer=d.createBuffer();if(!a.__webglNormalBuffer)a.__webglNormalBuffer=d.createBuffer();a.hasPos&&(d.bindBuffer(d.ARRAY_BUFFER,a.__webglVertexBuffer),d.bufferData(d.ARRAY_BUFFER,a.positionArray,
d.DYNAMIC_DRAW),d.enableVertexAttribArray(b.attributes.position),d.vertexAttribPointer(b.attributes.position,3,d.FLOAT,!1,0,0));if(a.hasNormal){d.bindBuffer(d.ARRAY_BUFFER,a.__webglNormalBuffer);if(c===THREE.FlatShading){var e,f,h,i,l,j,k,m,n,o,x=a.count*3;for(o=0;o<x;o+=9)c=a.normalArray,e=c[o],f=c[o+1],h=c[o+2],i=c[o+3],j=c[o+4],m=c[o+5],l=c[o+6],k=c[o+7],n=c[o+8],e=(e+i+l)/3,f=(f+j+k)/3,h=(h+m+n)/3,c[o]=e,c[o+1]=f,c[o+2]=h,c[o+3]=e,c[o+4]=f,c[o+5]=h,c[o+6]=e,c[o+7]=f,c[o+8]=h}d.bufferData(d.ARRAY_BUFFER,
a.normalArray,d.DYNAMIC_DRAW);d.enableVertexAttribArray(b.attributes.normal);d.vertexAttribPointer(b.attributes.normal,3,d.FLOAT,!1,0,0)}d.drawArrays(d.TRIANGLES,0,a.count);a.count=0}function j(a){if(V!==a.doubleSided)a.doubleSided?d.disable(d.CULL_FACE):d.enable(d.CULL_FACE),V=a.doubleSided;if(aa!==a.flipSided)a.flipSided?d.frontFace(d.CW):d.frontFace(d.CCW),aa=a.flipSided}function m(a){ya!==a&&(a?d.enable(d.DEPTH_TEST):d.disable(d.DEPTH_TEST),ya=a)}function n(a){za!==a&&(d.depthMask(a),za=a)}function k(a,
b,c){Ja!==a&&(a?d.enable(d.POLYGON_OFFSET_FILL):d.disable(d.POLYGON_OFFSET_FILL),Ja=a);if(a&&(Qa!==b||Ca!==c))d.polygonOffset(b,c),Qa=b,Ca=c}function o(a){ca[0].set(a.n41-a.n11,a.n42-a.n12,a.n43-a.n13,a.n44-a.n14);ca[1].set(a.n41+a.n11,a.n42+a.n12,a.n43+a.n13,a.n44+a.n14);ca[2].set(a.n41+a.n21,a.n42+a.n22,a.n43+a.n23,a.n44+a.n24);ca[3].set(a.n41-a.n21,a.n42-a.n22,a.n43-a.n23,a.n44-a.n24);ca[4].set(a.n41-a.n31,a.n42-a.n32,a.n43-a.n33,a.n44-a.n34);ca[5].set(a.n41+a.n31,a.n42+a.n32,a.n43+a.n33,a.n44+
a.n34);for(var b,a=0;a<6;a++)b=ca[a],b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))}function s(a){for(var b=a.matrixWorld,d=-a.geometry.boundingSphere.radius*Math.max(a.scale.x,Math.max(a.scale.y,a.scale.z)),c=0;c<6;c++)if(a=ca[c].x*b.n14+ca[c].y*b.n24+ca[c].z*b.n34+ca[c].w,a<=d)return!1;return!0}function z(a){var b=a.object.material;b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}function y(a){var b=a.object,d=a.buffer,c;c=b.material;if(c instanceof THREE.MeshFaceMaterial){if(d=
d.materialIndex,d>=0)b=b.geometry.materials[d],b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}else if(b=c)b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}function A(a,b){return b.z-a.z}function C(a){var b,c,e,k=0,S,n,l,q,M=a.lights;na||(na=new THREE.PerspectiveCamera(F.shadowCameraFov,F.shadowMapWidth/F.shadowMapHeight,F.shadowCameraNear,F.shadowCameraFar));b=0;for(c=M.length;b<c;b++)if(e=M[b],e instanceof THREE.SpotLight&&e.castShadow){ta=
-1;F.shadowMap[k]||(F.shadowMap[k]=new THREE.WebGLRenderTarget(F.shadowMapWidth,F.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}));Sa[k]||(Sa[k]=new THREE.Matrix4);S=F.shadowMap[k];n=Sa[k];na.position.copy(e.position);na.lookAt(e.target.position);na.parent==null&&(console.warn("Camera is not on the Scene. Adding it..."),a.add(na));this.autoUpdateScene&&a.updateMatrixWorld();na.matrixWorldInverse.getInverse(na.matrixWorld);n.set(0.5,0,0,0.5,0,0.5,
0,0.5,0,0,0.5,0.5,0,0,0,1);n.multiplySelf(na.projectionMatrix);n.multiplySelf(na.matrixWorldInverse);na.matrixWorldInverse.flattenToArray(Va);na.projectionMatrix.flattenToArray(Ua);Ea.multiply(na.projectionMatrix,na.matrixWorldInverse);o(Ea);P(S);d.clearColor(1,1,1,1);F.clear();d.clearColor(wa.r,wa.g,wa.b,Aa);n=a.__webglObjects.length;e=a.__webglObjectsImmediate.length;for(S=0;S<n;S++)l=a.__webglObjects[S],q=l.object,q.visible&&q.castShadow?!(q instanceof THREE.Mesh)||!q.frustumCulled||s(q)?(q.matrixWorld.flattenToArray(q._objectMatrixArray),
R(q,na,!1),l.render=!0):l.render=!1:l.render=!1;m(!0);B(THREE.NormalBlending);for(S=0;S<n;S++)if(l=a.__webglObjects[S],l.render)q=l.object,buffer=l.buffer,j(q),l=q.customDepthMaterial?q.customDepthMaterial:q.geometry.morphTargets.length?$a:Wa,f(na,M,null,l,buffer,q);for(S=0;S<e;S++)l=a.__webglObjectsImmediate[S],q=l.object,q.visible&&q.castShadow&&(q.matrixAutoUpdate&&q.matrixWorld.flattenToArray(q._objectMatrixArray),J=-1,R(q,na,!1),j(q),program=h(na,M,null,Wa,q),q.immediateRenderCallback?q.immediateRenderCallback(program,
d,ca):q.render(function(a){i(a,program,Wa.shading)}));k++}}function Z(a,b){var c,e,f;c=t.attributes;var h=t.uniforms,i=Pa/Ta,l,j=[],k=Ta*0.5,m=Pa*0.5,n=!0;d.useProgram(t.program);Xa=t.program;J=ya=L=-1;ab||(d.enableVertexAttribArray(t.attributes.position),d.enableVertexAttribArray(t.attributes.uv),ab=!0);d.disable(d.CULL_FACE);d.enable(d.BLEND);d.depthMask(!0);d.bindBuffer(d.ARRAY_BUFFER,t.vertexBuffer);d.vertexAttribPointer(c.position,2,d.FLOAT,!1,16,0);d.vertexAttribPointer(c.uv,2,d.FLOAT,!1,16,
8);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,t.elementBuffer);d.uniformMatrix4fv(h.projectionMatrix,!1,Ua);d.activeTexture(d.TEXTURE0);d.uniform1i(h.map,0);c=0;for(e=a.__webglSprites.length;c<e;c++)if(f=a.__webglSprites[c],f.visible&&f.opacity!==0)f.useScreenCoordinates?f.z=-f.position.z:(f._modelViewMatrix.multiplyToArray(b.matrixWorldInverse,f.matrixWorld,f._modelViewMatrixArray),f.z=-f._modelViewMatrix.n34);a.__webglSprites.sort(A);c=0;for(e=a.__webglSprites.length;c<e;c++)f=a.__webglSprites[c],f.visible&&
f.opacity!==0&&f.map&&f.map.image&&f.map.image.width&&(f.useScreenCoordinates?(d.uniform1i(h.useScreenCoordinates,1),d.uniform3f(h.screenPosition,(f.position.x-k)/k,(m-f.position.y)/m,Math.max(0,Math.min(1,f.position.z)))):(d.uniform1i(h.useScreenCoordinates,0),d.uniform1i(h.affectedByDistance,f.affectedByDistance?1:0),d.uniformMatrix4fv(h.modelViewMatrix,!1,f._modelViewMatrixArray)),l=f.map.image.width/(f.scaleByViewport?Pa:1),j[0]=l*i*f.scale.x,j[1]=l*f.scale.y,d.uniform2f(h.uvScale,f.uvScale.x,
f.uvScale.y),d.uniform2f(h.uvOffset,f.uvOffset.x,f.uvOffset.y),d.uniform2f(h.alignment,f.alignment.x,f.alignment.y),d.uniform1f(h.opacity,f.opacity),d.uniform3f(h.color,f.color.r,f.color.g,f.color.b),d.uniform1f(h.rotation,f.rotation),d.uniform2fv(h.scale,j),f.mergeWith3D&&!n?(d.enable(d.DEPTH_TEST),n=!0):!f.mergeWith3D&&n&&(d.disable(d.DEPTH_TEST),n=!1),B(f.blending),$(f.map,0),d.drawElements(d.TRIANGLES,6,d.UNSIGNED_SHORT,0));d.enable(d.CULL_FACE);d.enable(d.DEPTH_TEST);d.depthMask(za)}function R(a,
b,d){a._modelViewMatrix.multiplyToArray(b.matrixWorldInverse,a.matrixWorld,a._modelViewMatrixArray);d&&THREE.Matrix4.makeInvert3x3(a._modelViewMatrix).transposeIntoArray(a._normalMatrixArray)}function ma(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function sa(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function O(a,b){for(var d=a.length-1;d>=0;d--)a[d].object===b&&a.splice(d,1)}function W(a,b,d){a.push({buffer:b,object:d,opaque:null,transparent:null})}
function B(a){if(a!==L){switch(a){case THREE.AdditiveBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.SRC_ALPHA,d.ONE);break;case THREE.SubtractiveBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.ZERO,d.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.ZERO,d.SRC_COLOR);break;default:d.blendEquationSeparate(d.FUNC_ADD,d.FUNC_ADD),d.blendFuncSeparate(d.SRC_ALPHA,d.ONE_MINUS_SRC_ALPHA,d.ONE,d.ONE_MINUS_SRC_ALPHA)}L=a}}function I(a,b,c){(c.width&c.width-
1)===0&&(c.height&c.height-1)===0?(d.texParameteri(a,d.TEXTURE_WRAP_S,U(b.wrapS)),d.texParameteri(a,d.TEXTURE_WRAP_T,U(b.wrapT)),d.texParameteri(a,d.TEXTURE_MAG_FILTER,U(b.magFilter)),d.texParameteri(a,d.TEXTURE_MIN_FILTER,U(b.minFilter)),d.generateMipmap(a)):(d.texParameteri(a,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(a,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.texParameteri(a,d.TEXTURE_MAG_FILTER,xa(b.magFilter)),d.texParameteri(a,d.TEXTURE_MIN_FILTER,xa(b.minFilter)))}function $(a,b){if(a.needsUpdate){if(!a.__webglInit)a.__webglInit=
!0,a.__webglTexture=d.createTexture(),F.info.memory.textures++;d.activeTexture(d.TEXTURE0+b);d.bindTexture(d.TEXTURE_2D,a.__webglTexture);a instanceof THREE.DataTexture?d.texImage2D(d.TEXTURE_2D,0,U(a.format),a.image.width,a.image.height,0,U(a.format),d.UNSIGNED_BYTE,a.image.data):d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,a.image);I(d.TEXTURE_2D,a,a.image);a.needsUpdate=!1}else d.activeTexture(d.TEXTURE0+b),d.bindTexture(d.TEXTURE_2D,a.__webglTexture)}function K(a,b){d.bindRenderbuffer(d.RENDERBUFFER,
a);b.depthBuffer&&!b.stencilBuffer?(d.renderbufferStorage(d.RENDERBUFFER,d.DEPTH_COMPONENT16,b.width,b.height),d.framebufferRenderbuffer(d.FRAMEBUFFER,d.DEPTH_ATTACHMENT,d.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(d.renderbufferStorage(d.RENDERBUFFER,d.DEPTH_STENCIL,b.width,b.height),d.framebufferRenderbuffer(d.FRAMEBUFFER,d.DEPTH_STENCIL_ATTACHMENT,d.RENDERBUFFER,a)):d.renderbufferStorage(d.RENDERBUFFER,d.RGBA4,b.width,b.height)}function P(a){var b=a instanceof THREE.WebGLRenderTargetCube;
if(a&&!a.__webglFramebuffer){if(a.depthBuffer===void 0)a.depthBuffer=!0;if(a.stencilBuffer===void 0)a.stencilBuffer=!0;a.__webglTexture=d.createTexture();if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];d.bindTexture(d.TEXTURE_CUBE_MAP,a.__webglTexture);I(d.TEXTURE_CUBE_MAP,a,a);for(var c=0;c<6;c++){a.__webglFramebuffer[c]=d.createFramebuffer();a.__webglRenderbuffer[c]=d.createRenderbuffer();d.texImage2D(d.TEXTURE_CUBE_MAP_POSITIVE_X+c,0,U(a.format),a.width,a.height,0,U(a.format),U(a.type),
null);var e=a,f=d.TEXTURE_CUBE_MAP_POSITIVE_X+c;d.bindFramebuffer(d.FRAMEBUFFER,a.__webglFramebuffer[c]);d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,f,e.__webglTexture,0);K(a.__webglRenderbuffer[c],a)}}else a.__webglFramebuffer=d.createFramebuffer(),a.__webglRenderbuffer=d.createRenderbuffer(),d.bindTexture(d.TEXTURE_2D,a.__webglTexture),I(d.TEXTURE_2D,a,a),d.texImage2D(d.TEXTURE_2D,0,U(a.format),a.width,a.height,0,U(a.format),U(a.type),null),c=d.TEXTURE_2D,d.bindFramebuffer(d.FRAMEBUFFER,
a.__webglFramebuffer),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,c,a.__webglTexture,0),d.bindRenderbuffer(d.RENDERBUFFER,a.__webglRenderbuffer),K(a.__webglRenderbuffer,a);b?d.bindTexture(d.TEXTURE_CUBE_MAP,null):d.bindTexture(d.TEXTURE_2D,null);d.bindRenderbuffer(d.RENDERBUFFER,null);d.bindFramebuffer(d.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,f=e=0):(b=null,c=Ta,a=Pa,e=Da,f=Ba);b!==T&&(d.bindFramebuffer(d.FRAMEBUFFER,
b),d.viewport(e,f,c,a),T=b)}function la(a){a instanceof THREE.WebGLRenderTargetCube?(d.bindTexture(d.TEXTURE_CUBE_MAP,a.__webglTexture),d.generateMipmap(d.TEXTURE_CUBE_MAP),d.bindTexture(d.TEXTURE_CUBE_MAP,null)):(d.bindTexture(d.TEXTURE_2D,a.__webglTexture),d.generateMipmap(d.TEXTURE_2D),d.bindTexture(d.TEXTURE_2D,null))}function ka(a,b){var c;a==="fragment"?c=d.createShader(d.FRAGMENT_SHADER):a==="vertex"&&(c=d.createShader(d.VERTEX_SHADER));d.shaderSource(c,b);d.compileShader(c);if(!d.getShaderParameter(c,
d.COMPILE_STATUS))return console.error(d.getShaderInfoLog(c)),console.error(b),null;return c}function xa(a){switch(a){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return d.NEAREST;default:return d.LINEAR}}function U(a){switch(a){case THREE.RepeatWrapping:return d.REPEAT;case THREE.ClampToEdgeWrapping:return d.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return d.MIRRORED_REPEAT;case THREE.NearestFilter:return d.NEAREST;case THREE.NearestMipMapNearestFilter:return d.NEAREST_MIPMAP_NEAREST;
case THREE.NearestMipMapLinearFilter:return d.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return d.LINEAR;case THREE.LinearMipMapNearestFilter:return d.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return d.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return d.BYTE;case THREE.UnsignedByteType:return d.UNSIGNED_BYTE;case THREE.ShortType:return d.SHORT;case THREE.UnsignedShortType:return d.UNSIGNED_SHORT;case THREE.IntType:return d.INT;case THREE.UnsignedShortType:return d.UNSIGNED_INT;case THREE.FloatType:return d.FLOAT;
case THREE.AlphaFormat:return d.ALPHA;case THREE.RGBFormat:return d.RGB;case THREE.RGBAFormat:return d.RGBA;case THREE.LuminanceFormat:return d.LUMINANCE;case THREE.LuminanceAlphaFormat:return d.LUMINANCE_ALPHA}return 0}var F=this,d,Ia=[],Xa=null,T=null,ta=-1,J=null,ua=0,V=null,aa=null,L=null,ya=null,za=null,Ja=null,Qa=null,Ca=null,Da=0,Ba=0,Ta=0,Pa=0,ca=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],Ea=new THREE.Matrix4,Ua=new Float32Array(16),
Va=new Float32Array(16),Fa=new THREE.Vector4,Za={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]}},a=a||{},Ga=a.canvas!==void 0?a.canvas:document.createElement("canvas"),X=a.stencil!==void 0?a.stencil:!0,db=a.preserveDrawingBuffer!==void 0?a.preserveDrawingBuffer:!1,eb=a.antialias!==void 0?a.antialias:!1,wa=a.clearColor!==void 0?new THREE.Color(a.clearColor):new THREE.Color(0),Aa=a.clearAlpha!==void 0?a.clearAlpha:0,Ya=a.maxLights!==
void 0?a.maxLights:4;this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0}};this.maxMorphTargets=8;this.domElement=Ga;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapBias=0.0039;this.shadowMapDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCameraNear=1;this.shadowCameraFar=
5E3;this.shadowCameraFov=50;this.shadowMap=[];this.shadowMapEnabled=!1;this.shadowMapSoft=this.shadowMapAutoUpdate=!0;var na,Sa=[],a=THREE.ShaderLib.depthRGBA,bb=THREE.UniformsUtils.clone(a.uniforms),Wa=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:bb}),$a=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:bb,morphTargets:!0});Wa._shadowPass=!0;$a._shadowPass=!0;try{if(!(d=Ga.getContext("experimental-webgl",
{antialias:eb,stencil:X,preserveDrawingBuffer:db})))throw"Error creating WebGL context.";console.log(navigator.userAgent+" | "+d.getParameter(d.VERSION)+" | "+d.getParameter(d.VENDOR)+" | "+d.getParameter(d.RENDERER)+" | "+d.getParameter(d.SHADING_LANGUAGE_VERSION))}catch(fb){console.error(fb)}d.clearColor(0,0,0,1);d.clearDepth(1);d.clearStencil(0);d.enable(d.DEPTH_TEST);d.depthFunc(d.LEQUAL);d.frontFace(d.CCW);d.cullFace(d.BACK);d.enable(d.CULL_FACE);d.enable(d.BLEND);d.blendEquation(d.FUNC_ADD);
d.blendFunc(d.SRC_ALPHA,d.ONE_MINUS_SRC_ALPHA);d.clearColor(wa.r,wa.g,wa.b,Aa);this.context=d;var cb=d.getParameter(d.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0,t={};t.vertices=new Float32Array(16);t.faces=new Uint16Array(6);X=0;t.vertices[X++]=-1;t.vertices[X++]=-1;t.vertices[X++]=0;t.vertices[X++]=1;t.vertices[X++]=1;t.vertices[X++]=-1;t.vertices[X++]=1;t.vertices[X++]=1;t.vertices[X++]=1;t.vertices[X++]=1;t.vertices[X++]=1;t.vertices[X++]=0;t.vertices[X++]=-1;t.vertices[X++]=1;t.vertices[X++]=0;X=t.vertices[X++]=
0;t.faces[X++]=0;t.faces[X++]=1;t.faces[X++]=2;t.faces[X++]=0;t.faces[X++]=2;t.faces[X++]=3;t.vertexBuffer=d.createBuffer();t.elementBuffer=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,t.vertexBuffer);d.bufferData(d.ARRAY_BUFFER,t.vertices,d.STATIC_DRAW);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,t.elementBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,t.faces,d.STATIC_DRAW);t.program=d.createProgram();d.attachShader(t.program,ka("fragment",THREE.ShaderLib.sprite.fragmentShader));d.attachShader(t.program,ka("vertex",
THREE.ShaderLib.sprite.vertexShader));d.linkProgram(t.program);t.attributes={};t.uniforms={};t.attributes.position=d.getAttribLocation(t.program,"position");t.attributes.uv=d.getAttribLocation(t.program,"uv");t.uniforms.uvOffset=d.getUniformLocation(t.program,"uvOffset");t.uniforms.uvScale=d.getUniformLocation(t.program,"uvScale");t.uniforms.rotation=d.getUniformLocation(t.program,"rotation");t.uniforms.scale=d.getUniformLocation(t.program,"scale");t.uniforms.alignment=d.getUniformLocation(t.program,
"alignment");t.uniforms.color=d.getUniformLocation(t.program,"color");t.uniforms.map=d.getUniformLocation(t.program,"map");t.uniforms.opacity=d.getUniformLocation(t.program,"opacity");t.uniforms.useScreenCoordinates=d.getUniformLocation(t.program,"useScreenCoordinates");t.uniforms.affectedByDistance=d.getUniformLocation(t.program,"affectedByDistance");t.uniforms.screenPosition=d.getUniformLocation(t.program,"screenPosition");t.uniforms.modelViewMatrix=d.getUniformLocation(t.program,"modelViewMatrix");
t.uniforms.projectionMatrix=d.getUniformLocation(t.program,"projectionMatrix");var ab=!1;this.setSize=function(a,b){Ga.width=a;Ga.height=b;this.setViewport(0,0,Ga.width,Ga.height)};this.setViewport=function(a,b,c,e){Da=a;Ba=b;Ta=c;Pa=e;d.viewport(Da,Ba,Ta,Pa)};this.setScissor=function(a,b,c,e){d.scissor(a,b,c,e)};this.enableScissorTest=function(a){a?d.enable(d.SCISSOR_TEST):d.disable(d.SCISSOR_TEST)};this.setClearColorHex=function(a,b){wa.setHex(a);Aa=b;d.clearColor(wa.r,wa.g,wa.b,Aa)};this.setClearColor=
function(a,b){wa.copy(a);Aa=b;d.clearColor(wa.r,wa.g,wa.b,Aa)};this.getClearColor=function(){return wa};this.getClearAlpha=function(){return Aa};this.clear=function(a,b,c){var e=0;if(a===void 0||a)e|=d.COLOR_BUFFER_BIT;if(b===void 0||b)e|=d.DEPTH_BUFFER_BIT;if(c===void 0||c)e|=d.STENCIL_BUFFER_BIT;d.clear(e)};this.getContext=function(){return d};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,
delete a._objectMatrixArray,a instanceof THREE.Mesh)for(g in a.geometry.geometryGroups){var b=a.geometry.geometryGroups[g];d.deleteBuffer(b.__webglVertexBuffer);d.deleteBuffer(b.__webglNormalBuffer);d.deleteBuffer(b.__webglTangentBuffer);d.deleteBuffer(b.__webglColorBuffer);d.deleteBuffer(b.__webglUVBuffer);d.deleteBuffer(b.__webglUV2Buffer);d.deleteBuffer(b.__webglSkinVertexABuffer);d.deleteBuffer(b.__webglSkinVertexBBuffer);d.deleteBuffer(b.__webglSkinIndicesBuffer);d.deleteBuffer(b.__webglSkinWeightsBuffer);
d.deleteBuffer(b.__webglFaceBuffer);d.deleteBuffer(b.__webglLineBuffer);if(b.numMorphTargets)for(var c=0,e=b.numMorphTargets;c<e;c++)d.deleteBuffer(b.__webglMorphTargetsBuffers[c]);F.info.memory.geometries--}else if(a instanceof THREE.Ribbon)a=a.geometry,d.deleteBuffer(a.__webglVertexBuffer),d.deleteBuffer(a.__webglColorBuffer),F.info.memory.geometries--;else if(a instanceof THREE.Line)a=a.geometry,d.deleteBuffer(a.__webglVertexBuffer),d.deleteBuffer(a.__webglColorBuffer),F.info.memory.geometries--;
else if(a instanceof THREE.ParticleSystem)a=a.geometry,d.deleteBuffer(a.__webglVertexBuffer),d.deleteBuffer(a.__webglColorBuffer),F.info.memory.geometries--};this.deallocateTexture=function(a){if(a.__webglInit)a.__webglInit=!1,d.deleteTexture(a.__webglTexture),F.info.memory.textures--};this.initMaterial=function(a,b,c,e){var f,h,i,l;a instanceof THREE.MeshDepthMaterial?l="depth":a instanceof THREE.MeshNormalMaterial?l="normal":a instanceof THREE.MeshBasicMaterial?l="basic":a instanceof THREE.MeshLambertMaterial?
l="lambert":a instanceof THREE.MeshPhongMaterial?l="phong":a instanceof THREE.LineBasicMaterial?l="basic":a instanceof THREE.ParticleBasicMaterial&&(l="particle_basic");if(l){var j=THREE.ShaderLib[l];a.uniforms=THREE.UniformsUtils.clone(j.uniforms);a.vertexShader=j.vertexShader;a.fragmentShader=j.fragmentShader}var k,n,m;k=m=j=0;for(n=b.length;k<n;k++)i=b[k],i instanceof THREE.SpotLight&&m++,i instanceof THREE.DirectionalLight&&m++,i instanceof THREE.PointLight&&j++;j+m<=Ya?k=m:(k=Math.ceil(Ya*m/
(j+m)),j=Ya-k);i={directional:k,point:j};j=m=0;for(k=b.length;j<k;j++)n=b[j],n instanceof THREE.SpotLight&&n.castShadow&&m++;var o=50;if(e!==void 0&&e instanceof THREE.SkinnedMesh)o=e.bones.length;var x;a:{k=a.fragmentShader;n=a.vertexShader;var j=a.uniforms,b=a.attributes,c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,morphTargets:a.morphTargets,maxMorphTargets:this.maxMorphTargets,maxDirLights:i.directional,
maxPointLights:i.point,maxBones:o,shadowMapEnabled:this.shadowMapEnabled&&e.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapWidth:this.shadowMapWidth,shadowMapHeight:this.shadowMapHeight,maxShadows:m,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel},s,e=[];l?e.push(l):(e.push(k),e.push(n));for(s in c)e.push(s),e.push(c[s]);l=e.join();s=0;for(e=Ia.length;s<e;s++)if(Ia[s].code===l){x=Ia[s].program;break a}s=d.createProgram();e=[cb?"#define VERTEX_TEXTURES":"",F.gammaInput?"#define GAMMA_INPUT":
"",F.gammaOutput?"#define GAMMA_OUTPUT":"",F.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.perPixel?"#define PHONG_PER_PIXEL":
"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform mat4 cameraInverseMatrix;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
i=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",F.gammaInput?"#define GAMMA_INPUT":"",F.gammaOutput?"#define GAMMA_OUTPUT":"",F.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":
"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapSoft?"#define SHADOWMAP_WIDTH "+c.shadowMapWidth.toFixed(1):"",c.shadowMapSoft?"#define SHADOWMAP_HEIGHT "+c.shadowMapHeight.toFixed(1):"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");d.attachShader(s,ka("fragment",i+k));d.attachShader(s,
ka("vertex",e+n));d.linkProgram(s);d.getProgramParameter(s,d.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+d.getProgramParameter(s,d.VALIDATE_STATUS)+", gl error ["+d.getError()+"]");s.uniforms={};s.attributes={};var t,e=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","cameraInverseMatrix","boneGlobalMatrices","morphTargetInfluences"];for(t in j)e.push(t);t=e;e=0;for(j=t.length;e<j;e++)k=t[e],s.uniforms[k]=d.getUniformLocation(s,
k);e=["position","normal","uv","uv2","tangent","color","skinVertexA","skinVertexB","skinIndex","skinWeight"];for(t=0;t<c.maxMorphTargets;t++)e.push("morphTarget"+t);for(x in b)e.push(x);x=e;t=0;for(b=x.length;t<b;t++)c=x[t],s.attributes[c]=d.getAttribLocation(s,c);s.id=Ia.length;Ia.push({program:s,code:l});F.info.memory.programs=Ia.length;x=s}a.program=x;x=a.program.attributes;x.position>=0&&d.enableVertexAttribArray(x.position);x.color>=0&&d.enableVertexAttribArray(x.color);x.normal>=0&&d.enableVertexAttribArray(x.normal);
x.tangent>=0&&d.enableVertexAttribArray(x.tangent);a.skinning&&x.skinVertexA>=0&&x.skinVertexB>=0&&x.skinIndex>=0&&x.skinWeight>=0&&(d.enableVertexAttribArray(x.skinVertexA),d.enableVertexAttribArray(x.skinVertexB),d.enableVertexAttribArray(x.skinIndex),d.enableVertexAttribArray(x.skinWeight));if(a.attributes)for(h in a.attributes)x[h]!==void 0&&x[h]>=0&&d.enableVertexAttribArray(x[h]);if(a.morphTargets)for(h=a.numSupportedMorphTargets=0;h<this.maxMorphTargets;h++)t="morphTarget"+h,x[t]>=0&&(d.enableVertexAttribArray(x[t]),
a.numSupportedMorphTargets++);a.uniformsList=[];for(f in a.uniforms)a.uniformsList.push([a.uniforms[f],f])};this.clearTarget=function(a,b,c,d){P(a);this.clear(b,c,d)};this.updateShadowMap=function(a,b){C(a,b)};this.render=function(a,b,c,e){var t,S,Ra,l,q,M,Oa,H=a.lights,O=a.fog;ta=-1;this.autoUpdateObjects&&this.initWebGLObjects(a);this.shadowMapEnabled&&this.shadowMapAutoUpdate&&C(a,b);F.info.render.calls=0;F.info.render.vertices=0;F.info.render.faces=0;b.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),
a.add(b));this.autoUpdateScene&&a.updateMatrixWorld();b.matrixWorldInverse.getInverse(b.matrixWorld);b.matrixWorldInverse.flattenToArray(Va);b.projectionMatrix.flattenToArray(Ua);Ea.multiply(b.projectionMatrix,b.matrixWorldInverse);o(Ea);P(c);(this.autoClear||e)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);Ra=a.__webglObjects.length;for(e=0;e<Ra;e++)if(q=a.__webglObjects[e],M=q.object,M.visible)if(!(M instanceof THREE.Mesh)||!M.frustumCulled||s(M)){if(M.matrixWorld.flattenToArray(M._objectMatrixArray),
R(M,b,!0),y(q),q.render=!0,this.sortObjects)M.renderDepth?q.z=M.renderDepth:(Fa.copy(M.position),Ea.multiplyVector3(Fa),q.z=Fa.z)}else q.render=!1;else q.render=!1;this.sortObjects&&a.__webglObjects.sort(A);l=a.__webglObjectsImmediate.length;for(e=0;e<l;e++)q=a.__webglObjectsImmediate[e],M=q.object,M.visible&&(M.matrixAutoUpdate&&M.matrixWorld.flattenToArray(M._objectMatrixArray),R(M,b,!0),z(q));if(a.overrideMaterial){m(a.overrideMaterial.depthTest);B(a.overrideMaterial.blending);for(e=0;e<Ra;e++)if(q=
a.__webglObjects[e],q.render)M=q.object,Oa=q.buffer,j(M),f(b,H,O,a.overrideMaterial,Oa,M);for(e=0;e<l;e++)q=a.__webglObjectsImmediate[e],M=q.object,M.visible&&(J=-1,j(M),t=h(b,H,O,a.overrideMaterial,M),M.immediateRenderCallback?M.immediateRenderCallback(t,d,ca):M.render(function(b){i(b,t,a.overrideMaterial.shading)}))}else{B(THREE.NormalBlending);for(e=Ra-1;e>=0;e--)if(q=a.__webglObjects[e],q.render&&(M=q.object,Oa=q.buffer,S=q.opaque))j(M),m(S.depthTest),n(S.depthWrite),k(S.polygonOffset,S.polygonOffsetFactor,
S.polygonOffsetUnits),f(b,H,O,S,Oa,M);for(e=0;e<l;e++)if(q=a.__webglObjectsImmediate[e],M=q.object,M.visible&&(J=-1,S=q.opaque))j(M),m(S.depthTest),n(S.depthWrite),k(S.polygonOffset,S.polygonOffsetFactor,S.polygonOffsetUnits),t=h(b,H,O,S,M),M.immediateRenderCallback?M.immediateRenderCallback(t,d,ca):M.render(function(a){i(a,t,S.shading)});for(e=0;e<Ra;e++)if(q=a.__webglObjects[e],q.render&&(M=q.object,Oa=q.buffer,S=q.transparent))j(M),B(S.blending),m(S.depthTest),n(S.depthWrite),k(S.polygonOffset,
S.polygonOffsetFactor,S.polygonOffsetUnits),f(b,H,O,S,Oa,M);for(e=0;e<l;e++)if(q=a.__webglObjectsImmediate[e],M=q.object,M.visible&&(J=-1,S=q.transparent))j(M),B(S.blending),m(S.depthTest),n(S.depthWrite),k(S.polygonOffset,S.polygonOffsetFactor,S.polygonOffsetUnits),t=h(b,H,O,S,M),M.immediateRenderCallback?M.immediateRenderCallback(t,d,ca):M.render(function(a){i(a,t,S.shading)})}a.__webglSprites.length&&Z(a,b);c&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&la(c)};this.initWebGLObjects=
function(a){if(!a.__webglObjects)a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[];for(;a.__objectsAdded.length;){var f=a.__objectsAdded[0],h=a,i=void 0,j=void 0,k=void 0;if(!f.__webglInit)if(f.__webglInit=!0,f._modelViewMatrix=new THREE.Matrix4,f._normalMatrixArray=new Float32Array(9),f._modelViewMatrixArray=new Float32Array(16),f._objectMatrixArray=new Float32Array(16),f.matrixWorld.flattenToArray(f._objectMatrixArray),f instanceof THREE.Mesh){j=f.geometry;if(j.geometryGroups===
void 0){var k=j,m=void 0,l=void 0,q=void 0,n=void 0,o=void 0,s=void 0,t=void 0,x={},z=k.morphTargets.length;k.geometryGroups={};m=0;for(l=k.faces.length;m<l;m++)q=k.faces[m],n=q.materialIndex,s=n!==void 0?n:-1,x[s]===void 0&&(x[s]={hash:s,counter:0}),t=x[s].hash+"_"+x[s].counter,k.geometryGroups[t]===void 0&&(k.geometryGroups[t]={faces3:[],faces4:[],materialIndex:n,vertices:0,numMorphTargets:z}),o=q instanceof THREE.Face3?3:4,k.geometryGroups[t].vertices+o>65535&&(x[s].counter+=1,t=x[s].hash+"_"+
x[s].counter,k.geometryGroups[t]===void 0&&(k.geometryGroups[t]={faces3:[],faces4:[],materialIndex:n,vertices:0,numMorphTargets:z})),q instanceof THREE.Face3?k.geometryGroups[t].faces3.push(m):k.geometryGroups[t].faces4.push(m),k.geometryGroups[t].vertices+=o;k.geometryGroupsList=[];m=void 0;for(m in k.geometryGroups)k.geometryGroups[m].id=ua++,k.geometryGroupsList.push(k.geometryGroups[m])}for(i in j.geometryGroups)if(k=j.geometryGroups[i],!k.__webglVertexBuffer){m=k;m.__webglVertexBuffer=d.createBuffer();
m.__webglNormalBuffer=d.createBuffer();m.__webglTangentBuffer=d.createBuffer();m.__webglColorBuffer=d.createBuffer();m.__webglUVBuffer=d.createBuffer();m.__webglUV2Buffer=d.createBuffer();m.__webglSkinVertexABuffer=d.createBuffer();m.__webglSkinVertexBBuffer=d.createBuffer();m.__webglSkinIndicesBuffer=d.createBuffer();m.__webglSkinWeightsBuffer=d.createBuffer();m.__webglFaceBuffer=d.createBuffer();m.__webglLineBuffer=d.createBuffer();if(m.numMorphTargets){q=l=void 0;m.__webglMorphTargetsBuffers=[];
l=0;for(q=m.numMorphTargets;l<q;l++)m.__webglMorphTargetsBuffers.push(d.createBuffer())}F.info.memory.geometries++;n=f;o=n.geometry;l=k.faces3;s=k.faces4;m=l.length*3+s.length*4;q=l.length*1+s.length*2;s=l.length*3+s.length*4;l=c(n,k);t=l.map||l.lightMap||l instanceof THREE.ShaderMaterial?!0:!1;x=l instanceof THREE.MeshBasicMaterial&&!l.envMap||l instanceof THREE.MeshDepthMaterial?!1:l&&l.shading!==void 0&&l.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading;z=l.vertexColors?l.vertexColors:
!1;k.__vertexArray=new Float32Array(m*3);if(x)k.__normalArray=new Float32Array(m*3);if(o.hasTangents)k.__tangentArray=new Float32Array(m*4);if(z)k.__colorArray=new Float32Array(m*3);if(t){if(o.faceUvs.length>0||o.faceVertexUvs.length>0)k.__uvArray=new Float32Array(m*2);if(o.faceUvs.length>1||o.faceVertexUvs.length>1)k.__uv2Array=new Float32Array(m*2)}if(n.geometry.skinWeights.length&&n.geometry.skinIndices.length)k.__skinVertexAArray=new Float32Array(m*4),k.__skinVertexBArray=new Float32Array(m*4),
k.__skinIndexArray=new Float32Array(m*4),k.__skinWeightArray=new Float32Array(m*4);k.__faceArray=new Uint16Array(q*3);k.__lineArray=new Uint16Array(s*2);if(k.numMorphTargets){k.__morphTargetsArrays=[];n=0;for(o=k.numMorphTargets;n<o;n++)k.__morphTargetsArrays.push(new Float32Array(m*3))}k.__needsSmoothNormals=x===THREE.SmoothShading;k.__uvType=t;k.__vertexColorType=z;k.__normalType=x;k.__webglFaceCount=q*3;k.__webglLineCount=s*2;if(l.attributes){if(k.__webglCustomAttributesList===void 0)k.__webglCustomAttributesList=
[];q=void 0;for(q in l.attributes){var n=l.attributes[q],o={},y;for(y in n)o[y]=n[y];if(!o.__webglInitialized||o.createUniqueBuffers)o.__webglInitialized=!0,s=1,o.type==="v2"?s=2:o.type==="v3"?s=3:o.type==="v4"?s=4:o.type==="c"&&(s=3),o.size=s,o.array=new Float32Array(m*s),o.buffer=d.createBuffer(),o.buffer.belongsToAttribute=q,n.needsUpdate=!0,o.__original=n;k.__webglCustomAttributesList.push(o)}}k.__inittedArrays=!0;j.__dirtyVertices=!0;j.__dirtyMorphTargets=!0;j.__dirtyElements=!0;j.__dirtyUvs=
!0;j.__dirtyNormals=!0;j.__dirtyTangents=!0;j.__dirtyColors=!0}}else if(f instanceof THREE.Ribbon){if(j=f.geometry,!j.__webglVertexBuffer)k=j,k.__webglVertexBuffer=d.createBuffer(),k.__webglColorBuffer=d.createBuffer(),F.info.memory.geometries++,k=j,m=k.vertices.length,k.__vertexArray=new Float32Array(m*3),k.__colorArray=new Float32Array(m*3),k.__webglVertexCount=m,j.__dirtyVertices=!0,j.__dirtyColors=!0}else if(f instanceof THREE.Line){if(j=f.geometry,!j.__webglVertexBuffer)k=j,k.__webglVertexBuffer=
d.createBuffer(),k.__webglColorBuffer=d.createBuffer(),F.info.memory.geometries++,k=j,m=f,l=k.vertices.length,k.__vertexArray=new Float32Array(l*3),k.__colorArray=new Float32Array(l*3),k.__webglLineCount=l,b(k,m),j.__dirtyVertices=!0,j.__dirtyColors=!0}else if(f instanceof THREE.ParticleSystem&&(j=f.geometry,!j.__webglVertexBuffer))k=j,k.__webglVertexBuffer=d.createBuffer(),k.__webglColorBuffer=d.createBuffer(),F.info.geometries++,k=j,m=f,l=k.vertices.length,k.__vertexArray=new Float32Array(l*3),
k.__colorArray=new Float32Array(l*3),k.__sortArray=[],k.__webglParticleCount=l,b(k,m),j.__dirtyVertices=!0,j.__dirtyColors=!0;if(!f.__webglActive){if(f instanceof THREE.Mesh)for(i in j=f.geometry,j.geometryGroups)k=j.geometryGroups[i],W(h.__webglObjects,k,f);else f instanceof THREE.Ribbon||f instanceof THREE.Line||f instanceof THREE.ParticleSystem?(j=f.geometry,W(h.__webglObjects,j,f)):THREE.MarchingCubes!==void 0&&f instanceof THREE.MarchingCubes||f.immediateRenderCallback?h.__webglObjectsImmediate.push({object:f,
opaque:null,transparent:null}):f instanceof THREE.Sprite&&h.__webglSprites.push(f);f.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){f=a.__objectsRemoved[0];h=a;if(f instanceof THREE.Mesh||f instanceof THREE.ParticleSystem||f instanceof THREE.Ribbon||f instanceof THREE.Line)O(h.__webglObjects,f);else if(f instanceof THREE.Sprite){h=h.__webglSprites;i=f;for(j=h.length-1;j>=0;j--)h[j]===i&&h.splice(j,1)}else(f instanceof THREE.MarchingCubes||f.immediateRenderCallback)&&
O(h.__webglObjectsImmediate,f);f.__webglActive=!1;a.__objectsRemoved.splice(0,1)}f=0;for(h=a.__webglObjects.length;f<h;f++)if(y=a.__webglObjects[f].object,i=y.geometry,j=q=l=void 0,y instanceof THREE.Mesh){k=0;for(m=i.geometryGroupsList.length;k<m;k++)if(l=i.geometryGroupsList[k],j=c(y,l),q=j.attributes&&ma(j),i.__dirtyVertices||i.__dirtyMorphTargets||i.__dirtyElements||i.__dirtyUvs||i.__dirtyNormals||i.__dirtyColors||i.__dirtyTangents||q)if(q=d.DYNAMIC_DRAW,n=!i.dynamic,l.__inittedArrays){var A=
s=o=void 0,w=void 0,C=A=void 0,B=void 0,I=void 0,J=void 0,K=z=x=t=void 0,R=void 0,G=void 0,Q=void 0,E=void 0,N=void 0,u=w=J=w=I=B=void 0,D=void 0,da=void 0,r=D=u=void 0,r=D=u=A=A=C=D=u=da=r=D=u=da=r=D=u=da=r=D=u=da=void 0,L=0,P=0,X=0,$=0,V=0,T=0,ea=0,U=0,oa=0,v=0,pa=0,Y=r=0,Y=void 0,qa=l.__vertexArray,la=l.__uvArray,na=l.__uv2Array,Z=l.__normalArray,fa=l.__tangentArray,ra=l.__colorArray,ga=l.__skinVertexAArray,ha=l.__skinVertexBArray,ia=l.__skinIndexArray,ja=l.__skinWeightArray,ta=l.__morphTargetsArrays,
aa=l.__webglCustomAttributesList,p=void 0,ka=l.__faceArray,ca=l.__lineArray,wa=l.__needsSmoothNormals,x=l.__vertexColorType,t=l.__uvType,z=l.__normalType,va=y.geometry,ya=va.__dirtyVertices,za=va.__dirtyElements,xa=va.__dirtyUvs,Ba=va.__dirtyNormals,Da=va.__dirtyTangents,Ea=va.__dirtyColors,Ga=va.__dirtyMorphTargets,Aa=va.vertices,da=l.faces3,Ia=l.faces4,Ja=va.faces,Ca=va.faceVertexUvs[0],Fa=va.faceVertexUvs[1],La=va.skinVerticesA,Ma=va.skinVerticesB,Na=va.skinIndices,Ka=va.skinWeights,Ha=va.morphTargets;
if(aa){u=0;for(D=aa.length;u<D;u++)aa[u].offset=0,aa[u].offsetSrc=0}o=0;for(s=da.length;o<s;o++){A=da[o];w=Ja[A];Ca&&(K=Ca[A]);Fa&&(R=Fa[A]);A=w.vertexNormals;C=w.normal;B=w.vertexColors;I=w.color;J=w.vertexTangents;if(ya)G=Aa[w.a].position,Q=Aa[w.b].position,E=Aa[w.c].position,qa[P]=G.x,qa[P+1]=G.y,qa[P+2]=G.z,qa[P+3]=Q.x,qa[P+4]=Q.y,qa[P+5]=Q.z,qa[P+6]=E.x,qa[P+7]=E.y,qa[P+8]=E.z,P+=9;if(aa){u=0;for(D=aa.length;u<D;u++)if(p=aa[u],p.__original.needsUpdate)r=p.offset,Y=p.offsetSrc,p.size===1?(p.boundTo===
void 0||p.boundTo==="vertices"?(p.array[r]=p.value[w.a],p.array[r+1]=p.value[w.b],p.array[r+2]=p.value[w.c]):p.boundTo==="faces"?(Y=p.value[Y],p.array[r]=Y,p.array[r+1]=Y,p.array[r+2]=Y,p.offsetSrc++):p.boundTo==="faceVertices"&&(p.array[r]=p.value[Y],p.array[r+1]=p.value[Y+1],p.array[r+2]=p.value[Y+2],p.offsetSrc+=3),p.offset+=3):(p.boundTo===void 0||p.boundTo==="vertices"?(G=p.value[w.a],Q=p.value[w.b],E=p.value[w.c]):p.boundTo==="faces"?(E=Q=G=Y=p.value[Y],p.offsetSrc++):p.boundTo==="faceVertices"&&
(G=p.value[Y],Q=p.value[Y+1],E=p.value[Y+2],p.offsetSrc+=3),p.size===2?(p.array[r]=G.x,p.array[r+1]=G.y,p.array[r+2]=Q.x,p.array[r+3]=Q.y,p.array[r+4]=E.x,p.array[r+5]=E.y,p.offset+=6):p.size===3?(p.type==="c"?(p.array[r]=G.r,p.array[r+1]=G.g,p.array[r+2]=G.b,p.array[r+3]=Q.r,p.array[r+4]=Q.g,p.array[r+5]=Q.b,p.array[r+6]=E.r,p.array[r+7]=E.g,p.array[r+8]=E.b):(p.array[r]=G.x,p.array[r+1]=G.y,p.array[r+2]=G.z,p.array[r+3]=Q.x,p.array[r+4]=Q.y,p.array[r+5]=Q.z,p.array[r+6]=E.x,p.array[r+7]=E.y,p.array[r+
8]=E.z),p.offset+=9):(p.array[r]=G.x,p.array[r+1]=G.y,p.array[r+2]=G.z,p.array[r+3]=G.w,p.array[r+4]=Q.x,p.array[r+5]=Q.y,p.array[r+6]=Q.z,p.array[r+7]=Q.w,p.array[r+8]=E.x,p.array[r+9]=E.y,p.array[r+10]=E.z,p.array[r+11]=E.w,p.offset+=12))}if(Ga){u=0;for(D=Ha.length;u<D;u++)G=Ha[u].vertices[w.a].position,Q=Ha[u].vertices[w.b].position,E=Ha[u].vertices[w.c].position,r=ta[u],r[pa]=G.x,r[pa+1]=G.y,r[pa+2]=G.z,r[pa+3]=Q.x,r[pa+4]=Q.y,r[pa+5]=Q.z,r[pa+6]=E.x,r[pa+7]=E.y,r[pa+8]=E.z;pa+=9}if(Ka.length)u=
Ka[w.a],D=Ka[w.b],r=Ka[w.c],ja[v]=u.x,ja[v+1]=u.y,ja[v+2]=u.z,ja[v+3]=u.w,ja[v+4]=D.x,ja[v+5]=D.y,ja[v+6]=D.z,ja[v+7]=D.w,ja[v+8]=r.x,ja[v+9]=r.y,ja[v+10]=r.z,ja[v+11]=r.w,u=Na[w.a],D=Na[w.b],r=Na[w.c],ia[v]=u.x,ia[v+1]=u.y,ia[v+2]=u.z,ia[v+3]=u.w,ia[v+4]=D.x,ia[v+5]=D.y,ia[v+6]=D.z,ia[v+7]=D.w,ia[v+8]=r.x,ia[v+9]=r.y,ia[v+10]=r.z,ia[v+11]=r.w,u=La[w.a],D=La[w.b],r=La[w.c],ga[v]=u.x,ga[v+1]=u.y,ga[v+2]=u.z,ga[v+3]=1,ga[v+4]=D.x,ga[v+5]=D.y,ga[v+6]=D.z,ga[v+7]=1,ga[v+8]=r.x,ga[v+9]=r.y,ga[v+10]=r.z,
ga[v+11]=1,u=Ma[w.a],D=Ma[w.b],r=Ma[w.c],ha[v]=u.x,ha[v+1]=u.y,ha[v+2]=u.z,ha[v+3]=1,ha[v+4]=D.x,ha[v+5]=D.y,ha[v+6]=D.z,ha[v+7]=1,ha[v+8]=r.x,ha[v+9]=r.y,ha[v+10]=r.z,ha[v+11]=1,v+=12;if(Ea&&x)B.length===3&&x===THREE.VertexColors?(w=B[0],u=B[1],D=B[2]):D=u=w=I,ra[oa]=w.r,ra[oa+1]=w.g,ra[oa+2]=w.b,ra[oa+3]=u.r,ra[oa+4]=u.g,ra[oa+5]=u.b,ra[oa+6]=D.r,ra[oa+7]=D.g,ra[oa+8]=D.b,oa+=9;if(Da&&va.hasTangents)B=J[0],I=J[1],w=J[2],fa[ea]=B.x,fa[ea+1]=B.y,fa[ea+2]=B.z,fa[ea+3]=B.w,fa[ea+4]=I.x,fa[ea+5]=I.y,
fa[ea+6]=I.z,fa[ea+7]=I.w,fa[ea+8]=w.x,fa[ea+9]=w.y,fa[ea+10]=w.z,fa[ea+11]=w.w,ea+=12;if(Ba&&z)if(A.length===3&&wa)for(u=0;u<3;u++)C=A[u],Z[T]=C.x,Z[T+1]=C.y,Z[T+2]=C.z,T+=3;else for(u=0;u<3;u++)Z[T]=C.x,Z[T+1]=C.y,Z[T+2]=C.z,T+=3;if(xa&&K!==void 0&&t)for(u=0;u<3;u++)A=K[u],la[X]=A.u,la[X+1]=A.v,X+=2;if(xa&&R!==void 0&&t)for(u=0;u<3;u++)A=R[u],na[$]=A.u,na[$+1]=A.v,$+=2;za&&(ka[V]=L,ka[V+1]=L+1,ka[V+2]=L+2,V+=3,ca[U]=L,ca[U+1]=L+1,ca[U+2]=L,ca[U+3]=L+2,ca[U+4]=L+1,ca[U+5]=L+2,U+=6,L+=3)}o=0;for(s=
Ia.length;o<s;o++){A=Ia[o];w=Ja[A];Ca&&(K=Ca[A]);Fa&&(R=Fa[A]);A=w.vertexNormals;C=w.normal;B=w.vertexColors;I=w.color;J=w.vertexTangents;if(ya)G=Aa[w.a].position,Q=Aa[w.b].position,E=Aa[w.c].position,N=Aa[w.d].position,qa[P]=G.x,qa[P+1]=G.y,qa[P+2]=G.z,qa[P+3]=Q.x,qa[P+4]=Q.y,qa[P+5]=Q.z,qa[P+6]=E.x,qa[P+7]=E.y,qa[P+8]=E.z,qa[P+9]=N.x,qa[P+10]=N.y,qa[P+11]=N.z,P+=12;if(aa){u=0;for(D=aa.length;u<D;u++)if(p=aa[u],p.__original.needsUpdate)r=p.offset,Y=p.offsetSrc,p.size===1?(p.boundTo===void 0||p.boundTo===
"vertices"?(p.array[r]=p.value[w.a],p.array[r+1]=p.value[w.b],p.array[r+2]=p.value[w.c],p.array[r+3]=p.value[w.d]):p.boundTo==="faces"?(Y=p.value[Y],p.array[r]=Y,p.array[r+1]=Y,p.array[r+2]=Y,p.array[r+3]=Y,p.offsetSrc++):p.boundTo==="faceVertices"&&(p.array[r]=p.value[Y],p.array[r+1]=p.value[Y+1],p.array[r+2]=p.value[Y+2],p.array[r+3]=p.value[Y+3],p.offsetSrc+=4),p.offset+=4):(p.boundTo===void 0||p.boundTo==="vertices"?(G=p.value[w.a],Q=p.value[w.b],E=p.value[w.c],N=p.value[w.d]):p.boundTo==="faces"?
(N=E=Q=G=Y=p.value[Y],p.offsetSrc++):p.boundTo==="faceVertices"&&(G=p.value[Y],Q=p.value[Y+1],E=p.value[Y+2],N=p.value[Y+3],p.offsetSrc+=4),p.size===2?(p.array[r]=G.x,p.array[r+1]=G.y,p.array[r+2]=Q.x,p.array[r+3]=Q.y,p.array[r+4]=E.x,p.array[r+5]=E.y,p.array[r+6]=N.x,p.array[r+7]=N.y,p.offset+=8):p.size===3?(p.type==="c"?(p.array[r]=G.r,p.array[r+1]=G.g,p.array[r+2]=G.b,p.array[r+3]=Q.r,p.array[r+4]=Q.g,p.array[r+5]=Q.b,p.array[r+6]=E.r,p.array[r+7]=E.g,p.array[r+8]=E.b,p.array[r+9]=N.r,p.array[r+
10]=N.g,p.array[r+11]=N.b):(p.array[r]=G.x,p.array[r+1]=G.y,p.array[r+2]=G.z,p.array[r+3]=Q.x,p.array[r+4]=Q.y,p.array[r+5]=Q.z,p.array[r+6]=E.x,p.array[r+7]=E.y,p.array[r+8]=E.z,p.array[r+9]=N.x,p.array[r+10]=N.y,p.array[r+11]=N.z),p.offset+=12):(p.array[r]=G.x,p.array[r+1]=G.y,p.array[r+2]=G.z,p.array[r+3]=G.w,p.array[r+4]=Q.x,p.array[r+5]=Q.y,p.array[r+6]=Q.z,p.array[r+7]=Q.w,p.array[r+8]=E.x,p.array[r+9]=E.y,p.array[r+10]=E.z,p.array[r+11]=E.w,p.array[r+12]=N.x,p.array[r+13]=N.y,p.array[r+14]=
N.z,p.array[r+15]=N.w,p.offset+=16))}if(Ga){u=0;for(D=Ha.length;u<D;u++)G=Ha[u].vertices[w.a].position,Q=Ha[u].vertices[w.b].position,E=Ha[u].vertices[w.c].position,N=Ha[u].vertices[w.d].position,r=ta[u],r[pa]=G.x,r[pa+1]=G.y,r[pa+2]=G.z,r[pa+3]=Q.x,r[pa+4]=Q.y,r[pa+5]=Q.z,r[pa+6]=E.x,r[pa+7]=E.y,r[pa+8]=E.z,r[pa+9]=N.x,r[pa+10]=N.y,r[pa+11]=N.z;pa+=12}if(Ka.length)u=Ka[w.a],D=Ka[w.b],r=Ka[w.c],da=Ka[w.d],ja[v]=u.x,ja[v+1]=u.y,ja[v+2]=u.z,ja[v+3]=u.w,ja[v+4]=D.x,ja[v+5]=D.y,ja[v+6]=D.z,ja[v+7]=D.w,
ja[v+8]=r.x,ja[v+9]=r.y,ja[v+10]=r.z,ja[v+11]=r.w,ja[v+12]=da.x,ja[v+13]=da.y,ja[v+14]=da.z,ja[v+15]=da.w,u=Na[w.a],D=Na[w.b],r=Na[w.c],da=Na[w.d],ia[v]=u.x,ia[v+1]=u.y,ia[v+2]=u.z,ia[v+3]=u.w,ia[v+4]=D.x,ia[v+5]=D.y,ia[v+6]=D.z,ia[v+7]=D.w,ia[v+8]=r.x,ia[v+9]=r.y,ia[v+10]=r.z,ia[v+11]=r.w,ia[v+12]=da.x,ia[v+13]=da.y,ia[v+14]=da.z,ia[v+15]=da.w,u=La[w.a],D=La[w.b],r=La[w.c],da=La[w.d],ga[v]=u.x,ga[v+1]=u.y,ga[v+2]=u.z,ga[v+3]=1,ga[v+4]=D.x,ga[v+5]=D.y,ga[v+6]=D.z,ga[v+7]=1,ga[v+8]=r.x,ga[v+9]=r.y,
ga[v+10]=r.z,ga[v+11]=1,ga[v+12]=da.x,ga[v+13]=da.y,ga[v+14]=da.z,ga[v+15]=1,u=Ma[w.a],D=Ma[w.b],r=Ma[w.c],da=Ma[w.d],ha[v]=u.x,ha[v+1]=u.y,ha[v+2]=u.z,ha[v+3]=1,ha[v+4]=D.x,ha[v+5]=D.y,ha[v+6]=D.z,ha[v+7]=1,ha[v+8]=r.x,ha[v+9]=r.y,ha[v+10]=r.z,ha[v+11]=1,ha[v+12]=da.x,ha[v+13]=da.y,ha[v+14]=da.z,ha[v+15]=1,v+=16;if(Ea&&x)B.length===4&&x===THREE.VertexColors?(w=B[0],u=B[1],D=B[2],da=B[3]):da=D=u=w=I,ra[oa]=w.r,ra[oa+1]=w.g,ra[oa+2]=w.b,ra[oa+3]=u.r,ra[oa+4]=u.g,ra[oa+5]=u.b,ra[oa+6]=D.r,ra[oa+7]=
D.g,ra[oa+8]=D.b,ra[oa+9]=da.r,ra[oa+10]=da.g,ra[oa+11]=da.b,oa+=12;if(Da&&va.hasTangents)B=J[0],I=J[1],w=J[2],J=J[3],fa[ea]=B.x,fa[ea+1]=B.y,fa[ea+2]=B.z,fa[ea+3]=B.w,fa[ea+4]=I.x,fa[ea+5]=I.y,fa[ea+6]=I.z,fa[ea+7]=I.w,fa[ea+8]=w.x,fa[ea+9]=w.y,fa[ea+10]=w.z,fa[ea+11]=w.w,fa[ea+12]=J.x,fa[ea+13]=J.y,fa[ea+14]=J.z,fa[ea+15]=J.w,ea+=16;if(Ba&&z)if(A.length===4&&wa)for(u=0;u<4;u++)C=A[u],Z[T]=C.x,Z[T+1]=C.y,Z[T+2]=C.z,T+=3;else for(u=0;u<4;u++)Z[T]=C.x,Z[T+1]=C.y,Z[T+2]=C.z,T+=3;if(xa&&K!==void 0&&
t)for(u=0;u<4;u++)A=K[u],la[X]=A.u,la[X+1]=A.v,X+=2;if(xa&&R!==void 0&&t)for(u=0;u<4;u++)A=R[u],na[$]=A.u,na[$+1]=A.v,$+=2;za&&(ka[V]=L,ka[V+1]=L+1,ka[V+2]=L+3,ka[V+3]=L+1,ka[V+4]=L+2,ka[V+5]=L+3,V+=6,ca[U]=L,ca[U+1]=L+1,ca[U+2]=L,ca[U+3]=L+3,ca[U+4]=L+1,ca[U+5]=L+2,ca[U+6]=L+2,ca[U+7]=L+3,U+=8,L+=4)}ya&&(d.bindBuffer(d.ARRAY_BUFFER,l.__webglVertexBuffer),d.bufferData(d.ARRAY_BUFFER,qa,q));if(aa){u=0;for(D=aa.length;u<D;u++)p=aa[u],p.__original.needsUpdate&&(d.bindBuffer(d.ARRAY_BUFFER,p.buffer),
d.bufferData(d.ARRAY_BUFFER,p.array,q))}if(Ga){u=0;for(D=Ha.length;u<D;u++)d.bindBuffer(d.ARRAY_BUFFER,l.__webglMorphTargetsBuffers[u]),d.bufferData(d.ARRAY_BUFFER,ta[u],q)}Ea&&oa>0&&(d.bindBuffer(d.ARRAY_BUFFER,l.__webglColorBuffer),d.bufferData(d.ARRAY_BUFFER,ra,q));Ba&&(d.bindBuffer(d.ARRAY_BUFFER,l.__webglNormalBuffer),d.bufferData(d.ARRAY_BUFFER,Z,q));Da&&va.hasTangents&&(d.bindBuffer(d.ARRAY_BUFFER,l.__webglTangentBuffer),d.bufferData(d.ARRAY_BUFFER,fa,q));xa&&X>0&&(d.bindBuffer(d.ARRAY_BUFFER,
l.__webglUVBuffer),d.bufferData(d.ARRAY_BUFFER,la,q));xa&&$>0&&(d.bindBuffer(d.ARRAY_BUFFER,l.__webglUV2Buffer),d.bufferData(d.ARRAY_BUFFER,na,q));za&&(d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,l.__webglFaceBuffer),d.bufferData(d.ELEMENT_ARRAY_BUFFER,ka,q),d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,l.__webglLineBuffer),d.bufferData(d.ELEMENT_ARRAY_BUFFER,ca,q));v>0&&(d.bindBuffer(d.ARRAY_BUFFER,l.__webglSkinVertexABuffer),d.bufferData(d.ARRAY_BUFFER,ga,q),d.bindBuffer(d.ARRAY_BUFFER,l.__webglSkinVertexBBuffer),
d.bufferData(d.ARRAY_BUFFER,ha,q),d.bindBuffer(d.ARRAY_BUFFER,l.__webglSkinIndicesBuffer),d.bufferData(d.ARRAY_BUFFER,ia,q),d.bindBuffer(d.ARRAY_BUFFER,l.__webglSkinWeightsBuffer),d.bufferData(d.ARRAY_BUFFER,ja,q));n&&(delete l.__inittedArrays,delete l.__colorArray,delete l.__normalArray,delete l.__tangentArray,delete l.__uvArray,delete l.__uv2Array,delete l.__faceArray,delete l.__vertexArray,delete l.__lineArray,delete l.__skinVertexAArray,delete l.__skinVertexBArray,delete l.__skinIndexArray,delete l.__skinWeightArray)}i.__dirtyVertices=
!1;i.__dirtyMorphTargets=!1;i.__dirtyElements=!1;i.__dirtyUvs=!1;i.__dirtyNormals=!1;i.__dirtyColors=!1;i.__dirtyTangents=!1;j.attributes&&sa(j)}else if(y instanceof THREE.Ribbon){if(i.__dirtyVertices||i.__dirtyColors){j=i;y=d.DYNAMIC_DRAW;k=o=n=n=void 0;s=j.vertices;m=j.colors;t=s.length;l=m.length;x=j.__vertexArray;q=j.__colorArray;z=j.__dirtyColors;if(j.__dirtyVertices){for(n=0;n<t;n++)o=s[n].position,k=n*3,x[k]=o.x,x[k+1]=o.y,x[k+2]=o.z;d.bindBuffer(d.ARRAY_BUFFER,j.__webglVertexBuffer);d.bufferData(d.ARRAY_BUFFER,
x,y)}if(z){for(n=0;n<l;n++)color=m[n],k=n*3,q[k]=color.r,q[k+1]=color.g,q[k+2]=color.b;d.bindBuffer(d.ARRAY_BUFFER,j.__webglColorBuffer);d.bufferData(d.ARRAY_BUFFER,q,y)}}i.__dirtyVertices=!1;i.__dirtyColors=!1}else if(y instanceof THREE.Line){j=c(y,l);q=j.attributes&&ma(j);if(i.__dirtyVertices||i.__dirtyColors||q){y=i;k=d.DYNAMIC_DRAW;m=R=s=K=void 0;s=y.vertices;l=y.colors;t=s.length;q=l.length;x=y.__vertexArray;n=y.__colorArray;z=y.__dirtyColors;o=y.__webglCustomAttributesList;N=E=Q=G=R=K=void 0;
if(y.__dirtyVertices){for(K=0;K<t;K++)R=s[K].position,m=K*3,x[m]=R.x,x[m+1]=R.y,x[m+2]=R.z;d.bindBuffer(d.ARRAY_BUFFER,y.__webglVertexBuffer);d.bufferData(d.ARRAY_BUFFER,x,k)}if(z){for(s=0;s<q;s++)color=l[s],m=s*3,n[m]=color.r,n[m+1]=color.g,n[m+2]=color.b;d.bindBuffer(d.ARRAY_BUFFER,y.__webglColorBuffer);d.bufferData(d.ARRAY_BUFFER,n,k)}if(o){K=0;for(R=o.length;K<R;K++)if(N=o[K],N.__original.needsUpdate&&(N.boundTo===void 0||N.boundTo==="vertices")){m=0;Q=N.value.length;for(G=0;G<Q;G++)N.size===
1?N.array[m]=N.value[G]:(E=N.value[G],N.size===2?(N.array[m]=E.x,N.array[m+1]=E.y):N.size===3?N.type==="c"?(N.array[m]=E.r,N.array[m+1]=E.g,N.array[m+2]=E.b):(N.array[m]=E.x,N.array[m+1]=E.y,N.array[m+2]=E.z):(N.array[m]=E.x,N.array[m+1]=E.y,N.array[m+2]=E.z,N.array[m+3]=E.w)),m+=N.size;d.bindBuffer(d.ARRAY_BUFFER,N.buffer);d.bufferData(d.ARRAY_BUFFER,N.array,k)}}}i.__dirtyVertices=!1;i.__dirtyColors=!1;j.attributes&&sa(j)}else if(y instanceof THREE.ParticleSystem)j=c(y,l),q=j.attributes&&ma(j),(i.__dirtyVertices||
i.__dirtyColors||y.sortParticles||q)&&e(i,d.DYNAMIC_DRAW,y),i.__dirtyVertices=!1,i.__dirtyColors=!1,j.attributes&&sa(j)};this.setFaceCulling=function(a,b){a?(!b||b==="ccw"?d.frontFace(d.CCW):d.frontFace(d.CW),a==="back"?d.cullFace(d.BACK):a==="front"?d.cullFace(d.FRONT):d.cullFace(d.FRONT_AND_BACK),d.enable(d.CULL_FACE)):d.disable(d.CULL_FACE)};this.supportsVertexTextures=function(){return cb}};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=c.wrapS!==void 0?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=c.wrapT!==void 0?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=c.magFilter!==void 0?c.magFilter:THREE.LinearFilter;this.minFilter=c.minFilter!==void 0?c.minFilter:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=c.format!==void 0?c.format:THREE.RGBAFormat;this.type=c.type!==void 0?c.type:
THREE.UnsignedByteType;this.depthBuffer=c.depthBuffer!==void 0?c.depthBuffer:!0;this.stencilBuffer=c.stencilBuffer!==void 0?c.stencilBuffer:!0};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;return a};THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};
THREE.WebGLRenderTargetCube.prototype=new THREE.WebGLRenderTarget;THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;
