// ThreeWebGL.js r46dev - http://github.com/mrdoob/three.js
var THREE=THREE||{};if(!self.Int32Array)self.Int32Array=Array,self.Float32Array=Array;THREE.Color=function(a){a!==void 0&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var e,g,f;if(c===0)this.r=this.g=this.b=0;else switch(e=Math.floor(a*6),g=a*6-e,a=c*(1-b),f=c*(1-
b*g),b=c*(1-b*(1-g)),e){case 1:this.r=f;this.g=c;this.b=a;break;case 2:this.r=a;this.g=c;this.b=b;break;case 3:this.r=a;this.g=f;this.b=c;break;case 4:this.r=b;this.g=a;this.b=c;break;case 5:this.r=c;this.g=a;this.b=f;break;case 6:case 0:this.r=c,this.g=b,this.b=a}return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},getHex:function(){return~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},getContextStyle:function(){return"rgb("+
Math.floor(this.r*255)+","+Math.floor(this.g*255)+","+Math.floor(this.b*255)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},
divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},
equals:function(a){return a.x===this.x&&a.y===this.y}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},
addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},
divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):this.set(0,0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return this.x+this.y+this.z},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){return this.set(this.y*a.z-this.z*a.y,this.z*a.x-this.x*a.z,this.x*a.y-this.y*a.x)},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,a).lengthSq()},setPositionFromMatrix:function(a){this.x=a.n14;this.y=a.n24;this.z=a.n34},setRotationFromMatrix:function(a){var b=Math.cos(this.y);this.y=Math.asin(a.n13);
Math.abs(b)>1.0E-5?(this.x=Math.atan2(-a.n23/b,a.n33/b),this.z=Math.atan2(-a.n12/b,a.n11/b)):(this.x=0,this.z=Math.atan2(a.n21,a.n22))},isZero:function(){return this.lengthSq()<1.0E-4}};THREE.Vector4=function(a,b,c,e){this.x=a||0;this.y=b||0;this.z=c||0;this.w=e!==void 0?e:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,e){this.x=a;this.y=b;this.z=c;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w!==void 0?a.w:1},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-
b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},
normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this}};THREE.Ray=function(a,b){this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3};
THREE.Ray.prototype={constructor:THREE.Ray,intersectScene:function(a){return this.intersectObjects(a.children)},intersectObjects:function(a){var b,c,e=[];b=0;for(c=a.length;b<c;b++)Array.prototype.push.apply(e,this.intersectObject(a[b]));e.sort(function(a,b){return a.distance-b.distance});return e},intersectObject:function(a){function b(a,b,c){var e;e=c.clone().subSelf(a).dot(b);if(e<=0)return null;a=a.clone().addSelf(b.clone().multiplyScalar(e));return c.distanceTo(a)}function c(a,b,c,B){e.copy(B).subSelf(b);
g.copy(c).subSelf(b);f.copy(a).subSelf(b);h=e.dot(e);i=e.dot(g);q=e.dot(f);m=g.dot(g);k=g.dot(f);r=1/(h*m-i*i);u=(m*q-i*k)*r;C=(h*k-i*q)*r;return u>=0&&C>=0&&u+C<1}for(var e=new THREE.Vector3,g=new THREE.Vector3,f=new THREE.Vector3,h,i,q,m,k,r,u,C,B,D=[],G=0,qa=a.children.length;G<qa;G++)Array.prototype.push.apply(D,this.intersectObject(a.children[G]));if(a instanceof THREE.Particle){G=b(this.origin,this.direction,a.matrixWorld.getPosition());if(G===null||G>a.scale.x)return[];B={distance:G,point:a.position,
face:null,object:a};D.push(B)}else if(a instanceof THREE.Mesh){G=b(this.origin,this.direction,a.matrixWorld.getPosition());if(G===null||G>a.geometry.boundingSphere.radius*Math.max(a.scale.x,Math.max(a.scale.y,a.scale.z)))return D;var N,ka,ma,Q,ca,F,K,X,I=a.geometry,U=I.vertices;a.matrixRotationWorld.extractRotation(a.matrixWorld);G=0;for(qa=I.faces.length;G<qa;G++)if(B=I.faces[G],K=this.origin.clone(),X=this.direction.clone(),Q=a.matrixWorld,N=Q.multiplyVector3(B.centroid.clone()).subSelf(K),F=N.dot(X),
!(F<=0)&&(N=Q.multiplyVector3(U[B.a].position.clone()),ka=Q.multiplyVector3(U[B.b].position.clone()),ma=Q.multiplyVector3(U[B.c].position.clone()),Q=B instanceof THREE.Face4?Q.multiplyVector3(U[B.d].position.clone()):null,ca=a.matrixRotationWorld.multiplyVector3(B.normal.clone()),F=X.dot(ca),a.doubleSided||(a.flipSided?F>0:F<0)))if(F=ca.dot((new THREE.Vector3).sub(N,K))/F,K=K.addSelf(X.multiplyScalar(F)),B instanceof THREE.Face3)c(K,N,ka,ma)&&(B={distance:this.origin.distanceTo(K),point:K,face:B,
object:a},D.push(B));else if(B instanceof THREE.Face4&&(c(K,N,ka,Q)||c(K,ka,ma,Q)))B={distance:this.origin.distanceTo(K),point:K,face:B,object:a},D.push(B)}return D}};
THREE.Rectangle=function(){function a(){f=e-b;h=g-c}var b,c,e,g,f,h,i=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return f};this.getHeight=function(){return h};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return e};this.getBottom=function(){return g};this.set=function(f,h,k,r){i=!1;b=f;c=h;e=k;g=r;a()};this.addPoint=function(f,h){i?(i=!1,b=f,c=h,e=f,g=h):(b=b<f?b:f,c=c<h?c:h,e=e>f?e:f,g=g>h?g:h);a()};this.add3Points=
function(f,h,k,r,u,C){i?(i=!1,b=f<k?f<u?f:u:k<u?k:u,c=h<r?h<C?h:C:r<C?r:C,e=f>k?f>u?f:u:k>u?k:u,g=h>r?h>C?h:C:r>C?r:C):(b=f<k?f<u?f<b?f:b:u<b?u:b:k<u?k<b?k:b:u<b?u:b,c=h<r?h<C?h<c?h:c:C<c?C:c:r<C?r<c?r:c:C<c?C:c,e=f>k?f>u?f>e?f:e:u>e?u:e:k>u?k>e?k:e:u>e?u:e,g=h>r?h>C?h>g?h:g:C>g?C:g:r>C?r>g?r:g:C>g?C:g);a()};this.addRectangle=function(f){i?(i=!1,b=f.getLeft(),c=f.getTop(),e=f.getRight(),g=f.getBottom()):(b=b<f.getLeft()?b:f.getLeft(),c=c<f.getTop()?c:f.getTop(),e=e>f.getRight()?e:f.getRight(),g=g>
f.getBottom()?g:f.getBottom());a()};this.inflate=function(f){b-=f;c-=f;e+=f;g+=f;a()};this.minSelf=function(f){b=b>f.getLeft()?b:f.getLeft();c=c>f.getTop()?c:f.getTop();e=e<f.getRight()?e:f.getRight();g=g<f.getBottom()?g:f.getBottom();a()};this.intersects=function(a){return Math.min(e,a.getRight())-Math.max(b,a.getLeft())>=0&&Math.min(g,a.getBottom())-Math.max(c,a.getTop())>=0};this.empty=function(){i=!0;g=e=c=b=0;a()};this.isEmpty=function(){return i}};
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,e,g){return e+(a-b)*(g-e)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535}};THREE.Matrix3=function(){this.m=[]};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,transpose:function(){var a,b=this.m;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};
THREE.Matrix4=function(a,b,c,e,g,f,h,i,q,m,k,r,u,C,B,D){this.set(a!==void 0?a:1,b||0,c||0,e||0,g||0,f!==void 0?f:1,h||0,i||0,q||0,m||0,k!==void 0?k:1,r||0,u||0,C||0,B||0,D!==void 0?D:1);this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,e,g,f,h,i,q,m,k,r,u,C,B,D){this.n11=a;this.n12=b;this.n13=c;this.n14=e;this.n21=g;this.n22=f;this.n23=h;this.n24=i;this.n31=q;this.n32=m;this.n33=k;this.n34=r;this.n41=u;this.n42=C;this.n43=B;this.n44=D;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.set(a.n11,a.n12,a.n13,a.n14,a.n21,a.n22,a.n23,a.n24,a.n31,a.n32,a.n33,a.n34,a.n41,a.n42,a.n43,a.n44);return this},lookAt:function(a,
b,c){var e=THREE.Matrix4.__v1,g=THREE.Matrix4.__v2,f=THREE.Matrix4.__v3;f.sub(a,b).normalize();if(f.length()===0)f.z=1;e.cross(c,f).normalize();e.length()===0&&(f.x+=1.0E-4,e.cross(c,f).normalize());g.cross(f,e).normalize();this.n11=e.x;this.n12=g.x;this.n13=f.x;this.n21=e.y;this.n22=g.y;this.n23=f.y;this.n31=e.z;this.n32=g.z;this.n33=f.z;return this},multiply:function(a,b){var c=a.n11,e=a.n12,g=a.n13,f=a.n14,h=a.n21,i=a.n22,q=a.n23,m=a.n24,k=a.n31,r=a.n32,u=a.n33,C=a.n34,B=a.n41,D=a.n42,G=a.n43,
qa=a.n44,N=b.n11,ka=b.n12,ma=b.n13,Q=b.n14,ca=b.n21,F=b.n22,K=b.n23,X=b.n24,I=b.n31,U=b.n32,$=b.n33,la=b.n34,wa=b.n41,ja=b.n42,M=b.n43,d=b.n44;this.n11=c*N+e*ca+g*I+f*wa;this.n12=c*ka+e*F+g*U+f*ja;this.n13=c*ma+e*K+g*$+f*M;this.n14=c*Q+e*X+g*la+f*d;this.n21=h*N+i*ca+q*I+m*wa;this.n22=h*ka+i*F+q*U+m*ja;this.n23=h*ma+i*K+q*$+m*M;this.n24=h*Q+i*X+q*la+m*d;this.n31=k*N+r*ca+u*I+C*wa;this.n32=k*ka+r*F+u*U+C*ja;this.n33=k*ma+r*K+u*$+C*M;this.n34=k*Q+r*X+u*la+C*d;this.n41=B*N+D*ca+G*I+qa*wa;this.n42=B*ka+
D*F+G*U+qa*ja;this.n43=B*ma+D*K+G*$+qa*M;this.n44=B*Q+D*X+G*la+qa*d;return this},multiplySelf:function(a){return this.multiply(this,a)},multiplyToArray:function(a,b,c){this.multiply(a,b);c[0]=this.n11;c[1]=this.n21;c[2]=this.n31;c[3]=this.n41;c[4]=this.n12;c[5]=this.n22;c[6]=this.n32;c[7]=this.n42;c[8]=this.n13;c[9]=this.n23;c[10]=this.n33;c[11]=this.n43;c[12]=this.n14;c[13]=this.n24;c[14]=this.n34;c[15]=this.n44;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=
a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},multiplyVector3:function(a){var b=a.x,c=a.y,e=a.z,g=1/(this.n41*b+this.n42*c+this.n43*e+this.n44);a.x=(this.n11*b+this.n12*c+this.n13*e+this.n14)*g;a.y=(this.n21*b+this.n22*c+this.n23*e+this.n24)*g;a.z=(this.n31*b+this.n32*c+this.n33*e+this.n34)*g;return a},multiplyVector4:function(a){var b=a.x,c=a.y,e=a.z,g=a.w;a.x=this.n11*b+this.n12*c+this.n13*
e+this.n14*g;a.y=this.n21*b+this.n22*c+this.n23*e+this.n24*g;a.z=this.n31*b+this.n32*c+this.n33*e+this.n34*g;a.w=this.n41*b+this.n42*c+this.n43*e+this.n44*g;return a},rotateAxis:function(a){var b=a.x,c=a.y,e=a.z;a.x=b*this.n11+c*this.n12+e*this.n13;a.y=b*this.n21+c*this.n22+e*this.n23;a.z=b*this.n31+c*this.n32+e*this.n33;a.normalize();return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*
a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},determinant:function(){var a=this.n11,b=this.n12,c=this.n13,e=this.n14,g=this.n21,f=this.n22,h=this.n23,i=this.n24,q=this.n31,m=this.n32,k=this.n33,r=this.n34,u=this.n41,C=this.n42,B=this.n43,D=this.n44;return e*h*m*u-c*i*m*u-e*f*k*u+b*i*k*u+c*f*r*u-b*h*r*u-e*h*q*C+c*i*q*C+e*g*k*C-a*i*k*C-c*g*r*C+a*h*r*C+e*f*q*B-b*i*q*B-e*g*m*B+a*i*m*B+b*g*r*B-a*f*r*B-c*f*q*D+b*h*q*D+
c*g*m*D-a*h*m*D-b*g*k*D+a*f*k*D},transpose:function(){var a;a=this.n21;this.n21=this.n12;this.n12=a;a=this.n31;this.n31=this.n13;this.n13=a;a=this.n32;this.n32=this.n23;this.n23=a;a=this.n41;this.n41=this.n14;this.n14=a;a=this.n42;this.n42=this.n24;this.n24=a;a=this.n43;this.n43=this.n34;this.n43=a;return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;
a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){this.flat[0]=this.n11;this.flat[1]=this.n21;this.flat[2]=this.n31;this.flat[3]=this.n41;this.flat[4]=this.n12;this.flat[5]=this.n22;this.flat[6]=this.n32;this.flat[7]=this.n42;this.flat[8]=this.n13;this.flat[9]=this.n23;this.flat[10]=this.n33;this.flat[11]=this.n43;this.flat[12]=this.n14;this.flat[13]=this.n24;this.flat[14]=this.n34;this.flat[15]=this.n44;return this.flat},flattenToArray:function(a){a[0]=
this.n11;a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},flattenToArrayOffset:function(a,b){a[b]=this.n11;a[b+1]=this.n21;a[b+2]=this.n31;a[b+3]=this.n41;a[b+4]=this.n12;a[b+5]=this.n22;a[b+6]=this.n32;a[b+7]=this.n42;a[b+8]=this.n13;a[b+9]=this.n23;a[b+10]=this.n33;a[b+11]=this.n43;a[b+12]=this.n14;a[b+13]=this.n24;a[b+14]=
this.n34;a[b+15]=this.n44;return a},setTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},setScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},setRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},setRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},setRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,-a,0,
0,a,b,0,0,0,0,1,0,0,0,0,1);return this},setRotationAxis:function(a,b){var c=Math.cos(b),e=Math.sin(b),g=1-c,f=a.x,h=a.y,i=a.z,q=g*f,m=g*h;this.set(q*f+c,q*h-e*i,q*i+e*h,0,q*h+e*i,m*h+c,m*i-e*f,0,q*i-e*h,m*i+e*f,g*i*i+c,0,0,0,0,1);return this},setPosition:function(a){this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},getPosition:function(){return THREE.Matrix4.__v1.set(this.n14,this.n24,this.n34)},getColumnX:function(){return THREE.Matrix4.__v1.set(this.n11,this.n21,this.n31)},getColumnY:function(){return THREE.Matrix4.__v1.set(this.n12,
this.n22,this.n32)},getColumnZ:function(){return THREE.Matrix4.__v1.set(this.n13,this.n23,this.n33)},getInverse:function(a){var b=a.n11,c=a.n12,e=a.n13,g=a.n14,f=a.n21,h=a.n22,i=a.n23,q=a.n24,m=a.n31,k=a.n32,r=a.n33,u=a.n34,C=a.n41,B=a.n42,D=a.n43,G=a.n44;this.n11=i*u*B-q*r*B+q*k*D-h*u*D-i*k*G+h*r*G;this.n12=g*r*B-e*u*B-g*k*D+c*u*D+e*k*G-c*r*G;this.n13=e*q*B-g*i*B+g*h*D-c*q*D-e*h*G+c*i*G;this.n14=g*i*k-e*q*k-g*h*r+c*q*r+e*h*u-c*i*u;this.n21=q*r*C-i*u*C-q*m*D+f*u*D+i*m*G-f*r*G;this.n22=e*u*C-g*r*C+
g*m*D-b*u*D-e*m*G+b*r*G;this.n23=g*i*C-e*q*C-g*f*D+b*q*D+e*f*G-b*i*G;this.n24=e*q*m-g*i*m+g*f*r-b*q*r-e*f*u+b*i*u;this.n31=h*u*C-q*k*C+q*m*B-f*u*B-h*m*G+f*k*G;this.n32=g*k*C-c*u*C-g*m*B+b*u*B+c*m*G-b*k*G;this.n33=e*q*C-g*h*C+g*f*B-b*q*B-c*f*G+b*h*G;this.n34=g*h*m-c*q*m-g*f*k+b*q*k+c*f*u-b*h*u;this.n41=i*k*C-h*r*C-i*m*B+f*r*B+h*m*D-f*k*D;this.n42=c*r*C-e*k*C+e*m*B-b*r*B-c*m*D+b*k*D;this.n43=e*h*C-c*i*C-e*f*B+b*i*B+c*f*D-b*h*D;this.n44=c*i*m-e*h*m+e*f*k-b*i*k-c*f*r+b*h*r;this.multiplyScalar(1/a.determinant());
return this},setRotationFromEuler:function(a,b){var c=a.x,e=a.y,g=a.z,f=Math.cos(c),c=Math.sin(c),h=Math.cos(e),e=Math.sin(e),i=Math.cos(g),g=Math.sin(g);switch(b){case "YXZ":var q=h*i,m=h*g,k=e*i,r=e*g;this.n11=q+r*c;this.n12=k*c-m;this.n13=f*e;this.n21=f*g;this.n22=f*i;this.n23=-c;this.n31=m*c-k;this.n32=r+q*c;this.n33=f*h;break;case "ZXY":q=h*i;m=h*g;k=e*i;r=e*g;this.n11=q-r*c;this.n12=-f*g;this.n13=k+m*c;this.n21=m+k*c;this.n22=f*i;this.n23=r-q*c;this.n31=-f*e;this.n32=c;this.n33=f*h;break;case "ZYX":q=
f*i;m=f*g;k=c*i;r=c*g;this.n11=h*i;this.n12=k*e-m;this.n13=q*e+r;this.n21=h*g;this.n22=r*e+q;this.n23=m*e-k;this.n31=-e;this.n32=c*h;this.n33=f*h;break;case "YZX":q=f*h;m=f*e;k=c*h;r=c*e;this.n11=h*i;this.n12=r-q*g;this.n13=k*g+m;this.n21=g;this.n22=f*i;this.n23=-c*i;this.n31=-e*i;this.n32=m*g+k;this.n33=q-r*g;break;case "XZY":q=f*h;m=f*e;k=c*h;r=c*e;this.n11=h*i;this.n12=-g;this.n13=e*i;this.n21=q*g+r;this.n22=f*i;this.n23=m*g-k;this.n31=k*g-m;this.n32=c*i;this.n33=r*g+q;break;default:q=f*i,m=f*
g,k=c*i,r=c*g,this.n11=h*i,this.n12=-h*g,this.n13=e,this.n21=m+k*e,this.n22=q-r*e,this.n23=-c*h,this.n31=r-q*e,this.n32=k+m*e,this.n33=f*h}return this},setRotationFromQuaternion:function(a){var b=a.x,c=a.y,e=a.z,g=a.w,f=b+b,h=c+c,i=e+e,a=b*f,q=b*h;b*=i;var m=c*h;c*=i;e*=i;f*=g;h*=g;g*=i;this.n11=1-(m+e);this.n12=q-g;this.n13=b+h;this.n21=q+g;this.n22=1-(a+e);this.n23=c-f;this.n31=b-h;this.n32=c+f;this.n33=1-(a+m);return this},scale:function(a){var b=a.x,c=a.y,a=a.z;this.n11*=b;this.n12*=c;this.n13*=
a;this.n21*=b;this.n22*=c;this.n23*=a;this.n31*=b;this.n32*=c;this.n33*=a;this.n41*=b;this.n42*=c;this.n43*=a;return this},compose:function(a,b,c){var e=THREE.Matrix4.__m1,g=THREE.Matrix4.__m2;e.identity();e.setRotationFromQuaternion(b);g.setScale(c.x,c.y,c.z);this.multiply(e,g);this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},decompose:function(a,b,c){var e=THREE.Matrix4.__v1,g=THREE.Matrix4.__v2,f=THREE.Matrix4.__v3;e.set(this.n11,this.n21,this.n31);g.set(this.n12,this.n22,this.n32);f.set(this.n13,
this.n23,this.n33);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=e.length();c.y=g.length();c.z=f.length();a.x=this.n14;a.y=this.n24;a.z=this.n34;e=THREE.Matrix4.__m1;e.copy(this);e.n11/=c.x;e.n21/=c.x;e.n31/=c.x;e.n12/=c.y;e.n22/=c.y;e.n32/=c.y;e.n13/=c.z;e.n23/=c.z;e.n33/=c.z;b.setFromRotationMatrix(e);return[a,b,c]},extractPosition:function(a){this.n14=a.n14;this.n24=a.n24;this.n34=a.n34;
return this},extractRotation:function(a){var b=THREE.Matrix4.__v1,c=1/b.set(a.n11,a.n21,a.n31).length(),e=1/b.set(a.n12,a.n22,a.n32).length(),b=1/b.set(a.n13,a.n23,a.n33).length();this.n11=a.n11*c;this.n21=a.n21*c;this.n31=a.n31*c;this.n12=a.n12*e;this.n22=a.n22*e;this.n32=a.n32*e;this.n13=a.n13*b;this.n23=a.n23*b;this.n33=a.n33*b;return this}};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.m33,c=b.m,e=a.n33*a.n22-a.n32*a.n23,g=-a.n33*a.n21+a.n31*a.n23,f=a.n32*a.n21-a.n31*a.n22,h=-a.n33*a.n12+a.n32*a.n13,i=a.n33*a.n11-a.n31*a.n13,q=-a.n32*a.n11+a.n31*a.n12,m=a.n23*a.n12-a.n22*a.n13,k=-a.n23*a.n11+a.n21*a.n13,r=a.n22*a.n11-a.n21*a.n12,a=a.n11*e+a.n21*h+a.n31*m;a===0&&console.error("THREE.Matrix4.makeInvert3x3: Matrix not invertible.");a=1/a;c[0]=a*e;c[1]=a*g;c[2]=a*f;c[3]=a*h;c[4]=a*i;c[5]=a*q;c[6]=a*m;c[7]=a*k;c[8]=a*r;return b};
THREE.Matrix4.makeFrustum=function(a,b,c,e,g,f){var h;h=new THREE.Matrix4;h.n11=2*g/(b-a);h.n12=0;h.n13=(b+a)/(b-a);h.n14=0;h.n21=0;h.n22=2*g/(e-c);h.n23=(e+c)/(e-c);h.n24=0;h.n31=0;h.n32=0;h.n33=-(f+g)/(f-g);h.n34=-2*f*g/(f-g);h.n41=0;h.n42=0;h.n43=-1;h.n44=0;return h};THREE.Matrix4.makePerspective=function(a,b,c,e){var g,a=c*Math.tan(a*Math.PI/360);g=-a;return THREE.Matrix4.makeFrustum(g*b,a*b,g,a,c,e)};
THREE.Matrix4.makeOrtho=function(a,b,c,e,g,f){var h,i,q,m;h=new THREE.Matrix4;i=b-a;q=c-e;m=f-g;h.n11=2/i;h.n12=0;h.n13=0;h.n14=-((b+a)/i);h.n21=0;h.n22=2/q;h.n23=0;h.n24=-((c+e)/q);h.n31=0;h.n32=0;h.n33=-2/m;h.n34=-((f+g)/m);h.n41=0;h.n42=0;h.n43=0;h.n44=1;return h};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.Object3D=function(){this.name="";this.id=THREE.Object3DCount++;this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder="XYZ";this.scale=new THREE.Vector3(1,1,1);this.flipSided=this.doubleSided=this.dynamic=!1;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=
!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)},add:function(a){if(this.children.indexOf(a)===
-1){a.parent!==void 0&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(b!==-1){a.parent=void 0;this.children.splice(b,1);for(b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.removeObject(a)}},getChildByName:function(a,b){var c,e,g;c=0;for(e=this.children.length;c<e;c++){g=this.children[c];if(g.name===a)return g;
if(b&&(g=g.getChildByName(a,b),g!==void 0))return g}},updateMatrix:function(){this.matrix.setPosition(this.position);this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder);if(this.scale.x!==1||this.scale.y!==1||this.scale.z!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&
this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)}};THREE.Object3DCount=0;
THREE.Projector=function(){function a(){var a=h[f]=h[f]||new THREE.RenderableObject;f++;return a}function b(){var a=m[q]=m[q]||new THREE.RenderableVertex;q++;return a}function c(a,b){return b.z-a.z}function e(a,b){var c=0,e=1,d=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;return d>=0&&f>=0&&g>=0&&h>=0?!0:d<0&&f<0||g<0&&h<0?!1:(d<0?c=Math.max(c,d/(d-f)):f<0&&(e=Math.min(e,d/(d-f))),g<0?c=Math.max(c,g/(g-h)):h<0&&(e=Math.min(e,g/(g-h))),e<c?!1:(a.lerpSelf(b,c),b.lerpSelf(a,1-e),!0))}var g,f,h=[],i,q,m=[],
k,r,u=[],C,B=[],D,G,qa=[],N,ka,ma=[],Q={objects:[],sprites:[],lights:[],elements:[]},ca=new THREE.Vector3,F=new THREE.Vector4,K=new THREE.Matrix4,X=new THREE.Matrix4,I=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],U=new THREE.Vector4,$=new THREE.Vector4;this.computeFrustum=function(a){I[0].set(a.n41-a.n11,a.n42-a.n12,a.n43-a.n13,a.n44-a.n14);I[1].set(a.n41+a.n11,a.n42+a.n12,a.n43+a.n13,a.n44+a.n14);I[2].set(a.n41+a.n21,a.n42+a.n22,a.n43+
a.n23,a.n44+a.n24);I[3].set(a.n41-a.n21,a.n42-a.n22,a.n43-a.n23,a.n44-a.n24);I[4].set(a.n41-a.n31,a.n42-a.n32,a.n43-a.n33,a.n44-a.n34);I[5].set(a.n41+a.n31,a.n42+a.n32,a.n43+a.n33,a.n44+a.n34);for(a=0;a<6;a++){var b=I[a];b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))}};this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);K.multiply(b.projectionMatrix,b.matrixWorldInverse);K.multiplyVector3(a);return a};this.unprojectVector=function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);
K.multiply(b.matrixWorld,b.projectionMatrixInverse);K.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectGraph=function(b,e){f=0;Q.objects.length=0;Q.sprites.length=0;Q.lights.length=0;var h=function(b){if(b.visible!==!1){var d;if(d=b instanceof THREE.Mesh||b instanceof THREE.Line)if(!(d=b.frustumCulled===!1))a:{for(var c=b.matrixWorld,
e=-b.geometry.boundingSphere.radius*Math.max(b.scale.x,Math.max(b.scale.y,b.scale.z)),f=0;f<6;f++)if(d=I[f].x*c.n14+I[f].y*c.n24+I[f].z*c.n34+I[f].w,d<=e){d=!1;break a}d=!0}d?(K.multiplyVector3(ca.copy(b.position)),g=a(),g.object=b,g.z=ca.z,Q.objects.push(g)):b instanceof THREE.Sprite||b instanceof THREE.Particle?(K.multiplyVector3(ca.copy(b.position)),g=a(),g.object=b,g.z=ca.z,Q.sprites.push(g)):b instanceof THREE.Light&&Q.lights.push(b);d=0;for(c=b.children.length;d<c;d++)h(b.children[d])}};h(b);
e&&Q.objects.sort(c);return Q};this.projectScene=function(a,f,g){var h=f.near,d=f.far,I,ca,ia,ra,W,pa,fa,sa,O,na,ta,Ea,Ia,Fa,za,xa;ka=G=C=r=0;Q.elements.length=0;f.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),a.add(f));a.updateMatrixWorld();f.matrixWorldInverse.getInverse(f.matrixWorld);K.multiply(f.projectionMatrix,f.matrixWorldInverse);this.computeFrustum(K);Q=this.projectGraph(a,!1);a=0;for(I=Q.objects.length;a<I;a++)if(O=Q.objects[a].object,na=
O.matrixWorld,Ea=O.material,q=0,O instanceof THREE.Mesh){ta=O.geometry;Ia=O.geometry.materials;ra=ta.vertices;Fa=ta.faces;za=ta.faceVertexUvs;ta=O.matrixRotationWorld.extractRotation(na);ca=0;for(ia=ra.length;ca<ia;ca++)i=b(),i.positionWorld.copy(ra[ca].position),na.multiplyVector3(i.positionWorld),i.positionScreen.copy(i.positionWorld),K.multiplyVector4(i.positionScreen),i.positionScreen.x/=i.positionScreen.w,i.positionScreen.y/=i.positionScreen.w,i.visible=i.positionScreen.z>h&&i.positionScreen.z<
d;ra=0;for(ca=Fa.length;ra<ca;ra++){ia=Fa[ra];if(ia instanceof THREE.Face3)if(W=m[ia.a],pa=m[ia.b],fa=m[ia.c],W.visible&&pa.visible&&fa.visible&&(O.doubleSided||O.flipSided!=(fa.positionScreen.x-W.positionScreen.x)*(pa.positionScreen.y-W.positionScreen.y)-(fa.positionScreen.y-W.positionScreen.y)*(pa.positionScreen.x-W.positionScreen.x)<0))sa=u[r]=u[r]||new THREE.RenderableFace3,r++,k=sa,k.v1.copy(W),k.v2.copy(pa),k.v3.copy(fa);else continue;else if(ia instanceof THREE.Face4)if(W=m[ia.a],pa=m[ia.b],
fa=m[ia.c],sa=m[ia.d],W.visible&&pa.visible&&fa.visible&&sa.visible&&(O.doubleSided||O.flipSided!=((sa.positionScreen.x-W.positionScreen.x)*(pa.positionScreen.y-W.positionScreen.y)-(sa.positionScreen.y-W.positionScreen.y)*(pa.positionScreen.x-W.positionScreen.x)<0||(pa.positionScreen.x-fa.positionScreen.x)*(sa.positionScreen.y-fa.positionScreen.y)-(pa.positionScreen.y-fa.positionScreen.y)*(sa.positionScreen.x-fa.positionScreen.x)<0)))xa=B[C]=B[C]||new THREE.RenderableFace4,C++,k=xa,k.v1.copy(W),k.v2.copy(pa),
k.v3.copy(fa),k.v4.copy(sa);else continue;k.normalWorld.copy(ia.normal);ta.multiplyVector3(k.normalWorld);k.centroidWorld.copy(ia.centroid);na.multiplyVector3(k.centroidWorld);k.centroidScreen.copy(k.centroidWorld);K.multiplyVector3(k.centroidScreen);fa=ia.vertexNormals;W=0;for(pa=fa.length;W<pa;W++)sa=k.vertexNormalsWorld[W],sa.copy(fa[W]),ta.multiplyVector3(sa);W=0;for(pa=za.length;W<pa;W++)if(xa=za[W][ra]){fa=0;for(sa=xa.length;fa<sa;fa++)k.uvs[W][fa]=xa[fa]}k.material=Ea;k.faceMaterial=ia.materialIndex!==
null?Ia[ia.materialIndex]:null;k.z=k.centroidScreen.z;Q.elements.push(k)}}else if(O instanceof THREE.Line){X.multiply(K,na);ra=O.geometry.vertices;W=b();W.positionScreen.copy(ra[0].position);X.multiplyVector4(W.positionScreen);ca=1;for(ia=ra.length;ca<ia;ca++)if(W=b(),W.positionScreen.copy(ra[ca].position),X.multiplyVector4(W.positionScreen),pa=m[q-2],U.copy(W.positionScreen),$.copy(pa.positionScreen),e(U,$))U.multiplyScalar(1/U.w),$.multiplyScalar(1/$.w),O=qa[G]=qa[G]||new THREE.RenderableLine,G++,
D=O,D.v1.positionScreen.copy(U),D.v2.positionScreen.copy($),D.z=Math.max(U.z,$.z),D.material=Ea,Q.elements.push(D)}a=0;for(I=Q.sprites.length;a<I;a++)if(O=Q.sprites[a].object,na=O.matrixWorld,O instanceof THREE.Particle&&(F.set(na.n14,na.n24,na.n34,1),K.multiplyVector4(F),F.z/=F.w,F.z>0&&F.z<1))h=ma[ka]=ma[ka]||new THREE.RenderableParticle,ka++,N=h,N.x=F.x/F.w,N.y=F.y/F.w,N.z=F.z,N.rotation=O.rotation.z,N.scale.x=O.scale.x*Math.abs(N.x-(F.x+f.projectionMatrix.n11)/(F.w+f.projectionMatrix.n14)),N.scale.y=
O.scale.y*Math.abs(N.y-(F.y+f.projectionMatrix.n22)/(F.w+f.projectionMatrix.n24)),N.material=O.material,Q.elements.push(N);g&&Q.elements.sort(c);return Q}};THREE.Quaternion=function(a,b,c,e){this.set(a||0,b||0,c||0,e!==void 0?e:1)};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,e){this.x=a;this.y=b;this.z=c;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a){var b=Math.PI/360,c=a.x*b,e=a.y*b,g=a.z*b,a=Math.cos(e),e=Math.sin(e),b=Math.cos(-g),g=Math.sin(-g),f=Math.cos(c),c=Math.sin(c),h=a*b,i=e*g;this.w=h*f-i*c;this.x=h*c+i*f;this.y=e*b*f+a*g*c;this.z=a*g*f-e*b*c;return this},setFromAxisAngle:function(a,b){var c=b/2,e=Math.sin(c);
this.x=a.x*e;this.y=a.y*e;this.z=a.z*e;this.w=Math.cos(c);return this},setFromRotationMatrix:function(a){var b=Math.pow(a.determinant(),1/3);this.w=Math.sqrt(Math.max(0,b+a.n11+a.n22+a.n33))/2;this.x=Math.sqrt(Math.max(0,b+a.n11-a.n22-a.n33))/2;this.y=Math.sqrt(Math.max(0,b-a.n11+a.n22-a.n33))/2;this.z=Math.sqrt(Math.max(0,b-a.n11-a.n22+a.n33))/2;this.x=a.n32-a.n23<0?-Math.abs(this.x):Math.abs(this.x);this.y=a.n13-a.n31<0?-Math.abs(this.y):Math.abs(this.y);this.z=a.n21-a.n12<0?-Math.abs(this.z):Math.abs(this.z);
this.normalize();return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);a===0?this.w=this.z=this.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiplySelf:function(a){var b=
this.x,c=this.y,e=this.z,g=this.w,f=a.x,h=a.y,i=a.z,a=a.w;this.x=b*a+g*f+c*i-e*h;this.y=c*a+g*h+e*f-b*i;this.z=e*a+g*i+b*h-c*f;this.w=g*a-b*f-c*h-e*i;return this},multiply:function(a,b){this.x=a.x*b.w+a.y*b.z-a.z*b.y+a.w*b.x;this.y=-a.x*b.z+a.y*b.w+a.z*b.x+a.w*b.y;this.z=a.x*b.y-a.y*b.x+a.z*b.w+a.w*b.z;this.w=-a.x*b.x-a.y*b.y-a.z*b.z+a.w*b.w;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,e=a.y,g=a.z,f=this.x,h=this.y,i=this.z,q=this.w,m=q*c+h*g-i*e,k=q*e+i*c-f*g,r=q*g+f*e-h*c,c=-f*
c-h*e-i*g;b.x=m*q+c*-f+k*-i-r*-h;b.y=k*q+c*-h+r*-f-m*-i;b.z=r*q+c*-i+m*-h-k*-f;return b}};
THREE.Quaternion.slerp=function(a,b,c,e){var g=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;g<0?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,g=-g):c.copy(b);if(Math.abs(g)>=1)return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;var f=Math.acos(g),g=Math.sqrt(1-g*g);if(Math.abs(g)<0.0010)return c.w=0.5*(a.w+b.w),c.x=0.5*(a.x+b.x),c.y=0.5*(a.y+b.y),c.z=0.5*(a.z+b.z),c;b=Math.sin((1-e)*f)/g;e=Math.sin(e*f)/g;c.w=a.w*b+c.w*e;c.x=a.x*b+c.x*e;c.y=a.y*b+c.y*e;c.z=a.z*b+c.z*e;return c};THREE.Vertex=function(a){this.position=a||new THREE.Vector3};
THREE.Face3=function(a,b,c,e,g,f){this.a=a;this.b=b;this.c=c;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=g instanceof THREE.Color?g:new THREE.Color;this.vertexColors=g instanceof Array?g:[];this.vertexTangents=[];this.materialIndex=f;this.centroid=new THREE.Vector3};
THREE.Face4=function(a,b,c,e,g,f,h){this.a=a;this.b=b;this.c=c;this.d=e;this.normal=g instanceof THREE.Vector3?g:new THREE.Vector3;this.vertexNormals=g instanceof Array?g:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=h;this.centroid=new THREE.Vector3};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){this.id=THREE.GeometryCount++;this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.dynamic=this.hasTangents=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a,new THREE.Vector3(1,1,1));for(var c=0,e=this.vertices.length;c<e;c++)a.multiplyVector3(this.vertices[c].position);c=0;for(e=this.faces.length;c<e;c++){var g=this.faces[c];b.multiplyVector3(g.normal);for(var f=0,h=g.vertexNormals.length;f<h;f++)b.multiplyVector3(g.vertexNormals[f]);a.multiplyVector3(g.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<
b;a++)c=this.faces[a],c.centroid.set(0,0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a].position),c.centroid.addSelf(this.vertices[c.b].position),c.centroid.addSelf(this.vertices[c.c].position),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a].position),c.centroid.addSelf(this.vertices[c.b].position),c.centroid.addSelf(this.vertices[c.c].position),c.centroid.addSelf(this.vertices[c.d].position),c.centroid.divideScalar(4))},computeFaceNormals:function(a){var b,
c,e,g,f,h,i=new THREE.Vector3,q=new THREE.Vector3;e=0;for(g=this.faces.length;e<g;e++){f=this.faces[e];if(a&&f.vertexNormals.length){i.set(0,0,0);b=0;for(c=f.vertexNormals.length;b<c;b++)i.addSelf(f.vertexNormals[b]);i.divideScalar(3)}else b=this.vertices[f.a],c=this.vertices[f.b],h=this.vertices[f.c],i.sub(h.position,c.position),q.sub(b.position,c.position),i.crossSelf(q);i.isZero()||i.normalize();f.normal.copy(i)}},computeVertexNormals:function(){var a,b,c,e;if(this.__tmpVertices===void 0){e=this.__tmpVertices=
Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)e[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)if(c=this.faces[a],c instanceof THREE.Face3)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(c instanceof THREE.Face4)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else{e=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)e[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof
THREE.Face3?(e[c.a].addSelf(c.normal),e[c.b].addSelf(c.normal),e[c.c].addSelf(c.normal)):c instanceof THREE.Face4&&(e[c.a].addSelf(c.normal),e[c.b].addSelf(c.normal),e[c.c].addSelf(c.normal),e[c.d].addSelf(c.normal));a=0;for(b=this.vertices.length;a<b;a++)e[a].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(c.vertexNormals[0].copy(e[c.a]),c.vertexNormals[1].copy(e[c.b]),c.vertexNormals[2].copy(e[c.c])):c instanceof THREE.Face4&&(c.vertexNormals[0].copy(e[c.a]),
c.vertexNormals[1].copy(e[c.b]),c.vertexNormals[2].copy(e[c.c]),c.vertexNormals[3].copy(e[c.d]))},computeTangents:function(){function a(a,b,c,e,f,g,M){i=a.vertices[b].position;q=a.vertices[c].position;m=a.vertices[e].position;k=h[f];r=h[g];u=h[M];C=q.x-i.x;B=m.x-i.x;D=q.y-i.y;G=m.y-i.y;qa=q.z-i.z;N=m.z-i.z;ka=r.u-k.u;ma=u.u-k.u;Q=r.v-k.v;ca=u.v-k.v;F=1/(ka*ca-ma*Q);U.set((ca*C-Q*B)*F,(ca*D-Q*G)*F,(ca*qa-Q*N)*F);$.set((ka*B-ma*C)*F,(ka*G-ma*D)*F,(ka*N-ma*qa)*F);X[b].addSelf(U);X[c].addSelf(U);X[e].addSelf(U);
I[b].addSelf($);I[c].addSelf($);I[e].addSelf($)}var b,c,e,g,f,h,i,q,m,k,r,u,C,B,D,G,qa,N,ka,ma,Q,ca,F,K,X=[],I=[],U=new THREE.Vector3,$=new THREE.Vector3,la=new THREE.Vector3,wa=new THREE.Vector3,ja=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)X[b]=new THREE.Vector3,I[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)f=this.faces[b],h=this.faceVertexUvs[0][b],f instanceof THREE.Face3?a(this,f.a,f.b,f.c,0,1,2):f instanceof THREE.Face4&&(a(this,f.a,f.b,f.c,0,1,2),a(this,f.a,f.b,f.d,
0,1,3));var M=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){f=this.faces[b];for(e=0;e<f.vertexNormals.length;e++)ja.copy(f.vertexNormals[e]),g=f[M[e]],K=X[g],la.copy(K),la.subSelf(ja.multiplyScalar(ja.dot(K))).normalize(),wa.cross(f.vertexNormals[e],K),g=wa.dot(I[g]),g=g<0?-1:1,f.vertexTangents[e]=new THREE.Vector4(la.x,la.y,la.z,g)}this.hasTangents=!0},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],
y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,c=this.vertices.length;b<c;b++){a=this.vertices[b];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<
this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=0,b=0,c=this.vertices.length;b<c;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},mergeVertices:function(){var a={},b=[],c=[],e,g=Math.pow(10,4),f,h;f=0;for(h=this.vertices.length;f<h;f++)e=this.vertices[f].position,e=[Math.round(e.x*g),Math.round(e.y*g),Math.round(e.z*g)].join("_"),
a[e]===void 0?(a[e]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[e]];f=0;for(h=this.faces.length;f<h;f++)if(a=this.faces[f],a instanceof THREE.Face3)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c];else if(a instanceof THREE.Face4)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c],a.d=c[a.d];this.vertices=b}};THREE.GeometryCount=0;
THREE.Spline=function(a){function b(a,b,c,e,f,g,h){a=(c-a)*0.5;e=(e-b)*0.5;return(2*(b-c)+a+e)*h+(-3*(b-c)-2*a-e)*g+a*f+b}this.points=a;var c=[],e={x:0,y:0,z:0},g,f,h,i,q,m,k,r,u;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){g=(this.points.length-1)*a;f=Math.floor(g);h=g-f;c[0]=f===0?f:f-1;c[1]=f;c[2]=f>this.points.length-2?f:f+1;c[3]=f>this.points.length-3?f:f+2;m=this.points[c[0]];k=this.points[c[1]];
r=this.points[c[2]];u=this.points[c[3]];i=h*h;q=h*i;e.x=b(m.x,k.x,r.x,u.x,h,i,q);e.y=b(m.y,k.y,r.y,u.y,h,i,q);e.z=b(m.z,k.z,r.z,u.z,h,i,q);return e};this.getControlPointsArray=function(){var a,b,c=this.points.length,e=[];for(a=0;a<c;a++)b=this.points[a],e[a]=[b.x,b.y,b.z];return e};this.getLength=function(a){var b,c,e,f=b=b=0,g=new THREE.Vector3,h=new THREE.Vector3,i=[],k=0;i[0]=0;a||(a=100);c=this.points.length*a;g.copy(this.points[0]);for(a=1;a<c;a++)b=a/c,e=this.getPoint(b),h.copy(e),k+=h.distanceTo(g),
g.copy(e),b*=this.points.length-1,b=Math.floor(b),b!=f&&(i[b]=k,f=b);i[i.length]=k;return{chunks:i,total:k}};this.reparametrizeByArcLength=function(a){var b,c,e,f,g,h,i=[],k=new THREE.Vector3,q=this.getLength();i.push(k.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=q.chunks[b]-q.chunks[b-1];h=Math.ceil(a*c/q.total);f=(b-1)/(this.points.length-1);g=b/(this.points.length-1);for(c=1;c<h-1;c++)e=f+c*(1/h)*(g-f),e=this.getPoint(e),i.push(k.copy(e).clone());i.push(k.copy(this.points[b]).clone())}this.points=
i}};THREE.Edge=function(a,b,c,e){this.vertices=[a,b];this.vertexIndices=[c,e];this.faces=[];this.faceIndices=[]};THREE.Camera=function(){if(arguments.length)return console.warn("DEPRECATED: Camera() is now PerspectiveCamera() or OrthographicCamera()."),new THREE.PerspectiveCamera(arguments[0],arguments[1],arguments[2],arguments[3]);THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};
THREE.Camera.prototype=new THREE.Object3D;THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)};THREE.OrthographicCamera=function(a,b,c,e,g,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=e;this.near=g!==void 0?g:0.1;this.far=f!==void 0?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=new THREE.Camera;
THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makeOrtho(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.PerspectiveCamera=function(a,b,c,e){THREE.Camera.call(this);this.fov=a!==void 0?a:50;this.aspect=b!==void 0?b:1;this.near=c!==void 0?c:0.1;this.far=e!==void 0?e:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=new THREE.Camera;
THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;THREE.PerspectiveCamera.prototype.setLens=function(a,b){this.fov=2*Math.atan((b!==void 0?b:43.25)/(a*2));this.fov*=180/Math.PI;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,e,g,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=e;this.width=g;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,e=a*c,a=Math.abs(a*b-e),c=Math.abs(b-c);this.projectionMatrix=THREE.Matrix4.makeFrustum(e+this.x*a/this.fullWidth,e+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,
this.far)};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=new THREE.Object3D;THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.supr=THREE.Object3D.prototype;THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;
THREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0};THREE.PointLight.prototype=new THREE.Light;
THREE.PointLight.prototype.constructor=THREE.PointLight;THREE.SpotLight=function(a,b,c,e){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0;this.castShadow=e!==void 0?e:!1};THREE.SpotLight.prototype=new THREE.Light;THREE.SpotLight.prototype.constructor=THREE.SpotLight;
THREE.Material=function(a){this.name="";this.id=THREE.MaterialCount++;a=a||{};this.opacity=a.opacity!==void 0?a.opacity:1;this.transparent=a.transparent!==void 0?a.transparent:!1;this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.depthTest=a.depthTest!==void 0?a.depthTest:!0;this.depthWrite=a.depthWrite!==void 0?a.depthWrite:!0;this.polygonOffset=a.polygonOffset!==void 0?a.polygonOffset:!1;this.polygonOffsetFactor=a.polygonOffsetFactor!==void 0?a.polygonOffsetFactor:0;this.polygonOffsetUnits=
a.polygonOffsetUnits!==void 0?a.polygonOffsetUnits:0;this.alphaTest=a.alphaTest!==void 0?a.alphaTest:0;this.overdraw=a.overdraw!==void 0?a.overdraw:!1};THREE.MaterialCount=0;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;THREE.MultiplyBlending=3;THREE.AdditiveAlphaBlending=4;
THREE.LineBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.linewidth=a.linewidth!==void 0?a.linewidth:1;this.linecap=a.linecap!==void 0?a.linecap:"round";this.linejoin=a.linejoin!==void 0?a.linejoin:"round";this.vertexColors=a.vertexColors?a.vertexColors:!1;this.fog=a.fog!==void 0?a.fog:!0};THREE.LineBasicMaterial.prototype=new THREE.Material;THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:null;this.lightMap=a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:
!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:
!1};THREE.MeshBasicMaterial.prototype=new THREE.Material;THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(328965);this.map=a.map!==void 0?a.map:null;this.lightMap=a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=
a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=
a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.MeshLambertMaterial.prototype=new THREE.Material;THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(328965);this.specular=a.specular!==void 0?new THREE.Color(a.specular):new THREE.Color(1118481);this.shininess=a.shininess!==void 0?a.shininess:30;this.metal=a.metal!==void 0?a.metal:!1;this.perPixel=a.perPixel!==void 0?a.perPixel:!1;this.map=a.map!==void 0?a.map:null;this.lightMap=
a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=
a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.MeshPhongMaterial.prototype=new THREE.Material;THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1};THREE.MeshDepthMaterial.prototype=new THREE.Material;THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading?a.shading:THREE.FlatShading;this.wireframe=a.wireframe?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth?a.wireframeLinewidth:1};THREE.MeshNormalMaterial.prototype=new THREE.Material;THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshFaceMaterial=function(){};
THREE.MeshShaderMaterial=function(a){console.warn("DEPRECATED: MeshShaderMaterial() is now ShaderMaterial().");return new THREE.ShaderMaterial(a)};
THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:null;this.size=a.size!==void 0?a.size:1;this.sizeAttenuation=a.sizeAttenuation!==void 0?a.sizeAttenuation:!0;this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.fog=a.fog!==void 0?a.fog:!0};THREE.ParticleBasicMaterial.prototype=new THREE.Material;THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial;
THREE.ShaderMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.fragmentShader=a.fragmentShader!==void 0?a.fragmentShader:"void main() {}";this.vertexShader=a.vertexShader!==void 0?a.vertexShader:"void main() {}";this.uniforms=a.uniforms!==void 0?a.uniforms:{};this.attributes=a.attributes;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.fog=a.fog!==
void 0?a.fog:!1;this.lights=a.lights!==void 0?a.lights:!1;this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.ShaderMaterial.prototype=new THREE.Material;THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;
THREE.Texture=function(a,b,c,e,g,f){this.id=THREE.TextureCount++;this.image=a;this.mapping=b!==void 0?b:new THREE.UVMapping;this.wrapS=c!==void 0?c:THREE.ClampToEdgeWrapping;this.wrapT=e!==void 0?e:THREE.ClampToEdgeWrapping;this.magFilter=g!==void 0?g:THREE.LinearFilter;this.minFilter=f!==void 0?f:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.needsUpdate=!1};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a}};THREE.TextureCount=0;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;
THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;THREE.DataTexture=function(a,b,c,e,g,f,h,i,q){THREE.Texture.call(this,null,g,f,h,i,q);this.image={data:a,width:b,height:c};this.format=e!==void 0?e:THREE.RGBAFormat};THREE.DataTexture.prototype=new THREE.Texture;THREE.DataTexture.prototype.constructor=THREE.DataTexture;
THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.data.slice(0),this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b;this.sortParticles=!1};
THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=b;this.type=c!==void 0?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b;if(b instanceof Array)console.warn("DEPRECATED: Mesh material can no longer be an Array. Using material at index 0..."),this.material=b[0];if(this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};
for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.supr=THREE.Object3D.prototype;
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(this.morphTargetDictionary[a]!==void 0)return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=new THREE.Object3D;THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.supr=THREE.Object3D.prototype;
THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,e=this.children.length;for(c=0;c<e;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b){THREE.Mesh.call(this,a,b);this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var c,e,g,f,h,i;if(this.geometry.bones!==void 0){for(c=0;c<this.geometry.bones.length;c++)g=this.geometry.bones[c],f=g.pos,h=g.rotq,i=g.scl,e=this.addBone(),e.name=g.name,e.position.set(f[0],f[1],f[2]),e.quaternion.set(h[0],h[1],h[2],h[3]),e.useQuaternion=!0,i!==void 0?e.scale.set(i[0],i[1],i[2]):e.scale.set(1,1,1);for(c=0;c<this.bones.length;c++)g=this.geometry.bones[c],
e=this.bones[c],g.parent===-1?this.add(e):this.bones[g.parent].add(e);this.boneMatrices=new Float32Array(16*this.bones.length);this.pose()}};THREE.SkinnedMesh.prototype=new THREE.Mesh;THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.addBone=function(a){a===void 0&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}for(var b=this.bones.length,c=this.bones,e=this.boneMatrices,a=0;a<b;a++)c[a].skinMatrix.flattenToArrayOffset(e,
a*16)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a,b=[],c=0;c<this.bones.length;c++){a=this.bones[c];var e=new THREE.Matrix4;e.getInverse(a.skinMatrix);b.push(e);a.skinMatrix.flattenToArrayOffset(this.boneMatrices,c*16)}if(this.geometry.skinVerticesA===void 0){this.geometry.skinVerticesA=[];this.geometry.skinVerticesB=[];for(a=0;a<this.geometry.skinIndices.length;a++){var c=this.geometry.vertices[a].position,g=this.geometry.skinIndices[a].x,f=this.geometry.skinIndices[a].y,e=
new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesA.push(b[g].multiplyVector3(e));e=new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesB.push(b[f].multiplyVector3(e));this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y!==1&&(c=(1-(this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y))*0.5,this.geometry.skinWeights[a].x+=c,this.geometry.skinWeights[a].y+=c)}}};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};
THREE.Ribbon.prototype=new THREE.Object3D;THREE.Ribbon.prototype.constructor=THREE.Ribbon;THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=new THREE.Object3D;THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.supr=THREE.Object3D.prototype;THREE.LOD.prototype.addLevel=function(a,b){b===void 0&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length;c++)if(b<this.LODs[c].visibleAtDistance)break;this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(this.LODs.length>1){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.n31*this.position.x+a.n32*this.position.y+a.n33*this.position.z+a.n34);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=!1}};
THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map instanceof THREE.Texture?a.map:THREE.ImageUtils.loadTexture(a.map);this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.useScreenCoordinates=a.useScreenCoordinates!==void 0?a.useScreenCoordinates:!0;this.mergeWith3D=a.mergeWith3D!==void 0?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=a.affectedByDistance!==void 0?a.affectedByDistance:
!this.useScreenCoordinates;this.scaleByViewport=a.scaleByViewport!==void 0?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1)};THREE.Sprite.prototype=new THREE.Object3D;THREE.Sprite.prototype.constructor=THREE.Sprite;
THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(this.scale.x!==1||this.scale.y!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);
THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);
THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.objects=[];this.lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=new THREE.Object3D;THREE.Scene.prototype.constructor=THREE.Scene;
THREE.Scene.prototype.addObject=function(a){if(a instanceof THREE.Light)this.lights.indexOf(a)===-1&&this.lights.push(a);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&this.objects.indexOf(a)===-1){this.objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);b!==-1&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.addObject(a.children[b])};
THREE.Scene.prototype.removeObject=function(a){if(a instanceof THREE.Light){var b=this.lights.indexOf(a);b!==-1&&this.lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.objects.indexOf(a),b!==-1&&(this.objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),b!==-1&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=b!==void 0?b:1;this.far=c!==void 0?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b!==void 0?b:2.5E-4};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity );\n} else {\ngl_FragColor.xyz = gl_FragColor.xyz * cubeColor.xyz;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",
lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif",
lights_lambert_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat pointLightWeighting = max( dot( transformedNormal, lVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting * lDistance;\n}\n#endif\nvLightWeighting = vLightWeighting * diffuse + ambient * ambientLightColor;\n}",
lights_phong_pars_vertex:"#if MAX_POINT_LIGHTS > 0\n#ifndef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif",lights_phong_vertex:"#if MAX_POINT_LIGHTS > 0\n#ifndef PHONG_PER_PIXEL\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDistance = lDistance;\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\nfloat pointSpecularWeight = pow( pointDotNormalHalf, shininess );\n#ifdef PHYSICALLY_BASED_SHADING\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance;\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * pointDistance;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = pow( dirDotNormalHalf, shininess );\n#ifdef PHYSICALLY_BASED_SHADING\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * viewMatrix * objectMatrix * gl_Position;\n#endif",
morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\nuniform float morphTargetInfluences[ 8 ];\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0, 0.0, 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",
default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform float shadowDarkness;\nuniform float shadowBias;\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",
shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_SOFT\nconst float xPixelOffset = 1.0 / SHADOWMAP_WIDTH;\nconst float yPixelOffset = 1.0 / SHADOWMAP_HEIGHT;\n#endif\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nshadowCoord.z += shadowBias;\nif ( shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0 ) {\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nfor ( float y = -1.25; y <= 1.25; y += 1.25 )\nfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\nvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadow += 1.0;\n}\nshadow /= 9.0;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( shadowDarkness );\n#endif\n}\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,e,g={};for(b=0;b<a.length;b++)for(c in e=this.clone(a[b]),e)g[c]=e[c];return g},clone:function(a){var b,c,e,g={};for(b in a)for(c in g[b]={},a[b])e=a[b][c],g[b][c]=e instanceof THREE.Color||e instanceof THREE.Vector2||e instanceof THREE.Vector3||e instanceof THREE.Vector4||e instanceof THREE.Matrix4||e instanceof THREE.Texture?e.clone():e instanceof Array?e.slice():e;return g}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},fog:{fogDensity:{type:"f",
value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:6,texture:[]},shadowMatrix:{type:"m4v",value:[]},shadowBias:{type:"f",value:0.0039},shadowDarkness:{type:"f",value:0.2}}};
THREE.ShaderLib={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"},
depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},
vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(328965)}}]),vertexShader:["varying vec3 vLightWeighting;",THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",
THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightWeighting;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",
THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,"gl_FragColor.xyz = gl_FragColor.xyz * vLightWeighting;",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",
value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),vertexShader:["varying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",
THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = -mvPosition.xyz;\nvec3 transformedNormal = normalMatrix * normal;\nvNormal = transformedNormal;",THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,
"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,
THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,
THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,e=b.material;if(e.attributes){if(a.__webglCustomAttributesList===void 0)a.__webglCustomAttributesList=[];for(var f in e.attributes){var g=e.attributes[f];if(!g.__webglInitialized||g.createUniqueBuffers){g.__webglInitialized=!0;var h=1;g.type==="v2"?h=2:g.type==="v3"?h=3:g.type==="v4"?h=4:g.type==="c"&&(h=3);g.size=h;g.array=new Float32Array(c*h);g.buffer=d.createBuffer();g.buffer.belongsToAttribute=f;g.needsUpdate=!0}a.__webglCustomAttributesList.push(g)}}}
function c(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;else if(b.materialIndex>=0)return a.geometry.materials[b.materialIndex]}function e(a,b,c){var e,f,g,h,n=a.vertices;h=n.length;var A=a.colors,i=A.length,l=a.__vertexArray,p=a.__colorArray,k=a.__sortArray,v=a.__dirtyVertices,q=a.__dirtyColors,m=a.__webglCustomAttributesList;if(c.sortParticles){Aa.multiplySelf(c.matrixWorld);for(e=0;e<h;e++)f=n[e].position,Ga.copy(f),Aa.multiplyVector3(Ga),k[e]=[Ga.z,e];
k.sort(function(a,b){return b[0]-a[0]});for(e=0;e<h;e++)f=n[k[e][1]].position,g=e*3,l[g]=f.x,l[g+1]=f.y,l[g+2]=f.z;for(e=0;e<i;e++)g=e*3,f=A[k[e][1]],p[g]=f.r,p[g+1]=f.g,p[g+2]=f.b;if(m){A=0;for(i=m.length;A<i;A++)if(n=m[A],n.boundTo===void 0||n.boundTo==="vertices")if(g=0,f=n.value.length,n.size===1)for(e=0;e<f;e++)h=k[e][1],n.array[e]=n.value[h];else if(n.size===2)for(e=0;e<f;e++)h=k[e][1],h=n.value[h],n.array[g]=h.x,n.array[g+1]=h.y,g+=2;else if(n.size===3)if(n.type==="c")for(e=0;e<f;e++)h=k[e][1],
h=n.value[h],n.array[g]=h.r,n.array[g+1]=h.g,n.array[g+2]=h.b,g+=3;else for(e=0;e<f;e++)h=k[e][1],h=n.value[h],n.array[g]=h.x,n.array[g+1]=h.y,n.array[g+2]=h.z,g+=3;else if(n.size===4)for(e=0;e<f;e++)h=k[e][1],h=n.value[h],n.array[g]=h.x,n.array[g+1]=h.y,n.array[g+2]=h.z,n.array[g+3]=h.w,g+=4}}else{if(v)for(e=0;e<h;e++)f=n[e].position,g=e*3,l[g]=f.x,l[g+1]=f.y,l[g+2]=f.z;if(q)for(e=0;e<i;e++)f=A[e],g=e*3,p[g]=f.r,p[g+1]=f.g,p[g+2]=f.b;if(m){A=0;for(i=m.length;A<i;A++)if(n=m[A],n.needsUpdate&&(n.boundTo===
void 0||n.boundTo==="vertices"))if(f=n.value.length,g=0,n.size===1)for(e=0;e<f;e++)n.array[e]=n.value[e];else if(n.size===2)for(e=0;e<f;e++)h=n.value[e],n.array[g]=h.x,n.array[g+1]=h.y,g+=2;else if(n.size===3)if(n.type==="c")for(e=0;e<f;e++)h=n.value[e],n.array[g]=h.r,n.array[g+1]=h.g,n.array[g+2]=h.b,g+=3;else for(e=0;e<f;e++)h=n.value[e],n.array[g]=h.x,n.array[g+1]=h.y,n.array[g+2]=h.z,g+=3;else if(n.size===4)for(e=0;e<f;e++)h=n.value[e],n.array[g]=h.x,n.array[g+1]=h.y,n.array[g+2]=h.z,n.array[g+
3]=h.w,g+=4}}if(v||c.sortParticles)d.bindBuffer(d.ARRAY_BUFFER,a.__webglVertexBuffer),d.bufferData(d.ARRAY_BUFFER,l,b);if(q||c.sortParticles)d.bindBuffer(d.ARRAY_BUFFER,a.__webglColorBuffer),d.bufferData(d.ARRAY_BUFFER,p,b);if(m){A=0;for(i=m.length;A<i;A++)if(n=m[A],n.needsUpdate||c.sortParticles)d.bindBuffer(d.ARRAY_BUFFER,n.buffer),d.bufferData(d.ARRAY_BUFFER,n.array,b)}}function g(a,b,c,e,g){e.program||M.initMaterial(e,b,c,g);if(e.morphTargets&&!g.__webglMorphTargetInfluences){g.__webglMorphTargetInfluences=
new Float32Array(M.maxMorphTargets);for(var f=0,h=M.maxMorphTargets;f<h;f++)g.__webglMorphTargetInfluences[f]=0}var n=!1,f=e.program,h=f.uniforms,A=e.uniforms;f!==Pa&&(d.useProgram(f),Pa=f,n=!0);if(e.id!==ra)ra=e.id,n=!0;if(n){d.uniformMatrix4fv(h.projectionMatrix,!1,Ma);if(c&&e.fog)if(A.fogColor.value=c.color,c instanceof THREE.Fog)A.fogNear.value=c.near,A.fogFar.value=c.far;else if(c instanceof THREE.FogExp2)A.fogDensity.value=c.density;if(e instanceof THREE.MeshPhongMaterial||e instanceof THREE.MeshLambertMaterial||
e.lights){for(var i,l,p=0,k=0,v=0,q,m,r,s=Sa,u=s.directional.colors,z=s.directional.positions,t=s.point.colors,C=s.point.positions,B=s.point.distances,D=0,P=0,c=i=r=0,n=b.length;c<n;c++)if(i=b[c],l=i.color,q=i.position,m=i.intensity,r=i.distance,i instanceof THREE.AmbientLight)M.gammaInput?(p+=l.r*l.r,k+=l.g*l.g,v+=l.b*l.b):(p+=l.r,k+=l.g,v+=l.b);else if(i instanceof THREE.DirectionalLight)r=D*3,M.gammaInput?(u[r]=l.r*l.r*m*m,u[r+1]=l.g*l.g*m*m,u[r+2]=l.b*l.b*m*m):(u[r]=l.r*m,u[r+1]=l.g*m,u[r+2]=
l.b*m),z[r]=q.x,z[r+1]=q.y,z[r+2]=q.z,D+=1;else if(i instanceof THREE.SpotLight)r=D*3,M.gammaInput?(u[r]=l.r*l.r*m*m,u[r+1]=l.g*l.g*m*m,u[r+2]=l.b*l.b*m*m):(u[r]=l.r*m,u[r+1]=l.g*m,u[r+2]=l.b*m),l=1/q.length(),z[r]=q.x*l,z[r+1]=q.y*l,z[r+2]=q.z*l,D+=1;else if(i instanceof THREE.PointLight)i=P*3,M.gammaInput?(t[i]=l.r*l.r*m*m,t[i+1]=l.g*l.g*m*m,t[i+2]=l.b*l.b*m*m):(t[i]=l.r*m,t[i+1]=l.g*m,t[i+2]=l.b*m),C[i]=q.x,C[i+1]=q.y,C[i+2]=q.z,B[P]=r,P+=1;c=D*3;for(n=u.length;c<n;c++)u[c]=0;c=P*3;for(n=t.length;c<
n;c++)t[c]=0;s.point.length=P;s.directional.length=D;s.ambient[0]=p;s.ambient[1]=k;s.ambient[2]=v;b=Sa;A.enableLighting.value=b.directional.length+b.point.length;A.ambientLightColor.value=b.ambient;A.directionalLightColor.value=b.directional.colors;A.directionalLightDirection.value=b.directional.positions;A.pointLightColor.value=b.point.colors;A.pointLightPosition.value=b.point.positions;A.pointLightDistance.value=b.point.distances}if(e instanceof THREE.MeshBasicMaterial||e instanceof THREE.MeshLambertMaterial||
e instanceof THREE.MeshPhongMaterial)A.opacity.value=e.opacity,M.gammaInput?A.diffuse.value.copyGammaToLinear(e.color):A.diffuse.value=e.color,(A.map.texture=e.map)&&A.offsetRepeat.value.set(e.map.offset.x,e.map.offset.y,e.map.repeat.x,e.map.repeat.y),A.lightMap.texture=e.lightMap,A.envMap.texture=e.envMap,A.flipEnvMap.value=e.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,A.reflectivity.value=e.reflectivity,A.refractionRatio.value=e.refractionRatio,A.combine.value=e.combine,A.useRefract.value=
e.envMap&&e.envMap.mapping instanceof THREE.CubeRefractionMapping;if(e instanceof THREE.LineBasicMaterial)A.diffuse.value=e.color,A.opacity.value=e.opacity;else if(e instanceof THREE.ParticleBasicMaterial)A.psColor.value=e.color,A.opacity.value=e.opacity,A.size.value=e.size,A.scale.value=Ba.height/2,A.map.texture=e.map;else if(e instanceof THREE.MeshPhongMaterial)A.shininess.value=e.shininess,M.gammaInput?(A.ambient.value.copyGammaToLinear(e.ambient),A.specular.value.copyGammaToLinear(e.specular)):
(A.ambient.value=e.ambient,A.specular.value=e.specular);else if(e instanceof THREE.MeshLambertMaterial)M.gammaInput?A.ambient.value.copyGammaToLinear(e.ambient):A.ambient.value=e.ambient;else if(e instanceof THREE.MeshDepthMaterial)A.mNear.value=a.near,A.mFar.value=a.far,A.opacity.value=e.opacity;else if(e instanceof THREE.MeshNormalMaterial)A.opacity.value=e.opacity;if(g.receiveShadow&&!e._shadowPass&&A.shadowMatrix){for(b=0;b<Ka.length;b++)A.shadowMatrix.value[b]=Ka[b],A.shadowMap.texture[b]=M.shadowMap[b];
A.shadowDarkness.value=M.shadowMapDarkness;A.shadowBias.value=M.shadowMapBias}b=e.uniformsList;A=0;for(c=b.length;A<c;A++)if(k=f.uniforms[b[A][1]])if(p=b[A][0],v=p.type,n=p.value,v==="i")d.uniform1i(k,n);else if(v==="f")d.uniform1f(k,n);else if(v==="v2")d.uniform2f(k,n.x,n.y);else if(v==="v3")d.uniform3f(k,n.x,n.y,n.z);else if(v==="v4")d.uniform4f(k,n.x,n.y,n.z,n.w);else if(v==="c")d.uniform3f(k,n.r,n.g,n.b);else if(v==="fv1")d.uniform1fv(k,n);else if(v==="fv")d.uniform3fv(k,n);else if(v==="v3v"){if(!p._array)p._array=
new Float32Array(3*n.length);v=0;for(q=n.length;v<q;v++)s=v*3,p._array[s]=n[v].x,p._array[s+1]=n[v].y,p._array[s+2]=n[v].z;d.uniform3fv(k,p._array)}else if(v==="m4"){if(!p._array)p._array=new Float32Array(16);n.flattenToArray(p._array);d.uniformMatrix4fv(k,!1,p._array)}else if(v==="m4v"){if(!p._array)p._array=new Float32Array(16*n.length);v=0;for(q=n.length;v<q;v++)n[v].flattenToArrayOffset(p._array,v*16);d.uniformMatrix4fv(k,!1,p._array)}else if(v==="t"){if(d.uniform1i(k,n),k=p.texture)if(k.image instanceof
Array&&k.image.length===6){if(p=k,p.image.length===6)if(p.needsUpdate){if(!p.image.__webglTextureCube)p.image.__webglTextureCube=d.createTexture();d.activeTexture(d.TEXTURE0+n);d.bindTexture(d.TEXTURE_CUBE_MAP,p.image.__webglTextureCube);for(n=0;n<6;n++)d.texImage2D(d.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,p.image[n]);K(d.TEXTURE_CUBE_MAP,p,p.image[0]);p.needsUpdate=!1}else d.activeTexture(d.TEXTURE0+n),d.bindTexture(d.TEXTURE_CUBE_MAP,p.image.__webglTextureCube)}else k instanceof
THREE.WebGLRenderTargetCube?(p=k,d.activeTexture(d.TEXTURE0+n),d.bindTexture(d.TEXTURE_CUBE_MAP,p.__webglTexture)):X(k,n)}else if(v==="tv"){if(!p._array){p._array=[];v=0;for(q=p.texture.length;v<q;v++)p._array[v]=n+v}d.uniform1iv(k,p._array);v=0;for(q=p.texture.length;v<q;v++)(k=p.texture[v])&&X(k,p._array[v])}(e instanceof THREE.ShaderMaterial||e instanceof THREE.MeshPhongMaterial||e.envMap)&&h.cameraPosition!==null&&d.uniform3f(h.cameraPosition,a.position.x,a.position.y,a.position.z);(e instanceof
THREE.MeshPhongMaterial||e instanceof THREE.MeshLambertMaterial||e instanceof THREE.ShaderMaterial||e.skinning)&&h.viewMatrix!==null&&d.uniformMatrix4fv(h.viewMatrix,!1,Na);e.skinning&&(d.uniformMatrix4fv(h.cameraInverseMatrix,!1,Na),d.uniformMatrix4fv(h.boneGlobalMatrices,!1,g.boneMatrices))}d.uniformMatrix4fv(h.modelViewMatrix,!1,g._modelViewMatrixArray);h.normalMatrix&&d.uniformMatrix3fv(h.normalMatrix,!1,g._normalMatrixArray);(e instanceof THREE.ShaderMaterial||e.envMap||e.skinning||g.receiveShadow)&&
h.objectMatrix!==null&&d.uniformMatrix4fv(h.objectMatrix,!1,g._objectMatrixArray);return f}function f(a,b,c,e,f,h){if(e.opacity!==0){var i,n,c=g(a,b,c,e,h),b=c.attributes,a=!1,c=f.id*16777215+c.id*2+(e.wireframe?1:0);c!==W&&(W=c,a=!0);if(!e.morphTargets&&b.position>=0)a&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglVertexBuffer),d.vertexAttribPointer(b.position,3,d.FLOAT,!1,0,0));else if(h.morphTargetBase){c=e.program.attributes;h.morphTargetBase!==-1?(d.bindBuffer(d.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[h.morphTargetBase]),
d.vertexAttribPointer(c.position,3,d.FLOAT,!1,0,0)):c.position>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglVertexBuffer),d.vertexAttribPointer(c.position,3,d.FLOAT,!1,0,0));if(h.morphTargetForcedOrder.length){i=0;var A=h.morphTargetForcedOrder;for(n=h.morphTargetInfluences;i<e.numSupportedMorphTargets&&i<A.length;)d.bindBuffer(d.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[A[i]]),d.vertexAttribPointer(c["morphTarget"+i],3,d.FLOAT,!1,0,0),h.__webglMorphTargetInfluences[i]=n[A[i]],i++}else{var A=[],k=-1,
l=0;n=h.morphTargetInfluences;var p,m=n.length;i=0;for(h.morphTargetBase!==-1&&(A[h.morphTargetBase]=!0);i<e.numSupportedMorphTargets;){for(p=0;p<m;p++)!A[p]&&n[p]>k&&(l=p,k=n[l]);d.bindBuffer(d.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[l]);d.vertexAttribPointer(c["morphTarget"+i],3,d.FLOAT,!1,0,0);h.__webglMorphTargetInfluences[i]=k;A[l]=1;k=-1;i++}}e.program.uniforms.morphTargetInfluences!==null&&d.uniform1fv(e.program.uniforms.morphTargetInfluences,h.__webglMorphTargetInfluences)}if(a){if(f.__webglCustomAttributesList){i=
0;for(n=f.__webglCustomAttributesList.length;i<n;i++)c=f.__webglCustomAttributesList[i],b[c.buffer.belongsToAttribute]>=0&&(d.bindBuffer(d.ARRAY_BUFFER,c.buffer),d.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,d.FLOAT,!1,0,0))}b.color>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglColorBuffer),d.vertexAttribPointer(b.color,3,d.FLOAT,!1,0,0));b.normal>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglNormalBuffer),d.vertexAttribPointer(b.normal,3,d.FLOAT,!1,0,0));b.tangent>=0&&(d.bindBuffer(d.ARRAY_BUFFER,
f.__webglTangentBuffer),d.vertexAttribPointer(b.tangent,4,d.FLOAT,!1,0,0));b.uv>=0&&(f.__webglUVBuffer?(d.bindBuffer(d.ARRAY_BUFFER,f.__webglUVBuffer),d.vertexAttribPointer(b.uv,2,d.FLOAT,!1,0,0),d.enableVertexAttribArray(b.uv)):d.disableVertexAttribArray(b.uv));b.uv2>=0&&(f.__webglUV2Buffer?(d.bindBuffer(d.ARRAY_BUFFER,f.__webglUV2Buffer),d.vertexAttribPointer(b.uv2,2,d.FLOAT,!1,0,0),d.enableVertexAttribArray(b.uv2)):d.disableVertexAttribArray(b.uv2));e.skinning&&b.skinVertexA>=0&&b.skinVertexB>=
0&&b.skinIndex>=0&&b.skinWeight>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinVertexABuffer),d.vertexAttribPointer(b.skinVertexA,4,d.FLOAT,!1,0,0),d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinVertexBBuffer),d.vertexAttribPointer(b.skinVertexB,4,d.FLOAT,!1,0,0),d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinIndicesBuffer),d.vertexAttribPointer(b.skinIndex,4,d.FLOAT,!1,0,0),d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinWeightsBuffer),d.vertexAttribPointer(b.skinWeight,4,d.FLOAT,!1,0,0))}h instanceof THREE.Mesh?(e.wireframe?
(e=e.wireframeLinewidth,e!==za&&(d.lineWidth(e),za=e),a&&d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,f.__webglLineBuffer),d.drawElements(d.LINES,f.__webglLineCount,d.UNSIGNED_SHORT,0)):(a&&d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,f.__webglFaceBuffer),d.drawElements(d.TRIANGLES,f.__webglFaceCount,d.UNSIGNED_SHORT,0)),M.info.render.calls++,M.info.render.vertices+=f.__webglFaceCount,M.info.render.faces+=f.__webglFaceCount/3):h instanceof THREE.Line?(h=h.type===THREE.LineStrip?d.LINE_STRIP:d.LINES,e=e.linewidth,e!==
za&&(d.lineWidth(e),za=e),d.drawArrays(h,0,f.__webglLineCount),M.info.render.calls++):h instanceof THREE.ParticleSystem?(d.drawArrays(d.POINTS,0,f.__webglParticleCount),M.info.render.calls++):h instanceof THREE.Ribbon&&(d.drawArrays(d.TRIANGLE_STRIP,0,f.__webglVertexCount),M.info.render.calls++)}}function h(a,b,c){if(!a.__webglVertexBuffer)a.__webglVertexBuffer=d.createBuffer();if(!a.__webglNormalBuffer)a.__webglNormalBuffer=d.createBuffer();a.hasPos&&(d.bindBuffer(d.ARRAY_BUFFER,a.__webglVertexBuffer),
d.bufferData(d.ARRAY_BUFFER,a.positionArray,d.DYNAMIC_DRAW),d.enableVertexAttribArray(b.attributes.position),d.vertexAttribPointer(b.attributes.position,3,d.FLOAT,!1,0,0));if(a.hasNormal){d.bindBuffer(d.ARRAY_BUFFER,a.__webglNormalBuffer);if(c===THREE.FlatShading){var e,f,g,h,n,i,k,l,p,m,v=a.count*3;for(m=0;m<v;m+=9)c=a.normalArray,e=c[m],f=c[m+1],g=c[m+2],h=c[m+3],i=c[m+4],l=c[m+5],n=c[m+6],k=c[m+7],p=c[m+8],e=(e+h+n)/3,f=(f+i+k)/3,g=(g+l+p)/3,c[m]=e,c[m+1]=f,c[m+2]=g,c[m+3]=e,c[m+4]=f,c[m+5]=g,
c[m+6]=e,c[m+7]=f,c[m+8]=g}d.bufferData(d.ARRAY_BUFFER,a.normalArray,d.DYNAMIC_DRAW);d.enableVertexAttribArray(b.attributes.normal);d.vertexAttribPointer(b.attributes.normal,3,d.FLOAT,!1,0,0)}d.drawArrays(d.TRIANGLES,0,a.count);a.count=0}function i(a){if(fa!==a.doubleSided)a.doubleSided?d.disable(d.CULL_FACE):d.enable(d.CULL_FACE),fa=a.doubleSided;if(sa!==a.flipSided)a.flipSided?d.frontFace(d.CW):d.frontFace(d.CCW),sa=a.flipSided}function q(a){na!==a&&(a?d.enable(d.DEPTH_TEST):d.disable(d.DEPTH_TEST),
na=a)}function m(a){ta!==a&&(d.depthMask(a),ta=a)}function k(a,b,c){Ea!==a&&(a?d.enable(d.POLYGON_OFFSET_FILL):d.disable(d.POLYGON_OFFSET_FILL),Ea=a);if(a&&(Ia!==b||Fa!==c))d.polygonOffset(b,c),Ia=b,Fa=c}function r(a){ua[0].set(a.n41-a.n11,a.n42-a.n12,a.n43-a.n13,a.n44-a.n14);ua[1].set(a.n41+a.n11,a.n42+a.n12,a.n43+a.n13,a.n44+a.n14);ua[2].set(a.n41+a.n21,a.n42+a.n22,a.n43+a.n23,a.n44+a.n24);ua[3].set(a.n41-a.n21,a.n42-a.n22,a.n43-a.n23,a.n44-a.n24);ua[4].set(a.n41-a.n31,a.n42-a.n32,a.n43-a.n33,a.n44-
a.n34);ua[5].set(a.n41+a.n31,a.n42+a.n32,a.n43+a.n33,a.n44+a.n34);for(var b,a=0;a<6;a++)b=ua[a],b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))}function u(a){for(var b=a.matrixWorld,d=-a.geometry.boundingSphere.radius*Math.max(a.scale.x,Math.max(a.scale.y,a.scale.z)),c=0;c<6;c++)if(a=ua[c].x*b.n14+ua[c].y*b.n24+ua[c].z*b.n34+ua[c].w,a<=d)return!1;return!0}function C(a){var b=a.object.material;b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}function B(a){var b=a.object,
d=a.buffer,c;c=b.material;if(c instanceof THREE.MeshFaceMaterial){if(d=d.materialIndex,d>=0)b=b.geometry.materials[d],b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}else if(b=c)b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}function D(a,b){return b.z-a.z}function G(a){var b,c,e,k=0,T,m,n,A,R,l,p=a.lights;oa||(oa=new THREE.PerspectiveCamera(M.shadowCameraFov,M.shadowMapWidth/M.shadowMapHeight,M.shadowCameraNear,M.shadowCameraFar));b=0;for(c=
p.length;b<c;b++)if(e=p[b],e instanceof THREE.SpotLight&&e.castShadow){ra=-1;M.shadowMap[k]||(M.shadowMap[k]=new THREE.WebGLRenderTarget(M.shadowMapWidth,M.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}));Ka[k]||(Ka[k]=new THREE.Matrix4);T=M.shadowMap[k];m=Ka[k];oa.position.copy(e.position);oa.lookAt(e.target.position);oa.parent==null&&(console.warn("Camera is not on the Scene. Adding it..."),a.add(oa));this.autoUpdateScene&&a.updateMatrixWorld();
oa.matrixWorldInverse.getInverse(oa.matrixWorld);m.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);m.multiplySelf(oa.projectionMatrix);m.multiplySelf(oa.matrixWorldInverse);oa.matrixWorldInverse.flattenToArray(Na);oa.projectionMatrix.flattenToArray(Ma);Aa.multiply(oa.projectionMatrix,oa.matrixWorldInverse);r(Aa);U(T);d.clearColor(1,1,1,1);M.clear();d.clearColor(va.r,va.g,va.b,Ca);m=a.__webglObjects.length;e=a.__webglObjectsImmediate.length;for(T=0;T<m;T++)n=a.__webglObjects[T],l=n.object,l.visible&&
l.castShadow?!(l instanceof THREE.Mesh)||!l.frustumCulled||u(l)?(l.matrixWorld.flattenToArray(l._objectMatrixArray),N(l,oa,!1),n.render=!0):n.render=!1:n.render=!1;q(!0);F(THREE.NormalBlending);for(T=0;T<m;T++)if(n=a.__webglObjects[T],n.render)l=n.object,R=n.buffer,i(l),n=l.customDepthMaterial?l.customDepthMaterial:l.geometry.morphTargets.length?Ta:Oa,f(oa,p,null,n,R,l);for(T=0;T<e;T++)n=a.__webglObjectsImmediate[T],l=n.object,l.visible&&l.castShadow&&(l.matrixAutoUpdate&&l.matrixWorld.flattenToArray(l._objectMatrixArray),
W=-1,N(l,oa,!1),i(l),A=g(oa,p,null,Oa,l),l.immediateRenderCallback?l.immediateRenderCallback(A,d,ua):l.render(function(a){h(a,A,Oa.shading)}));k++}}function qa(a,b){var c,e,f;c=z.attributes;var g=z.uniforms,h=Ha/La,n,i=[],k=La*0.5,l=Ha*0.5,p=!0;d.useProgram(z.program);Pa=z.program;W=na=O=-1;Ua||(d.enableVertexAttribArray(z.attributes.position),d.enableVertexAttribArray(z.attributes.uv),Ua=!0);d.disable(d.CULL_FACE);d.enable(d.BLEND);d.depthMask(!0);d.bindBuffer(d.ARRAY_BUFFER,z.vertexBuffer);d.vertexAttribPointer(c.position,
2,d.FLOAT,!1,16,0);d.vertexAttribPointer(c.uv,2,d.FLOAT,!1,16,8);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,z.elementBuffer);d.uniformMatrix4fv(g.projectionMatrix,!1,Ma);d.activeTexture(d.TEXTURE0);d.uniform1i(g.map,0);c=0;for(e=a.__webglSprites.length;c<e;c++)if(f=a.__webglSprites[c],f.visible&&f.opacity!==0)f.useScreenCoordinates?f.z=-f.position.z:(f._modelViewMatrix.multiplyToArray(b.matrixWorldInverse,f.matrixWorld,f._modelViewMatrixArray),f.z=-f._modelViewMatrix.n34);a.__webglSprites.sort(D);c=0;for(e=
a.__webglSprites.length;c<e;c++)f=a.__webglSprites[c],f.visible&&f.opacity!==0&&f.map&&f.map.image&&f.map.image.width&&(f.useScreenCoordinates?(d.uniform1i(g.useScreenCoordinates,1),d.uniform3f(g.screenPosition,(f.position.x-k)/k,(l-f.position.y)/l,Math.max(0,Math.min(1,f.position.z)))):(d.uniform1i(g.useScreenCoordinates,0),d.uniform1i(g.affectedByDistance,f.affectedByDistance?1:0),d.uniformMatrix4fv(g.modelViewMatrix,!1,f._modelViewMatrixArray)),n=f.map.image.width/(f.scaleByViewport?Ha:1),i[0]=
n*h*f.scale.x,i[1]=n*f.scale.y,d.uniform2f(g.uvScale,f.uvScale.x,f.uvScale.y),d.uniform2f(g.uvOffset,f.uvOffset.x,f.uvOffset.y),d.uniform2f(g.alignment,f.alignment.x,f.alignment.y),d.uniform1f(g.opacity,f.opacity),d.uniform3f(g.color,f.color.r,f.color.g,f.color.b),d.uniform1f(g.rotation,f.rotation),d.uniform2fv(g.scale,i),f.mergeWith3D&&!p?(d.enable(d.DEPTH_TEST),p=!0):!f.mergeWith3D&&p&&(d.disable(d.DEPTH_TEST),p=!1),F(f.blending),X(f.map,0),d.drawElements(d.TRIANGLES,6,d.UNSIGNED_SHORT,0));d.enable(d.CULL_FACE);
d.enable(d.DEPTH_TEST);d.depthMask(ta)}function N(a,b,c){a._modelViewMatrix.multiplyToArray(b.matrixWorldInverse,a.matrixWorld,a._modelViewMatrixArray);c&&THREE.Matrix4.makeInvert3x3(a._modelViewMatrix).transposeIntoArray(a._normalMatrixArray)}function ka(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function ma(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function Q(a,b){for(var c=a.length-1;c>=0;c--)a[c].object===b&&a.splice(c,1)}function ca(a,b,c){a.push({buffer:b,
object:c,opaque:null,transparent:null})}function F(a){if(a!==O){switch(a){case THREE.AdditiveBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.SRC_ALPHA,d.ONE);break;case THREE.SubtractiveBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.ZERO,d.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.ZERO,d.SRC_COLOR);break;default:d.blendEquationSeparate(d.FUNC_ADD,d.FUNC_ADD),d.blendFuncSeparate(d.SRC_ALPHA,d.ONE_MINUS_SRC_ALPHA,d.ONE,d.ONE_MINUS_SRC_ALPHA)}O=
a}}function K(a,b,c){(c.width&c.width-1)===0&&(c.height&c.height-1)===0?(d.texParameteri(a,d.TEXTURE_WRAP_S,ja(b.wrapS)),d.texParameteri(a,d.TEXTURE_WRAP_T,ja(b.wrapT)),d.texParameteri(a,d.TEXTURE_MAG_FILTER,ja(b.magFilter)),d.texParameteri(a,d.TEXTURE_MIN_FILTER,ja(b.minFilter)),d.generateMipmap(a)):(d.texParameteri(a,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(a,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.texParameteri(a,d.TEXTURE_MAG_FILTER,wa(b.magFilter)),d.texParameteri(a,d.TEXTURE_MIN_FILTER,
wa(b.minFilter)))}function X(a,b){if(a.needsUpdate){if(!a.__webglInit)a.__webglInit=!0,a.__webglTexture=d.createTexture(),M.info.memory.textures++;d.activeTexture(d.TEXTURE0+b);d.bindTexture(d.TEXTURE_2D,a.__webglTexture);a instanceof THREE.DataTexture?d.texImage2D(d.TEXTURE_2D,0,ja(a.format),a.image.width,a.image.height,0,ja(a.format),d.UNSIGNED_BYTE,a.image.data):d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,a.image);K(d.TEXTURE_2D,a,a.image);a.needsUpdate=!1}else d.activeTexture(d.TEXTURE0+
b),d.bindTexture(d.TEXTURE_2D,a.__webglTexture)}function I(a,b){d.bindRenderbuffer(d.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(d.renderbufferStorage(d.RENDERBUFFER,d.DEPTH_COMPONENT16,b.width,b.height),d.framebufferRenderbuffer(d.FRAMEBUFFER,d.DEPTH_ATTACHMENT,d.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(d.renderbufferStorage(d.RENDERBUFFER,d.DEPTH_STENCIL,b.width,b.height),d.framebufferRenderbuffer(d.FRAMEBUFFER,d.DEPTH_STENCIL_ATTACHMENT,d.RENDERBUFFER,a)):d.renderbufferStorage(d.RENDERBUFFER,
d.RGBA4,b.width,b.height)}function U(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){if(a.depthBuffer===void 0)a.depthBuffer=!0;if(a.stencilBuffer===void 0)a.stencilBuffer=!0;a.__webglTexture=d.createTexture();if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];d.bindTexture(d.TEXTURE_CUBE_MAP,a.__webglTexture);K(d.TEXTURE_CUBE_MAP,a,a);for(var c=0;c<6;c++){a.__webglFramebuffer[c]=d.createFramebuffer();a.__webglRenderbuffer[c]=d.createRenderbuffer();d.texImage2D(d.TEXTURE_CUBE_MAP_POSITIVE_X+
c,0,ja(a.format),a.width,a.height,0,ja(a.format),ja(a.type),null);var e=a,f=d.TEXTURE_CUBE_MAP_POSITIVE_X+c;d.bindFramebuffer(d.FRAMEBUFFER,a.__webglFramebuffer[c]);d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,f,e.__webglTexture,0);I(a.__webglRenderbuffer[c],a)}}else a.__webglFramebuffer=d.createFramebuffer(),a.__webglRenderbuffer=d.createRenderbuffer(),d.bindTexture(d.TEXTURE_2D,a.__webglTexture),K(d.TEXTURE_2D,a,a),d.texImage2D(d.TEXTURE_2D,0,ja(a.format),a.width,a.height,0,ja(a.format),
ja(a.type),null),c=d.TEXTURE_2D,d.bindFramebuffer(d.FRAMEBUFFER,a.__webglFramebuffer),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,c,a.__webglTexture,0),d.bindRenderbuffer(d.RENDERBUFFER,a.__webglRenderbuffer),I(a.__webglRenderbuffer,a);b?d.bindTexture(d.TEXTURE_CUBE_MAP,null):d.bindTexture(d.TEXTURE_2D,null);d.bindRenderbuffer(d.RENDERBUFFER,null);d.bindFramebuffer(d.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,f=e=0):(b=null,
c=La,a=Ha,e=xa,f=Qa);b!==ia&&(d.bindFramebuffer(d.FRAMEBUFFER,b),d.viewport(e,f,c,a),ia=b)}function $(a){a instanceof THREE.WebGLRenderTargetCube?(d.bindTexture(d.TEXTURE_CUBE_MAP,a.__webglTexture),d.generateMipmap(d.TEXTURE_CUBE_MAP),d.bindTexture(d.TEXTURE_CUBE_MAP,null)):(d.bindTexture(d.TEXTURE_2D,a.__webglTexture),d.generateMipmap(d.TEXTURE_2D),d.bindTexture(d.TEXTURE_2D,null))}function la(a,b){var c;a==="fragment"?c=d.createShader(d.FRAGMENT_SHADER):a==="vertex"&&(c=d.createShader(d.VERTEX_SHADER));
d.shaderSource(c,b);d.compileShader(c);if(!d.getShaderParameter(c,d.COMPILE_STATUS))return console.error(d.getShaderInfoLog(c)),console.error(b),null;return c}function wa(a){switch(a){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return d.NEAREST;default:return d.LINEAR}}function ja(a){switch(a){case THREE.RepeatWrapping:return d.REPEAT;case THREE.ClampToEdgeWrapping:return d.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return d.MIRRORED_REPEAT;
case THREE.NearestFilter:return d.NEAREST;case THREE.NearestMipMapNearestFilter:return d.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return d.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return d.LINEAR;case THREE.LinearMipMapNearestFilter:return d.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return d.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return d.BYTE;case THREE.UnsignedByteType:return d.UNSIGNED_BYTE;case THREE.ShortType:return d.SHORT;case THREE.UnsignedShortType:return d.UNSIGNED_SHORT;
case THREE.IntType:return d.INT;case THREE.UnsignedShortType:return d.UNSIGNED_INT;case THREE.FloatType:return d.FLOAT;case THREE.AlphaFormat:return d.ALPHA;case THREE.RGBFormat:return d.RGB;case THREE.RGBAFormat:return d.RGBA;case THREE.LuminanceFormat:return d.LUMINANCE;case THREE.LuminanceAlphaFormat:return d.LUMINANCE_ALPHA}return 0}var M=this,d,Da=[],Pa=null,ia=null,ra=-1,W=null,pa=0,fa=null,sa=null,O=null,na=null,ta=null,Ea=null,Ia=null,Fa=null,za=null,xa=0,Qa=0,La=0,Ha=0,ua=[new THREE.Vector4,
new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],Aa=new THREE.Matrix4,Ma=new Float32Array(16),Na=new Float32Array(16),Ga=new THREE.Vector4,Sa={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]}},a=a||{},Ba=a.canvas!==void 0?a.canvas:document.createElement("canvas"),S=a.stencil!==void 0?a.stencil:!0,Xa=a.preserveDrawingBuffer!==void 0?a.preserveDrawingBuffer:!1,Ya=a.antialias!==void 0?a.antialias:
!1,va=a.clearColor!==void 0?new THREE.Color(a.clearColor):new THREE.Color(0),Ca=a.clearAlpha!==void 0?a.clearAlpha:0,Ra=a.maxLights!==void 0?a.maxLights:4;this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0}};this.maxMorphTargets=8;this.domElement=Ba;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapBias=
0.0039;this.shadowMapDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCameraNear=1;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowMap=[];this.shadowMapEnabled=!1;this.shadowMapSoft=this.shadowMapAutoUpdate=!0;var oa,Ka=[],a=THREE.ShaderLib.depthRGBA,Va=THREE.UniformsUtils.clone(a.uniforms),Oa=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:Va}),Ta=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,
uniforms:Va,morphTargets:!0});Oa._shadowPass=!0;Ta._shadowPass=!0;try{if(!(d=Ba.getContext("experimental-webgl",{antialias:Ya,stencil:S,preserveDrawingBuffer:Xa})))throw"Error creating WebGL context.";console.log(navigator.userAgent+" | "+d.getParameter(d.VERSION)+" | "+d.getParameter(d.VENDOR)+" | "+d.getParameter(d.RENDERER)+" | "+d.getParameter(d.SHADING_LANGUAGE_VERSION))}catch(Za){console.error(Za)}d.clearColor(0,0,0,1);d.clearDepth(1);d.clearStencil(0);d.enable(d.DEPTH_TEST);d.depthFunc(d.LEQUAL);
d.frontFace(d.CCW);d.cullFace(d.BACK);d.enable(d.CULL_FACE);d.enable(d.BLEND);d.blendEquation(d.FUNC_ADD);d.blendFunc(d.SRC_ALPHA,d.ONE_MINUS_SRC_ALPHA);d.clearColor(va.r,va.g,va.b,Ca);this.context=d;var Wa=d.getParameter(d.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0,z={};z.vertices=new Float32Array(16);z.faces=new Uint16Array(6);S=0;z.vertices[S++]=-1;z.vertices[S++]=-1;z.vertices[S++]=0;z.vertices[S++]=1;z.vertices[S++]=1;z.vertices[S++]=-1;z.vertices[S++]=1;z.vertices[S++]=1;z.vertices[S++]=1;z.vertices[S++]=
1;z.vertices[S++]=1;z.vertices[S++]=0;z.vertices[S++]=-1;z.vertices[S++]=1;z.vertices[S++]=0;S=z.vertices[S++]=0;z.faces[S++]=0;z.faces[S++]=1;z.faces[S++]=2;z.faces[S++]=0;z.faces[S++]=2;z.faces[S++]=3;z.vertexBuffer=d.createBuffer();z.elementBuffer=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,z.vertexBuffer);d.bufferData(d.ARRAY_BUFFER,z.vertices,d.STATIC_DRAW);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,z.elementBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,z.faces,d.STATIC_DRAW);z.program=d.createProgram();
d.attachShader(z.program,la("fragment",THREE.ShaderLib.sprite.fragmentShader));d.attachShader(z.program,la("vertex",THREE.ShaderLib.sprite.vertexShader));d.linkProgram(z.program);z.attributes={};z.uniforms={};z.attributes.position=d.getAttribLocation(z.program,"position");z.attributes.uv=d.getAttribLocation(z.program,"uv");z.uniforms.uvOffset=d.getUniformLocation(z.program,"uvOffset");z.uniforms.uvScale=d.getUniformLocation(z.program,"uvScale");z.uniforms.rotation=d.getUniformLocation(z.program,"rotation");
z.uniforms.scale=d.getUniformLocation(z.program,"scale");z.uniforms.alignment=d.getUniformLocation(z.program,"alignment");z.uniforms.color=d.getUniformLocation(z.program,"color");z.uniforms.map=d.getUniformLocation(z.program,"map");z.uniforms.opacity=d.getUniformLocation(z.program,"opacity");z.uniforms.useScreenCoordinates=d.getUniformLocation(z.program,"useScreenCoordinates");z.uniforms.affectedByDistance=d.getUniformLocation(z.program,"affectedByDistance");z.uniforms.screenPosition=d.getUniformLocation(z.program,
"screenPosition");z.uniforms.modelViewMatrix=d.getUniformLocation(z.program,"modelViewMatrix");z.uniforms.projectionMatrix=d.getUniformLocation(z.program,"projectionMatrix");var Ua=!1;this.setSize=function(a,b){Ba.width=a;Ba.height=b;this.setViewport(0,0,Ba.width,Ba.height)};this.setViewport=function(a,b,c,e){xa=a;Qa=b;La=c;Ha=e;d.viewport(xa,Qa,La,Ha)};this.setScissor=function(a,b,c,e){d.scissor(a,b,c,e)};this.enableScissorTest=function(a){a?d.enable(d.SCISSOR_TEST):d.disable(d.SCISSOR_TEST)};this.setClearColorHex=
function(a,b){va.setHex(a);Ca=b;d.clearColor(va.r,va.g,va.b,Ca)};this.setClearColor=function(a,b){va.copy(a);Ca=b;d.clearColor(va.r,va.g,va.b,Ca)};this.getClearColor=function(){return va};this.getClearAlpha=function(){return Ca};this.clear=function(a,b,c){var e=0;if(a===void 0||a)e|=d.COLOR_BUFFER_BIT;if(b===void 0||b)e|=d.DEPTH_BUFFER_BIT;if(c===void 0||c)e|=d.STENCIL_BUFFER_BIT;d.clear(e)};this.getContext=function(){return d};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=!1,
delete a._modelViewMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._objectMatrixArray,a instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups){var c=a.geometry.geometryGroups[b];d.deleteBuffer(c.__webglVertexBuffer);d.deleteBuffer(c.__webglNormalBuffer);d.deleteBuffer(c.__webglTangentBuffer);d.deleteBuffer(c.__webglColorBuffer);d.deleteBuffer(c.__webglUVBuffer);d.deleteBuffer(c.__webglUV2Buffer);d.deleteBuffer(c.__webglSkinVertexABuffer);d.deleteBuffer(c.__webglSkinVertexBBuffer);
d.deleteBuffer(c.__webglSkinIndicesBuffer);d.deleteBuffer(c.__webglSkinWeightsBuffer);d.deleteBuffer(c.__webglFaceBuffer);d.deleteBuffer(c.__webglLineBuffer);if(c.numMorphTargets)for(var e=0,f=c.numMorphTargets;e<f;e++)d.deleteBuffer(c.__webglMorphTargetsBuffers[e]);M.info.memory.geometries--}else if(a instanceof THREE.Ribbon)a=a.geometry,d.deleteBuffer(a.__webglVertexBuffer),d.deleteBuffer(a.__webglColorBuffer),M.info.memory.geometries--;else if(a instanceof THREE.Line)a=a.geometry,d.deleteBuffer(a.__webglVertexBuffer),
d.deleteBuffer(a.__webglColorBuffer),M.info.memory.geometries--;else if(a instanceof THREE.ParticleSystem)a=a.geometry,d.deleteBuffer(a.__webglVertexBuffer),d.deleteBuffer(a.__webglColorBuffer),M.info.memory.geometries--};this.deallocateTexture=function(a){if(a.__webglInit)a.__webglInit=!1,d.deleteTexture(a.__webglTexture),M.info.memory.textures--};this.initMaterial=function(a,b,c,e){var f,g,h,n;a instanceof THREE.MeshDepthMaterial?n="depth":a instanceof THREE.MeshNormalMaterial?n="normal":a instanceof
THREE.MeshBasicMaterial?n="basic":a instanceof THREE.MeshLambertMaterial?n="lambert":a instanceof THREE.MeshPhongMaterial?n="phong":a instanceof THREE.LineBasicMaterial?n="basic":a instanceof THREE.ParticleBasicMaterial&&(n="particle_basic");if(n){var i=THREE.ShaderLib[n];a.uniforms=THREE.UniformsUtils.clone(i.uniforms);a.vertexShader=i.vertexShader;a.fragmentShader=i.fragmentShader}var k,l,p;k=p=i=0;for(l=b.length;k<l;k++)h=b[k],h instanceof THREE.SpotLight&&p++,h instanceof THREE.DirectionalLight&&
p++,h instanceof THREE.PointLight&&i++;i+p<=Ra?k=p:(k=Math.ceil(Ra*p/(i+p)),i=Ra-k);h={directional:k,point:i};i=p=0;for(k=b.length;i<k;i++)l=b[i],l instanceof THREE.SpotLight&&l.castShadow&&p++;var m=50;if(e!==void 0&&e instanceof THREE.SkinnedMesh)m=e.bones.length;var v;a:{k=a.fragmentShader;l=a.vertexShader;var i=a.uniforms,b=a.attributes,c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,morphTargets:a.morphTargets,
maxMorphTargets:this.maxMorphTargets,maxDirLights:h.directional,maxPointLights:h.point,maxBones:m,shadowMapEnabled:this.shadowMapEnabled&&e.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapWidth:this.shadowMapWidth,shadowMapHeight:this.shadowMapHeight,maxShadows:p,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel},q,e=[];n?e.push(n):(e.push(k),e.push(l));for(q in c)e.push(q),e.push(c[q]);n=e.join();q=0;for(e=Da.length;q<e;q++)if(Da[q].code===n){v=Da[q].program;break a}q=d.createProgram();
e=[Wa?"#define VERTEX_TEXTURES":"",M.gammaInput?"#define GAMMA_INPUT":"",M.gammaOutput?"#define GAMMA_OUTPUT":"",M.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",
c.morphTargets?"#define USE_MORPHTARGETS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform mat4 cameraInverseMatrix;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
h=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",M.gammaInput?"#define GAMMA_INPUT":"",M.gammaOutput?"#define GAMMA_OUTPUT":"",M.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":
"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapSoft?"#define SHADOWMAP_WIDTH "+c.shadowMapWidth.toFixed(1):"",c.shadowMapSoft?"#define SHADOWMAP_HEIGHT "+c.shadowMapHeight.toFixed(1):"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");d.attachShader(q,la("fragment",h+k));d.attachShader(q,
la("vertex",e+l));d.linkProgram(q);d.getProgramParameter(q,d.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+d.getProgramParameter(q,d.VALIDATE_STATUS)+", gl error ["+d.getError()+"]");q.uniforms={};q.attributes={};var r,e=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","cameraInverseMatrix","boneGlobalMatrices","morphTargetInfluences"];for(r in i)e.push(r);r=e;e=0;for(i=r.length;e<i;e++)k=r[e],q.uniforms[k]=d.getUniformLocation(q,
k);e=["position","normal","uv","uv2","tangent","color","skinVertexA","skinVertexB","skinIndex","skinWeight"];for(r=0;r<c.maxMorphTargets;r++)e.push("morphTarget"+r);for(v in b)e.push(v);v=e;r=0;for(b=v.length;r<b;r++)c=v[r],q.attributes[c]=d.getAttribLocation(q,c);q.id=Da.length;Da.push({program:q,code:n});M.info.memory.programs=Da.length;v=q}a.program=v;v=a.program.attributes;v.position>=0&&d.enableVertexAttribArray(v.position);v.color>=0&&d.enableVertexAttribArray(v.color);v.normal>=0&&d.enableVertexAttribArray(v.normal);
v.tangent>=0&&d.enableVertexAttribArray(v.tangent);a.skinning&&v.skinVertexA>=0&&v.skinVertexB>=0&&v.skinIndex>=0&&v.skinWeight>=0&&(d.enableVertexAttribArray(v.skinVertexA),d.enableVertexAttribArray(v.skinVertexB),d.enableVertexAttribArray(v.skinIndex),d.enableVertexAttribArray(v.skinWeight));if(a.attributes)for(g in a.attributes)v[g]!==void 0&&v[g]>=0&&d.enableVertexAttribArray(v[g]);if(a.morphTargets)for(g=a.numSupportedMorphTargets=0;g<this.maxMorphTargets;g++)r="morphTarget"+g,v[r]>=0&&(d.enableVertexAttribArray(v[r]),
a.numSupportedMorphTargets++);a.uniformsList=[];for(f in a.uniforms)a.uniformsList.push([a.uniforms[f],f])};this.clearTarget=function(a,b,c,d){U(a);this.clear(b,c,d)};this.updateShadowMap=function(a,b){G(a,b)};this.render=function(a,b,c,e){var z,T,Ja,n,A,R,l,p=a.lights,Q=a.fog;ra=-1;this.autoUpdateObjects&&this.initWebGLObjects(a);this.shadowMapEnabled&&this.shadowMapAutoUpdate&&G(a,b);M.info.render.calls=0;M.info.render.vertices=0;M.info.render.faces=0;b.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),
a.add(b));this.autoUpdateScene&&a.updateMatrixWorld();b.matrixWorldInverse.getInverse(b.matrixWorld);b.matrixWorldInverse.flattenToArray(Na);b.projectionMatrix.flattenToArray(Ma);Aa.multiply(b.projectionMatrix,b.matrixWorldInverse);r(Aa);U(c);(this.autoClear||e)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);Ja=a.__webglObjects.length;for(e=0;e<Ja;e++)if(A=a.__webglObjects[e],R=A.object,R.visible)if(!(R instanceof THREE.Mesh)||!R.frustumCulled||u(R)){if(R.matrixWorld.flattenToArray(R._objectMatrixArray),
N(R,b,!0),B(A),A.render=!0,this.sortObjects)R.renderDepth?A.z=R.renderDepth:(Ga.copy(R.position),Aa.multiplyVector3(Ga),A.z=Ga.z)}else A.render=!1;else A.render=!1;this.sortObjects&&a.__webglObjects.sort(D);n=a.__webglObjectsImmediate.length;for(e=0;e<n;e++)A=a.__webglObjectsImmediate[e],R=A.object,R.visible&&(R.matrixAutoUpdate&&R.matrixWorld.flattenToArray(R._objectMatrixArray),N(R,b,!0),C(A));if(a.overrideMaterial){q(a.overrideMaterial.depthTest);F(a.overrideMaterial.blending);for(e=0;e<Ja;e++)if(A=
a.__webglObjects[e],A.render)R=A.object,l=A.buffer,i(R),f(b,p,Q,a.overrideMaterial,l,R);for(e=0;e<n;e++)A=a.__webglObjectsImmediate[e],R=A.object,R.visible&&(W=-1,i(R),z=g(b,p,Q,a.overrideMaterial,R),R.immediateRenderCallback?R.immediateRenderCallback(z,d,ua):R.render(function(b){h(b,z,a.overrideMaterial.shading)}))}else{F(THREE.NormalBlending);for(e=Ja-1;e>=0;e--)if(A=a.__webglObjects[e],A.render&&(R=A.object,l=A.buffer,T=A.opaque))i(R),q(T.depthTest),m(T.depthWrite),k(T.polygonOffset,T.polygonOffsetFactor,
T.polygonOffsetUnits),f(b,p,Q,T,l,R);for(e=0;e<n;e++)if(A=a.__webglObjectsImmediate[e],R=A.object,R.visible&&(W=-1,T=A.opaque))i(R),q(T.depthTest),m(T.depthWrite),k(T.polygonOffset,T.polygonOffsetFactor,T.polygonOffsetUnits),z=g(b,p,Q,T,R),R.immediateRenderCallback?R.immediateRenderCallback(z,d,ua):R.render(function(a){h(a,z,T.shading)});for(e=0;e<Ja;e++)if(A=a.__webglObjects[e],A.render&&(R=A.object,l=A.buffer,T=A.transparent))i(R),F(T.blending),q(T.depthTest),m(T.depthWrite),k(T.polygonOffset,T.polygonOffsetFactor,
T.polygonOffsetUnits),f(b,p,Q,T,l,R);for(e=0;e<n;e++)if(A=a.__webglObjectsImmediate[e],R=A.object,R.visible&&(W=-1,T=A.transparent))i(R),F(T.blending),q(T.depthTest),m(T.depthWrite),k(T.polygonOffset,T.polygonOffsetFactor,T.polygonOffsetUnits),z=g(b,p,Q,T,R),R.immediateRenderCallback?R.immediateRenderCallback(z,d,ua):R.render(function(a){h(a,z,T.shading)})}a.__webglSprites.length&&qa(a,b);c&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&$(c)};this.initWebGLObjects=function(a){if(!a.__webglObjects)a.__webglObjects=
[],a.__webglObjectsImmediate=[],a.__webglSprites=[];for(;a.__objectsAdded.length;){var f=a.__objectsAdded[0],g=a,h=void 0,i=void 0,k=void 0;if(!f.__webglInit)if(f.__webglInit=!0,f._modelViewMatrix=new THREE.Matrix4,f._normalMatrixArray=new Float32Array(9),f._modelViewMatrixArray=new Float32Array(16),f._objectMatrixArray=new Float32Array(16),f.matrixWorld.flattenToArray(f._objectMatrixArray),f instanceof THREE.Mesh){i=f.geometry;if(i.geometryGroups===void 0){var k=i,m=void 0,n=void 0,q=void 0,r=void 0,
l=void 0,p=void 0,z=void 0,v={},u=k.morphTargets.length;k.geometryGroups={};m=0;for(n=k.faces.length;m<n;m++)q=k.faces[m],r=q.materialIndex,p=r!==void 0?r:-1,v[p]===void 0&&(v[p]={hash:p,counter:0}),z=v[p].hash+"_"+v[p].counter,k.geometryGroups[z]===void 0&&(k.geometryGroups[z]={faces3:[],faces4:[],materialIndex:r,vertices:0,numMorphTargets:u}),l=q instanceof THREE.Face3?3:4,k.geometryGroups[z].vertices+l>65535&&(v[p].counter+=1,z=v[p].hash+"_"+v[p].counter,k.geometryGroups[z]===void 0&&(k.geometryGroups[z]=
{faces3:[],faces4:[],materialIndex:r,vertices:0,numMorphTargets:u})),q instanceof THREE.Face3?k.geometryGroups[z].faces3.push(m):k.geometryGroups[z].faces4.push(m),k.geometryGroups[z].vertices+=l;k.geometryGroupsList=[];m=void 0;for(m in k.geometryGroups)k.geometryGroups[m].id=pa++,k.geometryGroupsList.push(k.geometryGroups[m])}for(h in i.geometryGroups)if(k=i.geometryGroups[h],!k.__webglVertexBuffer){m=k;m.__webglVertexBuffer=d.createBuffer();m.__webglNormalBuffer=d.createBuffer();m.__webglTangentBuffer=
d.createBuffer();m.__webglColorBuffer=d.createBuffer();m.__webglUVBuffer=d.createBuffer();m.__webglUV2Buffer=d.createBuffer();m.__webglSkinVertexABuffer=d.createBuffer();m.__webglSkinVertexBBuffer=d.createBuffer();m.__webglSkinIndicesBuffer=d.createBuffer();m.__webglSkinWeightsBuffer=d.createBuffer();m.__webglFaceBuffer=d.createBuffer();m.__webglLineBuffer=d.createBuffer();if(m.numMorphTargets){q=n=void 0;m.__webglMorphTargetsBuffers=[];n=0;for(q=m.numMorphTargets;n<q;n++)m.__webglMorphTargetsBuffers.push(d.createBuffer())}M.info.memory.geometries++;
r=f;l=r.geometry;n=k.faces3;p=k.faces4;m=n.length*3+p.length*4;q=n.length*1+p.length*2;p=n.length*3+p.length*4;n=c(r,k);z=n.map||n.lightMap||n instanceof THREE.ShaderMaterial?!0:!1;v=n instanceof THREE.MeshBasicMaterial&&!n.envMap||n instanceof THREE.MeshDepthMaterial?!1:n&&n.shading!==void 0&&n.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading;u=n.vertexColors?n.vertexColors:!1;k.__vertexArray=new Float32Array(m*3);if(v)k.__normalArray=new Float32Array(m*3);if(l.hasTangents)k.__tangentArray=
new Float32Array(m*4);if(u)k.__colorArray=new Float32Array(m*3);if(z){if(l.faceUvs.length>0||l.faceVertexUvs.length>0)k.__uvArray=new Float32Array(m*2);if(l.faceUvs.length>1||l.faceVertexUvs.length>1)k.__uv2Array=new Float32Array(m*2)}if(r.geometry.skinWeights.length&&r.geometry.skinIndices.length)k.__skinVertexAArray=new Float32Array(m*4),k.__skinVertexBArray=new Float32Array(m*4),k.__skinIndexArray=new Float32Array(m*4),k.__skinWeightArray=new Float32Array(m*4);k.__faceArray=new Uint16Array(q*3);
k.__lineArray=new Uint16Array(p*2);if(k.numMorphTargets){k.__morphTargetsArrays=[];r=0;for(l=k.numMorphTargets;r<l;r++)k.__morphTargetsArrays.push(new Float32Array(m*3))}k.__needsSmoothNormals=v===THREE.SmoothShading;k.__uvType=z;k.__vertexColorType=u;k.__normalType=v;k.__webglFaceCount=q*3;k.__webglLineCount=p*2;if(n.attributes){if(k.__webglCustomAttributesList===void 0)k.__webglCustomAttributesList=[];q=void 0;for(q in n.attributes){var r=n.attributes[q],l={},C;for(C in r)l[C]=r[C];if(!l.__webglInitialized||
l.createUniqueBuffers)l.__webglInitialized=!0,p=1,l.type==="v2"?p=2:l.type==="v3"?p=3:l.type==="v4"?p=4:l.type==="c"&&(p=3),l.size=p,l.array=new Float32Array(m*p),l.buffer=d.createBuffer(),l.buffer.belongsToAttribute=q,r.needsUpdate=!0,l.__original=r;k.__webglCustomAttributesList.push(l)}}k.__inittedArrays=!0;i.__dirtyVertices=!0;i.__dirtyMorphTargets=!0;i.__dirtyElements=!0;i.__dirtyUvs=!0;i.__dirtyNormals=!0;i.__dirtyTangents=!0;i.__dirtyColors=!0}}else if(f instanceof THREE.Ribbon){if(i=f.geometry,
!i.__webglVertexBuffer)k=i,k.__webglVertexBuffer=d.createBuffer(),k.__webglColorBuffer=d.createBuffer(),M.info.memory.geometries++,k=i,m=k.vertices.length,k.__vertexArray=new Float32Array(m*3),k.__colorArray=new Float32Array(m*3),k.__webglVertexCount=m,i.__dirtyVertices=!0,i.__dirtyColors=!0}else if(f instanceof THREE.Line){if(i=f.geometry,!i.__webglVertexBuffer)k=i,k.__webglVertexBuffer=d.createBuffer(),k.__webglColorBuffer=d.createBuffer(),M.info.memory.geometries++,k=i,m=f,n=k.vertices.length,
k.__vertexArray=new Float32Array(n*3),k.__colorArray=new Float32Array(n*3),k.__webglLineCount=n,b(k,m),i.__dirtyVertices=!0,i.__dirtyColors=!0}else if(f instanceof THREE.ParticleSystem&&(i=f.geometry,!i.__webglVertexBuffer))k=i,k.__webglVertexBuffer=d.createBuffer(),k.__webglColorBuffer=d.createBuffer(),M.info.geometries++,k=i,m=f,n=k.vertices.length,k.__vertexArray=new Float32Array(n*3),k.__colorArray=new Float32Array(n*3),k.__sortArray=[],k.__webglParticleCount=n,b(k,m),i.__dirtyVertices=!0,i.__dirtyColors=
!0;if(!f.__webglActive){if(f instanceof THREE.Mesh)for(h in i=f.geometry,i.geometryGroups)k=i.geometryGroups[h],ca(g.__webglObjects,k,f);else f instanceof THREE.Ribbon||f instanceof THREE.Line||f instanceof THREE.ParticleSystem?(i=f.geometry,ca(g.__webglObjects,i,f)):THREE.MarchingCubes!==void 0&&f instanceof THREE.MarchingCubes||f.immediateRenderCallback?g.__webglObjectsImmediate.push({object:f,opaque:null,transparent:null}):f instanceof THREE.Sprite&&g.__webglSprites.push(f);f.__webglActive=!0}a.__objectsAdded.splice(0,
1)}for(;a.__objectsRemoved.length;){f=a.__objectsRemoved[0];g=a;if(f instanceof THREE.Mesh||f instanceof THREE.ParticleSystem||f instanceof THREE.Ribbon||f instanceof THREE.Line)Q(g.__webglObjects,f);else if(f instanceof THREE.Sprite){g=g.__webglSprites;h=f;for(i=g.length-1;i>=0;i--)g[i]===h&&g.splice(i,1)}else(f instanceof THREE.MarchingCubes||f.immediateRenderCallback)&&Q(g.__webglObjectsImmediate,f);f.__webglActive=!1;a.__objectsRemoved.splice(0,1)}f=0;for(g=a.__webglObjects.length;f<g;f++)if(C=
a.__webglObjects[f].object,h=C.geometry,i=q=n=void 0,C instanceof THREE.Mesh){k=0;for(m=h.geometryGroupsList.length;k<m;k++)if(n=h.geometryGroupsList[k],i=c(C,n),q=i.attributes&&ka(i),h.__dirtyVertices||h.__dirtyMorphTargets||h.__dirtyElements||h.__dirtyUvs||h.__dirtyNormals||h.__dirtyColors||h.__dirtyTangents||q)if(q=d.DYNAMIC_DRAW,r=!h.dynamic,n.__inittedArrays){var B=p=l=void 0,s=void 0,D=void 0,G=void 0,t=void 0,F=void 0,K=void 0,W=void 0,P=B=G=K=void 0,w=void 0,x=void 0,y=void 0,L=void 0,ba=
void 0,I=s=void 0,Y=s=K=void 0,Z=void 0,J=s=y=x=w=L=y=x=w=L=y=x=w=L=y=x=w=t=void 0,aa=void 0,N=G=void 0,V=B=void 0,ga=void 0,O=void 0,E=P=V=aa=0,U=0,da=J=B=0,S=t=ba=0,o=0,H=0,X=void 0,ga=n.__vertexArray,fa=n.__uvArray,o=n.__uv2Array,N=n.__normalArray,D=n.__tangentArray,I=n.__colorArray,Y=n.__skinVertexAArray,Z=n.__skinVertexBArray,F=n.__skinIndexArray,ha=n.__skinWeightArray,ia=n.__morphTargetsArrays,z=n.__webglCustomAttributesList,j=void 0,j=n.__faceArray,H=n.__lineArray,ja=n.__needsSmoothNormals,
K=n.__vertexColorType,W=n.__uvType,G=n.__normalType,$=C.geometry,X=$.__dirtyElements,oa=$.__dirtyUvs,qa=$.__dirtyNormals,ra=$.__dirtyTangents,sa=$.__dirtyColors,O=$.__dirtyMorphTargets,la=$.vertices,v=n.faces3,u=n.faces4,ea=$.faces,ua=$.faceVertexUvs[0],va=$.faceVertexUvs[1],na=$.skinVerticesA,ta=$.skinVerticesB,wa=$.skinIndices,xa=$.skinWeights,ya=$.morphTargets;if($.__dirtyVertices){l=0;for(p=v.length;l<p;l++)s=ea[v[l]],w=la[s.a].position,x=la[s.b].position,y=la[s.c].position,ga[V]=w.x,ga[V+1]=
w.y,ga[V+2]=w.z,ga[V+3]=x.x,ga[V+4]=x.y,ga[V+5]=x.z,ga[V+6]=y.x,ga[V+7]=y.y,ga[V+8]=y.z,V+=9;l=0;for(p=u.length;l<p;l++)s=ea[u[l]],w=la[s.a].position,x=la[s.b].position,y=la[s.c].position,L=la[s.d].position,ga[V]=w.x,ga[V+1]=w.y,ga[V+2]=w.z,ga[V+3]=x.x,ga[V+4]=x.y,ga[V+5]=x.z,ga[V+6]=y.x,ga[V+7]=y.y,ga[V+8]=y.z,ga[V+9]=L.x,ga[V+10]=L.y,ga[V+11]=L.z,V+=12;d.bindBuffer(d.ARRAY_BUFFER,n.__webglVertexBuffer);d.bufferData(d.ARRAY_BUFFER,ga,q)}if(O){l=0;for(p=v.length;l<p;l++){s=ea[v[l]];V=0;for(ga=ya.length;V<
ga;V++)w=ya[V].vertices[s.a].position,x=ya[V].vertices[s.b].position,y=ya[V].vertices[s.c].position,O=ia[V],O[S]=w.x,O[S+1]=w.y,O[S+2]=w.z,O[S+3]=x.x,O[S+4]=x.y,O[S+5]=x.z,O[S+6]=y.x,O[S+7]=y.y,O[S+8]=y.z;S+=9}l=0;for(p=u.length;l<p;l++){s=ea[u[l]];V=0;for(ga=ya.length;V<ga;V++)w=ya[V].vertices[s.a].position,x=ya[V].vertices[s.b].position,y=ya[V].vertices[s.c].position,L=ya[V].vertices[s.d].position,O=ia[V],O[S]=w.x,O[S+1]=w.y,O[S+2]=w.z,O[S+3]=x.x,O[S+4]=x.y,O[S+5]=x.z,O[S+6]=y.x,O[S+7]=y.y,O[S+
8]=y.z,O[S+9]=L.x,O[S+10]=L.y,O[S+11]=L.z;S+=12}V=0;for(ga=ya.length;V<ga;V++)d.bindBuffer(d.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[V]),d.bufferData(d.ARRAY_BUFFER,ia[V],q)}if(xa.length){l=0;for(p=v.length;l<p;l++)s=ea[v[l]],w=xa[s.a],x=xa[s.b],y=xa[s.c],ha[t]=w.x,ha[t+1]=w.y,ha[t+2]=w.z,ha[t+3]=w.w,ha[t+4]=x.x,ha[t+5]=x.y,ha[t+6]=x.z,ha[t+7]=x.w,ha[t+8]=y.x,ha[t+9]=y.y,ha[t+10]=y.z,ha[t+11]=y.w,w=wa[s.a],x=wa[s.b],y=wa[s.c],F[t]=w.x,F[t+1]=w.y,F[t+2]=w.z,F[t+3]=w.w,F[t+4]=x.x,F[t+5]=x.y,F[t+6]=
x.z,F[t+7]=x.w,F[t+8]=y.x,F[t+9]=y.y,F[t+10]=y.z,F[t+11]=y.w,w=na[s.a],x=na[s.b],y=na[s.c],Y[t]=w.x,Y[t+1]=w.y,Y[t+2]=w.z,Y[t+3]=1,Y[t+4]=x.x,Y[t+5]=x.y,Y[t+6]=x.z,Y[t+7]=1,Y[t+8]=y.x,Y[t+9]=y.y,Y[t+10]=y.z,Y[t+11]=1,w=ta[s.a],x=ta[s.b],y=ta[s.c],Z[t]=w.x,Z[t+1]=w.y,Z[t+2]=w.z,Z[t+3]=1,Z[t+4]=x.x,Z[t+5]=x.y,Z[t+6]=x.z,Z[t+7]=1,Z[t+8]=y.x,Z[t+9]=y.y,Z[t+10]=y.z,Z[t+11]=1,t+=12;l=0;for(p=u.length;l<p;l++)s=ea[u[l]],w=xa[s.a],x=xa[s.b],y=xa[s.c],L=xa[s.d],ha[t]=w.x,ha[t+1]=w.y,ha[t+2]=w.z,ha[t+3]=w.w,
ha[t+4]=x.x,ha[t+5]=x.y,ha[t+6]=x.z,ha[t+7]=x.w,ha[t+8]=y.x,ha[t+9]=y.y,ha[t+10]=y.z,ha[t+11]=y.w,ha[t+12]=L.x,ha[t+13]=L.y,ha[t+14]=L.z,ha[t+15]=L.w,w=wa[s.a],x=wa[s.b],y=wa[s.c],L=wa[s.d],F[t]=w.x,F[t+1]=w.y,F[t+2]=w.z,F[t+3]=w.w,F[t+4]=x.x,F[t+5]=x.y,F[t+6]=x.z,F[t+7]=x.w,F[t+8]=y.x,F[t+9]=y.y,F[t+10]=y.z,F[t+11]=y.w,F[t+12]=L.x,F[t+13]=L.y,F[t+14]=L.z,F[t+15]=L.w,w=na[s.a],x=na[s.b],y=na[s.c],L=na[s.d],Y[t]=w.x,Y[t+1]=w.y,Y[t+2]=w.z,Y[t+3]=1,Y[t+4]=x.x,Y[t+5]=x.y,Y[t+6]=x.z,Y[t+7]=1,Y[t+8]=y.x,
Y[t+9]=y.y,Y[t+10]=y.z,Y[t+11]=1,Y[t+12]=L.x,Y[t+13]=L.y,Y[t+14]=L.z,Y[t+15]=1,w=ta[s.a],x=ta[s.b],y=ta[s.c],s=ta[s.d],Z[t]=w.x,Z[t+1]=w.y,Z[t+2]=w.z,Z[t+3]=1,Z[t+4]=x.x,Z[t+5]=x.y,Z[t+6]=x.z,Z[t+7]=1,Z[t+8]=y.x,Z[t+9]=y.y,Z[t+10]=y.z,Z[t+11]=1,Z[t+12]=s.x,Z[t+13]=s.y,Z[t+14]=s.z,Z[t+15]=1,t+=16;t>0&&(d.bindBuffer(d.ARRAY_BUFFER,n.__webglSkinVertexABuffer),d.bufferData(d.ARRAY_BUFFER,Y,q),d.bindBuffer(d.ARRAY_BUFFER,n.__webglSkinVertexBBuffer),d.bufferData(d.ARRAY_BUFFER,Z,q),d.bindBuffer(d.ARRAY_BUFFER,
n.__webglSkinIndicesBuffer),d.bufferData(d.ARRAY_BUFFER,F,q),d.bindBuffer(d.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),d.bufferData(d.ARRAY_BUFFER,ha,q))}if(sa&&K){l=0;for(p=v.length;l<p;l++)s=ea[v[l]],t=s.vertexColors,F=s.color,t.length===3&&K===THREE.VertexColors?(s=t[0],Y=t[1],Z=t[2]):Z=Y=s=F,I[ba]=s.r,I[ba+1]=s.g,I[ba+2]=s.b,I[ba+3]=Y.r,I[ba+4]=Y.g,I[ba+5]=Y.b,I[ba+6]=Z.r,I[ba+7]=Z.g,I[ba+8]=Z.b,ba+=9;l=0;for(p=u.length;l<p;l++)s=ea[u[l]],t=s.vertexColors,F=s.color,t.length===4&&K===THREE.VertexColors?
(s=t[0],Y=t[1],Z=t[2],t=t[3]):t=Z=Y=s=F,I[ba]=s.r,I[ba+1]=s.g,I[ba+2]=s.b,I[ba+3]=Y.r,I[ba+4]=Y.g,I[ba+5]=Y.b,I[ba+6]=Z.r,I[ba+7]=Z.g,I[ba+8]=Z.b,I[ba+9]=t.r,I[ba+10]=t.g,I[ba+11]=t.b,ba+=12;ba>0&&(d.bindBuffer(d.ARRAY_BUFFER,n.__webglColorBuffer),d.bufferData(d.ARRAY_BUFFER,I,q))}if(ra&&$.hasTangents){l=0;for(p=v.length;l<p;l++)s=ea[v[l]],K=s.vertexTangents,ba=K[0],s=K[1],I=K[2],D[J]=ba.x,D[J+1]=ba.y,D[J+2]=ba.z,D[J+3]=ba.w,D[J+4]=s.x,D[J+5]=s.y,D[J+6]=s.z,D[J+7]=s.w,D[J+8]=I.x,D[J+9]=I.y,D[J+10]=
I.z,D[J+11]=I.w,J+=12;l=0;for(p=u.length;l<p;l++)s=ea[u[l]],K=s.vertexTangents,ba=K[0],s=K[1],I=K[2],K=K[3],D[J]=ba.x,D[J+1]=ba.y,D[J+2]=ba.z,D[J+3]=ba.w,D[J+4]=s.x,D[J+5]=s.y,D[J+6]=s.z,D[J+7]=s.w,D[J+8]=I.x,D[J+9]=I.y,D[J+10]=I.z,D[J+11]=I.w,D[J+12]=K.x,D[J+13]=K.y,D[J+14]=K.z,D[J+15]=K.w,J+=16;d.bindBuffer(d.ARRAY_BUFFER,n.__webglTangentBuffer);d.bufferData(d.ARRAY_BUFFER,D,q)}if(qa&&G){l=0;for(p=v.length;l<p;l++)if(s=ea[v[l]],D=s.vertexNormals,G=s.normal,D.length===3&&ja)for(J=0;J<3;J++)G=D[J],
N[B]=G.x,N[B+1]=G.y,N[B+2]=G.z,B+=3;else for(J=0;J<3;J++)N[B]=G.x,N[B+1]=G.y,N[B+2]=G.z,B+=3;l=0;for(p=u.length;l<p;l++)if(s=ea[u[l]],D=s.vertexNormals,G=s.normal,D.length===4&&ja)for(J=0;J<4;J++)G=D[J],N[B]=G.x,N[B+1]=G.y,N[B+2]=G.z,B+=3;else for(J=0;J<4;J++)N[B]=G.x,N[B+1]=G.y,N[B+2]=G.z,B+=3;d.bindBuffer(d.ARRAY_BUFFER,n.__webglNormalBuffer);d.bufferData(d.ARRAY_BUFFER,N,q)}if(oa&&ua&&W){l=0;for(p=v.length;l<p;l++)if(B=v[l],B=ua[B],B!==void 0)for(J=0;J<3;J++)N=B[J],fa[P]=N.u,fa[P+1]=N.v,P+=2;l=
0;for(p=u.length;l<p;l++)if(B=u[l],B=ua[B],B!==void 0)for(J=0;J<4;J++)N=B[J],fa[P]=N.u,fa[P+1]=N.v,P+=2;P>0&&(d.bindBuffer(d.ARRAY_BUFFER,n.__webglUVBuffer),d.bufferData(d.ARRAY_BUFFER,fa,q))}if(oa&&va&&W){l=0;for(p=v.length;l<p;l++)if(B=v[l],P=va[B],P!==void 0)for(J=0;J<3;J++)B=P[J],o[E]=B.u,o[E+1]=B.v,E+=2;l=0;for(p=u.length;l<p;l++)if(B=u[l],P=va[B],P!==void 0)for(J=0;J<4;J++)B=P[J],o[E]=B.u,o[E+1]=B.v,E+=2;E>0&&(d.bindBuffer(d.ARRAY_BUFFER,n.__webglUV2Buffer),d.bufferData(d.ARRAY_BUFFER,o,q))}if(X){l=
0;for(p=v.length;l<p;l++)j[U]=aa,j[U+1]=aa+1,j[U+2]=aa+2,U+=3,H[da]=aa,H[da+1]=aa+1,H[da+2]=aa,H[da+3]=aa+2,H[da+4]=aa+1,H[da+5]=aa+2,da+=6,aa+=3;l=0;for(p=u.length;l<p;l++)j[U]=aa,j[U+1]=aa+1,j[U+2]=aa+3,j[U+3]=aa+1,j[U+4]=aa+2,j[U+5]=aa+3,U+=6,H[da]=aa,H[da+1]=aa+1,H[da+2]=aa,H[da+3]=aa+3,H[da+4]=aa+1,H[da+5]=aa+2,H[da+6]=aa+2,H[da+7]=aa+3,da+=8,aa+=4;d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,j,q);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer);
d.bufferData(d.ELEMENT_ARRAY_BUFFER,H,q)}if(z){J=0;for(aa=z.length;J<aa;J++)if(j=z[J],j.__original.needsUpdate){H=o=0;if(j.size===1)if(j.boundTo===void 0||j.boundTo==="vertices"){l=0;for(p=v.length;l<p;l++)s=ea[v[l]],j.array[o]=j.value[s.a],j.array[o+1]=j.value[s.b],j.array[o+2]=j.value[s.c],o+=3;l=0;for(p=u.length;l<p;l++)s=ea[u[l]],j.array[o]=j.value[s.a],j.array[o+1]=j.value[s.b],j.array[o+2]=j.value[s.c],j.array[o+3]=j.value[s.d],o+=4}else if(j.boundTo==="faces"){l=0;for(p=v.length;l<p;l++)X=
j.value[H],j.array[o]=X,j.array[o+1]=X,j.array[o+2]=X,o+=3,H+=1;l=0;for(p=u.length;l<p;l++)X=j.value[H],j.array[o]=X,j.array[o+1]=X,j.array[o+2]=X,j.array[o+3]=X,o+=4,H+=1}else{if(j.boundTo==="faceVertices"){l=0;for(p=v.length;l<p;l++)j.array[o]=j.value[H],j.array[o+1]=j.value[H+1],j.array[o+2]=j.value[H+2],o+=3,H+=3;l=0;for(p=u.length;l<p;l++)j.array[o]=j.value[H],j.array[o+1]=j.value[H+1],j.array[o+2]=j.value[H+2],j.array[o+3]=j.value[H+3],o+=4,H+=4}}else if(j.size===2)if(j.boundTo===void 0||j.boundTo===
"vertices"){l=0;for(p=v.length;l<p;l++)s=ea[v[l]],w=j.value[s.a],x=j.value[s.b],y=j.value[s.c],j.array[o]=w.x,j.array[o+1]=w.y,j.array[o+2]=x.x,j.array[o+3]=x.y,j.array[o+4]=y.x,j.array[o+5]=y.y,o+=6;l=0;for(p=u.length;l<p;l++)s=ea[u[l]],w=j.value[s.a],x=j.value[s.b],y=j.value[s.c],L=j.value[s.d],j.array[o]=w.x,j.array[o+1]=w.y,j.array[o+2]=x.x,j.array[o+3]=x.y,j.array[o+4]=y.x,j.array[o+5]=y.y,j.array[o+6]=L.x,j.array[o+7]=L.y,o+=8}else if(j.boundTo==="faces"){l=0;for(p=v.length;l<p;l++)y=x=w=X=
j.value[H],j.array[o]=w.x,j.array[o+1]=w.y,j.array[o+2]=x.x,j.array[o+3]=x.y,j.array[o+4]=y.x,j.array[o+5]=y.y,o+=6,H+=1;l=0;for(p=u.length;l<p;l++)L=y=x=w=X=j.value[H],j.array[o]=w.x,j.array[o+1]=w.y,j.array[o+2]=x.x,j.array[o+3]=x.y,j.array[o+4]=y.x,j.array[o+5]=y.y,j.array[o+6]=L.x,j.array[o+7]=L.y,o+=8,H+=1}else{if(j.boundTo==="faceVertices"){l=0;for(p=v.length;l<p;l++)w=j.value[H],x=j.value[H+1],y=j.value[H+2],j.array[o]=w.x,j.array[o+1]=w.y,j.array[o+2]=x.x,j.array[o+3]=x.y,j.array[o+4]=y.x,
j.array[o+5]=y.y,o+=6,H+=3;l=0;for(p=u.length;l<p;l++)w=j.value[H],x=j.value[H+1],y=j.value[H+2],L=j.value[H+3],j.array[o]=w.x,j.array[o+1]=w.y,j.array[o+2]=x.x,j.array[o+3]=x.y,j.array[o+4]=y.x,j.array[o+5]=y.y,j.array[o+6]=L.x,j.array[o+7]=L.y,o+=8,H+=4}}else if(j.size===3)if(E=j.type==="c"?["r","g","b"]:["x","y","z"],j.boundTo===void 0||j.boundTo==="vertices"){l=0;for(p=v.length;l<p;l++)s=ea[v[l]],w=j.value[s.a],x=j.value[s.b],y=j.value[s.c],j.array[o]=w[E[0]],j.array[o+1]=w[E[1]],j.array[o+2]=
w[E[2]],j.array[o+3]=x[E[0]],j.array[o+4]=x[E[1]],j.array[o+5]=x[E[2]],j.array[o+6]=y[E[0]],j.array[o+7]=y[E[1]],j.array[o+8]=y[E[2]],o+=9;l=0;for(p=u.length;l<p;l++)s=ea[u[l]],w=j.value[s.a],x=j.value[s.b],y=j.value[s.c],L=j.value[s.d],j.array[o]=w[E[0]],j.array[o+1]=w[E[1]],j.array[o+2]=w[E[2]],j.array[o+3]=x[E[0]],j.array[o+4]=x[E[1]],j.array[o+5]=x[E[2]],j.array[o+6]=y[E[0]],j.array[o+7]=y[E[1]],j.array[o+8]=y[E[2]],j.array[o+9]=L[E[0]],j.array[o+10]=L[E[1]],j.array[o+11]=L[E[2]],o+=12,H+=1}else if(j.boundTo===
"faces"){l=0;for(p=v.length;l<p;l++)y=x=w=X=j.value[H],j.array[o]=w[E[0]],j.array[o+1]=w[E[1]],j.array[o+2]=w[E[2]],j.array[o+3]=x[E[0]],j.array[o+4]=x[E[1]],j.array[o+5]=x[E[2]],j.array[o+6]=y[E[0]],j.array[o+7]=y[E[1]],j.array[o+8]=y[E[2]],o+=9,H+=1;l=0;for(p=u.length;l<p;l++)L=y=x=w=X=j.value[H],j.array[o]=w[E[0]],j.array[o+1]=w[E[1]],j.array[o+2]=w[E[2]],j.array[o+3]=x[E[0]],j.array[o+4]=x[E[1]],j.array[o+5]=x[E[2]],j.array[o+6]=y[E[0]],j.array[o+7]=y[E[1]],j.array[o+8]=y[E[2]],j.array[o+9]=L[E[0]],
j.array[o+10]=L[E[1]],j.array[o+11]=L[E[2]],o+=12,H+=1}else{if(j.boundTo==="faceVertices"){l=0;for(p=v.length;l<p;l++)w=j.value[H],x=j.value[H+1],y=j.value[H+2],j.array[o]=w[E[0]],j.array[o+1]=w[E[1]],j.array[o+2]=w[E[2]],j.array[o+3]=x[E[0]],j.array[o+4]=x[E[1]],j.array[o+5]=x[E[2]],j.array[o+6]=y[E[0]],j.array[o+7]=y[E[1]],j.array[o+8]=y[E[2]],o+=9,H+=3;l=0;for(p=u.length;l<p;l++)w=j.value[H],x=j.value[H+1],y=j.value[H+2],L=j.value[H+3],j.array[o]=w[E[0]],j.array[o+1]=w[E[1]],j.array[o+2]=w[E[2]],
j.array[o+3]=x[E[0]],j.array[o+4]=x[E[1]],j.array[o+5]=x[E[2]],j.array[o+6]=y[E[0]],j.array[o+7]=y[E[1]],j.array[o+8]=y[E[2]],j.array[o+9]=L[E[0]],j.array[o+10]=L[E[1]],j.array[o+11]=L[E[2]],o+=12,H+=4}}else if(j.size===4)if(j.boundTo===void 0||j.boundTo==="vertices"){l=0;for(p=v.length;l<p;l++)s=ea[v[l]],w=j.value[s.a],x=j.value[s.b],y=j.value[s.c],j.array[o]=w.x,j.array[o+1]=w.y,j.array[o+2]=w.z,j.array[o+3]=w.w,j.array[o+4]=x.x,j.array[o+5]=x.y,j.array[o+6]=x.z,j.array[o+7]=x.w,j.array[o+8]=y.x,
j.array[o+9]=y.y,j.array[o+10]=y.z,j.array[o+11]=y.w,o+=12;l=0;for(p=u.length;l<p;l++)s=ea[u[l]],w=j.value[s.a],x=j.value[s.b],y=j.value[s.c],L=j.value[s.d],j.array[o]=w.x,j.array[o+1]=w.y,j.array[o+2]=w.z,j.array[o+3]=w.w,j.array[o+4]=x.x,j.array[o+5]=x.y,j.array[o+6]=x.z,j.array[o+7]=x.w,j.array[o+8]=y.x,j.array[o+9]=y.y,j.array[o+10]=y.z,j.array[o+11]=y.w,j.array[o+12]=L.x,j.array[o+13]=L.y,j.array[o+14]=L.z,j.array[o+15]=L.w,o+=16}else if(j.boundTo==="faces"){l=0;for(p=v.length;l<p;l++)y=x=w=
X=j.value[H],j.array[o]=w.x,j.array[o+1]=w.y,j.array[o+2]=w.z,j.array[o+3]=w.w,j.array[o+4]=x.x,j.array[o+5]=x.y,j.array[o+6]=x.z,j.array[o+7]=x.w,j.array[o+8]=y.x,j.array[o+9]=y.y,j.array[o+10]=y.z,j.array[o+11]=y.w,o+=12,H+=1;l=0;for(p=u.length;l<p;l++)L=y=x=w=X=j.value[H],j.array[o]=w.x,j.array[o+1]=w.y,j.array[o+2]=w.z,j.array[o+3]=w.w,j.array[o+4]=x.x,j.array[o+5]=x.y,j.array[o+6]=x.z,j.array[o+7]=x.w,j.array[o+8]=y.x,j.array[o+9]=y.y,j.array[o+10]=y.z,j.array[o+11]=y.w,j.array[o+12]=L.x,j.array[o+
13]=L.y,j.array[o+14]=L.z,j.array[o+15]=L.w,o+=16,H+=1}else if(j.boundTo==="faceVertices"){l=0;for(p=v.length;l<p;l++)w=j.value[H],x=j.value[H+1],y=j.value[H+2],j.array[o]=w.x,j.array[o+1]=w.y,j.array[o+2]=w.z,j.array[o+3]=w.w,j.array[o+4]=x.x,j.array[o+5]=x.y,j.array[o+6]=x.z,j.array[o+7]=x.w,j.array[o+8]=y.x,j.array[o+9]=y.y,j.array[o+10]=y.z,j.array[o+11]=y.w,o+=12,H+=3;l=0;for(p=u.length;l<p;l++)w=j.value[H],x=j.value[H+1],y=j.value[H+2],L=j.value[H+3],j.array[o]=w.x,j.array[o+1]=w.y,j.array[o+
2]=w.z,j.array[o+3]=w.w,j.array[o+4]=x.x,j.array[o+5]=x.y,j.array[o+6]=x.z,j.array[o+7]=x.w,j.array[o+8]=y.x,j.array[o+9]=y.y,j.array[o+10]=y.z,j.array[o+11]=y.w,j.array[o+12]=L.x,j.array[o+13]=L.y,j.array[o+14]=L.z,j.array[o+15]=L.w,o+=16,H+=4}d.bindBuffer(d.ARRAY_BUFFER,j.buffer);d.bufferData(d.ARRAY_BUFFER,j.array,q)}}r&&(delete n.__inittedArrays,delete n.__colorArray,delete n.__normalArray,delete n.__tangentArray,delete n.__uvArray,delete n.__uv2Array,delete n.__faceArray,delete n.__vertexArray,
delete n.__lineArray,delete n.__skinVertexAArray,delete n.__skinVertexBArray,delete n.__skinIndexArray,delete n.__skinWeightArray)}h.__dirtyVertices=!1;h.__dirtyMorphTargets=!1;h.__dirtyElements=!1;h.__dirtyUvs=!1;h.__dirtyNormals=!1;h.__dirtyColors=!1;h.__dirtyTangents=!1;i.attributes&&ma(i)}else if(C instanceof THREE.Ribbon){if(h.__dirtyVertices||h.__dirtyColors){i=h;C=d.DYNAMIC_DRAW;l=k=l=r=r=void 0;p=i.vertices;m=i.colors;z=p.length;n=m.length;v=i.__vertexArray;q=i.__colorArray;u=i.__dirtyColors;
if(i.__dirtyVertices){for(r=0;r<z;r++)l=p[r].position,k=r*3,v[k]=l.x,v[k+1]=l.y,v[k+2]=l.z;d.bindBuffer(d.ARRAY_BUFFER,i.__webglVertexBuffer);d.bufferData(d.ARRAY_BUFFER,v,C)}if(u){for(r=0;r<n;r++)l=m[r],k=r*3,q[k]=l.r,q[k+1]=l.g,q[k+2]=l.b;d.bindBuffer(d.ARRAY_BUFFER,i.__webglColorBuffer);d.bufferData(d.ARRAY_BUFFER,q,C)}}h.__dirtyVertices=!1;h.__dirtyColors=!1}else if(C instanceof THREE.Line){i=c(C,n);q=i.attributes&&ka(i);if(h.__dirtyVertices||h.__dirtyColors||q){C=h;k=d.DYNAMIC_DRAW;z=m=aa=p=
ea=void 0;p=C.vertices;n=C.colors;z=p.length;q=n.length;v=C.__vertexArray;r=C.__colorArray;u=C.__dirtyColors;l=C.__webglCustomAttributesList;P=da=U=E=aa=ea=void 0;if(C.__dirtyVertices){for(ea=0;ea<z;ea++)aa=p[ea].position,m=ea*3,v[m]=aa.x,v[m+1]=aa.y,v[m+2]=aa.z;d.bindBuffer(d.ARRAY_BUFFER,C.__webglVertexBuffer);d.bufferData(d.ARRAY_BUFFER,v,k)}if(u){for(p=0;p<q;p++)z=n[p],m=p*3,r[m]=z.r,r[m+1]=z.g,r[m+2]=z.b;d.bindBuffer(d.ARRAY_BUFFER,C.__webglColorBuffer);d.bufferData(d.ARRAY_BUFFER,r,k)}if(l){ea=
0;for(aa=l.length;ea<aa;ea++)if(P=l[ea],P.needsUpdate&&(P.boundTo===void 0||P.boundTo==="vertices")){m=0;U=P.value.length;if(P.size===1)for(E=0;E<U;E++)P.array[E]=P.value[E];else if(P.size===2)for(E=0;E<U;E++)da=P.value[E],P.array[m]=da.x,P.array[m+1]=da.y,m+=2;else if(P.size===3)if(P.type==="c")for(E=0;E<U;E++)da=P.value[E],P.array[m]=da.r,P.array[m+1]=da.g,P.array[m+2]=da.b,m+=3;else for(E=0;E<U;E++)da=P.value[E],P.array[m]=da.x,P.array[m+1]=da.y,P.array[m+2]=da.z,m+=3;else if(P.size===4)for(E=
0;E<U;E++)da=P.value[E],P.array[m]=da.x,P.array[m+1]=da.y,P.array[m+2]=da.z,P.array[m+3]=da.w,m+=4;d.bindBuffer(d.ARRAY_BUFFER,P.buffer);d.bufferData(d.ARRAY_BUFFER,P.array,k)}}}h.__dirtyVertices=!1;h.__dirtyColors=!1;i.attributes&&ma(i)}else if(C instanceof THREE.ParticleSystem)i=c(C,n),q=i.attributes&&ka(i),(h.__dirtyVertices||h.__dirtyColors||C.sortParticles||q)&&e(h,d.DYNAMIC_DRAW,C),h.__dirtyVertices=!1,h.__dirtyColors=!1,i.attributes&&ma(i)};this.setFaceCulling=function(a,b){a?(!b||b==="ccw"?
d.frontFace(d.CCW):d.frontFace(d.CW),a==="back"?d.cullFace(d.BACK):a==="front"?d.cullFace(d.FRONT):d.cullFace(d.FRONT_AND_BACK),d.enable(d.CULL_FACE)):d.disable(d.CULL_FACE)};this.supportsVertexTextures=function(){return Wa}};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=c.wrapS!==void 0?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=c.wrapT!==void 0?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=c.magFilter!==void 0?c.magFilter:THREE.LinearFilter;this.minFilter=c.minFilter!==void 0?c.minFilter:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=c.format!==void 0?c.format:THREE.RGBAFormat;this.type=c.type!==void 0?c.type:
THREE.UnsignedByteType;this.depthBuffer=c.depthBuffer!==void 0?c.depthBuffer:!0;this.stencilBuffer=c.stencilBuffer!==void 0?c.stencilBuffer:!0};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;return a};THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};
THREE.WebGLRenderTargetCube.prototype=new THREE.WebGLRenderTarget;THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;
