// ThreeWebGL.js r47dev - http://github.com/mrdoob/three.js
var THREE=THREE||{};if(!self.Int32Array)self.Int32Array=Array,self.Float32Array=Array;THREE.Color=function(a){a!==void 0&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},setRGB:function(a,b,d){this.r=a;this.g=b;this.b=d;return this},setHSV:function(a,b,d){var c,f,g;if(d===0)this.r=this.g=this.b=0;else switch(c=Math.floor(a*6),f=a*6-c,a=d*(1-b),g=d*(1-
b*f),b=d*(1-b*(1-f)),c){case 1:this.r=g;this.g=d;this.b=a;break;case 2:this.r=a;this.g=d;this.b=b;break;case 3:this.r=a;this.g=g;this.b=d;break;case 4:this.r=b;this.g=a;this.b=d;break;case 5:this.r=d;this.g=a;this.b=g;break;case 6:case 0:this.r=d,this.g=b,this.b=a}return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},getHex:function(){return~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},getContextStyle:function(){return"rgb("+
Math.floor(this.r*255)+","+Math.floor(this.g*255)+","+Math.floor(this.b*255)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]};
THREE.Frustum.prototype.setFromMatrix=function(a){var b,d=this.planes;d[0].set(a.n41-a.n11,a.n42-a.n12,a.n43-a.n13,a.n44-a.n14);d[1].set(a.n41+a.n11,a.n42+a.n12,a.n43+a.n13,a.n44+a.n14);d[2].set(a.n41+a.n21,a.n42+a.n22,a.n43+a.n23,a.n44+a.n24);d[3].set(a.n41-a.n21,a.n42-a.n22,a.n43-a.n23,a.n44-a.n24);d[4].set(a.n41-a.n31,a.n42-a.n32,a.n43-a.n33,a.n44-a.n34);d[5].set(a.n41+a.n31,a.n42+a.n32,a.n43+a.n33,a.n44+a.n34);for(a=0;a<6;a++)b=d[a],b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))};
THREE.Frustum.prototype.contains=function(a){for(var b=this.planes,d=a.matrixWorld,c=-a.geometry.boundingSphere.radius*Math.max(a.scale.x,Math.max(a.scale.y,a.scale.z)),f=0;f<6;f++)if(a=b[f].x*d.n14+b[f].y*d.n24+b[f].z*d.n34+b[f].w,a<=c)return!1;return!0};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},
divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},
equals:function(a){return a.x===this.x&&a.y===this.y}};THREE.Vector3=function(a,b,d){this.x=a||0;this.y=b||0;this.z=d||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,d){this.x=a;this.y=b;this.z=d;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},
addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},
divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):this.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return this.x+this.y+this.z},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,d=this.y,c=this.z;this.x=d*a.z-c*a.y;this.y=c*a.x-b*a.z;this.z=b*a.y-d*a.x;return this},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,a).lengthSq()},setPositionFromMatrix:function(a){this.x=a.n14;this.y=a.n24;this.z=a.n34},setRotationFromMatrix:function(a){var b=Math.cos(this.y);
this.y=Math.asin(a.n13);Math.abs(b)>1.0E-5?(this.x=Math.atan2(-a.n23/b,a.n33/b),this.z=Math.atan2(-a.n12/b,a.n11/b)):(this.x=0,this.z=Math.atan2(a.n21,a.n22))},isZero:function(){return this.lengthSq()<1.0E-4}};THREE.Vector4=function(a,b,d,c){this.x=a||0;this.y=b||0;this.z=d||0;this.w=c!==void 0?c:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,d,c){this.x=a;this.y=b;this.z=d;this.w=c;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w!==void 0?a.w:1},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-
b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},
normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this}};
THREE.Ray=function(a,b){function d(a,b,d){m.sub(d,a);l=m.dot(b);if(l<=0)return null;F=r.add(a,u.copy(b).multiplyScalar(l));return y=d.distanceTo(F)}function c(a,b,d,c){m.sub(c,b);r.sub(d,b);u.sub(a,b);K=m.dot(m);H=m.dot(r);R=m.dot(u);aa=r.dot(r);C=r.dot(u);E=1/(K*aa-H*H);N=(aa*R-H*C)*E;O=(K*C-H*R)*E;return N>=0&&O>=0&&N+O<1}this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3;this.intersectScene=function(a){return this.intersectObjects(a.children)};this.intersectObjects=function(a){var b,
d,c=[];b=0;for(d=a.length;b<d;b++)Array.prototype.push.apply(c,this.intersectObject(a[b]));c.sort(function(a,b){return a.distance-b.distance});return c};var f=new THREE.Vector3,g=new THREE.Vector3,h=new THREE.Vector3,i=new THREE.Vector3,a=new THREE.Vector3,b=new THREE.Vector3,o=new THREE.Vector3,n=new THREE.Vector3,j=new THREE.Vector3;this.intersectObject=function(l){for(var u,m=[],r=0,F=l.children.length;r<F;r++)Array.prototype.push.apply(m,this.intersectObject(l.children[r]));if(l instanceof THREE.Particle){r=
d(this.origin,this.direction,l.matrixWorld.getPosition());if(r===null||r>l.scale.x)return[];u={distance:r,point:l.position,face:null,object:l};m.push(u)}else if(l instanceof THREE.Mesh){r=d(this.origin,this.direction,l.matrixWorld.getPosition());if(r===null||r>l.geometry.boundingSphere.radius*Math.max(l.scale.x,Math.max(l.scale.y,l.scale.z)))return m;var y,C=l.geometry,K=C.vertices,I;l.matrixRotationWorld.extractRotation(l.matrixWorld);r=0;for(F=C.faces.length;r<F;r++)if(u=C.faces[r],a.copy(this.origin),
b.copy(this.direction),I=l.matrixWorld,o=I.multiplyVector3(o.copy(u.centroid)).subSelf(a),y=o.dot(b),!(y<=0)&&(f=I.multiplyVector3(f.copy(K[u.a].position)),g=I.multiplyVector3(g.copy(K[u.b].position)),h=I.multiplyVector3(h.copy(K[u.c].position)),u instanceof THREE.Face4&&(i=I.multiplyVector3(i.copy(K[u.d].position))),n=l.matrixRotationWorld.multiplyVector3(n.copy(u.normal)),y=b.dot(n),l.doubleSided||(l.flipSided?y>0:y<0)))if(y=n.dot(o.sub(f,a))/y,j.add(a,b.multiplyScalar(y)),u instanceof THREE.Face3)c(j,
f,g,h)&&(u={distance:a.distanceTo(j),point:j.clone(),face:u,object:l},m.push(u));else if(u instanceof THREE.Face4&&(c(j,f,g,i)||c(j,g,h,i)))u={distance:a.distanceTo(j),point:j.clone(),face:u,object:l},m.push(u)}return m};var m=new THREE.Vector3,r=new THREE.Vector3,u=new THREE.Vector3,l,F,y,K,H,R,aa,C,E,N,O};
THREE.Rectangle=function(){function a(){g=c-b;h=f-d}var b,d,c,f,g,h,i=!0;this.getX=function(){return b};this.getY=function(){return d};this.getWidth=function(){return g};this.getHeight=function(){return h};this.getLeft=function(){return b};this.getTop=function(){return d};this.getRight=function(){return c};this.getBottom=function(){return f};this.set=function(g,h,j,m){i=!1;b=g;d=h;c=j;f=m;a()};this.addPoint=function(g,h){i?(i=!1,b=g,d=h,c=g,f=h):(b=b<g?b:g,d=d<h?d:h,c=c>g?c:g,f=f>h?f:h);a()};this.add3Points=
function(g,h,j,m,r,u){i?(i=!1,b=g<j?g<r?g:r:j<r?j:r,d=h<m?h<u?h:u:m<u?m:u,c=g>j?g>r?g:r:j>r?j:r,f=h>m?h>u?h:u:m>u?m:u):(b=g<j?g<r?g<b?g:b:r<b?r:b:j<r?j<b?j:b:r<b?r:b,d=h<m?h<u?h<d?h:d:u<d?u:d:m<u?m<d?m:d:u<d?u:d,c=g>j?g>r?g>c?g:c:r>c?r:c:j>r?j>c?j:c:r>c?r:c,f=h>m?h>u?h>f?h:f:u>f?u:f:m>u?m>f?m:f:u>f?u:f);a()};this.addRectangle=function(g){i?(i=!1,b=g.getLeft(),d=g.getTop(),c=g.getRight(),f=g.getBottom()):(b=b<g.getLeft()?b:g.getLeft(),d=d<g.getTop()?d:g.getTop(),c=c>g.getRight()?c:g.getRight(),f=f>
g.getBottom()?f:g.getBottom());a()};this.inflate=function(g){b-=g;d-=g;c+=g;f+=g;a()};this.minSelf=function(g){b=b>g.getLeft()?b:g.getLeft();d=d>g.getTop()?d:g.getTop();c=c<g.getRight()?c:g.getRight();f=f<g.getBottom()?f:g.getBottom();a()};this.intersects=function(a){return Math.min(c,a.getRight())-Math.max(b,a.getLeft())>=0&&Math.min(f,a.getBottom())-Math.max(d,a.getTop())>=0};this.empty=function(){i=!0;f=c=d=b=0;a()};this.isEmpty=function(){return i}};
THREE.Math={clamp:function(a,b,d){return a<b?b:a>d?d:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,d,c,f){return c+(a-b)*(f-c)/(d-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535}};THREE.Matrix3=function(){this.m=[]};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,transpose:function(){var a,b=this.m;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};
THREE.Matrix4=function(a,b,d,c,f,g,h,i,o,n,j,m,r,u,l,F){this.set(a!==void 0?a:1,b||0,d||0,c||0,f||0,g!==void 0?g:1,h||0,i||0,o||0,n||0,j!==void 0?j:1,m||0,r||0,u||0,l||0,F!==void 0?F:1);this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,d,c,f,g,h,i,o,n,j,m,r,u,l,F){this.n11=a;this.n12=b;this.n13=d;this.n14=c;this.n21=f;this.n22=g;this.n23=h;this.n24=i;this.n31=o;this.n32=n;this.n33=j;this.n34=m;this.n41=r;this.n42=u;this.n43=l;this.n44=F;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.set(a.n11,a.n12,a.n13,a.n14,a.n21,a.n22,a.n23,a.n24,a.n31,a.n32,a.n33,a.n34,a.n41,a.n42,a.n43,a.n44);return this},lookAt:function(a,
b,d){var c=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(a,b).normalize();if(g.length()===0)g.z=1;c.cross(d,g).normalize();c.length()===0&&(g.x+=1.0E-4,c.cross(d,g).normalize());f.cross(g,c).normalize();this.n11=c.x;this.n12=f.x;this.n13=g.x;this.n21=c.y;this.n22=f.y;this.n23=g.y;this.n31=c.z;this.n32=f.z;this.n33=g.z;return this},multiply:function(a,b){var d=a.n11,c=a.n12,f=a.n13,g=a.n14,h=a.n21,i=a.n22,o=a.n23,n=a.n24,j=a.n31,m=a.n32,r=a.n33,u=a.n34,l=a.n41,F=a.n42,y=a.n43,
K=a.n44,H=b.n11,R=b.n12,aa=b.n13,C=b.n14,E=b.n21,N=b.n22,O=b.n23,ma=b.n24,ua=b.n31,ha=b.n32,ca=b.n33,pa=b.n34,ja=b.n41,xa=b.n42,va=b.n43,I=b.n44;this.n11=d*H+c*E+f*ua+g*ja;this.n12=d*R+c*N+f*ha+g*xa;this.n13=d*aa+c*O+f*ca+g*va;this.n14=d*C+c*ma+f*pa+g*I;this.n21=h*H+i*E+o*ua+n*ja;this.n22=h*R+i*N+o*ha+n*xa;this.n23=h*aa+i*O+o*ca+n*va;this.n24=h*C+i*ma+o*pa+n*I;this.n31=j*H+m*E+r*ua+u*ja;this.n32=j*R+m*N+r*ha+u*xa;this.n33=j*aa+m*O+r*ca+u*va;this.n34=j*C+m*ma+r*pa+u*I;this.n41=l*H+F*E+y*ua+K*ja;this.n42=
l*R+F*N+y*ha+K*xa;this.n43=l*aa+F*O+y*ca+K*va;this.n44=l*C+F*ma+y*pa+K*I;return this},multiplySelf:function(a){return this.multiply(this,a)},multiplyToArray:function(a,b,d){this.multiply(a,b);d[0]=this.n11;d[1]=this.n21;d[2]=this.n31;d[3]=this.n41;d[4]=this.n12;d[5]=this.n22;d[6]=this.n32;d[7]=this.n42;d[8]=this.n13;d[9]=this.n23;d[10]=this.n33;d[11]=this.n43;d[12]=this.n14;d[13]=this.n24;d[14]=this.n34;d[15]=this.n44;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=
a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},multiplyVector3:function(a){var b=a.x,d=a.y,c=a.z,f=1/(this.n41*b+this.n42*d+this.n43*c+this.n44);a.x=(this.n11*b+this.n12*d+this.n13*c+this.n14)*f;a.y=(this.n21*b+this.n22*d+this.n23*c+this.n24)*f;a.z=(this.n31*b+this.n32*d+this.n33*c+this.n34)*f;return a},multiplyVector4:function(a){var b=a.x,d=a.y,c=a.z,f=a.w;a.x=this.n11*b+this.n12*d+this.n13*
c+this.n14*f;a.y=this.n21*b+this.n22*d+this.n23*c+this.n24*f;a.z=this.n31*b+this.n32*d+this.n33*c+this.n34*f;a.w=this.n41*b+this.n42*d+this.n43*c+this.n44*f;return a},rotateAxis:function(a){var b=a.x,d=a.y,c=a.z;a.x=b*this.n11+d*this.n12+c*this.n13;a.y=b*this.n21+d*this.n22+c*this.n23;a.z=b*this.n31+d*this.n32+c*this.n33;a.normalize();return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*
a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},determinant:function(){var a=this.n11,b=this.n12,d=this.n13,c=this.n14,f=this.n21,g=this.n22,h=this.n23,i=this.n24,o=this.n31,n=this.n32,j=this.n33,m=this.n34,r=this.n41,u=this.n42,l=this.n43,F=this.n44;return c*h*n*r-d*i*n*r-c*g*j*r+b*i*j*r+d*g*m*r-b*h*m*r-c*h*o*u+d*i*o*u+c*f*j*u-a*i*j*u-d*f*m*u+a*h*m*u+c*g*o*l-b*i*o*l-c*f*n*l+a*i*n*l+b*f*m*l-a*g*m*l-d*g*o*F+b*h*o*F+
d*f*n*F-a*h*n*F-b*f*j*F+a*g*j*F},transpose:function(){var a;a=this.n21;this.n21=this.n12;this.n12=a;a=this.n31;this.n31=this.n13;this.n13=a;a=this.n32;this.n32=this.n23;this.n23=a;a=this.n41;this.n41=this.n14;this.n14=a;a=this.n42;this.n42=this.n24;this.n24=a;a=this.n43;this.n43=this.n34;this.n34=a;return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;
a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){this.flat[0]=this.n11;this.flat[1]=this.n21;this.flat[2]=this.n31;this.flat[3]=this.n41;this.flat[4]=this.n12;this.flat[5]=this.n22;this.flat[6]=this.n32;this.flat[7]=this.n42;this.flat[8]=this.n13;this.flat[9]=this.n23;this.flat[10]=this.n33;this.flat[11]=this.n43;this.flat[12]=this.n14;this.flat[13]=this.n24;this.flat[14]=this.n34;this.flat[15]=this.n44;return this.flat},flattenToArray:function(a){a[0]=
this.n11;a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},flattenToArrayOffset:function(a,b){a[b]=this.n11;a[b+1]=this.n21;a[b+2]=this.n31;a[b+3]=this.n41;a[b+4]=this.n12;a[b+5]=this.n22;a[b+6]=this.n32;a[b+7]=this.n42;a[b+8]=this.n13;a[b+9]=this.n23;a[b+10]=this.n33;a[b+11]=this.n43;a[b+12]=this.n14;a[b+13]=this.n24;a[b+14]=
this.n34;a[b+15]=this.n44;return a},setTranslation:function(a,b,d){this.set(1,0,0,a,0,1,0,b,0,0,1,d,0,0,0,1);return this},setScale:function(a,b,d){this.set(a,0,0,0,0,b,0,0,0,0,d,0,0,0,0,1);return this},setRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},setRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},setRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,-a,0,
0,a,b,0,0,0,0,1,0,0,0,0,1);return this},setRotationAxis:function(a,b){var d=Math.cos(b),c=Math.sin(b),f=1-d,g=a.x,h=a.y,i=a.z,o=f*g,n=f*h;this.set(o*g+d,o*h-c*i,o*i+c*h,0,o*h+c*i,n*h+d,n*i-c*g,0,o*i-c*h,n*i+c*g,f*i*i+d,0,0,0,0,1);return this},setPosition:function(a){this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},getPosition:function(){return THREE.Matrix4.__v1.set(this.n14,this.n24,this.n34)},getColumnX:function(){return THREE.Matrix4.__v1.set(this.n11,this.n21,this.n31)},getColumnY:function(){return THREE.Matrix4.__v1.set(this.n12,
this.n22,this.n32)},getColumnZ:function(){return THREE.Matrix4.__v1.set(this.n13,this.n23,this.n33)},getInverse:function(a){var b=a.n11,d=a.n12,c=a.n13,f=a.n14,g=a.n21,h=a.n22,i=a.n23,o=a.n24,n=a.n31,j=a.n32,m=a.n33,r=a.n34,u=a.n41,l=a.n42,F=a.n43,y=a.n44;this.n11=i*r*l-o*m*l+o*j*F-h*r*F-i*j*y+h*m*y;this.n12=f*m*l-c*r*l-f*j*F+d*r*F+c*j*y-d*m*y;this.n13=c*o*l-f*i*l+f*h*F-d*o*F-c*h*y+d*i*y;this.n14=f*i*j-c*o*j-f*h*m+d*o*m+c*h*r-d*i*r;this.n21=o*m*u-i*r*u-o*n*F+g*r*F+i*n*y-g*m*y;this.n22=c*r*u-f*m*u+
f*n*F-b*r*F-c*n*y+b*m*y;this.n23=f*i*u-c*o*u-f*g*F+b*o*F+c*g*y-b*i*y;this.n24=c*o*n-f*i*n+f*g*m-b*o*m-c*g*r+b*i*r;this.n31=h*r*u-o*j*u+o*n*l-g*r*l-h*n*y+g*j*y;this.n32=f*j*u-d*r*u-f*n*l+b*r*l+d*n*y-b*j*y;this.n33=d*o*u-f*h*u+f*g*l-b*o*l-d*g*y+b*h*y;this.n34=f*h*n-d*o*n-f*g*j+b*o*j+d*g*r-b*h*r;this.n41=i*j*u-h*m*u-i*n*l+g*m*l+h*n*F-g*j*F;this.n42=d*m*u-c*j*u+c*n*l-b*m*l-d*n*F+b*j*F;this.n43=c*h*u-d*i*u-c*g*l+b*i*l+d*g*F-b*h*F;this.n44=d*i*n-c*h*n+c*g*j-b*i*j-d*g*m+b*h*m;this.multiplyScalar(1/a.determinant());
return this},setRotationFromEuler:function(a,b){var d=a.x,c=a.y,f=a.z,g=Math.cos(d),d=Math.sin(d),h=Math.cos(c),c=Math.sin(c),i=Math.cos(f),f=Math.sin(f);switch(b){case "YXZ":var o=h*i,n=h*f,j=c*i,m=c*f;this.n11=o+m*d;this.n12=j*d-n;this.n13=g*c;this.n21=g*f;this.n22=g*i;this.n23=-d;this.n31=n*d-j;this.n32=m+o*d;this.n33=g*h;break;case "ZXY":o=h*i;n=h*f;j=c*i;m=c*f;this.n11=o-m*d;this.n12=-g*f;this.n13=j+n*d;this.n21=n+j*d;this.n22=g*i;this.n23=m-o*d;this.n31=-g*c;this.n32=d;this.n33=g*h;break;case "ZYX":o=
g*i;n=g*f;j=d*i;m=d*f;this.n11=h*i;this.n12=j*c-n;this.n13=o*c+m;this.n21=h*f;this.n22=m*c+o;this.n23=n*c-j;this.n31=-c;this.n32=d*h;this.n33=g*h;break;case "YZX":o=g*h;n=g*c;j=d*h;m=d*c;this.n11=h*i;this.n12=m-o*f;this.n13=j*f+n;this.n21=f;this.n22=g*i;this.n23=-d*i;this.n31=-c*i;this.n32=n*f+j;this.n33=o-m*f;break;case "XZY":o=g*h;n=g*c;j=d*h;m=d*c;this.n11=h*i;this.n12=-f;this.n13=c*i;this.n21=o*f+m;this.n22=g*i;this.n23=n*f-j;this.n31=j*f-n;this.n32=d*i;this.n33=m*f+o;break;default:o=g*i,n=g*
f,j=d*i,m=d*f,this.n11=h*i,this.n12=-h*f,this.n13=c,this.n21=n+j*c,this.n22=o-m*c,this.n23=-d*h,this.n31=m-o*c,this.n32=j+n*c,this.n33=g*h}return this},setRotationFromQuaternion:function(a){var b=a.x,d=a.y,c=a.z,f=a.w,g=b+b,h=d+d,i=c+c,a=b*g,o=b*h;b*=i;var n=d*h;d*=i;c*=i;g*=f;h*=f;f*=i;this.n11=1-(n+c);this.n12=o-f;this.n13=b+h;this.n21=o+f;this.n22=1-(a+c);this.n23=d-g;this.n31=b-h;this.n32=d+g;this.n33=1-(a+n);return this},scale:function(a){var b=a.x,d=a.y,a=a.z;this.n11*=b;this.n12*=d;this.n13*=
a;this.n21*=b;this.n22*=d;this.n23*=a;this.n31*=b;this.n32*=d;this.n33*=a;this.n41*=b;this.n42*=d;this.n43*=a;return this},compose:function(a,b,d){var c=THREE.Matrix4.__m1,f=THREE.Matrix4.__m2;c.identity();c.setRotationFromQuaternion(b);f.setScale(d.x,d.y,d.z);this.multiply(c,f);this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},decompose:function(a,b,d){var c=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;c.set(this.n11,this.n21,this.n31);f.set(this.n12,this.n22,this.n32);g.set(this.n13,
this.n23,this.n33);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;d=d instanceof THREE.Vector3?d:new THREE.Vector3;d.x=c.length();d.y=f.length();d.z=g.length();a.x=this.n14;a.y=this.n24;a.z=this.n34;c=THREE.Matrix4.__m1;c.copy(this);c.n11/=d.x;c.n21/=d.x;c.n31/=d.x;c.n12/=d.y;c.n22/=d.y;c.n32/=d.y;c.n13/=d.z;c.n23/=d.z;c.n33/=d.z;b.setFromRotationMatrix(c);return[a,b,d]},extractPosition:function(a){this.n14=a.n14;this.n24=a.n24;this.n34=a.n34;
return this},extractRotation:function(a){var b=THREE.Matrix4.__v1,d=1/b.set(a.n11,a.n21,a.n31).length(),c=1/b.set(a.n12,a.n22,a.n32).length(),b=1/b.set(a.n13,a.n23,a.n33).length();this.n11=a.n11*d;this.n21=a.n21*d;this.n31=a.n31*d;this.n12=a.n12*c;this.n22=a.n22*c;this.n32=a.n32*c;this.n13=a.n13*b;this.n23=a.n23*b;this.n33=a.n33*b;return this}};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.m33,d=b.m,c=a.n33*a.n22-a.n32*a.n23,f=-a.n33*a.n21+a.n31*a.n23,g=a.n32*a.n21-a.n31*a.n22,h=-a.n33*a.n12+a.n32*a.n13,i=a.n33*a.n11-a.n31*a.n13,o=-a.n32*a.n11+a.n31*a.n12,n=a.n23*a.n12-a.n22*a.n13,j=-a.n23*a.n11+a.n21*a.n13,m=a.n22*a.n11-a.n21*a.n12,a=a.n11*c+a.n21*h+a.n31*n;a===0&&console.error("THREE.Matrix4.makeInvert3x3: Matrix not invertible.");a=1/a;d[0]=a*c;d[1]=a*f;d[2]=a*g;d[3]=a*h;d[4]=a*i;d[5]=a*o;d[6]=a*n;d[7]=a*j;d[8]=a*m;return b};
THREE.Matrix4.makeFrustum=function(a,b,d,c,f,g){var h;h=new THREE.Matrix4;h.n11=2*f/(b-a);h.n12=0;h.n13=(b+a)/(b-a);h.n14=0;h.n21=0;h.n22=2*f/(c-d);h.n23=(c+d)/(c-d);h.n24=0;h.n31=0;h.n32=0;h.n33=-(g+f)/(g-f);h.n34=-2*g*f/(g-f);h.n41=0;h.n42=0;h.n43=-1;h.n44=0;return h};THREE.Matrix4.makePerspective=function(a,b,d,c){var f,a=d*Math.tan(a*Math.PI/360);f=-a;return THREE.Matrix4.makeFrustum(f*b,a*b,f,a,d,c)};
THREE.Matrix4.makeOrtho=function(a,b,d,c,f,g){var h,i,o,n;h=new THREE.Matrix4;i=b-a;o=d-c;n=g-f;h.n11=2/i;h.n12=0;h.n13=0;h.n14=-((b+a)/i);h.n21=0;h.n22=2/o;h.n23=0;h.n24=-((d+c)/o);h.n31=0;h.n32=0;h.n33=-2/n;h.n34=-((g+f)/n);h.n41=0;h.n42=0;h.n43=0;h.n44=1;return h};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.Object3D=function(){this.name="";this.id=THREE.Object3DCount++;this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder="XYZ";this.scale=new THREE.Vector3(1,1,1);this.flipSided=this.doubleSided=this.dynamic=!1;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=
!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)},add:function(a){if(this.children.indexOf(a)===
-1){a.parent!==void 0&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(b!==-1){a.parent=void 0;this.children.splice(b,1);for(b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.removeObject(a)}},getChildByName:function(a,b){var d,c,f;d=0;for(c=this.children.length;d<c;d++){f=this.children[d];if(f.name===a)return f;
if(b&&(f=f.getChildByName(a,b),f!==void 0))return f}},updateMatrix:function(){this.matrix.setPosition(this.position);this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder);if(this.scale.x!==1||this.scale.y!==1||this.scale.z!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&
this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,d=this.children.length;b<d;b++)this.children[b].updateMatrixWorld(a)}};THREE.Object3DCount=0;
THREE.Projector=function(){function a(){var a=h[g]=h[g]||new THREE.RenderableObject;g++;return a}function b(){var a=n[o]=n[o]||new THREE.RenderableVertex;o++;return a}function d(a,b){return b.z-a.z}function c(a,b){var d=0,c=1,f=a.z+a.w,e=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;return f>=0&&e>=0&&g>=0&&h>=0?!0:f<0&&e<0||g<0&&h<0?!1:(f<0?d=Math.max(d,f/(f-e)):e<0&&(c=Math.min(c,f/(f-e))),g<0?d=Math.max(d,g/(g-h)):h<0&&(c=Math.min(c,g/(g-h))),c<d?!1:(a.lerpSelf(b,d),b.lerpSelf(a,1-c),!0))}var f,g,h=[],i,o,n=[],
j,m,r=[],u,l=[],F,y,K=[],H,R,aa=[],C={objects:[],sprites:[],lights:[],elements:[]},E=new THREE.Vector3,N=new THREE.Vector4,O=new THREE.Matrix4,ma=new THREE.Matrix4,ua=new THREE.Frustum,ha=new THREE.Vector4,ca=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);O.multiply(b.projectionMatrix,b.matrixWorldInverse);O.multiplyVector3(a);return a};this.unprojectVector=function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);O.multiply(b.matrixWorld,
b.projectionMatrixInverse);O.multiplyVector3(a);return a};this.pickingRay=function(a,b){var d;a.z=-1;d=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(d,b);d.subSelf(a).normalize();return new THREE.Ray(a,d)};this.projectGraph=function(b,c){g=0;C.objects.length=0;C.sprites.length=0;C.lights.length=0;var h=function(b){if(b.visible!==!1){(b instanceof THREE.Mesh||b instanceof THREE.Line)&&(b.frustumCulled===!1||ua.contains(b))?(O.multiplyVector3(E.copy(b.position)),f=a(),
f.object=b,f.z=E.z,C.objects.push(f)):b instanceof THREE.Sprite||b instanceof THREE.Particle?(O.multiplyVector3(E.copy(b.position)),f=a(),f.object=b,f.z=E.z,C.sprites.push(f)):b instanceof THREE.Light&&C.lights.push(b);for(var d=0,e=b.children.length;d<e;d++)h(b.children[d])}};h(b);c&&C.objects.sort(d);return C};this.projectScene=function(a,f,g){var h=f.near,I=f.far,e,E,V,qa,P,S,na,ra,T,sa,oa,wa,Ca,za,Aa,ta;R=y=u=m=0;C.elements.length=0;f.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),
a.add(f));a.updateMatrixWorld();f.matrixWorldInverse.getInverse(f.matrixWorld);O.multiply(f.projectionMatrix,f.matrixWorldInverse);ua.setFromMatrix(O);C=this.projectGraph(a,!1);a=0;for(e=C.objects.length;a<e;a++)if(T=C.objects[a].object,sa=T.matrixWorld,wa=T.material,o=0,T instanceof THREE.Mesh){oa=T.geometry;Ca=T.geometry.materials;qa=oa.vertices;za=oa.faces;Aa=oa.faceVertexUvs;oa=T.matrixRotationWorld.extractRotation(sa);E=0;for(V=qa.length;E<V;E++)i=b(),i.positionWorld.copy(qa[E].position),sa.multiplyVector3(i.positionWorld),
i.positionScreen.copy(i.positionWorld),O.multiplyVector4(i.positionScreen),i.positionScreen.x/=i.positionScreen.w,i.positionScreen.y/=i.positionScreen.w,i.visible=i.positionScreen.z>h&&i.positionScreen.z<I;qa=0;for(E=za.length;qa<E;qa++){V=za[qa];if(V instanceof THREE.Face3)if(P=n[V.a],S=n[V.b],na=n[V.c],P.visible&&S.visible&&na.visible&&(T.doubleSided||T.flipSided!=(na.positionScreen.x-P.positionScreen.x)*(S.positionScreen.y-P.positionScreen.y)-(na.positionScreen.y-P.positionScreen.y)*(S.positionScreen.x-
P.positionScreen.x)<0))ra=r[m]=r[m]||new THREE.RenderableFace3,m++,j=ra,j.v1.copy(P),j.v2.copy(S),j.v3.copy(na);else continue;else if(V instanceof THREE.Face4)if(P=n[V.a],S=n[V.b],na=n[V.c],ra=n[V.d],P.visible&&S.visible&&na.visible&&ra.visible&&(T.doubleSided||T.flipSided!=((ra.positionScreen.x-P.positionScreen.x)*(S.positionScreen.y-P.positionScreen.y)-(ra.positionScreen.y-P.positionScreen.y)*(S.positionScreen.x-P.positionScreen.x)<0||(S.positionScreen.x-na.positionScreen.x)*(ra.positionScreen.y-
na.positionScreen.y)-(S.positionScreen.y-na.positionScreen.y)*(ra.positionScreen.x-na.positionScreen.x)<0)))ta=l[u]=l[u]||new THREE.RenderableFace4,u++,j=ta,j.v1.copy(P),j.v2.copy(S),j.v3.copy(na),j.v4.copy(ra);else continue;j.normalWorld.copy(V.normal);oa.multiplyVector3(j.normalWorld);j.centroidWorld.copy(V.centroid);sa.multiplyVector3(j.centroidWorld);j.centroidScreen.copy(j.centroidWorld);O.multiplyVector3(j.centroidScreen);na=V.vertexNormals;P=0;for(S=na.length;P<S;P++)ra=j.vertexNormalsWorld[P],
ra.copy(na[P]),oa.multiplyVector3(ra);P=0;for(S=Aa.length;P<S;P++)if(ta=Aa[P][qa]){na=0;for(ra=ta.length;na<ra;na++)j.uvs[P][na]=ta[na]}j.material=wa;j.faceMaterial=V.materialIndex!==null?Ca[V.materialIndex]:null;j.z=j.centroidScreen.z;C.elements.push(j)}}else if(T instanceof THREE.Line){ma.multiply(O,sa);qa=T.geometry.vertices;P=b();P.positionScreen.copy(qa[0].position);ma.multiplyVector4(P.positionScreen);E=1;for(V=qa.length;E<V;E++)if(P=b(),P.positionScreen.copy(qa[E].position),ma.multiplyVector4(P.positionScreen),
S=n[o-2],ha.copy(P.positionScreen),ca.copy(S.positionScreen),c(ha,ca))ha.multiplyScalar(1/ha.w),ca.multiplyScalar(1/ca.w),T=K[y]=K[y]||new THREE.RenderableLine,y++,F=T,F.v1.positionScreen.copy(ha),F.v2.positionScreen.copy(ca),F.z=Math.max(ha.z,ca.z),F.material=wa,C.elements.push(F)}a=0;for(e=C.sprites.length;a<e;a++)if(T=C.sprites[a].object,sa=T.matrixWorld,T instanceof THREE.Particle&&(N.set(sa.n14,sa.n24,sa.n34,1),O.multiplyVector4(N),N.z/=N.w,N.z>0&&N.z<1))h=aa[R]=aa[R]||new THREE.RenderableParticle,
R++,H=h,H.x=N.x/N.w,H.y=N.y/N.w,H.z=N.z,H.rotation=T.rotation.z,H.scale.x=T.scale.x*Math.abs(H.x-(N.x+f.projectionMatrix.n11)/(N.w+f.projectionMatrix.n14)),H.scale.y=T.scale.y*Math.abs(H.y-(N.y+f.projectionMatrix.n22)/(N.w+f.projectionMatrix.n24)),H.material=T.material,C.elements.push(H);g&&C.elements.sort(d);return C}};THREE.Quaternion=function(a,b,d,c){this.set(a||0,b||0,d||0,c!==void 0?c:1)};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,d,c){this.x=a;this.y=b;this.z=d;this.w=c;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a){var b=Math.PI/360,d=a.x*b,c=a.y*b,f=a.z*b,a=Math.cos(c),c=Math.sin(c),b=Math.cos(-f),f=Math.sin(-f),g=Math.cos(d),d=Math.sin(d),h=a*b,i=c*f;this.w=h*g-i*d;this.x=h*d+i*g;this.y=c*b*g+a*f*d;this.z=a*f*g-c*b*d;return this},setFromAxisAngle:function(a,b){var d=b/2,c=Math.sin(d);
this.x=a.x*c;this.y=a.y*c;this.z=a.z*c;this.w=Math.cos(d);return this},setFromRotationMatrix:function(a){var b=Math.pow(a.determinant(),1/3);this.w=Math.sqrt(Math.max(0,b+a.n11+a.n22+a.n33))/2;this.x=Math.sqrt(Math.max(0,b+a.n11-a.n22-a.n33))/2;this.y=Math.sqrt(Math.max(0,b-a.n11+a.n22-a.n33))/2;this.z=Math.sqrt(Math.max(0,b-a.n11-a.n22+a.n33))/2;this.x=a.n32-a.n23<0?-Math.abs(this.x):Math.abs(this.x);this.y=a.n13-a.n31<0?-Math.abs(this.y):Math.abs(this.y);this.z=a.n21-a.n12<0?-Math.abs(this.z):Math.abs(this.z);
this.normalize();return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);a===0?this.w=this.z=this.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiplySelf:function(a){var b=
this.x,d=this.y,c=this.z,f=this.w,g=a.x,h=a.y,i=a.z,a=a.w;this.x=b*a+f*g+d*i-c*h;this.y=d*a+f*h+c*g-b*i;this.z=c*a+f*i+b*h-d*g;this.w=f*a-b*g-d*h-c*i;return this},multiply:function(a,b){this.x=a.x*b.w+a.y*b.z-a.z*b.y+a.w*b.x;this.y=-a.x*b.z+a.y*b.w+a.z*b.x+a.w*b.y;this.z=a.x*b.y-a.y*b.x+a.z*b.w+a.w*b.z;this.w=-a.x*b.x-a.y*b.y-a.z*b.z+a.w*b.w;return this},multiplyVector3:function(a,b){b||(b=a);var d=a.x,c=a.y,f=a.z,g=this.x,h=this.y,i=this.z,o=this.w,n=o*d+h*f-i*c,j=o*c+i*d-g*f,m=o*f+g*c-h*d,d=-g*
d-h*c-i*f;b.x=n*o+d*-g+j*-i-m*-h;b.y=j*o+d*-h+m*-g-n*-i;b.z=m*o+d*-i+n*-h-j*-g;return b}};
THREE.Quaternion.slerp=function(a,b,d,c){var f=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;f<0?(d.w=-b.w,d.x=-b.x,d.y=-b.y,d.z=-b.z,f=-f):d.copy(b);if(Math.abs(f)>=1)return d.w=a.w,d.x=a.x,d.y=a.y,d.z=a.z,d;var g=Math.acos(f),f=Math.sqrt(1-f*f);if(Math.abs(f)<0.0010)return d.w=0.5*(a.w+b.w),d.x=0.5*(a.x+b.x),d.y=0.5*(a.y+b.y),d.z=0.5*(a.z+b.z),d;b=Math.sin((1-c)*g)/f;c=Math.sin(c*g)/f;d.w=a.w*b+d.w*c;d.x=a.x*b+d.x*c;d.y=a.y*b+d.y*c;d.z=a.z*b+d.z*c;return d};THREE.Vertex=function(a){this.position=a||new THREE.Vector3};
THREE.Face3=function(a,b,d,c,f,g){this.a=a;this.b=b;this.c=d;this.normal=c instanceof THREE.Vector3?c:new THREE.Vector3;this.vertexNormals=c instanceof Array?c:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=g;this.centroid=new THREE.Vector3};
THREE.Face4=function(a,b,d,c,f,g,h){this.a=a;this.b=b;this.c=d;this.d=c;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.color=g instanceof THREE.Color?g:new THREE.Color;this.vertexColors=g instanceof Array?g:[];this.vertexTangents=[];this.materialIndex=h;this.centroid=new THREE.Vector3};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){this.id=THREE.GeometryCount++;this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.dynamic=this.hasTangents=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a,new THREE.Vector3(1,1,1));for(var d=0,c=this.vertices.length;d<c;d++)a.multiplyVector3(this.vertices[d].position);d=0;for(c=this.faces.length;d<c;d++){var f=this.faces[d];b.multiplyVector3(f.normal);for(var g=0,h=f.vertexNormals.length;g<h;g++)b.multiplyVector3(f.vertexNormals[g]);a.multiplyVector3(f.centroid)}},computeCentroids:function(){var a,b,d;a=0;for(b=this.faces.length;a<
b;a++)d=this.faces[a],d.centroid.set(0,0,0),d instanceof THREE.Face3?(d.centroid.addSelf(this.vertices[d.a].position),d.centroid.addSelf(this.vertices[d.b].position),d.centroid.addSelf(this.vertices[d.c].position),d.centroid.divideScalar(3)):d instanceof THREE.Face4&&(d.centroid.addSelf(this.vertices[d.a].position),d.centroid.addSelf(this.vertices[d.b].position),d.centroid.addSelf(this.vertices[d.c].position),d.centroid.addSelf(this.vertices[d.d].position),d.centroid.divideScalar(4))},computeFaceNormals:function(){var a,
b,d,c,f,g,h=new THREE.Vector3,i=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)d=this.faces[a],c=this.vertices[d.a],f=this.vertices[d.b],g=this.vertices[d.c],h.sub(g.position,f.position),i.sub(c.position,f.position),h.crossSelf(i),h.isZero()||h.normalize(),d.normal.copy(h)},computeVertexNormals:function(){var a,b,d,c;if(this.__tmpVertices===void 0){c=this.__tmpVertices=Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)c[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)if(d=
this.faces[a],d instanceof THREE.Face3)d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(d instanceof THREE.Face4)d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else{c=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)c[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++)d=this.faces[a],d instanceof THREE.Face3?(c[d.a].addSelf(d.normal),c[d.b].addSelf(d.normal),c[d.c].addSelf(d.normal)):d instanceof THREE.Face4&&(c[d.a].addSelf(d.normal),
c[d.b].addSelf(d.normal),c[d.c].addSelf(d.normal),c[d.d].addSelf(d.normal));a=0;for(b=this.vertices.length;a<b;a++)c[a].normalize();a=0;for(b=this.faces.length;a<b;a++)d=this.faces[a],d instanceof THREE.Face3?(d.vertexNormals[0].copy(c[d.a]),d.vertexNormals[1].copy(c[d.b]),d.vertexNormals[2].copy(c[d.c])):d instanceof THREE.Face4&&(d.vertexNormals[0].copy(c[d.a]),d.vertexNormals[1].copy(c[d.b]),d.vertexNormals[2].copy(c[d.c]),d.vertexNormals[3].copy(c[d.d]))},computeTangents:function(){function a(a,
b,d,c,f,g,O){i=a.vertices[b].position;o=a.vertices[d].position;n=a.vertices[c].position;j=h[f];m=h[g];r=h[O];u=o.x-i.x;l=n.x-i.x;F=o.y-i.y;y=n.y-i.y;K=o.z-i.z;H=n.z-i.z;R=m.u-j.u;aa=r.u-j.u;C=m.v-j.v;E=r.v-j.v;N=1/(R*E-aa*C);ha.set((E*u-C*l)*N,(E*F-C*y)*N,(E*K-C*H)*N);ca.set((R*l-aa*u)*N,(R*y-aa*F)*N,(R*H-aa*K)*N);ma[b].addSelf(ha);ma[d].addSelf(ha);ma[c].addSelf(ha);ua[b].addSelf(ca);ua[d].addSelf(ca);ua[c].addSelf(ca)}var b,d,c,f,g,h,i,o,n,j,m,r,u,l,F,y,K,H,R,aa,C,E,N,O,ma=[],ua=[],ha=new THREE.Vector3,
ca=new THREE.Vector3,pa=new THREE.Vector3,ja=new THREE.Vector3,xa=new THREE.Vector3;b=0;for(d=this.vertices.length;b<d;b++)ma[b]=new THREE.Vector3,ua[b]=new THREE.Vector3;b=0;for(d=this.faces.length;b<d;b++)g=this.faces[b],h=this.faceVertexUvs[0][b],g instanceof THREE.Face3?a(this,g.a,g.b,g.c,0,1,2):g instanceof THREE.Face4&&(a(this,g.a,g.b,g.c,0,1,2),a(this,g.a,g.b,g.d,0,1,3));var va=["a","b","c","d"];b=0;for(d=this.faces.length;b<d;b++){g=this.faces[b];for(c=0;c<g.vertexNormals.length;c++)xa.copy(g.vertexNormals[c]),
f=g[va[c]],O=ma[f],pa.copy(O),pa.subSelf(xa.multiplyScalar(xa.dot(O))).normalize(),ja.cross(g.vertexNormals[c],O),f=ja.dot(ua[f]),f=f<0?-1:1,g.vertexTangents[c]=new THREE.Vector4(pa.x,pa.y,pa.z,f)}this.hasTangents=!0},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,d=this.vertices.length;b<
d;b++){a=this.vertices[b];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=
0,b=0,d=this.vertices.length;b<d;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},mergeVertices:function(){var a={},b=[],d=[],c,f=Math.pow(10,4),g,h;g=0;for(h=this.vertices.length;g<h;g++)c=this.vertices[g].position,c=[Math.round(c.x*f),Math.round(c.y*f),Math.round(c.z*f)].join("_"),a[c]===void 0?(a[c]=g,b.push(this.vertices[g]),d[g]=b.length-1):d[g]=d[a[c]];g=0;for(h=this.faces.length;g<h;g++)if(a=this.faces[g],a instanceof THREE.Face3)a.a=d[a.a],a.b=d[a.b],a.c=
d[a.c];else if(a instanceof THREE.Face4)a.a=d[a.a],a.b=d[a.b],a.c=d[a.c],a.d=d[a.d];this.vertices=b}};THREE.GeometryCount=0;
THREE.Spline=function(a){function b(a,b,d,c,f,g,h){a=(d-a)*0.5;c=(c-b)*0.5;return(2*(b-d)+a+c)*h+(-3*(b-d)-2*a-c)*g+a*f+b}this.points=a;var d=[],c={x:0,y:0,z:0},f,g,h,i,o,n,j,m,r;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){f=(this.points.length-1)*a;g=Math.floor(f);h=f-g;d[0]=g===0?g:g-1;d[1]=g;d[2]=g>this.points.length-2?g:g+1;d[3]=g>this.points.length-3?g:g+2;n=this.points[d[0]];j=this.points[d[1]];
m=this.points[d[2]];r=this.points[d[3]];i=h*h;o=h*i;c.x=b(n.x,j.x,m.x,r.x,h,i,o);c.y=b(n.y,j.y,m.y,r.y,h,i,o);c.z=b(n.z,j.z,m.z,r.z,h,i,o);return c};this.getControlPointsArray=function(){var a,b,d=this.points.length,c=[];for(a=0;a<d;a++)b=this.points[a],c[a]=[b.x,b.y,b.z];return c};this.getLength=function(a){var b,d,c,f=b=b=0,g=new THREE.Vector3,h=new THREE.Vector3,i=[],j=0;i[0]=0;a||(a=100);d=this.points.length*a;g.copy(this.points[0]);for(a=1;a<d;a++)b=a/d,c=this.getPoint(b),h.copy(c),j+=h.distanceTo(g),
g.copy(c),b*=this.points.length-1,b=Math.floor(b),b!=f&&(i[b]=j,f=b);i[i.length]=j;return{chunks:i,total:j}};this.reparametrizeByArcLength=function(a){var b,d,c,f,g,h,i=[],j=new THREE.Vector3,m=this.getLength();i.push(j.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){d=m.chunks[b]-m.chunks[b-1];h=Math.ceil(a*d/m.total);f=(b-1)/(this.points.length-1);g=b/(this.points.length-1);for(d=1;d<h-1;d++)c=f+d*(1/h)*(g-f),c=this.getPoint(c),i.push(j.copy(c).clone());i.push(j.copy(this.points[b]).clone())}this.points=
i}};THREE.Edge=function(a,b,d,c){this.vertices=[a,b];this.vertexIndices=[d,c];this.faces=[];this.faceIndices=[]};THREE.Camera=function(){if(arguments.length)return console.warn("DEPRECATED: Camera() is now PerspectiveCamera() or OrthographicCamera()."),new THREE.PerspectiveCamera(arguments[0],arguments[1],arguments[2],arguments[3]);THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};
THREE.Camera.prototype=new THREE.Object3D;THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)};THREE.OrthographicCamera=function(a,b,d,c,f,g){THREE.Camera.call(this);this.left=a;this.right=b;this.top=d;this.bottom=c;this.near=f!==void 0?f:0.1;this.far=g!==void 0?g:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=new THREE.Camera;
THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makeOrtho(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.PerspectiveCamera=function(a,b,d,c){THREE.Camera.call(this);this.fov=a!==void 0?a:50;this.aspect=b!==void 0?b:1;this.near=d!==void 0?d:0.1;this.far=c!==void 0?c:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=new THREE.Camera;
THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;THREE.PerspectiveCamera.prototype.setLens=function(a,b){this.fov=2*Math.atan((b!==void 0?b:43.25)/(a*2));this.fov*=180/Math.PI;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,d,c,f,g){this.fullWidth=a;this.fullHeight=b;this.x=d;this.y=c;this.width=f;this.height=g;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,d=-b,c=a*d,a=Math.abs(a*b-c),d=Math.abs(b-d);this.projectionMatrix=THREE.Matrix4.makeFrustum(c+this.x*a/this.fullWidth,c+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*d/this.fullHeight,b-this.y*d/this.fullHeight,this.near,this.far)}else this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,
this.far)};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=new THREE.Object3D;THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.supr=THREE.Object3D.prototype;THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;
THREE.DirectionalLight=function(a,b,d){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b!==void 0?b:1;this.distance=d!==void 0?d:0};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,b,d){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=b!==void 0?b:1;this.distance=d!==void 0?d:0};THREE.PointLight.prototype=new THREE.Light;
THREE.PointLight.prototype.constructor=THREE.PointLight;THREE.SpotLight=function(a,b,d,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=b!==void 0?b:1;this.distance=d!==void 0?d:0;this.castShadow=c!==void 0?c:!1};THREE.SpotLight.prototype=new THREE.Light;THREE.SpotLight.prototype.constructor=THREE.SpotLight;
THREE.Material=function(a){this.name="";this.id=THREE.MaterialCount++;a=a||{};this.opacity=a.opacity!==void 0?a.opacity:1;this.transparent=a.transparent!==void 0?a.transparent:!1;this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.depthTest=a.depthTest!==void 0?a.depthTest:!0;this.depthWrite=a.depthWrite!==void 0?a.depthWrite:!0;this.polygonOffset=a.polygonOffset!==void 0?a.polygonOffset:!1;this.polygonOffsetFactor=a.polygonOffsetFactor!==void 0?a.polygonOffsetFactor:0;this.polygonOffsetUnits=
a.polygonOffsetUnits!==void 0?a.polygonOffsetUnits:0;this.alphaTest=a.alphaTest!==void 0?a.alphaTest:0;this.overdraw=a.overdraw!==void 0?a.overdraw:!1};THREE.MaterialCount=0;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;THREE.MultiplyBlending=3;THREE.AdditiveAlphaBlending=4;
THREE.LineBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.linewidth=a.linewidth!==void 0?a.linewidth:1;this.linecap=a.linecap!==void 0?a.linecap:"round";this.linejoin=a.linejoin!==void 0?a.linejoin:"round";this.vertexColors=a.vertexColors?a.vertexColors:!1;this.fog=a.fog!==void 0?a.fog:!0};THREE.LineBasicMaterial.prototype=new THREE.Material;THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:null;this.lightMap=a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:
!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:
!1};THREE.MeshBasicMaterial.prototype=new THREE.Material;THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(328965);this.map=a.map!==void 0?a.map:null;this.lightMap=a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=
a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=
a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.MeshLambertMaterial.prototype=new THREE.Material;THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(328965);this.specular=a.specular!==void 0?new THREE.Color(a.specular):new THREE.Color(1118481);this.shininess=a.shininess!==void 0?a.shininess:30;this.metal=a.metal!==void 0?a.metal:!1;this.perPixel=a.perPixel!==void 0?a.perPixel:!1;this.map=a.map!==void 0?a.map:null;this.lightMap=
a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=
a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.MeshPhongMaterial.prototype=new THREE.Material;THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1};THREE.MeshDepthMaterial.prototype=new THREE.Material;THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading?a.shading:THREE.FlatShading;this.wireframe=a.wireframe?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth?a.wireframeLinewidth:1};THREE.MeshNormalMaterial.prototype=new THREE.Material;THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshFaceMaterial=function(){};
THREE.MeshShaderMaterial=function(a){console.warn("DEPRECATED: MeshShaderMaterial() is now ShaderMaterial().");return new THREE.ShaderMaterial(a)};
THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:null;this.size=a.size!==void 0?a.size:1;this.sizeAttenuation=a.sizeAttenuation!==void 0?a.sizeAttenuation:!0;this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.fog=a.fog!==void 0?a.fog:!0};THREE.ParticleBasicMaterial.prototype=new THREE.Material;THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial;
THREE.ShaderMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.fragmentShader=a.fragmentShader!==void 0?a.fragmentShader:"void main() {}";this.vertexShader=a.vertexShader!==void 0?a.vertexShader:"void main() {}";this.uniforms=a.uniforms!==void 0?a.uniforms:{};this.attributes=a.attributes;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.fog=a.fog!==
void 0?a.fog:!1;this.lights=a.lights!==void 0?a.lights:!1;this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.ShaderMaterial.prototype=new THREE.Material;THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;
THREE.Texture=function(a,b,d,c,f,g){this.id=THREE.TextureCount++;this.image=a;this.mapping=b!==void 0?b:new THREE.UVMapping;this.wrapS=d!==void 0?d:THREE.ClampToEdgeWrapping;this.wrapT=c!==void 0?c:THREE.ClampToEdgeWrapping;this.magFilter=f!==void 0?f:THREE.LinearFilter;this.minFilter=g!==void 0?g:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a}};THREE.TextureCount=0;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;
THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;THREE.DataTexture=function(a,b,d,c,f,g,h,i,o){THREE.Texture.call(this,null,f,g,h,i,o);this.image={data:a,width:b,height:d};this.format=c!==void 0?c:THREE.RGBAFormat};THREE.DataTexture.prototype=new THREE.Texture;THREE.DataTexture.prototype.constructor=THREE.DataTexture;
THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.data.slice(0),this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b;this.sortParticles=!1};
THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;THREE.Line=function(a,b,d){THREE.Object3D.call(this);this.geometry=a;this.material=b;this.type=d!==void 0?d:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b;if(b instanceof Array)console.warn("DEPRECATED: Mesh material can no longer be an Array. Using material at index 0..."),this.material=b[0];if(this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};
for(var d=0;d<this.geometry.morphTargets.length;d++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[d].name]=d}};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.supr=THREE.Object3D.prototype;
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(this.morphTargetDictionary[a]!==void 0)return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=new THREE.Object3D;THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.supr=THREE.Object3D.prototype;
THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var d,c=this.children.length;for(d=0;d<c;d++)this.children[d].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b){THREE.Mesh.call(this,a,b);this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,c,f,g,h,i;if(this.geometry.bones!==void 0){for(d=0;d<this.geometry.bones.length;d++)f=this.geometry.bones[d],g=f.pos,h=f.rotq,i=f.scl,c=this.addBone(),c.name=f.name,c.position.set(g[0],g[1],g[2]),c.quaternion.set(h[0],h[1],h[2],h[3]),c.useQuaternion=!0,i!==void 0?c.scale.set(i[0],i[1],i[2]):c.scale.set(1,1,1);for(d=0;d<this.bones.length;d++)f=this.geometry.bones[d],
c=this.bones[d],f.parent===-1?this.add(c):this.bones[f.parent].add(c);this.boneMatrices=new Float32Array(16*this.bones.length);this.pose()}};THREE.SkinnedMesh.prototype=new THREE.Mesh;THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.addBone=function(a){a===void 0&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,b=this.children.length;a<b;a++){var d=this.children[a];d instanceof THREE.Bone?d.update(this.identityMatrix,!1):d.updateMatrixWorld(!0)}for(var b=this.bones.length,d=this.bones,c=this.boneMatrices,a=0;a<b;a++)d[a].skinMatrix.flattenToArrayOffset(c,
a*16)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a,b=[],d=0;d<this.bones.length;d++){a=this.bones[d];var c=new THREE.Matrix4;c.getInverse(a.skinMatrix);b.push(c);a.skinMatrix.flattenToArrayOffset(this.boneMatrices,d*16)}if(this.geometry.skinVerticesA===void 0){this.geometry.skinVerticesA=[];this.geometry.skinVerticesB=[];for(a=0;a<this.geometry.skinIndices.length;a++){var d=this.geometry.vertices[a].position,f=this.geometry.skinIndices[a].x,g=this.geometry.skinIndices[a].y,c=
new THREE.Vector3(d.x,d.y,d.z);this.geometry.skinVerticesA.push(b[f].multiplyVector3(c));c=new THREE.Vector3(d.x,d.y,d.z);this.geometry.skinVerticesB.push(b[g].multiplyVector3(c));this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y!==1&&(d=(1-(this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y))*0.5,this.geometry.skinWeights[a].x+=d,this.geometry.skinWeights[a].y+=d)}}};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};
THREE.Ribbon.prototype=new THREE.Object3D;THREE.Ribbon.prototype.constructor=THREE.Ribbon;THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=new THREE.Object3D;THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.supr=THREE.Object3D.prototype;THREE.LOD.prototype.addLevel=function(a,b){b===void 0&&(b=0);for(var b=Math.abs(b),d=0;d<this.LODs.length;d++)if(b<this.LODs[d].visibleAtDistance)break;this.LODs.splice(d,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(this.LODs.length>1){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.n31*this.position.x+a.n32*this.position.y+a.n33*this.position.z+a.n34);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=!1}};
THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map instanceof THREE.Texture?a.map:THREE.ImageUtils.loadTexture(a.map);this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.useScreenCoordinates=a.useScreenCoordinates!==void 0?a.useScreenCoordinates:!0;this.mergeWith3D=a.mergeWith3D!==void 0?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=a.affectedByDistance!==void 0?a.affectedByDistance:
!this.useScreenCoordinates;this.scaleByViewport=a.scaleByViewport!==void 0?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1)};THREE.Sprite.prototype=new THREE.Object3D;THREE.Sprite.prototype.constructor=THREE.Sprite;
THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(this.scale.x!==1||this.scale.y!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);
THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);
THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.objects=[];this.lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=new THREE.Object3D;THREE.Scene.prototype.constructor=THREE.Scene;
THREE.Scene.prototype.addObject=function(a){if(a instanceof THREE.Light)this.lights.indexOf(a)===-1&&this.lights.push(a);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&this.objects.indexOf(a)===-1){this.objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);b!==-1&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.addObject(a.children[b])};
THREE.Scene.prototype.removeObject=function(a){if(a instanceof THREE.Light){var b=this.lights.indexOf(a);b!==-1&&this.lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.objects.indexOf(a),b!==-1&&(this.objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),b!==-1&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.removeObject(a.children[b])};
THREE.Fog=function(a,b,d){this.color=new THREE.Color(a);this.near=b!==void 0?b:1;this.far=d!==void 0?d:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b!==void 0?b:2.5E-4};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity );\n} else {\ngl_FragColor.xyz = gl_FragColor.xyz * cubeColor.xyz;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",
lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif",
lights_lambert_vertex:"vLightWeighting = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat pointLightWeighting = max( dot( transformedNormal, lVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting * lDistance;\n}\n#endif\nvLightWeighting = vLightWeighting * diffuse + ambient * ambientLightColor;",
lights_phong_pars_vertex:"#if MAX_POINT_LIGHTS > 0\n#ifndef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif",lights_phong_vertex:"#if MAX_POINT_LIGHTS > 0\n#ifndef PHONG_PER_PIXEL\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDistance = lDistance;\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\nfloat pointSpecularWeight = pow( pointDotNormalHalf, shininess );\n#ifdef PHYSICALLY_BASED_SHADING\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance;\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * pointDistance;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = pow( dirDotNormalHalf, shininess );\n#ifdef PHYSICALLY_BASED_SHADING\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * viewMatrix * objectMatrix * gl_Position;\n#endif",
morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\nuniform float morphTargetInfluences[ 8 ];\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0, 0.0, 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",
default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform float shadowDarkness;\nuniform float shadowBias;\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",
shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_SOFT\nconst float xPixelOffset = 1.0 / SHADOWMAP_WIDTH;\nconst float yPixelOffset = 1.0 / SHADOWMAP_HEIGHT;\n#endif\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nshadowCoord.z += shadowBias;\nif ( shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0 ) {\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nfor ( float y = -1.25; y <= 1.25; y += 1.25 )\nfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\nvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadow += 1.0;\n}\nshadow /= 9.0;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( shadowDarkness );\n#endif\n}\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,d,c,f={};for(b=0;b<a.length;b++)for(d in c=this.clone(a[b]),c)f[d]=c[d];return f},clone:function(a){var b,d,c,f={};for(b in a)for(d in f[b]={},a[b])c=a[b][d],f[b][d]=c instanceof THREE.Color||c instanceof THREE.Vector2||c instanceof THREE.Vector3||c instanceof THREE.Vector4||c instanceof THREE.Matrix4||c instanceof THREE.Texture?c.clone():c instanceof Array?c.slice():c;return f}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},fog:{fogDensity:{type:"f",
value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",
value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:6,texture:[]},shadowMatrix:{type:"m4v",value:[]},shadowBias:{type:"f",value:0.0039},shadowDarkness:{type:"f",value:0.2}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",
value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(328965)}}]),vertexShader:["varying vec3 vLightWeighting;",THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",
THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightWeighting;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",
THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,"gl_FragColor.xyz = gl_FragColor.xyz * vLightWeighting;",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",
value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),vertexShader:["varying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",
THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = -mvPosition.xyz;\nvec3 transformedNormal = normalMatrix * normal;\nvNormal = transformedNormal;",THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,
"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,
THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,
THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a,b){var d=a.vertices.length,c=b.material;if(c.attributes){if(a.__webglCustomAttributesList===void 0)a.__webglCustomAttributesList=[];for(var f in c.attributes){var g=c.attributes[f];if(!g.__webglInitialized||g.createUniqueBuffers){g.__webglInitialized=!0;var h=1;g.type==="v2"?h=2:g.type==="v3"?h=3:g.type==="v4"?h=4:g.type==="c"&&(h=3);g.size=h;g.array=new Float32Array(d*h);g.buffer=e.createBuffer();g.buffer.belongsToAttribute=f;g.needsUpdate=!0}a.__webglCustomAttributesList.push(g)}}}
function d(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;else if(b.materialIndex>=0)return a.geometry.materials[b.materialIndex]}function c(a){if(a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial)return!1;return a&&a.shading!==void 0&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function f(a){if(a.vertexColors)return a.vertexColors;return!1}function g(a){if(a.map||a.lightMap||a instanceof THREE.ShaderMaterial)return!0;
return!1}function h(a,b,d){var c,f,g,h,w=a.vertices;h=w.length;var i=a.colors,j=i.length,s=a.__vertexArray,l=a.__colorArray,k=a.__sortArray,v=a.__dirtyVertices,m=a.__dirtyColors,n=a.__webglCustomAttributesList;if(d.sortParticles){Da.multiplySelf(d.matrixWorld);for(c=0;c<h;c++)f=w[c].position,Ba.copy(f),Da.multiplyVector3(Ba),k[c]=[Ba.z,c];k.sort(function(a,b){return b[0]-a[0]});for(c=0;c<h;c++)f=w[k[c][1]].position,g=c*3,s[g]=f.x,s[g+1]=f.y,s[g+2]=f.z;for(c=0;c<j;c++)g=c*3,f=i[k[c][1]],l[g]=f.r,l[g+
1]=f.g,l[g+2]=f.b;if(n){i=0;for(j=n.length;i<j;i++)if(w=n[i],w.boundTo===void 0||w.boundTo==="vertices")if(g=0,f=w.value.length,w.size===1)for(c=0;c<f;c++)h=k[c][1],w.array[c]=w.value[h];else if(w.size===2)for(c=0;c<f;c++)h=k[c][1],h=w.value[h],w.array[g]=h.x,w.array[g+1]=h.y,g+=2;else if(w.size===3)if(w.type==="c")for(c=0;c<f;c++)h=k[c][1],h=w.value[h],w.array[g]=h.r,w.array[g+1]=h.g,w.array[g+2]=h.b,g+=3;else for(c=0;c<f;c++)h=k[c][1],h=w.value[h],w.array[g]=h.x,w.array[g+1]=h.y,w.array[g+2]=h.z,
g+=3;else if(w.size===4)for(c=0;c<f;c++)h=k[c][1],h=w.value[h],w.array[g]=h.x,w.array[g+1]=h.y,w.array[g+2]=h.z,w.array[g+3]=h.w,g+=4}}else{if(v)for(c=0;c<h;c++)f=w[c].position,g=c*3,s[g]=f.x,s[g+1]=f.y,s[g+2]=f.z;if(m)for(c=0;c<j;c++)f=i[c],g=c*3,l[g]=f.r,l[g+1]=f.g,l[g+2]=f.b;if(n){i=0;for(j=n.length;i<j;i++)if(w=n[i],w.needsUpdate&&(w.boundTo===void 0||w.boundTo==="vertices"))if(f=w.value.length,g=0,w.size===1)for(c=0;c<f;c++)w.array[c]=w.value[c];else if(w.size===2)for(c=0;c<f;c++)h=w.value[c],
w.array[g]=h.x,w.array[g+1]=h.y,g+=2;else if(w.size===3)if(w.type==="c")for(c=0;c<f;c++)h=w.value[c],w.array[g]=h.r,w.array[g+1]=h.g,w.array[g+2]=h.b,g+=3;else for(c=0;c<f;c++)h=w.value[c],w.array[g]=h.x,w.array[g+1]=h.y,w.array[g+2]=h.z,g+=3;else if(w.size===4)for(c=0;c<f;c++)h=w.value[c],w.array[g]=h.x,w.array[g+1]=h.y,w.array[g+2]=h.z,w.array[g+3]=h.w,g+=4}}if(v||d.sortParticles)e.bindBuffer(e.ARRAY_BUFFER,a.__webglVertexBuffer),e.bufferData(e.ARRAY_BUFFER,s,b);if(m||d.sortParticles)e.bindBuffer(e.ARRAY_BUFFER,
a.__webglColorBuffer),e.bufferData(e.ARRAY_BUFFER,l,b);if(n){i=0;for(j=n.length;i<j;i++)if(w=n[i],w.needsUpdate||d.sortParticles)e.bindBuffer(e.ARRAY_BUFFER,w.buffer),e.bufferData(e.ARRAY_BUFFER,w.array,b)}}function i(a,b){return b.z-a.z}function o(a,b,d){if(a.length)for(var c=0,e=a.length;c<e;c++)V=null,P=S=wa=oa=sa=-1,a[c].render(b,d,Ja,Ka),V=null,P=S=wa=oa=sa=-1}function n(a,b,d,c,e,f,g,h){var i,j,s,l;b?(j=a.length-1,l=b=-1):(j=0,b=a.length,l=1);for(var k=j;k!==b;k+=l)if(i=a[k],i.render){j=i.object;
s=i.buffer;if(h)i=h;else{i=i[d];if(!i)continue;g&&I.setBlending(i.blending);I.setDepthTest(i.depthTest);H(i.depthWrite);R(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits)}I.setObjectFaces(j);I.renderBuffer(c,e,f,i,s,j)}}function j(a,b,d,c,e,f,g){for(var h,i,j=0,s=a.length;j<s;j++)if(h=a[j],i=h.object,i.visible){if(g)h=g;else{h=h[b];if(!h)continue;f&&I.setBlending(h.blending);I.setDepthTest(h.depthTest);H(h.depthWrite);R(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}I.renderImmediateObject(d,
c,e,h,i)}}function m(a,b,d){a.push({buffer:b,object:d,opaque:null,transparent:null})}function r(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function u(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function l(a,b){for(var d=a.length-1;d>=0;d--)a[d].object===b&&a.splice(d,1)}function F(a,b){for(var d=a.length-1;d>=0;d--)a[d]===b&&a.splice(d,1)}function y(a,b,d,c,f){c.program||I.initMaterial(c,b,d,f);if(c.morphTargets&&!f.__webglMorphTargetInfluences){f.__webglMorphTargetInfluences=
new Float32Array(I.maxMorphTargets);for(var g=0,h=I.maxMorphTargets;g<h;g++)f.__webglMorphTargetInfluences[g]=0}var i=!1,g=c.program,h=g.uniforms,j=c.uniforms;g!==V&&(e.useProgram(g),V=g,i=!0);if(c.id!==P)P=c.id,i=!0;if(i){e.uniformMatrix4fv(h.projectionMatrix,!1,a._projectionMatrixArray);if(d&&c.fog)if(j.fogColor.value=d.color,d instanceof THREE.Fog)j.fogNear.value=d.near,j.fogFar.value=d.far;else if(d instanceof THREE.FogExp2)j.fogDensity.value=d.density;if(c instanceof THREE.MeshPhongMaterial||
c instanceof THREE.MeshLambertMaterial||c.lights){for(var l,s,m=0,k=0,v=0,n,o,r=La,u=r.directional.colors,F=r.directional.positions,y=r.point.colors,t=r.point.positions,E=r.point.distances,K=0,x=0,U=o=0,d=0,i=b.length;d<i;d++)if(l=b[d],s=l.color,n=l.intensity,o=l.distance,l instanceof THREE.AmbientLight)I.gammaInput?(m+=s.r*s.r,k+=s.g*s.g,v+=s.b*s.b):(m+=s.r,k+=s.g,v+=s.b);else if(l instanceof THREE.DirectionalLight)o=K*3,I.gammaInput?(u[o]=s.r*s.r*n*n,u[o+1]=s.g*s.g*n*n,u[o+2]=s.b*s.b*n*n):(u[o]=
s.r*n,u[o+1]=s.g*n,u[o+2]=s.b*n),l=l.matrixWorld.getPosition(),s=1/l.length(),F[o]=l.x*s,F[o+1]=l.y*s,F[o+2]=l.z*s,K+=1;else if(l instanceof THREE.SpotLight)o=K*3,I.gammaInput?(u[o]=s.r*s.r*n*n,u[o+1]=s.g*s.g*n*n,u[o+2]=s.b*s.b*n*n):(u[o]=s.r*n,u[o+1]=s.g*n,u[o+2]=s.b*n),l=l.matrixWorld.getPosition(),s=1/l.length(),F[o]=l.x*s,F[o+1]=l.y*s,F[o+2]=l.z*s,K+=1;else if(l instanceof THREE.PointLight)U=x*3,I.gammaInput?(y[U]=s.r*s.r*n*n,y[U+1]=s.g*s.g*n*n,y[U+2]=s.b*s.b*n*n):(y[U]=s.r*n,y[U+1]=s.g*n,y[U+
2]=s.b*n),l=l.matrixWorld.getPosition(),t[U]=l.x,t[U+1]=l.y,t[U+2]=l.z,E[x]=o,x+=1;d=K*3;for(i=u.length;d<i;d++)u[d]=0;d=x*3;for(i=y.length;d<i;d++)y[d]=0;r.point.length=x;r.directional.length=K;r.ambient[0]=m;r.ambient[1]=k;r.ambient[2]=v;b=La;j.ambientLightColor.value=b.ambient;j.directionalLightColor.value=b.directional.colors;j.directionalLightDirection.value=b.directional.positions;j.pointLightColor.value=b.point.colors;j.pointLightPosition.value=b.point.positions;j.pointLightDistance.value=
b.point.distances}if(c instanceof THREE.MeshBasicMaterial||c instanceof THREE.MeshLambertMaterial||c instanceof THREE.MeshPhongMaterial)j.opacity.value=c.opacity,I.gammaInput?j.diffuse.value.copyGammaToLinear(c.color):j.diffuse.value=c.color,(j.map.texture=c.map)&&j.offsetRepeat.value.set(c.map.offset.x,c.map.offset.y,c.map.repeat.x,c.map.repeat.y),j.lightMap.texture=c.lightMap,j.envMap.texture=c.envMap,j.flipEnvMap.value=c.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,j.reflectivity.value=c.reflectivity,
j.refractionRatio.value=c.refractionRatio,j.combine.value=c.combine,j.useRefract.value=c.envMap&&c.envMap.mapping instanceof THREE.CubeRefractionMapping;if(c instanceof THREE.LineBasicMaterial)j.diffuse.value=c.color,j.opacity.value=c.opacity;else if(c instanceof THREE.ParticleBasicMaterial)j.psColor.value=c.color,j.opacity.value=c.opacity,j.size.value=c.size,j.scale.value=ma.height/2,j.map.texture=c.map;else if(c instanceof THREE.MeshPhongMaterial)j.shininess.value=c.shininess,I.gammaInput?(j.ambient.value.copyGammaToLinear(c.ambient),
j.specular.value.copyGammaToLinear(c.specular)):(j.ambient.value=c.ambient,j.specular.value=c.specular);else if(c instanceof THREE.MeshLambertMaterial)I.gammaInput?j.ambient.value.copyGammaToLinear(c.ambient):j.ambient.value=c.ambient;else if(c instanceof THREE.MeshDepthMaterial)j.mNear.value=a.near,j.mFar.value=a.far,j.opacity.value=c.opacity;else if(c instanceof THREE.MeshNormalMaterial)j.opacity.value=c.opacity;if(f.receiveShadow&&!c._shadowPass&&j.shadowMatrix){for(b=0;b<I.shadowMapPlugin.shadowMatrix.length;b++)j.shadowMatrix.value[b]=
I.shadowMapPlugin.shadowMatrix[b],j.shadowMap.texture[b]=I.shadowMapPlugin.shadowMap[b];j.shadowDarkness.value=I.shadowMapDarkness;j.shadowBias.value=I.shadowMapBias}b=c.uniformsList;j=0;for(d=b.length;j<d;j++)if(k=g.uniforms[b[j][1]])if(m=b[j][0],v=m.type,i=m.value,v==="i")e.uniform1i(k,i);else if(v==="f")e.uniform1f(k,i);else if(v==="v2")e.uniform2f(k,i.x,i.y);else if(v==="v3")e.uniform3f(k,i.x,i.y,i.z);else if(v==="v4")e.uniform4f(k,i.x,i.y,i.z,i.w);else if(v==="c")e.uniform3f(k,i.r,i.g,i.b);else if(v===
"fv1")e.uniform1fv(k,i);else if(v==="fv")e.uniform3fv(k,i);else if(v==="v3v"){if(!m._array)m._array=new Float32Array(3*i.length);v=0;for(r=i.length;v<r;v++)u=v*3,m._array[u]=i[v].x,m._array[u+1]=i[v].y,m._array[u+2]=i[v].z;e.uniform3fv(k,m._array)}else if(v==="m4"){if(!m._array)m._array=new Float32Array(16);i.flattenToArray(m._array);e.uniformMatrix4fv(k,!1,m._array)}else if(v==="m4v"){if(!m._array)m._array=new Float32Array(16*i.length);v=0;for(r=i.length;v<r;v++)i[v].flattenToArrayOffset(m._array,
v*16);e.uniformMatrix4fv(k,!1,m._array)}else if(v==="t"){if(e.uniform1i(k,i),k=m.texture)if(k.image instanceof Array&&k.image.length===6){if(m=k,m.image.length===6)if(m.needsUpdate){if(!m.image.__webglTextureCube)m.image.__webglTextureCube=e.createTexture();e.activeTexture(e.TEXTURE0+i);e.bindTexture(e.TEXTURE_CUBE_MAP,m.image.__webglTextureCube);i=C(e.TEXTURE_CUBE_MAP,m,m.image[0]);for(k=0;k<6;k++)e.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+k,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,m.image[k]);i&&e.generateMipmap(e.TEXTURE_CUBE_MAP);
m.needsUpdate=!1}else e.activeTexture(e.TEXTURE0+i),e.bindTexture(e.TEXTURE_CUBE_MAP,m.image.__webglTextureCube)}else k instanceof THREE.WebGLRenderTargetCube?(m=k,e.activeTexture(e.TEXTURE0+i),e.bindTexture(e.TEXTURE_CUBE_MAP,m.__webglTexture)):I.setTexture(k,i)}else if(v==="tv"){if(!m._array){m._array=[];v=0;for(r=m.texture.length;v<r;v++)m._array[v]=i+v}e.uniform1iv(k,m._array);v=0;for(r=m.texture.length;v<r;v++)(k=m.texture[v])&&I.setTexture(k,m._array[v])}(c instanceof THREE.ShaderMaterial||
c instanceof THREE.MeshPhongMaterial||c.envMap)&&h.cameraPosition!==null&&e.uniform3f(h.cameraPosition,a.position.x,a.position.y,a.position.z);(c instanceof THREE.MeshPhongMaterial||c instanceof THREE.MeshLambertMaterial||c instanceof THREE.ShaderMaterial||c.skinning)&&h.viewMatrix!==null&&e.uniformMatrix4fv(h.viewMatrix,!1,a._viewMatrixArray);c.skinning&&(e.uniformMatrix4fv(h.cameraInverseMatrix,!1,a._viewMatrixArray),e.uniformMatrix4fv(h.boneGlobalMatrices,!1,f.boneMatrices))}e.uniformMatrix4fv(h.modelViewMatrix,
!1,f._modelViewMatrixArray);h.normalMatrix&&e.uniformMatrix3fv(h.normalMatrix,!1,f._normalMatrixArray);(c instanceof THREE.ShaderMaterial||c.envMap||c.skinning||f.receiveShadow)&&h.objectMatrix!==null&&e.uniformMatrix4fv(h.objectMatrix,!1,f._objectMatrixArray);return g}function K(a,b){a._modelViewMatrix.multiplyToArray(b.matrixWorldInverse,a.matrixWorld,a._modelViewMatrixArray);THREE.Matrix4.makeInvert3x3(a._modelViewMatrix).transposeIntoArray(a._normalMatrixArray)}function H(a){wa!==a&&(e.depthMask(a),
wa=a)}function R(a,b,c){Ca!==a&&(a?e.enable(e.POLYGON_OFFSET_FILL):e.disable(e.POLYGON_OFFSET_FILL),Ca=a);if(a&&(za!==b||Aa!==c))e.polygonOffset(b,c),za=b,Aa=c}function aa(a,b){var c;a==="fragment"?c=e.createShader(e.FRAGMENT_SHADER):a==="vertex"&&(c=e.createShader(e.VERTEX_SHADER));e.shaderSource(c,b);e.compileShader(c);if(!e.getShaderParameter(c,e.COMPILE_STATUS))return console.error(e.getShaderInfoLog(c)),console.error(b),null;return c}function C(a,b,c){return(c.width&c.width-1)===0&&(c.height&
c.height-1)===0?(e.texParameteri(a,e.TEXTURE_WRAP_S,O(b.wrapS)),e.texParameteri(a,e.TEXTURE_WRAP_T,O(b.wrapT)),e.texParameteri(a,e.TEXTURE_MAG_FILTER,O(b.magFilter)),e.texParameteri(a,e.TEXTURE_MIN_FILTER,O(b.minFilter)),!0):(e.texParameteri(a,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(a,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(a,e.TEXTURE_MAG_FILTER,N(b.magFilter)),e.texParameteri(a,e.TEXTURE_MIN_FILTER,N(b.minFilter)),!1)}function E(a,b){e.bindRenderbuffer(e.RENDERBUFFER,a);b.depthBuffer&&
!b.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,b.width,b.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,b.width,b.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,a)):e.renderbufferStorage(e.RENDERBUFFER,e.RGBA4,b.width,b.height)}function N(a){switch(a){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return e.NEAREST;
default:return e.LINEAR}}function O(a){switch(a){case THREE.RepeatWrapping:return e.REPEAT;case THREE.ClampToEdgeWrapping:return e.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return e.MIRRORED_REPEAT;case THREE.NearestFilter:return e.NEAREST;case THREE.NearestMipMapNearestFilter:return e.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return e.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return e.LINEAR;case THREE.LinearMipMapNearestFilter:return e.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return e.LINEAR_MIPMAP_LINEAR;
case THREE.ByteType:return e.BYTE;case THREE.UnsignedByteType:return e.UNSIGNED_BYTE;case THREE.ShortType:return e.SHORT;case THREE.UnsignedShortType:return e.UNSIGNED_SHORT;case THREE.IntType:return e.INT;case THREE.UnsignedShortType:return e.UNSIGNED_INT;case THREE.FloatType:return e.FLOAT;case THREE.AlphaFormat:return e.ALPHA;case THREE.RGBFormat:return e.RGB;case THREE.RGBAFormat:return e.RGBA;case THREE.LuminanceFormat:return e.LUMINANCE;case THREE.LuminanceAlphaFormat:return e.LUMINANCE_ALPHA}return 0}
var a=a||{},ma=a.canvas!==void 0?a.canvas:document.createElement("canvas"),ua=a.precision!==void 0?a.precision:"highp",ha=a.antialias!==void 0?a.antialias:!1,ca=a.stencil!==void 0?a.stencil:!0,pa=a.preserveDrawingBuffer!==void 0?a.preserveDrawingBuffer:!1,ja=a.clearColor!==void 0?new THREE.Color(a.clearColor):new THREE.Color(0),xa=a.clearAlpha!==void 0?a.clearAlpha:0,va=a.maxLights!==void 0?a.maxLights:4;this.domElement=ma;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=
this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapBias=0.0039;this.shadowMapDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCameraNear=1;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowMapEnabled=!1;this.shadowMapSoft=this.shadowMapAutoUpdate=!0;this.maxMorphTargets=8;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,
textures:0},render:{calls:0,vertices:0,faces:0}};var I=this,e,ya=[],V=null,qa=null,P=-1,S=null,na=0,ra=null,T=null,sa=null,oa=null,wa=null,Ca=null,za=null,Aa=null,ta=null,Ea=0,Fa=0,Ga=0,Ha=0,Ja=0,Ka=0,Ia=new THREE.Frustum,Da=new THREE.Matrix4,Ba=new THREE.Vector4,La={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]}};e=function(){var a;try{if(!(a=ma.getContext("experimental-webgl",{antialias:ha,stencil:ca,preserveDrawingBuffer:pa})))throw"Error creating WebGL context.";
console.log(navigator.userAgent+" | "+a.getParameter(a.VERSION)+" | "+a.getParameter(a.VENDOR)+" | "+a.getParameter(a.RENDERER)+" | "+a.getParameter(a.SHADING_LANGUAGE_VERSION))}catch(b){console.error(b)}return a}();e.clearColor(0,0,0,1);e.clearDepth(1);e.clearStencil(0);e.enable(e.DEPTH_TEST);e.depthFunc(e.LEQUAL);e.frontFace(e.CCW);e.cullFace(e.BACK);e.enable(e.CULL_FACE);e.enable(e.BLEND);e.blendEquation(e.FUNC_ADD);e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA);e.clearColor(ja.r,ja.g,ja.b,xa);
this.context=e;var Ma=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0;this.getContext=function(){return e};this.supportsVertexTextures=function(){return Ma};this.setSize=function(a,b){ma.width=a;ma.height=b;this.setViewport(0,0,ma.width,ma.height)};this.setViewport=function(a,b,c,d){Ea=a;Fa=b;Ga=c;Ha=d;e.viewport(Ea,Fa,Ga,Ha)};this.setScissor=function(a,b,c,d){e.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?e.enable(e.SCISSOR_TEST):e.disable(e.SCISSOR_TEST)};this.setClearColorHex=function(a,
b){ja.setHex(a);xa=b;e.clearColor(ja.r,ja.g,ja.b,xa)};this.setClearColor=function(a,b){ja.copy(a);xa=b;e.clearColor(ja.r,ja.g,ja.b,xa)};this.getClearColor=function(){return ja};this.getClearAlpha=function(){return xa};this.clear=function(a,b,c){var d=0;if(a===void 0||a)d|=e.COLOR_BUFFER_BIT;if(b===void 0||b)d|=e.DEPTH_BUFFER_BIT;if(c===void 0||c)d|=e.STENCIL_BUFFER_BIT;e.clear(d)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);
this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._objectMatrixArray,a instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups){var c=a.geometry.geometryGroups[b];e.deleteBuffer(c.__webglVertexBuffer);e.deleteBuffer(c.__webglNormalBuffer);e.deleteBuffer(c.__webglTangentBuffer);
e.deleteBuffer(c.__webglColorBuffer);e.deleteBuffer(c.__webglUVBuffer);e.deleteBuffer(c.__webglUV2Buffer);e.deleteBuffer(c.__webglSkinVertexABuffer);e.deleteBuffer(c.__webglSkinVertexBBuffer);e.deleteBuffer(c.__webglSkinIndicesBuffer);e.deleteBuffer(c.__webglSkinWeightsBuffer);e.deleteBuffer(c.__webglFaceBuffer);e.deleteBuffer(c.__webglLineBuffer);if(c.numMorphTargets)for(var d=0,f=c.numMorphTargets;d<f;d++)e.deleteBuffer(c.__webglMorphTargetsBuffers[d]);if(c.__webglCustomAttributesList)for(d in d=
void 0,c.__webglCustomAttributesList)e.deleteBuffer(c.__webglCustomAttributesList[d].buffer);I.info.memory.geometries--}else if(a instanceof THREE.Ribbon)a=a.geometry,e.deleteBuffer(a.__webglVertexBuffer),e.deleteBuffer(a.__webglColorBuffer),I.info.memory.geometries--;else if(a instanceof THREE.Line)a=a.geometry,e.deleteBuffer(a.__webglVertexBuffer),e.deleteBuffer(a.__webglColorBuffer),I.info.memory.geometries--;else if(a instanceof THREE.ParticleSystem)a=a.geometry,e.deleteBuffer(a.__webglVertexBuffer),
e.deleteBuffer(a.__webglColorBuffer),I.info.memory.geometries--};this.deallocateTexture=function(a){if(a.__webglInit)a.__webglInit=!1,e.deleteTexture(a.__webglTexture),I.info.memory.textures--};this.updateShadowMap=function(a,b){V=null;P=S=wa=oa=sa=-1;this.shadowMapPlugin.update(a,b)};this.renderBufferImmediate=function(a,b,c){if(!a.__webglVertexBuffer)a.__webglVertexBuffer=e.createBuffer();if(!a.__webglNormalBuffer)a.__webglNormalBuffer=e.createBuffer();a.hasPos&&(e.bindBuffer(e.ARRAY_BUFFER,a.__webglVertexBuffer),
e.bufferData(e.ARRAY_BUFFER,a.positionArray,e.DYNAMIC_DRAW),e.enableVertexAttribArray(b.attributes.position),e.vertexAttribPointer(b.attributes.position,3,e.FLOAT,!1,0,0));if(a.hasNormal){e.bindBuffer(e.ARRAY_BUFFER,a.__webglNormalBuffer);if(c===THREE.FlatShading){var d,f,g,h,i,j,l,m,n,k,v=a.count*3;for(k=0;k<v;k+=9)c=a.normalArray,d=c[k],f=c[k+1],g=c[k+2],h=c[k+3],j=c[k+4],m=c[k+5],i=c[k+6],l=c[k+7],n=c[k+8],d=(d+h+i)/3,f=(f+j+l)/3,g=(g+m+n)/3,c[k]=d,c[k+1]=f,c[k+2]=g,c[k+3]=d,c[k+4]=f,c[k+5]=g,
c[k+6]=d,c[k+7]=f,c[k+8]=g}e.bufferData(e.ARRAY_BUFFER,a.normalArray,e.DYNAMIC_DRAW);e.enableVertexAttribArray(b.attributes.normal);e.vertexAttribPointer(b.attributes.normal,3,e.FLOAT,!1,0,0)}e.drawArrays(e.TRIANGLES,0,a.count);a.count=0};this.renderBuffer=function(a,b,c,d,f,g){if(d.opacity!==0){var h,i,c=y(a,b,c,d,g),b=c.attributes,a=!1,c=f.id*16777215+c.id*2+(d.wireframe?1:0);c!==S&&(S=c,a=!0);if(!d.morphTargets&&b.position>=0)a&&(e.bindBuffer(e.ARRAY_BUFFER,f.__webglVertexBuffer),e.vertexAttribPointer(b.position,
3,e.FLOAT,!1,0,0));else if(g.morphTargetBase){c=d.program.attributes;g.morphTargetBase!==-1?(e.bindBuffer(e.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[g.morphTargetBase]),e.vertexAttribPointer(c.position,3,e.FLOAT,!1,0,0)):c.position>=0&&(e.bindBuffer(e.ARRAY_BUFFER,f.__webglVertexBuffer),e.vertexAttribPointer(c.position,3,e.FLOAT,!1,0,0));if(g.morphTargetForcedOrder.length){h=0;var j=g.morphTargetForcedOrder;for(i=g.morphTargetInfluences;h<d.numSupportedMorphTargets&&h<j.length;)e.bindBuffer(e.ARRAY_BUFFER,
f.__webglMorphTargetsBuffers[j[h]]),e.vertexAttribPointer(c["morphTarget"+h],3,e.FLOAT,!1,0,0),g.__webglMorphTargetInfluences[h]=i[j[h]],h++}else{var j=[],l=-1,m=0;i=g.morphTargetInfluences;var n,k=i.length;h=0;for(g.morphTargetBase!==-1&&(j[g.morphTargetBase]=!0);h<d.numSupportedMorphTargets;){for(n=0;n<k;n++)!j[n]&&i[n]>l&&(m=n,l=i[m]);e.bindBuffer(e.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[m]);e.vertexAttribPointer(c["morphTarget"+h],3,e.FLOAT,!1,0,0);g.__webglMorphTargetInfluences[h]=l;j[m]=
1;l=-1;h++}}d.program.uniforms.morphTargetInfluences!==null&&e.uniform1fv(d.program.uniforms.morphTargetInfluences,g.__webglMorphTargetInfluences)}if(a){if(f.__webglCustomAttributesList){h=0;for(i=f.__webglCustomAttributesList.length;h<i;h++)c=f.__webglCustomAttributesList[h],b[c.buffer.belongsToAttribute]>=0&&(e.bindBuffer(e.ARRAY_BUFFER,c.buffer),e.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,e.FLOAT,!1,0,0))}b.color>=0&&(e.bindBuffer(e.ARRAY_BUFFER,f.__webglColorBuffer),e.vertexAttribPointer(b.color,
3,e.FLOAT,!1,0,0));b.normal>=0&&(e.bindBuffer(e.ARRAY_BUFFER,f.__webglNormalBuffer),e.vertexAttribPointer(b.normal,3,e.FLOAT,!1,0,0));b.tangent>=0&&(e.bindBuffer(e.ARRAY_BUFFER,f.__webglTangentBuffer),e.vertexAttribPointer(b.tangent,4,e.FLOAT,!1,0,0));b.uv>=0&&(f.__webglUVBuffer?(e.bindBuffer(e.ARRAY_BUFFER,f.__webglUVBuffer),e.vertexAttribPointer(b.uv,2,e.FLOAT,!1,0,0),e.enableVertexAttribArray(b.uv)):e.disableVertexAttribArray(b.uv));b.uv2>=0&&(f.__webglUV2Buffer?(e.bindBuffer(e.ARRAY_BUFFER,f.__webglUV2Buffer),
e.vertexAttribPointer(b.uv2,2,e.FLOAT,!1,0,0),e.enableVertexAttribArray(b.uv2)):e.disableVertexAttribArray(b.uv2));d.skinning&&b.skinVertexA>=0&&b.skinVertexB>=0&&b.skinIndex>=0&&b.skinWeight>=0&&(e.bindBuffer(e.ARRAY_BUFFER,f.__webglSkinVertexABuffer),e.vertexAttribPointer(b.skinVertexA,4,e.FLOAT,!1,0,0),e.bindBuffer(e.ARRAY_BUFFER,f.__webglSkinVertexBBuffer),e.vertexAttribPointer(b.skinVertexB,4,e.FLOAT,!1,0,0),e.bindBuffer(e.ARRAY_BUFFER,f.__webglSkinIndicesBuffer),e.vertexAttribPointer(b.skinIndex,
4,e.FLOAT,!1,0,0),e.bindBuffer(e.ARRAY_BUFFER,f.__webglSkinWeightsBuffer),e.vertexAttribPointer(b.skinWeight,4,e.FLOAT,!1,0,0))}g instanceof THREE.Mesh?(d.wireframe?(d=d.wireframeLinewidth,d!==ta&&(e.lineWidth(d),ta=d),a&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,f.__webglLineBuffer),e.drawElements(e.LINES,f.__webglLineCount,e.UNSIGNED_SHORT,0)):(a&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,f.__webglFaceBuffer),e.drawElements(e.TRIANGLES,f.__webglFaceCount,e.UNSIGNED_SHORT,0)),I.info.render.calls++,I.info.render.vertices+=
f.__webglFaceCount,I.info.render.faces+=f.__webglFaceCount/3):g instanceof THREE.Line?(g=g.type===THREE.LineStrip?e.LINE_STRIP:e.LINES,d=d.linewidth,d!==ta&&(e.lineWidth(d),ta=d),e.drawArrays(g,0,f.__webglLineCount),I.info.render.calls++):g instanceof THREE.ParticleSystem?(e.drawArrays(e.POINTS,0,f.__webglParticleCount),I.info.render.calls++):g instanceof THREE.Ribbon&&(e.drawArrays(e.TRIANGLE_STRIP,0,f.__webglVertexCount),I.info.render.calls++)}};this.render=function(a,b,c,d){var f,g,h,l,m=a.lights,
r=a.fog;P=-1;this.autoUpdateObjects&&this.initWebGLObjects(a);b.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),a.add(b));this.autoUpdateScene&&a.updateMatrixWorld();o(this.renderPluginsPre,a,b);I.info.render.calls=0;I.info.render.vertices=0;I.info.render.faces=0;b.matrixWorldInverse.getInverse(b.matrixWorld);if(!b._viewMatrixArray)b._viewMatrixArray=new Float32Array(16);b.matrixWorldInverse.flattenToArray(b._viewMatrixArray);if(!b._projectionMatrixArray)b._projectionMatrixArray=
new Float32Array(16);b.projectionMatrix.flattenToArray(b._projectionMatrixArray);Da.multiply(b.projectionMatrix,b.matrixWorldInverse);Ia.setFromMatrix(Da);this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);l=a.__webglObjects;d=0;for(f=l.length;d<f;d++)if(g=l[d],h=g.object,g.render=!1,h.visible&&(!(h instanceof THREE.Mesh)||!h.frustumCulled||Ia.contains(h))){h.matrixWorld.flattenToArray(h._objectMatrixArray);K(h,b);var s=g,u=s.object,
k=s.buffer,v=void 0,v=v=void 0,v=u.material;if(v instanceof THREE.MeshFaceMaterial){if(v=k.materialIndex,v>=0)v=u.geometry.materials[v],v.transparent?(s.transparent=v,s.opaque=null):(s.opaque=v,s.transparent=null)}else if(v)v.transparent?(s.transparent=v,s.opaque=null):(s.opaque=v,s.transparent=null);g.render=!0;if(this.sortObjects)h.renderDepth?g.z=h.renderDepth:(Ba.copy(h.position),Da.multiplyVector3(Ba),g.z=Ba.z)}this.sortObjects&&l.sort(i);l=a.__webglObjectsImmediate;d=0;for(f=l.length;d<f;d++)if(g=
l[d],h=g.object,h.visible)h.matrixAutoUpdate&&h.matrixWorld.flattenToArray(h._objectMatrixArray),K(h,b),h=g.object.material,h.transparent?(g.transparent=h,g.opaque=null):(g.opaque=h,g.transparent=null);a.overrideMaterial?(this.setBlending(a.overrideMaterial.blending),this.setDepthTest(a.overrideMaterial.depthTest),H(a.overrideMaterial.depthWrite),R(a.overrideMaterial.polygonOffset,a.overrideMaterial.polygonOffsetFactor,a.overrideMaterial.polygonOffsetUnits),n(a.__webglObjects,!1,"",b,m,r,!0,a.overrideMaterial),
j(a.__webglObjectsImmediate,"",b,m,r,!1,a.overrideMaterial)):(this.setBlending(THREE.NormalBlending),n(a.__webglObjects,!0,"opaque",b,m,r,!1),j(a.__webglObjectsImmediate,"opaque",b,m,r,!1),n(a.__webglObjects,!1,"transparent",b,m,r,!0),j(a.__webglObjectsImmediate,"transparent",b,m,r,!0));o(this.renderPluginsPost,a,b);c&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&(c instanceof THREE.WebGLRenderTargetCube?(e.bindTexture(e.TEXTURE_CUBE_MAP,c.__webglTexture),e.generateMipmap(e.TEXTURE_CUBE_MAP),
e.bindTexture(e.TEXTURE_CUBE_MAP,null)):(e.bindTexture(e.TEXTURE_2D,c.__webglTexture),e.generateMipmap(e.TEXTURE_2D),e.bindTexture(e.TEXTURE_2D,null)))};this.renderImmediateObject=function(a,b,c,d,f){var g=y(a,b,c,d,f);S=-1;I.setObjectFaces(f);f.immediateRenderCallback?f.immediateRenderCallback(g,e,Ia):f.render(function(a){I.renderBufferImmediate(a,g,d.shading)})};this.initWebGLObjects=function(a){if(!a.__webglObjects)a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=
[];for(;a.__objectsAdded.length;){var i=a.__objectsAdded[0],j=a,n=void 0,o=void 0,D=void 0;if(!i.__webglInit)if(i.__webglInit=!0,i._modelViewMatrix=new THREE.Matrix4,i._normalMatrixArray=new Float32Array(9),i._modelViewMatrixArray=new Float32Array(16),i._objectMatrixArray=new Float32Array(16),i.matrixWorld.flattenToArray(i._objectMatrixArray),i instanceof THREE.Mesh){o=i.geometry;if(o.geometryGroups===void 0){var D=o,G=void 0,w=void 0,y=void 0,C=void 0,s=void 0,E=void 0,k=void 0,v={},K=D.morphTargets.length;
D.geometryGroups={};G=0;for(w=D.faces.length;G<w;G++)y=D.faces[G],C=y.materialIndex,E=C!==void 0?C:-1,v[E]===void 0&&(v[E]={hash:E,counter:0}),k=v[E].hash+"_"+v[E].counter,D.geometryGroups[k]===void 0&&(D.geometryGroups[k]={faces3:[],faces4:[],materialIndex:C,vertices:0,numMorphTargets:K}),s=y instanceof THREE.Face3?3:4,D.geometryGroups[k].vertices+s>65535&&(v[E].counter+=1,k=v[E].hash+"_"+v[E].counter,D.geometryGroups[k]===void 0&&(D.geometryGroups[k]={faces3:[],faces4:[],materialIndex:C,vertices:0,
numMorphTargets:K})),y instanceof THREE.Face3?D.geometryGroups[k].faces3.push(G):D.geometryGroups[k].faces4.push(G),D.geometryGroups[k].vertices+=s;D.geometryGroupsList=[];G=void 0;for(G in D.geometryGroups)D.geometryGroups[G].id=na++,D.geometryGroupsList.push(D.geometryGroups[G])}for(n in o.geometryGroups)if(D=o.geometryGroups[n],!D.__webglVertexBuffer){G=D;G.__webglVertexBuffer=e.createBuffer();G.__webglNormalBuffer=e.createBuffer();G.__webglTangentBuffer=e.createBuffer();G.__webglColorBuffer=e.createBuffer();
G.__webglUVBuffer=e.createBuffer();G.__webglUV2Buffer=e.createBuffer();G.__webglSkinVertexABuffer=e.createBuffer();G.__webglSkinVertexBBuffer=e.createBuffer();G.__webglSkinIndicesBuffer=e.createBuffer();G.__webglSkinWeightsBuffer=e.createBuffer();G.__webglFaceBuffer=e.createBuffer();G.__webglLineBuffer=e.createBuffer();if(G.numMorphTargets){y=w=void 0;G.__webglMorphTargetsBuffers=[];w=0;for(y=G.numMorphTargets;w<y;w++)G.__webglMorphTargetsBuffers.push(e.createBuffer())}I.info.memory.geometries++;
C=i;s=C.geometry;w=D.faces3;E=D.faces4;G=w.length*3+E.length*4;y=w.length*1+E.length*2;E=w.length*3+E.length*4;w=d(C,D);k=g(w);v=c(w);K=f(w);D.__vertexArray=new Float32Array(G*3);if(v)D.__normalArray=new Float32Array(G*3);if(s.hasTangents)D.__tangentArray=new Float32Array(G*4);if(K)D.__colorArray=new Float32Array(G*3);if(k){if(s.faceUvs.length>0||s.faceVertexUvs.length>0)D.__uvArray=new Float32Array(G*2);if(s.faceUvs.length>1||s.faceVertexUvs.length>1)D.__uv2Array=new Float32Array(G*2)}if(C.geometry.skinWeights.length&&
C.geometry.skinIndices.length)D.__skinVertexAArray=new Float32Array(G*4),D.__skinVertexBArray=new Float32Array(G*4),D.__skinIndexArray=new Float32Array(G*4),D.__skinWeightArray=new Float32Array(G*4);D.__faceArray=new Uint16Array(y*3);D.__lineArray=new Uint16Array(E*2);if(D.numMorphTargets){D.__morphTargetsArrays=[];C=0;for(s=D.numMorphTargets;C<s;C++)D.__morphTargetsArrays.push(new Float32Array(G*3))}D.__webglFaceCount=y*3;D.__webglLineCount=E*2;if(w.attributes){if(D.__webglCustomAttributesList===
void 0)D.__webglCustomAttributesList=[];y=void 0;for(y in w.attributes){var C=w.attributes[y],s={},ka;for(ka in C)s[ka]=C[ka];if(!s.__webglInitialized||s.createUniqueBuffers)s.__webglInitialized=!0,E=1,s.type==="v2"?E=2:s.type==="v3"?E=3:s.type==="v4"?E=4:s.type==="c"&&(E=3),s.size=E,s.array=new Float32Array(G*E),s.buffer=e.createBuffer(),s.buffer.belongsToAttribute=y,C.needsUpdate=!0,s.__original=C;D.__webglCustomAttributesList.push(s)}}D.__inittedArrays=!0;o.__dirtyVertices=!0;o.__dirtyMorphTargets=
!0;o.__dirtyElements=!0;o.__dirtyUvs=!0;o.__dirtyNormals=!0;o.__dirtyTangents=!0;o.__dirtyColors=!0}}else if(i instanceof THREE.Ribbon){if(o=i.geometry,!o.__webglVertexBuffer)D=o,D.__webglVertexBuffer=e.createBuffer(),D.__webglColorBuffer=e.createBuffer(),I.info.memory.geometries++,D=o,G=D.vertices.length,D.__vertexArray=new Float32Array(G*3),D.__colorArray=new Float32Array(G*3),D.__webglVertexCount=G,o.__dirtyVertices=!0,o.__dirtyColors=!0}else if(i instanceof THREE.Line){if(o=i.geometry,!o.__webglVertexBuffer)D=
o,D.__webglVertexBuffer=e.createBuffer(),D.__webglColorBuffer=e.createBuffer(),I.info.memory.geometries++,D=o,G=i,w=D.vertices.length,D.__vertexArray=new Float32Array(w*3),D.__colorArray=new Float32Array(w*3),D.__webglLineCount=w,b(D,G),o.__dirtyVertices=!0,o.__dirtyColors=!0}else if(i instanceof THREE.ParticleSystem&&(o=i.geometry,!o.__webglVertexBuffer))D=o,D.__webglVertexBuffer=e.createBuffer(),D.__webglColorBuffer=e.createBuffer(),I.info.geometries++,D=o,G=i,w=D.vertices.length,D.__vertexArray=
new Float32Array(w*3),D.__colorArray=new Float32Array(w*3),D.__sortArray=[],D.__webglParticleCount=w,b(D,G),o.__dirtyVertices=!0,o.__dirtyColors=!0;if(!i.__webglActive){if(i instanceof THREE.Mesh)for(n in o=i.geometry,o.geometryGroups)D=o.geometryGroups[n],m(j.__webglObjects,D,i);else i instanceof THREE.Ribbon||i instanceof THREE.Line||i instanceof THREE.ParticleSystem?(o=i.geometry,m(j.__webglObjects,o,i)):THREE.MarchingCubes!==void 0&&i instanceof THREE.MarchingCubes||i.immediateRenderCallback?
j.__webglObjectsImmediate.push({object:i,opaque:null,transparent:null}):i instanceof THREE.Sprite?j.__webglSprites.push(i):i instanceof THREE.LensFlare&&j.__webglFlares.push(i);i.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;)i=a.__objectsRemoved[0],j=a,i instanceof THREE.Mesh||i instanceof THREE.ParticleSystem||i instanceof THREE.Ribbon||i instanceof THREE.Line?l(j.__webglObjects,i):i instanceof THREE.Sprite?F(j.__webglSprites,i):i instanceof THREE.LensFlare?F(j.__webglFlares,
i):(i instanceof THREE.MarchingCubes||i.immediateRenderCallback)&&l(j.__webglObjectsImmediate,i),i.__webglActive=!1,a.__objectsRemoved.splice(0,1);i=0;for(j=a.__webglObjects.length;i<j;i++)if(ka=a.__webglObjects[i].object,n=ka.geometry,o=y=w=void 0,ka instanceof THREE.Mesh){D=0;for(G=n.geometryGroupsList.length;D<G;D++)if(w=n.geometryGroupsList[D],o=d(ka,w),y=o.attributes&&r(o),n.__dirtyVertices||n.__dirtyMorphTargets||n.__dirtyElements||n.__dirtyUvs||n.__dirtyNormals||n.__dirtyColors||n.__dirtyTangents||
y){var M=ka,y=e.DYNAMIC_DRAW,C=!n.dynamic,k=o;if(w.__inittedArrays){var s=c(k),E=f(k),O=g(k),P=s===THREE.SmoothShading,H=v=k=void 0,t=void 0,ba=void 0,N=void 0,x=void 0,U=void 0,R=void 0,V=H=void 0,z=void 0,A=void 0,B=void 0,da=t=void 0,ea=void 0,la=void 0,W=t=R=void 0,X=void 0,S=B=A=z=x=void 0,J=t=B=A=z=S=B=A=z=S=B=A=z=void 0,L=void 0,T=N=void 0,aa=void 0,Z=void 0,ma=void 0,fa=void 0,ja=V=Z=L=0,ha=0,ca=J=H=0,Q=x=da=0,q=0,ga=void 0,Q=w.__vertexArray,aa=w.__uvArray,q=w.__uv2Array,T=w.__normalArray,
ba=w.__tangentArray,ea=w.__colorArray,W=w.__skinVertexAArray,X=w.__skinVertexBArray,U=w.__skinIndexArray,ia=w.__skinWeightArray,S=w.__morphTargetsArrays,K=w.__webglCustomAttributesList,p=void 0,p=w.__faceArray,ga=w.__lineArray,la=M.geometry,ra=la.__dirtyElements,ua=la.__dirtyUvs,N=la.__dirtyNormals,R=la.__dirtyTangents,xa=la.__dirtyColors,ma=la.__dirtyMorphTargets,fa=la.vertices,M=w.faces3,Y=w.faces4,$=la.faces,qa=la.faceVertexUvs[0],sa=la.faceVertexUvs[1],oa=la.skinVerticesA,pa=la.skinVerticesB,
va=la.skinIndices,ta=la.skinWeights,wa=la.morphTargets;if(la.__dirtyVertices){k=0;for(v=M.length;k<v;k++)t=$[M[k]],z=fa[t.a].position,A=fa[t.b].position,B=fa[t.c].position,Q[Z]=z.x,Q[Z+1]=z.y,Q[Z+2]=z.z,Q[Z+3]=A.x,Q[Z+4]=A.y,Q[Z+5]=A.z,Q[Z+6]=B.x,Q[Z+7]=B.y,Q[Z+8]=B.z,Z+=9;k=0;for(v=Y.length;k<v;k++)t=$[Y[k]],z=fa[t.a].position,A=fa[t.b].position,B=fa[t.c].position,t=fa[t.d].position,Q[Z]=z.x,Q[Z+1]=z.y,Q[Z+2]=z.z,Q[Z+3]=A.x,Q[Z+4]=A.y,Q[Z+5]=A.z,Q[Z+6]=B.x,Q[Z+7]=B.y,Q[Z+8]=B.z,Q[Z+9]=t.x,Q[Z+10]=
t.y,Q[Z+11]=t.z,Z+=12;e.bindBuffer(e.ARRAY_BUFFER,w.__webglVertexBuffer);e.bufferData(e.ARRAY_BUFFER,Q,y)}if(ma){Z=0;for(ma=wa.length;Z<ma;Z++){k=Q=0;for(v=M.length;k<v;k++)t=$[M[k]],z=wa[Z].vertices[t.a].position,A=wa[Z].vertices[t.b].position,B=wa[Z].vertices[t.c].position,fa=S[Z],fa[Q]=z.x,fa[Q+1]=z.y,fa[Q+2]=z.z,fa[Q+3]=A.x,fa[Q+4]=A.y,fa[Q+5]=A.z,fa[Q+6]=B.x,fa[Q+7]=B.y,fa[Q+8]=B.z,Q+=9;k=0;for(v=Y.length;k<v;k++)t=$[Y[k]],z=wa[Z].vertices[t.a].position,A=wa[Z].vertices[t.b].position,B=wa[Z].vertices[t.c].position,
t=wa[Z].vertices[t.d].position,fa=S[Z],fa[Q]=z.x,fa[Q+1]=z.y,fa[Q+2]=z.z,fa[Q+3]=A.x,fa[Q+4]=A.y,fa[Q+5]=A.z,fa[Q+6]=B.x,fa[Q+7]=B.y,fa[Q+8]=B.z,fa[Q+9]=t.x,fa[Q+10]=t.y,fa[Q+11]=t.z,Q+=12;e.bindBuffer(e.ARRAY_BUFFER,w.__webglMorphTargetsBuffers[Z]);e.bufferData(e.ARRAY_BUFFER,S[Z],y)}}if(ta.length){k=0;for(v=M.length;k<v;k++)t=$[M[k]],z=ta[t.a],A=ta[t.b],B=ta[t.c],ia[x]=z.x,ia[x+1]=z.y,ia[x+2]=z.z,ia[x+3]=z.w,ia[x+4]=A.x,ia[x+5]=A.y,ia[x+6]=A.z,ia[x+7]=A.w,ia[x+8]=B.x,ia[x+9]=B.y,ia[x+10]=B.z,ia[x+
11]=B.w,z=va[t.a],A=va[t.b],B=va[t.c],U[x]=z.x,U[x+1]=z.y,U[x+2]=z.z,U[x+3]=z.w,U[x+4]=A.x,U[x+5]=A.y,U[x+6]=A.z,U[x+7]=A.w,U[x+8]=B.x,U[x+9]=B.y,U[x+10]=B.z,U[x+11]=B.w,z=oa[t.a],A=oa[t.b],B=oa[t.c],W[x]=z.x,W[x+1]=z.y,W[x+2]=z.z,W[x+3]=1,W[x+4]=A.x,W[x+5]=A.y,W[x+6]=A.z,W[x+7]=1,W[x+8]=B.x,W[x+9]=B.y,W[x+10]=B.z,W[x+11]=1,z=pa[t.a],A=pa[t.b],B=pa[t.c],X[x]=z.x,X[x+1]=z.y,X[x+2]=z.z,X[x+3]=1,X[x+4]=A.x,X[x+5]=A.y,X[x+6]=A.z,X[x+7]=1,X[x+8]=B.x,X[x+9]=B.y,X[x+10]=B.z,X[x+11]=1,x+=12;k=0;for(v=Y.length;k<
v;k++)t=$[Y[k]],z=ta[t.a],A=ta[t.b],B=ta[t.c],S=ta[t.d],ia[x]=z.x,ia[x+1]=z.y,ia[x+2]=z.z,ia[x+3]=z.w,ia[x+4]=A.x,ia[x+5]=A.y,ia[x+6]=A.z,ia[x+7]=A.w,ia[x+8]=B.x,ia[x+9]=B.y,ia[x+10]=B.z,ia[x+11]=B.w,ia[x+12]=S.x,ia[x+13]=S.y,ia[x+14]=S.z,ia[x+15]=S.w,z=va[t.a],A=va[t.b],B=va[t.c],S=va[t.d],U[x]=z.x,U[x+1]=z.y,U[x+2]=z.z,U[x+3]=z.w,U[x+4]=A.x,U[x+5]=A.y,U[x+6]=A.z,U[x+7]=A.w,U[x+8]=B.x,U[x+9]=B.y,U[x+10]=B.z,U[x+11]=B.w,U[x+12]=S.x,U[x+13]=S.y,U[x+14]=S.z,U[x+15]=S.w,z=oa[t.a],A=oa[t.b],B=oa[t.c],
S=oa[t.d],W[x]=z.x,W[x+1]=z.y,W[x+2]=z.z,W[x+3]=1,W[x+4]=A.x,W[x+5]=A.y,W[x+6]=A.z,W[x+7]=1,W[x+8]=B.x,W[x+9]=B.y,W[x+10]=B.z,W[x+11]=1,W[x+12]=S.x,W[x+13]=S.y,W[x+14]=S.z,W[x+15]=1,z=pa[t.a],A=pa[t.b],B=pa[t.c],t=pa[t.d],X[x]=z.x,X[x+1]=z.y,X[x+2]=z.z,X[x+3]=1,X[x+4]=A.x,X[x+5]=A.y,X[x+6]=A.z,X[x+7]=1,X[x+8]=B.x,X[x+9]=B.y,X[x+10]=B.z,X[x+11]=1,X[x+12]=t.x,X[x+13]=t.y,X[x+14]=t.z,X[x+15]=1,x+=16;x>0&&(e.bindBuffer(e.ARRAY_BUFFER,w.__webglSkinVertexABuffer),e.bufferData(e.ARRAY_BUFFER,W,y),e.bindBuffer(e.ARRAY_BUFFER,
w.__webglSkinVertexBBuffer),e.bufferData(e.ARRAY_BUFFER,X,y),e.bindBuffer(e.ARRAY_BUFFER,w.__webglSkinIndicesBuffer),e.bufferData(e.ARRAY_BUFFER,U,y),e.bindBuffer(e.ARRAY_BUFFER,w.__webglSkinWeightsBuffer),e.bufferData(e.ARRAY_BUFFER,ia,y))}if(xa&&E){k=0;for(v=M.length;k<v;k++)t=$[M[k]],x=t.vertexColors,U=t.color,x.length===3&&E===THREE.VertexColors?(t=x[0],W=x[1],X=x[2]):X=W=t=U,ea[da]=t.r,ea[da+1]=t.g,ea[da+2]=t.b,ea[da+3]=W.r,ea[da+4]=W.g,ea[da+5]=W.b,ea[da+6]=X.r,ea[da+7]=X.g,ea[da+8]=X.b,da+=
9;k=0;for(v=Y.length;k<v;k++)t=$[Y[k]],x=t.vertexColors,U=t.color,x.length===4&&E===THREE.VertexColors?(t=x[0],W=x[1],X=x[2],x=x[3]):x=X=W=t=U,ea[da]=t.r,ea[da+1]=t.g,ea[da+2]=t.b,ea[da+3]=W.r,ea[da+4]=W.g,ea[da+5]=W.b,ea[da+6]=X.r,ea[da+7]=X.g,ea[da+8]=X.b,ea[da+9]=x.r,ea[da+10]=x.g,ea[da+11]=x.b,da+=12;da>0&&(e.bindBuffer(e.ARRAY_BUFFER,w.__webglColorBuffer),e.bufferData(e.ARRAY_BUFFER,ea,y))}if(R&&la.hasTangents){k=0;for(v=M.length;k<v;k++)t=$[M[k]],R=t.vertexTangents,da=R[0],ea=R[1],la=R[2],ba[J]=
da.x,ba[J+1]=da.y,ba[J+2]=da.z,ba[J+3]=da.w,ba[J+4]=ea.x,ba[J+5]=ea.y,ba[J+6]=ea.z,ba[J+7]=ea.w,ba[J+8]=la.x,ba[J+9]=la.y,ba[J+10]=la.z,ba[J+11]=la.w,J+=12;k=0;for(v=Y.length;k<v;k++)t=$[Y[k]],R=t.vertexTangents,da=R[0],ea=R[1],la=R[2],R=R[3],ba[J]=da.x,ba[J+1]=da.y,ba[J+2]=da.z,ba[J+3]=da.w,ba[J+4]=ea.x,ba[J+5]=ea.y,ba[J+6]=ea.z,ba[J+7]=ea.w,ba[J+8]=la.x,ba[J+9]=la.y,ba[J+10]=la.z,ba[J+11]=la.w,ba[J+12]=R.x,ba[J+13]=R.y,ba[J+14]=R.z,ba[J+15]=R.w,J+=16;e.bindBuffer(e.ARRAY_BUFFER,w.__webglTangentBuffer);
e.bufferData(e.ARRAY_BUFFER,ba,y)}if(N&&s){k=0;for(v=M.length;k<v;k++)if(t=$[M[k]],ba=t.vertexNormals,N=t.normal,ba.length===3&&P)for(J=0;J<3;J++)N=ba[J],T[H]=N.x,T[H+1]=N.y,T[H+2]=N.z,H+=3;else for(J=0;J<3;J++)T[H]=N.x,T[H+1]=N.y,T[H+2]=N.z,H+=3;k=0;for(v=Y.length;k<v;k++)if(t=$[Y[k]],ba=t.vertexNormals,N=t.normal,ba.length===4&&P)for(J=0;J<4;J++)N=ba[J],T[H]=N.x,T[H+1]=N.y,T[H+2]=N.z,H+=3;else for(J=0;J<4;J++)T[H]=N.x,T[H+1]=N.y,T[H+2]=N.z,H+=3;e.bindBuffer(e.ARRAY_BUFFER,w.__webglNormalBuffer);
e.bufferData(e.ARRAY_BUFFER,T,y)}if(ua&&qa&&O){k=0;for(v=M.length;k<v;k++)if(H=M[k],H=qa[H],H!==void 0)for(J=0;J<3;J++)T=H[J],aa[V]=T.u,aa[V+1]=T.v,V+=2;k=0;for(v=Y.length;k<v;k++)if(H=Y[k],H=qa[H],H!==void 0)for(J=0;J<4;J++)T=H[J],aa[V]=T.u,aa[V+1]=T.v,V+=2;V>0&&(e.bindBuffer(e.ARRAY_BUFFER,w.__webglUVBuffer),e.bufferData(e.ARRAY_BUFFER,aa,y))}if(ua&&sa&&O){k=0;for(v=M.length;k<v;k++)if(H=M[k],V=sa[H],V!==void 0)for(J=0;J<3;J++)aa=V[J],q[ja]=aa.u,q[ja+1]=aa.v,ja+=2;k=0;for(v=Y.length;k<v;k++)if(H=
Y[k],V=sa[H],V!==void 0)for(J=0;J<4;J++)aa=V[J],q[ja]=aa.u,q[ja+1]=aa.v,ja+=2;ja>0&&(e.bindBuffer(e.ARRAY_BUFFER,w.__webglUV2Buffer),e.bufferData(e.ARRAY_BUFFER,q,y))}if(ra){k=0;for(v=M.length;k<v;k++)p[ha]=L,p[ha+1]=L+1,p[ha+2]=L+2,ha+=3,ga[ca]=L,ga[ca+1]=L+1,ga[ca+2]=L,ga[ca+3]=L+2,ga[ca+4]=L+1,ga[ca+5]=L+2,ca+=6,L+=3;k=0;for(v=Y.length;k<v;k++)p[ha]=L,p[ha+1]=L+1,p[ha+2]=L+3,p[ha+3]=L+1,p[ha+4]=L+2,p[ha+5]=L+3,ha+=6,ga[ca]=L,ga[ca+1]=L+1,ga[ca+2]=L,ga[ca+3]=L+3,ga[ca+4]=L+1,ga[ca+5]=L+2,ga[ca+
6]=L+2,ga[ca+7]=L+3,ca+=8,L+=4;e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,w.__webglFaceBuffer);e.bufferData(e.ELEMENT_ARRAY_BUFFER,p,y);e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,w.__webglLineBuffer);e.bufferData(e.ELEMENT_ARRAY_BUFFER,ga,y)}if(K){J=0;for(L=K.length;J<L;J++)if(p=K[J],p.__original.needsUpdate){q=0;if(p.size===1)if(p.boundTo===void 0||p.boundTo==="vertices"){k=0;for(v=M.length;k<v;k++)t=$[M[k]],p.array[q]=p.value[t.a],p.array[q+1]=p.value[t.b],p.array[q+2]=p.value[t.c],q+=3;k=0;for(v=Y.length;k<
v;k++)t=$[Y[k]],p.array[q]=p.value[t.a],p.array[q+1]=p.value[t.b],p.array[q+2]=p.value[t.c],p.array[q+3]=p.value[t.d],q+=4}else{if(p.boundTo==="faces"){k=0;for(v=M.length;k<v;k++)ga=p.value[M[k]],p.array[q]=ga,p.array[q+1]=ga,p.array[q+2]=ga,q+=3;k=0;for(v=Y.length;k<v;k++)ga=p.value[Y[k]],p.array[q]=ga,p.array[q+1]=ga,p.array[q+2]=ga,p.array[q+3]=ga,q+=4}}else if(p.size===2)if(p.boundTo===void 0||p.boundTo==="vertices"){k=0;for(v=M.length;k<v;k++)t=$[M[k]],z=p.value[t.a],A=p.value[t.b],B=p.value[t.c],
p.array[q]=z.x,p.array[q+1]=z.y,p.array[q+2]=A.x,p.array[q+3]=A.y,p.array[q+4]=B.x,p.array[q+5]=B.y,q+=6;k=0;for(v=Y.length;k<v;k++)t=$[Y[k]],z=p.value[t.a],A=p.value[t.b],B=p.value[t.c],t=p.value[t.d],p.array[q]=z.x,p.array[q+1]=z.y,p.array[q+2]=A.x,p.array[q+3]=A.y,p.array[q+4]=B.x,p.array[q+5]=B.y,p.array[q+6]=t.x,p.array[q+7]=t.y,q+=8}else{if(p.boundTo==="faces"){k=0;for(v=M.length;k<v;k++)B=A=z=ga=p.value[M[k]],p.array[q]=z.x,p.array[q+1]=z.y,p.array[q+2]=A.x,p.array[q+3]=A.y,p.array[q+4]=B.x,
p.array[q+5]=B.y,q+=6;k=0;for(v=Y.length;k<v;k++)t=B=A=z=ga=p.value[Y[k]],p.array[q]=z.x,p.array[q+1]=z.y,p.array[q+2]=A.x,p.array[q+3]=A.y,p.array[q+4]=B.x,p.array[q+5]=B.y,p.array[q+6]=t.x,p.array[q+7]=t.y,q+=8}}else if(p.size===3)if(s=p.type==="c"?["r","g","b"]:["x","y","z"],p.boundTo===void 0||p.boundTo==="vertices"){k=0;for(v=M.length;k<v;k++)t=$[M[k]],z=p.value[t.a],A=p.value[t.b],B=p.value[t.c],p.array[q]=z[s[0]],p.array[q+1]=z[s[1]],p.array[q+2]=z[s[2]],p.array[q+3]=A[s[0]],p.array[q+4]=A[s[1]],
p.array[q+5]=A[s[2]],p.array[q+6]=B[s[0]],p.array[q+7]=B[s[1]],p.array[q+8]=B[s[2]],q+=9;k=0;for(v=Y.length;k<v;k++)t=$[Y[k]],z=p.value[t.a],A=p.value[t.b],B=p.value[t.c],t=p.value[t.d],p.array[q]=z[s[0]],p.array[q+1]=z[s[1]],p.array[q+2]=z[s[2]],p.array[q+3]=A[s[0]],p.array[q+4]=A[s[1]],p.array[q+5]=A[s[2]],p.array[q+6]=B[s[0]],p.array[q+7]=B[s[1]],p.array[q+8]=B[s[2]],p.array[q+9]=t[s[0]],p.array[q+10]=t[s[1]],p.array[q+11]=t[s[2]],q+=12}else{if(p.boundTo==="faces"){k=0;for(v=M.length;k<v;k++)B=
A=z=ga=p.value[M[k]],p.array[q]=z[s[0]],p.array[q+1]=z[s[1]],p.array[q+2]=z[s[2]],p.array[q+3]=A[s[0]],p.array[q+4]=A[s[1]],p.array[q+5]=A[s[2]],p.array[q+6]=B[s[0]],p.array[q+7]=B[s[1]],p.array[q+8]=B[s[2]],q+=9;k=0;for(v=Y.length;k<v;k++)t=B=A=z=ga=p.value[Y[k]],p.array[q]=z[s[0]],p.array[q+1]=z[s[1]],p.array[q+2]=z[s[2]],p.array[q+3]=A[s[0]],p.array[q+4]=A[s[1]],p.array[q+5]=A[s[2]],p.array[q+6]=B[s[0]],p.array[q+7]=B[s[1]],p.array[q+8]=B[s[2]],p.array[q+9]=t[s[0]],p.array[q+10]=t[s[1]],p.array[q+
11]=t[s[2]],q+=12}}else if(p.size===4)if(p.boundTo===void 0||p.boundTo==="vertices"){k=0;for(v=M.length;k<v;k++)t=$[M[k]],z=p.value[t.a],A=p.value[t.b],B=p.value[t.c],p.array[q]=z.x,p.array[q+1]=z.y,p.array[q+2]=z.z,p.array[q+3]=z.w,p.array[q+4]=A.x,p.array[q+5]=A.y,p.array[q+6]=A.z,p.array[q+7]=A.w,p.array[q+8]=B.x,p.array[q+9]=B.y,p.array[q+10]=B.z,p.array[q+11]=B.w,q+=12;k=0;for(v=Y.length;k<v;k++)t=$[Y[k]],z=p.value[t.a],A=p.value[t.b],B=p.value[t.c],t=p.value[t.d],p.array[q]=z.x,p.array[q+1]=
z.y,p.array[q+2]=z.z,p.array[q+3]=z.w,p.array[q+4]=A.x,p.array[q+5]=A.y,p.array[q+6]=A.z,p.array[q+7]=A.w,p.array[q+8]=B.x,p.array[q+9]=B.y,p.array[q+10]=B.z,p.array[q+11]=B.w,p.array[q+12]=t.x,p.array[q+13]=t.y,p.array[q+14]=t.z,p.array[q+15]=t.w,q+=16}else if(p.boundTo==="faces"){k=0;for(v=M.length;k<v;k++)B=A=z=ga=p.value[M[k]],p.array[q]=z.x,p.array[q+1]=z.y,p.array[q+2]=z.z,p.array[q+3]=z.w,p.array[q+4]=A.x,p.array[q+5]=A.y,p.array[q+6]=A.z,p.array[q+7]=A.w,p.array[q+8]=B.x,p.array[q+9]=B.y,
p.array[q+10]=B.z,p.array[q+11]=B.w,q+=12;k=0;for(v=Y.length;k<v;k++)t=B=A=z=ga=p.value[Y[k]],p.array[q]=z.x,p.array[q+1]=z.y,p.array[q+2]=z.z,p.array[q+3]=z.w,p.array[q+4]=A.x,p.array[q+5]=A.y,p.array[q+6]=A.z,p.array[q+7]=A.w,p.array[q+8]=B.x,p.array[q+9]=B.y,p.array[q+10]=B.z,p.array[q+11]=B.w,p.array[q+12]=t.x,p.array[q+13]=t.y,p.array[q+14]=t.z,p.array[q+15]=t.w,q+=16}e.bindBuffer(e.ARRAY_BUFFER,p.buffer);e.bufferData(e.ARRAY_BUFFER,p.array,y)}}C&&(delete w.__inittedArrays,delete w.__colorArray,
delete w.__normalArray,delete w.__tangentArray,delete w.__uvArray,delete w.__uv2Array,delete w.__faceArray,delete w.__vertexArray,delete w.__lineArray,delete w.__skinVertexAArray,delete w.__skinVertexBArray,delete w.__skinIndexArray,delete w.__skinWeightArray)}}n.__dirtyVertices=!1;n.__dirtyMorphTargets=!1;n.__dirtyElements=!1;n.__dirtyUvs=!1;n.__dirtyNormals=!1;n.__dirtyColors=!1;n.__dirtyTangents=!1;o.attributes&&u(o)}else if(ka instanceof THREE.Ribbon){if(n.__dirtyVertices||n.__dirtyColors){o=
n;ka=e.DYNAMIC_DRAW;s=D=s=C=C=void 0;E=o.vertices;G=o.colors;k=E.length;w=G.length;v=o.__vertexArray;y=o.__colorArray;K=o.__dirtyColors;if(o.__dirtyVertices){for(C=0;C<k;C++)s=E[C].position,D=C*3,v[D]=s.x,v[D+1]=s.y,v[D+2]=s.z;e.bindBuffer(e.ARRAY_BUFFER,o.__webglVertexBuffer);e.bufferData(e.ARRAY_BUFFER,v,ka)}if(K){for(C=0;C<w;C++)s=G[C],D=C*3,y[D]=s.r,y[D+1]=s.g,y[D+2]=s.b;e.bindBuffer(e.ARRAY_BUFFER,o.__webglColorBuffer);e.bufferData(e.ARRAY_BUFFER,y,ka)}}n.__dirtyVertices=!1;n.__dirtyColors=!1}else if(ka instanceof
THREE.Line){o=d(ka,w);y=o.attributes&&r(o);if(n.__dirtyVertices||n.__dirtyColors||y){ka=n;D=e.DYNAMIC_DRAW;k=G=P=E=O=void 0;E=ka.vertices;w=ka.colors;k=E.length;y=w.length;v=ka.__vertexArray;C=ka.__colorArray;K=ka.__dirtyColors;s=ka.__webglCustomAttributesList;L=$=Y=M=P=O=void 0;if(ka.__dirtyVertices){for(O=0;O<k;O++)P=E[O].position,G=O*3,v[G]=P.x,v[G+1]=P.y,v[G+2]=P.z;e.bindBuffer(e.ARRAY_BUFFER,ka.__webglVertexBuffer);e.bufferData(e.ARRAY_BUFFER,v,D)}if(K){for(E=0;E<y;E++)k=w[E],G=E*3,C[G]=k.r,
C[G+1]=k.g,C[G+2]=k.b;e.bindBuffer(e.ARRAY_BUFFER,ka.__webglColorBuffer);e.bufferData(e.ARRAY_BUFFER,C,D)}if(s){O=0;for(P=s.length;O<P;O++)if(L=s[O],L.needsUpdate&&(L.boundTo===void 0||L.boundTo==="vertices")){G=0;Y=L.value.length;if(L.size===1)for(M=0;M<Y;M++)L.array[M]=L.value[M];else if(L.size===2)for(M=0;M<Y;M++)$=L.value[M],L.array[G]=$.x,L.array[G+1]=$.y,G+=2;else if(L.size===3)if(L.type==="c")for(M=0;M<Y;M++)$=L.value[M],L.array[G]=$.r,L.array[G+1]=$.g,L.array[G+2]=$.b,G+=3;else for(M=0;M<
Y;M++)$=L.value[M],L.array[G]=$.x,L.array[G+1]=$.y,L.array[G+2]=$.z,G+=3;else if(L.size===4)for(M=0;M<Y;M++)$=L.value[M],L.array[G]=$.x,L.array[G+1]=$.y,L.array[G+2]=$.z,L.array[G+3]=$.w,G+=4;e.bindBuffer(e.ARRAY_BUFFER,L.buffer);e.bufferData(e.ARRAY_BUFFER,L.array,D)}}}n.__dirtyVertices=!1;n.__dirtyColors=!1;o.attributes&&u(o)}else if(ka instanceof THREE.ParticleSystem)o=d(ka,w),y=o.attributes&&r(o),(n.__dirtyVertices||n.__dirtyColors||ka.sortParticles||y)&&h(n,e.DYNAMIC_DRAW,ka),n.__dirtyVertices=
!1,n.__dirtyColors=!1,o.attributes&&u(o)};this.initMaterial=function(a,b,c,d){var f,g,h,i;a instanceof THREE.MeshDepthMaterial?i="depth":a instanceof THREE.MeshNormalMaterial?i="normal":a instanceof THREE.MeshBasicMaterial?i="basic":a instanceof THREE.MeshLambertMaterial?i="lambert":a instanceof THREE.MeshPhongMaterial?i="phong":a instanceof THREE.LineBasicMaterial?i="basic":a instanceof THREE.ParticleBasicMaterial&&(i="particle_basic");if(i){var j=THREE.ShaderLib[i];a.uniforms=THREE.UniformsUtils.clone(j.uniforms);
a.vertexShader=j.vertexShader;a.fragmentShader=j.fragmentShader}var l,n,o;l=o=j=0;for(n=b.length;l<n;l++)h=b[l],h instanceof THREE.SpotLight&&o++,h instanceof THREE.DirectionalLight&&o++,h instanceof THREE.PointLight&&j++;j+o<=va?l=o:(l=Math.ceil(va*o/(j+o)),j=va-l);h={directional:l,point:j};j=o=0;for(l=b.length;j<l;j++)n=b[j],n instanceof THREE.SpotLight&&n.castShadow&&o++;var k=50;if(d!==void 0&&d instanceof THREE.SkinnedMesh)k=d.bones.length;var m;a:{l=a.fragmentShader;n=a.vertexShader;var j=a.uniforms,
b=a.attributes,c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,morphTargets:a.morphTargets,maxMorphTargets:this.maxMorphTargets,maxDirLights:h.directional,maxPointLights:h.point,maxBones:k,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapWidth:this.shadowMapWidth,shadowMapHeight:this.shadowMapHeight,maxShadows:o,alphaTest:a.alphaTest,metal:a.metal,
perPixel:a.perPixel},r,d=[];i?d.push(i):(d.push(l),d.push(n));for(r in c)d.push(r),d.push(c[r]);i=d.join();r=0;for(d=ya.length;r<d;r++)if(ya[r].code===i){m=ya[r].program;break a}r=e.createProgram();d=[Ma?"#define VERTEX_TEXTURES":"",I.gammaInput?"#define GAMMA_INPUT":"",I.gammaOutput?"#define GAMMA_OUTPUT":"",I.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+
c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform mat4 cameraInverseMatrix;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
h=["#ifdef GL_ES","precision "+ua+" float;","#endif","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",I.gammaInput?"#define GAMMA_INPUT":"",I.gammaOutput?"#define GAMMA_OUTPUT":"",I.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":
"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapSoft?"#define SHADOWMAP_WIDTH "+c.shadowMapWidth.toFixed(1):"",c.shadowMapSoft?"#define SHADOWMAP_HEIGHT "+c.shadowMapHeight.toFixed(1):"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");e.attachShader(r,aa("fragment",h+l));e.attachShader(r,
aa("vertex",d+n));e.linkProgram(r);e.getProgramParameter(r,e.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+e.getProgramParameter(r,e.VALIDATE_STATUS)+", gl error ["+e.getError()+"]");r.uniforms={};r.attributes={};var u,d=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","cameraInverseMatrix","boneGlobalMatrices","morphTargetInfluences"];for(u in j)d.push(u);u=d;d=0;for(j=u.length;d<j;d++)l=u[d],r.uniforms[l]=e.getUniformLocation(r,
l);d=["position","normal","uv","uv2","tangent","color","skinVertexA","skinVertexB","skinIndex","skinWeight"];for(u=0;u<c.maxMorphTargets;u++)d.push("morphTarget"+u);for(m in b)d.push(m);m=d;u=0;for(b=m.length;u<b;u++)c=m[u],r.attributes[c]=e.getAttribLocation(r,c);r.id=ya.length;ya.push({program:r,code:i});I.info.memory.programs=ya.length;m=r}a.program=m;m=a.program.attributes;m.position>=0&&e.enableVertexAttribArray(m.position);m.color>=0&&e.enableVertexAttribArray(m.color);m.normal>=0&&e.enableVertexAttribArray(m.normal);
m.tangent>=0&&e.enableVertexAttribArray(m.tangent);a.skinning&&m.skinVertexA>=0&&m.skinVertexB>=0&&m.skinIndex>=0&&m.skinWeight>=0&&(e.enableVertexAttribArray(m.skinVertexA),e.enableVertexAttribArray(m.skinVertexB),e.enableVertexAttribArray(m.skinIndex),e.enableVertexAttribArray(m.skinWeight));if(a.attributes)for(g in a.attributes)m[g]!==void 0&&m[g]>=0&&e.enableVertexAttribArray(m[g]);if(a.morphTargets)for(g=a.numSupportedMorphTargets=0;g<this.maxMorphTargets;g++)u="morphTarget"+g,m[u]>=0&&(e.enableVertexAttribArray(m[u]),
a.numSupportedMorphTargets++);a.uniformsList=[];for(f in a.uniforms)a.uniformsList.push([a.uniforms[f],f])};this.setFaceCulling=function(a,b){a?(!b||b==="ccw"?e.frontFace(e.CCW):e.frontFace(e.CW),a==="back"?e.cullFace(e.BACK):a==="front"?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK),e.enable(e.CULL_FACE)):e.disable(e.CULL_FACE)};this.setObjectFaces=function(a){if(ra!==a.doubleSided)a.doubleSided?e.disable(e.CULL_FACE):e.enable(e.CULL_FACE),ra=a.doubleSided;if(T!==a.flipSided)a.flipSided?e.frontFace(e.CW):
e.frontFace(e.CCW),T=a.flipSided};this.setDepthTest=function(a){oa!==a&&(a?e.enable(e.DEPTH_TEST):e.disable(e.DEPTH_TEST),oa=a)};this.setBlending=function(a){if(a!==sa){switch(a){case THREE.AdditiveBlending:e.blendEquation(e.FUNC_ADD);e.blendFunc(e.SRC_ALPHA,e.ONE);break;case THREE.SubtractiveBlending:e.blendEquation(e.FUNC_ADD);e.blendFunc(e.ZERO,e.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:e.blendEquation(e.FUNC_ADD);e.blendFunc(e.ZERO,e.SRC_COLOR);break;default:e.blendEquationSeparate(e.FUNC_ADD,
e.FUNC_ADD),e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)}sa=a}};this.setTexture=function(a,b){if(a.needsUpdate){if(!a.__webglInit)a.__webglInit=!0,a.__webglTexture=e.createTexture(),I.info.memory.textures++;e.activeTexture(e.TEXTURE0+b);e.bindTexture(e.TEXTURE_2D,a.__webglTexture);var c=C(e.TEXTURE_2D,a,a.image);a instanceof THREE.DataTexture?e.texImage2D(e.TEXTURE_2D,0,O(a.format),a.image.width,a.image.height,0,O(a.format),e.UNSIGNED_BYTE,a.image.data):e.texImage2D(e.TEXTURE_2D,
0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,a.image);c&&e.generateMipmap(e.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdated)a.onUpdated()}else e.activeTexture(e.TEXTURE0+b),e.bindTexture(e.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){if(a.depthBuffer===void 0)a.depthBuffer=!0;if(a.stencilBuffer===void 0)a.stencilBuffer=!0;a.__webglTexture=e.createTexture();if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];e.bindTexture(e.TEXTURE_CUBE_MAP,
a.__webglTexture);C(e.TEXTURE_CUBE_MAP,a,a);for(var c=0;c<6;c++){a.__webglFramebuffer[c]=e.createFramebuffer();a.__webglRenderbuffer[c]=e.createRenderbuffer();e.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+c,0,O(a.format),a.width,a.height,0,O(a.format),O(a.type),null);var d=a,f=e.TEXTURE_CUBE_MAP_POSITIVE_X+c;e.bindFramebuffer(e.FRAMEBUFFER,a.__webglFramebuffer[c]);e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,f,d.__webglTexture,0);E(a.__webglRenderbuffer[c],a)}}else a.__webglFramebuffer=e.createFramebuffer(),
a.__webglRenderbuffer=e.createRenderbuffer(),e.bindTexture(e.TEXTURE_2D,a.__webglTexture),C(e.TEXTURE_2D,a,a),e.texImage2D(e.TEXTURE_2D,0,O(a.format),a.width,a.height,0,O(a.format),O(a.type),null),c=e.TEXTURE_2D,e.bindFramebuffer(e.FRAMEBUFFER,a.__webglFramebuffer),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,c,a.__webglTexture,0),E(a.__webglRenderbuffer,a);b?e.bindTexture(e.TEXTURE_CUBE_MAP,null):e.bindTexture(e.TEXTURE_2D,null);e.bindRenderbuffer(e.RENDERBUFFER,null);e.bindFramebuffer(e.FRAMEBUFFER,
null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,f=d=0):(b=null,c=Ga,a=Ha,d=Ea,f=Fa);b!==qa&&(e.bindFramebuffer(e.FRAMEBUFFER,b),e.viewport(d,f,c,a),qa=b);Ja=c;Ka=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};
THREE.WebGLRenderTarget=function(a,b,d){this.width=a;this.height=b;d=d||{};this.wrapS=d.wrapS!==void 0?d.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=d.wrapT!==void 0?d.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=d.magFilter!==void 0?d.magFilter:THREE.LinearFilter;this.minFilter=d.minFilter!==void 0?d.minFilter:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=d.format!==void 0?d.format:THREE.RGBAFormat;this.type=d.type!==void 0?d.type:
THREE.UnsignedByteType;this.depthBuffer=d.depthBuffer!==void 0?d.depthBuffer:!0;this.stencilBuffer=d.stencilBuffer!==void 0?d.stencilBuffer:!0};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;return a};THREE.WebGLRenderTargetCube=function(a,b,d){THREE.WebGLRenderTarget.call(this,a,b,d);this.activeCubeFace=0};
THREE.WebGLRenderTargetCube.prototype=new THREE.WebGLRenderTarget;THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;THREE.LensFlare=function(a,b,d,c,f){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;a!==void 0&&this.add(a,b,d,c,f)};THREE.LensFlare.prototype=new THREE.Object3D;THREE.LensFlare.prototype.constructor=THREE.LensFlare;THREE.LensFlare.prototype.supr=THREE.Object3D.prototype;
THREE.LensFlare.prototype.add=function(a,b,d,c,f,g){b===void 0&&(b=-1);d===void 0&&(d=0);g===void 0&&(g=1);f===void 0&&(f=new THREE.Color(16777215));if(c===void 0)c=THREE.BillboardBlending;d=Math.min(d,Math.max(0,d));this.lensFlares.push({texture:a,size:b,distance:d,x:0,y:0,z:0,scale:1,rotation:1,opacity:g,color:f,blending:c})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,d,c=-this.positionScreen.x*2,f=-this.positionScreen.y*2;for(a=0;a<b;a++)d=this.lensFlares[a],d.x=this.positionScreen.x+c*d.distance,d.y=this.positionScreen.y+f*d.distance,d.wantedRotation=d.x*Math.PI*0.25,d.rotation+=(d.wantedRotation-d.rotation)*0.25};
THREE.LensFlarePlugin=function(){function a(a){var c=b.createProgram(),d=b.createShader(b.FRAGMENT_SHADER),i=b.createShader(b.VERTEX_SHADER);b.shaderSource(d,a.fragmentShader);b.shaderSource(i,a.vertexShader);b.compileShader(d);b.compileShader(i);b.attachShader(c,d);b.attachShader(c,i);b.linkProgram(c);return c}var b,d,c={};this.init=function(f){b=f.context;d=f;c.vertices=new Float32Array(16);c.faces=new Uint16Array(6);f=0;c.vertices[f++]=-1;c.vertices[f++]=-1;c.vertices[f++]=0;c.vertices[f++]=0;
c.vertices[f++]=1;c.vertices[f++]=-1;c.vertices[f++]=1;c.vertices[f++]=0;c.vertices[f++]=1;c.vertices[f++]=1;c.vertices[f++]=1;c.vertices[f++]=1;c.vertices[f++]=-1;c.vertices[f++]=1;c.vertices[f++]=0;c.vertices[f++]=1;f=0;c.faces[f++]=0;c.faces[f++]=1;c.faces[f++]=2;c.faces[f++]=0;c.faces[f++]=2;c.faces[f++]=3;c.vertexBuffer=b.createBuffer();c.elementBuffer=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,c.vertexBuffer);b.bufferData(b.ARRAY_BUFFER,c.vertices,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,
c.elementBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,c.faces,b.STATIC_DRAW);c.tempTexture=b.createTexture();c.occlusionTexture=b.createTexture();b.bindTexture(b.TEXTURE_2D,c.tempTexture);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);
b.bindTexture(b.TEXTURE_2D,c.occlusionTexture);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(c.hasVertexTexture=!1,c.program=a(THREE.ShaderFlares.lensFlare)):(c.hasVertexTexture=
!0,c.program=a(THREE.ShaderFlares.lensFlareVertexTexture));c.attributes={};c.uniforms={};c.attributes.vertex=b.getAttribLocation(c.program,"position");c.attributes.uv=b.getAttribLocation(c.program,"uv");c.uniforms.renderType=b.getUniformLocation(c.program,"renderType");c.uniforms.map=b.getUniformLocation(c.program,"map");c.uniforms.occlusionMap=b.getUniformLocation(c.program,"occlusionMap");c.uniforms.opacity=b.getUniformLocation(c.program,"opacity");c.uniforms.color=b.getUniformLocation(c.program,
"color");c.uniforms.scale=b.getUniformLocation(c.program,"scale");c.uniforms.rotation=b.getUniformLocation(c.program,"rotation");c.uniforms.screenPosition=b.getUniformLocation(c.program,"screenPosition");c.attributesEnabled=!1};this.render=function(a,g,h,i){var a=a.__webglFlares,o=a.length;if(o){var n=new THREE.Vector3,j=i/h,m=h*0.5,r=i*0.5,u=16/i,l=new THREE.Vector2(u*j,u),F=new THREE.Vector3(1,1,0),y=new THREE.Vector2(1,1),K=c.uniforms,u=c.attributes;b.useProgram(c.program);if(!c.attributesEnabled)b.enableVertexAttribArray(c.attributes.vertex),
b.enableVertexAttribArray(c.attributes.uv),c.attributesEnabled=!0;b.uniform1i(K.occlusionMap,0);b.uniform1i(K.map,1);b.bindBuffer(b.ARRAY_BUFFER,c.vertexBuffer);b.vertexAttribPointer(u.vertex,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(u.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,c.elementBuffer);b.disable(b.CULL_FACE);b.depthMask(!1);var H,R,aa,C,E;for(H=0;H<o;H++)if(u=16/i,l.set(u*j,u),C=a[H],n.set(C.matrixWorld.n14,C.matrixWorld.n24,C.matrixWorld.n34),g.matrixWorldInverse.multiplyVector3(n),
g.projectionMatrix.multiplyVector3(n),F.copy(n),y.x=F.x*m+m,y.y=F.y*r+r,c.hasVertexTexture||y.x>0&&y.x<h&&y.y>0&&y.y<i){b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,c.tempTexture);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,y.x-8,y.y-8,16,16,0);b.uniform1i(K.renderType,0);b.uniform2f(K.scale,l.x,l.y);b.uniform3f(K.screenPosition,F.x,F.y,F.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,c.occlusionTexture);
b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,y.x-8,y.y-8,16,16,0);b.uniform1i(K.renderType,1);b.disable(b.DEPTH_TEST);b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,c.tempTexture);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);C.positionScreen.copy(F);C.customUpdateCallback?C.customUpdateCallback(C):C.updateLensFlares();b.uniform1i(K.renderType,2);b.enable(b.BLEND);R=0;for(aa=C.lensFlares.length;R<aa;R++)if(E=C.lensFlares[R],E.opacity>0.0010&&E.scale>0.0010)F.x=E.x,F.y=E.y,F.z=E.z,u=E.size*E.scale/
i,l.x=u*j,l.y=u,b.uniform3f(K.screenPosition,F.x,F.y,F.z),b.uniform2f(K.scale,l.x,l.y),b.uniform1f(K.rotation,E.rotation),b.uniform1f(K.opacity,E.opacity),b.uniform3f(K.color,E.color.r,E.color.g,E.color.b),d.setBlending(E.blending),d.setTexture(E.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0)}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.ShadowMapPlugin=function(){var a,b,d,c,f,g=new THREE.Frustum,h=new THREE.Matrix4;this.shadowMatrix=[];this.shadowMap=[];this.init=function(f){a=f.context;b=f;var f=THREE.ShaderLib.depthRGBA,g=THREE.UniformsUtils.clone(f.uniforms);d=new THREE.ShaderMaterial({fragmentShader:f.fragmentShader,vertexShader:f.vertexShader,uniforms:g});c=new THREE.ShaderMaterial({fragmentShader:f.fragmentShader,vertexShader:f.vertexShader,uniforms:g,morphTargets:!0});d._shadowPass=!0;c._shadowPass=!0};this.render=
function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(i){var o,n,j,m,r,u,l,F,y=0,K=i.lights;f||(f=new THREE.PerspectiveCamera(b.shadowCameraFov,b.shadowMapWidth/b.shadowMapHeight,b.shadowCameraNear,b.shadowCameraFar));o=0;for(n=K.length;o<n;o++)if(l=K[o],l.castShadow&&l instanceof THREE.SpotLight){this.shadowMap[y]||(this.shadowMap[y]=new THREE.WebGLRenderTarget(b.shadowMapWidth,b.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,
format:THREE.RGBAFormat}),this.shadowMatrix[y]=new THREE.Matrix4);j=this.shadowMap[y];m=this.shadowMatrix[y];f.position.copy(l.position);f.lookAt(l.target.position);f.parent==null&&(console.warn("Camera is not on the Scene. Adding it..."),i.add(f),b.autoUpdateScene&&i.updateMatrixWorld());f.matrixWorldInverse.getInverse(f.matrixWorld);m.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);m.multiplySelf(f.projectionMatrix);m.multiplySelf(f.matrixWorldInverse);if(!f._viewMatrixArray)f._viewMatrixArray=
new Float32Array(16);f.matrixWorldInverse.flattenToArray(f._viewMatrixArray);if(!f._projectionMatrixArray)f._projectionMatrixArray=new Float32Array(16);f.projectionMatrix.flattenToArray(f._projectionMatrixArray);h.multiply(f.projectionMatrix,f.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(j);a.clearColor(1,0,1,1);b.clear();j=b.getClearColor();m=b.getClearAlpha();a.clearColor(j.r,j.g,j.b,m);F=i.__webglObjects;j=0;for(m=F.length;j<m;j++)if(r=F[j],l=r.object,r.render=!1,l.visible&&l.castShadow&&
(!(l instanceof THREE.Mesh)||!l.frustumCulled||g.contains(l)))l.matrixWorld.flattenToArray(l._objectMatrixArray),l._modelViewMatrix.multiplyToArray(f.matrixWorldInverse,l.matrixWorld,l._modelViewMatrixArray),r.render=!0;b.setDepthTest(!0);b.setBlending(THREE.NormalBlending);j=0;for(m=F.length;j<m;j++)if(r=F[j],r.render)l=r.object,r=r.buffer,b.setObjectFaces(l),u=l.customDepthMaterial?l.customDepthMaterial:l.geometry.morphTargets.length?c:d,b.renderBuffer(f,K,null,u,r,l);F=i.__webglObjectsImmediate;
j=0;for(m=F.length;j<m;j++)r=F[j],l=r.object,l.visible&&l.castShadow&&(l.matrixAutoUpdate&&l.matrixWorld.flattenToArray(l._objectMatrixArray),l._modelViewMatrix.multiplyToArray(f.matrixWorldInverse,l.matrixWorld,l._modelViewMatrixArray),b.renderImmediateObject(f,K,null,d,l));y++}}};
THREE.SpritePlugin=function(){function a(a,b){return b.z-a.z}var b,d,c={};this.init=function(a){b=a.context;d=a;c.vertices=new Float32Array(16);c.faces=new Uint16Array(6);a=0;c.vertices[a++]=-1;c.vertices[a++]=-1;c.vertices[a++]=0;c.vertices[a++]=1;c.vertices[a++]=1;c.vertices[a++]=-1;c.vertices[a++]=1;c.vertices[a++]=1;c.vertices[a++]=1;c.vertices[a++]=1;c.vertices[a++]=1;c.vertices[a++]=0;c.vertices[a++]=-1;c.vertices[a++]=1;c.vertices[a++]=0;a=c.vertices[a++]=0;c.faces[a++]=0;c.faces[a++]=1;c.faces[a++]=
2;c.faces[a++]=0;c.faces[a++]=2;c.faces[a++]=3;c.vertexBuffer=b.createBuffer();c.elementBuffer=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,c.vertexBuffer);b.bufferData(b.ARRAY_BUFFER,c.vertices,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,c.elementBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,c.faces,b.STATIC_DRAW);var a=THREE.ShaderSprite.sprite,g=b.createProgram(),h=b.createShader(b.FRAGMENT_SHADER),i=b.createShader(b.VERTEX_SHADER);b.shaderSource(h,a.fragmentShader);b.shaderSource(i,a.vertexShader);
b.compileShader(h);b.compileShader(i);b.attachShader(g,h);b.attachShader(g,i);b.linkProgram(g);c.program=g;c.attributes={};c.uniforms={};c.attributes.position=b.getAttribLocation(c.program,"position");c.attributes.uv=b.getAttribLocation(c.program,"uv");c.uniforms.uvOffset=b.getUniformLocation(c.program,"uvOffset");c.uniforms.uvScale=b.getUniformLocation(c.program,"uvScale");c.uniforms.rotation=b.getUniformLocation(c.program,"rotation");c.uniforms.scale=b.getUniformLocation(c.program,"scale");c.uniforms.alignment=
b.getUniformLocation(c.program,"alignment");c.uniforms.color=b.getUniformLocation(c.program,"color");c.uniforms.map=b.getUniformLocation(c.program,"map");c.uniforms.opacity=b.getUniformLocation(c.program,"opacity");c.uniforms.useScreenCoordinates=b.getUniformLocation(c.program,"useScreenCoordinates");c.uniforms.affectedByDistance=b.getUniformLocation(c.program,"affectedByDistance");c.uniforms.screenPosition=b.getUniformLocation(c.program,"screenPosition");c.uniforms.modelViewMatrix=b.getUniformLocation(c.program,
"modelViewMatrix");c.uniforms.projectionMatrix=b.getUniformLocation(c.program,"projectionMatrix");c.attributesEnabled=!1};this.render=function(f,g,h,i){var f=f.__webglSprites,o=f.length;if(o){var n=c.attributes,j=c.uniforms,m=i/h;h*=0.5;var r=i*0.5,u=!0;b.useProgram(c.program);if(!c.attributesEnabled)b.enableVertexAttribArray(n.position),b.enableVertexAttribArray(n.uv),c.attributesEnabled=!0;b.disable(b.CULL_FACE);b.enable(b.BLEND);b.depthMask(!0);b.bindBuffer(b.ARRAY_BUFFER,c.vertexBuffer);b.vertexAttribPointer(n.position,
2,b.FLOAT,!1,16,0);b.vertexAttribPointer(n.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,c.elementBuffer);b.uniformMatrix4fv(j.projectionMatrix,!1,g._projectionMatrixArray);b.activeTexture(b.TEXTURE0);b.uniform1i(j.map,0);for(var l,F=[],n=0;n<o;n++)if(l=f[n],l.visible&&l.opacity!==0)l.useScreenCoordinates?l.z=-l.position.z:(l._modelViewMatrix.multiplyToArray(g.matrixWorldInverse,l.matrixWorld,l._modelViewMatrixArray),l.z=-l._modelViewMatrix.n34);f.sort(a);for(n=0;n<o;n++)l=f[n],l.visible&&
l.opacity!==0&&l.map&&l.map.image&&l.map.image.width&&(l.useScreenCoordinates?(b.uniform1i(j.useScreenCoordinates,1),b.uniform3f(j.screenPosition,(l.position.x-h)/h,(r-l.position.y)/r,Math.max(0,Math.min(1,l.position.z)))):(b.uniform1i(j.useScreenCoordinates,0),b.uniform1i(j.affectedByDistance,l.affectedByDistance?1:0),b.uniformMatrix4fv(j.modelViewMatrix,!1,l._modelViewMatrixArray)),g=l.map.image.width/(l.scaleByViewport?i:1),F[0]=g*m*l.scale.x,F[1]=g*l.scale.y,b.uniform2f(j.uvScale,l.uvScale.x,
l.uvScale.y),b.uniform2f(j.uvOffset,l.uvOffset.x,l.uvOffset.y),b.uniform2f(j.alignment,l.alignment.x,l.alignment.y),b.uniform1f(j.opacity,l.opacity),b.uniform3f(j.color,l.color.r,l.color.g,l.color.b),b.uniform1f(j.rotation,l.rotation),b.uniform2fv(j.scale,F),l.mergeWith3D&&!u?(b.enable(b.DEPTH_TEST),u=!0):!l.mergeWith3D&&u&&(b.disable(b.DEPTH_TEST),u=!1),d.setBlending(l.blending),d.setTexture(l.map,0),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};
THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"}};
