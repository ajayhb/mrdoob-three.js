// ThreeWebGL.js r46dev - http://github.com/mrdoob/three.js
var THREE=THREE||{};if(!self.Int32Array)self.Int32Array=Array,self.Float32Array=Array;THREE.Color=function(a){a!==void 0&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var e,f,g;if(c===0)this.r=this.g=this.b=0;else switch(e=Math.floor(a*6),f=a*6-e,a=c*(1-b),g=c*(1-
b*f),b=c*(1-b*(1-f)),e){case 1:this.r=g;this.g=c;this.b=a;break;case 2:this.r=a;this.g=c;this.b=b;break;case 3:this.r=a;this.g=g;this.b=c;break;case 4:this.r=b;this.g=a;this.b=c;break;case 5:this.r=c;this.g=a;this.b=g;break;case 6:case 0:this.r=c,this.g=b,this.b=a}return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},getHex:function(){return~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},getContextStyle:function(){return"rgb("+
Math.floor(this.r*255)+","+Math.floor(this.g*255)+","+Math.floor(this.b*255)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},
divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},
equals:function(a){return a.x===this.x&&a.y===this.y}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},
addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},
divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):this.set(0,0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return this.x+this.y+this.z},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){return this.set(this.y*a.z-this.z*a.y,this.z*a.x-this.x*a.z,this.x*a.y-this.y*a.x)},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,a).lengthSq()},setPositionFromMatrix:function(a){this.x=a.n14;this.y=a.n24;this.z=a.n34},setRotationFromMatrix:function(a){var b=Math.cos(this.y);this.y=Math.asin(a.n13);
Math.abs(b)>1.0E-5?(this.x=Math.atan2(-a.n23/b,a.n33/b),this.z=Math.atan2(-a.n12/b,a.n11/b)):(this.x=0,this.z=Math.atan2(a.n21,a.n22))},isZero:function(){return this.lengthSq()<1.0E-4}};THREE.Vector4=function(a,b,c,e){this.x=a||0;this.y=b||0;this.z=c||0;this.w=e!==void 0?e:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,e){this.x=a;this.y=b;this.z=c;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w!==void 0?a.w:1},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-
b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},
normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this}};THREE.Ray=function(a,b){this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3};
THREE.Ray.prototype={constructor:THREE.Ray,intersectScene:function(a){return this.intersectObjects(a.children)},intersectObjects:function(a){var b,c,e=[];b=0;for(c=a.length;b<c;b++)Array.prototype.push.apply(e,this.intersectObject(a[b]));e.sort(function(a,b){return a.distance-b.distance});return e},intersectObject:function(a){function b(a,b,c){var e;e=c.clone().subSelf(a).dot(b);if(e<=0)return null;a=a.clone().addSelf(b.clone().multiplyScalar(e));return c.distanceTo(a)}function c(a,b,c,G){e.copy(G).subSelf(b);
f.copy(c).subSelf(b);g.copy(a).subSelf(b);i=e.dot(e);h=e.dot(f);p=e.dot(g);s=f.dot(f);l=f.dot(g);q=1/(i*s-h*h);w=(s*p-h*l)*q;C=(i*l-h*p)*q;return w>=0&&C>=0&&w+C<1}for(var e=new THREE.Vector3,f=new THREE.Vector3,g=new THREE.Vector3,i,h,p,s,l,q,w,C,G,N=[],D=0,ja=a.children.length;D<ja;D++)Array.prototype.push.apply(N,this.intersectObject(a.children[D]));if(a instanceof THREE.Particle){D=b(this.origin,this.direction,a.matrixWorld.getPosition());if(D===null||D>a.scale.x)return[];G={distance:D,point:a.position,
face:null,object:a};N.push(G)}else if(a instanceof THREE.Mesh){D=b(this.origin,this.direction,a.matrixWorld.getPosition());if(D===null||D>a.geometry.boundingSphere.radius*Math.max(a.scale.x,Math.max(a.scale.y,a.scale.z)))return N;var O,P,ka,E,ba,F,L,ha,H=a.geometry,T=H.vertices;a.matrixRotationWorld.extractRotation(a.matrixWorld);D=0;for(ja=H.faces.length;D<ja;D++)if(G=H.faces[D],L=this.origin.clone(),ha=this.direction.clone(),E=a.matrixWorld,O=E.multiplyVector3(G.centroid.clone()).subSelf(L),F=O.dot(ha),
!(F<=0)&&(O=E.multiplyVector3(T[G.a].position.clone()),P=E.multiplyVector3(T[G.b].position.clone()),ka=E.multiplyVector3(T[G.c].position.clone()),E=G instanceof THREE.Face4?E.multiplyVector3(T[G.d].position.clone()):null,ba=a.matrixRotationWorld.multiplyVector3(G.normal.clone()),F=ha.dot(ba),a.doubleSided||(a.flipSided?F>0:F<0)))if(F=ba.dot((new THREE.Vector3).sub(O,L))/F,L=L.addSelf(ha.multiplyScalar(F)),G instanceof THREE.Face3)c(L,O,P,ka)&&(G={distance:this.origin.distanceTo(L),point:L,face:G,
object:a},N.push(G));else if(G instanceof THREE.Face4&&(c(L,O,P,E)||c(L,P,ka,E)))G={distance:this.origin.distanceTo(L),point:L,face:G,object:a},N.push(G)}return N}};
THREE.Rectangle=function(){function a(){g=e-b;i=f-c}var b,c,e,f,g,i,h=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return g};this.getHeight=function(){return i};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return e};this.getBottom=function(){return f};this.set=function(g,i,l,q){h=!1;b=g;c=i;e=l;f=q;a()};this.addPoint=function(g,i){h?(h=!1,b=g,c=i,e=g,f=i):(b=b<g?b:g,c=c<i?c:i,e=e>g?e:g,f=f>i?f:i);a()};this.add3Points=
function(g,i,l,q,w,C){h?(h=!1,b=g<l?g<w?g:w:l<w?l:w,c=i<q?i<C?i:C:q<C?q:C,e=g>l?g>w?g:w:l>w?l:w,f=i>q?i>C?i:C:q>C?q:C):(b=g<l?g<w?g<b?g:b:w<b?w:b:l<w?l<b?l:b:w<b?w:b,c=i<q?i<C?i<c?i:c:C<c?C:c:q<C?q<c?q:c:C<c?C:c,e=g>l?g>w?g>e?g:e:w>e?w:e:l>w?l>e?l:e:w>e?w:e,f=i>q?i>C?i>f?i:f:C>f?C:f:q>C?q>f?q:f:C>f?C:f);a()};this.addRectangle=function(g){h?(h=!1,b=g.getLeft(),c=g.getTop(),e=g.getRight(),f=g.getBottom()):(b=b<g.getLeft()?b:g.getLeft(),c=c<g.getTop()?c:g.getTop(),e=e>g.getRight()?e:g.getRight(),f=f>
g.getBottom()?f:g.getBottom());a()};this.inflate=function(g){b-=g;c-=g;e+=g;f+=g;a()};this.minSelf=function(g){b=b>g.getLeft()?b:g.getLeft();c=c>g.getTop()?c:g.getTop();e=e<g.getRight()?e:g.getRight();f=f<g.getBottom()?f:g.getBottom();a()};this.intersects=function(a){return Math.min(e,a.getRight())-Math.max(b,a.getLeft())>=0&&Math.min(f,a.getBottom())-Math.max(c,a.getTop())>=0};this.empty=function(){h=!0;f=e=c=b=0;a()};this.isEmpty=function(){return h}};
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,e,f){return e+(a-b)*(f-e)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535}};THREE.Matrix3=function(){this.m=[]};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,transpose:function(){var a,b=this.m;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};
THREE.Matrix4=function(a,b,c,e,f,g,i,h,p,s,l,q,w,C,G,N){this.set(a!==void 0?a:1,b||0,c||0,e||0,f||0,g!==void 0?g:1,i||0,h||0,p||0,s||0,l!==void 0?l:1,q||0,w||0,C||0,G||0,N!==void 0?N:1);this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,e,f,g,i,h,p,s,l,q,w,C,G,N){this.n11=a;this.n12=b;this.n13=c;this.n14=e;this.n21=f;this.n22=g;this.n23=i;this.n24=h;this.n31=p;this.n32=s;this.n33=l;this.n34=q;this.n41=w;this.n42=C;this.n43=G;this.n44=N;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.set(a.n11,a.n12,a.n13,a.n14,a.n21,a.n22,a.n23,a.n24,a.n31,a.n32,a.n33,a.n34,a.n41,a.n42,a.n43,a.n44);return this},lookAt:function(a,
b,c){var e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(a,b).normalize();if(g.length()===0)g.z=1;e.cross(c,g).normalize();e.length()===0&&(g.x+=1.0E-4,e.cross(c,g).normalize());f.cross(g,e).normalize();this.n11=e.x;this.n12=f.x;this.n13=g.x;this.n21=e.y;this.n22=f.y;this.n23=g.y;this.n31=e.z;this.n32=f.z;this.n33=g.z;return this},multiply:function(a,b){var c=a.n11,e=a.n12,f=a.n13,g=a.n14,i=a.n21,h=a.n22,p=a.n23,s=a.n24,l=a.n31,q=a.n32,w=a.n33,C=a.n34,G=a.n41,N=a.n42,D=a.n43,
ja=a.n44,O=b.n11,P=b.n12,ka=b.n13,E=b.n14,ba=b.n21,F=b.n22,L=b.n23,ha=b.n24,H=b.n31,T=b.n32,ma=b.n33,ga=b.n34,qa=b.n41,sa=b.n42,xa=b.n43,Ba=b.n44;this.n11=c*O+e*ba+f*H+g*qa;this.n12=c*P+e*F+f*T+g*sa;this.n13=c*ka+e*L+f*ma+g*xa;this.n14=c*E+e*ha+f*ga+g*Ba;this.n21=i*O+h*ba+p*H+s*qa;this.n22=i*P+h*F+p*T+s*sa;this.n23=i*ka+h*L+p*ma+s*xa;this.n24=i*E+h*ha+p*ga+s*Ba;this.n31=l*O+q*ba+w*H+C*qa;this.n32=l*P+q*F+w*T+C*sa;this.n33=l*ka+q*L+w*ma+C*xa;this.n34=l*E+q*ha+w*ga+C*Ba;this.n41=G*O+N*ba+D*H+ja*qa;
this.n42=G*P+N*F+D*T+ja*sa;this.n43=G*ka+N*L+D*ma+ja*xa;this.n44=G*E+N*ha+D*ga+ja*Ba;return this},multiplySelf:function(a){return this.multiply(this,a)},multiplyToArray:function(a,b,c){this.multiply(a,b);c[0]=this.n11;c[1]=this.n21;c[2]=this.n31;c[3]=this.n41;c[4]=this.n12;c[5]=this.n22;c[6]=this.n32;c[7]=this.n42;c[8]=this.n13;c[9]=this.n23;c[10]=this.n33;c[11]=this.n43;c[12]=this.n14;c[13]=this.n24;c[14]=this.n34;c[15]=this.n44;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=
a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},multiplyVector3:function(a){var b=a.x,c=a.y,e=a.z,f=1/(this.n41*b+this.n42*c+this.n43*e+this.n44);a.x=(this.n11*b+this.n12*c+this.n13*e+this.n14)*f;a.y=(this.n21*b+this.n22*c+this.n23*e+this.n24)*f;a.z=(this.n31*b+this.n32*c+this.n33*e+this.n34)*f;return a},multiplyVector4:function(a){var b=a.x,c=a.y,e=a.z,f=a.w;a.x=this.n11*b+this.n12*
c+this.n13*e+this.n14*f;a.y=this.n21*b+this.n22*c+this.n23*e+this.n24*f;a.z=this.n31*b+this.n32*c+this.n33*e+this.n34*f;a.w=this.n41*b+this.n42*c+this.n43*e+this.n44*f;return a},rotateAxis:function(a){var b=a.x,c=a.y,e=a.z;a.x=b*this.n11+c*this.n12+e*this.n13;a.y=b*this.n21+c*this.n22+e*this.n23;a.z=b*this.n31+c*this.n32+e*this.n33;a.normalize();return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*
a.z+this.n24*a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},determinant:function(){var a=this.n11,b=this.n12,c=this.n13,e=this.n14,f=this.n21,g=this.n22,i=this.n23,h=this.n24,p=this.n31,s=this.n32,l=this.n33,q=this.n34,w=this.n41,C=this.n42,G=this.n43,N=this.n44;return e*i*s*w-c*h*s*w-e*g*l*w+b*h*l*w+c*g*q*w-b*i*q*w-e*i*p*C+c*h*p*C+e*f*l*C-a*h*l*C-c*f*q*C+a*i*q*C+e*g*p*G-b*h*p*G-e*f*s*G+a*h*s*G+b*f*q*G-a*g*q*G-c*
g*p*N+b*i*p*N+c*f*s*N-a*i*s*N-b*f*l*N+a*g*l*N},transpose:function(){var a;a=this.n21;this.n21=this.n12;this.n12=a;a=this.n31;this.n31=this.n13;this.n13=a;a=this.n32;this.n32=this.n23;this.n23=a;a=this.n41;this.n41=this.n14;this.n14=a;a=this.n42;this.n42=this.n24;this.n24=a;a=this.n43;this.n43=this.n34;this.n43=a;return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;
a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){this.flat[0]=this.n11;this.flat[1]=this.n21;this.flat[2]=this.n31;this.flat[3]=this.n41;this.flat[4]=this.n12;this.flat[5]=this.n22;this.flat[6]=this.n32;this.flat[7]=this.n42;this.flat[8]=this.n13;this.flat[9]=this.n23;this.flat[10]=this.n33;this.flat[11]=this.n43;this.flat[12]=this.n14;this.flat[13]=this.n24;this.flat[14]=this.n34;this.flat[15]=this.n44;return this.flat},
flattenToArray:function(a){a[0]=this.n11;a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},flattenToArrayOffset:function(a,b){a[b]=this.n11;a[b+1]=this.n21;a[b+2]=this.n31;a[b+3]=this.n41;a[b+4]=this.n12;a[b+5]=this.n22;a[b+6]=this.n32;a[b+7]=this.n42;a[b+8]=this.n13;a[b+9]=this.n23;a[b+10]=this.n33;a[b+11]=this.n43;a[b+12]=
this.n14;a[b+13]=this.n24;a[b+14]=this.n34;a[b+15]=this.n44;return a},setTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},setScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},setRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},setRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},setRotationZ:function(a){var b=Math.cos(a),
a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},setRotationAxis:function(a,b){var c=Math.cos(b),e=Math.sin(b),f=1-c,g=a.x,i=a.y,h=a.z,p=f*g,s=f*i;this.set(p*g+c,p*i-e*h,p*h+e*i,0,p*i+e*h,s*i+c,s*h-e*g,0,p*h-e*i,s*h+e*g,f*h*h+c,0,0,0,0,1);return this},setPosition:function(a){this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},getPosition:function(){return THREE.Matrix4.__v1.set(this.n14,this.n24,this.n34)},getColumnX:function(){return THREE.Matrix4.__v1.set(this.n11,this.n21,
this.n31)},getColumnY:function(){return THREE.Matrix4.__v1.set(this.n12,this.n22,this.n32)},getColumnZ:function(){return THREE.Matrix4.__v1.set(this.n13,this.n23,this.n33)},getInverse:function(a){var b=a.n11,c=a.n12,e=a.n13,f=a.n14,g=a.n21,i=a.n22,h=a.n23,p=a.n24,s=a.n31,l=a.n32,q=a.n33,w=a.n34,C=a.n41,G=a.n42,N=a.n43,D=a.n44;this.n11=h*w*G-p*q*G+p*l*N-i*w*N-h*l*D+i*q*D;this.n12=f*q*G-e*w*G-f*l*N+c*w*N+e*l*D-c*q*D;this.n13=e*p*G-f*h*G+f*i*N-c*p*N-e*i*D+c*h*D;this.n14=f*h*l-e*p*l-f*i*q+c*p*q+e*i*w-
c*h*w;this.n21=p*q*C-h*w*C-p*s*N+g*w*N+h*s*D-g*q*D;this.n22=e*w*C-f*q*C+f*s*N-b*w*N-e*s*D+b*q*D;this.n23=f*h*C-e*p*C-f*g*N+b*p*N+e*g*D-b*h*D;this.n24=e*p*s-f*h*s+f*g*q-b*p*q-e*g*w+b*h*w;this.n31=i*w*C-p*l*C+p*s*G-g*w*G-i*s*D+g*l*D;this.n32=f*l*C-c*w*C-f*s*G+b*w*G+c*s*D-b*l*D;this.n33=e*p*C-f*i*C+f*g*G-b*p*G-c*g*D+b*i*D;this.n34=f*i*s-c*p*s-f*g*l+b*p*l+c*g*w-b*i*w;this.n41=h*l*C-i*q*C-h*s*G+g*q*G+i*s*N-g*l*N;this.n42=c*q*C-e*l*C+e*s*G-b*q*G-c*s*N+b*l*N;this.n43=e*i*C-c*h*C-e*g*G+b*h*G+c*g*N-b*i*N;
this.n44=c*h*s-e*i*s+e*g*l-b*h*l-c*g*q+b*i*q;this.multiplyScalar(1/a.determinant());return this},setRotationFromEuler:function(a,b){var c=a.x,e=a.y,f=a.z,g=Math.cos(c),c=Math.sin(c),i=Math.cos(e),e=Math.sin(e),h=Math.cos(f),f=Math.sin(f);switch(b){case "YXZ":var p=i*h,s=i*f,l=e*h,q=e*f;this.n11=p+q*c;this.n12=l*c-s;this.n13=g*e;this.n21=g*f;this.n22=g*h;this.n23=-c;this.n31=s*c-l;this.n32=q+p*c;this.n33=g*i;break;case "ZXY":p=i*h;s=i*f;l=e*h;q=e*f;this.n11=p-q*c;this.n12=-g*f;this.n13=l+s*c;this.n21=
s+l*c;this.n22=g*h;this.n23=q-p*c;this.n31=-g*e;this.n32=c;this.n33=g*i;break;case "ZYX":p=g*h;s=g*f;l=c*h;q=c*f;this.n11=i*h;this.n12=l*e-s;this.n13=p*e+q;this.n21=i*f;this.n22=q*e+p;this.n23=s*e-l;this.n31=-e;this.n32=c*i;this.n33=g*i;break;case "YZX":p=g*i;s=g*e;l=c*i;q=c*e;this.n11=i*h;this.n12=q-p*f;this.n13=l*f+s;this.n21=f;this.n22=g*h;this.n23=-c*h;this.n31=-e*h;this.n32=s*f+l;this.n33=p-q*f;break;case "XZY":p=g*i;s=g*e;l=c*i;q=c*e;this.n11=i*h;this.n12=-f;this.n13=e*h;this.n21=p*f+q;this.n22=
g*h;this.n23=s*f-l;this.n31=l*f-s;this.n32=c*h;this.n33=q*f+p;break;default:p=g*h,s=g*f,l=c*h,q=c*f,this.n11=i*h,this.n12=-i*f,this.n13=e,this.n21=s+l*e,this.n22=p-q*e,this.n23=-c*i,this.n31=q-p*e,this.n32=l+s*e,this.n33=g*i}return this},setRotationFromQuaternion:function(a){var b=a.x,c=a.y,e=a.z,f=a.w,g=b+b,i=c+c,h=e+e,a=b*g,p=b*i;b*=h;var s=c*i;c*=h;e*=h;g*=f;i*=f;f*=h;this.n11=1-(s+e);this.n12=p-f;this.n13=b+i;this.n21=p+f;this.n22=1-(a+e);this.n23=c-g;this.n31=b-i;this.n32=c+g;this.n33=1-(a+s);
return this},scale:function(a){var b=a.x,c=a.y,a=a.z;this.n11*=b;this.n12*=c;this.n13*=a;this.n21*=b;this.n22*=c;this.n23*=a;this.n31*=b;this.n32*=c;this.n33*=a;this.n41*=b;this.n42*=c;this.n43*=a;return this},compose:function(a,b,c){var e=THREE.Matrix4.__m1,f=THREE.Matrix4.__m2;e.identity();e.setRotationFromQuaternion(b);f.setScale(c.x,c.y,c.z);this.multiply(e,f);this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},decompose:function(a,b,c){var e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;
e.set(this.n11,this.n21,this.n31);f.set(this.n12,this.n22,this.n32);g.set(this.n13,this.n23,this.n33);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=e.length();c.y=f.length();c.z=g.length();a.x=this.n14;a.y=this.n24;a.z=this.n34;e=THREE.Matrix4.__m1;e.copy(this);e.n11/=c.x;e.n21/=c.x;e.n31/=c.x;e.n12/=c.y;e.n22/=c.y;e.n32/=c.y;e.n13/=c.z;e.n23/=c.z;e.n33/=c.z;b.setFromRotationMatrix(e);return[a,
b,c]},extractPosition:function(a){this.n14=a.n14;this.n24=a.n24;this.n34=a.n34;return this},extractRotation:function(a){var b=THREE.Matrix4.__v1,c=1/b.set(a.n11,a.n21,a.n31).length(),e=1/b.set(a.n12,a.n22,a.n32).length(),b=1/b.set(a.n13,a.n23,a.n33).length();this.n11=a.n11*c;this.n21=a.n21*c;this.n31=a.n31*c;this.n12=a.n12*e;this.n22=a.n22*e;this.n32=a.n32*e;this.n13=a.n13*b;this.n23=a.n23*b;this.n33=a.n33*b;return this}};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.m33,c=b.m,e=a.n33*a.n22-a.n32*a.n23,f=-a.n33*a.n21+a.n31*a.n23,g=a.n32*a.n21-a.n31*a.n22,i=-a.n33*a.n12+a.n32*a.n13,h=a.n33*a.n11-a.n31*a.n13,p=-a.n32*a.n11+a.n31*a.n12,s=a.n23*a.n12-a.n22*a.n13,l=-a.n23*a.n11+a.n21*a.n13,q=a.n22*a.n11-a.n21*a.n12,a=a.n11*e+a.n21*i+a.n31*s;a===0&&console.error("THREE.Matrix4.makeInvert3x3: Matrix not invertible.");a=1/a;c[0]=a*e;c[1]=a*f;c[2]=a*g;c[3]=a*i;c[4]=a*h;c[5]=a*p;c[6]=a*s;c[7]=a*l;c[8]=a*q;return b};
THREE.Matrix4.makeFrustum=function(a,b,c,e,f,g){var i;i=new THREE.Matrix4;i.n11=2*f/(b-a);i.n12=0;i.n13=(b+a)/(b-a);i.n14=0;i.n21=0;i.n22=2*f/(e-c);i.n23=(e+c)/(e-c);i.n24=0;i.n31=0;i.n32=0;i.n33=-(g+f)/(g-f);i.n34=-2*g*f/(g-f);i.n41=0;i.n42=0;i.n43=-1;i.n44=0;return i};THREE.Matrix4.makePerspective=function(a,b,c,e){var f,a=c*Math.tan(a*Math.PI/360);f=-a;return THREE.Matrix4.makeFrustum(f*b,a*b,f,a,c,e)};
THREE.Matrix4.makeOrtho=function(a,b,c,e,f,g){var i,h,p,s;i=new THREE.Matrix4;h=b-a;p=c-e;s=g-f;i.n11=2/h;i.n12=0;i.n13=0;i.n14=-((b+a)/h);i.n21=0;i.n22=2/p;i.n23=0;i.n24=-((c+e)/p);i.n31=0;i.n32=0;i.n33=-2/s;i.n34=-((g+f)/s);i.n41=0;i.n42=0;i.n43=0;i.n44=1;return i};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.Object3D=function(){this.name="";this.id=THREE.Object3DCount++;this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder="XYZ";this.scale=new THREE.Vector3(1,1,1);this.flipSided=this.doubleSided=this.dynamic=!1;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=
!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)},add:function(a){if(this.children.indexOf(a)===
-1){a.parent!==void 0&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(b!==-1){a.parent=void 0;this.children.splice(b,1);for(b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.removeObject(a)}},getChildByName:function(a,b){var c,e,f;c=0;for(e=this.children.length;c<e;c++){f=this.children[c];if(f.name===a)return f;
if(b&&(f=f.getChildByName(a,b),f!==void 0))return f}},updateMatrix:function(){this.matrix.setPosition(this.position);this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder);if(this.scale.x!==1||this.scale.y!==1||this.scale.z!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&
this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)}};THREE.Object3DCount=0;
THREE.Projector=function(){function a(){var a=i[g]=i[g]||new THREE.RenderableObject;g++;return a}function b(){var a=s[p]=s[p]||new THREE.RenderableVertex;p++;return a}function c(a,b){return b.z-a.z}function e(a,b){var c=0,e=1,g=a.z+a.w,f=b.z+b.w,i=-a.z+a.w,h=-b.z+b.w;return g>=0&&f>=0&&i>=0&&h>=0?!0:g<0&&f<0||i<0&&h<0?!1:(g<0?c=Math.max(c,g/(g-f)):f<0&&(e=Math.min(e,g/(g-f))),i<0?c=Math.max(c,i/(i-h)):h<0&&(e=Math.min(e,i/(i-h))),e<c?!1:(a.lerpSelf(b,c),b.lerpSelf(a,1-e),!0))}var f,g,i=[],h,p,s=[],
l,q,w=[],C,G=[],N,D,ja=[],O,P,ka=[],E={objects:[],sprites:[],lights:[],elements:[]},ba=new THREE.Vector3,F=new THREE.Vector4,L=new THREE.Matrix4,ha=new THREE.Matrix4,H=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],T=new THREE.Vector4,ma=new THREE.Vector4;this.computeFrustum=function(a){H[0].set(a.n41-a.n11,a.n42-a.n12,a.n43-a.n13,a.n44-a.n14);H[1].set(a.n41+a.n11,a.n42+a.n12,a.n43+a.n13,a.n44+a.n14);H[2].set(a.n41+a.n21,a.n42+a.n22,a.n43+
a.n23,a.n44+a.n24);H[3].set(a.n41-a.n21,a.n42-a.n22,a.n43-a.n23,a.n44-a.n24);H[4].set(a.n41-a.n31,a.n42-a.n32,a.n43-a.n33,a.n44-a.n34);H[5].set(a.n41+a.n31,a.n42+a.n32,a.n43+a.n33,a.n44+a.n34);for(a=0;a<6;a++){var b=H[a];b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))}};this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);L.multiply(b.projectionMatrix,b.matrixWorldInverse);L.multiplyVector3(a);return a};this.unprojectVector=function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);
L.multiply(b.matrixWorld,b.projectionMatrixInverse);L.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectGraph=function(b,e){g=0;E.objects.length=0;E.sprites.length=0;E.lights.length=0;var i=function(b){if(b.visible!==!1){var c;if(c=b instanceof THREE.Mesh||b instanceof THREE.Line)if(!(c=b.frustumCulled===!1))a:{for(var e=b.matrixWorld,
g=-b.geometry.boundingSphere.radius*Math.max(b.scale.x,Math.max(b.scale.y,b.scale.z)),h=0;h<6;h++)if(c=H[h].x*e.n14+H[h].y*e.n24+H[h].z*e.n34+H[h].w,c<=g){c=!1;break a}c=!0}c?(L.multiplyVector3(ba.copy(b.position)),f=a(),f.object=b,f.z=ba.z,E.objects.push(f)):b instanceof THREE.Sprite||b instanceof THREE.Particle?(L.multiplyVector3(ba.copy(b.position)),f=a(),f.object=b,f.z=ba.z,E.sprites.push(f)):b instanceof THREE.Light&&E.lights.push(b);c=0;for(e=b.children.length;c<e;c++)i(b.children[c])}};i(b);
e&&E.objects.sort(c);return E};this.projectScene=function(a,g,f){var i=g.near,ba=g.far,H,oa,V,K,d,R,da,ia,S,la,wa,Ca,Fa,ya,za,ta;P=D=C=q=0;E.elements.length=0;g.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),a.add(g));a.updateMatrixWorld();g.matrixWorldInverse.getInverse(g.matrixWorld);L.multiply(g.projectionMatrix,g.matrixWorldInverse);this.computeFrustum(L);E=this.projectGraph(a,!1);a=0;for(H=E.objects.length;a<H;a++)if(S=E.objects[a].object,la=S.matrixWorld,
Ca=S.material,p=0,S instanceof THREE.Mesh){wa=S.geometry;Fa=S.geometry.materials;K=wa.vertices;ya=wa.faces;za=wa.faceVertexUvs;wa=S.matrixRotationWorld.extractRotation(la);oa=0;for(V=K.length;oa<V;oa++)h=b(),h.positionWorld.copy(K[oa].position),la.multiplyVector3(h.positionWorld),h.positionScreen.copy(h.positionWorld),L.multiplyVector4(h.positionScreen),h.positionScreen.x/=h.positionScreen.w,h.positionScreen.y/=h.positionScreen.w,h.visible=h.positionScreen.z>i&&h.positionScreen.z<ba;K=0;for(oa=ya.length;K<
oa;K++){V=ya[K];if(V instanceof THREE.Face3)if(d=s[V.a],R=s[V.b],da=s[V.c],d.visible&&R.visible&&da.visible&&(S.doubleSided||S.flipSided!=(da.positionScreen.x-d.positionScreen.x)*(R.positionScreen.y-d.positionScreen.y)-(da.positionScreen.y-d.positionScreen.y)*(R.positionScreen.x-d.positionScreen.x)<0))ia=w[q]=w[q]||new THREE.RenderableFace3,q++,l=ia,l.v1.copy(d),l.v2.copy(R),l.v3.copy(da);else continue;else if(V instanceof THREE.Face4)if(d=s[V.a],R=s[V.b],da=s[V.c],ia=s[V.d],d.visible&&R.visible&&
da.visible&&ia.visible&&(S.doubleSided||S.flipSided!=((ia.positionScreen.x-d.positionScreen.x)*(R.positionScreen.y-d.positionScreen.y)-(ia.positionScreen.y-d.positionScreen.y)*(R.positionScreen.x-d.positionScreen.x)<0||(R.positionScreen.x-da.positionScreen.x)*(ia.positionScreen.y-da.positionScreen.y)-(R.positionScreen.y-da.positionScreen.y)*(ia.positionScreen.x-da.positionScreen.x)<0)))ta=G[C]=G[C]||new THREE.RenderableFace4,C++,l=ta,l.v1.copy(d),l.v2.copy(R),l.v3.copy(da),l.v4.copy(ia);else continue;
l.normalWorld.copy(V.normal);wa.multiplyVector3(l.normalWorld);l.centroidWorld.copy(V.centroid);la.multiplyVector3(l.centroidWorld);l.centroidScreen.copy(l.centroidWorld);L.multiplyVector3(l.centroidScreen);da=V.vertexNormals;d=0;for(R=da.length;d<R;d++)ia=l.vertexNormalsWorld[d],ia.copy(da[d]),wa.multiplyVector3(ia);d=0;for(R=za.length;d<R;d++)if(ta=za[d][K]){da=0;for(ia=ta.length;da<ia;da++)l.uvs[d][da]=ta[da]}l.material=Ca;l.faceMaterial=V.materialIndex!==null?Fa[V.materialIndex]:null;l.z=l.centroidScreen.z;
E.elements.push(l)}}else if(S instanceof THREE.Line){ha.multiply(L,la);K=S.geometry.vertices;d=b();d.positionScreen.copy(K[0].position);ha.multiplyVector4(d.positionScreen);oa=1;for(V=K.length;oa<V;oa++)if(d=b(),d.positionScreen.copy(K[oa].position),ha.multiplyVector4(d.positionScreen),R=s[p-2],T.copy(d.positionScreen),ma.copy(R.positionScreen),e(T,ma))T.multiplyScalar(1/T.w),ma.multiplyScalar(1/ma.w),S=ja[D]=ja[D]||new THREE.RenderableLine,D++,N=S,N.v1.positionScreen.copy(T),N.v2.positionScreen.copy(ma),
N.z=Math.max(T.z,ma.z),N.material=Ca,E.elements.push(N)}a=0;for(H=E.sprites.length;a<H;a++)if(S=E.sprites[a].object,la=S.matrixWorld,S instanceof THREE.Particle&&(F.set(la.n14,la.n24,la.n34,1),L.multiplyVector4(F),F.z/=F.w,F.z>0&&F.z<1))i=ka[P]=ka[P]||new THREE.RenderableParticle,P++,O=i,O.x=F.x/F.w,O.y=F.y/F.w,O.z=F.z,O.rotation=S.rotation.z,O.scale.x=S.scale.x*Math.abs(O.x-(F.x+g.projectionMatrix.n11)/(F.w+g.projectionMatrix.n14)),O.scale.y=S.scale.y*Math.abs(O.y-(F.y+g.projectionMatrix.n22)/(F.w+
g.projectionMatrix.n24)),O.material=S.material,E.elements.push(O);f&&E.elements.sort(c);return E}};THREE.Quaternion=function(a,b,c,e){this.set(a||0,b||0,c||0,e!==void 0?e:1)};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,e){this.x=a;this.y=b;this.z=c;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a){var b=Math.PI/360,c=a.x*b,e=a.y*b,f=a.z*b,a=Math.cos(e),e=Math.sin(e),b=Math.cos(-f),f=Math.sin(-f),g=Math.cos(c),c=Math.sin(c),i=a*b,h=e*f;this.w=i*g-h*c;this.x=i*c+h*g;this.y=e*b*g+a*f*c;this.z=a*f*g-e*b*c;return this},setFromAxisAngle:function(a,b){var c=b/2,e=Math.sin(c);
this.x=a.x*e;this.y=a.y*e;this.z=a.z*e;this.w=Math.cos(c);return this},setFromRotationMatrix:function(a){var b=Math.pow(a.determinant(),1/3);this.w=Math.sqrt(Math.max(0,b+a.n11+a.n22+a.n33))/2;this.x=Math.sqrt(Math.max(0,b+a.n11-a.n22-a.n33))/2;this.y=Math.sqrt(Math.max(0,b-a.n11+a.n22-a.n33))/2;this.z=Math.sqrt(Math.max(0,b-a.n11-a.n22+a.n33))/2;this.x=a.n32-a.n23<0?-Math.abs(this.x):Math.abs(this.x);this.y=a.n13-a.n31<0?-Math.abs(this.y):Math.abs(this.y);this.z=a.n21-a.n12<0?-Math.abs(this.z):Math.abs(this.z);
this.normalize();return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);a===0?this.w=this.z=this.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiplySelf:function(a){var b=
this.x,c=this.y,e=this.z,f=this.w,g=a.x,i=a.y,h=a.z,a=a.w;this.x=b*a+f*g+c*h-e*i;this.y=c*a+f*i+e*g-b*h;this.z=e*a+f*h+b*i-c*g;this.w=f*a-b*g-c*i-e*h;return this},multiply:function(a,b){this.x=a.x*b.w+a.y*b.z-a.z*b.y+a.w*b.x;this.y=-a.x*b.z+a.y*b.w+a.z*b.x+a.w*b.y;this.z=a.x*b.y-a.y*b.x+a.z*b.w+a.w*b.z;this.w=-a.x*b.x-a.y*b.y-a.z*b.z+a.w*b.w;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,e=a.y,f=a.z,g=this.x,i=this.y,h=this.z,p=this.w,s=p*c+i*f-h*e,l=p*e+h*c-g*f,q=p*f+g*e-i*c,c=-g*
c-i*e-h*f;b.x=s*p+c*-g+l*-h-q*-i;b.y=l*p+c*-i+q*-g-s*-h;b.z=q*p+c*-h+s*-i-l*-g;return b}};
THREE.Quaternion.slerp=function(a,b,c,e){var f=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;f<0?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,f=-f):c.copy(b);if(Math.abs(f)>=1)return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;var g=Math.acos(f),f=Math.sqrt(1-f*f);if(Math.abs(f)<0.0010)return c.w=0.5*(a.w+b.w),c.x=0.5*(a.x+b.x),c.y=0.5*(a.y+b.y),c.z=0.5*(a.z+b.z),c;b=Math.sin((1-e)*g)/f;e=Math.sin(e*g)/f;c.w=a.w*b+c.w*e;c.x=a.x*b+c.x*e;c.y=a.y*b+c.y*e;c.z=a.z*b+c.z*e;return c};THREE.Vertex=function(a){this.position=a||new THREE.Vector3};
THREE.Face3=function(a,b,c,e,f,g){this.a=a;this.b=b;this.c=c;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=g;this.centroid=new THREE.Vector3};
THREE.Face4=function(a,b,c,e,f,g,i){this.a=a;this.b=b;this.c=c;this.d=e;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.color=g instanceof THREE.Color?g:new THREE.Color;this.vertexColors=g instanceof Array?g:[];this.vertexTangents=[];this.materialIndex=i;this.centroid=new THREE.Vector3};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){this.id=THREE.GeometryCount++;this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.dynamic=this.hasTangents=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a,new THREE.Vector3(1,1,1));for(var c=0,e=this.vertices.length;c<e;c++)a.multiplyVector3(this.vertices[c].position);c=0;for(e=this.faces.length;c<e;c++){var f=this.faces[c];b.multiplyVector3(f.normal);for(var g=0,i=f.vertexNormals.length;g<i;g++)b.multiplyVector3(f.vertexNormals[g]);a.multiplyVector3(f.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<
b;a++)c=this.faces[a],c.centroid.set(0,0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a].position),c.centroid.addSelf(this.vertices[c.b].position),c.centroid.addSelf(this.vertices[c.c].position),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a].position),c.centroid.addSelf(this.vertices[c.b].position),c.centroid.addSelf(this.vertices[c.c].position),c.centroid.addSelf(this.vertices[c.d].position),c.centroid.divideScalar(4))},computeFaceNormals:function(a){var b,
c,e,f,g,i,h=new THREE.Vector3,p=new THREE.Vector3;e=0;for(f=this.faces.length;e<f;e++){g=this.faces[e];if(a&&g.vertexNormals.length){h.set(0,0,0);b=0;for(c=g.vertexNormals.length;b<c;b++)h.addSelf(g.vertexNormals[b]);h.divideScalar(3)}else b=this.vertices[g.a],c=this.vertices[g.b],i=this.vertices[g.c],h.sub(i.position,c.position),p.sub(b.position,c.position),h.crossSelf(p);h.isZero()||h.normalize();g.normal.copy(h)}},computeVertexNormals:function(){var a,b,c,e;if(this.__tmpVertices===void 0){e=this.__tmpVertices=
Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)e[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)if(c=this.faces[a],c instanceof THREE.Face3)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(c instanceof THREE.Face4)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else{e=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)e[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof
THREE.Face3?(e[c.a].addSelf(c.normal),e[c.b].addSelf(c.normal),e[c.c].addSelf(c.normal)):c instanceof THREE.Face4&&(e[c.a].addSelf(c.normal),e[c.b].addSelf(c.normal),e[c.c].addSelf(c.normal),e[c.d].addSelf(c.normal));a=0;for(b=this.vertices.length;a<b;a++)e[a].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(c.vertexNormals[0].copy(e[c.a]),c.vertexNormals[1].copy(e[c.b]),c.vertexNormals[2].copy(e[c.c])):c instanceof THREE.Face4&&(c.vertexNormals[0].copy(e[c.a]),
c.vertexNormals[1].copy(e[c.b]),c.vertexNormals[2].copy(e[c.c]),c.vertexNormals[3].copy(e[c.d]))},computeTangents:function(){function a(a,b,c,e,g,d,f){h=a.vertices[b].position;p=a.vertices[c].position;s=a.vertices[e].position;l=i[g];q=i[d];w=i[f];C=p.x-h.x;G=s.x-h.x;N=p.y-h.y;D=s.y-h.y;ja=p.z-h.z;O=s.z-h.z;P=q.u-l.u;ka=w.u-l.u;E=q.v-l.v;ba=w.v-l.v;F=1/(P*ba-ka*E);T.set((ba*C-E*G)*F,(ba*N-E*D)*F,(ba*ja-E*O)*F);ma.set((P*G-ka*C)*F,(P*D-ka*N)*F,(P*O-ka*ja)*F);ha[b].addSelf(T);ha[c].addSelf(T);ha[e].addSelf(T);
H[b].addSelf(ma);H[c].addSelf(ma);H[e].addSelf(ma)}var b,c,e,f,g,i,h,p,s,l,q,w,C,G,N,D,ja,O,P,ka,E,ba,F,L,ha=[],H=[],T=new THREE.Vector3,ma=new THREE.Vector3,ga=new THREE.Vector3,qa=new THREE.Vector3,sa=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)ha[b]=new THREE.Vector3,H[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)g=this.faces[b],i=this.faceVertexUvs[0][b],g instanceof THREE.Face3?a(this,g.a,g.b,g.c,0,1,2):g instanceof THREE.Face4&&(a(this,g.a,g.b,g.c,0,1,2),a(this,g.a,
g.b,g.d,0,1,3));var xa=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){g=this.faces[b];for(e=0;e<g.vertexNormals.length;e++)sa.copy(g.vertexNormals[e]),f=g[xa[e]],L=ha[f],ga.copy(L),ga.subSelf(sa.multiplyScalar(sa.dot(L))).normalize(),qa.cross(g.vertexNormals[e],L),f=qa.dot(H[f]),f=f<0?-1:1,g.vertexTangents[e]=new THREE.Vector4(ga.x,ga.y,ga.z,f)}this.hasTangents=!0},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],
y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,c=this.vertices.length;b<c;b++){a=this.vertices[b];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<
this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=0,b=0,c=this.vertices.length;b<c;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},mergeVertices:function(){var a={},b=[],c=[],e,f=Math.pow(10,4),g,i;g=0;for(i=this.vertices.length;g<i;g++)e=this.vertices[g].position,e=[Math.round(e.x*f),Math.round(e.y*f),Math.round(e.z*f)].join("_"),
a[e]===void 0?(a[e]=g,b.push(this.vertices[g]),c[g]=b.length-1):c[g]=c[a[e]];g=0;for(i=this.faces.length;g<i;g++)if(a=this.faces[g],a instanceof THREE.Face3)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c];else if(a instanceof THREE.Face4)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c],a.d=c[a.d];this.vertices=b}};THREE.GeometryCount=0;
THREE.Spline=function(a){function b(a,b,c,e,g,f,i){a=(c-a)*0.5;e=(e-b)*0.5;return(2*(b-c)+a+e)*i+(-3*(b-c)-2*a-e)*f+a*g+b}this.points=a;var c=[],e={x:0,y:0,z:0},f,g,i,h,p,s,l,q,w;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){f=(this.points.length-1)*a;g=Math.floor(f);i=f-g;c[0]=g===0?g:g-1;c[1]=g;c[2]=g>this.points.length-2?g:g+1;c[3]=g>this.points.length-3?g:g+2;s=this.points[c[0]];l=this.points[c[1]];
q=this.points[c[2]];w=this.points[c[3]];h=i*i;p=i*h;e.x=b(s.x,l.x,q.x,w.x,i,h,p);e.y=b(s.y,l.y,q.y,w.y,i,h,p);e.z=b(s.z,l.z,q.z,w.z,i,h,p);return e};this.getControlPointsArray=function(){var a,b,c=this.points.length,e=[];for(a=0;a<c;a++)b=this.points[a],e[a]=[b.x,b.y,b.z];return e};this.getLength=function(a){var b,c,e,g=b=b=0,f=new THREE.Vector3,i=new THREE.Vector3,h=[],l=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=a/c,e=this.getPoint(b),i.copy(e),l+=i.distanceTo(f),
f.copy(e),b*=this.points.length-1,b=Math.floor(b),b!=g&&(h[b]=l,g=b);h[h.length]=l;return{chunks:h,total:l}};this.reparametrizeByArcLength=function(a){var b,c,e,g,f,i,h=[],l=new THREE.Vector3,p=this.getLength();h.push(l.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=p.chunks[b]-p.chunks[b-1];i=Math.ceil(a*c/p.total);g=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<i-1;c++)e=g+c*(1/i)*(f-g),e=this.getPoint(e),h.push(l.copy(e).clone());h.push(l.copy(this.points[b]).clone())}this.points=
h}};THREE.Edge=function(a,b,c,e){this.vertices=[a,b];this.vertexIndices=[c,e];this.faces=[];this.faceIndices=[]};THREE.Camera=function(){if(arguments.length)return console.warn("DEPRECATED: Camera() is now PerspectiveCamera() or OrthographicCamera()."),new THREE.PerspectiveCamera(arguments[0],arguments[1],arguments[2],arguments[3]);THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};
THREE.Camera.prototype=new THREE.Object3D;THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)};THREE.OrthographicCamera=function(a,b,c,e,f,g){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=e;this.near=f!==void 0?f:0.1;this.far=g!==void 0?g:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=new THREE.Camera;
THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makeOrtho(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.PerspectiveCamera=function(a,b,c,e){THREE.Camera.call(this);this.fov=a!==void 0?a:50;this.aspect=b!==void 0?b:1;this.near=c!==void 0?c:0.1;this.far=e!==void 0?e:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=new THREE.Camera;
THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;THREE.PerspectiveCamera.prototype.setLens=function(a,b){this.fov=2*Math.atan((b!==void 0?b:43.25)/(a*2));this.fov*=180/Math.PI;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,e,f,g){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=e;this.width=f;this.height=g;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,e=a*c,a=Math.abs(a*b-e),c=Math.abs(b-c);this.projectionMatrix=THREE.Matrix4.makeFrustum(e+this.x*a/this.fullWidth,e+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,
this.far)};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=new THREE.Object3D;THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.supr=THREE.Object3D.prototype;THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;
THREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0};THREE.PointLight.prototype=new THREE.Light;
THREE.PointLight.prototype.constructor=THREE.PointLight;THREE.SpotLight=function(a,b,c,e){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0;this.castShadow=e!==void 0?e:!1};THREE.SpotLight.prototype=new THREE.Light;THREE.SpotLight.prototype.constructor=THREE.SpotLight;
THREE.Material=function(a){this.name="";this.id=THREE.MaterialCount++;a=a||{};this.opacity=a.opacity!==void 0?a.opacity:1;this.transparent=a.transparent!==void 0?a.transparent:!1;this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.depthTest=a.depthTest!==void 0?a.depthTest:!0;this.depthWrite=a.depthWrite!==void 0?a.depthWrite:!0;this.polygonOffset=a.polygonOffset!==void 0?a.polygonOffset:!1;this.polygonOffsetFactor=a.polygonOffsetFactor!==void 0?a.polygonOffsetFactor:0;this.polygonOffsetUnits=
a.polygonOffsetUnits!==void 0?a.polygonOffsetUnits:0;this.alphaTest=a.alphaTest!==void 0?a.alphaTest:0;this.overdraw=a.overdraw!==void 0?a.overdraw:!1};THREE.MaterialCount=0;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;THREE.MultiplyBlending=3;THREE.AdditiveAlphaBlending=4;
THREE.LineBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.linewidth=a.linewidth!==void 0?a.linewidth:1;this.linecap=a.linecap!==void 0?a.linecap:"round";this.linejoin=a.linejoin!==void 0?a.linejoin:"round";this.vertexColors=a.vertexColors?a.vertexColors:!1;this.fog=a.fog!==void 0?a.fog:!0};THREE.LineBasicMaterial.prototype=new THREE.Material;THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:null;this.lightMap=a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:
!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:
!1};THREE.MeshBasicMaterial.prototype=new THREE.Material;THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(328965);this.map=a.map!==void 0?a.map:null;this.lightMap=a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=
a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=
a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.MeshLambertMaterial.prototype=new THREE.Material;THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(328965);this.specular=a.specular!==void 0?new THREE.Color(a.specular):new THREE.Color(1118481);this.shininess=a.shininess!==void 0?a.shininess:30;this.metal=a.metal!==void 0?a.metal:!1;this.perPixel=a.perPixel!==void 0?a.perPixel:!1;this.map=a.map!==void 0?a.map:null;this.lightMap=
a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=
a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.MeshPhongMaterial.prototype=new THREE.Material;THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1};THREE.MeshDepthMaterial.prototype=new THREE.Material;THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading?a.shading:THREE.FlatShading;this.wireframe=a.wireframe?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth?a.wireframeLinewidth:1};THREE.MeshNormalMaterial.prototype=new THREE.Material;THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshFaceMaterial=function(){};
THREE.MeshShaderMaterial=function(a){console.warn("DEPRECATED: MeshShaderMaterial() is now ShaderMaterial().");return new THREE.ShaderMaterial(a)};
THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:null;this.size=a.size!==void 0?a.size:1;this.sizeAttenuation=a.sizeAttenuation!==void 0?a.sizeAttenuation:!0;this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.fog=a.fog!==void 0?a.fog:!0};THREE.ParticleBasicMaterial.prototype=new THREE.Material;THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial;
THREE.ShaderMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.fragmentShader=a.fragmentShader!==void 0?a.fragmentShader:"void main() {}";this.vertexShader=a.vertexShader!==void 0?a.vertexShader:"void main() {}";this.uniforms=a.uniforms!==void 0?a.uniforms:{};this.attributes=a.attributes;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.fog=a.fog!==
void 0?a.fog:!1;this.lights=a.lights!==void 0?a.lights:!1;this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.ShaderMaterial.prototype=new THREE.Material;THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;
THREE.Texture=function(a,b,c,e,f,g){this.id=THREE.TextureCount++;this.image=a;this.mapping=b!==void 0?b:new THREE.UVMapping;this.wrapS=c!==void 0?c:THREE.ClampToEdgeWrapping;this.wrapT=e!==void 0?e:THREE.ClampToEdgeWrapping;this.magFilter=f!==void 0?f:THREE.LinearFilter;this.minFilter=g!==void 0?g:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.needsUpdate=!1};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a}};THREE.TextureCount=0;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;
THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;THREE.DataTexture=function(a,b,c,e,f,g,i,h,p){THREE.Texture.call(this,null,f,g,i,h,p);this.image={data:a,width:b,height:c};this.format=e!==void 0?e:THREE.RGBAFormat};THREE.DataTexture.prototype=new THREE.Texture;THREE.DataTexture.prototype.constructor=THREE.DataTexture;
THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.data.slice(0),this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b;this.sortParticles=!1};
THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=b;this.type=c!==void 0?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b;if(b instanceof Array)console.warn("DEPRECATED: Mesh material can no longer be an Array. Using material at index 0..."),this.material=b[0];if(this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};
for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.supr=THREE.Object3D.prototype;
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(this.morphTargetDictionary[a]!==void 0)return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=new THREE.Object3D;THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.supr=THREE.Object3D.prototype;
THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,e=this.children.length;for(c=0;c<e;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b){THREE.Mesh.call(this,a,b);this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var c,e,f,g,i,h;if(this.geometry.bones!==void 0){for(c=0;c<this.geometry.bones.length;c++)f=this.geometry.bones[c],g=f.pos,i=f.rotq,h=f.scl,e=this.addBone(),e.name=f.name,e.position.set(g[0],g[1],g[2]),e.quaternion.set(i[0],i[1],i[2],i[3]),e.useQuaternion=!0,h!==void 0?e.scale.set(h[0],h[1],h[2]):e.scale.set(1,1,1);for(c=0;c<this.bones.length;c++)f=this.geometry.bones[c],
e=this.bones[c],f.parent===-1?this.add(e):this.bones[f.parent].add(e);this.boneMatrices=new Float32Array(16*this.bones.length);this.pose()}};THREE.SkinnedMesh.prototype=new THREE.Mesh;THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.addBone=function(a){a===void 0&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}for(var b=this.bones.length,c=this.bones,e=this.boneMatrices,a=0;a<b;a++)c[a].skinMatrix.flattenToArrayOffset(e,
a*16)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a,b=[],c=0;c<this.bones.length;c++){a=this.bones[c];var e=new THREE.Matrix4;e.getInverse(a.skinMatrix);b.push(e);a.skinMatrix.flattenToArrayOffset(this.boneMatrices,c*16)}if(this.geometry.skinVerticesA===void 0){this.geometry.skinVerticesA=[];this.geometry.skinVerticesB=[];for(a=0;a<this.geometry.skinIndices.length;a++){var c=this.geometry.vertices[a].position,f=this.geometry.skinIndices[a].x,g=this.geometry.skinIndices[a].y,e=
new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesA.push(b[f].multiplyVector3(e));e=new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesB.push(b[g].multiplyVector3(e));this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y!==1&&(c=(1-(this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y))*0.5,this.geometry.skinWeights[a].x+=c,this.geometry.skinWeights[a].y+=c)}}};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};
THREE.Ribbon.prototype=new THREE.Object3D;THREE.Ribbon.prototype.constructor=THREE.Ribbon;THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=new THREE.Object3D;THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.supr=THREE.Object3D.prototype;THREE.LOD.prototype.addLevel=function(a,b){b===void 0&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length;c++)if(b<this.LODs[c].visibleAtDistance)break;this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(this.LODs.length>1){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.n31*this.position.x+a.n32*this.position.y+a.n33*this.position.z+a.n34);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=!1}};
THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map instanceof THREE.Texture?a.map:THREE.ImageUtils.loadTexture(a.map);this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.useScreenCoordinates=a.useScreenCoordinates!==void 0?a.useScreenCoordinates:!0;this.mergeWith3D=a.mergeWith3D!==void 0?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=a.affectedByDistance!==void 0?a.affectedByDistance:
!this.useScreenCoordinates;this.scaleByViewport=a.scaleByViewport!==void 0?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1)};THREE.Sprite.prototype=new THREE.Object3D;THREE.Sprite.prototype.constructor=THREE.Sprite;
THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(this.scale.x!==1||this.scale.y!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);
THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);
THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.objects=[];this.lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=new THREE.Object3D;THREE.Scene.prototype.constructor=THREE.Scene;
THREE.Scene.prototype.addObject=function(a){if(a instanceof THREE.Light)this.lights.indexOf(a)===-1&&this.lights.push(a);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&this.objects.indexOf(a)===-1){this.objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);b!==-1&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.addObject(a.children[b])};
THREE.Scene.prototype.removeObject=function(a){if(a instanceof THREE.Light){var b=this.lights.indexOf(a);b!==-1&&this.lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.objects.indexOf(a),b!==-1&&(this.objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),b!==-1&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=b!==void 0?b:1;this.far=c!==void 0?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b!==void 0?b:2.5E-4};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity );\n} else {\ngl_FragColor.xyz = gl_FragColor.xyz * cubeColor.xyz;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",
lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif",
lights_lambert_vertex:"vLightWeighting = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat pointLightWeighting = max( dot( transformedNormal, lVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting * lDistance;\n}\n#endif\nvLightWeighting = vLightWeighting * diffuse + ambient * ambientLightColor;",
lights_phong_pars_vertex:"#if MAX_POINT_LIGHTS > 0\n#ifndef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif",lights_phong_vertex:"#if MAX_POINT_LIGHTS > 0\n#ifndef PHONG_PER_PIXEL\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDistance = lDistance;\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\nfloat pointSpecularWeight = pow( pointDotNormalHalf, shininess );\n#ifdef PHYSICALLY_BASED_SHADING\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance;\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * pointDistance;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = pow( dirDotNormalHalf, shininess );\n#ifdef PHYSICALLY_BASED_SHADING\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * viewMatrix * objectMatrix * gl_Position;\n#endif",
morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\nuniform float morphTargetInfluences[ 8 ];\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0, 0.0, 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",
default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform float shadowDarkness;\nuniform float shadowBias;\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",
shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_SOFT\nconst float xPixelOffset = 1.0 / SHADOWMAP_WIDTH;\nconst float yPixelOffset = 1.0 / SHADOWMAP_HEIGHT;\n#endif\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nshadowCoord.z += shadowBias;\nif ( shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0 ) {\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nfor ( float y = -1.25; y <= 1.25; y += 1.25 )\nfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\nvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadow += 1.0;\n}\nshadow /= 9.0;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( shadowDarkness );\n#endif\n}\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,e,f={};for(b=0;b<a.length;b++)for(c in e=this.clone(a[b]),e)f[c]=e[c];return f},clone:function(a){var b,c,e,f={};for(b in a)for(c in f[b]={},a[b])e=a[b][c],f[b][c]=e instanceof THREE.Color||e instanceof THREE.Vector2||e instanceof THREE.Vector3||e instanceof THREE.Vector4||e instanceof THREE.Matrix4||e instanceof THREE.Texture?e.clone():e instanceof Array?e.slice():e;return f}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},fog:{fogDensity:{type:"f",
value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",
value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:6,texture:[]},shadowMatrix:{type:"m4v",value:[]},shadowBias:{type:"f",value:0.0039},shadowDarkness:{type:"f",value:0.2}}};
THREE.ShaderLib={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"},
depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},
vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(328965)}}]),vertexShader:["varying vec3 vLightWeighting;",THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",
THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightWeighting;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",
THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,"gl_FragColor.xyz = gl_FragColor.xyz * vLightWeighting;",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",
value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),vertexShader:["varying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",
THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = -mvPosition.xyz;\nvec3 transformedNormal = normalMatrix * normal;\nvNormal = transformedNormal;",THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,
"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,
THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,
THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,e=b.material;if(e.attributes){if(a.__webglCustomAttributesList===void 0)a.__webglCustomAttributesList=[];for(var g in e.attributes){var f=e.attributes[g];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var r=1;f.type==="v2"?r=2:f.type==="v3"?r=3:f.type==="v4"?r=4:f.type==="c"&&(r=3);f.size=r;f.array=new Float32Array(c*r);f.buffer=d.createBuffer();f.buffer.belongsToAttribute=g;f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}
function c(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;else if(b.materialIndex>=0)return a.geometry.materials[b.materialIndex]}function e(a,b,c){var e,g,f,r,n=a.vertices;r=n.length;var i=a.colors,h=i.length,j=a.__vertexArray,m=a.__colorArray,l=a.__sortArray,A=a.__dirtyVertices,p=a.__dirtyColors,s=a.__webglCustomAttributesList;if(c.sortParticles){Aa.multiplySelf(c.matrixWorld);for(e=0;e<r;e++)g=n[e].position,Da.copy(g),Aa.multiplyVector3(Da),l[e]=[Da.z,e];
l.sort(function(a,b){return b[0]-a[0]});for(e=0;e<r;e++)g=n[l[e][1]].position,f=e*3,j[f]=g.x,j[f+1]=g.y,j[f+2]=g.z;for(e=0;e<h;e++)f=e*3,g=i[l[e][1]],m[f]=g.r,m[f+1]=g.g,m[f+2]=g.b;if(s){i=0;for(h=s.length;i<h;i++)if(n=s[i],n.boundTo===void 0||n.boundTo==="vertices")if(f=0,g=n.value.length,n.size===1)for(e=0;e<g;e++)r=l[e][1],n.array[e]=n.value[r];else if(n.size===2)for(e=0;e<g;e++)r=l[e][1],r=n.value[r],n.array[f]=r.x,n.array[f+1]=r.y,f+=2;else if(n.size===3)if(n.type==="c")for(e=0;e<g;e++)r=l[e][1],
r=n.value[r],n.array[f]=r.r,n.array[f+1]=r.g,n.array[f+2]=r.b,f+=3;else for(e=0;e<g;e++)r=l[e][1],r=n.value[r],n.array[f]=r.x,n.array[f+1]=r.y,n.array[f+2]=r.z,f+=3;else if(n.size===4)for(e=0;e<g;e++)r=l[e][1],r=n.value[r],n.array[f]=r.x,n.array[f+1]=r.y,n.array[f+2]=r.z,n.array[f+3]=r.w,f+=4}}else{if(A)for(e=0;e<r;e++)g=n[e].position,f=e*3,j[f]=g.x,j[f+1]=g.y,j[f+2]=g.z;if(p)for(e=0;e<h;e++)g=i[e],f=e*3,m[f]=g.r,m[f+1]=g.g,m[f+2]=g.b;if(s){i=0;for(h=s.length;i<h;i++)if(n=s[i],n.needsUpdate&&(n.boundTo===
void 0||n.boundTo==="vertices"))if(g=n.value.length,f=0,n.size===1)for(e=0;e<g;e++)n.array[e]=n.value[e];else if(n.size===2)for(e=0;e<g;e++)r=n.value[e],n.array[f]=r.x,n.array[f+1]=r.y,f+=2;else if(n.size===3)if(n.type==="c")for(e=0;e<g;e++)r=n.value[e],n.array[f]=r.r,n.array[f+1]=r.g,n.array[f+2]=r.b,f+=3;else for(e=0;e<g;e++)r=n.value[e],n.array[f]=r.x,n.array[f+1]=r.y,n.array[f+2]=r.z,f+=3;else if(n.size===4)for(e=0;e<g;e++)r=n.value[e],n.array[f]=r.x,n.array[f+1]=r.y,n.array[f+2]=r.z,n.array[f+
3]=r.w,f+=4}}if(A||c.sortParticles)d.bindBuffer(d.ARRAY_BUFFER,a.__webglVertexBuffer),d.bufferData(d.ARRAY_BUFFER,j,b);if(p||c.sortParticles)d.bindBuffer(d.ARRAY_BUFFER,a.__webglColorBuffer),d.bufferData(d.ARRAY_BUFFER,m,b);if(s){i=0;for(h=s.length;i<h;i++)if(n=s[i],n.needsUpdate||c.sortParticles)d.bindBuffer(d.ARRAY_BUFFER,n.buffer),d.bufferData(d.ARRAY_BUFFER,n.array,b)}}function f(a,b,c){if(!a.__webglVertexBuffer)a.__webglVertexBuffer=d.createBuffer();if(!a.__webglNormalBuffer)a.__webglNormalBuffer=
d.createBuffer();a.hasPos&&(d.bindBuffer(d.ARRAY_BUFFER,a.__webglVertexBuffer),d.bufferData(d.ARRAY_BUFFER,a.positionArray,d.DYNAMIC_DRAW),d.enableVertexAttribArray(b.attributes.position),d.vertexAttribPointer(b.attributes.position,3,d.FLOAT,!1,0,0));if(a.hasNormal){d.bindBuffer(d.ARRAY_BUFFER,a.__webglNormalBuffer);if(c===THREE.FlatShading){var e,f,g,i,n,h,l,j,m,p,A=a.count*3;for(p=0;p<A;p+=9)c=a.normalArray,e=c[p],f=c[p+1],g=c[p+2],i=c[p+3],h=c[p+4],j=c[p+5],n=c[p+6],l=c[p+7],m=c[p+8],e=(e+i+n)/
3,f=(f+h+l)/3,g=(g+j+m)/3,c[p]=e,c[p+1]=f,c[p+2]=g,c[p+3]=e,c[p+4]=f,c[p+5]=g,c[p+6]=e,c[p+7]=f,c[p+8]=g}d.bufferData(d.ARRAY_BUFFER,a.normalArray,d.DYNAMIC_DRAW);d.enableVertexAttribArray(b.attributes.normal);d.vertexAttribPointer(b.attributes.normal,3,d.FLOAT,!1,0,0)}d.drawArrays(d.TRIANGLES,0,a.count);a.count=0}function g(a,b,c,e,f,g){if(e.opacity!==0){var i,n,c=D(a,b,c,e,g),b=c.attributes,a=!1,c=f.id*16777215+c.id*2+(e.wireframe?1:0);c!==la&&(la=c,a=!0);if(!e.morphTargets&&b.position>=0)a&&(d.bindBuffer(d.ARRAY_BUFFER,
f.__webglVertexBuffer),d.vertexAttribPointer(b.position,3,d.FLOAT,!1,0,0));else if(g.morphTargetBase){c=e.program.attributes;g.morphTargetBase!==-1?(d.bindBuffer(d.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[g.morphTargetBase]),d.vertexAttribPointer(c.position,3,d.FLOAT,!1,0,0)):c.position>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglVertexBuffer),d.vertexAttribPointer(c.position,3,d.FLOAT,!1,0,0));if(g.morphTargetForcedOrder.length){i=0;var h=g.morphTargetForcedOrder;for(n=g.morphTargetInfluences;i<e.numSupportedMorphTargets&&
i<h.length;)d.bindBuffer(d.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[h[i]]),d.vertexAttribPointer(c["morphTarget"+i],3,d.FLOAT,!1,0,0),g.__webglMorphTargetInfluences[i]=n[h[i]],i++}else{var h=[],l=-1,j=0;n=g.morphTargetInfluences;var m,p=n.length;i=0;for(g.morphTargetBase!==-1&&(h[g.morphTargetBase]=!0);i<e.numSupportedMorphTargets;){for(m=0;m<p;m++)!h[m]&&n[m]>l&&(j=m,l=n[j]);d.bindBuffer(d.ARRAY_BUFFER,f.__webglMorphTargetsBuffers[j]);d.vertexAttribPointer(c["morphTarget"+i],3,d.FLOAT,!1,0,0);g.__webglMorphTargetInfluences[i]=
l;h[j]=1;l=-1;i++}}e.program.uniforms.morphTargetInfluences!==null&&d.uniform1fv(e.program.uniforms.morphTargetInfluences,g.__webglMorphTargetInfluences)}if(a){if(f.__webglCustomAttributesList){i=0;for(n=f.__webglCustomAttributesList.length;i<n;i++)c=f.__webglCustomAttributesList[i],b[c.buffer.belongsToAttribute]>=0&&(d.bindBuffer(d.ARRAY_BUFFER,c.buffer),d.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,d.FLOAT,!1,0,0))}b.color>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglColorBuffer),d.vertexAttribPointer(b.color,
3,d.FLOAT,!1,0,0));b.normal>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglNormalBuffer),d.vertexAttribPointer(b.normal,3,d.FLOAT,!1,0,0));b.tangent>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglTangentBuffer),d.vertexAttribPointer(b.tangent,4,d.FLOAT,!1,0,0));b.uv>=0&&(f.__webglUVBuffer?(d.bindBuffer(d.ARRAY_BUFFER,f.__webglUVBuffer),d.vertexAttribPointer(b.uv,2,d.FLOAT,!1,0,0),d.enableVertexAttribArray(b.uv)):d.disableVertexAttribArray(b.uv));b.uv2>=0&&(f.__webglUV2Buffer?(d.bindBuffer(d.ARRAY_BUFFER,f.__webglUV2Buffer),
d.vertexAttribPointer(b.uv2,2,d.FLOAT,!1,0,0),d.enableVertexAttribArray(b.uv2)):d.disableVertexAttribArray(b.uv2));e.skinning&&b.skinVertexA>=0&&b.skinVertexB>=0&&b.skinIndex>=0&&b.skinWeight>=0&&(d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinVertexABuffer),d.vertexAttribPointer(b.skinVertexA,4,d.FLOAT,!1,0,0),d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinVertexBBuffer),d.vertexAttribPointer(b.skinVertexB,4,d.FLOAT,!1,0,0),d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinIndicesBuffer),d.vertexAttribPointer(b.skinIndex,
4,d.FLOAT,!1,0,0),d.bindBuffer(d.ARRAY_BUFFER,f.__webglSkinWeightsBuffer),d.vertexAttribPointer(b.skinWeight,4,d.FLOAT,!1,0,0))}g instanceof THREE.Mesh?(e.wireframe?(e=e.wireframeLinewidth,e!==Ja&&(d.lineWidth(e),Ja=e),a&&d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,f.__webglLineBuffer),d.drawElements(d.LINES,f.__webglLineCount,d.UNSIGNED_SHORT,0)):(a&&d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,f.__webglFaceBuffer),d.drawElements(d.TRIANGLES,f.__webglFaceCount,d.UNSIGNED_SHORT,0)),K.info.render.calls++,K.info.render.vertices+=
f.__webglFaceCount,K.info.render.faces+=f.__webglFaceCount/3):g instanceof THREE.Line?(g=g.type===THREE.LineStrip?d.LINE_STRIP:d.LINES,e=e.linewidth,e!==Ja&&(d.lineWidth(e),Ja=e),d.drawArrays(g,0,f.__webglLineCount),K.info.render.calls++):g instanceof THREE.ParticleSystem?(d.drawArrays(d.POINTS,0,f.__webglParticleCount),K.info.render.calls++):g instanceof THREE.Ribbon&&(d.drawArrays(d.TRIANGLE_STRIP,0,f.__webglVertexCount),K.info.render.calls++)}}function i(a){na[0].set(a.n41-a.n11,a.n42-a.n12,a.n43-
a.n13,a.n44-a.n14);na[1].set(a.n41+a.n11,a.n42+a.n12,a.n43+a.n13,a.n44+a.n14);na[2].set(a.n41+a.n21,a.n42+a.n22,a.n43+a.n23,a.n44+a.n24);na[3].set(a.n41-a.n21,a.n42-a.n22,a.n43-a.n23,a.n44-a.n24);na[4].set(a.n41-a.n31,a.n42-a.n32,a.n43-a.n33,a.n44-a.n34);na[5].set(a.n41+a.n31,a.n42+a.n32,a.n43+a.n33,a.n44+a.n34);for(var b,a=0;a<6;a++)b=na[a],b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))}function h(a){for(var b=a.matrixWorld,d=-a.geometry.boundingSphere.radius*Math.max(a.scale.x,Math.max(a.scale.y,
a.scale.z)),c=0;c<6;c++)if(a=na[c].x*b.n14+na[c].y*b.n24+na[c].z*b.n34+na[c].w,a<=d)return!1;return!0}function p(a,b){return b.z-a.z}function s(a){var b,c,e,l=0,ua,r,n,Ma,p,j,m=a.lights;pa||(pa=new THREE.PerspectiveCamera(K.shadowCameraFov,K.shadowMapWidth/K.shadowMapHeight,K.shadowCameraNear,K.shadowCameraFar));b=0;for(c=m.length;b<c;b++)if(e=m[b],e instanceof THREE.SpotLight&&e.castShadow){S=-1;K.shadowMap[l]||(K.shadowMap[l]=new THREE.WebGLRenderTarget(K.shadowMapWidth,K.shadowMapHeight,{minFilter:THREE.LinearFilter,
magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}));Ga[l]||(Ga[l]=new THREE.Matrix4);ua=K.shadowMap[l];r=Ga[l];pa.position.copy(e.position);pa.lookAt(e.target.position);pa.parent==null&&(console.warn("Camera is not on the Scene. Adding it..."),a.add(pa));this.autoUpdateScene&&a.updateMatrixWorld();pa.matrixWorldInverse.getInverse(pa.matrixWorld);r.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);r.multiplySelf(pa.projectionMatrix);r.multiplySelf(pa.matrixWorldInverse);pa.matrixWorldInverse.flattenToArray(Ka);
pa.projectionMatrix.flattenToArray(La);Aa.multiply(pa.projectionMatrix,pa.matrixWorldInverse);i(Aa);T(ua);d.clearColor(1,1,1,1);K.clear();d.clearColor(ra.r,ra.g,ra.b,oa);r=a.__webglObjects.length;e=a.__webglObjectsImmediate.length;for(ua=0;ua<r;ua++)n=a.__webglObjects[ua],j=n.object,j.visible&&j.castShadow?!(j instanceof THREE.Mesh)||!j.frustumCulled||h(j)?(j.matrixWorld.flattenToArray(j._objectMatrixArray),ja(j,pa,!1),n.render=!0):n.render=!1:n.render=!1;P(!0);ba(THREE.NormalBlending);for(ua=0;ua<
r;ua++)if(n=a.__webglObjects[ua],n.render)j=n.object,p=n.buffer,O(j),n=j.customDepthMaterial?j.customDepthMaterial:j.geometry.morphTargets.length?Na:Ha,g(pa,m,null,n,p,j);for(ua=0;ua<e;ua++)n=a.__webglObjectsImmediate[ua],j=n.object,j.visible&&j.castShadow&&(j.matrixAutoUpdate&&j.matrixWorld.flattenToArray(j._objectMatrixArray),la=-1,ja(j,pa,!1),O(j),Ma=D(pa,m,null,Ha,j),j.immediateRenderCallback?j.immediateRenderCallback(Ma,d,na):j.render(function(a){f(a,Ma,Ha.shading)}));l++}}function l(a,b,d,c,
e,f,i,n){var h,l,j,m;b?(l=a.length-1,m=b=-1):(l=0,b=a.length,m=1);for(var p=l;p!==b;p+=m)if(h=a[p],h.render){l=h.object;j=h.buffer;if(n)h=n;else{h=h[d];if(!h)continue;i&&ba(h.blending);P(h.depthTest);ka(h.depthWrite);E(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}O(l);g(c,e,f,h,j,l)}}function q(a,b,c,e,g,i,h){for(var n,l,p,j,m=0,s=a.length;m<s;m++)if(n=a[m],l=n.object,l.visible){la=-1;if(h)p=h;else{p=n[b];if(!p)continue;i&&ba(p.blending);P(p.depthTest);ka(p.depthWrite);E(p.polygonOffset,
p.polygonOffsetFactor,p.polygonOffsetUnits)}O(l);j=D(c,e,g,p,l);l.immediateRenderCallback?l.immediateRenderCallback(j,d,na):l.render(function(a){f(a,j,p.shading)})}}function w(a,b,d){a.push({buffer:b,object:d,opaque:null,transparent:null})}function C(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function G(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function N(a,b){for(var d=a.length-1;d>=0;d--)a[d].object===b&&a.splice(d,1)}function D(a,b,c,e,f){e.program||
K.initMaterial(e,b,c,f);if(e.morphTargets&&!f.__webglMorphTargetInfluences){f.__webglMorphTargetInfluences=new Float32Array(K.maxMorphTargets);for(var g=0,i=K.maxMorphTargets;g<i;g++)f.__webglMorphTargetInfluences[g]=0}var n=!1,g=e.program,i=g.uniforms,h=e.uniforms;g!==da&&(d.useProgram(g),da=g,n=!0);if(e.id!==S)S=e.id,n=!0;if(n){d.uniformMatrix4fv(i.projectionMatrix,!1,La);if(c&&e.fog)if(h.fogColor.value=c.color,c instanceof THREE.Fog)h.fogNear.value=c.near,h.fogFar.value=c.far;else if(c instanceof
THREE.FogExp2)h.fogDensity.value=c.density;if(e instanceof THREE.MeshPhongMaterial||e instanceof THREE.MeshLambertMaterial||e.lights){for(var l,j,m=0,p=0,A=0,s,q,w,u=Qa,t=u.directional.colors,C=u.directional.positions,v=u.point.colors,G=u.point.positions,N=u.point.distances,D=0,Q=0,c=l=w=0,n=b.length;c<n;c++)if(l=b[c],j=l.color,s=l.position,q=l.intensity,w=l.distance,l instanceof THREE.AmbientLight)K.gammaInput?(m+=j.r*j.r,p+=j.g*j.g,A+=j.b*j.b):(m+=j.r,p+=j.g,A+=j.b);else if(l instanceof THREE.DirectionalLight)w=
D*3,K.gammaInput?(t[w]=j.r*j.r*q*q,t[w+1]=j.g*j.g*q*q,t[w+2]=j.b*j.b*q*q):(t[w]=j.r*q,t[w+1]=j.g*q,t[w+2]=j.b*q),C[w]=s.x,C[w+1]=s.y,C[w+2]=s.z,D+=1;else if(l instanceof THREE.SpotLight)w=D*3,K.gammaInput?(t[w]=j.r*j.r*q*q,t[w+1]=j.g*j.g*q*q,t[w+2]=j.b*j.b*q*q):(t[w]=j.r*q,t[w+1]=j.g*q,t[w+2]=j.b*q),j=1/s.length(),C[w]=s.x*j,C[w+1]=s.y*j,C[w+2]=s.z*j,D+=1;else if(l instanceof THREE.PointLight)l=Q*3,K.gammaInput?(v[l]=j.r*j.r*q*q,v[l+1]=j.g*j.g*q*q,v[l+2]=j.b*j.b*q*q):(v[l]=j.r*q,v[l+1]=j.g*q,v[l+
2]=j.b*q),G[l]=s.x,G[l+1]=s.y,G[l+2]=s.z,N[Q]=w,Q+=1;c=D*3;for(n=t.length;c<n;c++)t[c]=0;c=Q*3;for(n=v.length;c<n;c++)v[c]=0;u.point.length=Q;u.directional.length=D;u.ambient[0]=m;u.ambient[1]=p;u.ambient[2]=A;b=Qa;h.ambientLightColor.value=b.ambient;h.directionalLightColor.value=b.directional.colors;h.directionalLightDirection.value=b.directional.positions;h.pointLightColor.value=b.point.colors;h.pointLightPosition.value=b.point.positions;h.pointLightDistance.value=b.point.distances}if(e instanceof
THREE.MeshBasicMaterial||e instanceof THREE.MeshLambertMaterial||e instanceof THREE.MeshPhongMaterial)h.opacity.value=e.opacity,K.gammaInput?h.diffuse.value.copyGammaToLinear(e.color):h.diffuse.value=e.color,(h.map.texture=e.map)&&h.offsetRepeat.value.set(e.map.offset.x,e.map.offset.y,e.map.repeat.x,e.map.repeat.y),h.lightMap.texture=e.lightMap,h.envMap.texture=e.envMap,h.flipEnvMap.value=e.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,h.reflectivity.value=e.reflectivity,h.refractionRatio.value=
e.refractionRatio,h.combine.value=e.combine,h.useRefract.value=e.envMap&&e.envMap.mapping instanceof THREE.CubeRefractionMapping;if(e instanceof THREE.LineBasicMaterial)h.diffuse.value=e.color,h.opacity.value=e.opacity;else if(e instanceof THREE.ParticleBasicMaterial)h.psColor.value=e.color,h.opacity.value=e.opacity,h.size.value=e.size,h.scale.value=qa.height/2,h.map.texture=e.map;else if(e instanceof THREE.MeshPhongMaterial)h.shininess.value=e.shininess,K.gammaInput?(h.ambient.value.copyGammaToLinear(e.ambient),
h.specular.value.copyGammaToLinear(e.specular)):(h.ambient.value=e.ambient,h.specular.value=e.specular);else if(e instanceof THREE.MeshLambertMaterial)K.gammaInput?h.ambient.value.copyGammaToLinear(e.ambient):h.ambient.value=e.ambient;else if(e instanceof THREE.MeshDepthMaterial)h.mNear.value=a.near,h.mFar.value=a.far,h.opacity.value=e.opacity;else if(e instanceof THREE.MeshNormalMaterial)h.opacity.value=e.opacity;if(f.receiveShadow&&!e._shadowPass&&h.shadowMatrix){for(b=0;b<Ga.length;b++)h.shadowMatrix.value[b]=
Ga[b],h.shadowMap.texture[b]=K.shadowMap[b];h.shadowDarkness.value=K.shadowMapDarkness;h.shadowBias.value=K.shadowMapBias}b=e.uniformsList;h=0;for(c=b.length;h<c;h++)if(p=g.uniforms[b[h][1]])if(m=b[h][0],A=m.type,n=m.value,A==="i")d.uniform1i(p,n);else if(A==="f")d.uniform1f(p,n);else if(A==="v2")d.uniform2f(p,n.x,n.y);else if(A==="v3")d.uniform3f(p,n.x,n.y,n.z);else if(A==="v4")d.uniform4f(p,n.x,n.y,n.z,n.w);else if(A==="c")d.uniform3f(p,n.r,n.g,n.b);else if(A==="fv1")d.uniform1fv(p,n);else if(A===
"fv")d.uniform3fv(p,n);else if(A==="v3v"){if(!m._array)m._array=new Float32Array(3*n.length);A=0;for(s=n.length;A<s;A++)u=A*3,m._array[u]=n[A].x,m._array[u+1]=n[A].y,m._array[u+2]=n[A].z;d.uniform3fv(p,m._array)}else if(A==="m4"){if(!m._array)m._array=new Float32Array(16);n.flattenToArray(m._array);d.uniformMatrix4fv(p,!1,m._array)}else if(A==="m4v"){if(!m._array)m._array=new Float32Array(16*n.length);A=0;for(s=n.length;A<s;A++)n[A].flattenToArrayOffset(m._array,A*16);d.uniformMatrix4fv(p,!1,m._array)}else if(A===
"t"){if(d.uniform1i(p,n),p=m.texture)if(p.image instanceof Array&&p.image.length===6){if(m=p,m.image.length===6)if(m.needsUpdate){if(!m.image.__webglTextureCube)m.image.__webglTextureCube=d.createTexture();d.activeTexture(d.TEXTURE0+n);d.bindTexture(d.TEXTURE_CUBE_MAP,m.image.__webglTextureCube);for(n=0;n<6;n++)d.texImage2D(d.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,m.image[n]);L(d.TEXTURE_CUBE_MAP,m,m.image[0]);m.needsUpdate=!1}else d.activeTexture(d.TEXTURE0+n),d.bindTexture(d.TEXTURE_CUBE_MAP,
m.image.__webglTextureCube)}else p instanceof THREE.WebGLRenderTargetCube?(m=p,d.activeTexture(d.TEXTURE0+n),d.bindTexture(d.TEXTURE_CUBE_MAP,m.__webglTexture)):ha(p,n)}else if(A==="tv"){if(!m._array){m._array=[];A=0;for(s=m.texture.length;A<s;A++)m._array[A]=n+A}d.uniform1iv(p,m._array);A=0;for(s=m.texture.length;A<s;A++)(p=m.texture[A])&&ha(p,m._array[A])}(e instanceof THREE.ShaderMaterial||e instanceof THREE.MeshPhongMaterial||e.envMap)&&i.cameraPosition!==null&&d.uniform3f(i.cameraPosition,a.position.x,
a.position.y,a.position.z);(e instanceof THREE.MeshPhongMaterial||e instanceof THREE.MeshLambertMaterial||e instanceof THREE.ShaderMaterial||e.skinning)&&i.viewMatrix!==null&&d.uniformMatrix4fv(i.viewMatrix,!1,Ka);e.skinning&&(d.uniformMatrix4fv(i.cameraInverseMatrix,!1,Ka),d.uniformMatrix4fv(i.boneGlobalMatrices,!1,f.boneMatrices))}d.uniformMatrix4fv(i.modelViewMatrix,!1,f._modelViewMatrixArray);i.normalMatrix&&d.uniformMatrix3fv(i.normalMatrix,!1,f._normalMatrixArray);(e instanceof THREE.ShaderMaterial||
e.envMap||e.skinning||f.receiveShadow)&&i.objectMatrix!==null&&d.uniformMatrix4fv(i.objectMatrix,!1,f._objectMatrixArray);return g}function ja(a,b,d){a._modelViewMatrix.multiplyToArray(b.matrixWorldInverse,a.matrixWorld,a._modelViewMatrixArray);d&&THREE.Matrix4.makeInvert3x3(a._modelViewMatrix).transposeIntoArray(a._normalMatrixArray)}function O(a){if(Ca!==a.doubleSided)a.doubleSided?d.disable(d.CULL_FACE):d.enable(d.CULL_FACE),Ca=a.doubleSided;if(Fa!==a.flipSided)a.flipSided?d.frontFace(d.CW):d.frontFace(d.CCW),
Fa=a.flipSided}function P(a){za!==a&&(a?d.enable(d.DEPTH_TEST):d.disable(d.DEPTH_TEST),za=a)}function ka(a){ta!==a&&(d.depthMask(a),ta=a)}function E(a,b,c){Ra!==a&&(a?d.enable(d.POLYGON_OFFSET_FILL):d.disable(d.POLYGON_OFFSET_FILL),Ra=a);if(a&&(Sa!==b||Ta!==c))d.polygonOffset(b,c),Sa=b,Ta=c}function ba(a){if(a!==ya){switch(a){case THREE.AdditiveBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.SRC_ALPHA,d.ONE);break;case THREE.SubtractiveBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.ZERO,d.ONE_MINUS_SRC_COLOR);
break;case THREE.MultiplyBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.ZERO,d.SRC_COLOR);break;default:d.blendEquationSeparate(d.FUNC_ADD,d.FUNC_ADD),d.blendFuncSeparate(d.SRC_ALPHA,d.ONE_MINUS_SRC_ALPHA,d.ONE,d.ONE_MINUS_SRC_ALPHA)}ya=a}}function F(a,b){var c;a==="fragment"?c=d.createShader(d.FRAGMENT_SHADER):a==="vertex"&&(c=d.createShader(d.VERTEX_SHADER));d.shaderSource(c,b);d.compileShader(c);if(!d.getShaderParameter(c,d.COMPILE_STATUS))return console.error(d.getShaderInfoLog(c)),console.error(b),
null;return c}function L(a,b,c){(c.width&c.width-1)===0&&(c.height&c.height-1)===0?(d.texParameteri(a,d.TEXTURE_WRAP_S,ga(b.wrapS)),d.texParameteri(a,d.TEXTURE_WRAP_T,ga(b.wrapT)),d.texParameteri(a,d.TEXTURE_MAG_FILTER,ga(b.magFilter)),d.texParameteri(a,d.TEXTURE_MIN_FILTER,ga(b.minFilter)),d.generateMipmap(a)):(d.texParameteri(a,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(a,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.texParameteri(a,d.TEXTURE_MAG_FILTER,ma(b.magFilter)),d.texParameteri(a,d.TEXTURE_MIN_FILTER,
ma(b.minFilter)))}function ha(a,b){if(a.needsUpdate){if(!a.__webglInit)a.__webglInit=!0,a.__webglTexture=d.createTexture(),K.info.memory.textures++;d.activeTexture(d.TEXTURE0+b);d.bindTexture(d.TEXTURE_2D,a.__webglTexture);a instanceof THREE.DataTexture?d.texImage2D(d.TEXTURE_2D,0,ga(a.format),a.image.width,a.image.height,0,ga(a.format),d.UNSIGNED_BYTE,a.image.data):d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,a.image);L(d.TEXTURE_2D,a,a.image);a.needsUpdate=!1}else d.activeTexture(d.TEXTURE0+
b),d.bindTexture(d.TEXTURE_2D,a.__webglTexture)}function H(a,b){d.bindRenderbuffer(d.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(d.renderbufferStorage(d.RENDERBUFFER,d.DEPTH_COMPONENT16,b.width,b.height),d.framebufferRenderbuffer(d.FRAMEBUFFER,d.DEPTH_ATTACHMENT,d.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(d.renderbufferStorage(d.RENDERBUFFER,d.DEPTH_STENCIL,b.width,b.height),d.framebufferRenderbuffer(d.FRAMEBUFFER,d.DEPTH_STENCIL_ATTACHMENT,d.RENDERBUFFER,a)):d.renderbufferStorage(d.RENDERBUFFER,
d.RGBA4,b.width,b.height)}function T(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){if(a.depthBuffer===void 0)a.depthBuffer=!0;if(a.stencilBuffer===void 0)a.stencilBuffer=!0;a.__webglTexture=d.createTexture();if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];d.bindTexture(d.TEXTURE_CUBE_MAP,a.__webglTexture);L(d.TEXTURE_CUBE_MAP,a,a);for(var c=0;c<6;c++){a.__webglFramebuffer[c]=d.createFramebuffer();a.__webglRenderbuffer[c]=d.createRenderbuffer();d.texImage2D(d.TEXTURE_CUBE_MAP_POSITIVE_X+
c,0,ga(a.format),a.width,a.height,0,ga(a.format),ga(a.type),null);var e=a,f=d.TEXTURE_CUBE_MAP_POSITIVE_X+c;d.bindFramebuffer(d.FRAMEBUFFER,a.__webglFramebuffer[c]);d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,f,e.__webglTexture,0);H(a.__webglRenderbuffer[c],a)}}else a.__webglFramebuffer=d.createFramebuffer(),a.__webglRenderbuffer=d.createRenderbuffer(),d.bindTexture(d.TEXTURE_2D,a.__webglTexture),L(d.TEXTURE_2D,a,a),d.texImage2D(d.TEXTURE_2D,0,ga(a.format),a.width,a.height,0,ga(a.format),
ga(a.type),null),c=d.TEXTURE_2D,d.bindFramebuffer(d.FRAMEBUFFER,a.__webglFramebuffer),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,c,a.__webglTexture,0),d.bindRenderbuffer(d.RENDERBUFFER,a.__webglRenderbuffer),H(a.__webglRenderbuffer,a);b?d.bindTexture(d.TEXTURE_CUBE_MAP,null):d.bindTexture(d.TEXTURE_2D,null);d.bindRenderbuffer(d.RENDERBUFFER,null);d.bindFramebuffer(d.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,f=e=0):(b=null,
c=Ia,a=Ea,e=Oa,f=Pa);b!==ia&&(d.bindFramebuffer(d.FRAMEBUFFER,b),d.viewport(e,f,c,a),ia=b)}function ma(a){switch(a){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return d.NEAREST;default:return d.LINEAR}}function ga(a){switch(a){case THREE.RepeatWrapping:return d.REPEAT;case THREE.ClampToEdgeWrapping:return d.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return d.MIRRORED_REPEAT;case THREE.NearestFilter:return d.NEAREST;case THREE.NearestMipMapNearestFilter:return d.NEAREST_MIPMAP_NEAREST;
case THREE.NearestMipMapLinearFilter:return d.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return d.LINEAR;case THREE.LinearMipMapNearestFilter:return d.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return d.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return d.BYTE;case THREE.UnsignedByteType:return d.UNSIGNED_BYTE;case THREE.ShortType:return d.SHORT;case THREE.UnsignedShortType:return d.UNSIGNED_SHORT;case THREE.IntType:return d.INT;case THREE.UnsignedShortType:return d.UNSIGNED_INT;case THREE.FloatType:return d.FLOAT;
case THREE.AlphaFormat:return d.ALPHA;case THREE.RGBFormat:return d.RGB;case THREE.RGBAFormat:return d.RGBA;case THREE.LuminanceFormat:return d.LUMINANCE;case THREE.LuminanceAlphaFormat:return d.LUMINANCE_ALPHA}return 0}var a=a||{},qa=a.canvas!==void 0?a.canvas:document.createElement("canvas"),sa=a.stencil!==void 0?a.stencil:!0,xa=a.antialias!==void 0?a.antialias:!1,Ba=a.preserveDrawingBuffer!==void 0?a.preserveDrawingBuffer:!1,ra=a.clearColor!==void 0?new THREE.Color(a.clearColor):new THREE.Color(0),
oa=a.clearAlpha!==void 0?a.clearAlpha:0,V=a.maxLights!==void 0?a.maxLights:4;this.domElement=qa;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapBias=0.0039;this.shadowMapDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCameraNear=1;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowMap=
[];this.shadowMapEnabled=!1;this.shadowMapSoft=this.shadowMapAutoUpdate=!0;this.maxMorphTargets=8;this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0}};var K=this,d,R=[],da=null,ia=null,S=-1,la=null,wa=0,Ca=null,Fa=null,ya=null,za=null,ta=null,Ra=null,Sa=null,Ta=null,Ja=null,Oa=0,Pa=0,Ia=0,Ea=0,na=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],Aa=new THREE.Matrix4,La=new Float32Array(16),Ka=new Float32Array(16),
Da=new THREE.Vector4,Qa={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]}},pa,Ga=[],Ha,Na,t={},Ua=!1;d=function(){var a;try{if(!(a=qa.getContext("experimental-webgl",{antialias:xa,stencil:sa,preserveDrawingBuffer:Ba})))throw"Error creating WebGL context.";console.log(navigator.userAgent+" | "+a.getParameter(a.VERSION)+" | "+a.getParameter(a.VENDOR)+" | "+a.getParameter(a.RENDERER)+" | "+a.getParameter(a.SHADING_LANGUAGE_VERSION))}catch(b){console.error(b)}return a}();
d.clearColor(0,0,0,1);d.clearDepth(1);d.clearStencil(0);d.enable(d.DEPTH_TEST);d.depthFunc(d.LEQUAL);d.frontFace(d.CCW);d.cullFace(d.BACK);d.enable(d.CULL_FACE);d.enable(d.BLEND);d.blendEquation(d.FUNC_ADD);d.blendFunc(d.SRC_ALPHA,d.ONE_MINUS_SRC_ALPHA);d.clearColor(ra.r,ra.g,ra.b,oa);(function(){t.vertices=new Float32Array(16);t.faces=new Uint16Array(6);var a=0;t.vertices[a++]=-1;t.vertices[a++]=-1;t.vertices[a++]=0;t.vertices[a++]=1;t.vertices[a++]=1;t.vertices[a++]=-1;t.vertices[a++]=1;t.vertices[a++]=
1;t.vertices[a++]=1;t.vertices[a++]=1;t.vertices[a++]=1;t.vertices[a++]=0;t.vertices[a++]=-1;t.vertices[a++]=1;t.vertices[a++]=0;a=t.vertices[a++]=0;t.faces[a++]=0;t.faces[a++]=1;t.faces[a++]=2;t.faces[a++]=0;t.faces[a++]=2;t.faces[a++]=3;t.vertexBuffer=d.createBuffer();t.elementBuffer=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,t.vertexBuffer);d.bufferData(d.ARRAY_BUFFER,t.vertices,d.STATIC_DRAW);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,t.elementBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,t.faces,d.STATIC_DRAW);
t.program=d.createProgram();d.attachShader(t.program,F("fragment",THREE.ShaderLib.sprite.fragmentShader));d.attachShader(t.program,F("vertex",THREE.ShaderLib.sprite.vertexShader));d.linkProgram(t.program);t.attributes={};t.uniforms={};t.attributes.position=d.getAttribLocation(t.program,"position");t.attributes.uv=d.getAttribLocation(t.program,"uv");t.uniforms.uvOffset=d.getUniformLocation(t.program,"uvOffset");t.uniforms.uvScale=d.getUniformLocation(t.program,"uvScale");t.uniforms.rotation=d.getUniformLocation(t.program,
"rotation");t.uniforms.scale=d.getUniformLocation(t.program,"scale");t.uniforms.alignment=d.getUniformLocation(t.program,"alignment");t.uniforms.color=d.getUniformLocation(t.program,"color");t.uniforms.map=d.getUniformLocation(t.program,"map");t.uniforms.opacity=d.getUniformLocation(t.program,"opacity");t.uniforms.useScreenCoordinates=d.getUniformLocation(t.program,"useScreenCoordinates");t.uniforms.affectedByDistance=d.getUniformLocation(t.program,"affectedByDistance");t.uniforms.screenPosition=
d.getUniformLocation(t.program,"screenPosition");t.uniforms.modelViewMatrix=d.getUniformLocation(t.program,"modelViewMatrix");t.uniforms.projectionMatrix=d.getUniformLocation(t.program,"projectionMatrix")})();(function(){var a=THREE.ShaderLib.depthRGBA,b=THREE.UniformsUtils.clone(a.uniforms);Ha=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:b});Na=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:b,morphTargets:!0});
Ha._shadowPass=!0;Na._shadowPass=!0})();this.context=d;var Va=d.getParameter(d.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0;this.getContext=function(){return d};this.supportsVertexTextures=function(){return Va};this.setSize=function(a,b){qa.width=a;qa.height=b;this.setViewport(0,0,qa.width,qa.height)};this.setViewport=function(a,b,c,e){Oa=a;Pa=b;Ia=c;Ea=e;d.viewport(Oa,Pa,Ia,Ea)};this.setScissor=function(a,b,c,e){d.scissor(a,b,c,e)};this.enableScissorTest=function(a){a?d.enable(d.SCISSOR_TEST):d.disable(d.SCISSOR_TEST)};
this.setClearColorHex=function(a,b){ra.setHex(a);oa=b;d.clearColor(ra.r,ra.g,ra.b,oa)};this.setClearColor=function(a,b){ra.copy(a);oa=b;d.clearColor(ra.r,ra.g,ra.b,oa)};this.getClearColor=function(){return ra};this.getClearAlpha=function(){return oa};this.clear=function(a,b,c){var e=0;if(a===void 0||a)e|=d.COLOR_BUFFER_BIT;if(b===void 0||b)e|=d.DEPTH_BUFFER_BIT;if(c===void 0||c)e|=d.STENCIL_BUFFER_BIT;d.clear(e)};this.clearTarget=function(a,b,c,d){T(a);this.clear(b,c,d)};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=
!1,delete a._modelViewMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._objectMatrixArray,a instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups){var c=a.geometry.geometryGroups[b];d.deleteBuffer(c.__webglVertexBuffer);d.deleteBuffer(c.__webglNormalBuffer);d.deleteBuffer(c.__webglTangentBuffer);d.deleteBuffer(c.__webglColorBuffer);d.deleteBuffer(c.__webglUVBuffer);d.deleteBuffer(c.__webglUV2Buffer);d.deleteBuffer(c.__webglSkinVertexABuffer);d.deleteBuffer(c.__webglSkinVertexBBuffer);
d.deleteBuffer(c.__webglSkinIndicesBuffer);d.deleteBuffer(c.__webglSkinWeightsBuffer);d.deleteBuffer(c.__webglFaceBuffer);d.deleteBuffer(c.__webglLineBuffer);if(c.numMorphTargets)for(var e=0,f=c.numMorphTargets;e<f;e++)d.deleteBuffer(c.__webglMorphTargetsBuffers[e]);K.info.memory.geometries--}else if(a instanceof THREE.Ribbon)a=a.geometry,d.deleteBuffer(a.__webglVertexBuffer),d.deleteBuffer(a.__webglColorBuffer),K.info.memory.geometries--;else if(a instanceof THREE.Line)a=a.geometry,d.deleteBuffer(a.__webglVertexBuffer),
d.deleteBuffer(a.__webglColorBuffer),K.info.memory.geometries--;else if(a instanceof THREE.ParticleSystem)a=a.geometry,d.deleteBuffer(a.__webglVertexBuffer),d.deleteBuffer(a.__webglColorBuffer),K.info.memory.geometries--};this.deallocateTexture=function(a){if(a.__webglInit)a.__webglInit=!1,d.deleteTexture(a.__webglTexture),K.info.memory.textures--};this.updateShadowMap=function(a,b){s(a,b)};this.render=function(a,b,c,e){var f,g,r,n,w=a.lights,C=a.fog;S=-1;this.autoUpdateObjects&&this.initWebGLObjects(a);
this.shadowMapEnabled&&this.shadowMapAutoUpdate&&s(a,b);K.info.render.calls=0;K.info.render.vertices=0;K.info.render.faces=0;b.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),a.add(b));this.autoUpdateScene&&a.updateMatrixWorld();b.matrixWorldInverse.getInverse(b.matrixWorld);b.matrixWorldInverse.flattenToArray(Ka);b.projectionMatrix.flattenToArray(La);Aa.multiply(b.projectionMatrix,b.matrixWorldInverse);i(Aa);T(c);(this.autoClear||e)&&this.clear(this.autoClearColor,
this.autoClearDepth,this.autoClearStencil);n=a.__webglObjects;e=0;for(f=n.length;e<f;e++)if(g=n[e],r=g.object,r.visible)if(!(r instanceof THREE.Mesh)||!r.frustumCulled||h(r)){r.matrixWorld.flattenToArray(r._objectMatrixArray);ja(r,b,!0);var j=g,m=j.object,G=j.buffer,A=void 0,A=A=void 0,A=m.material;if(A instanceof THREE.MeshFaceMaterial){if(A=G.materialIndex,A>=0)A=m.geometry.materials[A],A.transparent?(j.transparent=A,j.opaque=null):(j.opaque=A,j.transparent=null)}else if(A)A.transparent?(j.transparent=
A,j.opaque=null):(j.opaque=A,j.transparent=null);g.render=!0;if(this.sortObjects)r.renderDepth?g.z=r.renderDepth:(Da.copy(r.position),Aa.multiplyVector3(Da),g.z=Da.z)}else g.render=!1;else g.render=!1;this.sortObjects&&n.sort(p);n=a.__webglObjectsImmediate;e=0;for(f=n.length;e<f;e++)if(g=n[e],r=g.object,r.visible)r.matrixAutoUpdate&&r.matrixWorld.flattenToArray(r._objectMatrixArray),ja(r,b,!0),r=g.object.material,r.transparent?(g.transparent=r,g.opaque=null):(g.opaque=r,g.transparent=null);a.overrideMaterial?
(ba(a.overrideMaterial.blending),P(a.overrideMaterial.depthTest),ka(a.overrideMaterial.depthWrite),E(a.overrideMaterial.polygonOffset,a.overrideMaterial.polygonOffsetFactor,a.overrideMaterial.polygonOffsetUnits),l(a.__webglObjects,!1,"",b,w,C,!0,a.overrideMaterial),q(a.__webglObjectsImmediate,"",b,w,C,!1,a.overrideMaterial)):(ba(THREE.NormalBlending),l(a.__webglObjects,!0,"opaque",b,w,C,!1),q(a.__webglObjectsImmediate,"opaque",b,w,C,!1),l(a.__webglObjects,!1,"transparent",b,w,C,!0),q(a.__webglObjectsImmediate,
"transparent",b,w,C,!0));if(a.__webglSprites.length){r=t.attributes;w=t.uniforms;C=Ea/Ia;e=[];f=Ia*0.5;n=Ea*0.5;g=!0;d.useProgram(t.program);da=t.program;la=za=ya=-1;Ua||(d.enableVertexAttribArray(t.attributes.position),d.enableVertexAttribArray(t.attributes.uv),Ua=!0);d.disable(d.CULL_FACE);d.enable(d.BLEND);d.depthMask(!0);d.bindBuffer(d.ARRAY_BUFFER,t.vertexBuffer);d.vertexAttribPointer(r.position,2,d.FLOAT,!1,16,0);d.vertexAttribPointer(r.uv,2,d.FLOAT,!1,16,8);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,
t.elementBuffer);d.uniformMatrix4fv(w.projectionMatrix,!1,La);d.activeTexture(d.TEXTURE0);d.uniform1i(w.map,0);r=0;for(j=a.__webglSprites.length;r<j;r++)if(m=a.__webglSprites[r],m.visible&&m.opacity!==0)m.useScreenCoordinates?m.z=-m.position.z:(m._modelViewMatrix.multiplyToArray(b.matrixWorldInverse,m.matrixWorld,m._modelViewMatrixArray),m.z=-m._modelViewMatrix.n34);a.__webglSprites.sort(p);r=0;for(j=a.__webglSprites.length;r<j;r++)m=a.__webglSprites[r],m.visible&&m.opacity!==0&&m.map&&m.map.image&&
m.map.image.width&&(m.useScreenCoordinates?(d.uniform1i(w.useScreenCoordinates,1),d.uniform3f(w.screenPosition,(m.position.x-f)/f,(n-m.position.y)/n,Math.max(0,Math.min(1,m.position.z)))):(d.uniform1i(w.useScreenCoordinates,0),d.uniform1i(w.affectedByDistance,m.affectedByDistance?1:0),d.uniformMatrix4fv(w.modelViewMatrix,!1,m._modelViewMatrixArray)),b=m.map.image.width/(m.scaleByViewport?Ea:1),e[0]=b*C*m.scale.x,e[1]=b*m.scale.y,d.uniform2f(w.uvScale,m.uvScale.x,m.uvScale.y),d.uniform2f(w.uvOffset,
m.uvOffset.x,m.uvOffset.y),d.uniform2f(w.alignment,m.alignment.x,m.alignment.y),d.uniform1f(w.opacity,m.opacity),d.uniform3f(w.color,m.color.r,m.color.g,m.color.b),d.uniform1f(w.rotation,m.rotation),d.uniform2fv(w.scale,e),m.mergeWith3D&&!g?(d.enable(d.DEPTH_TEST),g=!0):!m.mergeWith3D&&g&&(d.disable(d.DEPTH_TEST),g=!1),ba(m.blending),ha(m.map,0),d.drawElements(d.TRIANGLES,6,d.UNSIGNED_SHORT,0));d.enable(d.CULL_FACE);d.enable(d.DEPTH_TEST);d.depthMask(ta)}c&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==
THREE.LinearFilter&&(c instanceof THREE.WebGLRenderTargetCube?(d.bindTexture(d.TEXTURE_CUBE_MAP,c.__webglTexture),d.generateMipmap(d.TEXTURE_CUBE_MAP),d.bindTexture(d.TEXTURE_CUBE_MAP,null)):(d.bindTexture(d.TEXTURE_2D,c.__webglTexture),d.generateMipmap(d.TEXTURE_2D),d.bindTexture(d.TEXTURE_2D,null)))};this.initWebGLObjects=function(a){if(!a.__webglObjects)a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[];for(;a.__objectsAdded.length;){var f=a.__objectsAdded[0],g=a,i=void 0,h=void 0,
l=void 0;if(!f.__webglInit)if(f.__webglInit=!0,f._modelViewMatrix=new THREE.Matrix4,f._normalMatrixArray=new Float32Array(9),f._modelViewMatrixArray=new Float32Array(16),f._objectMatrixArray=new Float32Array(16),f.matrixWorld.flattenToArray(f._objectMatrixArray),f instanceof THREE.Mesh){h=f.geometry;if(h.geometryGroups===void 0){var l=h,r=void 0,n=void 0,p=void 0,s=void 0,j=void 0,m=void 0,q=void 0,A={},t=l.morphTargets.length;l.geometryGroups={};r=0;for(n=l.faces.length;r<n;r++)p=l.faces[r],s=p.materialIndex,
m=s!==void 0?s:-1,A[m]===void 0&&(A[m]={hash:m,counter:0}),q=A[m].hash+"_"+A[m].counter,l.geometryGroups[q]===void 0&&(l.geometryGroups[q]={faces3:[],faces4:[],materialIndex:s,vertices:0,numMorphTargets:t}),j=p instanceof THREE.Face3?3:4,l.geometryGroups[q].vertices+j>65535&&(A[m].counter+=1,q=A[m].hash+"_"+A[m].counter,l.geometryGroups[q]===void 0&&(l.geometryGroups[q]={faces3:[],faces4:[],materialIndex:s,vertices:0,numMorphTargets:t})),p instanceof THREE.Face3?l.geometryGroups[q].faces3.push(r):
l.geometryGroups[q].faces4.push(r),l.geometryGroups[q].vertices+=j;l.geometryGroupsList=[];r=void 0;for(r in l.geometryGroups)l.geometryGroups[r].id=wa++,l.geometryGroupsList.push(l.geometryGroups[r])}for(i in h.geometryGroups)if(l=h.geometryGroups[i],!l.__webglVertexBuffer){r=l;r.__webglVertexBuffer=d.createBuffer();r.__webglNormalBuffer=d.createBuffer();r.__webglTangentBuffer=d.createBuffer();r.__webglColorBuffer=d.createBuffer();r.__webglUVBuffer=d.createBuffer();r.__webglUV2Buffer=d.createBuffer();
r.__webglSkinVertexABuffer=d.createBuffer();r.__webglSkinVertexBBuffer=d.createBuffer();r.__webglSkinIndicesBuffer=d.createBuffer();r.__webglSkinWeightsBuffer=d.createBuffer();r.__webglFaceBuffer=d.createBuffer();r.__webglLineBuffer=d.createBuffer();if(r.numMorphTargets){p=n=void 0;r.__webglMorphTargetsBuffers=[];n=0;for(p=r.numMorphTargets;n<p;n++)r.__webglMorphTargetsBuffers.push(d.createBuffer())}K.info.memory.geometries++;s=f;j=s.geometry;n=l.faces3;m=l.faces4;r=n.length*3+m.length*4;p=n.length*
1+m.length*2;m=n.length*3+m.length*4;n=c(s,l);q=n.map||n.lightMap||n instanceof THREE.ShaderMaterial?!0:!1;A=n instanceof THREE.MeshBasicMaterial&&!n.envMap||n instanceof THREE.MeshDepthMaterial?!1:n&&n.shading!==void 0&&n.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading;t=n.vertexColors?n.vertexColors:!1;l.__vertexArray=new Float32Array(r*3);if(A)l.__normalArray=new Float32Array(r*3);if(j.hasTangents)l.__tangentArray=new Float32Array(r*4);if(t)l.__colorArray=new Float32Array(r*
3);if(q){if(j.faceUvs.length>0||j.faceVertexUvs.length>0)l.__uvArray=new Float32Array(r*2);if(j.faceUvs.length>1||j.faceVertexUvs.length>1)l.__uv2Array=new Float32Array(r*2)}if(s.geometry.skinWeights.length&&s.geometry.skinIndices.length)l.__skinVertexAArray=new Float32Array(r*4),l.__skinVertexBArray=new Float32Array(r*4),l.__skinIndexArray=new Float32Array(r*4),l.__skinWeightArray=new Float32Array(r*4);l.__faceArray=new Uint16Array(p*3);l.__lineArray=new Uint16Array(m*2);if(l.numMorphTargets){l.__morphTargetsArrays=
[];s=0;for(j=l.numMorphTargets;s<j;s++)l.__morphTargetsArrays.push(new Float32Array(r*3))}l.__needsSmoothNormals=A===THREE.SmoothShading;l.__uvType=q;l.__vertexColorType=t;l.__normalType=A;l.__webglFaceCount=p*3;l.__webglLineCount=m*2;if(n.attributes){if(l.__webglCustomAttributesList===void 0)l.__webglCustomAttributesList=[];p=void 0;for(p in n.attributes){var s=n.attributes[p],j={},D;for(D in s)j[D]=s[D];if(!j.__webglInitialized||j.createUniqueBuffers)j.__webglInitialized=!0,m=1,j.type==="v2"?m=
2:j.type==="v3"?m=3:j.type==="v4"?m=4:j.type==="c"&&(m=3),j.size=m,j.array=new Float32Array(r*m),j.buffer=d.createBuffer(),j.buffer.belongsToAttribute=p,s.needsUpdate=!0,j.__original=s;l.__webglCustomAttributesList.push(j)}}l.__inittedArrays=!0;h.__dirtyVertices=!0;h.__dirtyMorphTargets=!0;h.__dirtyElements=!0;h.__dirtyUvs=!0;h.__dirtyNormals=!0;h.__dirtyTangents=!0;h.__dirtyColors=!0}}else if(f instanceof THREE.Ribbon){if(h=f.geometry,!h.__webglVertexBuffer)l=h,l.__webglVertexBuffer=d.createBuffer(),
l.__webglColorBuffer=d.createBuffer(),K.info.memory.geometries++,l=h,r=l.vertices.length,l.__vertexArray=new Float32Array(r*3),l.__colorArray=new Float32Array(r*3),l.__webglVertexCount=r,h.__dirtyVertices=!0,h.__dirtyColors=!0}else if(f instanceof THREE.Line){if(h=f.geometry,!h.__webglVertexBuffer)l=h,l.__webglVertexBuffer=d.createBuffer(),l.__webglColorBuffer=d.createBuffer(),K.info.memory.geometries++,l=h,r=f,n=l.vertices.length,l.__vertexArray=new Float32Array(n*3),l.__colorArray=new Float32Array(n*
3),l.__webglLineCount=n,b(l,r),h.__dirtyVertices=!0,h.__dirtyColors=!0}else if(f instanceof THREE.ParticleSystem&&(h=f.geometry,!h.__webglVertexBuffer))l=h,l.__webglVertexBuffer=d.createBuffer(),l.__webglColorBuffer=d.createBuffer(),K.info.geometries++,l=h,r=f,n=l.vertices.length,l.__vertexArray=new Float32Array(n*3),l.__colorArray=new Float32Array(n*3),l.__sortArray=[],l.__webglParticleCount=n,b(l,r),h.__dirtyVertices=!0,h.__dirtyColors=!0;if(!f.__webglActive){if(f instanceof THREE.Mesh)for(i in h=
f.geometry,h.geometryGroups)l=h.geometryGroups[i],w(g.__webglObjects,l,f);else f instanceof THREE.Ribbon||f instanceof THREE.Line||f instanceof THREE.ParticleSystem?(h=f.geometry,w(g.__webglObjects,h,f)):THREE.MarchingCubes!==void 0&&f instanceof THREE.MarchingCubes||f.immediateRenderCallback?g.__webglObjectsImmediate.push({object:f,opaque:null,transparent:null}):f instanceof THREE.Sprite&&g.__webglSprites.push(f);f.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){f=
a.__objectsRemoved[0];g=a;if(f instanceof THREE.Mesh||f instanceof THREE.ParticleSystem||f instanceof THREE.Ribbon||f instanceof THREE.Line)N(g.__webglObjects,f);else if(f instanceof THREE.Sprite){g=g.__webglSprites;i=f;for(h=g.length-1;h>=0;h--)g[h]===i&&g.splice(h,1)}else(f instanceof THREE.MarchingCubes||f.immediateRenderCallback)&&N(g.__webglObjectsImmediate,f);f.__webglActive=!1;a.__objectsRemoved.splice(0,1)}f=0;for(g=a.__webglObjects.length;f<g;f++)if(D=a.__webglObjects[f].object,i=D.geometry,
h=p=n=void 0,D instanceof THREE.Mesh){l=0;for(r=i.geometryGroupsList.length;l<r;l++)if(n=i.geometryGroupsList[l],h=c(D,n),p=h.attributes&&C(h),i.__dirtyVertices||i.__dirtyMorphTargets||i.__dirtyElements||i.__dirtyUvs||i.__dirtyNormals||i.__dirtyColors||i.__dirtyTangents||p)if(p=d.DYNAMIC_DRAW,s=!i.dynamic,n.__inittedArrays){var E=m=j=void 0,u=void 0,F=void 0,L=void 0,v=void 0,H=void 0,O=void 0,ba=void 0,Q=E=L=O=void 0,x=void 0,y=void 0,z=void 0,M=void 0,Z=void 0,$=void 0,W=u=O=u=void 0,X=void 0,J=
u=z=y=x=M=z=y=x=M=z=y=x=M=z=y=x=v=void 0,Y=void 0,S=L=void 0,U=E=void 0,ea=void 0,P=void 0,B=Q=U=Y=0,T=0,aa=J=E=0,R=v=Z=0,o=0,I=0,I=void 0,ea=n.__vertexArray,da=n.__uvArray,o=n.__uv2Array,S=n.__normalArray,F=n.__tangentArray,$=n.__colorArray,W=n.__skinVertexAArray,X=n.__skinVertexBArray,H=n.__skinIndexArray,fa=n.__skinWeightArray,ga=n.__morphTargetsArrays,q=n.__webglCustomAttributesList,k=void 0,k=n.__faceArray,I=n.__lineArray,ha=n.__needsSmoothNormals,O=n.__vertexColorType,ba=n.__uvType,L=n.__normalType,
V=D.geometry,ka=V.__dirtyElements,ja=V.__dirtyUvs,ma=V.__dirtyNormals,oa=V.__dirtyTangents,pa=V.__dirtyColors,P=V.__dirtyMorphTargets,ia=V.vertices,A=n.faces3,t=n.faces4,ca=V.faces,qa=V.faceVertexUvs[0],ra=V.faceVertexUvs[1],la=V.skinVerticesA,na=V.skinVerticesB,sa=V.skinIndices,ta=V.skinWeights,va=V.morphTargets;if(V.__dirtyVertices){j=0;for(m=A.length;j<m;j++)u=ca[A[j]],x=ia[u.a].position,y=ia[u.b].position,z=ia[u.c].position,ea[U]=x.x,ea[U+1]=x.y,ea[U+2]=x.z,ea[U+3]=y.x,ea[U+4]=y.y,ea[U+5]=y.z,
ea[U+6]=z.x,ea[U+7]=z.y,ea[U+8]=z.z,U+=9;j=0;for(m=t.length;j<m;j++)u=ca[t[j]],x=ia[u.a].position,y=ia[u.b].position,z=ia[u.c].position,M=ia[u.d].position,ea[U]=x.x,ea[U+1]=x.y,ea[U+2]=x.z,ea[U+3]=y.x,ea[U+4]=y.y,ea[U+5]=y.z,ea[U+6]=z.x,ea[U+7]=z.y,ea[U+8]=z.z,ea[U+9]=M.x,ea[U+10]=M.y,ea[U+11]=M.z,U+=12;d.bindBuffer(d.ARRAY_BUFFER,n.__webglVertexBuffer);d.bufferData(d.ARRAY_BUFFER,ea,p)}if(P){j=0;for(m=A.length;j<m;j++){u=ca[A[j]];U=0;for(ea=va.length;U<ea;U++)x=va[U].vertices[u.a].position,y=va[U].vertices[u.b].position,
z=va[U].vertices[u.c].position,P=ga[U],P[R]=x.x,P[R+1]=x.y,P[R+2]=x.z,P[R+3]=y.x,P[R+4]=y.y,P[R+5]=y.z,P[R+6]=z.x,P[R+7]=z.y,P[R+8]=z.z;R+=9}j=0;for(m=t.length;j<m;j++){u=ca[t[j]];U=0;for(ea=va.length;U<ea;U++)x=va[U].vertices[u.a].position,y=va[U].vertices[u.b].position,z=va[U].vertices[u.c].position,M=va[U].vertices[u.d].position,P=ga[U],P[R]=x.x,P[R+1]=x.y,P[R+2]=x.z,P[R+3]=y.x,P[R+4]=y.y,P[R+5]=y.z,P[R+6]=z.x,P[R+7]=z.y,P[R+8]=z.z,P[R+9]=M.x,P[R+10]=M.y,P[R+11]=M.z;R+=12}U=0;for(ea=va.length;U<
ea;U++)d.bindBuffer(d.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[U]),d.bufferData(d.ARRAY_BUFFER,ga[U],p)}if(ta.length){j=0;for(m=A.length;j<m;j++)u=ca[A[j]],x=ta[u.a],y=ta[u.b],z=ta[u.c],fa[v]=x.x,fa[v+1]=x.y,fa[v+2]=x.z,fa[v+3]=x.w,fa[v+4]=y.x,fa[v+5]=y.y,fa[v+6]=y.z,fa[v+7]=y.w,fa[v+8]=z.x,fa[v+9]=z.y,fa[v+10]=z.z,fa[v+11]=z.w,x=sa[u.a],y=sa[u.b],z=sa[u.c],H[v]=x.x,H[v+1]=x.y,H[v+2]=x.z,H[v+3]=x.w,H[v+4]=y.x,H[v+5]=y.y,H[v+6]=y.z,H[v+7]=y.w,H[v+8]=z.x,H[v+9]=z.y,H[v+10]=z.z,H[v+11]=z.w,x=la[u.a],
y=la[u.b],z=la[u.c],W[v]=x.x,W[v+1]=x.y,W[v+2]=x.z,W[v+3]=1,W[v+4]=y.x,W[v+5]=y.y,W[v+6]=y.z,W[v+7]=1,W[v+8]=z.x,W[v+9]=z.y,W[v+10]=z.z,W[v+11]=1,x=na[u.a],y=na[u.b],z=na[u.c],X[v]=x.x,X[v+1]=x.y,X[v+2]=x.z,X[v+3]=1,X[v+4]=y.x,X[v+5]=y.y,X[v+6]=y.z,X[v+7]=1,X[v+8]=z.x,X[v+9]=z.y,X[v+10]=z.z,X[v+11]=1,v+=12;j=0;for(m=t.length;j<m;j++)u=ca[t[j]],x=ta[u.a],y=ta[u.b],z=ta[u.c],M=ta[u.d],fa[v]=x.x,fa[v+1]=x.y,fa[v+2]=x.z,fa[v+3]=x.w,fa[v+4]=y.x,fa[v+5]=y.y,fa[v+6]=y.z,fa[v+7]=y.w,fa[v+8]=z.x,fa[v+9]=z.y,
fa[v+10]=z.z,fa[v+11]=z.w,fa[v+12]=M.x,fa[v+13]=M.y,fa[v+14]=M.z,fa[v+15]=M.w,x=sa[u.a],y=sa[u.b],z=sa[u.c],M=sa[u.d],H[v]=x.x,H[v+1]=x.y,H[v+2]=x.z,H[v+3]=x.w,H[v+4]=y.x,H[v+5]=y.y,H[v+6]=y.z,H[v+7]=y.w,H[v+8]=z.x,H[v+9]=z.y,H[v+10]=z.z,H[v+11]=z.w,H[v+12]=M.x,H[v+13]=M.y,H[v+14]=M.z,H[v+15]=M.w,x=la[u.a],y=la[u.b],z=la[u.c],M=la[u.d],W[v]=x.x,W[v+1]=x.y,W[v+2]=x.z,W[v+3]=1,W[v+4]=y.x,W[v+5]=y.y,W[v+6]=y.z,W[v+7]=1,W[v+8]=z.x,W[v+9]=z.y,W[v+10]=z.z,W[v+11]=1,W[v+12]=M.x,W[v+13]=M.y,W[v+14]=M.z,W[v+
15]=1,x=na[u.a],y=na[u.b],z=na[u.c],u=na[u.d],X[v]=x.x,X[v+1]=x.y,X[v+2]=x.z,X[v+3]=1,X[v+4]=y.x,X[v+5]=y.y,X[v+6]=y.z,X[v+7]=1,X[v+8]=z.x,X[v+9]=z.y,X[v+10]=z.z,X[v+11]=1,X[v+12]=u.x,X[v+13]=u.y,X[v+14]=u.z,X[v+15]=1,v+=16;v>0&&(d.bindBuffer(d.ARRAY_BUFFER,n.__webglSkinVertexABuffer),d.bufferData(d.ARRAY_BUFFER,W,p),d.bindBuffer(d.ARRAY_BUFFER,n.__webglSkinVertexBBuffer),d.bufferData(d.ARRAY_BUFFER,X,p),d.bindBuffer(d.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),d.bufferData(d.ARRAY_BUFFER,H,p),d.bindBuffer(d.ARRAY_BUFFER,
n.__webglSkinWeightsBuffer),d.bufferData(d.ARRAY_BUFFER,fa,p))}if(pa&&O){j=0;for(m=A.length;j<m;j++)u=ca[A[j]],v=u.vertexColors,H=u.color,v.length===3&&O===THREE.VertexColors?(u=v[0],W=v[1],X=v[2]):X=W=u=H,$[Z]=u.r,$[Z+1]=u.g,$[Z+2]=u.b,$[Z+3]=W.r,$[Z+4]=W.g,$[Z+5]=W.b,$[Z+6]=X.r,$[Z+7]=X.g,$[Z+8]=X.b,Z+=9;j=0;for(m=t.length;j<m;j++)u=ca[t[j]],v=u.vertexColors,H=u.color,v.length===4&&O===THREE.VertexColors?(u=v[0],W=v[1],X=v[2],v=v[3]):v=X=W=u=H,$[Z]=u.r,$[Z+1]=u.g,$[Z+2]=u.b,$[Z+3]=W.r,$[Z+4]=W.g,
$[Z+5]=W.b,$[Z+6]=X.r,$[Z+7]=X.g,$[Z+8]=X.b,$[Z+9]=v.r,$[Z+10]=v.g,$[Z+11]=v.b,Z+=12;Z>0&&(d.bindBuffer(d.ARRAY_BUFFER,n.__webglColorBuffer),d.bufferData(d.ARRAY_BUFFER,$,p))}if(oa&&V.hasTangents){j=0;for(m=A.length;j<m;j++)u=ca[A[j]],O=u.vertexTangents,Z=O[0],$=O[1],u=O[2],F[J]=Z.x,F[J+1]=Z.y,F[J+2]=Z.z,F[J+3]=Z.w,F[J+4]=$.x,F[J+5]=$.y,F[J+6]=$.z,F[J+7]=$.w,F[J+8]=u.x,F[J+9]=u.y,F[J+10]=u.z,F[J+11]=u.w,J+=12;j=0;for(m=t.length;j<m;j++)u=ca[t[j]],O=u.vertexTangents,Z=O[0],$=O[1],u=O[2],O=O[3],F[J]=
Z.x,F[J+1]=Z.y,F[J+2]=Z.z,F[J+3]=Z.w,F[J+4]=$.x,F[J+5]=$.y,F[J+6]=$.z,F[J+7]=$.w,F[J+8]=u.x,F[J+9]=u.y,F[J+10]=u.z,F[J+11]=u.w,F[J+12]=O.x,F[J+13]=O.y,F[J+14]=O.z,F[J+15]=O.w,J+=16;d.bindBuffer(d.ARRAY_BUFFER,n.__webglTangentBuffer);d.bufferData(d.ARRAY_BUFFER,F,p)}if(ma&&L){j=0;for(m=A.length;j<m;j++)if(u=ca[A[j]],F=u.vertexNormals,L=u.normal,F.length===3&&ha)for(J=0;J<3;J++)L=F[J],S[E]=L.x,S[E+1]=L.y,S[E+2]=L.z,E+=3;else for(J=0;J<3;J++)S[E]=L.x,S[E+1]=L.y,S[E+2]=L.z,E+=3;j=0;for(m=t.length;j<m;j++)if(u=
ca[t[j]],F=u.vertexNormals,L=u.normal,F.length===4&&ha)for(J=0;J<4;J++)L=F[J],S[E]=L.x,S[E+1]=L.y,S[E+2]=L.z,E+=3;else for(J=0;J<4;J++)S[E]=L.x,S[E+1]=L.y,S[E+2]=L.z,E+=3;d.bindBuffer(d.ARRAY_BUFFER,n.__webglNormalBuffer);d.bufferData(d.ARRAY_BUFFER,S,p)}if(ja&&qa&&ba){j=0;for(m=A.length;j<m;j++)if(E=A[j],E=qa[E],E!==void 0)for(J=0;J<3;J++)S=E[J],da[Q]=S.u,da[Q+1]=S.v,Q+=2;j=0;for(m=t.length;j<m;j++)if(E=t[j],E=qa[E],E!==void 0)for(J=0;J<4;J++)S=E[J],da[Q]=S.u,da[Q+1]=S.v,Q+=2;Q>0&&(d.bindBuffer(d.ARRAY_BUFFER,
n.__webglUVBuffer),d.bufferData(d.ARRAY_BUFFER,da,p))}if(ja&&ra&&ba){j=0;for(m=A.length;j<m;j++)if(E=A[j],Q=ra[E],Q!==void 0)for(J=0;J<3;J++)E=Q[J],o[B]=E.u,o[B+1]=E.v,B+=2;j=0;for(m=t.length;j<m;j++)if(E=t[j],Q=ra[E],Q!==void 0)for(J=0;J<4;J++)E=Q[J],o[B]=E.u,o[B+1]=E.v,B+=2;B>0&&(d.bindBuffer(d.ARRAY_BUFFER,n.__webglUV2Buffer),d.bufferData(d.ARRAY_BUFFER,o,p))}if(ka){j=0;for(m=A.length;j<m;j++)k[T]=Y,k[T+1]=Y+1,k[T+2]=Y+2,T+=3,I[aa]=Y,I[aa+1]=Y+1,I[aa+2]=Y,I[aa+3]=Y+2,I[aa+4]=Y+1,I[aa+5]=Y+2,aa+=
6,Y+=3;j=0;for(m=t.length;j<m;j++)k[T]=Y,k[T+1]=Y+1,k[T+2]=Y+3,k[T+3]=Y+1,k[T+4]=Y+2,k[T+5]=Y+3,T+=6,I[aa]=Y,I[aa+1]=Y+1,I[aa+2]=Y,I[aa+3]=Y+3,I[aa+4]=Y+1,I[aa+5]=Y+2,I[aa+6]=Y+2,I[aa+7]=Y+3,aa+=8,Y+=4;d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,k,p);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,I,p)}if(q){J=0;for(Y=q.length;J<Y;J++)if(k=q[J],k.__original.needsUpdate){I=o=0;if(k.size===1)if(k.boundTo===
void 0||k.boundTo==="vertices"){j=0;for(m=A.length;j<m;j++)u=ca[A[j]],k.array[o]=k.value[u.a],k.array[o+1]=k.value[u.b],k.array[o+2]=k.value[u.c],o+=3;j=0;for(m=t.length;j<m;j++)u=ca[t[j]],k.array[o]=k.value[u.a],k.array[o+1]=k.value[u.b],k.array[o+2]=k.value[u.c],k.array[o+3]=k.value[u.d],o+=4}else if(k.boundTo==="faces"){j=0;for(m=A.length;j<m;j++)I=k.value[A[j]],k.array[o]=I,k.array[o+1]=I,k.array[o+2]=I,o+=3;j=0;for(m=t.length;j<m;j++)I=k.value[t[j]],k.array[o]=I,k.array[o+1]=I,k.array[o+2]=I,
k.array[o+3]=I,o+=4}else{if(k.boundTo==="faceVertices"){j=0;for(m=A.length;j<m;j++)k.array[o]=k.value[I],k.array[o+1]=k.value[I+1],k.array[o+2]=k.value[I+2],o+=3,I+=3;j=0;for(m=t.length;j<m;j++)k.array[o]=k.value[I],k.array[o+1]=k.value[I+1],k.array[o+2]=k.value[I+2],k.array[o+3]=k.value[I+3],o+=4,I+=4}}else if(k.size===2)if(k.boundTo===void 0||k.boundTo==="vertices"){j=0;for(m=A.length;j<m;j++)u=ca[A[j]],x=k.value[u.a],y=k.value[u.b],z=k.value[u.c],k.array[o]=x.x,k.array[o+1]=x.y,k.array[o+2]=y.x,
k.array[o+3]=y.y,k.array[o+4]=z.x,k.array[o+5]=z.y,o+=6;j=0;for(m=t.length;j<m;j++)u=ca[t[j]],x=k.value[u.a],y=k.value[u.b],z=k.value[u.c],M=k.value[u.d],k.array[o]=x.x,k.array[o+1]=x.y,k.array[o+2]=y.x,k.array[o+3]=y.y,k.array[o+4]=z.x,k.array[o+5]=z.y,k.array[o+6]=M.x,k.array[o+7]=M.y,o+=8}else if(k.boundTo==="faces"){j=0;for(m=A.length;j<m;j++)z=y=x=I=k.value[A[j]],k.array[o]=x.x,k.array[o+1]=x.y,k.array[o+2]=y.x,k.array[o+3]=y.y,k.array[o+4]=z.x,k.array[o+5]=z.y,o+=6;j=0;for(m=t.length;j<m;j++)M=
z=y=x=I=k.value[t[j]],k.array[o]=x.x,k.array[o+1]=x.y,k.array[o+2]=y.x,k.array[o+3]=y.y,k.array[o+4]=z.x,k.array[o+5]=z.y,k.array[o+6]=M.x,k.array[o+7]=M.y,o+=8}else{if(k.boundTo==="faceVertices"){j=0;for(m=A.length;j<m;j++)x=k.value[I],y=k.value[I+1],z=k.value[I+2],k.array[o]=x.x,k.array[o+1]=x.y,k.array[o+2]=y.x,k.array[o+3]=y.y,k.array[o+4]=z.x,k.array[o+5]=z.y,o+=6,I+=3;j=0;for(m=t.length;j<m;j++)x=k.value[I],y=k.value[I+1],z=k.value[I+2],M=k.value[I+3],k.array[o]=x.x,k.array[o+1]=x.y,k.array[o+
2]=y.x,k.array[o+3]=y.y,k.array[o+4]=z.x,k.array[o+5]=z.y,k.array[o+6]=M.x,k.array[o+7]=M.y,o+=8,I+=4}}else if(k.size===3)if(B=k.type==="c"?["r","g","b"]:["x","y","z"],k.boundTo===void 0||k.boundTo==="vertices"){j=0;for(m=A.length;j<m;j++)u=ca[A[j]],x=k.value[u.a],y=k.value[u.b],z=k.value[u.c],k.array[o]=x[B[0]],k.array[o+1]=x[B[1]],k.array[o+2]=x[B[2]],k.array[o+3]=y[B[0]],k.array[o+4]=y[B[1]],k.array[o+5]=y[B[2]],k.array[o+6]=z[B[0]],k.array[o+7]=z[B[1]],k.array[o+8]=z[B[2]],o+=9;j=0;for(m=t.length;j<
m;j++)u=ca[t[j]],x=k.value[u.a],y=k.value[u.b],z=k.value[u.c],M=k.value[u.d],k.array[o]=x[B[0]],k.array[o+1]=x[B[1]],k.array[o+2]=x[B[2]],k.array[o+3]=y[B[0]],k.array[o+4]=y[B[1]],k.array[o+5]=y[B[2]],k.array[o+6]=z[B[0]],k.array[o+7]=z[B[1]],k.array[o+8]=z[B[2]],k.array[o+9]=M[B[0]],k.array[o+10]=M[B[1]],k.array[o+11]=M[B[2]],o+=12}else if(k.boundTo==="faces"){j=0;for(m=A.length;j<m;j++)z=y=x=I=k.value[A[j]],k.array[o]=x[B[0]],k.array[o+1]=x[B[1]],k.array[o+2]=x[B[2]],k.array[o+3]=y[B[0]],k.array[o+
4]=y[B[1]],k.array[o+5]=y[B[2]],k.array[o+6]=z[B[0]],k.array[o+7]=z[B[1]],k.array[o+8]=z[B[2]],o+=9;j=0;for(m=t.length;j<m;j++)M=z=y=x=I=k.value[t[j]],k.array[o]=x[B[0]],k.array[o+1]=x[B[1]],k.array[o+2]=x[B[2]],k.array[o+3]=y[B[0]],k.array[o+4]=y[B[1]],k.array[o+5]=y[B[2]],k.array[o+6]=z[B[0]],k.array[o+7]=z[B[1]],k.array[o+8]=z[B[2]],k.array[o+9]=M[B[0]],k.array[o+10]=M[B[1]],k.array[o+11]=M[B[2]],o+=12}else{if(k.boundTo==="faceVertices"){j=0;for(m=A.length;j<m;j++)x=k.value[I],y=k.value[I+1],z=
k.value[I+2],k.array[o]=x[B[0]],k.array[o+1]=x[B[1]],k.array[o+2]=x[B[2]],k.array[o+3]=y[B[0]],k.array[o+4]=y[B[1]],k.array[o+5]=y[B[2]],k.array[o+6]=z[B[0]],k.array[o+7]=z[B[1]],k.array[o+8]=z[B[2]],o+=9,I+=3;j=0;for(m=t.length;j<m;j++)x=k.value[I],y=k.value[I+1],z=k.value[I+2],M=k.value[I+3],k.array[o]=x[B[0]],k.array[o+1]=x[B[1]],k.array[o+2]=x[B[2]],k.array[o+3]=y[B[0]],k.array[o+4]=y[B[1]],k.array[o+5]=y[B[2]],k.array[o+6]=z[B[0]],k.array[o+7]=z[B[1]],k.array[o+8]=z[B[2]],k.array[o+9]=M[B[0]],
k.array[o+10]=M[B[1]],k.array[o+11]=M[B[2]],o+=12,I+=4}}else if(k.size===4)if(k.boundTo===void 0||k.boundTo==="vertices"){j=0;for(m=A.length;j<m;j++)u=ca[A[j]],x=k.value[u.a],y=k.value[u.b],z=k.value[u.c],k.array[o]=x.x,k.array[o+1]=x.y,k.array[o+2]=x.z,k.array[o+3]=x.w,k.array[o+4]=y.x,k.array[o+5]=y.y,k.array[o+6]=y.z,k.array[o+7]=y.w,k.array[o+8]=z.x,k.array[o+9]=z.y,k.array[o+10]=z.z,k.array[o+11]=z.w,o+=12;j=0;for(m=t.length;j<m;j++)u=ca[t[j]],x=k.value[u.a],y=k.value[u.b],z=k.value[u.c],M=k.value[u.d],
k.array[o]=x.x,k.array[o+1]=x.y,k.array[o+2]=x.z,k.array[o+3]=x.w,k.array[o+4]=y.x,k.array[o+5]=y.y,k.array[o+6]=y.z,k.array[o+7]=y.w,k.array[o+8]=z.x,k.array[o+9]=z.y,k.array[o+10]=z.z,k.array[o+11]=z.w,k.array[o+12]=M.x,k.array[o+13]=M.y,k.array[o+14]=M.z,k.array[o+15]=M.w,o+=16}else if(k.boundTo==="faces"){j=0;for(m=A.length;j<m;j++)z=y=x=I=k.value[A[j]],k.array[o]=x.x,k.array[o+1]=x.y,k.array[o+2]=x.z,k.array[o+3]=x.w,k.array[o+4]=y.x,k.array[o+5]=y.y,k.array[o+6]=y.z,k.array[o+7]=y.w,k.array[o+
8]=z.x,k.array[o+9]=z.y,k.array[o+10]=z.z,k.array[o+11]=z.w,o+=12;j=0;for(m=t.length;j<m;j++)M=z=y=x=I=k.value[t[j]],k.array[o]=x.x,k.array[o+1]=x.y,k.array[o+2]=x.z,k.array[o+3]=x.w,k.array[o+4]=y.x,k.array[o+5]=y.y,k.array[o+6]=y.z,k.array[o+7]=y.w,k.array[o+8]=z.x,k.array[o+9]=z.y,k.array[o+10]=z.z,k.array[o+11]=z.w,k.array[o+12]=M.x,k.array[o+13]=M.y,k.array[o+14]=M.z,k.array[o+15]=M.w,o+=16}else if(k.boundTo==="faceVertices"){j=0;for(m=A.length;j<m;j++)x=k.value[I],y=k.value[I+1],z=k.value[I+
2],k.array[o]=x.x,k.array[o+1]=x.y,k.array[o+2]=x.z,k.array[o+3]=x.w,k.array[o+4]=y.x,k.array[o+5]=y.y,k.array[o+6]=y.z,k.array[o+7]=y.w,k.array[o+8]=z.x,k.array[o+9]=z.y,k.array[o+10]=z.z,k.array[o+11]=z.w,o+=12,I+=3;j=0;for(m=t.length;j<m;j++)x=k.value[I],y=k.value[I+1],z=k.value[I+2],M=k.value[I+3],k.array[o]=x.x,k.array[o+1]=x.y,k.array[o+2]=x.z,k.array[o+3]=x.w,k.array[o+4]=y.x,k.array[o+5]=y.y,k.array[o+6]=y.z,k.array[o+7]=y.w,k.array[o+8]=z.x,k.array[o+9]=z.y,k.array[o+10]=z.z,k.array[o+11]=
z.w,k.array[o+12]=M.x,k.array[o+13]=M.y,k.array[o+14]=M.z,k.array[o+15]=M.w,o+=16,I+=4}d.bindBuffer(d.ARRAY_BUFFER,k.buffer);d.bufferData(d.ARRAY_BUFFER,k.array,p)}}s&&(delete n.__inittedArrays,delete n.__colorArray,delete n.__normalArray,delete n.__tangentArray,delete n.__uvArray,delete n.__uv2Array,delete n.__faceArray,delete n.__vertexArray,delete n.__lineArray,delete n.__skinVertexAArray,delete n.__skinVertexBArray,delete n.__skinIndexArray,delete n.__skinWeightArray)}i.__dirtyVertices=!1;i.__dirtyMorphTargets=
!1;i.__dirtyElements=!1;i.__dirtyUvs=!1;i.__dirtyNormals=!1;i.__dirtyColors=!1;i.__dirtyTangents=!1;h.attributes&&G(h)}else if(D instanceof THREE.Ribbon){if(i.__dirtyVertices||i.__dirtyColors){h=i;D=d.DYNAMIC_DRAW;j=l=j=s=s=void 0;m=h.vertices;r=h.colors;q=m.length;n=r.length;A=h.__vertexArray;p=h.__colorArray;t=h.__dirtyColors;if(h.__dirtyVertices){for(s=0;s<q;s++)j=m[s].position,l=s*3,A[l]=j.x,A[l+1]=j.y,A[l+2]=j.z;d.bindBuffer(d.ARRAY_BUFFER,h.__webglVertexBuffer);d.bufferData(d.ARRAY_BUFFER,A,
D)}if(t){for(s=0;s<n;s++)j=r[s],l=s*3,p[l]=j.r,p[l+1]=j.g,p[l+2]=j.b;d.bindBuffer(d.ARRAY_BUFFER,h.__webglColorBuffer);d.bufferData(d.ARRAY_BUFFER,p,D)}}i.__dirtyVertices=!1;i.__dirtyColors=!1}else if(D instanceof THREE.Line){h=c(D,n);p=h.attributes&&C(h);if(i.__dirtyVertices||i.__dirtyColors||p){D=i;l=d.DYNAMIC_DRAW;q=r=Y=m=ca=void 0;m=D.vertices;n=D.colors;q=m.length;p=n.length;A=D.__vertexArray;s=D.__colorArray;t=D.__dirtyColors;j=D.__webglCustomAttributesList;Q=aa=T=B=Y=ca=void 0;if(D.__dirtyVertices){for(ca=
0;ca<q;ca++)Y=m[ca].position,r=ca*3,A[r]=Y.x,A[r+1]=Y.y,A[r+2]=Y.z;d.bindBuffer(d.ARRAY_BUFFER,D.__webglVertexBuffer);d.bufferData(d.ARRAY_BUFFER,A,l)}if(t){for(m=0;m<p;m++)q=n[m],r=m*3,s[r]=q.r,s[r+1]=q.g,s[r+2]=q.b;d.bindBuffer(d.ARRAY_BUFFER,D.__webglColorBuffer);d.bufferData(d.ARRAY_BUFFER,s,l)}if(j){ca=0;for(Y=j.length;ca<Y;ca++)if(Q=j[ca],Q.needsUpdate&&(Q.boundTo===void 0||Q.boundTo==="vertices")){r=0;T=Q.value.length;if(Q.size===1)for(B=0;B<T;B++)Q.array[B]=Q.value[B];else if(Q.size===2)for(B=
0;B<T;B++)aa=Q.value[B],Q.array[r]=aa.x,Q.array[r+1]=aa.y,r+=2;else if(Q.size===3)if(Q.type==="c")for(B=0;B<T;B++)aa=Q.value[B],Q.array[r]=aa.r,Q.array[r+1]=aa.g,Q.array[r+2]=aa.b,r+=3;else for(B=0;B<T;B++)aa=Q.value[B],Q.array[r]=aa.x,Q.array[r+1]=aa.y,Q.array[r+2]=aa.z,r+=3;else if(Q.size===4)for(B=0;B<T;B++)aa=Q.value[B],Q.array[r]=aa.x,Q.array[r+1]=aa.y,Q.array[r+2]=aa.z,Q.array[r+3]=aa.w,r+=4;d.bindBuffer(d.ARRAY_BUFFER,Q.buffer);d.bufferData(d.ARRAY_BUFFER,Q.array,l)}}}i.__dirtyVertices=!1;
i.__dirtyColors=!1;h.attributes&&G(h)}else if(D instanceof THREE.ParticleSystem)h=c(D,n),p=h.attributes&&C(h),(i.__dirtyVertices||i.__dirtyColors||D.sortParticles||p)&&e(i,d.DYNAMIC_DRAW,D),i.__dirtyVertices=!1,i.__dirtyColors=!1,h.attributes&&G(h)};this.initMaterial=function(a,b,c,e){var f,g,h,i;a instanceof THREE.MeshDepthMaterial?i="depth":a instanceof THREE.MeshNormalMaterial?i="normal":a instanceof THREE.MeshBasicMaterial?i="basic":a instanceof THREE.MeshLambertMaterial?i="lambert":a instanceof
THREE.MeshPhongMaterial?i="phong":a instanceof THREE.LineBasicMaterial?i="basic":a instanceof THREE.ParticleBasicMaterial&&(i="particle_basic");if(i){var l=THREE.ShaderLib[i];a.uniforms=THREE.UniformsUtils.clone(l.uniforms);a.vertexShader=l.vertexShader;a.fragmentShader=l.fragmentShader}var p,j,m;p=m=l=0;for(j=b.length;p<j;p++)h=b[p],h instanceof THREE.SpotLight&&m++,h instanceof THREE.DirectionalLight&&m++,h instanceof THREE.PointLight&&l++;l+m<=V?p=m:(p=Math.ceil(V*m/(l+m)),l=V-p);h={directional:p,
point:l};l=m=0;for(p=b.length;l<p;l++)j=b[l],j instanceof THREE.SpotLight&&j.castShadow&&m++;var s=50;if(e!==void 0&&e instanceof THREE.SkinnedMesh)s=e.bones.length;var q;a:{p=a.fragmentShader;j=a.vertexShader;var l=a.uniforms,b=a.attributes,c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,morphTargets:a.morphTargets,maxMorphTargets:this.maxMorphTargets,maxDirLights:h.directional,maxPointLights:h.point,
maxBones:s,shadowMapEnabled:this.shadowMapEnabled&&e.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapWidth:this.shadowMapWidth,shadowMapHeight:this.shadowMapHeight,maxShadows:m,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel},t,e=[];i?e.push(i):(e.push(p),e.push(j));for(t in c)e.push(t),e.push(c[t]);i=e.join();t=0;for(e=R.length;t<e;t++)if(R[t].code===i){q=R[t].program;break a}t=d.createProgram();e=[Va?"#define VERTEX_TEXTURES":"",K.gammaInput?"#define GAMMA_INPUT":"",K.gammaOutput?
"#define GAMMA_OUTPUT":"",K.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.shadowMapEnabled?
"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform mat4 cameraInverseMatrix;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
h=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",K.gammaInput?"#define GAMMA_INPUT":"",K.gammaOutput?"#define GAMMA_OUTPUT":"",K.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":
"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapSoft?"#define SHADOWMAP_WIDTH "+c.shadowMapWidth.toFixed(1):"",c.shadowMapSoft?"#define SHADOWMAP_HEIGHT "+c.shadowMapHeight.toFixed(1):"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");d.attachShader(t,F("fragment",h+p));d.attachShader(t,
F("vertex",e+j));d.linkProgram(t);d.getProgramParameter(t,d.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+d.getProgramParameter(t,d.VALIDATE_STATUS)+", gl error ["+d.getError()+"]");t.uniforms={};t.attributes={};var w,e=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","cameraInverseMatrix","boneGlobalMatrices","morphTargetInfluences"];for(w in l)e.push(w);w=e;e=0;for(l=w.length;e<l;e++)p=w[e],t.uniforms[p]=d.getUniformLocation(t,
p);e=["position","normal","uv","uv2","tangent","color","skinVertexA","skinVertexB","skinIndex","skinWeight"];for(w=0;w<c.maxMorphTargets;w++)e.push("morphTarget"+w);for(q in b)e.push(q);q=e;w=0;for(b=q.length;w<b;w++)c=q[w],t.attributes[c]=d.getAttribLocation(t,c);t.id=R.length;R.push({program:t,code:i});K.info.memory.programs=R.length;q=t}a.program=q;q=a.program.attributes;q.position>=0&&d.enableVertexAttribArray(q.position);q.color>=0&&d.enableVertexAttribArray(q.color);q.normal>=0&&d.enableVertexAttribArray(q.normal);
q.tangent>=0&&d.enableVertexAttribArray(q.tangent);a.skinning&&q.skinVertexA>=0&&q.skinVertexB>=0&&q.skinIndex>=0&&q.skinWeight>=0&&(d.enableVertexAttribArray(q.skinVertexA),d.enableVertexAttribArray(q.skinVertexB),d.enableVertexAttribArray(q.skinIndex),d.enableVertexAttribArray(q.skinWeight));if(a.attributes)for(g in a.attributes)q[g]!==void 0&&q[g]>=0&&d.enableVertexAttribArray(q[g]);if(a.morphTargets)for(g=a.numSupportedMorphTargets=0;g<this.maxMorphTargets;g++)w="morphTarget"+g,q[w]>=0&&(d.enableVertexAttribArray(q[w]),
a.numSupportedMorphTargets++);a.uniformsList=[];for(f in a.uniforms)a.uniformsList.push([a.uniforms[f],f])};this.setFaceCulling=function(a,b){a?(!b||b==="ccw"?d.frontFace(d.CCW):d.frontFace(d.CW),a==="back"?d.cullFace(d.BACK):a==="front"?d.cullFace(d.FRONT):d.cullFace(d.FRONT_AND_BACK),d.enable(d.CULL_FACE)):d.disable(d.CULL_FACE)}};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=c.wrapS!==void 0?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=c.wrapT!==void 0?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=c.magFilter!==void 0?c.magFilter:THREE.LinearFilter;this.minFilter=c.minFilter!==void 0?c.minFilter:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=c.format!==void 0?c.format:THREE.RGBAFormat;this.type=c.type!==void 0?c.type:
THREE.UnsignedByteType;this.depthBuffer=c.depthBuffer!==void 0?c.depthBuffer:!0;this.stencilBuffer=c.stencilBuffer!==void 0?c.stencilBuffer:!0};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;return a};THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};
THREE.WebGLRenderTargetCube.prototype=new THREE.WebGLRenderTarget;THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;
