// ThreeWebGL.js r41/ROME - http://github.com/mrdoob/three.js
var THREE=THREE||{};if(!window.Int32Array)window.Int32Array=Array,window.Float32Array=Array;THREE.Color=function(b){this.setHex(b)};
THREE.Color.prototype={copy:function(b){this.r=b.r;this.g=b.g;this.b=b.b;this.hex=b.hex},setHex:function(b){this.hex=~~b&16777215;this.updateRGB()},setRGB:function(b,e,d){this.r=b;this.g=e;this.b=d;this.updateHex()},setHSV:function(b,e,d){var f,h,i,g,j,k;if(d==0)f=h=i=0;else switch(g=Math.floor(b*6),j=b*6-g,b=d*(1-e),k=d*(1-e*j),e=d*(1-e*(1-j)),g){case 1:f=k;h=d;i=b;break;case 2:f=b;h=d;i=e;break;case 3:f=b;h=k;i=d;break;case 4:f=e;h=b;i=d;break;case 5:f=d;h=b;i=k;break;case 6:case 0:f=d,h=e,i=b}this.setRGB(f,
h,i)},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGB:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},clone:function(){return new THREE.Color(this.hex)}};THREE.Vector2=function(b,e){this.set(b||0,e||0)};
THREE.Vector2.prototype={set:function(b,e){this.x=b;this.y=e;return this},copy:function(b){this.x=b.x;this.y=b.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},add:function(b,e){this.x=b.x+e.x;this.y=b.y+e.y;return this},addSelf:function(b){this.x+=b.x;this.y+=b.y;return this},sub:function(b,e){this.x=b.x-e.x;this.y=b.y-e.y;return this},subSelf:function(b){this.x-=b.x;this.y-=b.y;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;return this},divideScalar:function(b){b?
(this.x/=b,this.y/=b):this.set(0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(b){return Math.sqrt(this.distanceToSquared(b))},distanceToSquared:function(b){var e=this.x-b.x,b=this.y-b.y;return e*e+b*b},setLength:function(b){return this.normalize().multiplyScalar(b)},
unit:function(){return this.normalize()},equals:function(b){return b.x==this.x&&b.y==this.y}};THREE.Vector3=function(b,e,d){this.set(b||0,e||0,d||0)};
THREE.Vector3.prototype={set:function(b,e,d){this.x=b;this.y=e;this.z=d;return this},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},add:function(b,e){this.x=b.x+e.x;this.y=b.y+e.y;this.z=b.z+e.z;return this},addSelf:function(b){this.x+=b.x;this.y+=b.y;this.z+=b.z;return this},addScalar:function(b){this.x+=b;this.y+=b;this.z+=b;return this},sub:function(b,e){this.x=b.x-e.x;this.y=b.y-e.y;this.z=b.z-e.z;return this},subSelf:function(b){this.x-=
b.x;this.y-=b.y;this.z-=b.z;return this},multiply:function(b,e){this.x=b.x*e.x;this.y=b.y*e.y;this.z=b.z*e.z;return this},multiplySelf:function(b){this.x*=b.x;this.y*=b.y;this.z*=b.y;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;return this},divideSelf:function(b){return this.divide(this,b)},divideScalar:function(b){b?(this.x/=b,this.y/=b,this.z/=b):this.set(0,0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y+this.z*
b.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return this.x+this.y+this.z},normalize:function(){return this.divideScalar(this.length())},setLength:function(b){return this.normalize().multiplyScalar(b)},cross:function(b,e){this.x=b.y*e.z-b.z*e.y;this.y=b.z*e.x-b.x*e.z;this.z=b.x*e.y-b.y*e.x;return this},crossSelf:function(b){return this.set(this.y*b.z-this.z*b.y,this.z*b.x-this.x*b.z,this.x*
b.y-this.y*b.x)},distanceTo:function(b){return Math.sqrt(this.distanceToSquared(b))},distanceToSquared:function(b){return(new THREE.Vector3).sub(this,b).lengthSq()},setPositionFromMatrix:function(b){this.x=b.n14;this.y=b.n24;this.z=b.n34},setRotationFromMatrix:function(b){var e=Math.cos(this.y);this.y=Math.asin(b.n13);Math.abs(e)>1.0E-5?(this.x=Math.atan2(-b.n23/e,b.n33/e),this.z=Math.atan2(-b.n12/e,b.n11/e)):(this.x=0,this.z=Math.atan2(b.n21,b.n22))},isZero:function(){return this.lengthSq()<1.0E-4}};
THREE.Vector4=function(b,e,d,f){this.set(b||0,e||0,d||0,f||1)};
THREE.Vector4.prototype={set:function(b,e,d,f){this.x=b;this.y=e;this.z=d;this.w=f;return this},copy:function(b){return this.set(b.x,b.y,b.z,b.w||1)},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},add:function(b,e){this.x=b.x+e.x;this.y=b.y+e.y;this.z=b.z+e.z;this.w=b.w+e.w;return this},addSelf:function(b){this.x+=b.x;this.y+=b.y;this.z+=b.z;this.w+=b.w;return this},sub:function(b,e){this.x=b.x-e.x;this.y=b.y-e.y;this.z=b.z-e.z;this.w=b.w-e.w;return this},subSelf:function(b){this.x-=
b.x;this.y-=b.y;this.z-=b.z;this.w-=b.w;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;this.w*=b;return this},divideScalar:function(b){b?(this.x/=b,this.y/=b,this.z/=b,this.w/=b):this.set(0,0,0,1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z+this.w*b.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},
setLength:function(b){return this.normalize().multiplyScalar(b)},lerpSelf:function(b,e){this.x+=(b.x-this.x)*e;this.y+=(b.y-this.y)*e;this.z+=(b.z-this.z)*e;this.w+=(b.w-this.w)*e;return this}};THREE.Ray=function(b,e){this.origin=b||new THREE.Vector3;this.direction=e||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(b){return this.intersectObjects(b.objects)},intersectObjects:function(b){var e,d,f=[];e=0;for(d=b.length;e<d;e++)f=f.concat(this.intersectObject(b[e]));f.sort(function(b,e){return b.distance-e.distance});return f},intersectObject:function(b){function e(b,e,d){var f,d=d.matrixWorld.getPosition();f=d.clone().subSelf(b).dot(e);b=b.clone().addSelf(e.clone().multiplyScalar(f));return d.distanceTo(b)}function d(b,e,d,f){var f=f.clone().subSelf(e),d=d.clone().subSelf(e),
h=b.clone().subSelf(e),b=f.dot(f),e=f.dot(d),f=f.dot(h),g=d.dot(d),d=d.dot(h),h=1/(b*g-e*e),g=(g*f-e*d)*h,b=(b*d-e*f)*h;return g>0&&b>0&&g+b<1}if(b instanceof THREE.Particle){var f=e(this.origin,this.direction,b);if(!f||f>b.scale.x)return[];return[{distance:f,point:b.position,face:null,object:b}]}else if(b instanceof THREE.Mesh){f=e(this.origin,this.direction,b);if(!f||f>b.geometry.boundingSphere.radius*Math.max(b.scale.x,Math.max(b.scale.y,b.scale.z)))return[];var h,i,g,j,k,o,p,n,q,w,y=b.geometry,
D=y.vertices,z=[],f=0;for(h=y.faces.length;f<h;f++)if(i=y.faces[f],q=this.origin.clone(),w=this.direction.clone(),o=b.matrixWorld,g=o.multiplyVector3(D[i.a].position.clone()),j=o.multiplyVector3(D[i.b].position.clone()),k=o.multiplyVector3(D[i.c].position.clone()),o=i instanceof THREE.Face4?o.multiplyVector3(D[i.d].position.clone()):null,p=b.matrixRotationWorld.multiplyVector3(i.normal.clone()),n=w.dot(p),b.doubleSided||(b.flipSided?n>0:n<0))if(p=p.dot((new THREE.Vector3).sub(g,q))/n,q=q.addSelf(w.multiplyScalar(p)),
i instanceof THREE.Face3)d(q,g,j,k)&&(i={distance:this.origin.distanceTo(q),point:q,face:i,object:b},z.push(i));else if(i instanceof THREE.Face4&&(d(q,g,j,o)||d(q,j,k,o)))i={distance:this.origin.distanceTo(q),point:q,face:i,object:b},z.push(i);return z}else return[]}};
THREE.Rectangle=function(){function b(){i=f-e;g=h-d}var e,d,f,h,i,g,j=!0;this.getX=function(){return e};this.getY=function(){return d};this.getWidth=function(){return i};this.getHeight=function(){return g};this.getLeft=function(){return e};this.getTop=function(){return d};this.getRight=function(){return f};this.getBottom=function(){return h};this.set=function(g,i,p,n){j=!1;e=g;d=i;f=p;h=n;b()};this.addPoint=function(g,i){j?(j=!1,e=g,d=i,f=g,h=i):(e=e<g?e:g,d=d<i?d:i,f=f>g?f:g,h=h>i?h:i);b()};this.add3Points=
function(g,i,p,n,q,w){j?(j=!1,e=g<p?g<q?g:q:p<q?p:q,d=i<n?i<w?i:w:n<w?n:w,f=g>p?g>q?g:q:p>q?p:q,h=i>n?i>w?i:w:n>w?n:w):(e=g<p?g<q?g<e?g:e:q<e?q:e:p<q?p<e?p:e:q<e?q:e,d=i<n?i<w?i<d?i:d:w<d?w:d:n<w?n<d?n:d:w<d?w:d,f=g>p?g>q?g>f?g:f:q>f?q:f:p>q?p>f?p:f:q>f?q:f,h=i>n?i>w?i>h?i:h:w>h?w:h:n>w?n>h?n:h:w>h?w:h);b()};this.addRectangle=function(g){j?(j=!1,e=g.getLeft(),d=g.getTop(),f=g.getRight(),h=g.getBottom()):(e=e<g.getLeft()?e:g.getLeft(),d=d<g.getTop()?d:g.getTop(),f=f>g.getRight()?f:g.getRight(),h=h>
g.getBottom()?h:g.getBottom());b()};this.inflate=function(g){e-=g;d-=g;f+=g;h+=g;b()};this.minSelf=function(g){e=e>g.getLeft()?e:g.getLeft();d=d>g.getTop()?d:g.getTop();f=f<g.getRight()?f:g.getRight();h=h<g.getBottom()?h:g.getBottom();b()};this.instersects=function(b){return Math.min(f,b.getRight())-Math.max(e,b.getLeft())>=0&&Math.min(h,b.getBottom())-Math.max(d,b.getTop())>=0};this.empty=function(){j=!0;h=f=d=e=0;b()};this.isEmpty=function(){return j}};THREE.Matrix3=function(){this.m=[]};
THREE.Matrix3.prototype={transpose:function(){var b,e=this.m;b=e[1];e[1]=e[3];e[3]=b;b=e[2];e[2]=e[6];e[6]=b;b=e[5];e[5]=e[7];e[7]=b;return this},transposeIntoArray:function(b){var e=this.m;b[0]=e[0];b[1]=e[3];b[2]=e[6];b[3]=e[1];b[4]=e[4];b[5]=e[7];b[6]=e[2];b[7]=e[5];b[8]=e[8];return this}};THREE.Matrix4=function(b,e,d,f,h,i,g,j,k,o,p,n,q,w,y,D){this.set(b||1,e||0,d||0,f||0,h||0,i||1,g||0,j||0,k||0,o||0,p||1,n||0,q||0,w||0,y||0,D||1);this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={set:function(b,e,d,f,h,i,g,j,k,o,p,n,q,w,y,D){this.n11=b;this.n12=e;this.n13=d;this.n14=f;this.n21=h;this.n22=i;this.n23=g;this.n24=j;this.n31=k;this.n32=o;this.n33=p;this.n34=n;this.n41=q;this.n42=w;this.n43=y;this.n44=D;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(b){this.set(b.n11,b.n12,b.n13,b.n14,b.n21,b.n22,b.n23,b.n24,b.n31,b.n32,b.n33,b.n34,b.n41,b.n42,b.n43,b.n44);return this},lookAt:function(b,e,d){var f=THREE.Matrix4.__v1,
h=THREE.Matrix4.__v2,i=THREE.Matrix4.__v3;i.sub(b,e).normalize();if(i.length()===0)i.z=1;f.cross(d,i).normalize();f.length()===0&&(i.x+=1.0E-4,f.cross(d,i).normalize());h.cross(i,f).normalize();this.n11=f.x;this.n12=h.x;this.n13=i.x;this.n21=f.y;this.n22=h.y;this.n23=i.y;this.n31=f.z;this.n32=h.z;this.n33=i.z;return this},multiplyVector3:function(b){var e=b.x,d=b.y,f=b.z,h=1/(this.n41*e+this.n42*d+this.n43*f+this.n44);b.x=(this.n11*e+this.n12*d+this.n13*f+this.n14)*h;b.y=(this.n21*e+this.n22*d+this.n23*
f+this.n24)*h;b.z=(this.n31*e+this.n32*d+this.n33*f+this.n34)*h;return b},multiplyVector4:function(b){var e=b.x,d=b.y,f=b.z,h=b.w;b.x=this.n11*e+this.n12*d+this.n13*f+this.n14*h;b.y=this.n21*e+this.n22*d+this.n23*f+this.n24*h;b.z=this.n31*e+this.n32*d+this.n33*f+this.n34*h;b.w=this.n41*e+this.n42*d+this.n43*f+this.n44*h;return b},rotateAxis:function(b){var e=b.x,d=b.y,f=b.z;b.x=e*this.n11+d*this.n12+f*this.n13;b.y=e*this.n21+d*this.n22+f*this.n23;b.z=e*this.n31+d*this.n32+f*this.n33;b.normalize();
return b},crossVector:function(b){var e=new THREE.Vector4;e.x=this.n11*b.x+this.n12*b.y+this.n13*b.z+this.n14*b.w;e.y=this.n21*b.x+this.n22*b.y+this.n23*b.z+this.n24*b.w;e.z=this.n31*b.x+this.n32*b.y+this.n33*b.z+this.n34*b.w;e.w=b.w?this.n41*b.x+this.n42*b.y+this.n43*b.z+this.n44*b.w:1;return e},multiply:function(b,e){var d=b.n11,f=b.n12,h=b.n13,i=b.n14,g=b.n21,j=b.n22,k=b.n23,o=b.n24,p=b.n31,n=b.n32,q=b.n33,w=b.n34,y=b.n41,D=b.n42,z=b.n43,C=b.n44,ga=e.n11,M=e.n12,O=e.n13,F=e.n14,v=e.n21,$=e.n22,
B=e.n23,aa=e.n24,K=e.n31,na=e.n32,U=e.n33,R=e.n34,c=e.n41,ha=e.n42,S=e.n43,ka=e.n44;this.n11=d*ga+f*v+h*K+i*c;this.n12=d*M+f*$+h*na+i*ha;this.n13=d*O+f*B+h*U+i*S;this.n14=d*F+f*aa+h*R+i*ka;this.n21=g*ga+j*v+k*K+o*c;this.n22=g*M+j*$+k*na+o*ha;this.n23=g*O+j*B+k*U+o*S;this.n24=g*F+j*aa+k*R+o*ka;this.n31=p*ga+n*v+q*K+w*c;this.n32=p*M+n*$+q*na+w*ha;this.n33=p*O+n*B+q*U+w*S;this.n34=p*F+n*aa+q*R+w*ka;this.n41=y*ga+D*v+z*K+C*c;this.n42=y*M+D*$+z*na+C*ha;this.n43=y*O+D*B+z*U+C*S;this.n44=y*F+D*aa+z*R+C*
ka;return this},multiplyToArray:function(b,e,d){this.multiply(b,e);d[0]=this.n11;d[1]=this.n21;d[2]=this.n31;d[3]=this.n41;d[4]=this.n12;d[5]=this.n22;d[6]=this.n32;d[7]=this.n42;d[8]=this.n13;d[9]=this.n23;d[10]=this.n33;d[11]=this.n43;d[12]=this.n14;d[13]=this.n24;d[14]=this.n34;d[15]=this.n44;return this},multiplySelf:function(b){this.multiply(this,b);return this},multiplyScalar:function(b){this.n11*=b;this.n12*=b;this.n13*=b;this.n14*=b;this.n21*=b;this.n22*=b;this.n23*=b;this.n24*=b;this.n31*=
b;this.n32*=b;this.n33*=b;this.n34*=b;this.n41*=b;this.n42*=b;this.n43*=b;this.n44*=b;return this},determinant:function(){var b=this.n11,e=this.n12,d=this.n13,f=this.n14,h=this.n21,i=this.n22,g=this.n23,j=this.n24,k=this.n31,o=this.n32,p=this.n33,n=this.n34,q=this.n41,w=this.n42,y=this.n43,D=this.n44;return f*g*o*q-d*j*o*q-f*i*p*q+e*j*p*q+d*i*n*q-e*g*n*q-f*g*k*w+d*j*k*w+f*h*p*w-b*j*p*w-d*h*n*w+b*g*n*w+f*i*k*y-e*j*k*y-f*h*o*y+b*j*o*y+e*h*n*y-b*i*n*y-d*i*k*D+e*g*k*D+d*h*o*D-b*g*o*D-e*h*p*D+b*i*p*D},
transpose:function(){var b;b=this.n21;this.n21=this.n12;this.n12=b;b=this.n31;this.n31=this.n13;this.n13=b;b=this.n32;this.n32=this.n23;this.n23=b;b=this.n41;this.n41=this.n14;this.n14=b;b=this.n42;this.n42=this.n24;this.n24=b;b=this.n43;this.n43=this.n34;this.n43=b;return this},clone:function(){var b=new THREE.Matrix4;b.n11=this.n11;b.n12=this.n12;b.n13=this.n13;b.n14=this.n14;b.n21=this.n21;b.n22=this.n22;b.n23=this.n23;b.n24=this.n24;b.n31=this.n31;b.n32=this.n32;b.n33=this.n33;b.n34=this.n34;
b.n41=this.n41;b.n42=this.n42;b.n43=this.n43;b.n44=this.n44;return b},flatten:function(){this.flat[0]=this.n11;this.flat[1]=this.n21;this.flat[2]=this.n31;this.flat[3]=this.n41;this.flat[4]=this.n12;this.flat[5]=this.n22;this.flat[6]=this.n32;this.flat[7]=this.n42;this.flat[8]=this.n13;this.flat[9]=this.n23;this.flat[10]=this.n33;this.flat[11]=this.n43;this.flat[12]=this.n14;this.flat[13]=this.n24;this.flat[14]=this.n34;this.flat[15]=this.n44;return this.flat},flattenToArray:function(b){b[0]=this.n11;
b[1]=this.n21;b[2]=this.n31;b[3]=this.n41;b[4]=this.n12;b[5]=this.n22;b[6]=this.n32;b[7]=this.n42;b[8]=this.n13;b[9]=this.n23;b[10]=this.n33;b[11]=this.n43;b[12]=this.n14;b[13]=this.n24;b[14]=this.n34;b[15]=this.n44;return b},flattenToArrayOffset:function(b,e){b[e]=this.n11;b[e+1]=this.n21;b[e+2]=this.n31;b[e+3]=this.n41;b[e+4]=this.n12;b[e+5]=this.n22;b[e+6]=this.n32;b[e+7]=this.n42;b[e+8]=this.n13;b[e+9]=this.n23;b[e+10]=this.n33;b[e+11]=this.n43;b[e+12]=this.n14;b[e+13]=this.n24;b[e+14]=this.n34;
b[e+15]=this.n44;return b},setTranslation:function(b,e,d){this.set(1,0,0,b,0,1,0,e,0,0,1,d,0,0,0,1);return this},setScale:function(b,e,d){this.set(b,0,0,0,0,e,0,0,0,0,d,0,0,0,0,1);return this},setRotationX:function(b){var e=Math.cos(b),b=Math.sin(b);this.set(1,0,0,0,0,e,-b,0,0,b,e,0,0,0,0,1);return this},setRotationY:function(b){var e=Math.cos(b),b=Math.sin(b);this.set(e,0,b,0,0,1,0,0,-b,0,e,0,0,0,0,1);return this},setRotationZ:function(b){var e=Math.cos(b),b=Math.sin(b);this.set(e,-b,0,0,b,e,0,0,
0,0,1,0,0,0,0,1);return this},setRotationAxis:function(b,e){var d=Math.cos(e),f=Math.sin(e),h=1-d,i=b.x,g=b.y,j=b.z,k=h*i,o=h*g;this.set(k*i+d,k*g-f*j,k*j+f*g,0,k*g+f*j,o*g+d,o*j-f*i,0,k*j-f*g,o*j+f*i,h*j*j+d,0,0,0,0,1);return this},setPosition:function(b){this.n14=b.x;this.n24=b.y;this.n34=b.z;return this},getPosition:function(){if(!this.position)this.position=new THREE.Vector3;this.position.set(this.n14,this.n24,this.n34);return this.position},getColumnX:function(){if(!this.columnX)this.columnX=
new THREE.Vector3;this.columnX.set(this.n11,this.n21,this.n31);return this.columnX},getColumnY:function(){if(!this.columnY)this.columnY=new THREE.Vector3;this.columnY.set(this.n12,this.n22,this.n32);return this.columnY},getColumnZ:function(){if(!this.columnZ)this.columnZ=new THREE.Vector3;this.columnZ.set(this.n13,this.n23,this.n33);return this.columnZ},setRotationFromEuler:function(b,e){var d=b.x,f=b.y,h=b.z,i=Math.cos(d),d=Math.sin(d),g=Math.cos(f),f=Math.sin(f),j=Math.cos(h),h=Math.sin(h);switch(e){case "YXZ":var k=
g*j,o=g*h,p=f*j,n=f*h;this.n11=k+n*d;this.n12=p*d-o;this.n13=i*f;this.n21=i*h;this.n22=i*j;this.n23=-d;this.n31=o*d-p;this.n32=n+k*d;this.n33=i*g;break;case "ZXY":k=g*j;o=g*h;p=f*j;n=f*h;this.n11=k-n*d;this.n12=-i*h;this.n13=p+o*d;this.n21=o+p*d;this.n22=i*j;this.n23=n-k*d;this.n31=-i*f;this.n32=d;this.n33=i*g;break;case "ZYX":k=i*j;o=i*h;p=d*j;n=d*h;this.n11=g*j;this.n12=p*f-o;this.n13=k*f+n;this.n21=g*h;this.n22=n*f+k;this.n23=o*f-p;this.n31=-f;this.n32=d*g;this.n33=i*g;break;case "YZX":k=i*g;o=
i*f;p=d*g;n=d*f;this.n11=g*j;this.n12=n-k*h;this.n13=p*h+o;this.n21=h;this.n22=i*j;this.n23=-d*j;this.n31=-f*j;this.n32=o*h+p;this.n33=k-n*h;break;case "XZY":k=i*g;o=i*f;p=d*g;n=d*f;this.n11=g*j;this.n12=-h;this.n13=f*j;this.n21=k*h+n;this.n22=i*j;this.n23=o*h-p;this.n31=p*h-o;this.n32=d*j;this.n33=n*h+k;break;default:k=i*j,o=i*h,p=d*j,n=d*h,this.n11=g*j,this.n12=-g*h,this.n13=f,this.n21=o+p*f,this.n22=k-n*f,this.n23=-d*g,this.n31=n-k*f,this.n32=p+o*f,this.n33=i*g}return this},setRotationFromQuaternion:function(b){var e=
b.x,d=b.y,f=b.z,h=b.w,i=e+e,g=d+d,j=f+f,b=e*i,k=e*g;e*=j;var o=d*g;d*=j;f*=j;i*=h;g*=h;h*=j;this.n11=1-(o+f);this.n12=k-h;this.n13=e+g;this.n21=k+h;this.n22=1-(b+f);this.n23=d-i;this.n31=e-g;this.n32=d+i;this.n33=1-(b+o);return this},scale:function(b){var e=b.x,d=b.y,b=b.z;this.n11*=e;this.n12*=d;this.n13*=b;this.n21*=e;this.n22*=d;this.n23*=b;this.n31*=e;this.n32*=d;this.n33*=b;this.n41*=e;this.n42*=d;this.n43*=b;return this},extractPosition:function(b){this.n14=b.n14;this.n24=b.n24;this.n34=b.n34},
extractRotation:function(b,e){var d=1/e.x,f=1/e.y,h=1/e.z;this.n11=b.n11*d;this.n21=b.n21*d;this.n31=b.n31*d;this.n12=b.n12*f;this.n22=b.n22*f;this.n32=b.n32*f;this.n13=b.n13*h;this.n23=b.n23*h;this.n33=b.n33*h}};
THREE.Matrix4.makeInvert=function(b,e){var d=b.n11,f=b.n12,h=b.n13,i=b.n14,g=b.n21,j=b.n22,k=b.n23,o=b.n24,p=b.n31,n=b.n32,q=b.n33,w=b.n34,y=b.n41,D=b.n42,z=b.n43,C=b.n44;e===void 0&&(e=new THREE.Matrix4);e.n11=k*w*D-o*q*D+o*n*z-j*w*z-k*n*C+j*q*C;e.n12=i*q*D-h*w*D-i*n*z+f*w*z+h*n*C-f*q*C;e.n13=h*o*D-i*k*D+i*j*z-f*o*z-h*j*C+f*k*C;e.n14=i*k*n-h*o*n-i*j*q+f*o*q+h*j*w-f*k*w;e.n21=o*q*y-k*w*y-o*p*z+g*w*z+k*p*C-g*q*C;e.n22=h*w*y-i*q*y+i*p*z-d*w*z-h*p*C+d*q*C;e.n23=i*k*y-h*o*y-i*g*z+d*o*z+h*g*C-d*k*C;e.n24=
h*o*p-i*k*p+i*g*q-d*o*q-h*g*w+d*k*w;e.n31=j*w*y-o*n*y+o*p*D-g*w*D-j*p*C+g*n*C;e.n32=i*n*y-f*w*y-i*p*D+d*w*D+f*p*C-d*n*C;e.n33=h*o*y-i*j*y+i*g*D-d*o*D-f*g*C+d*j*C;e.n34=i*j*p-f*o*p-i*g*n+d*o*n+f*g*w-d*j*w;e.n41=k*n*y-j*q*y-k*p*D+g*q*D+j*p*z-g*n*z;e.n42=f*q*y-h*n*y+h*p*D-d*q*D-f*p*z+d*n*z;e.n43=h*j*y-f*k*y-h*g*D+d*k*D+f*g*z-d*j*z;e.n44=f*k*p-h*j*p+h*g*n-d*k*n-f*g*q+d*j*q;e.multiplyScalar(1/b.determinant());return e};
THREE.Matrix4.makeInvert3x3=function(b){var e=b.m33,d=e.m,f=b.n33*b.n22-b.n32*b.n23,h=-b.n33*b.n21+b.n31*b.n23,i=b.n32*b.n21-b.n31*b.n22,g=-b.n33*b.n12+b.n32*b.n13,j=b.n33*b.n11-b.n31*b.n13,k=-b.n32*b.n11+b.n31*b.n12,o=b.n23*b.n12-b.n22*b.n13,p=-b.n23*b.n11+b.n21*b.n13,n=b.n22*b.n11-b.n21*b.n12,b=b.n11*f+b.n21*g+b.n31*o;b==0&&console.error("THREE.Matrix4.makeInvert3x3: Matrix not invertible.");b=1/b;d[0]=b*f;d[1]=b*h;d[2]=b*i;d[3]=b*g;d[4]=b*j;d[5]=b*k;d[6]=b*o;d[7]=b*p;d[8]=b*n;return e};
THREE.Matrix4.makeFrustum=function(b,e,d,f,h,i){var g;g=new THREE.Matrix4;g.n11=2*h/(e-b);g.n12=0;g.n13=(e+b)/(e-b);g.n14=0;g.n21=0;g.n22=2*h/(f-d);g.n23=(f+d)/(f-d);g.n24=0;g.n31=0;g.n32=0;g.n33=-(i+h)/(i-h);g.n34=-2*i*h/(i-h);g.n41=0;g.n42=0;g.n43=-1;g.n44=0;return g};THREE.Matrix4.makePerspective=function(b,e,d,f){var h,b=d*Math.tan(b*Math.PI/360);h=-b;return THREE.Matrix4.makeFrustum(h*e,b*e,h,b,d,f)};
THREE.Matrix4.makeOrtho=function(b,e,d,f,h,i){var g,j,k,o;g=new THREE.Matrix4;j=e-b;k=d-f;o=i-h;g.n11=2/j;g.n12=0;g.n13=0;g.n14=-((e+b)/j);g.n21=0;g.n22=2/k;g.n23=0;g.n24=-((d+f)/k);g.n31=0;g.n32=0;g.n33=-2/o;g.n34=-((i+h)/o);g.n41=0;g.n42=0;g.n43=0;g.n44=1;return g};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;
THREE.Object3D=function(){this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder="XYZ";this.scale=new THREE.Vector3(1,1,1);this.flipSided=this.doubleSided=this.dynamic=!1;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0;this.quaternion=new THREE.Quaternion;
this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this._vector=new THREE.Vector3;this.name=""};
THREE.Object3D.prototype={translate:function(b,e){this.matrix.rotateAxis(e);this.position.addSelf(e.multiplyScalar(b))},translateX:function(b){this.translate(b,this._vector.set(1,0,0))},translateY:function(b){this.translate(b,this._vector.set(0,1,0))},translateZ:function(b){this.translate(b,this._vector.set(0,0,1))},lookAt:function(b){this.matrix.lookAt(b,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)},addChild:function(b){if(this.children.indexOf(b)===
-1){b.parent!==void 0&&b.parent.removeChild(b);b.parent=this;this.children.push(b);for(var e=this;e.parent!==void 0;)e=e.parent;e!==void 0&&e instanceof THREE.Scene&&e.addChildRecurse(b)}},removeChild:function(b){var e=this.children.indexOf(b);if(e!==-1)b.parent=void 0,this.children.splice(e,1)},getChildByName:function(b,e){var d,f,h;d=0;for(f=this.children.length;d<f;d++){h=this.children[d];if(h.name===b)return h;if(e&&(h=h.getChildByName(b,e),h!==void 0))return h}},updateMatrix:function(){this.matrix.setPosition(this.position);
this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder);if(this.scale.x!==1||this.scale.y!==1||this.scale.z!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},update:function(b,e,d){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||e)b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),
this.matrixRotationWorld.extractRotation(this.matrixWorld,this.scale),this.matrixWorldNeedsUpdate=!1,e=!0;for(var b=0,f=this.children.length;b<f;b++)this.children[b].update(this.matrixWorld,e,d)}};THREE.Quaternion=function(b,e,d,f){this.set(b||0,e||0,d||0,f!==void 0?f:1)};
THREE.Quaternion.prototype={set:function(b,e,d,f){this.x=b;this.y=e;this.z=d;this.w=f;return this},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;this.w=b.w;return this},setFromEuler:function(b){var e=0.5*Math.PI/360,d=b.x*e,f=b.y*e,h=b.z*e,b=Math.cos(f),f=Math.sin(f),e=Math.cos(-h),h=Math.sin(-h),i=Math.cos(d),d=Math.sin(d),g=b*e,j=f*h;this.w=g*i-j*d;this.x=g*d+j*i;this.y=f*e*i+b*h*d;this.z=b*h*i-f*e*d;return this},setFromAxisAngle:function(b,e){var d=e/2,f=Math.sin(d);this.x=b.x*f;this.y=b.y*
f;this.z=b.z*f;this.w=Math.cos(d);return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var b=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);b==0?this.w=this.z=this.y=this.x=0:(b=1/b,this.x*=b,this.y*=b,this.z*=b,this.w*=b);return this},
multiplySelf:function(b){var e=this.x,d=this.y,f=this.z,h=this.w,i=b.x,g=b.y,j=b.z,b=b.w;this.x=e*b+h*i+d*j-f*g;this.y=d*b+h*g+f*i-e*j;this.z=f*b+h*j+e*g-d*i;this.w=h*b-e*i-d*g-f*j;return this},multiply:function(b,e){this.x=b.x*e.w+b.y*e.z-b.z*e.y+b.w*e.x;this.y=-b.x*e.z+b.y*e.w+b.z*e.x+b.w*e.y;this.z=b.x*e.y-b.y*e.x+b.z*e.w+b.w*e.z;this.w=-b.x*e.x-b.y*e.y-b.z*e.z+b.w*e.w;return this},multiplyVector3:function(b,e){e||(e=b);var d=b.x,f=b.y,h=b.z,i=this.x,g=this.y,j=this.z,k=this.w,o=k*d+g*h-j*f,p=
k*f+j*d-i*h,n=k*h+i*f-g*d,d=-i*d-g*f-j*h;e.x=o*k+d*-i+p*-j-n*-g;e.y=p*k+d*-g+n*-i-o*-j;e.z=n*k+d*-j+o*-g-p*-i;return e}};
THREE.Quaternion.slerp=function(b,e,d,f){var h=b.w*e.w+b.x*e.x+b.y*e.y+b.z*e.z;if(Math.abs(h)>=1)return d.w=b.w,d.x=b.x,d.y=b.y,d.z=b.z,d;var i=Math.acos(h),g=Math.sqrt(1-h*h);if(Math.abs(g)<0.001)return d.w=0.5*(b.w+e.w),d.x=0.5*(b.x+e.x),d.y=0.5*(b.y+e.y),d.z=0.5*(b.z+e.z),d;h=Math.sin((1-f)*i)/g;f=Math.sin(f*i)/g;d.w=b.w*h+e.w*f;d.x=b.x*h+e.x*f;d.y=b.y*h+e.y*f;d.z=b.z*h+e.z*f;return d};THREE.Vertex=function(b){this.position=b||new THREE.Vector3};
THREE.Face3=function(b,e,d,f,h,i){this.a=b;this.b=e;this.c=d;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.color=h instanceof THREE.Color?h:new THREE.Color;this.vertexColors=h instanceof Array?h:[];this.vertexTangents=[];this.materials=i instanceof Array?i:[i];this.centroid=new THREE.Vector3};
THREE.Face4=function(b,e,d,f,h,i,g){this.a=b;this.b=e;this.c=d;this.d=f;this.normal=h instanceof THREE.Vector3?h:new THREE.Vector3;this.vertexNormals=h instanceof Array?h:[];this.color=i instanceof THREE.Color?i:new THREE.Color;this.vertexColors=i instanceof Array?i:[];this.vertexTangents=[];this.materials=g instanceof Array?g:[g];this.centroid=new THREE.Vector3};THREE.UV=function(b,e){this.set(b||0,e||0)};
THREE.UV.prototype={set:function(b,e){this.u=b;this.v=e;return this},copy:function(b){this.set(b.u,b.v);return this}};THREE.Geometry=function(){this.id="Geometry"+THREE.GeometryIdCounter++;this.vertices=[];this.colors=[];this.faces=[];this.edges=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1};
THREE.Geometry.prototype={computeCentroids:function(){var b,e,d;b=0;for(e=this.faces.length;b<e;b++)d=this.faces[b],d.centroid.set(0,0,0),d instanceof THREE.Face3?(d.centroid.addSelf(this.vertices[d.a].position),d.centroid.addSelf(this.vertices[d.b].position),d.centroid.addSelf(this.vertices[d.c].position),d.centroid.divideScalar(3)):d instanceof THREE.Face4&&(d.centroid.addSelf(this.vertices[d.a].position),d.centroid.addSelf(this.vertices[d.b].position),d.centroid.addSelf(this.vertices[d.c].position),
d.centroid.addSelf(this.vertices[d.d].position),d.centroid.divideScalar(4))},computeFaceNormals:function(b){var e,d,f,h,i,g,j=new THREE.Vector3,k=new THREE.Vector3;f=0;for(h=this.faces.length;f<h;f++){i=this.faces[f];if(b&&i.vertexNormals.length){j.set(0,0,0);e=0;for(d=i.vertexNormals.length;e<d;e++)j.addSelf(i.vertexNormals[e]);j.divideScalar(3)}else e=this.vertices[i.a],d=this.vertices[i.b],g=this.vertices[i.c],j.sub(g.position,d.position),k.sub(e.position,d.position),j.crossSelf(k);j.isZero()||
j.normalize();i.normal.copy(j)}},computeVertexNormals:function(){var b,e,d,f;if(this.__tmpVertices==void 0){f=this.__tmpVertices=Array(this.vertices.length);b=0;for(e=this.vertices.length;b<e;b++)f[b]=new THREE.Vector3;b=0;for(e=this.faces.length;b<e;b++)if(d=this.faces[b],d instanceof THREE.Face3)d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(d instanceof THREE.Face4)d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else{f=
this.__tmpVertices;b=0;for(e=this.vertices.length;b<e;b++)f[b].set(0,0,0)}b=0;for(e=this.faces.length;b<e;b++)d=this.faces[b],d instanceof THREE.Face3?(f[d.a].addSelf(d.normal),f[d.b].addSelf(d.normal),f[d.c].addSelf(d.normal)):d instanceof THREE.Face4&&(f[d.a].addSelf(d.normal),f[d.b].addSelf(d.normal),f[d.c].addSelf(d.normal),f[d.d].addSelf(d.normal));b=0;for(e=this.vertices.length;b<e;b++)f[b].normalize();b=0;for(e=this.faces.length;b<e;b++)d=this.faces[b],d instanceof THREE.Face3?(d.vertexNormals[0].copy(f[d.a]),
d.vertexNormals[1].copy(f[d.b]),d.vertexNormals[2].copy(f[d.c])):d instanceof THREE.Face4&&(d.vertexNormals[0].copy(f[d.a]),d.vertexNormals[1].copy(f[d.b]),d.vertexNormals[2].copy(f[d.c]),d.vertexNormals[3].copy(f[d.d]))},computeTangents:function(){function b(b,c,e,d,f,h,i){j=b.vertices[c].position;k=b.vertices[e].position;o=b.vertices[d].position;p=g[f];n=g[h];q=g[i];w=k.x-j.x;y=o.x-j.x;D=k.y-j.y;z=o.y-j.y;C=k.z-j.z;ga=o.z-j.z;M=n.u-p.u;O=q.u-p.u;F=n.v-p.v;v=q.v-p.v;$=1/(M*v-O*F);na.set((v*w-F*y)*
$,(v*D-F*z)*$,(v*C-F*ga)*$);U.set((M*y-O*w)*$,(M*z-O*D)*$,(M*ga-O*C)*$);aa[c].addSelf(na);aa[e].addSelf(na);aa[d].addSelf(na);K[c].addSelf(U);K[e].addSelf(U);K[d].addSelf(U)}var e,d,f,h,i,g,j,k,o,p,n,q,w,y,D,z,C,ga,M,O,F,v,$,B,aa=[],K=[],na=new THREE.Vector3,U=new THREE.Vector3,R=new THREE.Vector3,c=new THREE.Vector3,ha=new THREE.Vector3;e=0;for(d=this.vertices.length;e<d;e++)aa[e]=new THREE.Vector3,K[e]=new THREE.Vector3;e=0;for(d=this.faces.length;e<d;e++)i=this.faces[e],g=this.faceVertexUvs[0][e],
i instanceof THREE.Face3?b(this,i.a,i.b,i.c,0,1,2):i instanceof THREE.Face4&&(b(this,i.a,i.b,i.c,0,1,2),b(this,i.a,i.b,i.d,0,1,3));var S=["a","b","c","d"];e=0;for(d=this.faces.length;e<d;e++){i=this.faces[e];for(f=0;f<i.vertexNormals.length;f++)ha.copy(i.vertexNormals[f]),h=i[S[f]],B=aa[h],R.copy(B),R.subSelf(ha.multiplyScalar(ha.dot(B))).normalize(),c.cross(i.vertexNormals[f],B),h=c.dot(K[h]),h=h<0?-1:1,i.vertexTangents[f]=new THREE.Vector4(R.x,R.y,R.z,h)}this.hasTangents=!0},computeBoundingBox:function(){var b;
if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var e=1,d=this.vertices.length;e<d;e++){b=this.vertices[e];if(b.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=b.position.x;else if(b.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=b.position.x;if(b.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=b.position.y;
else if(b.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=b.position.y;if(b.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=b.position.z;else if(b.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=b.position.z}}},computeBoundingSphere:function(){for(var b=0,e=0,d=this.vertices.length;e<d;e++)b=Math.max(b,this.vertices[e].position.length());this.boundingSphere={radius:b}},computeEdgeFaces:function(){function b(b,e){return Math.min(b,e)+"_"+Math.max(b,e)}function e(b,e,d){b[e]===
void 0?(b[e]={set:{},array:[]},b[e].set[d]=1,b[e].array.push(d)):b[e].set[d]===void 0&&(b[e].set[d]=1,b[e].array.push(d))}var d,f,h,i,g,j={};d=0;for(f=this.faces.length;d<f;d++)g=this.faces[d],g instanceof THREE.Face3?(h=b(g.a,g.b),e(j,h,d),h=b(g.b,g.c),e(j,h,d),h=b(g.a,g.c),e(j,h,d)):g instanceof THREE.Face4&&(h=b(g.b,g.d),e(j,h,d),h=b(g.a,g.b),e(j,h,d),h=b(g.a,g.d),e(j,h,d),h=b(g.b,g.c),e(j,h,d),h=b(g.c,g.d),e(j,h,d));d=0;for(f=this.edges.length;d<f;d++){g=this.edges[d];h=g.vertexIndices[0];i=g.vertexIndices[1];
g.faceIndices=j[b(h,i)].array;for(h=0;h<g.faceIndices.length;h++)i=g.faceIndices[h],g.faces.push(this.faces[i])}}};THREE.GeometryIdCounter=0;
THREE.Spline=function(b){function e(b,e,d,f,h,g,i){b=(d-b)*0.5;f=(f-e)*0.5;return(2*(e-d)+b+f)*i+(-3*(e-d)-2*b-f)*g+b*h+e}this.points=b;var d=[],f={x:0,y:0,z:0},h,i,g,j,k,o,p,n,q;this.initFromArray=function(b){this.points=[];for(var e=0;e<b.length;e++)this.points[e]={x:b[e][0],y:b[e][1],z:b[e][2]}};this.getPoint=function(b){h=(this.points.length-1)*b;i=Math.floor(h);g=h-i;d[0]=i==0?i:i-1;d[1]=i;d[2]=i>this.points.length-2?i:i+1;d[3]=i>this.points.length-3?i:i+2;o=this.points[d[0]];p=this.points[d[1]];
n=this.points[d[2]];q=this.points[d[3]];j=g*g;k=g*j;f.x=e(o.x,p.x,n.x,q.x,g,j,k);f.y=e(o.y,p.y,n.y,q.y,g,j,k);f.z=e(o.z,p.z,n.z,q.z,g,j,k);return f};this.getControlPointsArray=function(){var b,e,d=this.points.length,f=[];for(b=0;b<d;b++)e=this.points[b],f[b]=[e.x,e.y,e.z];return f};this.getLength=function(b){var e,d,f=e=e=0,h=new THREE.Vector3,g=new THREE.Vector3,i=[],j=0;i[0]=0;b||(b=100);d=this.points.length*b;h.copy(this.points[0]);for(b=1;b<d;b++)e=b/d,position=this.getPoint(e),g.copy(position),
j+=g.distanceTo(h),h.copy(position),e*=this.points.length-1,e=Math.floor(e),e!=f&&(i[e]=j,f=e);i[i.length]=j;return{chunks:i,total:j}};this.reparametrizeByArcLength=function(b){var e,d,f,h,g,i,j=[],o=new THREE.Vector3,k=this.getLength();j.push(o.copy(this.points[0]).clone());for(e=1;e<this.points.length;e++){d=k.chunks[e]-k.chunks[e-1];i=Math.ceil(b*d/k.total);h=(e-1)/(this.points.length-1);g=e/(this.points.length-1);for(d=1;d<i-1;d++)f=h+d*(1/i)*(g-h),position=this.getPoint(f),j.push(o.copy(position).clone());
j.push(o.copy(this.points[e]).clone())}this.points=j}};THREE.Edge=function(b,e,d,f){this.vertices=[b,e];this.vertexIndices=[d,f];this.faces=[];this.faceIndices=[]};THREE.Camera=function(b,e,d,f,h){THREE.Object3D.call(this);this.fov=b||50;this.aspect=e||1;this.near=d||0.1;this.far=f||2E3;this.target=h||new THREE.Object3D;this.useTarget=!0;this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=null;this.updateProjectionMatrix()};THREE.Camera.prototype=new THREE.Object3D;
THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.supr=THREE.Object3D.prototype;THREE.Camera.prototype.translate=function(b,e){this.matrix.rotateAxis(e);e.multiplyScalar(b);this.position.addSelf(e);this.target.position.addSelf(e)};
THREE.Camera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var b=this.fullWidth/this.fullHeight,e=Math.tan(this.fov*Math.PI/360)*this.near,d=-e,f=b*d,b=Math.abs(b*e-f),d=Math.abs(e-d);this.projectionMatrix=THREE.Matrix4.makeFrustum(f+this.x*b/this.fullWidth,f+(this.x+this.width)*b/this.fullWidth,e-(this.y+this.height)*d/this.fullHeight,e-this.y*d/this.fullHeight,this.near,this.far)}else this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.Camera.prototype.setViewOffset=function(b,e,d,f,h,i){this.fullWidth=b;this.fullHeight=e;this.x=d;this.y=f;this.width=h;this.height=i;this.updateProjectionMatrix()};
THREE.Camera.prototype.update=function(b,e,d){if(this.useTarget)this.matrix.lookAt(this.position,this.target.position,this.up),this.matrix.setPosition(this.position),b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),THREE.Matrix4.makeInvert(this.matrixWorld,this.matrixWorldInverse),e=!0;else if(this.matrixAutoUpdate&&this.updateMatrix(),e||this.matrixWorldNeedsUpdate)b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=
!1,e=!0,THREE.Matrix4.makeInvert(this.matrixWorld,this.matrixWorldInverse);for(b=0;b<this.children.length;b++)this.children[b].update(this.matrixWorld,e,d)};THREE.Light=function(b){THREE.Object3D.call(this);this.color=new THREE.Color(b)};THREE.Light.prototype=new THREE.Object3D;THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.supr=THREE.Object3D.prototype;THREE.AmbientLight=function(b){THREE.Light.call(this,b)};THREE.AmbientLight.prototype=new THREE.Light;
THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(b,e,d,f){THREE.Light.call(this,b);this.position=new THREE.Vector3(0,1,0);this.intensity=e||1;this.distance=d||0;this.castShadow=f!==void 0?f:!1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(b,e,d){THREE.Light.call(this,b);this.position=new THREE.Vector3;this.intensity=e||1;this.distance=d||0};
THREE.PointLight.prototype=new THREE.Light;THREE.PointLight.prototype.constructor=THREE.PointLight;THREE.LensFlare=function(b,e,d,f){THREE.Object3D.call(this);this.positionScreen=new THREE.Vector3;this.lensFlares=[];this.customUpdateCallback=void 0;b!==void 0&&this.add(b,e,d,f)};THREE.LensFlare.prototype=new THREE.Object3D;THREE.LensFlare.prototype.constructor=THREE.LensFlare;THREE.LensFlare.prototype.supr=THREE.Object3D.prototype;
THREE.LensFlare.prototype.add=function(b,e,d,f){e===void 0&&(e=-1);d===void 0&&(d=0);if(f===void 0)f=THREE.BillboardBlending;d=Math.min(d,Math.max(0,d));this.lensFlares.push({texture:b,size:e,distance:d,x:0,y:0,z:0,scale:1,rotation:1,opacity:1,blending:f})};
THREE.LensFlare.prototype.updateLensFlares=function(){var b,e=this.lensFlares.length,d,f=-this.positionScreen.x*2,h=-this.positionScreen.y*2;for(b=0;b<e;b++)d=this.lensFlares[b],d.x=this.positionScreen.x+f*d.distance,d.y=this.positionScreen.y+h*d.distance,d.wantedRotation=d.x*Math.PI*0.25,d.rotation+=(d.wantedRotation-d.rotation)*0.25};
THREE.Material=function(b){this.id=THREE.MaterialCounter.value++;b=b||{};this.opacity=b.opacity!==void 0?b.opacity:1;this.transparent=b.transparent!==void 0?b.transparent:!1;this.blending=b.blending!==void 0?b.blending:THREE.NormalBlending;this.depthTest=b.depthTest!==void 0?b.depthTest:!0;this.polygonOffset=b.polygonOffset!==void 0?b.polygonOffset:!1;this.polygonOffsetFactor=b.polygonOffsetFactor!==void 0?b.polygonOffsetFactor:0;this.polygonOffsetUnits=b.polygonOffsetUnits!==void 0?b.polygonOffsetUnits:
0};THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;THREE.MultiplyBlending=3;THREE.AdditiveAlphaBlending=4;THREE.MaterialCounter={value:0};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};
THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};THREE.LineBasicMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.linewidth=b.linewidth!==void 0?b.linewidth:1;this.linecap=b.linecap!==void 0?b.linecap:"round";this.linejoin=b.linejoin!==void 0?b.linejoin:"round";this.vertexColors=b.vertexColors?b.vertexColors:!1};THREE.LineBasicMaterial.prototype=new THREE.Material;
THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;
THREE.MeshBasicMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.map=b.map!==void 0?b.map:null;this.lightMap=b.lightMap!==void 0?b.lightMap:null;this.envMap=b.envMap!==void 0?b.envMap:null;this.combine=b.combine!==void 0?b.combine:THREE.MultiplyOperation;this.reflectivity=b.reflectivity!==void 0?b.reflectivity:1;this.refractionRatio=b.refractionRatio!==void 0?b.refractionRatio:0.98;this.shading=b.shading!==
void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1;this.wireframeLinecap=b.wireframeLinecap!==void 0?b.wireframeLinecap:"round";this.wireframeLinejoin=b.wireframeLinejoin!==void 0?b.wireframeLinejoin:"round";this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1;this.skinning=b.skinning!==void 0?b.skinning:!1;this.morphTargets=b.morphTargets!==void 0?b.morphTargets:!1};
THREE.MeshBasicMaterial.prototype=new THREE.Material;THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;
THREE.MeshLambertMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.map=b.map!==void 0?b.map:null;this.lightMap=b.lightMap!==void 0?b.lightMap:null;this.envMap=b.envMap!==void 0?b.envMap:null;this.combine=b.combine!==void 0?b.combine:THREE.MultiplyOperation;this.reflectivity=b.reflectivity!==void 0?b.reflectivity:1;this.refractionRatio=b.refractionRatio!==void 0?b.refractionRatio:0.98;this.shading=b.shading!==
void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1;this.wireframeLinecap=b.wireframeLinecap!==void 0?b.wireframeLinecap:"round";this.wireframeLinejoin=b.wireframeLinejoin!==void 0?b.wireframeLinejoin:"round";this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1;this.skinning=b.skinning!==void 0?b.skinning:!1;this.morphTargets=b.morphTargets!==void 0?b.morphTargets:!1};
THREE.MeshLambertMaterial.prototype=new THREE.Material;THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;
THREE.MeshPhongMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.ambient=b.ambient!==void 0?new THREE.Color(b.ambient):new THREE.Color(328965);this.specular=b.specular!==void 0?new THREE.Color(b.specular):new THREE.Color(1118481);this.shininess=b.shininess!==void 0?b.shininess:30;this.map=b.map!==void 0?b.map:null;this.lightMap=b.lightMap!==void 0?b.lightMap:null;this.envMap=b.envMap!==void 0?b.envMap:null;
this.combine=b.combine!==void 0?b.combine:THREE.MultiplyOperation;this.reflectivity=b.reflectivity!==void 0?b.reflectivity:1;this.refractionRatio=b.refractionRatio!==void 0?b.refractionRatio:0.98;this.shading=b.shading!==void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1;this.wireframeLinecap=b.wireframeLinecap!==void 0?b.wireframeLinecap:"round";this.wireframeLinejoin=b.wireframeLinejoin!==
void 0?b.wireframeLinejoin:"round";this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1;this.skinning=b.skinning!==void 0?b.skinning:!1;this.morphTargets=b.morphTargets!==void 0?b.morphTargets:!1};THREE.MeshPhongMaterial.prototype=new THREE.Material;THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;
THREE.MeshDepthMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.shading=b.shading!==void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1};THREE.MeshDepthMaterial.prototype=new THREE.Material;THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;
THREE.MeshNormalMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.shading=b.shading?b.shading:THREE.FlatShading;this.wireframe=b.wireframe?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth?b.wireframeLinewidth:1};THREE.MeshNormalMaterial.prototype=new THREE.Material;THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshFaceMaterial=function(){};
THREE.MeshShaderMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.fragmentShader=b.fragmentShader!==void 0?b.fragmentShader:"void main() {}";this.vertexShader=b.vertexShader!==void 0?b.vertexShader:"void main() {}";this.uniforms=b.uniforms!==void 0?b.uniforms:{};this.attributes=b.attributes;this.shading=b.shading!==void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1;this.fog=
b.fog!==void 0?b.fog:!1;this.lights=b.lights!==void 0?b.lights:!1;this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1;this.skinning=b.skinning!==void 0?b.skinning:!1;this.morphTargets=b.morphTargets!==void 0?b.morphTargets:!1};THREE.MeshShaderMaterial.prototype=new THREE.Material;THREE.MeshShaderMaterial.prototype.constructor=THREE.MeshShaderMaterial;
THREE.ParticleBasicMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.map=b.map!==void 0?b.map:null;this.size=b.size!==void 0?b.size:1;this.sizeAttenuation=b.sizeAttenuation!==void 0?b.sizeAttenuation:!0;this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1};THREE.ParticleBasicMaterial.prototype=new THREE.Material;THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial;
THREE.ShadowVolumeDynamicMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.map=b.map!==void 0?b.map:null;this.lightMap=b.lightMap!==void 0?b.lightMap:null;this.envMap=b.envMap!==void 0?b.envMap:null;this.combine=b.combine!==void 0?b.combine:THREE.MultiplyOperation;this.reflectivity=b.reflectivity!==void 0?b.reflectivity:1;this.refractionRatio=b.refractionRatio!==void 0?b.refractionRatio:0.98;this.shading=b.shading!==
void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1;this.wireframeLinecap=b.wireframeLinecap!==void 0?b.wireframeLinecap:"round";this.wireframeLinejoin=b.wireframeLinejoin!==void 0?b.wireframeLinejoin:"round";this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1;this.skinning=b.skinning!==void 0?b.skinning:!1;this.morphTargets=b.morphTargets!==void 0?b.morphTargets:!1};
THREE.ShadowVolumeDynamicMaterial.prototype=new THREE.Material;THREE.ShadowVolumeDynamicMaterial.prototype.constructor=THREE.ShadowVolumeDynamicMaterial;
THREE.Texture=function(b,e,d,f,h,i){this.image=b;this.mapping=e!==void 0?e:new THREE.UVMapping;this.wrapS=d!==void 0?d:THREE.ClampToEdgeWrapping;this.wrapT=f!==void 0?f:THREE.ClampToEdgeWrapping;this.magFilter=h!==void 0?h:THREE.LinearFilter;this.minFilter=i!==void 0?i:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.needsUpdate=!1};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter)}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;
THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;THREE.Particle=function(b){THREE.Object3D.call(this);this.materials=b instanceof Array?b:[b]};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;
THREE.ParticleSystem=function(b,e){THREE.Object3D.call(this);this.geometry=b;this.materials=e instanceof Array?e:[e];this.sortParticles=!1};THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;THREE.Line=function(b,e,d){THREE.Object3D.call(this);this.geometry=b;this.materials=e instanceof Array?e:[e];this.type=d!=void 0?d:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;
THREE.Line.prototype.constructor=THREE.Line;
THREE.Mesh=function(b,e){THREE.Object3D.call(this);this.geometry=b;this.materials=e&&e.length?e:[e];this.overdraw=!1;if(this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=b.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var d=0;d<this.geometry.morphTargets.length;d++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[d].name]=
d}};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.supr=THREE.Object3D.prototype;THREE.Mesh.prototype.getMorphTargetIndexByName=function(b){if(this.morphTargetDictionary[b]!==void 0)return this.morphTargetDictionary[b];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+b+" does not exist. Returning 0.");return 0};
THREE.Bone=function(b){THREE.Object3D.call(this);this.skin=b;this.skinMatrix=new THREE.Matrix4;this.hasNoneBoneChildren=!1};THREE.Bone.prototype=new THREE.Object3D;THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.supr=THREE.Object3D.prototype;
THREE.Bone.prototype.update=function(b,e,d){this.matrixAutoUpdate&&(e|=this.updateMatrix());if(e||this.matrixWorldNeedsUpdate)b?this.skinMatrix.multiply(b,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0;var f,h=this.children.length;if(this.hasNoneBoneChildren){this.matrixWorld.multiply(this.skin.matrixWorld,this.skinMatrix);for(f=0;f<h;f++)b=this.children[f],b instanceof THREE.Bone?b.update(this.skinMatrix,e,d):b.update(this.matrixWorld,!0,d)}else for(f=0;f<h;f++)this.children[f].update(this.skinMatrix,
e,d)};THREE.Bone.prototype.addChild=function(b){if(this.children.indexOf(b)===-1&&(b.parent!==void 0&&b.parent.removeChild(b),b.parent=this,this.children.push(b),!(b instanceof THREE.Bone)))this.hasNoneBoneChildren=!0};
THREE.SkinnedMesh=function(b,e){THREE.Mesh.call(this,b,e);this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,f,h,i,g,j;if(this.geometry.bones!==void 0){for(d=0;d<this.geometry.bones.length;d++)h=this.geometry.bones[d],i=h.pos,g=h.rotq,j=h.scl,f=this.addBone(),f.name=h.name,f.position.set(i[0],i[1],i[2]),f.quaternion.set(g[0],g[1],g[2],g[3]),f.useQuaternion=!0,j!==void 0?f.scale.set(j[0],j[1],j[2]):f.scale.set(1,1,1);for(d=0;d<this.bones.length;d++)h=this.geometry.bones[d],
f=this.bones[d],h.parent===-1?this.addChild(f):this.bones[h.parent].addChild(f);this.boneMatrices=new Float32Array(16*this.bones.length);this.pose()}};THREE.SkinnedMesh.prototype=new THREE.Mesh;THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;
THREE.SkinnedMesh.prototype.update=function(b,e,d){if(this.visible){this.matrixAutoUpdate&&(e|=this.updateMatrix());if(e||this.matrixWorldNeedsUpdate)b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0;var f,h=this.children.length;for(f=0;f<h;f++)b=this.children[f],b instanceof THREE.Bone?b.update(this.identityMatrix,!1,d):b.update(this.matrixWorld,e,d);d=this.bones.length;ba=this.bones;bm=this.boneMatrices;for(e=0;e<d;e++)ba[e].skinMatrix.flattenToArrayOffset(bm,
e*16)}};THREE.SkinnedMesh.prototype.addBone=function(b){b===void 0&&(b=new THREE.Bone(this));this.bones.push(b);return b};
THREE.SkinnedMesh.prototype.pose=function(){this.update(void 0,!0);for(var b,e=[],d=0;d<this.bones.length;d++)b=this.bones[d],e.push(THREE.Matrix4.makeInvert(b.skinMatrix)),b.skinMatrix.flattenToArrayOffset(this.boneMatrices,d*16);if(this.geometry.skinVerticesA===void 0){this.geometry.skinVerticesA=[];this.geometry.skinVerticesB=[];var f;for(b=0;b<this.geometry.skinIndices.length;b++){var d=this.geometry.vertices[b].position,h=this.geometry.skinIndices[b].x,i=this.geometry.skinIndices[b].y;f=new THREE.Vector3(d.x,
d.y,d.z);this.geometry.skinVerticesA.push(e[h].multiplyVector3(f));f=new THREE.Vector3(d.x,d.y,d.z);this.geometry.skinVerticesB.push(e[i].multiplyVector3(f));this.geometry.skinWeights[b].x+this.geometry.skinWeights[b].y!==1&&(d=(1-(this.geometry.skinWeights[b].x+this.geometry.skinWeights[b].y))*0.5,this.geometry.skinWeights[b].x+=d,this.geometry.skinWeights[b].y+=d)}}};THREE.Ribbon=function(b,e){THREE.Object3D.call(this);this.geometry=b;this.materials=e instanceof Array?e:[e]};
THREE.Ribbon.prototype=new THREE.Object3D;THREE.Ribbon.prototype.constructor=THREE.Ribbon;
THREE.Sound=function(b,e,d,f){THREE.Object3D.call(this);this.isPlaying=this.isAddedToDOM=this.isLoaded=!1;this.duration=-1;this.radius=e!==void 0?Math.abs(e):100;this.volume=Math.min(1,Math.max(0,d!==void 0?d:1));this.domElement=document.createElement("audio");this.domElement.volume=0;this.domElement.pan=0;this.domElement.loop=f!==void 0?f:!0;this.sources=b instanceof Array?b:[b];for(var h,d=this.sources.length,b=0;b<d;b++)if(e=this.sources[b],e.toLowerCase(),e.indexOf(".mp3")!==-1?h="audio/mpeg":
e.indexOf(".ogg")!==-1?h="audio/ogg":e.indexOf(".wav")!==-1&&(h="audio/wav"),this.domElement.canPlayType(h)){h=document.createElement("source");h.src=this.sources[b];this.domElement.THREESound=this;this.domElement.appendChild(h);this.domElement.addEventListener("canplay",this.onLoad,!0);this.domElement.load();break}};THREE.Sound.prototype=new THREE.Object3D;THREE.Sound.prototype.constructor=THREE.Sound;THREE.Sound.prototype.supr=THREE.Object3D.prototype;
THREE.Sound.prototype.onLoad=function(){var b=this.THREESound;if(!b.isLoaded)this.removeEventListener("canplay",this.onLoad,!0),b.isLoaded=!0,b.duration=this.duration,b.isPlaying&&b.play()};THREE.Sound.prototype.addToDOM=function(b){this.isAddedToDOM=!0;b.appendChild(this.domElement)};THREE.Sound.prototype.play=function(b){this.isPlaying=!0;if(this.isLoaded&&(this.domElement.play(),b))this.domElement.currentTime=b%this.duration};THREE.Sound.prototype.pause=function(){this.isPlaying=!1;this.domElement.pause()};
THREE.Sound.prototype.stop=function(){this.isPlaying=!1;this.domElement.pause();this.domElement.currentTime=0};THREE.Sound.prototype.calculateVolumeAndPan=function(b){b=b.length();this.domElement.volume=b<=this.radius?this.volume*(1-b/this.radius):0};
THREE.Sound.prototype.update=function(b,e,d){this.matrixAutoUpdate&&(this.matrix.setPosition(this.position),e=!0);if(e||this.matrixWorldNeedsUpdate)b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0;for(var f=this.children.length,b=0;b<f;b++)this.children[b].update(this.matrixWorld,e,d)};THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=new THREE.Object3D;THREE.LOD.prototype.constructor=THREE.LOD;
THREE.LOD.prototype.supr=THREE.Object3D.prototype;THREE.LOD.prototype.add=function(b,e){e===void 0&&(e=0);for(var e=Math.abs(e),d=0;d<this.LODs.length;d++)if(e<this.LODs[d].visibleAtDistance)break;this.LODs.splice(d,0,{visibleAtDistance:e,object3D:b});this.addChild(b)};
THREE.LOD.prototype.update=function(b,e,d){this.matrixAutoUpdate&&(e|=this.updateMatrix());if(e||this.matrixWorldNeedsUpdate)b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0;if(this.LODs.length>1){b=d.matrixWorldInverse;b=-(b.n31*this.position.x+b.n32*this.position.y+b.n33*this.position.z+b.n34);this.LODs[0].object3D.visible=!0;for(var f=1;f<this.LODs.length;f++)if(b>=this.LODs[f].visibleAtDistance)this.LODs[f-1].object3D.visible=!1,
this.LODs[f].object3D.visible=!0;else break;for(;f<this.LODs.length;f++)this.LODs[f].object3D.visible=!1}for(b=0;b<this.children.length;b++)this.children[b].update(this.matrixWorld,e,d)};THREE.ShadowVolume=function(b,e){b instanceof THREE.Mesh?(THREE.Mesh.call(this,b.geometry,e?[new THREE.ShadowVolumeDynamicMaterial]:[new THREE.ShadowVolumeDynamicMaterial]),b.addChild(this)):THREE.Mesh.call(this,b,e?[new THREE.ShadowVolumeDynamicMaterial]:[new THREE.ShadowVolumeDynamicMaterial]);this.calculateShadowVolumeGeometry()};
THREE.ShadowVolume.prototype=new THREE.Mesh;THREE.ShadowVolume.prototype.constructor=THREE.ShadowVolume;THREE.ShadowVolume.prototype.supr=THREE.Mesh.prototype;
THREE.ShadowVolume.prototype.calculateShadowVolumeGeometry=function(){if(this.geometry.edges&&this.geometry.edges.length){var b,e,d,f,h,i,g,j,k,o,p,n,q,w,y=new THREE.Geometry;y.vertices=this.geometry.vertices;f=y.faces=this.geometry.faces;var D=y.egdes=this.geometry.edges,z=y.edgeFaces=[];h=0;var C=[];b=0;for(e=f.length;b<e;b++)if(d=f[b],C.push(h),h+=d instanceof THREE.Face3?3:4,d.vertexNormals[0]=d.normal,d.vertexNormals[1]=d.normal,d.vertexNormals[2]=d.normal,d instanceof THREE.Face4)d.vertexNormals[3]=
d.normal;b=0;for(e=D.length;b<e;b++)j=D[b],d=j.faces[0],f=j.faces[1],h=j.faceIndices[0],i=j.faceIndices[1],g=j.vertexIndices[0],j=j.vertexIndices[1],d.a===g?(k="a",p=C[h]+0):d.b===g?(k="b",p=C[h]+1):d.c===g?(k="c",p=C[h]+2):d.d===g&&(k="d",p=C[h]+3),d.a===j?(k+="a",n=C[h]+0):d.b===j?(k+="b",n=C[h]+1):d.c===j?(k+="c",n=C[h]+2):d.d===j&&(k+="d",n=C[h]+3),f.a===g?(o="a",q=C[i]+0):f.b===g?(o="b",q=C[i]+1):f.c===g?(o="c",q=C[i]+2):f.d===g&&(o="d",q=C[i]+3),f.a===j?(o+="a",w=C[i]+0):f.b===j?(o+="b",w=C[i]+
1):f.c===j?(o+="c",w=C[i]+2):f.d===j&&(o+="d",w=C[i]+3),k==="ac"||k==="ad"||k==="ca"||k==="da"?p>n&&(d=p,p=n,n=d):p<n&&(d=p,p=n,n=d),o==="ac"||o==="ad"||o==="ca"||o==="da"?q>w&&(d=q,q=w,w=d):q<w&&(d=q,q=w,w=d),d=new THREE.Face4(p,n,q,w),d.normal.set(1,0,0),z.push(d);this.geometry=y}else this.calculateShadowVolumeGeometryWithoutEdgeInfo(this.geometry)};
THREE.ShadowVolume.prototype.calculateShadowVolumeGeometryWithoutEdgeInfo=function(b){this.geometry=new THREE.Geometry;this.geometry.boundingSphere=b.boundingSphere;this.geometry.edgeFaces=[];var e=this.geometry.vertices,d=this.geometry.faces,f=this.geometry.edgeFaces,h=b.faces,b=b.vertices,i=h.length,g,j,k,o,p,n=["a","b","c","d"];for(k=0;k<i;k++){j=e.length;g=h[k];g instanceof THREE.Face4?(o=4,j=new THREE.Face4(j,j+1,j+2,j+3)):(o=3,j=new THREE.Face3(j,j+1,j+2));j.normal.copy(g.normal);d.push(j);
for(j=0;j<o;j++)p=b[g[n[j]]],e.push(new THREE.Vertex(p.position.clone()))}for(i=0;i<h.length-1;i++){b=d[i];for(g=i+1;g<h.length;g++)j=d[g],j=this.facesShareEdge(e,b,j),j!==void 0&&(j=new THREE.Face4(j.indices[0],j.indices[3],j.indices[2],j.indices[1]),j.normal.set(1,0,0),f.push(j))}};
THREE.ShadowVolume.prototype.facesShareEdge=function(b,e,d){var f,h,i,g,j,k,o,p,n,q,w,y,D,z=0,C=["a","b","c","d"];f=e instanceof THREE.Face4?4:3;h=d instanceof THREE.Face4?4:3;for(y=0;y<f;y++){i=e[C[y]];j=b[i];for(D=0;D<h;D++)if(g=d[C[D]],k=b[g],Math.abs(j.position.x-k.position.x)<1.0E-4&&Math.abs(j.position.y-k.position.y)<1.0E-4&&Math.abs(j.position.z-k.position.z)<1.0E-4&&(z++,z===1&&(o=j,p=k,n=i,q=g,w=C[y]),z===2))return w+=C[y],w==="ad"||w==="ac"?{faces:[e,d],vertices:[o,p,k,j],indices:[n,q,
g,i],vertexTypes:[1,2,2,1],extrudable:!0}:{faces:[e,d],vertices:[o,j,k,p],indices:[n,i,g,q],vertexTypes:[1,1,2,2],extrudable:!0}}};
THREE.Sprite=function(b){THREE.Object3D.call(this);if(b.material!==void 0)this.material=b.material,this.map=void 0,this.blending=material.blending;else if(b.map!==void 0)this.map=b.map instanceof THREE.Texture?b.map:THREE.ImageUtils.loadTexture(b.map),this.material=void 0,this.blending=b.blending!==void 0?b.blending:THREE.NormalBlending;this.useScreenCoordinates=b.useScreenCoordinates!==void 0?b.useScreenCoordinates:!0;this.mergeWith3D=b.mergeWith3D!==void 0?b.mergeWith3D:!this.useScreenCoordinates;
this.affectedByDistance=b.affectedByDistance!==void 0?b.affectedByDistance:!this.useScreenCoordinates;this.scaleByViewport=b.scaleByViewport!==void 0?b.scaleByViewport:!this.affectedByDistance;this.alignment=b.alignment instanceof THREE.Vector2?b.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1)};THREE.Sprite.prototype=new THREE.Object3D;THREE.Sprite.prototype.constructor=THREE.Sprite;
THREE.Sprite.prototype.supr=THREE.Object3D.prototype;THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(this.scale.x!==1||this.scale.y!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);
THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);
THREE.Scene=function(){THREE.Object3D.call(this);this.matrixAutoUpdate=!1;this.collisions=this.fog=null;this.objects=[];this.lights=[];this.sounds=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=new THREE.Object3D;THREE.Scene.prototype.constructor=THREE.Scene;THREE.Scene.prototype.supr=THREE.Object3D.prototype;THREE.Scene.prototype.addChild=function(b){this.supr.addChild.call(this,b);this.addChildRecurse(b)};
THREE.Scene.prototype.addChildRecurse=function(b){if(b instanceof THREE.Light)this.lights.indexOf(b)===-1&&this.lights.push(b);else if(b instanceof THREE.Sound)this.sounds.indexOf(b)===-1&&this.sounds.push(b);else if(!(b instanceof THREE.Camera||b instanceof THREE.Bone)&&this.objects.indexOf(b)===-1)this.objects.push(b),this.__objectsAdded.push(b);for(var e=0;e<b.children.length;e++)this.addChildRecurse(b.children[e])};
THREE.Scene.prototype.removeChild=function(b){this.supr.removeChild.call(this,b);this.removeChildRecurse(b)};THREE.Scene.prototype.removeChildRecurse=function(b){if(b instanceof THREE.Light){var e=this.lights.indexOf(b);e!==-1&&this.lights.splice(e,1)}else b instanceof THREE.Sound?(e=this.sounds.indexOf(b),e!==-1&&this.sounds.splice(e,1)):b instanceof THREE.Camera||(e=this.objects.indexOf(b),e!==-1&&(this.objects.splice(e,1),this.__objectsRemoved.push(b)));for(e=0;e<b.children.length;e++)this.removeChildRecurse(b.children[e])};
THREE.Scene.prototype.addObject=THREE.Scene.prototype.addChild;THREE.Scene.prototype.removeObject=THREE.Scene.prototype.removeChild;THREE.Scene.prototype.addLight=THREE.Scene.prototype.addChild;THREE.Scene.prototype.removeLight=THREE.Scene.prototype.removeChild;THREE.Fog=function(b,e,d){this.color=new THREE.Color(b);this.near=e||1;this.far=d||1E3};THREE.FogExp2=function(b,e){this.color=new THREE.Color(b);this.density=e!==void 0?e:2.5E-4};
THREE.Projector=function(){function b(){var b=k[j]=k[j]||new THREE.RenderableVertex;j++;return b}function e(b,e){return e.z-b.z}function d(b,e){var d=0,c=1,f=b.z+b.w,h=e.z+e.w,g=-b.z+b.w,i=-e.z+e.w;return f>=0&&h>=0&&g>=0&&i>=0?!0:f<0&&h<0||g<0&&i<0?!1:(f<0?d=Math.max(d,f/(f-h)):h<0&&(c=Math.min(c,f/(f-h))),g<0?d=Math.max(d,g/(g-i)):i<0&&(c=Math.min(c,g/(g-i))),c<d?!1:(b.lerpSelf(e,d),e.lerpSelf(b,1-c),!0))}var f,h,i=[],g,j,k=[],o,p,n=[],q,w=[],y,D,z=[],C,ga,M=[],O=new THREE.Vector4,F=new THREE.Vector4,
v=new THREE.Matrix4,$=new THREE.Matrix4,B=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],aa=new THREE.Vector4,K=new THREE.Vector4;this.projectVector=function(b,e){v.multiply(e.projectionMatrix,e.matrixWorldInverse);v.multiplyVector3(b);return b};this.unprojectVector=function(b,e){v.multiply(e.matrixWorld,THREE.Matrix4.makeInvert(e.projectionMatrix));v.multiplyVector3(b);return b};this.projectObjects=function(b,d,g){var d=[],c,j,o;h=0;
j=b.objects;b=0;for(c=j.length;b<c;b++){o=j[b];var k;if(!(k=!o.visible))if(k=o instanceof THREE.Mesh){a:{k=void 0;for(var p=o.matrixWorld,n=-o.geometry.boundingSphere.radius*Math.max(o.scale.x,Math.max(o.scale.y,o.scale.z)),q=0;q<6;q++)if(k=B[q].x*p.n14+B[q].y*p.n24+B[q].z*p.n34+B[q].w,k<=n){k=!1;break a}k=!0}k=!k}if(!k)k=i[h]=i[h]||new THREE.RenderableObject,h++,f=k,O.copy(o.position),v.multiplyVector3(O),f.object=o,f.z=O.z,d.push(f)}g&&d.sort(e);return d};this.projectScene=function(f,h,i){var c=
[],O=h.near,S=h.far,ka,Q,J,la,E,L,G,N,ma,u,t,pa,ra,Ca,ua,Aa,za;ga=D=q=p=0;h.matrixAutoUpdate&&h.update(void 0,!0);f.update(void 0,!1,h);v.multiply(h.projectionMatrix,h.matrixWorldInverse);B[0].set(v.n41-v.n11,v.n42-v.n12,v.n43-v.n13,v.n44-v.n14);B[1].set(v.n41+v.n11,v.n42+v.n12,v.n43+v.n13,v.n44+v.n14);B[2].set(v.n41+v.n21,v.n42+v.n22,v.n43+v.n23,v.n44+v.n24);B[3].set(v.n41-v.n21,v.n42-v.n22,v.n43-v.n23,v.n44-v.n24);B[4].set(v.n41-v.n31,v.n42-v.n32,v.n43-v.n33,v.n44-v.n34);B[5].set(v.n41+v.n31,v.n42+
v.n32,v.n43+v.n33,v.n44+v.n34);for(ka=0;ka<6;ka++)ma=B[ka],ma.divideScalar(Math.sqrt(ma.x*ma.x+ma.y*ma.y+ma.z*ma.z));ma=this.projectObjects(f,h,!0);f=0;for(ka=ma.length;f<ka;f++)if(u=ma[f].object,u.visible)if(t=u.matrixWorld,pa=u.matrixRotationWorld,ra=u.materials,Ca=u.overdraw,j=0,u instanceof THREE.Mesh){ua=u.geometry;la=ua.vertices;Aa=ua.faces;ua=ua.faceVertexUvs;Q=0;for(J=la.length;Q<J;Q++)g=b(),g.positionWorld.copy(la[Q].position),t.multiplyVector3(g.positionWorld),g.positionScreen.copy(g.positionWorld),
v.multiplyVector4(g.positionScreen),g.positionScreen.x/=g.positionScreen.w,g.positionScreen.y/=g.positionScreen.w,g.visible=g.positionScreen.z>O&&g.positionScreen.z<S;la=0;for(Q=Aa.length;la<Q;la++){J=Aa[la];if(J instanceof THREE.Face3)if(E=k[J.a],L=k[J.b],G=k[J.c],E.visible&&L.visible&&G.visible&&(u.doubleSided||u.flipSided!=(G.positionScreen.x-E.positionScreen.x)*(L.positionScreen.y-E.positionScreen.y)-(G.positionScreen.y-E.positionScreen.y)*(L.positionScreen.x-E.positionScreen.x)<0))N=n[p]=n[p]||
new THREE.RenderableFace3,p++,o=N,o.v1.copy(E),o.v2.copy(L),o.v3.copy(G);else continue;else if(J instanceof THREE.Face4)if(E=k[J.a],L=k[J.b],G=k[J.c],N=k[J.d],E.visible&&L.visible&&G.visible&&N.visible&&(u.doubleSided||u.flipSided!=((N.positionScreen.x-E.positionScreen.x)*(L.positionScreen.y-E.positionScreen.y)-(N.positionScreen.y-E.positionScreen.y)*(L.positionScreen.x-E.positionScreen.x)<0||(L.positionScreen.x-G.positionScreen.x)*(N.positionScreen.y-G.positionScreen.y)-(L.positionScreen.y-G.positionScreen.y)*
(N.positionScreen.x-G.positionScreen.x)<0)))za=w[q]=w[q]||new THREE.RenderableFace4,q++,o=za,o.v1.copy(E),o.v2.copy(L),o.v3.copy(G),o.v4.copy(N);else continue;o.normalWorld.copy(J.normal);pa.multiplyVector3(o.normalWorld);o.centroidWorld.copy(J.centroid);t.multiplyVector3(o.centroidWorld);o.centroidScreen.copy(o.centroidWorld);v.multiplyVector3(o.centroidScreen);G=J.vertexNormals;E=0;for(L=G.length;E<L;E++)N=o.vertexNormalsWorld[E],N.copy(G[E]),pa.multiplyVector3(N);E=0;for(L=ua.length;E<L;E++)if(za=
ua[E][la]){G=0;for(N=za.length;G<N;G++)o.uvs[E][G]=za[G]}o.meshMaterials=ra;o.faceMaterials=J.materials;o.overdraw=Ca;o.z=o.centroidScreen.z;c.push(o)}}else if(u instanceof THREE.Line){$.multiply(v,t);la=u.geometry.vertices;E=b();E.positionScreen.copy(la[0].position);$.multiplyVector4(E.positionScreen);Q=1;for(J=la.length;Q<J;Q++)if(E=b(),E.positionScreen.copy(la[Q].position),$.multiplyVector4(E.positionScreen),L=k[j-2],aa.copy(E.positionScreen),K.copy(L.positionScreen),d(aa,K))aa.multiplyScalar(1/
aa.w),K.multiplyScalar(1/K.w),t=z[D]=z[D]||new THREE.RenderableLine,D++,y=t,y.v1.positionScreen.copy(aa),y.v2.positionScreen.copy(K),y.z=Math.max(aa.z,K.z),y.materials=u.materials,c.push(y)}else if(u instanceof THREE.Particle&&(F.set(u.matrixWorld.n14,u.matrixWorld.n24,u.matrixWorld.n34,1),v.multiplyVector4(F),F.z/=F.w,F.z>0&&F.z<1))t=M[ga]=M[ga]||new THREE.RenderableParticle,ga++,C=t,C.x=F.x/F.w,C.y=F.y/F.w,C.z=F.z,C.rotation=u.rotation.z,C.scale.x=u.scale.x*Math.abs(C.x-(F.x+h.projectionMatrix.n11)/
(F.w+h.projectionMatrix.n14)),C.scale.y=u.scale.y*Math.abs(C.y-(F.y+h.projectionMatrix.n22)/(F.w+h.projectionMatrix.n24)),C.materials=u.materials,c.push(C);i&&c.sort(e);return c}};
THREE.SoundRenderer=function(){this.volume=1;this.domElement=document.createElement("div");this.domElement.id="THREESound";this.cameraPosition=new THREE.Vector3;this.soundPosition=new THREE.Vector3;this.render=function(b,e,d){d&&b.update(void 0,!1,e);var d=b.sounds,f,h=d.length;for(f=0;f<h;f++)b=d[f],this.soundPosition.set(b.matrixWorld.n14,b.matrixWorld.n24,b.matrixWorld.n34),this.soundPosition.subSelf(e.position),b.isPlaying&&b.isLoaded&&(b.isAddedToDOM||b.addToDOM(this.domElement),b.calculateVolumeAndPan(this.soundPosition))}};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform int combine;\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec4 cubeColor = textureCube( envMap, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = vec4( mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity ), opacity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",
envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",
lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat pointLightWeighting = max( dot( transformedNormal, lVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef PHONG\nvPointLight[ i ] = vec4( lVector, lDistance );\n#endif\n}\n#endif\n}",
lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mColor = vec4( diffuse, opacity );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec3 pointVector = normalize( vPointLight[ i ].xyz );\nvec3 pointHalfVector = normalize( vPointLight[ i ].xyz + vViewPosition );\nfloat pointDistance = vPointLight[ i ].w;\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight * pointDistance;\npointSpecular += mSpecular * pointSpecularWeight * pointDistance;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif\ngl_FragColor = gl_FragColor * totalLight;",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\nvColor = color;\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * viewMatrix * objectMatrix * gl_Position;\n#endif",
morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\nuniform float morphTargetInfluences[ 8 ];\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0, 0.0, 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",
default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif"};THREE.UniformsUtils={merge:function(b){var e,d,f,h={};for(e=0;e<b.length;e++)for(d in f=this.clone(b[e]),f)h[d]=f[d];return h},clone:function(b){var e,d,f,h={};for(e in b)for(d in h[e]={},b[e])f=b[e][d],h[e][d]=f instanceof THREE.Color||f instanceof THREE.Vector3||f instanceof THREE.Texture?f.clone():f;return h}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",
value:new THREE.Color(16777215)},morphTargetInfluences:{type:"f",value:0}},lights:{enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},
map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}}};
THREE.ShaderLib={lensFlareVertexTexture:{vertexShader:"uniform \tvec3 \tscreenPosition;\nuniform\tvec2\tscale;\nuniform\tfloat\trotation;\nuniform    int     renderType;\nuniform\tsampler2D\tocclusionMap;\nattribute \tvec2 \tposition;\nattribute  vec2\tUV;\nvarying\tvec2\tvUV;\nvarying\tfloat\tvVisibility;\nvoid main(void)\n{\nvUV = UV;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 )) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 )) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 )) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 )) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 )) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 )) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 )) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 )) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ));\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4(( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform\tsampler2D\tmap;\nuniform\tfloat\t\topacity;\nuniform    int         renderType;\nvarying\tvec2\t\tvUV;\nvarying\tfloat\t\tvVisibility;\nvoid main( void )\n{\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 color = texture2D( map, vUV );\ncolor.a *= opacity * vVisibility;\ngl_FragColor = color;\n}\n}"},
lensFlare:{vertexShader:"uniform \tvec3 \tscreenPosition;\nuniform\tvec2\tscale;\nuniform\tfloat\trotation;\nuniform    int     renderType;\nattribute \tvec2 \tposition;\nattribute  vec2\tUV;\nvarying\tvec2\tvUV;\nvoid main(void)\n{\nvUV = UV;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4(( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform\tsampler2D\tmap;\nuniform\tsampler2D\tocclusionMap;\nuniform\tfloat\t\topacity;\nuniform    int         renderType;\nvarying\tvec2\t\tvUV;\nvoid main( void )\n{\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 )).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 )).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 )).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 )).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 color = texture2D( map, vUV );\ncolor.a *= opacity * visibility;\ngl_FragColor = color;\n}\n}"},
sprite:{vertexShader:"uniform\tint\t\tuseScreenCoordinates;\nuniform    int     affectedByDistance;\nuniform\tvec3\tscreenPosition;\nuniform \tmat4 \tmodelViewMatrix;\nuniform \tmat4 \tprojectionMatrix;\nuniform    float   rotation;\nuniform    vec2    scale;\nuniform    vec2    alignment;\nuniform    vec2    uvOffset;\nuniform\tvec2    uvScale;\nattribute \tvec2 \tposition;\nattribute  vec2\tuv;\nvarying\tvec2\tvUV;\nvoid main(void)\n{\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform\tsampler2D\tmap;\nuniform\tfloat\t\topacity;\nvarying\tvec2\t\tvUV;\nvoid main( void )\n{\nvec4 color = texture2D( map, vUV );\ncolor.a *= opacity;\ngl_FragColor = color;\n}"},shadowPost:{vertexShader:"uniform \tmat4 \tprojectionMatrix;\nattribute \tvec3 \tposition;\nvoid main(void)\n{\ngl_Position = projectionMatrix * vec4( position, 1.0 );\n}",fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform \tfloat \tdarkness;\nvoid main( void )\n{\ngl_FragColor = vec4( 0, 0, 0, darkness );\n}"},
shadowVolumeDynamic:{uniforms:{directionalLightDirection:{type:"fv",value:[]}},vertexShader:"uniform \tvec3 \tdirectionalLightDirection;\nvoid main() {\nvec4 pos      = objectMatrix * vec4( position, 1.0 );\nvec3 norm     = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nvec4 extruded = vec4( directionalLightDirection * 5000.0 * step( 0.0, dot( directionalLightDirection, norm )), 0.0 );\ngl_Position   = projectionMatrix * viewMatrix * ( pos + extruded );\n}",fragmentShader:"void main() {\ngl_FragColor = vec4( 1.0 );\n}"},
depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}",vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},
fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}",vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsLib.common,fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,
THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights]),
fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nvarying vec3 vLightWeighting;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );\ngl_FragColor = gl_FragColor * vec4( vLightWeighting, 1.0 );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,
THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["varying vec3 vLightWeighting;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,
THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.lights_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),
fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_pars_fragment,"void main() {\ngl_FragColor = vec4( vLightWeighting, 1.0 );",THREE.ShaderChunk.lights_fragment,THREE.ShaderChunk.map_fragment,
THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,
"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",THREE.ShaderChunk.lights_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsLib.particle,fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["uniform float size;\nuniform float scale;",
THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n")}};
THREE.WebGLRenderer=function(b){function e(b,e,d){var f,h,g,i=b.vertices,j=i.length,k=b.colors,o=k.length,r=b.__vertexArray,P=b.__colorArray,p=b.__sortArray,n=b.__dirtyVertices,q=b.__dirtyColors;if(d.sortParticles){_projScreenMatrix.multiplySelf(d.matrixWorld);for(f=0;f<j;f++)h=i[f].position,_vector3.copy(h),_projScreenMatrix.multiplyVector3(_vector3),p[f]=[_vector3.z,f];p.sort(function(b,c){return c[0]-b[0]});for(f=0;f<j;f++)h=i[p[f][1]].position,g=f*3,r[g]=h.x,r[g+1]=h.y,r[g+2]=h.z;for(f=0;f<o;f++)g=
f*3,color=k[p[f][1]],P[g]=color.r,P[g+1]=color.g,P[g+2]=color.b}else{if(n)for(f=0;f<j;f++)h=i[f].position,g=f*3,r[g]=h.x,r[g+1]=h.y,r[g+2]=h.z;if(q)for(f=0;f<o;f++)color=k[f],g=f*3,P[g]=color.r,P[g+1]=color.g,P[g+2]=color.b}if(n||d.sortParticles)c.bindBuffer(c.ARRAY_BUFFER,b.__webglVertexBuffer),c.bufferData(c.ARRAY_BUFFER,r,e);if(q||d.sortParticles)c.bindBuffer(c.ARRAY_BUFFER,b.__webglColorBuffer),c.bufferData(c.ARRAY_BUFFER,P,e)}function d(b,e,d,f,h){f.program||R.initMaterial(f,e,d,h);var g=f.program,
i=g.uniforms,j=f.uniforms;g!=S&&(c.useProgram(g),S=g);c.uniformMatrix4fv(i.projectionMatrix,!1,_projectionMatrixArray);if(d&&(f instanceof THREE.MeshBasicMaterial||f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshPhongMaterial||f instanceof THREE.LineBasicMaterial||f instanceof THREE.ParticleBasicMaterial||f.fog))if(j.fogColor.value=d.color,d instanceof THREE.Fog)j.fogNear.value=d.near,j.fogFar.value=d.far;else if(d instanceof THREE.FogExp2)j.fogDensity.value=d.density;if(f instanceof
THREE.MeshPhongMaterial||f instanceof THREE.MeshLambertMaterial||f.lights){var k,o,r=0,P=0,p=0,n,q,w,t,v=_lights,u=v.directional.colors,C=v.directional.positions,y=v.point.colors,D=v.point.positions,H=v.point.distances,z=0,s=0,d=o=t=0;for(k=e.length;d<k;d++)if(o=e[d],n=o.color,q=o.position,w=o.intensity,t=o.distance,o instanceof THREE.AmbientLight)r+=n.r,P+=n.g,p+=n.b;else if(o instanceof THREE.DirectionalLight)t=z*3,u[t]=n.r*w,u[t+1]=n.g*w,u[t+2]=n.b*w,C[t]=q.x,C[t+1]=q.y,C[t+2]=q.z,z+=1;else if(o instanceof
THREE.PointLight)o=s*3,y[o]=n.r*w,y[o+1]=n.g*w,y[o+2]=n.b*w,D[o]=q.x,D[o+1]=q.y,D[o+2]=q.z,H[s]=t,s+=1;for(d=z*3;d<u.length;d++)u[d]=0;for(d=s*3;d<y.length;d++)y[d]=0;v.point.length=s;v.directional.length=z;v.ambient[0]=r;v.ambient[1]=P;v.ambient[2]=p;d=_lights;j.enableLighting.value=d.directional.length+d.point.length;j.ambientLightColor.value=d.ambient;j.directionalLightColor.value=d.directional.colors;j.directionalLightDirection.value=d.directional.positions;j.pointLightColor.value=d.point.colors;
j.pointLightPosition.value=d.point.positions;j.pointLightDistance.value=d.point.distances}if(f instanceof THREE.MeshBasicMaterial||f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshPhongMaterial)j.diffuse.value=f.color,j.opacity.value=f.opacity,(j.map.texture=f.map)&&j.offsetRepeat.value.set(f.map.offset.x,f.map.offset.y,f.map.repeat.x,f.map.repeat.y),j.lightMap.texture=f.lightMap,j.envMap.texture=f.envMap,j.reflectivity.value=f.reflectivity,j.refractionRatio.value=f.refractionRatio,
j.combine.value=f.combine,j.useRefract.value=f.envMap&&f.envMap.mapping instanceof THREE.CubeRefractionMapping;if(f instanceof THREE.LineBasicMaterial)j.diffuse.value=f.color,j.opacity.value=f.opacity;else if(f instanceof THREE.ParticleBasicMaterial)j.psColor.value=f.color,j.opacity.value=f.opacity,j.size.value=f.size,j.scale.value=_canvas.height/2,j.map.texture=f.map;else if(f instanceof THREE.MeshPhongMaterial)j.ambient.value=f.ambient,j.specular.value=f.specular,j.shininess.value=f.shininess;else if(f instanceof
THREE.MeshDepthMaterial)j.mNear.value=b.near,j.mFar.value=b.far,j.opacity.value=f.opacity;else if(f instanceof THREE.MeshNormalMaterial)j.opacity.value=f.opacity;for(var A in j)if(P=g.uniforms[A])if(k=j[A],r=k.type,d=k.value,r=="i")c.uniform1i(P,d);else if(r=="f")c.uniform1f(P,d);else if(r=="fv1")c.uniform1fv(P,d);else if(r=="fv")c.uniform3fv(P,d);else if(r=="v2")c.uniform2f(P,d.x,d.y);else if(r=="v3")c.uniform3f(P,d.x,d.y,d.z);else if(r=="v4")c.uniform4f(P,d.x,d.y,d.z,d.w);else if(r=="c")c.uniform3f(P,
d.r,d.g,d.b);else if(r=="t"&&(c.uniform1i(P,d),k=k.texture))if(k.image instanceof Array&&k.image.length==6){if(k.image.length==6){if(k.needsUpdate){if(k.__webglInit){c.bindTexture(c.TEXTURE_CUBE_MAP,k.image.__webglTextureCube);for(r=0;r<6;++r)c.texSubImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,0,0,c.RGBA,c.UNSIGNED_BYTE,k.image[r])}else{k.image.__webglTextureCube=c.createTexture();c.bindTexture(c.TEXTURE_CUBE_MAP,k.image.__webglTextureCube);for(r=0;r<6;++r)c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+
r,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,k.image[r]);k.__webglInit=!0}$(c.TEXTURE_CUBE_MAP,k,k.image[0]);c.bindTexture(c.TEXTURE_CUBE_MAP,null);k.needsUpdate=!1}c.activeTexture(c.TEXTURE0+d);c.bindTexture(c.TEXTURE_CUBE_MAP,k.image.__webglTextureCube)}}else B(k,d);c.uniformMatrix4fv(i.modelViewMatrix,!1,h._modelViewMatrixArray);c.uniformMatrix3fv(i.normalMatrix,!1,h._normalMatrixArray);(f instanceof THREE.MeshShaderMaterial||f instanceof THREE.MeshPhongMaterial||f.envMap)&&i.cameraPosition!==null&&c.uniform3f(i.cameraPosition,
b.position.x,b.position.y,b.position.z);(f instanceof THREE.MeshShaderMaterial||f.envMap||f.skinning)&&i.objectMatrix!==null&&c.uniformMatrix4fv(i.objectMatrix,!1,h._objectMatrixArray);(f instanceof THREE.MeshPhongMaterial||f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshShaderMaterial||f.skinning)&&i.viewMatrix!==null&&c.uniformMatrix4fv(i.viewMatrix,!1,_viewMatrixArray);if(f instanceof THREE.ShadowVolumeDynamicMaterial)b=j.directionalLightDirection.value,b[0]=-e[1].position.x,b[1]=
-e[1].position.y,b[2]=-e[1].position.z,c.uniform3fv(i.directionalLightDirection,b),c.uniformMatrix4fv(i.objectMatrix,!1,h._objectMatrixArray),c.uniformMatrix4fv(i.viewMatrix,!1,_viewMatrixArray);f.skinning&&(c.uniformMatrix4fv(i.cameraInverseMatrix,!1,_viewMatrixArray),c.uniformMatrix4fv(i.boneGlobalMatrices,!1,h.boneMatrices));return g}function f(b,e,f,h,g,i){if(h.opacity!=0){var j,b=d(b,e,f,h,i).attributes;if(!h.morphTargets&&b.position>=0)c.bindBuffer(c.ARRAY_BUFFER,g.__webglVertexBuffer),c.vertexAttribPointer(b.position,
3,c.FLOAT,!1,0,0);else{e=h.program.attributes;i.morphTargetBase!==-1?(c.bindBuffer(c.ARRAY_BUFFER,g.__webglMorphTargetsBuffers[i.morphTargetBase]),c.vertexAttribPointer(e.position,3,c.FLOAT,!1,0,0)):e.position>=0&&(c.bindBuffer(c.ARRAY_BUFFER,g.__webglVertexBuffer),c.vertexAttribPointer(e.position,3,c.FLOAT,!1,0,0));if(i.morphTargetForcedOrder.length)for(var f=0,k=i.morphTargetForcedOrder,o=i.morphTargetInfluences;f<h.numSupportedMorphTargets&&f<k.length;)c.bindBuffer(c.ARRAY_BUFFER,g.__webglMorphTargetsBuffers[k[f]]),
c.vertexAttribPointer(e["morphTarget"+f],3,c.FLOAT,!1,0,0),i.__webglMorphTargetInfluences[f]=o[k[f]],f++;else{var k=[],p=-1,r=0,o=i.morphTargetInfluences,P,n=o.length,f=0;for(i.morphTargetBase!==-1&&(k[i.morphTargetBase]=!0);f<h.numSupportedMorphTargets;){for(P=0;P<n;P++)!k[P]&&o[P]>p&&(r=P,p=o[r]);c.bindBuffer(c.ARRAY_BUFFER,g.__webglMorphTargetsBuffers[r]);c.vertexAttribPointer(e["morphTarget"+f],3,c.FLOAT,!1,0,0);i.__webglMorphTargetInfluences[f]=p;k[r]=1;p=-1;f++}}h.program.uniforms.morphTargetInfluences!==
null&&c.uniform1fv(h.program.uniforms.morphTargetInfluences,i.__webglMorphTargetInfluences)}if(g.__webglCustomAttributes)for(j in g.__webglCustomAttributes)b[j]>=0&&(e=g.__webglCustomAttributes[j],c.bindBuffer(c.ARRAY_BUFFER,e.buffer),c.vertexAttribPointer(b[j],e.size,c.FLOAT,!1,0,0));b.color>=0&&(c.bindBuffer(c.ARRAY_BUFFER,g.__webglColorBuffer),c.vertexAttribPointer(b.color,3,c.FLOAT,!1,0,0));b.normal>=0&&(c.bindBuffer(c.ARRAY_BUFFER,g.__webglNormalBuffer),c.vertexAttribPointer(b.normal,3,c.FLOAT,
!1,0,0));b.tangent>=0&&(c.bindBuffer(c.ARRAY_BUFFER,g.__webglTangentBuffer),c.vertexAttribPointer(b.tangent,4,c.FLOAT,!1,0,0));b.uv>=0&&(g.__webglUVBuffer?(c.bindBuffer(c.ARRAY_BUFFER,g.__webglUVBuffer),c.vertexAttribPointer(b.uv,2,c.FLOAT,!1,0,0),c.enableVertexAttribArray(b.uv)):c.disableVertexAttribArray(b.uv));b.uv2>=0&&(g.__webglUV2Buffer?(c.bindBuffer(c.ARRAY_BUFFER,g.__webglUV2Buffer),c.vertexAttribPointer(b.uv2,2,c.FLOAT,!1,0,0),c.enableVertexAttribArray(b.uv2)):c.disableVertexAttribArray(b.uv2));
h.skinning&&b.skinVertexA>=0&&b.skinVertexB>=0&&b.skinIndex>=0&&b.skinWeight>=0&&(c.bindBuffer(c.ARRAY_BUFFER,g.__webglSkinVertexABuffer),c.vertexAttribPointer(b.skinVertexA,4,c.FLOAT,!1,0,0),c.bindBuffer(c.ARRAY_BUFFER,g.__webglSkinVertexBBuffer),c.vertexAttribPointer(b.skinVertexB,4,c.FLOAT,!1,0,0),c.bindBuffer(c.ARRAY_BUFFER,g.__webglSkinIndicesBuffer),c.vertexAttribPointer(b.skinIndex,4,c.FLOAT,!1,0,0),c.bindBuffer(c.ARRAY_BUFFER,g.__webglSkinWeightsBuffer),c.vertexAttribPointer(b.skinWeight,
4,c.FLOAT,!1,0,0));i instanceof THREE.Mesh?(h.wireframe?(c.lineWidth(h.wireframeLinewidth),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,g.__webglLineBuffer),c.drawElements(c.LINES,g.__webglLineCount,c.UNSIGNED_SHORT,0)):(c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,g.__webglFaceBuffer),c.drawElements(c.TRIANGLES,g.__webglFaceCount,c.UNSIGNED_SHORT,0)),R.data.vertices+=g.__webglFaceCount,R.data.faces+=g.__webglFaceCount/3,R.data.drawCalls++):i instanceof THREE.Line?(i=i.type==THREE.LineStrip?c.LINE_STRIP:c.LINES,c.lineWidth(h.linewidth),
c.drawArrays(i,0,g.__webglLineCount),R.data.drawCalls++):i instanceof THREE.ParticleSystem?(c.drawArrays(c.POINTS,0,g.__webglParticleCount),R.data.drawCalls++):i instanceof THREE.Ribbon&&(c.drawArrays(c.TRIANGLE_STRIP,0,g.__webglVertexCount),R.data.drawCalls++)}}function h(b,e,d){if(!b.__webglVertexBuffer)b.__webglVertexBuffer=c.createBuffer();if(!b.__webglNormalBuffer)b.__webglNormalBuffer=c.createBuffer();b.hasPos&&(c.bindBuffer(c.ARRAY_BUFFER,b.__webglVertexBuffer),c.bufferData(c.ARRAY_BUFFER,
b.positionArray,c.DYNAMIC_DRAW),c.enableVertexAttribArray(e.attributes.position),c.vertexAttribPointer(e.attributes.position,3,c.FLOAT,!1,0,0));if(b.hasNormal){c.bindBuffer(c.ARRAY_BUFFER,b.__webglNormalBuffer);if(d==THREE.FlatShading){var f,h,g,i,j,k,o,r,p,n,q=b.count*3;for(n=0;n<q;n+=9)d=b.normalArray,f=d[n],h=d[n+1],g=d[n+2],i=d[n+3],k=d[n+4],r=d[n+5],j=d[n+6],o=d[n+7],p=d[n+8],f=(f+i+j)/3,h=(h+k+o)/3,g=(g+r+p)/3,d[n]=f,d[n+1]=h,d[n+2]=g,d[n+3]=f,d[n+4]=h,d[n+5]=g,d[n+6]=f,d[n+7]=h,d[n+8]=g}c.bufferData(c.ARRAY_BUFFER,
b.normalArray,c.DYNAMIC_DRAW);c.enableVertexAttribArray(e.attributes.normal);c.vertexAttribPointer(e.attributes.normal,3,c.FLOAT,!1,0,0)}c.drawArrays(c.TRIANGLES,0,b.count);b.count=0}function i(b){if(J!=b.doubleSided)b.doubleSided?c.disable(c.CULL_FACE):c.enable(c.CULL_FACE),J=b.doubleSided;if(la!=b.flipSided)b.flipSided?c.frontFace(c.CW):c.frontFace(c.CCW),la=b.flipSided}function g(b){L!=b&&(b?c.enable(c.DEPTH_TEST):c.disable(c.DEPTH_TEST),L=b)}function j(b,e,d){G!=b&&(b?c.enable(c.POLYGON_OFFSET_FILL):
c.disable(c.POLYGON_OFFSET_FILL),G=b);if(b&&(_oldPolygonOffsetFactor!=e||_oldPolygonOffsetUnits!=d))c.polygonOffset(e,d),_oldPolygonOffsetFactor=e,_oldPolygonOffsetUnits=d}function k(b){_frustum[0].set(b.n41-b.n11,b.n42-b.n12,b.n43-b.n13,b.n44-b.n14);_frustum[1].set(b.n41+b.n11,b.n42+b.n12,b.n43+b.n13,b.n44+b.n14);_frustum[2].set(b.n41+b.n21,b.n42+b.n22,b.n43+b.n23,b.n44+b.n24);_frustum[3].set(b.n41-b.n21,b.n42-b.n22,b.n43-b.n23,b.n44-b.n24);_frustum[4].set(b.n41-b.n31,b.n42-b.n32,b.n43-b.n33,b.n44-
b.n34);_frustum[5].set(b.n41+b.n31,b.n42+b.n32,b.n43+b.n33,b.n44+b.n34);for(var c,b=0;b<6;b++)c=_frustum[b],c.divideScalar(Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z))}function o(b){for(var c=b.matrixWorld,e=-b.geometry.boundingSphere.radius*Math.max(b.scale.x,Math.max(b.scale.y,b.scale.z)),d=0;d<6;d++)if(b=_frustum[d].x*c.n14+_frustum[d].y*c.n24+_frustum[d].z*c.n34+_frustum[d].w,b<=e)return!1;return!0}function p(b,c){b.list[b.count]=c;b.count+=1}function n(b){var c,e,d=b.object,f=b.opaque,h=b.transparent;
h.count=0;b=f.count=0;for(c=d.materials.length;b<c;b++)e=d.materials[b],e.transparent?p(h,e):p(f,e)}function q(b){var c,e,d,f,h=b.object,g=b.buffer,i=b.opaque,j=b.transparent;j.count=0;b=i.count=0;for(d=h.materials.length;b<d;b++)if(c=h.materials[b],c instanceof THREE.MeshFaceMaterial){c=0;for(e=g.materials.length;c<e;c++)(f=g.materials[c])&&(f.transparent?p(j,f):p(i,f))}else(f=c)&&(f.transparent?p(j,f):p(i,f))}function w(b,c){return c.z-b.z}function y(b){c.enable(c.POLYGON_OFFSET_FILL);c.polygonOffset(0.1,
1);c.enable(c.STENCIL_TEST);c.enable(c.DEPTH_TEST);c.depthMask(!1);c.colorMask(!1,!1,!1,!1);c.stencilFunc(c.ALWAYS,1,255);c.stencilOpSeparate(c.BACK,c.KEEP,c.INCR,c.KEEP);c.stencilOpSeparate(c.FRONT,c.KEEP,c.DECR,c.KEEP);var e,d=b.lights.length,f,h=b.lights,g=[],i,j,k,o,r,n=b.__webglShadowVolumes.length;for(e=0;e<d;e++)if(f=b.lights[e],f instanceof THREE.DirectionalLight&&f.castShadow){g[0]=-f.position.x;g[1]=-f.position.y;g[2]=-f.position.z;for(r=0;r<n;r++)f=b.__webglShadowVolumes[r].object,i=b.__webglShadowVolumes[r].buffer,
j=f.materials[0],j.program||R.initMaterial(j,h,void 0,f),j=j.program,k=j.uniforms,o=j.attributes,S!==j&&(c.useProgram(j),S=j,c.uniformMatrix4fv(k.projectionMatrix,!1,_projectionMatrixArray),c.uniformMatrix4fv(k.viewMatrix,!1,_viewMatrixArray),c.uniform3fv(k.directionalLightDirection,g)),f.matrixWorld.flattenToArray(f._objectMatrixArray),c.uniformMatrix4fv(k.objectMatrix,!1,f._objectMatrixArray),c.bindBuffer(c.ARRAY_BUFFER,i.__webglVertexBuffer),c.vertexAttribPointer(o.position,3,c.FLOAT,!1,0,0),c.bindBuffer(c.ARRAY_BUFFER,
i.__webglNormalBuffer),c.vertexAttribPointer(o.normal,3,c.FLOAT,!1,0,0),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,i.__webglFaceBuffer),c.cullFace(c.FRONT),c.drawElements(c.TRIANGLES,i.__webglFaceCount,c.UNSIGNED_SHORT,0),c.cullFace(c.BACK),c.drawElements(c.TRIANGLES,i.__webglFaceCount,c.UNSIGNED_SHORT,0)}c.disable(c.POLYGON_OFFSET_FILL);c.colorMask(!0,!0,!0,!0);c.stencilFunc(c.NOTEQUAL,0,255);c.stencilOp(c.KEEP,c.KEEP,c.KEEP);c.disable(c.DEPTH_TEST);E=-1;S=u.program;c.useProgram(u.program);c.uniformMatrix4fv(u.projectionLocation,
!1,_projectionMatrixArray);c.uniform1f(u.darknessLocation,u.darkness);c.bindBuffer(c.ARRAY_BUFFER,u.vertexBuffer);c.vertexAttribPointer(u.vertexLocation,3,c.FLOAT,!1,0,0);c.enableVertexAttribArray(u.vertexLocation);c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA);c.blendEquation(c.FUNC_ADD);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,u.elementBuffer);c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0);c.disable(c.STENCIL_TEST);c.enable(c.DEPTH_TEST);c.depthMask(Q)}function D(b,e){var d,f,h;d=_sprite.attributes;var g=
_sprite.uniforms,i=_viewportHeight/_viewportWidth,j,k=[],o=_viewportWidth*0.5,r=_viewportHeight*0.5,n=!0;c.useProgram(_sprite.program);S=_sprite.program;E=-1;ra||(c.enableVertexAttribArray(_sprite.attributes.position),c.enableVertexAttribArray(_sprite.attributes.uv),ra=!0);c.disable(c.CULL_FACE);c.enable(c.BLEND);c.depthMask(!0);c.bindBuffer(c.ARRAY_BUFFER,_sprite.vertexBuffer);c.vertexAttribPointer(d.position,2,c.FLOAT,!1,16,0);c.vertexAttribPointer(d.uv,2,c.FLOAT,!1,16,8);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,
_sprite.elementBuffer);c.uniformMatrix4fv(g.projectionMatrix,!1,_projectionMatrixArray);c.activeTexture(c.TEXTURE0);c.uniform1i(g.map,0);d=0;for(f=b.__webglSprites.length;d<f;d++)h=b.__webglSprites[d],h.useScreenCoordinates?h.z=-h.position.z:(h._modelViewMatrix.multiplyToArray(e.matrixWorldInverse,h.matrixWorld,h._modelViewMatrixArray),h.z=-h._modelViewMatrix.n34);b.__webglSprites.sort(w);d=0;for(f=b.__webglSprites.length;d<f;d++)h=b.__webglSprites[d],h.material===void 0&&h.map&&h.map.image&&h.map.image.width&&
(h.useScreenCoordinates?(c.uniform1i(g.useScreenCoordinates,1),c.uniform3f(g.screenPosition,(h.position.x-o)/o,(r-h.position.y)/r,Math.max(0,Math.min(1,h.position.z)))):(c.uniform1i(g.useScreenCoordinates,0),c.uniform1i(g.affectedByDistance,h.affectedByDistance?1:0),c.uniformMatrix4fv(g.modelViewMatrix,!1,h._modelViewMatrixArray)),j=h.map.image.width/(h.scaleByViewport?_viewportHeight:1),k[0]=j*i*h.scale.x,k[1]=j*h.scale.y,c.uniform2f(g.uvScale,h.uvScale.x,h.uvScale.y),c.uniform2f(g.uvOffset,h.uvOffset.x,
h.uvOffset.y),c.uniform2f(g.alignment,h.alignment.x,h.alignment.y),c.uniform1f(g.opacity,h.opacity),c.uniform1f(g.rotation,h.rotation),c.uniform2fv(g.scale,k),h.mergeWith3D&&!n?(c.enable(c.DEPTH_TEST),n=!0):!h.mergeWith3D&&n&&(c.disable(c.DEPTH_TEST),n=!1),v(h.blending),B(h.map,0),c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0));c.enable(c.CULL_FACE);c.enable(c.DEPTH_TEST);c.depthMask(Q)}function z(b,e){var d,f,h=b.__webglLensFlares.length,g,i,j,k=new THREE.Vector3,o=_viewportHeight/_viewportWidth,
r=_viewportWidth*0.5,n=_viewportHeight*0.5,p=16/_viewportHeight,q=[p*o,p],w=[1,1,0],u=[1,1],y=t.uniforms;d=t.attributes;c.useProgram(t.program);S=t.program;E=-1;pa||(c.enableVertexAttribArray(t.attributes.vertex),c.enableVertexAttribArray(t.attributes.uv),pa=!0);c.uniform1i(y.occlusionMap,0);c.uniform1i(y.map,1);c.bindBuffer(c.ARRAY_BUFFER,t.vertexBuffer);c.vertexAttribPointer(d.vertex,2,c.FLOAT,!1,16,0);c.vertexAttribPointer(d.uv,2,c.FLOAT,!1,16,8);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,t.elementBuffer);
c.disable(c.CULL_FACE);c.depthMask(!1);c.activeTexture(c.TEXTURE0);c.bindTexture(c.TEXTURE_2D,t.occlusionTexture);c.activeTexture(c.TEXTURE1);for(f=0;f<h;f++)if(d=b.__webglLensFlares[f].object,k.set(d.matrixWorld.n14,d.matrixWorld.n24,d.matrixWorld.n34),e.matrixWorldInverse.multiplyVector3(k),e.projectionMatrix.multiplyVector3(k),w[0]=k.x,w[1]=k.y,w[2]=k.z,u[0]=w[0]*r+r,u[1]=w[1]*n+n,t.hasVertexTexture||u[0]>0&&u[0]<_viewportWidth&&u[1]>0&&u[1]<_viewportHeight){c.bindTexture(c.TEXTURE_2D,t.tempTexture);
c.copyTexImage2D(c.TEXTURE_2D,0,c.RGB,u[0]-8,u[1]-8,16,16,0);c.uniform1i(y.renderType,0);c.uniform2fv(y.scale,q);c.uniform3fv(y.screenPosition,w);c.disable(c.BLEND);c.enable(c.DEPTH_TEST);c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0);c.bindTexture(c.TEXTURE_2D,t.occlusionTexture);c.copyTexImage2D(c.TEXTURE_2D,0,c.RGBA,u[0]-8,u[1]-8,16,16,0);c.uniform1i(y.renderType,1);c.disable(c.DEPTH_TEST);c.bindTexture(c.TEXTURE_2D,t.tempTexture);c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0);d.positionScreen.x=
w[0];d.positionScreen.y=w[1];d.positionScreen.z=w[2];d.customUpdateCallback?d.customUpdateCallback(d):d.updateLensFlares();c.uniform1i(y.renderType,2);c.enable(c.BLEND);g=0;for(i=d.lensFlares.length;g<i;g++)if(j=d.lensFlares[g],j.opacity>0.001&&j.scale>0.001)w[0]=j.x,w[1]=j.y,w[2]=j.z,p=j.size*j.scale/_viewportHeight,q[0]=p*o,q[1]=p,c.uniform3fv(y.screenPosition,w),c.uniform2fv(y.scale,q),c.uniform1f(y.rotation,j.rotation),c.uniform1f(y.opacity,j.opacity),v(j.blending),B(j.texture,1),c.drawElements(c.TRIANGLES,
6,c.UNSIGNED_SHORT,0)}c.enable(c.CULL_FACE);c.enable(c.DEPTH_TEST);c.depthMask(Q)}function C(b,c){b._modelViewMatrix.multiplyToArray(c.matrixWorldInverse,b.matrixWorld,b._modelViewMatrixArray);THREE.Matrix4.makeInvert3x3(b._modelViewMatrix).transposeIntoArray(b._normalMatrixArray)}function ga(b){var d,f,h,g;if(b instanceof THREE.Mesh){f=b.geometry;for(d in f.geometryGroups){h=f.geometryGroups[d];a:{for(var i=g=void 0,j=void 0,k=void 0,o=void 0,o=h.__materials,i=0,j=o.length;i<j;i++)if(k=o[i],k.attributes)for(g in k.attributes)if(k.attributes[g].needsUpdate){g=
!0;break a}g=!1}if(f.__dirtyVertices||f.__dirtyMorphTargets||f.__dirtyElements||f.__dirtyUvs||f.__dirtyNormals||f.__dirtyColors||f.__dirtyTangents||g)if(g=h,i=b,j=c.DYNAMIC_DRAW,g.__inittedArrays){var n=o=k=void 0,r=void 0,p=n=void 0,q=void 0,w=void 0,t=void 0,u=void 0,v=void 0,y=void 0,C=void 0,D=void 0,z=void 0,I=void 0,H=void 0,E=void 0,s=r=t=r=w=q=void 0,A=void 0,m=A=s=q=void 0,F=void 0,K=m=A=s=n=n=p=t=r=m=A=s=F=m=A=s=F=m=A=s=void 0,B=0,G=0,R=0,U=0,J=0,L=0,T=0,M=0,ca=0,x=0,da=0,A=s=0,ea=g.__vertexArray,
$=g.__uvArray,aa=g.__uv2Array,O=g.__normalArray,V=g.__tangentArray,fa=g.__colorArray,W=g.__skinVertexAArray,X=g.__skinVertexBArray,Y=g.__skinIndexArray,Z=g.__skinWeightArray,ga=g.__morphTargetsArrays,S=g.__webglCustomAttributes,m=void 0,N=g.__faceArray,Q=g.__lineArray,la=g.__needsSmoothNormals,v=g.__vertexColorType,u=g.__uvType,y=g.__normalType,ia=i.geometry,ka=ia.__dirtyVertices,ma=ia.__dirtyElements,ha=ia.__dirtyUvs,na=ia.__dirtyNormals,pa=ia.__dirtyTangents,ra=ia.__dirtyColors,Ba=ia.__dirtyMorphTargets,
va=ia.vertices,Da=g.faces,Ga=ia.faces,Ea=ia.faceVertexUvs[0],Fa=ia.faceVertexUvs[1],wa=ia.skinVerticesA,xa=ia.skinVerticesB,ya=ia.skinIndices,sa=ia.skinWeights,ta=i instanceof THREE.ShadowVolume?ia.edgeFaces:void 0,qa=ia.morphTargets;if(S)for(K in S)S[K].offset=0,S[K].offsetSrc=0;k=0;for(o=Da.length;k<o;k++)if(n=Da[k],r=Ga[n],Ea&&(C=Ea[n]),Fa&&(D=Fa[n]),n=r.vertexNormals,p=r.normal,q=r.vertexColors,w=r.color,t=r.vertexTangents,r instanceof THREE.Face3){if(ka)z=va[r.a].position,I=va[r.b].position,
H=va[r.c].position,ea[G]=z.x,ea[G+1]=z.y,ea[G+2]=z.z,ea[G+3]=I.x,ea[G+4]=I.y,ea[G+5]=I.z,ea[G+6]=H.x,ea[G+7]=H.y,ea[G+8]=H.z,G+=9;if(S)for(K in S)if(m=S[K],m.__original.needsUpdate)s=m.offset,A=m.offsetSrc,m.size===1?(m.boundTo===void 0||m.boundTo==="vertices"?(m.array[s+0]=m.value[r.a],m.array[s+1]=m.value[r.b],m.array[s+2]=m.value[r.c]):m.boundTo==="faces"?(m.array[s+0]=m.value[A],m.array[s+1]=m.value[A],m.array[s+2]=m.value[A],m.offsetSrc++):m.boundTo==="faceVertices"&&(m.array[s+0]=m.value[A+
0],m.array[s+1]=m.value[A+1],m.array[s+2]=m.value[A+2],m.offsetSrc+=3),m.offset+=3):(m.boundTo===void 0||m.boundTo==="vertices"?(z=m.value[r.a],I=m.value[r.b],H=m.value[r.c]):m.boundTo==="faces"?(z=m.value[A],I=m.value[A],H=m.value[A],m.offsetSrc++):m.boundTo==="faceVertices"&&(z=m.value[A+0],I=m.value[A+1],H=m.value[A+2],m.offsetSrc+=3),m.size===2?(m.array[s+0]=z.x,m.array[s+1]=z.y,m.array[s+2]=I.x,m.array[s+3]=I.y,m.array[s+4]=H.x,m.array[s+5]=H.y,m.offset+=6):m.size===3?(m.type==="c"?(m.array[s+
0]=z.r,m.array[s+1]=z.g,m.array[s+2]=z.b,m.array[s+3]=I.r,m.array[s+4]=I.g,m.array[s+5]=I.b,m.array[s+6]=H.r,m.array[s+7]=H.g,m.array[s+8]=H.b):(m.array[s+0]=z.x,m.array[s+1]=z.y,m.array[s+2]=z.z,m.array[s+3]=I.x,m.array[s+4]=I.y,m.array[s+5]=I.z,m.array[s+6]=H.x,m.array[s+7]=H.y,m.array[s+8]=H.z),m.offset+=9):(m.array[s+0]=z.x,m.array[s+1]=z.y,m.array[s+2]=z.z,m.array[s+3]=z.w,m.array[s+4]=I.x,m.array[s+5]=I.y,m.array[s+6]=I.z,m.array[s+7]=I.w,m.array[s+8]=H.x,m.array[s+9]=H.y,m.array[s+10]=H.z,
m.array[s+11]=H.w,m.offset+=12));if(Ba){s=0;for(A=qa.length;s<A;s++)z=qa[s].vertices[r.a].position,I=qa[s].vertices[r.b].position,H=qa[s].vertices[r.c].position,m=ga[s],m[da+0]=z.x,m[da+1]=z.y,m[da+2]=z.z,m[da+3]=I.x,m[da+4]=I.y,m[da+5]=I.z,m[da+6]=H.x,m[da+7]=H.y,m[da+8]=H.z;da+=9}if(sa.length)s=sa[r.a],A=sa[r.b],m=sa[r.c],Z[x]=s.x,Z[x+1]=s.y,Z[x+2]=s.z,Z[x+3]=s.w,Z[x+4]=A.x,Z[x+5]=A.y,Z[x+6]=A.z,Z[x+7]=A.w,Z[x+8]=m.x,Z[x+9]=m.y,Z[x+10]=m.z,Z[x+11]=m.w,s=ya[r.a],A=ya[r.b],m=ya[r.c],Y[x]=s.x,Y[x+
1]=s.y,Y[x+2]=s.z,Y[x+3]=s.w,Y[x+4]=A.x,Y[x+5]=A.y,Y[x+6]=A.z,Y[x+7]=A.w,Y[x+8]=m.x,Y[x+9]=m.y,Y[x+10]=m.z,Y[x+11]=m.w,s=wa[r.a],A=wa[r.b],m=wa[r.c],W[x]=s.x,W[x+1]=s.y,W[x+2]=s.z,W[x+3]=1,W[x+4]=A.x,W[x+5]=A.y,W[x+6]=A.z,W[x+7]=1,W[x+8]=m.x,W[x+9]=m.y,W[x+10]=m.z,W[x+11]=1,s=xa[r.a],A=xa[r.b],m=xa[r.c],X[x]=s.x,X[x+1]=s.y,X[x+2]=s.z,X[x+3]=1,X[x+4]=A.x,X[x+5]=A.y,X[x+6]=A.z,X[x+7]=1,X[x+8]=m.x,X[x+9]=m.y,X[x+10]=m.z,X[x+11]=1,x+=12;if(ra&&v)q.length==3&&v==THREE.VertexColors?(r=q[0],s=q[1],A=q[2]):
A=s=r=w,fa[ca]=r.r,fa[ca+1]=r.g,fa[ca+2]=r.b,fa[ca+3]=s.r,fa[ca+4]=s.g,fa[ca+5]=s.b,fa[ca+6]=A.r,fa[ca+7]=A.g,fa[ca+8]=A.b,ca+=9;if(pa&&ia.hasTangents)q=t[0],w=t[1],r=t[2],V[T]=q.x,V[T+1]=q.y,V[T+2]=q.z,V[T+3]=q.w,V[T+4]=w.x,V[T+5]=w.y,V[T+6]=w.z,V[T+7]=w.w,V[T+8]=r.x,V[T+9]=r.y,V[T+10]=r.z,V[T+11]=r.w,T+=12;if(na&&y)if(n.length==3&&la)for(t=0;t<3;t++)p=n[t],O[L]=p.x,O[L+1]=p.y,O[L+2]=p.z,L+=3;else for(t=0;t<3;t++)O[L]=p.x,O[L+1]=p.y,O[L+2]=p.z,L+=3;if(ha&&C!==void 0&&u)for(t=0;t<3;t++)n=C[t],$[R]=
n.u,$[R+1]=n.v,R+=2;if(ha&&D!==void 0&&u)for(t=0;t<3;t++)n=D[t],aa[U]=n.u,aa[U+1]=n.v,U+=2;ma&&(N[J]=B,N[J+1]=B+1,N[J+2]=B+2,J+=3,Q[M]=B,Q[M+1]=B+1,Q[M+2]=B,Q[M+3]=B+2,Q[M+4]=B+1,Q[M+5]=B+2,M+=6,B+=3)}else if(r instanceof THREE.Face4){if(ka)z=va[r.a].position,I=va[r.b].position,H=va[r.c].position,E=va[r.d].position,ea[G]=z.x,ea[G+1]=z.y,ea[G+2]=z.z,ea[G+3]=I.x,ea[G+4]=I.y,ea[G+5]=I.z,ea[G+6]=H.x,ea[G+7]=H.y,ea[G+8]=H.z,ea[G+9]=E.x,ea[G+10]=E.y,ea[G+11]=E.z,G+=12;if(S)for(K in S)if(m=S[K],m.__original.needsUpdate)s=
m.offset,A=m.offsetSrc,m.size===1?(m.boundTo===void 0||m.boundTo==="vertices"?(m.array[s+0]=m.value[r.a],m.array[s+1]=m.value[r.b],m.array[s+2]=m.value[r.c],m.array[s+3]=m.value[r.d]):m.boundTo==="faces"?(m.array[s+0]=m.value[A],m.array[s+1]=m.value[A],m.array[s+2]=m.value[A],m.array[s+3]=m.value[A],m.offsetSrc++):m.boundTo==="faceVertices"&&(m.array[s+0]=m.value[A+0],m.array[s+1]=m.value[A+1],m.array[s+2]=m.value[A+2],m.array[s+3]=m.value[A+3],m.offsetSrc+=4),m.offset+=4):(m.boundTo===void 0||m.boundTo===
"vertices"?(z=m.value[r.a],I=m.value[r.b],H=m.value[r.c],E=m.value[r.d]):m.boundTo==="faces"?(z=m.value[A],I=m.value[A],H=m.value[A],E=m.value[A],m.offsetSrc++):m.boundTo==="faceVertices"&&(z=m.value[A+0],I=m.value[A+1],H=m.value[A+2],E=m.value[A+3],m.offsetSrc+=4),m.size===2?(m.array[s+0]=z.x,m.array[s+1]=z.y,m.array[s+2]=I.x,m.array[s+3]=I.y,m.array[s+4]=H.x,m.array[s+5]=H.y,m.array[s+6]=E.x,m.array[s+7]=E.y,m.offset+=8):m.size===3?(m.type==="c"?(m.array[s+0]=z.r,m.array[s+1]=z.g,m.array[s+2]=z.b,
m.array[s+3]=I.r,m.array[s+4]=I.g,m.array[s+5]=I.b,m.array[s+6]=H.r,m.array[s+7]=H.g,m.array[s+8]=H.b,m.array[s+9]=E.r,m.array[s+10]=E.g,m.array[s+11]=E.b):(m.array[s+0]=z.x,m.array[s+1]=z.y,m.array[s+2]=z.z,m.array[s+3]=I.x,m.array[s+4]=I.y,m.array[s+5]=I.z,m.array[s+6]=H.x,m.array[s+7]=H.y,m.array[s+8]=H.z,m.array[s+9]=E.x,m.array[s+10]=E.y,m.array[s+11]=E.z),m.offset+=12):(m.array[s+0]=z.x,m.array[s+1]=z.y,m.array[s+2]=z.z,m.array[s+3]=z.w,m.array[s+4]=I.x,m.array[s+5]=I.y,m.array[s+6]=I.z,m.array[s+
7]=I.w,m.array[s+8]=H.x,m.array[s+9]=H.y,m.array[s+10]=H.z,m.array[s+11]=H.w,m.array[s+12]=E.x,m.array[s+13]=E.y,m.array[s+14]=E.z,m.array[s+15]=E.w,m.offset+=16));if(Ba){s=0;for(A=qa.length;s<A;s++)z=qa[s].vertices[r.a].position,I=qa[s].vertices[r.b].position,H=qa[s].vertices[r.c].position,E=qa[s].vertices[r.d].position,m=ga[s],m[da+0]=z.x,m[da+1]=z.y,m[da+2]=z.z,m[da+3]=I.x,m[da+4]=I.y,m[da+5]=I.z,m[da+6]=H.x,m[da+7]=H.y,m[da+8]=H.z,m[da+9]=E.x,m[da+10]=E.y,m[da+11]=E.z;da+=12}if(sa.length)s=sa[r.a],
A=sa[r.b],m=sa[r.c],F=sa[r.d],Z[x]=s.x,Z[x+1]=s.y,Z[x+2]=s.z,Z[x+3]=s.w,Z[x+4]=A.x,Z[x+5]=A.y,Z[x+6]=A.z,Z[x+7]=A.w,Z[x+8]=m.x,Z[x+9]=m.y,Z[x+10]=m.z,Z[x+11]=m.w,Z[x+12]=F.x,Z[x+13]=F.y,Z[x+14]=F.z,Z[x+15]=F.w,s=ya[r.a],A=ya[r.b],m=ya[r.c],F=ya[r.d],Y[x]=s.x,Y[x+1]=s.y,Y[x+2]=s.z,Y[x+3]=s.w,Y[x+4]=A.x,Y[x+5]=A.y,Y[x+6]=A.z,Y[x+7]=A.w,Y[x+8]=m.x,Y[x+9]=m.y,Y[x+10]=m.z,Y[x+11]=m.w,Y[x+12]=F.x,Y[x+13]=F.y,Y[x+14]=F.z,Y[x+15]=F.w,s=wa[r.a],A=wa[r.b],m=wa[r.c],F=wa[r.d],W[x]=s.x,W[x+1]=s.y,W[x+2]=s.z,
W[x+3]=1,W[x+4]=A.x,W[x+5]=A.y,W[x+6]=A.z,W[x+7]=1,W[x+8]=m.x,W[x+9]=m.y,W[x+10]=m.z,W[x+11]=1,W[x+12]=F.x,W[x+13]=F.y,W[x+14]=F.z,W[x+15]=1,s=xa[r.a],A=xa[r.b],m=xa[r.c],r=xa[r.d],X[x]=s.x,X[x+1]=s.y,X[x+2]=s.z,X[x+3]=1,X[x+4]=A.x,X[x+5]=A.y,X[x+6]=A.z,X[x+7]=1,X[x+8]=m.x,X[x+9]=m.y,X[x+10]=m.z,X[x+11]=1,X[x+12]=r.x,X[x+13]=r.y,X[x+14]=r.z,X[x+15]=1,x+=16;if(ra&&v)q.length==4&&v==THREE.VertexColors?(r=q[0],s=q[1],A=q[2],q=q[3]):q=A=s=r=w,fa[ca]=r.r,fa[ca+1]=r.g,fa[ca+2]=r.b,fa[ca+3]=s.r,fa[ca+4]=
s.g,fa[ca+5]=s.b,fa[ca+6]=A.r,fa[ca+7]=A.g,fa[ca+8]=A.b,fa[ca+9]=q.r,fa[ca+10]=q.g,fa[ca+11]=q.b,ca+=12;if(pa&&ia.hasTangents)q=t[0],w=t[1],r=t[2],t=t[3],V[T]=q.x,V[T+1]=q.y,V[T+2]=q.z,V[T+3]=q.w,V[T+4]=w.x,V[T+5]=w.y,V[T+6]=w.z,V[T+7]=w.w,V[T+8]=r.x,V[T+9]=r.y,V[T+10]=r.z,V[T+11]=r.w,V[T+12]=t.x,V[T+13]=t.y,V[T+14]=t.z,V[T+15]=t.w,T+=16;if(na&&y)if(n.length==4&&la)for(t=0;t<4;t++)p=n[t],O[L]=p.x,O[L+1]=p.y,O[L+2]=p.z,L+=3;else for(t=0;t<4;t++)O[L]=p.x,O[L+1]=p.y,O[L+2]=p.z,L+=3;if(ha&&C!==void 0&&
u)for(t=0;t<4;t++)n=C[t],$[R]=n.u,$[R+1]=n.v,R+=2;if(ha&&D!==void 0&&u)for(t=0;t<4;t++)n=D[t],aa[U]=n.u,aa[U+1]=n.v,U+=2;ma&&(N[J]=B,N[J+1]=B+1,N[J+2]=B+3,N[J+3]=B+1,N[J+4]=B+2,N[J+5]=B+3,J+=6,Q[M]=B,Q[M+1]=B+1,Q[M+2]=B,Q[M+3]=B+3,Q[M+4]=B+1,Q[M+5]=B+2,Q[M+6]=B+2,Q[M+7]=B+3,M+=8,B+=4)}if(ta){k=0;for(o=ta.length;k<o;k++)N[J]=ta[k].a,N[J+1]=ta[k].b,N[J+2]=ta[k].c,N[J+3]=ta[k].a,N[J+4]=ta[k].c,N[J+5]=ta[k].d,J+=6}ka&&(c.bindBuffer(c.ARRAY_BUFFER,g.__webglVertexBuffer),c.bufferData(c.ARRAY_BUFFER,ea,
j));if(S)for(K in S)m=S[K],m.__original.needsUpdate&&(c.bindBuffer(c.ARRAY_BUFFER,m.buffer),c.bufferData(c.ARRAY_BUFFER,m.array,j));if(Ba){s=0;for(A=qa.length;s<A;s++)c.bindBuffer(c.ARRAY_BUFFER,g.__webglMorphTargetsBuffers[s]),c.bufferData(c.ARRAY_BUFFER,ga[s],j)}ra&&ca>0&&(c.bindBuffer(c.ARRAY_BUFFER,g.__webglColorBuffer),c.bufferData(c.ARRAY_BUFFER,fa,j));na&&(c.bindBuffer(c.ARRAY_BUFFER,g.__webglNormalBuffer),c.bufferData(c.ARRAY_BUFFER,O,j));pa&&ia.hasTangents&&(c.bindBuffer(c.ARRAY_BUFFER,g.__webglTangentBuffer),
c.bufferData(c.ARRAY_BUFFER,V,j));ha&&R>0&&(c.bindBuffer(c.ARRAY_BUFFER,g.__webglUVBuffer),c.bufferData(c.ARRAY_BUFFER,$,j));ha&&U>0&&(c.bindBuffer(c.ARRAY_BUFFER,g.__webglUV2Buffer),c.bufferData(c.ARRAY_BUFFER,aa,j));ma&&(c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,g.__webglFaceBuffer),c.bufferData(c.ELEMENT_ARRAY_BUFFER,N,j),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,g.__webglLineBuffer),c.bufferData(c.ELEMENT_ARRAY_BUFFER,Q,j));x>0&&(c.bindBuffer(c.ARRAY_BUFFER,g.__webglSkinVertexABuffer),c.bufferData(c.ARRAY_BUFFER,
W,j),c.bindBuffer(c.ARRAY_BUFFER,g.__webglSkinVertexBBuffer),c.bufferData(c.ARRAY_BUFFER,X,j),c.bindBuffer(c.ARRAY_BUFFER,g.__webglSkinIndicesBuffer),c.bufferData(c.ARRAY_BUFFER,Y,j),c.bindBuffer(c.ARRAY_BUFFER,g.__webglSkinWeightsBuffer),c.bufferData(c.ARRAY_BUFFER,Z,j));i.dynamic||(delete g.__inittedArrays,delete g.__colorArray,delete g.__normalArray,delete g.__tangentArray,delete g.__uvArray,delete g.__uv2Array,delete g.__faceArray,delete g.__vertexArray,delete g.__lineArray,delete g.__skinVertexAArray,
delete g.__skinVertexBArray,delete g.__skinIndexArray,delete g.__skinWeightArray)}}f.__dirtyVertices=!1;f.__dirtyMorphTargets=!1;f.__dirtyElements=!1;f.__dirtyUvs=!1;f.__dirtyNormals=!1;f.__dirtyTangents=!1;f.__dirtyColors=!1;var ja;h=h.__materials;f=0;for(b=h.length;f<b;f++)if(d=h[f],d.attributes)for(ja in d.attributes)d.attributes[ja].needsUpdate=!1}else if(b instanceof THREE.Ribbon){f=b.geometry;if(f.__dirtyVertices||f.__dirtyColors){ja=f;b=c.DYNAMIC_DRAW;o=ja.vertices;h=ja.colors;u=o.length;g=
h.length;v=ja.__vertexArray;i=ja.__colorArray;y=ja.__dirtyColors;if(ja.__dirtyVertices){for(j=0;j<u;j++)k=o[j].position,d=j*3,v[d]=k.x,v[d+1]=k.y,v[d+2]=k.z;c.bindBuffer(c.ARRAY_BUFFER,ja.__webglVertexBuffer);c.bufferData(c.ARRAY_BUFFER,v,b)}if(y){for(j=0;j<g;j++)color=h[j],d=j*3,i[d]=color.r,i[d+1]=color.g,i[d+2]=color.b;c.bindBuffer(c.ARRAY_BUFFER,ja.__webglColorBuffer);c.bufferData(c.ARRAY_BUFFER,i,b)}}f.__dirtyVertices=!1;f.__dirtyColors=!1}else if(b instanceof THREE.Line){f=b.geometry;if(f.__dirtyVertices||
f.__dirtyColors){ja=f;b=c.DYNAMIC_DRAW;o=ja.vertices;h=ja.colors;u=o.length;g=h.length;v=ja.__vertexArray;i=ja.__colorArray;y=ja.__dirtyColors;if(ja.__dirtyVertices){for(j=0;j<u;j++)k=o[j].position,d=j*3,v[d]=k.x,v[d+1]=k.y,v[d+2]=k.z;c.bindBuffer(c.ARRAY_BUFFER,ja.__webglVertexBuffer);c.bufferData(c.ARRAY_BUFFER,v,b)}if(y){for(j=0;j<g;j++)color=h[j],d=j*3,i[d]=color.r,i[d+1]=color.g,i[d+2]=color.b;c.bindBuffer(c.ARRAY_BUFFER,ja.__webglColorBuffer);c.bufferData(c.ARRAY_BUFFER,i,b)}}f.__dirtyVertices=
!1;f.__dirtyColors=!1}else if(b instanceof THREE.ParticleSystem)f=b.geometry,(f.__dirtyVertices||f.__dirtyColors||b.sortParticles)&&e(f,c.DYNAMIC_DRAW,b),f.__dirtyVertices=!1,f.__dirtyColors=!1}function M(b,c){var d;for(d=b.length-1;d>=0;d--)b[d].object==c&&b.splice(d,1)}function O(b){function c(b){var f=[];d=0;for(e=b.length;d<e;d++)b[d]==void 0?f.push("undefined"):f.push(b[d].id);return f.join("_")}var d,e,f,g,h,i,j,k,r={},o=b.morphTargets!==void 0?b.morphTargets.length:0;b.geometryGroups={};f=
0;for(g=b.faces.length;f<g;f++)h=b.faces[f],i=h.materials,j=c(i),r[j]==void 0&&(r[j]={hash:j,counter:0}),k=r[j].hash+"_"+r[j].counter,b.geometryGroups[k]==void 0&&(b.geometryGroups[k]={faces:[],materials:i,vertices:0,numMorphTargets:o}),h=h instanceof THREE.Face3?3:4,b.geometryGroups[k].vertices+h>65535&&(r[j].counter+=1,k=r[j].hash+"_"+r[j].counter,b.geometryGroups[k]==void 0&&(b.geometryGroups[k]={faces:[],materials:i,vertices:0,numMorphTargets:o})),b.geometryGroups[k].faces.push(f),b.geometryGroups[k].vertices+=
h}function F(b,c,d){b.push({buffer:c,object:d,opaque:{list:[],count:0},transparent:{list:[],count:0}})}function v(b){if(b!=E){switch(b){case THREE.AdditiveBlending:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.SRC_ALPHA,c.ONE);break;case THREE.SubtractiveBlending:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ZERO,c.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ZERO,c.SRC_COLOR);break;default:c.blendEquationSeparate(c.FUNC_ADD,c.FUNC_ADD),c.blendFuncSeparate(c.SRC_ALPHA,
c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA)}E=b}}function $(b,d,e){(e.width&e.width-1)==0&&(e.height&e.height-1)==0?(c.texParameteri(b,c.TEXTURE_WRAP_S,U(d.wrapS)),c.texParameteri(b,c.TEXTURE_WRAP_T,U(d.wrapT)),c.texParameteri(b,c.TEXTURE_MAG_FILTER,U(d.magFilter)),c.texParameteri(b,c.TEXTURE_MIN_FILTER,U(d.minFilter)),c.generateMipmap(b)):(c.texParameteri(b,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE),c.texParameteri(b,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE),c.texParameteri(b,c.TEXTURE_MAG_FILTER,na(d.magFilter)),
c.texParameteri(b,c.TEXTURE_MIN_FILTER,na(d.minFilter)))}function B(b,d){if(b.needsUpdate)b.__webglInit?(c.bindTexture(c.TEXTURE_2D,b.__webglTexture),c.texSubImage2D(c.TEXTURE_2D,0,0,0,c.RGBA,c.UNSIGNED_BYTE,b.image)):(b.__webglTexture=c.createTexture(),c.bindTexture(c.TEXTURE_2D,b.__webglTexture),c.texImage2D(c.TEXTURE_2D,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,b.image),b.__webglInit=!0),$(c.TEXTURE_2D,b,b.image),c.bindTexture(c.TEXTURE_2D,null),b.needsUpdate=!1;c.activeTexture(c.TEXTURE0+d);c.bindTexture(c.TEXTURE_2D,
b.__webglTexture)}function aa(b){if(b&&!b.__webglFramebuffer){if(b.depthBuffer===void 0)b.depthBuffer=!0;if(b.stencilBuffer===void 0)b.stencilBuffer=!0;b.__webglFramebuffer=c.createFramebuffer();b.__webglRenderbuffer=c.createRenderbuffer();b.__webglTexture=c.createTexture();c.bindTexture(c.TEXTURE_2D,b.__webglTexture);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,U(b.wrapS));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,U(b.wrapT));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,U(b.magFilter));
c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,U(b.minFilter));c.texImage2D(c.TEXTURE_2D,0,U(b.format),b.width,b.height,0,U(b.format),U(b.type),null);c.bindRenderbuffer(c.RENDERBUFFER,b.__webglRenderbuffer);c.bindFramebuffer(c.FRAMEBUFFER,b.__webglFramebuffer);c.framebufferTexture2D(c.FRAMEBUFFER,c.COLOR_ATTACHMENT0,c.TEXTURE_2D,b.__webglTexture,0);b.depthBuffer&&!b.stencilBuffer?(c.renderbufferStorage(c.RENDERBUFFER,c.DEPTH_COMPONENT16,b.width,b.height),c.framebufferRenderbuffer(c.FRAMEBUFFER,
c.DEPTH_ATTACHMENT,c.RENDERBUFFER,b.__webglRenderbuffer)):b.depthBuffer&&b.stencilBuffer?(c.renderbufferStorage(c.RENDERBUFFER,c.DEPTH_STENCIL,b.width,b.height),c.framebufferRenderbuffer(c.FRAMEBUFFER,c.DEPTH_STENCIL_ATTACHMENT,c.RENDERBUFFER,b.__webglRenderbuffer)):c.renderbufferStorage(c.RENDERBUFFER,c.RGBA4,b.width,b.height);c.bindTexture(c.TEXTURE_2D,null);c.bindRenderbuffer(c.RENDERBUFFER,null);c.bindFramebuffer(c.FRAMEBUFFER,null)}var d,e;b?(d=b.__webglFramebuffer,e=b.width,b=b.height):(d=null,
e=_viewportWidth,b=_viewportHeight);d!=ka&&(c.bindFramebuffer(c.FRAMEBUFFER,d),c.viewport(_viewportX,_viewportY,e,b),ka=d)}function K(b,d){var e;b=="fragment"?e=c.createShader(c.FRAGMENT_SHADER):b=="vertex"&&(e=c.createShader(c.VERTEX_SHADER));c.shaderSource(e,d);c.compileShader(e);if(!c.getShaderParameter(e,c.COMPILE_STATUS))return console.error(c.getShaderInfoLog(e)),console.error(d),null;return e}function na(b){switch(b){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return c.NEAREST;
default:return c.LINEAR}}function U(b){switch(b){case THREE.RepeatWrapping:return c.REPEAT;case THREE.ClampToEdgeWrapping:return c.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return c.MIRRORED_REPEAT;case THREE.NearestFilter:return c.NEAREST;case THREE.NearestMipMapNearestFilter:return c.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return c.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return c.LINEAR;case THREE.LinearMipMapNearestFilter:return c.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return c.LINEAR_MIPMAP_LINEAR;
case THREE.ByteType:return c.BYTE;case THREE.UnsignedByteType:return c.UNSIGNED_BYTE;case THREE.ShortType:return c.SHORT;case THREE.UnsignedShortType:return c.UNSIGNED_SHORT;case THREE.IntType:return c.INT;case THREE.UnsignedShortType:return c.UNSIGNED_INT;case THREE.FloatType:return c.FLOAT;case THREE.AlphaFormat:return c.ALPHA;case THREE.RGBFormat:return c.RGB;case THREE.RGBAFormat:return c.RGBA;case THREE.LuminanceFormat:return c.LUMINANCE;case THREE.LuminanceAlphaFormat:return c.LUMINANCE_ALPHA}return 0}
var R=this,c,ha=[],S=null,ka=null,Q=!0,J=null,la=null,E=null,L=null,G=null;_oldPolygonOffsetUnits=_oldPolygonOffsetFactor=null;_cullEnabled=!0;_viewportHeight=_viewportWidth=_viewportY=_viewportX=0;_frustum=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4];_projScreenMatrix=new THREE.Matrix4;_projectionMatrixArray=new Float32Array(16);_viewMatrixArray=new Float32Array(16);_vector3=new THREE.Vector4;_lights={ambient:[0,0,0],directional:{length:0,
colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]}};b=b||{};_canvas=b.canvas!==void 0?b.canvas:document.createElement("canvas");_stencil=b.stencil!==void 0?b.stencil:!0;_antialias=b.antialias!==void 0?b.antialias:!1;_clearColor=b.clearColor!==void 0?new THREE.Color(b.clearColor):new THREE.Color(0);_clearAlpha=b.clearAlpha!==void 0?b.clearAlpha:0;this.data={vertices:0,faces:0,drawCalls:0};this.maxMorphTargets=8;this.domElement=_canvas;this.sortObjects=this.autoClear=!0;try{if(!(c=
_canvas.getContext("experimental-webgl",{antialias:_antialias,stencil:_stencil})))throw"Error creating WebGL context.";}catch(N){console.error(N)}console.log(navigator.userAgent+" | "+c.getParameter(c.VERSION)+" | "+c.getParameter(c.VENDOR)+" | "+c.getParameter(c.RENDERER)+" | "+c.getParameter(c.SHADING_LANGUAGE_VERSION));c.clearColor(0,0,0,1);c.clearDepth(1);c.enable(c.DEPTH_TEST);c.depthFunc(c.LEQUAL);c.frontFace(c.CCW);c.cullFace(c.BACK);c.enable(c.CULL_FACE);c.enable(c.BLEND);c.blendEquation(c.FUNC_ADD);
c.blendFunc(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA);c.clearColor(_clearColor.r,_clearColor.g,_clearColor.b,_clearAlpha);_cullEnabled=!0;this.context=c;var ma=c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0;if(_stencil){var u={};u.vertices=new Float32Array(12);u.faces=new Uint16Array(6);u.darkness=0.5;u.vertices[0]=-20;u.vertices[1]=-20;u.vertices[2]=-1;u.vertices[3]=20;u.vertices[4]=-20;u.vertices[5]=-1;u.vertices[6]=20;u.vertices[7]=20;u.vertices[8]=-1;u.vertices[9]=-20;u.vertices[10]=20;u.vertices[11]=
-1;u.faces[0]=0;u.faces[1]=1;u.faces[2]=2;u.faces[3]=0;u.faces[4]=2;u.faces[5]=3;u.vertexBuffer=c.createBuffer();u.elementBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,u.vertexBuffer);c.bufferData(c.ARRAY_BUFFER,u.vertices,c.STATIC_DRAW);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,u.elementBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,u.faces,c.STATIC_DRAW);u.program=c.createProgram();c.attachShader(u.program,K("fragment",THREE.ShaderLib.shadowPost.fragmentShader));c.attachShader(u.program,K("vertex",
THREE.ShaderLib.shadowPost.vertexShader));c.linkProgram(u.program);u.vertexLocation=c.getAttribLocation(u.program,"position");u.projectionLocation=c.getUniformLocation(u.program,"projectionMatrix");u.darknessLocation=c.getUniformLocation(u.program,"darkness")}var t={};t.vertices=new Float32Array(16);t.faces=new Uint16Array(6);b=0;t.vertices[b++]=-1;t.vertices[b++]=-1;t.vertices[b++]=0;t.vertices[b++]=0;t.vertices[b++]=1;t.vertices[b++]=-1;t.vertices[b++]=1;t.vertices[b++]=0;t.vertices[b++]=1;t.vertices[b++]=
1;t.vertices[b++]=1;t.vertices[b++]=1;t.vertices[b++]=-1;t.vertices[b++]=1;t.vertices[b++]=0;t.vertices[b++]=1;b=0;t.faces[b++]=0;t.faces[b++]=1;t.faces[b++]=2;t.faces[b++]=0;t.faces[b++]=2;t.faces[b++]=3;t.vertexBuffer=c.createBuffer();t.elementBuffer=c.createBuffer();t.tempTexture=c.createTexture();t.occlusionTexture=c.createTexture();c.bindBuffer(c.ARRAY_BUFFER,t.vertexBuffer);c.bufferData(c.ARRAY_BUFFER,t.vertices,c.STATIC_DRAW);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,t.elementBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,
t.faces,c.STATIC_DRAW);c.bindTexture(c.TEXTURE_2D,t.tempTexture);c.texImage2D(c.TEXTURE_2D,0,c.RGB,16,16,0,c.RGB,c.UNSIGNED_BYTE,null);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST);c.bindTexture(c.TEXTURE_2D,t.occlusionTexture);c.texImage2D(c.TEXTURE_2D,0,c.RGBA,16,16,0,c.RGBA,c.UNSIGNED_BYTE,null);
c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST);c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(t.hasVertexTexture=!1,t.program=c.createProgram(),c.attachShader(t.program,K("fragment",THREE.ShaderLib.lensFlare.fragmentShader)),c.attachShader(t.program,K("vertex",THREE.ShaderLib.lensFlare.vertexShader))):
(t.hasVertexTexture=!0,t.program=c.createProgram(),c.attachShader(t.program,K("fragment",THREE.ShaderLib.lensFlareVertexTexture.fragmentShader)),c.attachShader(t.program,K("vertex",THREE.ShaderLib.lensFlareVertexTexture.vertexShader)));c.linkProgram(t.program);t.attributes={};t.uniforms={};t.attributes.vertex=c.getAttribLocation(t.program,"position");t.attributes.uv=c.getAttribLocation(t.program,"UV");t.uniforms.renderType=c.getUniformLocation(t.program,"renderType");t.uniforms.map=c.getUniformLocation(t.program,
"map");t.uniforms.occlusionMap=c.getUniformLocation(t.program,"occlusionMap");t.uniforms.opacity=c.getUniformLocation(t.program,"opacity");t.uniforms.scale=c.getUniformLocation(t.program,"scale");t.uniforms.rotation=c.getUniformLocation(t.program,"rotation");t.uniforms.screenPosition=c.getUniformLocation(t.program,"screenPosition");var pa=!1;_sprite={};_sprite.vertices=new Float32Array(16);_sprite.faces=new Uint16Array(6);b=0;_sprite.vertices[b++]=-1;_sprite.vertices[b++]=-1;_sprite.vertices[b++]=
0;_sprite.vertices[b++]=0;_sprite.vertices[b++]=1;_sprite.vertices[b++]=-1;_sprite.vertices[b++]=1;_sprite.vertices[b++]=0;_sprite.vertices[b++]=1;_sprite.vertices[b++]=1;_sprite.vertices[b++]=1;_sprite.vertices[b++]=1;_sprite.vertices[b++]=-1;_sprite.vertices[b++]=1;_sprite.vertices[b++]=0;_sprite.vertices[b++]=1;b=0;_sprite.faces[b++]=0;_sprite.faces[b++]=1;_sprite.faces[b++]=2;_sprite.faces[b++]=0;_sprite.faces[b++]=2;_sprite.faces[b++]=3;_sprite.vertexBuffer=c.createBuffer();_sprite.elementBuffer=
c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,_sprite.vertexBuffer);c.bufferData(c.ARRAY_BUFFER,_sprite.vertices,c.STATIC_DRAW);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,_sprite.elementBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,_sprite.faces,c.STATIC_DRAW);_sprite.program=c.createProgram();c.attachShader(_sprite.program,K("fragment",THREE.ShaderLib.sprite.fragmentShader));c.attachShader(_sprite.program,K("vertex",THREE.ShaderLib.sprite.vertexShader));c.linkProgram(_sprite.program);_sprite.attributes={};
_sprite.uniforms={};_sprite.attributes.position=c.getAttribLocation(_sprite.program,"position");_sprite.attributes.uv=c.getAttribLocation(_sprite.program,"uv");_sprite.uniforms.uvOffset=c.getUniformLocation(_sprite.program,"uvOffset");_sprite.uniforms.uvScale=c.getUniformLocation(_sprite.program,"uvScale");_sprite.uniforms.rotation=c.getUniformLocation(_sprite.program,"rotation");_sprite.uniforms.scale=c.getUniformLocation(_sprite.program,"scale");_sprite.uniforms.alignment=c.getUniformLocation(_sprite.program,
"alignment");_sprite.uniforms.map=c.getUniformLocation(_sprite.program,"map");_sprite.uniforms.opacity=c.getUniformLocation(_sprite.program,"opacity");_sprite.uniforms.useScreenCoordinates=c.getUniformLocation(_sprite.program,"useScreenCoordinates");_sprite.uniforms.affectedByDistance=c.getUniformLocation(_sprite.program,"affectedByDistance");_sprite.uniforms.screenPosition=c.getUniformLocation(_sprite.program,"screenPosition");_sprite.uniforms.modelViewMatrix=c.getUniformLocation(_sprite.program,
"modelViewMatrix");_sprite.uniforms.projectionMatrix=c.getUniformLocation(_sprite.program,"projectionMatrix");var ra=!1;this.setSize=function(b,c){_canvas.width=b;_canvas.height=c;this.setViewport(0,0,_canvas.width,_canvas.height)};this.setViewport=function(b,d,e,f){_viewportX=b;_viewportY=d;_viewportWidth=e;_viewportHeight=f;c.viewport(_viewportX,_viewportY,_viewportWidth,_viewportHeight)};this.setScissor=function(b,d,e,f){c.scissor(b,d,e,f)};this.enableScissorTest=function(b){b?c.enable(c.SCISSOR_TEST):
c.disable(c.SCISSOR_TEST)};this.enableDepthBufferWrite=function(b){Q=b;c.depthMask(b)};this.setClearColorHex=function(b,d){_clearColor.setHex(b);_clearAlpha=d;c.clearColor(_clearColor.r,_clearColor.g,_clearColor.b,_clearAlpha)};this.setClearColor=function(b,d){_clearColor.copy(b);_clearAlpha=d;c.clearColor(_clearColor.r,_clearColor.g,_clearColor.b,_clearAlpha)};this.clear=function(){c.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT|c.STENCIL_BUFFER_BIT)};this.setStencilShadowDarkness=function(b){u.darkness=
b};this.getContext=function(){return c};this.initMaterial=function(b,d,e,f){var g,h,i;b instanceof THREE.MeshDepthMaterial?i="depth":b instanceof THREE.ShadowVolumeDynamicMaterial?i="shadowVolumeDynamic":b instanceof THREE.MeshNormalMaterial?i="normal":b instanceof THREE.MeshBasicMaterial?i="basic":b instanceof THREE.MeshLambertMaterial?i="lambert":b instanceof THREE.MeshPhongMaterial?i="phong":b instanceof THREE.LineBasicMaterial?i="basic":b instanceof THREE.ParticleBasicMaterial&&(i="particle_basic");
if(i){var j=THREE.ShaderLib[i];b.uniforms=THREE.UniformsUtils.clone(j.uniforms);b.vertexShader=j.vertexShader;b.fragmentShader=j.fragmentShader}var k,o,r;k=r=j=0;for(o=d.length;k<o;k++)h=d[k],h instanceof THREE.DirectionalLight&&r++,h instanceof THREE.PointLight&&j++;j+r<=4?d=r:(d=Math.ceil(4*r/(j+r)),j=4-d);h={directional:d,point:j};r=50;if(f!==void 0&&f instanceof THREE.SkinnedMesh)r=f.bones.length;var n;a:{k=b.fragmentShader;o=b.vertexShader;var j=b.uniforms,d=b.attributes,e={map:!!b.map,envMap:!!b.envMap,
lightMap:!!b.lightMap,vertexColors:b.vertexColors,fog:e,sizeAttenuation:b.sizeAttenuation,skinning:b.skinning,morphTargets:b.morphTargets,maxMorphTargets:this.maxMorphTargets,maxDirLights:h.directional,maxPointLights:h.point,maxBones:r},p;h=[];i?h.push(i):(h.push(k),h.push(o));for(p in e)h.push(p),h.push(e[p]);i=h.join();p=0;for(h=ha.length;p<h;p++)if(ha[p].code==i){n=ha[p].program;break a}p=c.createProgram();h=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+e.maxDirLights,
"#define MAX_POINT_LIGHTS "+e.maxPointLights,e.fog?"#define USE_FOG":"",e.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.lightMap?"#define USE_LIGHTMAP":"",e.vertexColors?"#define USE_COLOR":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");r=[ma?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+e.maxDirLights,"#define MAX_POINT_LIGHTS "+e.maxPointLights,"#define MAX_BONES "+e.maxBones,e.map?"#define USE_MAP":
"",e.envMap?"#define USE_ENVMAP":"",e.lightMap?"#define USE_LIGHTMAP":"",e.vertexColors?"#define USE_COLOR":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform mat4 cameraInverseMatrix;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
c.attachShader(p,K("fragment",h+k));c.attachShader(p,K("vertex",r+o));c.linkProgram(p);c.getProgramParameter(p,c.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+c.getProgramParameter(p,c.VALIDATE_STATUS)+", gl error ["+c.getError()+"]");p.uniforms={};p.attributes={};var q;k=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","cameraInverseMatrix","boneGlobalMatrices","morphTargetInfluences"];for(q in j)k.push(q);q=k;j=0;for(k=
q.length;j<k;j++)o=q[j],p.uniforms[o]=c.getUniformLocation(p,o);k=["position","normal","uv","uv2","tangent","color","skinVertexA","skinVertexB","skinIndex","skinWeight"];for(q=0;q<e.maxMorphTargets;q++)k.push("morphTarget"+q);for(n in d)k.push(n);n=k;q=0;for(d=n.length;q<d;q++)e=n[q],p.attributes[e]=c.getAttribLocation(p,e);ha.push({program:p,code:i});n=p}b.program=n;n=b.program.attributes;n.position>=0&&c.enableVertexAttribArray(n.position);n.color>=0&&c.enableVertexAttribArray(n.color);n.normal>=
0&&c.enableVertexAttribArray(n.normal);n.tangent>=0&&c.enableVertexAttribArray(n.tangent);b.skinning&&n.skinVertexA>=0&&n.skinVertexB>=0&&n.skinIndex>=0&&n.skinWeight>=0&&(c.enableVertexAttribArray(n.skinVertexA),c.enableVertexAttribArray(n.skinVertexB),c.enableVertexAttribArray(n.skinIndex),c.enableVertexAttribArray(n.skinWeight));if(b.attributes)for(g in b.attributes)n[g]!==void 0&&n[g]>=0&&c.enableVertexAttribArray(n[g]);if(b.morphTargets){b.numSupportedMorphTargets=0;n.morphTarget0>=0&&(c.enableVertexAttribArray(n.morphTarget0),
b.numSupportedMorphTargets++);n.morphTarget1>=0&&(c.enableVertexAttribArray(n.morphTarget1),b.numSupportedMorphTargets++);n.morphTarget2>=0&&(c.enableVertexAttribArray(n.morphTarget2),b.numSupportedMorphTargets++);n.morphTarget3>=0&&(c.enableVertexAttribArray(n.morphTarget3),b.numSupportedMorphTargets++);n.morphTarget4>=0&&(c.enableVertexAttribArray(n.morphTarget4),b.numSupportedMorphTargets++);n.morphTarget5>=0&&(c.enableVertexAttribArray(n.morphTarget5),b.numSupportedMorphTargets++);n.morphTarget6>=
0&&(c.enableVertexAttribArray(n.morphTarget6),b.numSupportedMorphTargets++);n.morphTarget7>=0&&(c.enableVertexAttribArray(n.morphTarget7),b.numSupportedMorphTargets++);f.__webglMorphTargetInfluences=new Float32Array(this.maxMorphTargets);b=0;for(g=this.maxMorphTargets;b<g;b++)f.__webglMorphTargetInfluences[b]=0}};this.render=function(b,e,p,t){var u,E,oa,B,F,G,r,P,J=b.lights,K=b.fog;R.data.vertices=0;R.data.faces=0;R.data.drawCalls=0;e.matrixAutoUpdate&&e.update(void 0,!0);b.update(void 0,!1,e);e.matrixWorldInverse.flattenToArray(_viewMatrixArray);
e.projectionMatrix.flattenToArray(_projectionMatrixArray);_projScreenMatrix.multiply(e.projectionMatrix,e.matrixWorldInverse);k(_projScreenMatrix);this.initWebGLObjects(b);aa(p);(this.autoClear||t)&&this.clear();F=b.__webglObjects.length;for(t=0;t<F;t++)if(u=b.__webglObjects[t],r=u.object,r.visible)if(!(r instanceof THREE.Mesh)||o(r)){if(r.matrixWorld.flattenToArray(r._objectMatrixArray),C(r,e),q(u),u.render=!0,this.sortObjects)u.object.renderDepth?u.z=u.object.renderDepth:(_vector3.copy(r.position),
_projScreenMatrix.multiplyVector3(_vector3),u.z=_vector3.z)}else u.render=!1;else u.render=!1;this.sortObjects&&b.__webglObjects.sort(w);G=b.__webglObjectsImmediate.length;for(t=0;t<G;t++)u=b.__webglObjectsImmediate[t],r=u.object,r.visible&&(r.matrixAutoUpdate&&r.matrixWorld.flattenToArray(r._objectMatrixArray),C(r,e),n(u));v(THREE.NormalBlending);for(t=0;t<F;t++)if(u=b.__webglObjects[t],u.render){r=u.object;P=u.buffer;oa=u.opaque;i(r);for(u=0;u<oa.count;u++)B=oa.list[u],g(B.depthTest),j(B.polygonOffset,
B.polygonOffsetFactor,B.polygonOffsetUnits),f(e,J,K,B,P,r)}for(t=0;t<G;t++)if(u=b.__webglObjectsImmediate[t],r=u.object,r.visible){oa=u.opaque;i(r);for(u=0;u<oa.count;u++)B=oa.list[u],g(B.depthTest),j(B.polygonOffset,B.polygonOffsetFactor,B.polygonOffsetUnits),E=d(e,J,K,B,r),r.render(function(b){h(b,E,B.shading)})}for(t=0;t<F;t++)if(u=b.__webglObjects[t],u.render){r=u.object;P=u.buffer;oa=u.transparent;i(r);for(u=0;u<oa.count;u++)B=oa.list[u],v(B.blending),g(B.depthTest),j(B.polygonOffset,B.polygonOffsetFactor,
B.polygonOffsetUnits),f(e,J,K,B,P,r)}for(t=0;t<G;t++)if(u=b.__webglObjectsImmediate[t],r=u.object,r.visible){oa=u.transparent;i(r);for(u=0;u<oa.count;u++)B=oa.list[u],v(B.blending),g(B.depthTest),j(B.polygonOffset,B.polygonOffsetFactor,B.polygonOffsetUnits),E=d(e,J,K,B,r),r.render(function(b){h(b,E,B.shading)})}b.__webglSprites.length&&D(b,e);_stencil&&b.__webglShadowVolumes.length&&b.lights.length&&y(b);b.__webglLensFlares.length&&z(b,e);p&&p.minFilter!==THREE.NearestFilter&&p.minFilter!==THREE.LinearFilter&&
(c.bindTexture(c.TEXTURE_2D,p.__webglTexture),c.generateMipmap(c.TEXTURE_2D),c.bindTexture(c.TEXTURE_2D,null))};this.initWebGLObjects=function(b){if(!b.__webglObjects)b.__webglObjects=[],b.__webglObjectsImmediate=[],b.__webglShadowVolumes=[],b.__webglLensFlares=[],b.__webglSprites=[];for(;b.__objectsAdded.length;){var d=b.__objectsAdded[0],e=b,f=void 0,g=void 0,h=void 0;if(d._modelViewMatrix==void 0)d._modelViewMatrix=new THREE.Matrix4,d._normalMatrixArray=new Float32Array(9),d._modelViewMatrixArray=
new Float32Array(16),d._objectMatrixArray=new Float32Array(16),d.matrixWorld.flattenToArray(d._objectMatrixArray);if(d instanceof THREE.Mesh)for(f in g=d.geometry,g.geometryGroups==void 0&&O(g),g.geometryGroups){h=g.geometryGroups[f];if(!h.__webglVertexBuffer){var i=h;i.__webglVertexBuffer=c.createBuffer();i.__webglNormalBuffer=c.createBuffer();i.__webglTangentBuffer=c.createBuffer();i.__webglColorBuffer=c.createBuffer();i.__webglUVBuffer=c.createBuffer();i.__webglUV2Buffer=c.createBuffer();i.__webglSkinVertexABuffer=
c.createBuffer();i.__webglSkinVertexBBuffer=c.createBuffer();i.__webglSkinIndicesBuffer=c.createBuffer();i.__webglSkinWeightsBuffer=c.createBuffer();i.__webglFaceBuffer=c.createBuffer();i.__webglLineBuffer=c.createBuffer();if(i.numMorphTargets){var j=void 0,k=void 0;i.__webglMorphTargetsBuffers=[];j=0;for(k=i.numMorphTargets;j<k;j++)i.__webglMorphTargetsBuffers.push(c.createBuffer())}for(var i=h,j=d,n=void 0,o=void 0,p=void 0,t=p=void 0,q=void 0,u=void 0,w=u=k=0,v=p=o=void 0,z=v=o=n=void 0,p=void 0,
t=j.geometry,q=t.faces,v=i.faces,n=0,o=v.length;n<o;n++)p=v[n],p=q[p],p instanceof THREE.Face3?(k+=3,u+=1,w+=3):p instanceof THREE.Face4&&(k+=4,u+=2,w+=4);for(var n=i,o=j,y=v=q=void 0,B=void 0,y=void 0,p=[],q=0,v=o.materials.length;q<v;q++)if(y=o.materials[q],y instanceof THREE.MeshFaceMaterial){y=0;for(l=n.materials.length;y<l;y++)(B=n.materials[y])&&p.push(B)}else(B=y)&&p.push(B);n=p;i.__materials=n;a:{q=o=void 0;v=n.length;for(o=0;o<v;o++)if(q=n[o],q.map||q.lightMap||q instanceof THREE.MeshShaderMaterial){o=
!0;break a}o=!1}a:{v=q=void 0;p=n.length;for(q=0;q<p;q++)if(v=n[q],!(v instanceof THREE.MeshBasicMaterial&&!v.envMap||v instanceof THREE.MeshDepthMaterial)){v=v&&v.shading!=void 0&&v.shading==THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading;break a}v=!1}a:{p=q=void 0;y=n.length;for(q=0;q<y;q++)if(p=n[q],p.vertexColors){p=p.vertexColors;break a}p=!1}i.__vertexArray=new Float32Array(k*3);if(v)i.__normalArray=new Float32Array(k*3);if(t.hasTangents)i.__tangentArray=new Float32Array(k*4);if(p)i.__colorArray=
new Float32Array(k*3);if(o){if(t.faceUvs.length>0||t.faceVertexUvs.length>0)i.__uvArray=new Float32Array(k*2);if(t.faceUvs.length>1||t.faceVertexUvs.length>1)i.__uv2Array=new Float32Array(k*2)}if(j.geometry.skinWeights.length&&j.geometry.skinIndices.length)i.__skinVertexAArray=new Float32Array(k*4),i.__skinVertexBArray=new Float32Array(k*4),i.__skinIndexArray=new Float32Array(k*4),i.__skinWeightArray=new Float32Array(k*4);i.__faceArray=new Uint16Array(u*3+(j.geometry.edgeFaces?j.geometry.edgeFaces.length*
6:0));i.__lineArray=new Uint16Array(w*2);if(i.numMorphTargets){i.__morphTargetsArrays=[];t=0;for(q=i.numMorphTargets;t<q;t++)i.__morphTargetsArrays.push(new Float32Array(k*3))}i.__needsSmoothNormals=v==THREE.SmoothShading;i.__uvType=o;i.__vertexColorType=p;i.__normalType=v;i.__webglFaceCount=u*3+(j.geometry.edgeFaces?j.geometry.edgeFaces.length*6:0);i.__webglLineCount=w*2;t=0;for(q=n.length;t<q;t++)if(o=n[t],o.attributes)for(a in i.__webglCustomAttributes={},o.attributes){p=o.attributes[a];v={};for(z in p)v[z]=
p[z];if(!v.__webglInitialized||v.createUniqueBuffers)v.__webglInitialized=!0,u=1,v.type==="v2"?u=2:v.type==="v3"?u=3:v.type==="v4"?u=4:v.type==="c"&&(u=3),v.size=u,v.array=new Float32Array(k*u),v.buffer=c.createBuffer(),v.buffer.belongsToAttribute=a,p.needsUpdate=!0,v.__original=p;i.__webglCustomAttributes[a]=v}i.__inittedArrays=!0;g.__dirtyVertices=!0;g.__dirtyMorphTargets=!0;g.__dirtyElements=!0;g.__dirtyUvs=!0;g.__dirtyNormals=!0;g.__dirtyTangents=!0;g.__dirtyColors=!0}d instanceof THREE.ShadowVolume?
F(e.__webglShadowVolumes,h,d):F(e.__webglObjects,h,d)}else if(d instanceof THREE.LensFlare)F(e.__webglLensFlares,void 0,d);else if(d instanceof THREE.Ribbon){g=d.geometry;if(!g.__webglVertexBuffer)f=g,f.__webglVertexBuffer=c.createBuffer(),f.__webglColorBuffer=c.createBuffer(),f=g,h=f.vertices.length,f.__vertexArray=new Float32Array(h*3),f.__colorArray=new Float32Array(h*3),f.__webglVertexCount=h,g.__dirtyVertices=!0,g.__dirtyColors=!0;F(e.__webglObjects,g,d)}else if(d instanceof THREE.Line){g=d.geometry;
if(!g.__webglVertexBuffer)f=g,f.__webglVertexBuffer=c.createBuffer(),f.__webglColorBuffer=c.createBuffer(),f=g,h=f.vertices.length,f.__vertexArray=new Float32Array(h*3),f.__colorArray=new Float32Array(h*3),f.__webglLineCount=h,g.__dirtyVertices=!0,g.__dirtyColors=!0;F(e.__webglObjects,g,d)}else if(d instanceof THREE.ParticleSystem){g=d.geometry;if(!g.__webglVertexBuffer)f=g,f.__webglVertexBuffer=c.createBuffer(),f.__webglColorBuffer=c.createBuffer(),f=g,h=f.vertices.length,f.__vertexArray=new Float32Array(h*
3),f.__colorArray=new Float32Array(h*3),f.__sortArray=[],f.__webglParticleCount=h,g.__dirtyVertices=!0,g.__dirtyColors=!0;F(e.__webglObjects,g,d)}else THREE.MarchingCubes!==void 0&&d instanceof THREE.MarchingCubes?e.__webglObjectsImmediate.push({object:d,opaque:{list:[],count:0},transparent:{list:[],count:0}}):d instanceof THREE.Sprite&&e.__webglSprites.push(d);b.__objectsAdded.splice(0,1)}for(;b.__objectsRemoved.length;)d=b.__objectsRemoved[0],e=b,d instanceof THREE.ShadowVolume?M(e.__webglShadowVolumes,
d):d instanceof THREE.Mesh||d instanceof THREE.ParticleSystem||d instanceof THREE.Ribbon||d instanceof THREE.Line?M(e.__webglObjects,d):d instanceof THREE.Sprite?M(e.__webglSprites,d):d instanceof THREE.LensFlare?M(e.__webglLensFlares,d):d instanceof THREE.MarchingCubes&&M(e.__webglObjectsImmediate,d),b.__objectsRemoved.splice(0,1);d=0;for(e=b.__webglObjects.length;d<e;d++)ga(b.__webglObjects[d].object,b);d=0;for(e=b.__webglShadowVolumes.length;d<e;d++)ga(b.__webglShadowVolumes[d].object,b);d=0;for(e=
b.__webglLensFlares.length;d<e;d++)ga(b.__webglLensFlares[d].object,b)};this.setFaceCulling=function(b,d){b?(!d||d=="ccw"?c.frontFace(c.CCW):c.frontFace(c.CW),b=="back"?c.cullFace(c.BACK):b=="front"?c.cullFace(c.FRONT):c.cullFace(c.FRONT_AND_BACK),c.enable(c.CULL_FACE)):c.disable(c.CULL_FACE)};this.supportsVertexTextures=function(){return ma}};
THREE.WebGLRenderTarget=function(b,e,d){this.width=b;this.height=e;d=d||{};this.wrapS=d.wrapS!==void 0?d.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=d.wrapT!==void 0?d.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=d.magFilter!==void 0?d.magFilter:THREE.LinearFilter;this.minFilter=d.minFilter!==void 0?d.minFilter:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=d.format!==void 0?d.format:THREE.RGBAFormat;this.type=d.type!==void 0?d.type:
THREE.UnsignedByteType;this.depthBuffer=d.depthBuffer!==void 0?d.depthBuffer:!0;this.stencilBuffer=d.stencilBuffer!==void 0?d.stencilBuffer:!0};
