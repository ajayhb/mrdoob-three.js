// ThreeExtras.js r32 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,c,d){this.r=a;this.g=c;this.b=d;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+
","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,c){this.x=a||0;this.y=c||0};
THREE.Vector2.prototype={set:function(a,c){this.x=a;this.y=c;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,c,d){this.x=a||0;this.y=c||0;this.z=d||0};
THREE.Vector3.prototype={set:function(a,c,d){this.x=a;this.y=c;this.z=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,c){this.x=a.y*c.z-a.z*c.y;this.y=a.z*c.x-a.x*c.z;this.z=a.x*c.y-a.y*c.x;return this},crossSelf:function(a){var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},multiply:function(a,c){this.x=a.x*c.x;this.y=a.y*c.y;this.z=a.z*c.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=
a.z;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var c=this.x-a.x,d=this.y-a.y;a=this.z-a.z;return Math.sqrt(c*c+d*d+a*a)},distanceToSquared:function(a){var c=this.x-a.x,d=this.y-a.y;a=this.z-a.z;return c*c+d*d+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=
-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,c,d,e){this.x=a||0;this.y=c||0;this.z=d||0;this.w=e||1};
THREE.Vector4.prototype={set:function(a,c,d,e){this.x=a;this.y=c;this.z=d;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;this.w=a.w+c.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;this.w=a.w-c.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,c){this.x+=(a.x-this.x)*c;this.y+=(a.y-this.y)*c;this.z+=(a.z-this.z)*c;this.w+=(a.w-this.w)*c},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,c){this.origin=a||new THREE.Vector3;this.direction=c||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var c,d,e=a.objects,h=[];a=0;for(c=e.length;a<c;a++){d=e[a];if(d instanceof THREE.Mesh)h=h.concat(this.intersectObject(d))}h.sort(function(f,j){return f.distance-j.distance});return h},intersectObject:function(a){function c(H,u,J,m){m=m.clone().subSelf(u);J=J.clone().subSelf(u);var g=H.clone().subSelf(u);H=m.dot(m);u=m.dot(J);m=m.dot(g);var p=J.dot(J);J=J.dot(g);g=1/(H*p-u*u);p=(p*m-u*J)*g;H=(H*J-u*m)*g;return p>0&&H>0&&p+H<1}var d,e,h,f,j,b,k,l,q,B,
o,t=a.geometry,v=t.vertices,C=[];d=0;for(e=t.faces.length;d<e;d++){h=t.faces[d];B=this.origin.clone();o=this.direction.clone();f=a.matrix.multiplyVector3(v[h.a].position.clone());j=a.matrix.multiplyVector3(v[h.b].position.clone());b=a.matrix.multiplyVector3(v[h.c].position.clone());k=h instanceof THREE.Face4?a.matrix.multiplyVector3(v[h.d].position.clone()):null;l=a.rotationMatrix.multiplyVector3(h.normal.clone());q=o.dot(l);if(q<0){l=l.dot((new THREE.Vector3).sub(f,B))/q;B=B.addSelf(o.multiplyScalar(l));
if(h instanceof THREE.Face3){if(c(B,f,j,b)){h={distance:this.origin.distanceTo(B),point:B,face:h,object:a};C.push(h)}}else if(h instanceof THREE.Face4)if(c(B,f,j,k)||c(B,j,b,k)){h={distance:this.origin.distanceTo(B),point:B,face:h,object:a};C.push(h)}}}return C}};
THREE.Rectangle=function(){function a(){f=e-c;j=h-d}var c,d,e,h,f,j,b=true;this.getX=function(){return c};this.getY=function(){return d};this.getWidth=function(){return f};this.getHeight=function(){return j};this.getLeft=function(){return c};this.getTop=function(){return d};this.getRight=function(){return e};this.getBottom=function(){return h};this.set=function(k,l,q,B){b=false;c=k;d=l;e=q;h=B;a()};this.addPoint=function(k,l){if(b){b=false;c=k;d=l;e=k;h=l}else{c=c<k?c:k;d=d<l?d:l;e=e>k?e:k;h=h>l?
h:l}a()};this.add3Points=function(k,l,q,B,o,t){if(b){b=false;c=k<q?k<o?k:o:q<o?q:o;d=l<B?l<t?l:t:B<t?B:t;e=k>q?k>o?k:o:q>o?q:o;h=l>B?l>t?l:t:B>t?B:t}else{c=k<q?k<o?k<c?k:c:o<c?o:c:q<o?q<c?q:c:o<c?o:c;d=l<B?l<t?l<d?l:d:t<d?t:d:B<t?B<d?B:d:t<d?t:d;e=k>q?k>o?k>e?k:e:o>e?o:e:q>o?q>e?q:e:o>e?o:e;h=l>B?l>t?l>h?l:h:t>h?t:h:B>t?B>h?B:h:t>h?t:h}a()};this.addRectangle=function(k){if(b){b=false;c=k.getLeft();d=k.getTop();e=k.getRight();h=k.getBottom()}else{c=c<k.getLeft()?c:k.getLeft();d=d<k.getTop()?d:k.getTop();
e=e>k.getRight()?e:k.getRight();h=h>k.getBottom()?h:k.getBottom()}a()};this.inflate=function(k){c-=k;d-=k;e+=k;h+=k;a()};this.minSelf=function(k){c=c>k.getLeft()?c:k.getLeft();d=d>k.getTop()?d:k.getTop();e=e<k.getRight()?e:k.getRight();h=h<k.getBottom()?h:k.getBottom();a()};this.instersects=function(k){return Math.min(e,k.getRight())-Math.max(c,k.getLeft())>=0&&Math.min(h,k.getBottom())-Math.max(d,k.getTop())>=0};this.empty=function(){b=true;h=e=d=c=0;a()};this.isEmpty=function(){return b};this.toString=
function(){return"THREE.Rectangle ( left: "+c+", right: "+e+", top: "+d+", bottom: "+h+", width: "+f+", height: "+j+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a,c=this.m;a=c[1];c[1]=c[3];c[3]=a;a=c[2];c[2]=c[6];c[6]=a;a=c[5];c[5]=c[7];c[7]=a;return this}};
THREE.Matrix4=function(a,c,d,e,h,f,j,b,k,l,q,B,o,t,v,C){this.n11=a||1;this.n12=c||0;this.n13=d||0;this.n14=e||0;this.n21=h||0;this.n22=f||1;this.n23=j||0;this.n24=b||0;this.n31=k||0;this.n32=l||0;this.n33=q||1;this.n34=B||0;this.n41=o||0;this.n42=t||0;this.n43=v||0;this.n44=C||1;this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,c,d,e,h,f,j,b,k,l,q,B,o,t,v,C){this.n11=a;this.n12=c;this.n13=d;this.n14=e;this.n21=h;this.n22=f;this.n23=j;this.n24=b;this.n31=k;this.n32=l;this.n33=q;this.n34=B;this.n41=o;this.n42=t;this.n43=v;this.n44=C;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,c,d){var e=THREE.Matrix4.__tmpVec1,h=THREE.Matrix4.__tmpVec2,f=THREE.Matrix4.__tmpVec3;f.sub(a,c).normalize();e.cross(d,f).normalize();h.cross(f,e).normalize();this.n11=e.x;this.n12=e.y;this.n13=e.z;this.n14=-e.dot(a);this.n21=h.x;this.n22=h.y;this.n23=h.z;this.n24=-h.dot(a);
this.n31=f.x;this.n32=f.y;this.n33=f.z;this.n34=-f.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var c=a.x,d=a.y,e=a.z,h=1/(this.n41*c+this.n42*d+this.n43*e+this.n44);a.x=(this.n11*c+this.n12*d+this.n13*e+this.n14)*h;a.y=(this.n21*c+this.n22*d+this.n23*e+this.n24)*h;a.z=(this.n31*c+this.n32*d+this.n33*e+this.n34)*h;return a},multiplyVector4:function(a){var c=a.x,d=a.y,e=a.z,h=a.w;a.x=this.n11*c+this.n12*d+this.n13*e+this.n14*h;a.y=this.n21*c+this.n22*d+this.n23*
e+this.n24*h;a.z=this.n31*c+this.n32*d+this.n33*e+this.n34*h;a.w=this.n41*c+this.n42*d+this.n43*e+this.n44*h;return a},crossVector:function(a){var c=new THREE.Vector4;c.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;c.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;c.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;c.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return c},multiply:function(a,c){var d=a.n11,e=a.n12,h=a.n13,f=a.n14,j=a.n21,b=a.n22,k=a.n23,l=a.n24,q=a.n31,
B=a.n32,o=a.n33,t=a.n34,v=a.n41,C=a.n42,H=a.n43,u=a.n44,J=c.n11,m=c.n12,g=c.n13,p=c.n14,A=c.n21,n=c.n22,z=c.n23,M=c.n24,x=c.n31,D=c.n32,F=c.n33,E=c.n34,y=c.n41,O=c.n42,K=c.n43,U=c.n44;this.n11=d*J+e*A+h*x+f*y;this.n12=d*m+e*n+h*D+f*O;this.n13=d*g+e*z+h*F+f*K;this.n14=d*p+e*M+h*E+f*U;this.n21=j*J+b*A+k*x+l*y;this.n22=j*m+b*n+k*D+l*O;this.n23=j*g+b*z+k*F+l*K;this.n24=j*p+b*M+k*E+l*U;this.n31=q*J+B*A+o*x+t*y;this.n32=q*m+B*n+o*D+t*O;this.n33=q*g+B*z+o*F+t*K;this.n34=q*p+B*M+o*E+t*U;this.n41=v*J+C*A+
H*x+u*y;this.n42=v*m+C*n+H*D+u*O;this.n43=v*g+C*z+H*F+u*K;this.n44=v*p+C*M+H*E+u*U;return this},multiplySelf:function(a){var c=this.n11,d=this.n12,e=this.n13,h=this.n14,f=this.n21,j=this.n22,b=this.n23,k=this.n24,l=this.n31,q=this.n32,B=this.n33,o=this.n34,t=this.n41,v=this.n42,C=this.n43,H=this.n44,u=a.n11,J=a.n21,m=a.n31,g=a.n41,p=a.n12,A=a.n22,n=a.n32,z=a.n42,M=a.n13,x=a.n23,D=a.n33,F=a.n43,E=a.n14,y=a.n24,O=a.n34;a=a.n44;this.n11=c*u+d*J+e*m+h*g;this.n12=c*p+d*A+e*n+h*z;this.n13=c*M+d*x+e*D+h*
F;this.n14=c*E+d*y+e*O+h*a;this.n21=f*u+j*J+b*m+k*g;this.n22=f*p+j*A+b*n+k*z;this.n23=f*M+j*x+b*D+k*F;this.n24=f*E+j*y+b*O+k*a;this.n31=l*u+q*J+B*m+o*g;this.n32=l*p+q*A+B*n+o*z;this.n33=l*M+q*x+B*D+o*F;this.n34=l*E+q*y+B*O+o*a;this.n41=t*u+v*J+C*m+H*g;this.n42=t*p+v*A+C*n+H*z;this.n43=t*M+v*x+C*D+H*F;this.n44=t*E+v*y+C*O+H*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=
a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){var a=this.n11,c=this.n12,d=this.n13,e=this.n14,h=this.n21,f=this.n22,j=this.n23,b=this.n24,k=this.n31,l=this.n32,q=this.n33,B=this.n34,o=this.n41,t=this.n42,v=this.n43,C=this.n44;return e*j*l*o-d*b*l*o-e*f*q*o+c*b*q*o+d*f*B*o-c*j*B*o-e*j*k*t+d*b*k*t+e*h*q*t-a*b*q*t-d*h*B*t+a*j*B*t+e*f*k*v-c*b*k*v-e*h*l*v+a*b*l*v+c*h*B*v-a*f*B*v-d*f*k*C+c*j*k*C+d*h*l*C-a*j*l*C-c*h*q*C+a*f*q*C},transpose:function(){function a(c,d,
e){var h=c[d];c[d]=c[e];c[e]=h}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){var a=this.flat;a[0]=this.n11;
a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},setTranslation:function(a,c,d){this.set(1,0,0,a,0,1,0,c,0,0,1,d,0,0,0,1);return this},setScale:function(a,c,d){this.set(a,0,0,0,0,c,0,0,0,0,d,0,0,0,0,1);return this},setRotX:function(a){var c=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,c,-a,0,0,a,c,0,0,0,0,1);return this},setRotY:function(a){var c=
Math.cos(a);a=Math.sin(a);this.set(c,0,a,0,0,1,0,0,-a,0,c,0,0,0,0,1);return this},setRotZ:function(a){var c=Math.cos(a);a=Math.sin(a);this.set(c,-a,0,0,a,c,0,0,0,0,1,0,0,0,0,1);return this},setRotAxis:function(a,c){var d=Math.cos(c),e=Math.sin(c),h=1-d,f=a.x,j=a.y,b=a.z,k=h*f,l=h*j;this.set(k*f+d,k*j-e*b,k*b+e*j,0,k*j+e*b,l*j+d,l*b-e*f,0,k*b-e*j,l*b+e*f,h*b*b+d,0,0,0,0,1);return this},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+
this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,c,d){var e=new THREE.Matrix4;e.setTranslation(a,c,d);return e};THREE.Matrix4.scaleMatrix=function(a,c,d){var e=new THREE.Matrix4;e.setScale(a,c,d);return e};THREE.Matrix4.rotationXMatrix=function(a){var c=new THREE.Matrix4;c.setRotX(a);return c};
THREE.Matrix4.rotationYMatrix=function(a){var c=new THREE.Matrix4;c.setRotY(a);return c};THREE.Matrix4.rotationZMatrix=function(a){var c=new THREE.Matrix4;c.setRotZ(a);return c};THREE.Matrix4.rotationAxisAngleMatrix=function(a,c){var d=new THREE.Matrix4;d.setRotAxis(a,c);return d};
THREE.Matrix4.makeInvert=function(a){var c=a.n11,d=a.n12,e=a.n13,h=a.n14,f=a.n21,j=a.n22,b=a.n23,k=a.n24,l=a.n31,q=a.n32,B=a.n33,o=a.n34,t=a.n41,v=a.n42,C=a.n43,H=a.n44,u=new THREE.Matrix4;u.n11=b*o*v-k*B*v+k*q*C-j*o*C-b*q*H+j*B*H;u.n12=h*B*v-e*o*v-h*q*C+d*o*C+e*q*H-d*B*H;u.n13=e*k*v-h*b*v+h*j*C-d*k*C-e*j*H+d*b*H;u.n14=h*b*q-e*k*q-h*j*B+d*k*B+e*j*o-d*b*o;u.n21=k*B*t-b*o*t-k*l*C+f*o*C+b*l*H-f*B*H;u.n22=e*o*t-h*B*t+h*l*C-c*o*C-e*l*H+c*B*H;u.n23=h*b*t-e*k*t-h*f*C+c*k*C+e*f*H-c*b*H;u.n24=e*k*l-h*b*l+
h*f*B-c*k*B-e*f*o+c*b*o;u.n31=j*o*t-k*q*t+k*l*v-f*o*v-j*l*H+f*q*H;u.n32=h*q*t-d*o*t-h*l*v+c*o*v+d*l*H-c*q*H;u.n33=e*k*t-h*j*t+h*f*v-c*k*v-d*f*H+c*j*H;u.n34=h*j*l-d*k*l-h*f*q+c*k*q+d*f*o-c*j*o;u.n41=b*q*t-j*B*t-b*l*v+f*B*v+j*l*C-f*q*C;u.n42=d*B*t-e*q*t+e*l*v-c*B*v-d*l*C+c*q*C;u.n43=e*j*t-d*b*t-e*f*v+c*b*v+d*f*C-c*j*C;u.n44=d*b*l-e*j*l+e*f*q-c*b*q-d*f*B+c*j*B;u.multiplyScalar(1/a.determinant());return u};
THREE.Matrix4.makeInvert3x3=function(a){var c=a.flatten();a=a.m33;var d=a.m,e=c[10]*c[5]-c[6]*c[9],h=-c[10]*c[1]+c[2]*c[9],f=c[6]*c[1]-c[2]*c[5],j=-c[10]*c[4]+c[6]*c[8],b=c[10]*c[0]-c[2]*c[8],k=-c[6]*c[0]+c[2]*c[4],l=c[9]*c[4]-c[5]*c[8],q=-c[9]*c[0]+c[1]*c[8],B=c[5]*c[0]-c[1]*c[4];c=c[0]*e+c[1]*j+c[2]*l;if(c==0)throw"matrix not invertible";c=1/c;d[0]=c*e;d[1]=c*h;d[2]=c*f;d[3]=c*j;d[4]=c*b;d[5]=c*k;d[6]=c*l;d[7]=c*q;d[8]=c*B;return a};
THREE.Matrix4.makeFrustum=function(a,c,d,e,h,f){var j,b,k;j=new THREE.Matrix4;b=2*h/(c-a);k=2*h/(e-d);a=(c+a)/(c-a);d=(e+d)/(e-d);e=-(f+h)/(f-h);h=-2*f*h/(f-h);j.n11=b;j.n12=0;j.n13=a;j.n14=0;j.n21=0;j.n22=k;j.n23=d;j.n24=0;j.n31=0;j.n32=0;j.n33=e;j.n34=h;j.n41=0;j.n42=0;j.n43=-1;j.n44=0;return j};THREE.Matrix4.makePerspective=function(a,c,d,e){var h;a=d*Math.tan(a*Math.PI/360);h=-a;return THREE.Matrix4.makeFrustum(h*c,a*c,h,a,d,e)};
THREE.Matrix4.makeOrtho=function(a,c,d,e,h,f){var j,b,k,l;j=new THREE.Matrix4;b=c-a;k=d-e;l=f-h;a=(c+a)/b;d=(d+e)/k;h=(f+h)/l;j.n11=2/b;j.n12=0;j.n13=0;j.n14=-a;j.n21=0;j.n22=2/k;j.n23=0;j.n24=-d;j.n31=0;j.n32=0;j.n33=-2/l;j.n34=-h;j.n41=0;j.n42=0;j.n43=0;j.n44=1;return j};THREE.Matrix4.__tmpVec1=new THREE.Vector3;THREE.Matrix4.__tmpVec2=new THREE.Vector3;THREE.Matrix4.__tmpVec3=new THREE.Vector3;
THREE.Vertex=function(a,c){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=c||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,c,d,e,h){this.a=a;this.b=c;this.c=d;this.centroid=new THREE.Vector3;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.materials=h instanceof Array?h:[h]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,c,d,e,h,f){this.a=a;this.b=c;this.c=d;this.d=e;this.centroid=new THREE.Vector3;this.normal=h instanceof THREE.Vector3?h:new THREE.Vector3;this.vertexNormals=h instanceof Array?h:[];this.materials=f instanceof Array?f:[f]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,c){this.u=a||0;this.v=c||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,c,d;a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];d.centroid.set(0,0,0);if(d instanceof THREE.Face3){d.centroid.addSelf(this.vertices[d.a].position);d.centroid.addSelf(this.vertices[d.b].position);d.centroid.addSelf(this.vertices[d.c].position);d.centroid.divideScalar(3)}else if(d instanceof THREE.Face4){d.centroid.addSelf(this.vertices[d.a].position);d.centroid.addSelf(this.vertices[d.b].position);d.centroid.addSelf(this.vertices[d.c].position);
d.centroid.addSelf(this.vertices[d.d].position);d.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var c,d,e,h,f,j,b=new THREE.Vector3,k=new THREE.Vector3;e=0;for(h=this.vertices.length;e<h;e++){f=this.vertices[e];f.normal.set(0,0,0)}e=0;for(h=this.faces.length;e<h;e++){f=this.faces[e];if(a&&f.vertexNormals.length){b.set(0,0,0);c=0;for(d=f.normal.length;c<d;c++)b.addSelf(f.vertexNormals[c]);b.divideScalar(3)}else{c=this.vertices[f.a];d=this.vertices[f.b];j=this.vertices[f.c];b.sub(j.position,
d.position);k.sub(c.position,d.position);b.crossSelf(k)}b.isZero()||b.normalize();f.normal.copy(b)}},computeVertexNormals:function(){var a,c,d,e;if(this.__tmpVertices==undefined){e=this.__tmpVertices=Array(this.vertices.length);a=0;for(c=this.vertices.length;a<c;a++)e[a]=new THREE.Vector3;a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];if(d instanceof THREE.Face3)d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(d instanceof THREE.Face4)d.vertexNormals=[new THREE.Vector3,
new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}}else{e=this.__tmpVertices;a=0;for(c=this.vertices.length;a<c;a++)e[a].set(0,0,0)}a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];if(d instanceof THREE.Face3){e[d.a].addSelf(d.normal);e[d.b].addSelf(d.normal);e[d.c].addSelf(d.normal)}else if(d instanceof THREE.Face4){e[d.a].addSelf(d.normal);e[d.b].addSelf(d.normal);e[d.c].addSelf(d.normal);e[d.d].addSelf(d.normal)}}a=0;for(c=this.vertices.length;a<c;a++)e[a].normalize();a=0;for(c=this.faces.length;a<
c;a++){d=this.faces[a];if(d instanceof THREE.Face3){d.vertexNormals[0].copy(e[d.a]);d.vertexNormals[1].copy(e[d.b]);d.vertexNormals[2].copy(e[d.c])}else if(d instanceof THREE.Face4){d.vertexNormals[0].copy(e[d.a]);d.vertexNormals[1].copy(e[d.b]);d.vertexNormals[2].copy(e[d.c]);d.vertexNormals[3].copy(e[d.d])}}},computeTangents:function(){function a(E,y,O,K,U,W,P){f=E.vertices[y].position;j=E.vertices[O].position;b=E.vertices[K].position;k=h[U];l=h[W];q=h[P];B=j.x-f.x;o=b.x-f.x;t=j.y-f.y;v=b.y-f.y;
C=j.z-f.z;H=b.z-f.z;u=l.u-k.u;J=q.u-k.u;m=l.v-k.v;g=q.v-k.v;p=1/(u*g-J*m);z.set((g*B-m*o)*p,(g*t-m*v)*p,(g*C-m*H)*p);M.set((u*o-J*B)*p,(u*v-J*t)*p,(u*H-J*C)*p);A[y].addSelf(z);A[O].addSelf(z);A[K].addSelf(z);n[y].addSelf(M);n[O].addSelf(M);n[K].addSelf(M)}var c,d,e,h,f,j,b,k,l,q,B,o,t,v,C,H,u,J,m,g,p,A=[],n=[],z=new THREE.Vector3,M=new THREE.Vector3,x=new THREE.Vector3,D=new THREE.Vector3,F=new THREE.Vector3;c=0;for(d=this.vertices.length;c<d;c++){A[c]=new THREE.Vector3;n[c]=new THREE.Vector3}c=0;
for(d=this.faces.length;c<d;c++){e=this.faces[c];h=this.uvs[c];if(e instanceof THREE.Face3){a(this,e.a,e.b,e.c,0,1,2);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);this.vertices[e.c].normal.copy(e.vertexNormals[2])}else if(e instanceof THREE.Face4){a(this,e.a,e.b,e.c,0,1,2);a(this,e.a,e.b,e.d,0,1,3);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);this.vertices[e.c].normal.copy(e.vertexNormals[2]);
this.vertices[e.d].normal.copy(e.vertexNormals[3])}}c=0;for(d=this.vertices.length;c<d;c++){F.copy(this.vertices[c].normal);e=A[c];x.copy(e);x.subSelf(F.multiplyScalar(F.dot(e))).normalize();D.cross(this.vertices[c].normal,e);e=D.dot(n[c]);e=e<0?-1:1;this.vertices[c].tangent.set(x.x,x.y,x.z,e)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],
z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var c=1,d=this.vertices.length;c<d;c++){a=this.vertices[c];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>
this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,c=0,d=this.vertices.length;c<d;c++)a=Math.max(a,this.vertices[c].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(q){var B=[];c=0;for(d=q.length;c<d;c++)q[c]==undefined?B.push("undefined"):B.push(q[c].toString());return B.join("_")}var c,d,e,h,f,j,b,k,l={};e=0;for(h=this.faces.length;e<h;e++){f=this.faces[e];
j=f.materials;b=a(j);if(l[b]==undefined)l[b]={hash:b,counter:0};k=l[b].hash+"_"+l[b].counter;if(this.geometryChunks[k]==undefined)this.geometryChunks[k]={faces:[],materials:j,vertices:0};f=f instanceof THREE.Face3?3:4;if(this.geometryChunks[k].vertices+f>65535){l[b].counter+=1;k=l[b].hash+"_"+l[b].counter;if(this.geometryChunks[k]==undefined)this.geometryChunks[k]={faces:[],materials:j,vertices:0}}this.geometryChunks[k].faces.push(e);this.geometryChunks[k].vertices+=f}},toString:function(){return"THREE.Geometry ( vertices: "+
this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,c,d,e){this.fov=a;this.aspect=c;this.near=d;this.far=e;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.tmpVec=new THREE.Vector3;this.translateX=function(h){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(h);this.tmpVec.crossSelf(this.up);this.position.addSelf(this.tmpVec);this.target.position.addSelf(this.tmpVec)};
this.translateZ=function(h){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(h);this.position.subSelf(this.tmpVec);this.target.position.subSelf(this.tmpVec)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};
THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=c||1};THREE.DirectionalLight.prototype=new THREE.Light;
THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=c||1};THREE.PointLight.prototype=new THREE.Light;THREE.PointLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.tmpMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){var a=this.position,c=this.rotation,d=this.scale,e=this.tmpMatrix;this.matrix.setTranslation(a.x,a.y,a.z);this.rotationMatrix.setRotX(c.x);if(c.y!=0){e.setRotY(c.y);this.rotationMatrix.multiplySelf(e)}if(c.z!=0){e.setRotZ(c.z);this.rotationMatrix.multiplySelf(e)}this.matrix.multiplySelf(this.rotationMatrix);if(d.x!=0||d.y!=0||d.z!=0){e.setScale(d.x,d.y,d.z);this.matrix.multiplySelf(e)}}};THREE.Object3DCounter={value:0};
THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.autoUpdateMatrix=false};THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;
THREE.Line=function(a,c,d){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.type=d!=undefined?d:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;THREE.Mesh=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};
THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+
"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=
this.wireframe_linecap="round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=
a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==
undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial"}};
THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.opacity=1;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};
THREE.Texture=function(a,c,d,e,h,f){this.image=a;this.mapping=c!==undefined?c:new THREE.UVMapping;this.wrap_s=d!==undefined?d:THREE.ClampToEdgeWrapping;this.wrap_t=e!==undefined?e:THREE.ClampToEdgeWrapping;this.mag_filter=h!==undefined?h:THREE.LinearFilter;this.min_filter=f!==undefined?f:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;
THREE.RenderTarget=function(a,c,d){this.width=a;this.height=c;d=d||{};this.wrap_s=d.wrap_s!==undefined?d.wrap_s:THREE.ClampToEdgeWrapping;this.wrap_t=d.wrap_t!==undefined?d.wrap_t:THREE.ClampToEdgeWrapping;this.mag_filter=d.mag_filter!==undefined?d.mag_filter:THREE.LinearFilter;this.min_filter=d.min_filter!==undefined?d.min_filter:THREE.LinearMipMapLinearFilter;this.format=d.format!==undefined?d.format:THREE.RGBFormat;this.type=d.type!==undefined?d.type:THREE.UnsignedByteType};
var Uniforms={clone:function(a){var c,d,e,h={};for(c in a){h[c]={};for(d in a[c]){e=a[c][d];h[c][d]=e instanceof THREE.Color||e instanceof THREE.Vector3||e instanceof THREE.Texture?e.clone():e}}return h},merge:function(a){var c,d,e,h={};for(c=0;c<a.length;c++){e=this.clone(a[c]);for(d in e)h[d]=e[d]}return h}};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,c,d){this.color=new THREE.Color(a);this.near=c||1;this.far=d||1E3};THREE.FogExp2=function(a,c){this.color=new THREE.Color(a);this.density=c||2.5E-4};
THREE.Projector=function(){function a(n,z){return z.z-n.z}function c(n,z){var M=0,x=1,D=n.z+n.w,F=z.z+z.w,E=-n.z+n.w,y=-z.z+z.w;if(D>=0&&F>=0&&E>=0&&y>=0)return true;else if(D<0&&F<0||E<0&&y<0)return false;else{if(D<0)M=Math.max(M,D/(D-F));else if(F<0)x=Math.min(x,D/(D-F));if(E<0)M=Math.max(M,E/(E-y));else if(y<0)x=Math.min(x,E/(E-y));if(x<M)return false;else{n.lerpSelf(z,M);z.lerpSelf(n,1-x);return true}}}var d,e,h=[],f,j,b,k=[],l,q,B=[],o,t,v=[],C=new THREE.Vector4,H=new THREE.Vector4,u=new THREE.Matrix4,
J=new THREE.Matrix4,m=[],g=new THREE.Vector4,p=new THREE.Vector4,A;this.projectObjects=function(n,z,M){var x=[],D,F;e=0;u.multiply(z.projectionMatrix,z.matrix);m[0]=new THREE.Vector4(u.n41-u.n11,u.n42-u.n12,u.n43-u.n13,u.n44-u.n14);m[1]=new THREE.Vector4(u.n41+u.n11,u.n42+u.n12,u.n43+u.n13,u.n44+u.n14);m[2]=new THREE.Vector4(u.n41+u.n21,u.n42+u.n22,u.n43+u.n23,u.n44+u.n24);m[3]=new THREE.Vector4(u.n41-u.n21,u.n42-u.n22,u.n43-u.n23,u.n44-u.n24);m[4]=new THREE.Vector4(u.n41-u.n31,u.n42-u.n32,u.n43-
u.n33,u.n44-u.n34);m[5]=new THREE.Vector4(u.n41+u.n31,u.n42+u.n32,u.n43+u.n33,u.n44+u.n34);z=0;for(D=m.length;z<D;z++){F=m[z];F.divideScalar(Math.sqrt(F.x*F.x+F.y*F.y+F.z*F.z))}D=n.objects;n=0;for(z=D.length;n<z;n++){F=D[n];var E;if(!(E=!F.visible)){if(E=F instanceof THREE.Mesh){a:{E=void 0;for(var y=F.position,O=-F.geometry.boundingSphere.radius*Math.max(F.scale.x,Math.max(F.scale.y,F.scale.z)),K=0;K<6;K++){E=m[K].x*y.x+m[K].y*y.y+m[K].z*y.z+m[K].w;if(E<=O){E=false;break a}}E=true}E=!E}E=E}if(!E){d=
h[e]=h[e]||new THREE.RenderableObject;C.copy(F.position);u.multiplyVector3(C);d.object=F;d.z=C.z;x.push(d);e++}}M&&x.sort(a);return x};this.projectScene=function(n,z,M){var x=[],D=z.near,F=z.far,E,y,O,K,U,W,P,da,X,R,T,ba,Y,G,S,V;b=q=t=0;z.autoUpdateMatrix&&z.updateMatrix();u.multiply(z.projectionMatrix,z.matrix);W=this.projectObjects(n,z,true);n=0;for(E=W.length;n<E;n++){P=W[n].object;if(P.visible){P.autoUpdateMatrix&&P.updateMatrix();da=P.matrix;X=P.rotationMatrix;R=P.materials;T=P.overdraw;if(P instanceof
THREE.Mesh){ba=P.geometry;Y=ba.vertices;y=0;for(O=Y.length;y<O;y++){G=Y[y];G.positionWorld.copy(G.position);da.multiplyVector3(G.positionWorld);K=G.positionScreen;K.copy(G.positionWorld);u.multiplyVector4(K);K.x/=K.w;K.y/=K.w;G.__visible=K.z>D&&K.z<F}ba=ba.faces;y=0;for(O=ba.length;y<O;y++){G=ba[y];if(G instanceof THREE.Face3){K=Y[G.a];U=Y[G.b];S=Y[G.c];if(K.__visible&&U.__visible&&S.__visible)if(P.doubleSided||P.flipSided!=(S.positionScreen.x-K.positionScreen.x)*(U.positionScreen.y-K.positionScreen.y)-
(S.positionScreen.y-K.positionScreen.y)*(U.positionScreen.x-K.positionScreen.x)<0){f=k[b]=k[b]||new THREE.RenderableFace3;f.v1.positionWorld.copy(K.positionWorld);f.v2.positionWorld.copy(U.positionWorld);f.v3.positionWorld.copy(S.positionWorld);f.v1.positionScreen.copy(K.positionScreen);f.v2.positionScreen.copy(U.positionScreen);f.v3.positionScreen.copy(S.positionScreen);f.normalWorld.copy(G.normal);X.multiplyVector3(f.normalWorld);f.centroidWorld.copy(G.centroid);da.multiplyVector3(f.centroidWorld);
f.centroidScreen.copy(f.centroidWorld);u.multiplyVector3(f.centroidScreen);S=G.vertexNormals;A=f.vertexNormalsWorld;K=0;for(U=S.length;K<U;K++){V=A[K]=A[K]||new THREE.Vector3;V.copy(S[K]);X.multiplyVector3(V)}f.z=f.centroidScreen.z;f.meshMaterials=R;f.faceMaterials=G.materials;f.overdraw=T;if(P.geometry.uvs[y]){f.uvs[0]=P.geometry.uvs[y][0];f.uvs[1]=P.geometry.uvs[y][1];f.uvs[2]=P.geometry.uvs[y][2]}x.push(f);b++}}else if(G instanceof THREE.Face4){K=Y[G.a];U=Y[G.b];S=Y[G.c];V=Y[G.d];if(K.__visible&&
U.__visible&&S.__visible&&V.__visible)if(P.doubleSided||P.flipSided!=((V.positionScreen.x-K.positionScreen.x)*(U.positionScreen.y-K.positionScreen.y)-(V.positionScreen.y-K.positionScreen.y)*(U.positionScreen.x-K.positionScreen.x)<0||(U.positionScreen.x-S.positionScreen.x)*(V.positionScreen.y-S.positionScreen.y)-(U.positionScreen.y-S.positionScreen.y)*(V.positionScreen.x-S.positionScreen.x)<0)){f=k[b]=k[b]||new THREE.RenderableFace3;f.v1.positionWorld.copy(K.positionWorld);f.v2.positionWorld.copy(U.positionWorld);
f.v3.positionWorld.copy(V.positionWorld);f.v1.positionScreen.copy(K.positionScreen);f.v2.positionScreen.copy(U.positionScreen);f.v3.positionScreen.copy(V.positionScreen);f.normalWorld.copy(G.normal);X.multiplyVector3(f.normalWorld);f.centroidWorld.copy(G.centroid);da.multiplyVector3(f.centroidWorld);f.centroidScreen.copy(f.centroidWorld);u.multiplyVector3(f.centroidScreen);f.z=f.centroidScreen.z;f.meshMaterials=R;f.faceMaterials=G.materials;f.overdraw=T;if(P.geometry.uvs[y]){f.uvs[0]=P.geometry.uvs[y][0];
f.uvs[1]=P.geometry.uvs[y][1];f.uvs[2]=P.geometry.uvs[y][3]}x.push(f);b++;j=k[b]=k[b]||new THREE.RenderableFace3;j.v1.positionWorld.copy(U.positionWorld);j.v2.positionWorld.copy(S.positionWorld);j.v3.positionWorld.copy(V.positionWorld);j.v1.positionScreen.copy(U.positionScreen);j.v2.positionScreen.copy(S.positionScreen);j.v3.positionScreen.copy(V.positionScreen);j.normalWorld.copy(f.normalWorld);j.centroidWorld.copy(f.centroidWorld);j.centroidScreen.copy(f.centroidScreen);j.z=j.centroidScreen.z;j.meshMaterials=
R;j.faceMaterials=G.materials;j.overdraw=T;if(P.geometry.uvs[y]){j.uvs[0]=P.geometry.uvs[y][1];j.uvs[1]=P.geometry.uvs[y][2];j.uvs[2]=P.geometry.uvs[y][3]}x.push(j);b++}}}}else if(P instanceof THREE.Line){J.multiply(u,da);Y=P.geometry.vertices;G=Y[0];G.positionScreen.copy(G.position);J.multiplyVector4(G.positionScreen);y=1;for(O=Y.length;y<O;y++){K=Y[y];K.positionScreen.copy(K.position);J.multiplyVector4(K.positionScreen);U=Y[y-1];g.copy(K.positionScreen);p.copy(U.positionScreen);if(c(g,p)){g.multiplyScalar(1/
g.w);p.multiplyScalar(1/p.w);l=B[q]=B[q]||new THREE.RenderableLine;l.v1.positionScreen.copy(g);l.v2.positionScreen.copy(p);l.z=Math.max(g.z,p.z);l.materials=P.materials;x.push(l);q++}}}else if(P instanceof THREE.Particle){H.set(P.position.x,P.position.y,P.position.z,1);u.multiplyVector4(H);H.z/=H.w;if(H.z>0&&H.z<1){o=v[t]=v[t]||new THREE.RenderableParticle;o.x=H.x/H.w;o.y=H.y/H.w;o.z=H.z;o.rotation=P.rotation.z;o.scale.x=P.scale.x*Math.abs(o.x-(H.x+z.projectionMatrix.n11)/(H.w+z.projectionMatrix.n14));
o.scale.y=P.scale.y*Math.abs(o.y-(H.y+z.projectionMatrix.n22)/(H.w+z.projectionMatrix.n24));o.materials=P.materials;x.push(o);t++}}}}M&&x.sort(a);return x};this.unprojectVector=function(n,z){var M=THREE.Matrix4.makeInvert(z.matrix);M.multiplySelf(THREE.Matrix4.makeInvert(z.projectionMatrix));M.multiplyVector3(n);return n}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,c=new THREE.Projector,d,e,h,f;this.domElement=document.createElement("div");this.setSize=function(j,b){d=j;e=b;h=d/2;f=e/2};this.render=function(j,b){var k,l,q,B,o,t,v,C;a=c.projectScene(j,b);k=0;for(l=a.length;k<l;k++){o=a[k];if(o instanceof THREE.RenderableParticle){v=o.x*h+h;C=o.y*f+f;q=0;for(B=o.material.length;q<B;q++){t=o.material[q];if(t instanceof THREE.ParticleDOMMaterial){t=t.domElement;t.style.left=v+"px";t.style.top=C+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(ma){if(o!=ma)l.globalAlpha=o=ma}function c(ma){if(t!=ma){switch(ma){case THREE.NormalBlending:l.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:l.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:l.globalCompositeOperation="darker"}t=ma}}var d=null,e=new THREE.Projector,h=document.createElement("canvas"),f,j,b,k,l=h.getContext("2d"),q=null,B=null,o=1,t=0,v=null,C=null,H=1,u,J,m,g,p,A,n,z,M,x=new THREE.Color,
D=new THREE.Color,F=new THREE.Color,E=new THREE.Color,y=new THREE.Color,O,K,U,W,P,da,X,R,T,ba=new THREE.Rectangle,Y=new THREE.Rectangle,G=new THREE.Rectangle,S=false,V=new THREE.Color,ia=new THREE.Color,ha=new THREE.Color,w=new THREE.Color,L=Math.PI*2,I=new THREE.Vector3,Z,ca,ga,ja,qa,sa,ya=16;Z=document.createElement("canvas");Z.width=Z.height=2;ca=Z.getContext("2d");ca.fillStyle="rgba(0,0,0,1)";ca.fillRect(0,0,2,2);ga=ca.getImageData(0,0,2,2);ja=ga.data;qa=document.createElement("canvas");qa.width=
qa.height=ya;sa=qa.getContext("2d");sa.translate(-ya/2,-ya/2);sa.scale(ya,ya);ya--;this.domElement=h;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(ma,wa){f=ma;j=wa;b=f/2;k=j/2;h.width=f;h.height=j;ba.set(-b,-k,b,k);o=1;t=0;C=v=null;H=1};this.setClearColor=function(ma,wa){q=ma!==null?new THREE.Color(ma):null;B=wa;Y.set(-b,-k,b,k);l.setTransform(1,0,0,-1,b,k);this.clear()};this.clear=function(){if(!Y.isEmpty()){Y.inflate(1);Y.minSelf(ba);if(q!==null){c(THREE.NormalBlending);
a(1);l.fillStyle="rgba("+Math.floor(q.r*255)+","+Math.floor(q.g*255)+","+Math.floor(q.b*255)+","+B+")";l.fillRect(Y.getX(),Y.getY(),Y.getWidth(),Y.getHeight())}else l.clearRect(Y.getX(),Y.getY(),Y.getWidth(),Y.getHeight());Y.empty()}};this.render=function(ma,wa){function Pa(N){var ea,aa,Q,$=N.lights;ia.setRGB(0,0,0);ha.setRGB(0,0,0);w.setRGB(0,0,0);N=0;for(ea=$.length;N<ea;N++){aa=$[N];Q=aa.color;if(aa instanceof THREE.AmbientLight){ia.r+=Q.r;ia.g+=Q.g;ia.b+=Q.b}else if(aa instanceof THREE.DirectionalLight){ha.r+=
Q.r;ha.g+=Q.g;ha.b+=Q.b}else if(aa instanceof THREE.PointLight){w.r+=Q.r;w.g+=Q.g;w.b+=Q.b}}}function Da(N,ea,aa,Q){var $,fa,la,na,oa=N.lights;N=0;for($=oa.length;N<$;N++){fa=oa[N];la=fa.color;na=fa.intensity;if(fa instanceof THREE.DirectionalLight){fa=aa.dot(fa.position)*na;if(fa>0){Q.r+=la.r*fa;Q.g+=la.g*fa;Q.b+=la.b*fa}}else if(fa instanceof THREE.PointLight){I.sub(fa.position,ea);I.normalize();fa=aa.dot(I)*na;if(fa>0){Q.r+=la.r*fa;Q.g+=la.g*fa;Q.b+=la.b*fa}}}}function Qa(N,ea,aa){if(aa.opacity!=
0){a(aa.opacity);c(aa.blending);var Q,$,fa,la,na,oa;if(aa instanceof THREE.ParticleBasicMaterial){if(aa.map){la=aa.map;na=la.width>>1;oa=la.height>>1;$=ea.scale.x*b;fa=ea.scale.y*k;aa=$*na;Q=fa*oa;G.set(N.x-aa,N.y-Q,N.x+aa,N.y+Q);if(ba.instersects(G)){l.save();l.translate(N.x,N.y);l.rotate(-ea.rotation);l.scale($,-fa);l.translate(-na,-oa);l.drawImage(la,0,0);l.restore()}}}else if(aa instanceof THREE.ParticleCircleMaterial){if(S){V.r=ia.r+ha.r+w.r;V.g=ia.g+ha.g+w.g;V.b=ia.b+ha.b+w.b;x.r=aa.color.r*
V.r;x.g=aa.color.g*V.g;x.b=aa.color.b*V.b;x.updateStyleString()}else x.__styleString=aa.color.__styleString;aa=ea.scale.x*b;Q=ea.scale.y*k;G.set(N.x-aa,N.y-Q,N.x+aa,N.y+Q);if(ba.instersects(G)){$=x.__styleString;if(C!=$)l.fillStyle=C=$;l.save();l.translate(N.x,N.y);l.rotate(-ea.rotation);l.scale(aa,Q);l.beginPath();l.arc(0,0,1,0,L,true);l.closePath();l.fill();l.restore()}}}}function Ra(N,ea,aa,Q){if(Q.opacity!=0){a(Q.opacity);c(Q.blending);l.beginPath();l.moveTo(N.positionScreen.x,N.positionScreen.y);
l.lineTo(ea.positionScreen.x,ea.positionScreen.y);l.closePath();if(Q instanceof THREE.LineBasicMaterial){x.__styleString=Q.color.__styleString;N=Q.linewidth;if(H!=N)l.lineWidth=H=N;N=x.__styleString;if(v!=N)l.strokeStyle=v=N;l.stroke();G.inflate(Q.linewidth*2)}}}function La(N,ea,aa,Q,$,fa){if($.opacity!=0){a($.opacity);c($.blending);g=N.positionScreen.x;p=N.positionScreen.y;A=ea.positionScreen.x;n=ea.positionScreen.y;z=aa.positionScreen.x;M=aa.positionScreen.y;l.beginPath();l.moveTo(g,p);l.lineTo(A,
n);l.lineTo(z,M);l.lineTo(g,p);l.closePath();if($ instanceof THREE.MeshBasicMaterial)if($.map)$.map.image.loaded&&$.map.mapping instanceof THREE.UVMapping&&Aa(g,p,A,n,z,M,$.map.image,Q.uvs[0].u,Q.uvs[0].v,Q.uvs[1].u,Q.uvs[1].v,Q.uvs[2].u,Q.uvs[2].v);else if($.env_map){if($.env_map.image.loaded)if($.env_map.mapping instanceof THREE.SphericalReflectionMapping){N=wa.matrix;I.copy(Q.vertexNormalsWorld[0]);W=(I.x*N.n11+I.y*N.n12+I.z*N.n13)*0.5+0.5;P=-(I.x*N.n21+I.y*N.n22+I.z*N.n23)*0.5+0.5;I.copy(Q.vertexNormalsWorld[1]);
da=(I.x*N.n11+I.y*N.n12+I.z*N.n13)*0.5+0.5;X=-(I.x*N.n21+I.y*N.n22+I.z*N.n23)*0.5+0.5;I.copy(Q.vertexNormalsWorld[2]);R=(I.x*N.n11+I.y*N.n12+I.z*N.n13)*0.5+0.5;T=-(I.x*N.n21+I.y*N.n22+I.z*N.n23)*0.5+0.5;Aa(g,p,A,n,z,M,$.env_map.image,W,P,da,X,R,T)}}else $.wireframe?Ea($.color.__styleString,$.wireframe_linewidth):Fa($.color.__styleString);else if($ instanceof THREE.MeshLambertMaterial){if($.map&&!$.wireframe){$.map.mapping instanceof THREE.UVMapping&&Aa(g,p,A,n,z,M,$.map.image,Q.uvs[0].u,Q.uvs[0].v,
Q.uvs[1].u,Q.uvs[1].v,Q.uvs[2].u,Q.uvs[2].v);c(THREE.SubtractiveBlending)}if(S)if(!$.wireframe&&$.shading==THREE.SmoothShading&&Q.vertexNormalsWorld.length==3){D.r=F.r=E.r=ia.r;D.g=F.g=E.g=ia.g;D.b=F.b=E.b=ia.b;Da(fa,Q.v1.positionWorld,Q.vertexNormalsWorld[0],D);Da(fa,Q.v2.positionWorld,Q.vertexNormalsWorld[1],F);Da(fa,Q.v3.positionWorld,Q.vertexNormalsWorld[2],E);y.r=(F.r+E.r)*0.5;y.g=(F.g+E.g)*0.5;y.b=(F.b+E.b)*0.5;U=Ma(D,F,E,y);Aa(g,p,A,n,z,M,U,0,0,1,0,0,1)}else{V.r=ia.r;V.g=ia.g;V.b=ia.b;Da(fa,
Q.centroidWorld,Q.normalWorld,V);x.r=$.color.r*V.r;x.g=$.color.g*V.g;x.b=$.color.b*V.b;x.updateStyleString();$.wireframe?Ea(x.__styleString,$.wireframe_linewidth):Fa(x.__styleString)}else $.wireframe?Ea($.color.__styleString,$.wireframe_linewidth):Fa($.color.__styleString)}else if($ instanceof THREE.MeshDepthMaterial){O=wa.near;K=wa.far;D.r=D.g=D.b=1-Ha(N.positionScreen.z,O,K);F.r=F.g=F.b=1-Ha(ea.positionScreen.z,O,K);E.r=E.g=E.b=1-Ha(aa.positionScreen.z,O,K);y.r=(F.r+E.r)*0.5;y.g=(F.g+E.g)*0.5;y.b=
(F.b+E.b)*0.5;U=Ma(D,F,E,y);Aa(g,p,A,n,z,M,U,0,0,1,0,0,1)}else if($ instanceof THREE.MeshNormalMaterial){x.r=Ia(Q.normalWorld.x);x.g=Ia(Q.normalWorld.y);x.b=Ia(Q.normalWorld.z);x.updateStyleString();$.wireframe?Ea(x.__styleString,$.wireframe_linewidth):Fa(x.__styleString)}}}function Ea(N,ea){if(v!=N)l.strokeStyle=v=N;if(H!=ea)l.lineWidth=H=ea;l.stroke();G.inflate(ea*2)}function Fa(N){if(C!=N)l.fillStyle=C=N;l.fill()}function Aa(N,ea,aa,Q,$,fa,la,na,oa,ta,pa,ua,Ba){var xa,va;xa=la.width-1;va=la.height-
1;na*=xa;oa*=va;ta*=xa;pa*=va;ua*=xa;Ba*=va;aa-=N;Q-=ea;$-=N;fa-=ea;ta-=na;pa-=oa;ua-=na;Ba-=oa;va=1/(ta*Ba-ua*pa);xa=(Ba*aa-pa*$)*va;pa=(Ba*Q-pa*fa)*va;aa=(ta*$-ua*aa)*va;Q=(ta*fa-ua*Q)*va;N=N-xa*na-aa*oa;ea=ea-pa*na-Q*oa;l.save();l.transform(xa,pa,aa,Q,N,ea);l.clip();l.drawImage(la,0,0);l.restore()}function Ma(N,ea,aa,Q){var $=~~(N.r*255),fa=~~(N.g*255);N=~~(N.b*255);var la=~~(ea.r*255),na=~~(ea.g*255);ea=~~(ea.b*255);var oa=~~(aa.r*255),ta=~~(aa.g*255);aa=~~(aa.b*255);var pa=~~(Q.r*255),ua=~~(Q.g*
255);Q=~~(Q.b*255);ja[0]=$<0?0:$>255?255:$;ja[1]=fa<0?0:fa>255?255:fa;ja[2]=N<0?0:N>255?255:N;ja[4]=la<0?0:la>255?255:la;ja[5]=na<0?0:na>255?255:na;ja[6]=ea<0?0:ea>255?255:ea;ja[8]=oa<0?0:oa>255?255:oa;ja[9]=ta<0?0:ta>255?255:ta;ja[10]=aa<0?0:aa>255?255:aa;ja[12]=pa<0?0:pa>255?255:pa;ja[13]=ua<0?0:ua>255?255:ua;ja[14]=Q<0?0:Q>255?255:Q;ca.putImageData(ga,0,0);sa.drawImage(Z,0,0);return qa}function Ha(N,ea,aa){N=(N-ea)/(aa-ea);return N*N*(3-2*N)}function Ia(N){N=(N+1)*0.5;return N<0?0:N>1?1:N}function Ja(N,
ea){var aa=ea.x-N.x,Q=ea.y-N.y,$=1/Math.sqrt(aa*aa+Q*Q);aa*=$;Q*=$;ea.x+=aa;ea.y+=Q;N.x-=aa;N.y-=Q}var Ga,Na,ka,ra,za,Ka,Oa,Ca;l.setTransform(1,0,0,-1,b,k);this.autoClear&&this.clear();d=e.projectScene(ma,wa,this.sortElements);(S=ma.lights.length>0)&&Pa(ma);Ga=0;for(Na=d.length;Ga<Na;Ga++){ka=d[Ga];G.empty();if(ka instanceof THREE.RenderableParticle){u=ka;u.x*=b;u.y*=k;ra=0;for(za=ka.materials.length;ra<za;ra++)Qa(u,ka,ka.materials[ra],ma)}else if(ka instanceof THREE.RenderableLine){u=ka.v1;J=ka.v2;
u.positionScreen.x*=b;u.positionScreen.y*=k;J.positionScreen.x*=b;J.positionScreen.y*=k;G.addPoint(u.positionScreen.x,u.positionScreen.y);G.addPoint(J.positionScreen.x,J.positionScreen.y);if(ba.instersects(G)){ra=0;for(za=ka.materials.length;ra<za;)Ra(u,J,ka,ka.materials[ra++],ma)}}else if(ka instanceof THREE.RenderableFace3){u=ka.v1;J=ka.v2;m=ka.v3;u.positionScreen.x*=b;u.positionScreen.y*=k;J.positionScreen.x*=b;J.positionScreen.y*=k;m.positionScreen.x*=b;m.positionScreen.y*=k;if(ka.overdraw){Ja(u.positionScreen,
J.positionScreen);Ja(J.positionScreen,m.positionScreen);Ja(m.positionScreen,u.positionScreen)}G.add3Points(u.positionScreen.x,u.positionScreen.y,J.positionScreen.x,J.positionScreen.y,m.positionScreen.x,m.positionScreen.y);if(ba.instersects(G)){ra=0;for(za=ka.meshMaterials.length;ra<za;){Ca=ka.meshMaterials[ra++];if(Ca instanceof THREE.MeshFaceMaterial){Ka=0;for(Oa=ka.faceMaterials.length;Ka<Oa;)(Ca=ka.faceMaterials[Ka++])&&La(u,J,m,ka,Ca,ma)}else La(u,J,m,ka,Ca,ma)}}}Y.addRectangle(G)}l.setTransform(1,
0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(W,P,da){var X,R,T,ba;X=0;for(R=W.lights.length;X<R;X++){T=W.lights[X];if(T instanceof THREE.DirectionalLight){ba=P.normalWorld.dot(T.position)*T.intensity;if(ba>0){da.r+=T.color.r*ba;da.g+=T.color.g*ba;da.b+=T.color.b*ba}}else if(T instanceof THREE.PointLight){M.sub(T.position,P.centroidWorld);M.normalize();ba=P.normalWorld.dot(M)*T.intensity;if(ba>0){da.r+=T.color.r*ba;da.g+=T.color.g*ba;da.b+=T.color.b*ba}}}}function c(W,P,da,X,R,T){E=e(y++);E.setAttribute("d",
"M "+W.positionScreen.x+" "+W.positionScreen.y+" L "+P.positionScreen.x+" "+P.positionScreen.y+" L "+da.positionScreen.x+","+da.positionScreen.y+"z");if(R instanceof THREE.MeshBasicMaterial)m.__styleString=R.color.__styleString;else if(R instanceof THREE.MeshLambertMaterial)if(J){g.r=p.r;g.g=p.g;g.b=p.b;a(T,X,g);m.r=R.color.r*g.r;m.g=R.color.g*g.g;m.b=R.color.b*g.b;m.updateStyleString()}else m.__styleString=R.color.__styleString;else if(R instanceof THREE.MeshDepthMaterial){z=1-R.__2near/(R.__farPlusNear-
X.z*R.__farMinusNear);m.setRGB(z,z,z)}else R instanceof THREE.MeshNormalMaterial&&m.setRGB(h(X.normalWorld.x),h(X.normalWorld.y),h(X.normalWorld.z));R.wireframe?E.setAttribute("style","fill: none; stroke: "+m.__styleString+"; stroke-width: "+R.wireframe_linewidth+"; stroke-opacity: "+R.opacity+"; stroke-linecap: "+R.wireframe_linecap+"; stroke-linejoin: "+R.wireframe_linejoin):E.setAttribute("style","fill: "+m.__styleString+"; fill-opacity: "+R.opacity);b.appendChild(E)}function d(W,P,da,X,R,T,ba){E=
e(y++);E.setAttribute("d","M "+W.positionScreen.x+" "+W.positionScreen.y+" L "+P.positionScreen.x+" "+P.positionScreen.y+" L "+da.positionScreen.x+","+da.positionScreen.y+" L "+X.positionScreen.x+","+X.positionScreen.y+"z");if(T instanceof THREE.MeshBasicMaterial)m.__styleString=T.color.__styleString;else if(T instanceof THREE.MeshLambertMaterial)if(J){g.r=p.r;g.g=p.g;g.b=p.b;a(ba,R,g);m.r=T.color.r*g.r;m.g=T.color.g*g.g;m.b=T.color.b*g.b;m.updateStyleString()}else m.__styleString=T.color.__styleString;
else if(T instanceof THREE.MeshDepthMaterial){z=1-T.__2near/(T.__farPlusNear-R.z*T.__farMinusNear);m.setRGB(z,z,z)}else T instanceof THREE.MeshNormalMaterial&&m.setRGB(h(R.normalWorld.x),h(R.normalWorld.y),h(R.normalWorld.z));T.wireframe?E.setAttribute("style","fill: none; stroke: "+m.__styleString+"; stroke-width: "+T.wireframe_linewidth+"; stroke-opacity: "+T.opacity+"; stroke-linecap: "+T.wireframe_linecap+"; stroke-linejoin: "+T.wireframe_linejoin):E.setAttribute("style","fill: "+m.__styleString+
"; fill-opacity: "+T.opacity);b.appendChild(E)}function e(W){if(x[W]==null){x[W]=document.createElementNS("http://www.w3.org/2000/svg","path");U==0&&x[W].setAttribute("shape-rendering","crispEdges");return x[W]}return x[W]}function h(W){return W<0?Math.min((1+W)*0.5,0.5):0.5+Math.min(W*0.5,0.5)}var f=null,j=new THREE.Projector,b=document.createElementNS("http://www.w3.org/2000/svg","svg"),k,l,q,B,o,t,v,C,H=new THREE.Rectangle,u=new THREE.Rectangle,J=false,m=new THREE.Color(16777215),g=new THREE.Color(16777215),
p=new THREE.Color(0),A=new THREE.Color(0),n=new THREE.Color(0),z,M=new THREE.Vector3,x=[],D=[],F=[],E,y,O,K,U=1;this.domElement=b;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(W){switch(W){case "high":U=1;break;case "low":U=0}};this.setSize=function(W,P){k=W;l=P;q=k/2;B=l/2;b.setAttribute("viewBox",-q+" "+-B+" "+k+" "+l);b.setAttribute("width",k);b.setAttribute("height",l);H.set(-q,-B,q,B)};this.clear=function(){for(;b.childNodes.length>0;)b.removeChild(b.childNodes[0])};
this.render=function(W,P){var da,X,R,T,ba,Y,G,S;this.autoClear&&this.clear();f=j.projectScene(W,P,this.sortElements);K=O=y=0;if(J=W.lights.length>0){G=W.lights;p.setRGB(0,0,0);A.setRGB(0,0,0);n.setRGB(0,0,0);da=0;for(X=G.length;da<X;da++){R=G[da];T=R.color;if(R instanceof THREE.AmbientLight){p.r+=T.r;p.g+=T.g;p.b+=T.b}else if(R instanceof THREE.DirectionalLight){A.r+=T.r;A.g+=T.g;A.b+=T.b}else if(R instanceof THREE.PointLight){n.r+=T.r;n.g+=T.g;n.b+=T.b}}}da=0;for(X=f.length;da<X;da++){G=f[da];u.empty();
if(G instanceof THREE.RenderableParticle){o=G;o.x*=q;o.y*=-B;R=0;for(T=G.materials.length;R<T;R++)if(S=G.materials[R]){ba=o;Y=G;S=S;var V=O++;if(D[V]==null){D[V]=document.createElementNS("http://www.w3.org/2000/svg","circle");U==0&&D[V].setAttribute("shape-rendering","crispEdges")}E=D[V];E.setAttribute("cx",ba.x);E.setAttribute("cy",ba.y);E.setAttribute("r",Y.scale.x*q);if(S instanceof THREE.ParticleCircleMaterial){if(J){g.r=p.r+A.r+n.r;g.g=p.g+A.g+n.g;g.b=p.b+A.b+n.b;m.r=S.color.r*g.r;m.g=S.color.g*
g.g;m.b=S.color.b*g.b;m.updateStyleString()}else m=S.color;E.setAttribute("style","fill: "+m.__styleString)}b.appendChild(E)}}else if(G instanceof THREE.RenderableLine){o=G.v1;t=G.v2;o.positionScreen.x*=q;o.positionScreen.y*=-B;t.positionScreen.x*=q;t.positionScreen.y*=-B;u.addPoint(o.positionScreen.x,o.positionScreen.y);u.addPoint(t.positionScreen.x,t.positionScreen.y);if(H.instersects(u)){R=0;for(T=G.materials.length;R<T;)if(S=G.materials[R++]){ba=o;Y=t;S=S;V=K++;if(F[V]==null){F[V]=document.createElementNS("http://www.w3.org/2000/svg",
"line");U==0&&F[V].setAttribute("shape-rendering","crispEdges")}E=F[V];E.setAttribute("x1",ba.positionScreen.x);E.setAttribute("y1",ba.positionScreen.y);E.setAttribute("x2",Y.positionScreen.x);E.setAttribute("y2",Y.positionScreen.y);if(S instanceof THREE.LineBasicMaterial){m.__styleString=S.color.__styleString;E.setAttribute("style","fill: none; stroke: "+m.__styleString+"; stroke-width: "+S.linewidth+"; stroke-opacity: "+S.opacity+"; stroke-linecap: "+S.linecap+"; stroke-linejoin: "+S.linejoin);
b.appendChild(E)}}}}else if(G instanceof THREE.RenderableFace3){o=G.v1;t=G.v2;v=G.v3;o.positionScreen.x*=q;o.positionScreen.y*=-B;t.positionScreen.x*=q;t.positionScreen.y*=-B;v.positionScreen.x*=q;v.positionScreen.y*=-B;u.addPoint(o.positionScreen.x,o.positionScreen.y);u.addPoint(t.positionScreen.x,t.positionScreen.y);u.addPoint(v.positionScreen.x,v.positionScreen.y);if(H.instersects(u)){R=0;for(T=G.meshMaterials.length;R<T;){S=G.meshMaterials[R++];if(S instanceof THREE.MeshFaceMaterial){ba=0;for(Y=
G.faceMaterials.length;ba<Y;)(S=G.faceMaterials[ba++])&&c(o,t,v,G,S,W)}else S&&c(o,t,v,G,S,W)}}}else if(G instanceof THREE.RenderableFace4){o=G.v1;t=G.v2;v=G.v3;C=G.v4;o.positionScreen.x*=q;o.positionScreen.y*=-B;t.positionScreen.x*=q;t.positionScreen.y*=-B;v.positionScreen.x*=q;v.positionScreen.y*=-B;C.positionScreen.x*=q;C.positionScreen.y*=-B;u.addPoint(o.positionScreen.x,o.positionScreen.y);u.addPoint(t.positionScreen.x,t.positionScreen.y);u.addPoint(v.positionScreen.x,v.positionScreen.y);u.addPoint(C.positionScreen.x,
C.positionScreen.y);if(H.instersects(u)){R=0;for(T=G.meshMaterials.length;R<T;){S=G.meshMaterials[R++];if(S instanceof THREE.MeshFaceMaterial){ba=0;for(Y=G.faceMaterials.length;ba<Y;)(S=G.faceMaterials[ba++])&&d(o,t,v,C,G,S,W)}else S&&d(o,t,v,C,G,S,W)}}}}}};
THREE.WebGLRenderer=function(a){function c(g,p){g.fragment_shader=p.fragment_shader;g.vertex_shader=p.vertex_shader;g.uniforms=Uniforms.clone(p.uniforms)}function d(g,p){g.uniforms.color.value.setRGB(g.color.r*g.opacity,g.color.g*g.opacity,g.color.b*g.opacity);g.uniforms.opacity.value=g.opacity;g.uniforms.map.texture=g.map;g.uniforms.env_map.texture=g.env_map;g.uniforms.reflectivity.value=g.reflectivity;g.uniforms.refraction_ratio.value=g.refraction_ratio;g.uniforms.combine.value=g.combine;g.uniforms.useRefract.value=
g.env_map&&g.env_map.mapping instanceof THREE.CubeRefractionMapping;if(p){g.uniforms.fogColor.value.setHex(p.color.hex);if(p instanceof THREE.Fog){g.uniforms.fogNear.value=p.near;g.uniforms.fogFar.value=p.far}else if(p instanceof THREE.FogExp2)g.uniforms.fogDensity.value=p.density}}function e(g,p){g.uniforms.color.value.setRGB(g.color.r*g.opacity,g.color.g*g.opacity,g.color.b*g.opacity);g.uniforms.opacity.value=g.opacity;if(p){g.uniforms.fogColor.value.setHex(p.color.hex);if(p instanceof THREE.Fog){g.uniforms.fogNear.value=
p.near;g.uniforms.fogFar.value=p.far}else if(p instanceof THREE.FogExp2)g.uniforms.fogDensity.value=p.density}}function h(g,p){var A;if(g=="fragment")A=b.createShader(b.FRAGMENT_SHADER);else if(g=="vertex")A=b.createShader(b.VERTEX_SHADER);b.shaderSource(A,p);b.compileShader(A);if(!b.getShaderParameter(A,b.COMPILE_STATUS)){alert(b.getShaderInfoLog(A));return null}return A}function f(g){switch(g){case THREE.RepeatWrapping:return b.REPEAT;case THREE.ClampToEdgeWrapping:return b.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return b.MIRRORED_REPEAT;
case THREE.NearestFilter:return b.NEAREST;case THREE.NearestMipMapNearestFilter:return b.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return b.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return b.LINEAR;case THREE.LinearMipMapNearestFilter:return b.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return b.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return b.BYTE;case THREE.UnsignedByteType:return b.UNSIGNED_BYTE;case THREE.ShortType:return b.SHORT;case THREE.UnsignedShortType:return b.UNSIGNED_SHORT;
case THREE.IntType:return b.INT;case THREE.UnsignedShortType:return b.UNSIGNED_INT;case THREE.FloatType:return b.FLOAT;case THREE.AlphaFormat:return b.ALPHA;case THREE.RGBFormat:return b.RGB;case THREE.RGBAFormat:return b.RGBA;case THREE.LuminanceFormat:return b.LUMINANCE;case THREE.LuminanceAlphaFormat:return b.LUMINANCE_ALPHA}return 0}var j=document.createElement("canvas"),b,k=null,l=null,q=new THREE.Matrix4,B,o=new Float32Array(16),t=new Float32Array(16),v=new Float32Array(16),C=new Float32Array(9),
H=new Float32Array(16),u=true,J=new THREE.Color(0),m=0;if(a){if(a.antialias!==undefined)u=a.antialias;a.clearColor!==undefined&&J.setHex(a.clearColor);if(a.clearAlpha!==undefined)m=a.clearAlpha}this.domElement=j;this.autoClear=true;(function(g,p,A){try{b=j.getContext("experimental-webgl",{antialias:g})}catch(n){}if(!b){alert("WebGL not supported");throw"cannot create webgl context";}b.clearColor(0,0,0,1);b.clearDepth(1);b.enable(b.DEPTH_TEST);b.depthFunc(b.LEQUAL);b.frontFace(b.CCW);b.cullFace(b.BACK);
b.enable(b.CULL_FACE);b.enable(b.BLEND);b.blendFunc(b.ONE,b.ONE_MINUS_SRC_ALPHA);b.clearColor(p.r,p.g,p.b,A)})(u,J,m);this.context=b;this.lights={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[]}};this.setSize=function(g,p){j.width=g;j.height=p;b.viewport(0,0,j.width,j.height)};this.setClearColor=function(g,p){var A=new THREE.Color(g);b.clearColor(A.r,A.g,A.b,p)};this.clear=function(){b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT)};this.setupLights=
function(g,p){var A,n,z,M=0,x=0,D=0,F,E,y,O=this.lights,K=O.directional.colors,U=O.directional.positions,W=O.point.colors,P=O.point.positions,da=0,X=0;A=0;for(n=p.length;A<n;A++){z=p[A];F=z.color;E=z.position;y=z.intensity;if(z instanceof THREE.AmbientLight){M+=F.r;x+=F.g;D+=F.b}else if(z instanceof THREE.DirectionalLight){K[da*3]=F.r*y;K[da*3+1]=F.g*y;K[da*3+2]=F.b*y;U[da*3]=E.x;U[da*3+1]=E.y;U[da*3+2]=E.z;da+=1}else if(z instanceof THREE.PointLight){W[X*3]=F.r*y;W[X*3+1]=F.g*y;W[X*3+2]=F.b*y;P[X*
3]=E.x;P[X*3+1]=E.y;P[X*3+2]=E.z;X+=1}}O.point.length=X;O.directional.length=da;O.ambient[0]=M;O.ambient[1]=x;O.ambient[2]=D};this.createParticleBuffers=function(g){g.__webGLVertexBuffer=b.createBuffer();g.__webGLFaceBuffer=b.createBuffer()};this.createLineBuffers=function(g){g.__webGLVertexBuffer=b.createBuffer();g.__webGLLineBuffer=b.createBuffer()};this.createMeshBuffers=function(g){g.__webGLVertexBuffer=b.createBuffer();g.__webGLNormalBuffer=b.createBuffer();g.__webGLTangentBuffer=b.createBuffer();
g.__webGLUVBuffer=b.createBuffer();g.__webGLFaceBuffer=b.createBuffer();g.__webGLLineBuffer=b.createBuffer()};this.initLineBuffers=function(g){var p=g.vertices.length;g.__vertexArray=new Float32Array(p*3);g.__lineArray=new Uint16Array(p);g.__webGLLineCount=p};this.initMeshBuffers=function(g,p){var A,n,z=0,M=0,x=0,D=p.geometry.faces,F=g.faces;A=0;for(n=F.length;A<n;A++){fi=F[A];face=D[fi];if(face instanceof THREE.Face3){z+=3;M+=1;x+=3}else if(face instanceof THREE.Face4){z+=4;M+=2;x+=4}}g.__vertexArray=
new Float32Array(z*3);g.__normalArray=new Float32Array(z*3);g.__tangentArray=new Float32Array(z*4);g.__uvArray=new Float32Array(z*2);g.__faceArray=new Uint16Array(M*3);g.__lineArray=new Uint16Array(x*2);z=false;A=0;for(n=p.materials.length;A<n;A++){D=p.materials[A];if(D instanceof THREE.MeshFaceMaterial){D=0;for(F=g.materials.length;D<F;D++)if(g.materials[D]&&g.materials[D].shading!=undefined&&g.materials[D].shading==THREE.SmoothShading){z=true;break}}else if(D&&D.shading!=undefined&&D.shading==THREE.SmoothShading){z=
true;break}if(z)break}g.__needsSmoothNormals=z;g.__webGLFaceCount=M*3;g.__webGLLineCount=x*2};this.setMeshBuffers=function(g,p,A,n,z,M,x,D){var F,E,y,O,K,U,W,P,da,X=0,R=0,T=0,ba=0,Y=0,G=0,S=0,V=g.__vertexArray,ia=g.__uvArray,ha=g.__normalArray,w=g.__tangentArray,L=g.__faceArray,I=g.__lineArray,Z=g.__needsSmoothNormals,ca=p.geometry,ga=ca.vertices,ja=g.faces,qa=ca.faces,sa=ca.uvs;p=0;for(F=ja.length;p<F;p++){E=ja[p];y=qa[E];E=sa[E];O=y.vertexNormals;K=y.normal;if(y instanceof THREE.Face3){if(n){U=
ga[y.a].position;W=ga[y.b].position;P=ga[y.c].position;V[R]=U.x;V[R+1]=U.y;V[R+2]=U.z;V[R+3]=W.x;V[R+4]=W.y;V[R+5]=W.z;V[R+6]=P.x;V[R+7]=P.y;V[R+8]=P.z;R+=9}if(D&&ca.hasTangents){U=ga[y.a].tangent;W=ga[y.b].tangent;P=ga[y.c].tangent;w[G]=U.x;w[G+1]=U.y;w[G+2]=U.z;w[G+3]=U.w;w[G+4]=W.x;w[G+5]=W.y;w[G+6]=W.z;w[G+7]=W.w;w[G+8]=P.x;w[G+9]=P.y;w[G+10]=P.z;w[G+11]=P.w;G+=12}if(x)if(O.length==3&&Z)for(y=0;y<3;y++){K=O[y];ha[Y]=K.x;ha[Y+1]=K.y;ha[Y+2]=K.z;Y+=3}else for(y=0;y<3;y++){ha[Y]=K.x;ha[Y+1]=K.y;
ha[Y+2]=K.z;Y+=3}if(M&&E)for(y=0;y<3;y++){O=E[y];ia[T]=O.u;ia[T+1]=O.v;T+=2}if(z){L[ba]=X;L[ba+1]=X+1;L[ba+2]=X+2;ba+=3;I[S]=X;I[S+1]=X+1;I[S+2]=X;I[S+3]=X+2;I[S+4]=X+1;I[S+5]=X+2;S+=6;X+=3}}else if(y instanceof THREE.Face4){if(n){U=ga[y.a].position;W=ga[y.b].position;P=ga[y.c].position;da=ga[y.d].position;V[R]=U.x;V[R+1]=U.y;V[R+2]=U.z;V[R+3]=W.x;V[R+4]=W.y;V[R+5]=W.z;V[R+6]=P.x;V[R+7]=P.y;V[R+8]=P.z;V[R+9]=da.x;V[R+10]=da.y;V[R+11]=da.z;R+=12}if(D&&ca.hasTangents){U=ga[y.a].tangent;W=ga[y.b].tangent;
P=ga[y.c].tangent;y=ga[y.d].tangent;w[G]=U.x;w[G+1]=U.y;w[G+2]=U.z;w[G+3]=U.w;w[G+4]=W.x;w[G+5]=W.y;w[G+6]=W.z;w[G+7]=W.w;w[G+8]=P.x;w[G+9]=P.y;w[G+10]=P.z;w[G+11]=P.w;w[G+12]=y.x;w[G+13]=y.y;w[G+14]=y.z;w[G+15]=y.w;G+=16}if(x)if(O.length==4&&Z)for(y=0;y<4;y++){K=O[y];ha[Y]=K.x;ha[Y+1]=K.y;ha[Y+2]=K.z;Y+=3}else for(y=0;y<4;y++){ha[Y]=K.x;ha[Y+1]=K.y;ha[Y+2]=K.z;Y+=3}if(M&&E)for(y=0;y<4;y++){O=E[y];ia[T]=O.u;ia[T+1]=O.v;T+=2}if(z){L[ba]=X;L[ba+1]=X+1;L[ba+2]=X+2;L[ba+3]=X;L[ba+4]=X+2;L[ba+5]=X+3;ba+=
6;I[S]=X;I[S+1]=X+1;I[S+2]=X;I[S+3]=X+3;I[S+4]=X+1;I[S+5]=X+2;I[S+6]=X+2;I[S+7]=X+3;S+=8;X+=4}}}if(n){b.bindBuffer(b.ARRAY_BUFFER,g.__webGLVertexBuffer);b.bufferData(b.ARRAY_BUFFER,V,A)}if(x){b.bindBuffer(b.ARRAY_BUFFER,g.__webGLNormalBuffer);b.bufferData(b.ARRAY_BUFFER,ha,A)}if(D&&ca.hasTangents){b.bindBuffer(b.ARRAY_BUFFER,g.__webGLTangentBuffer);b.bufferData(b.ARRAY_BUFFER,w,A)}if(M&&T>0){b.bindBuffer(b.ARRAY_BUFFER,g.__webGLUVBuffer);b.bufferData(b.ARRAY_BUFFER,ia,A)}if(z){b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,
g.__webGLFaceBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,L,A);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g.__webGLLineBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,I,A)}};this.setLineBuffers=function(g,p,A,n){var z,M,x=g.vertices,D=x.length,F=g.__vertexArray,E=g.__lineArray;if(A)for(A=0;A<D;A++){z=x[A].position;M=A*3;F[M]=z.x;F[M+1]=z.y;F[M+2]=z.z}if(n)for(A=0;A<D;A++)E[A]=A;b.bindBuffer(b.ARRAY_BUFFER,g.__webGLVertexBuffer);b.bufferData(b.ARRAY_BUFFER,F,p);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g.__webGLLineBuffer);
b.bufferData(b.ELEMENT_ARRAY_BUFFER,E,p)};this.setParticleBuffers=function(){};this.renderBuffer=function(g,p,A,n,z,M){var x,D,F,E;if(!n.program){if(n instanceof THREE.MeshDepthMaterial){c(n,THREE.ShaderLib.depth);n.uniforms.mNear.value=g.near;n.uniforms.mFar.value=g.far}else if(n instanceof THREE.MeshNormalMaterial)c(n,THREE.ShaderLib.normal);else if(n instanceof THREE.MeshBasicMaterial){c(n,THREE.ShaderLib.basic);d(n,A)}else if(n instanceof THREE.MeshLambertMaterial){c(n,THREE.ShaderLib.lambert);
d(n,A)}else if(n instanceof THREE.MeshPhongMaterial){c(n,THREE.ShaderLib.phong);d(n,A)}else if(n instanceof THREE.LineBasicMaterial){c(n,THREE.ShaderLib.basic);e(n,A)}var y,O,K;y=E=D=0;for(O=p.length;y<O;y++){K=p[y];K instanceof THREE.DirectionalLight&&E++;K instanceof THREE.PointLight&&D++}if(D+E<=4){y=E;D=D}else{y=Math.ceil(4*E/(D+E));D=4-y}D={directional:y,point:D};E={fog:A,map:n.map,env_map:n.env_map,maxDirLights:D.directional,maxPointLights:D.point};D=n.fragment_shader;y=n.vertex_shader;O=b.createProgram();
K=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+E.maxDirLights,"#define MAX_POINT_LIGHTS "+E.maxPointLights,E.fog?"#define USE_FOG":"",E.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",E.map?"#define USE_MAP":"",E.env_map?"#define USE_ENVMAP":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");E=[b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+E.maxDirLights,"#define MAX_POINT_LIGHTS "+E.maxPointLights,
E.map?"#define USE_MAP":"",E.env_map?"#define USE_ENVMAP":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n"].join("\n");b.attachShader(O,h("fragment",K+D));b.attachShader(O,h("vertex",E+y));b.linkProgram(O);b.getProgramParameter(O,b.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+
b.getProgramParameter(O,b.VALIDATE_STATUS)+", gl error ["+b.getError()+"]");O.uniforms={};O.attributes={};n.program=O;D=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(x in n.uniforms)D.push(x);x=n.program;y=0;for(O=D.length;y<O;y++){K=D[y];x.uniforms[K]=b.getUniformLocation(x,K)}x=n.program;D=["position","normal","uv","tangent"];y=0;for(O=D.length;y<O;y++){K=D[y];x.attributes[K]=b.getAttribLocation(x,K)}}x=n.program;if(x!=k){b.useProgram(x);
k=x}this.loadCamera(x,g);this.loadMatrices(x);if(n instanceof THREE.MeshPhongMaterial||n instanceof THREE.MeshLambertMaterial){this.setupLights(x,p);g=this.lights;n.uniforms.enableLighting.value=g.directional.length+g.point.length;n.uniforms.ambientLightColor.value=g.ambient;n.uniforms.directionalLightColor.value=g.directional.colors;n.uniforms.directionalLightDirection.value=g.directional.positions;n.uniforms.pointLightColor.value=g.point.colors;n.uniforms.pointLightPosition.value=g.point.positions}if(n instanceof
THREE.MeshBasicMaterial||n instanceof THREE.MeshLambertMaterial||n instanceof THREE.MeshPhongMaterial)d(n,A);n instanceof THREE.LineBasicMaterial&&e(n,A);if(n instanceof THREE.MeshPhongMaterial){n.uniforms.ambient.value.setRGB(n.ambient.r,n.ambient.g,n.ambient.b);n.uniforms.specular.value.setRGB(n.specular.r,n.specular.g,n.specular.b);n.uniforms.shininess.value=n.shininess}A=n.uniforms;for(F in A)if(y=x.uniforms[F]){p=A[F];D=p.type;g=p.value;if(D=="i")b.uniform1i(y,g);else if(D=="f")b.uniform1f(y,
g);else if(D=="fv1")b.uniform1fv(y,g);else if(D=="fv")b.uniform3fv(y,g);else if(D=="v2")b.uniform2f(y,g.x,g.y);else if(D=="v3")b.uniform3f(y,g.x,g.y,g.z);else if(D=="c")b.uniform3f(y,g.r,g.g,g.b);else if(D=="t"){b.uniform1i(y,g);if(p=p.texture)if(p.image instanceof Array&&p.image.length==6){p=p;g=g;if(p.image.length==6){if(!p.image.__webGLTextureCube&&!p.image.__cubeMapInitialized&&p.image.loadCount==6){p.image.__webGLTextureCube=b.createTexture();b.bindTexture(b.TEXTURE_CUBE_MAP,p.image.__webGLTextureCube);
b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_MAG_FILTER,b.LINEAR);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_MIN_FILTER,b.LINEAR_MIPMAP_LINEAR);for(D=0;D<6;++D)b.texImage2D(b.TEXTURE_CUBE_MAP_POSITIVE_X+D,0,b.RGBA,b.RGBA,b.UNSIGNED_BYTE,p.image[D]);b.generateMipmap(b.TEXTURE_CUBE_MAP);b.bindTexture(b.TEXTURE_CUBE_MAP,null);p.image.__cubeMapInitialized=true}b.activeTexture(b.TEXTURE0+
g);b.bindTexture(b.TEXTURE_CUBE_MAP,p.image.__webGLTextureCube)}}else{p=p;g=g;if(!p.__webGLTexture&&p.image.loaded){p.__webGLTexture=b.createTexture();b.bindTexture(b.TEXTURE_2D,p.__webGLTexture);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,b.RGBA,b.UNSIGNED_BYTE,p.image);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,f(p.wrap_s));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,f(p.wrap_t));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,f(p.mag_filter));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,f(p.min_filter));
b.generateMipmap(b.TEXTURE_2D);b.bindTexture(b.TEXTURE_2D,null)}b.activeTexture(b.TEXTURE0+g);b.bindTexture(b.TEXTURE_2D,p.__webGLTexture)}}}F=x.attributes;b.bindBuffer(b.ARRAY_BUFFER,z.__webGLVertexBuffer);b.vertexAttribPointer(F.position,3,b.FLOAT,false,0,0);b.enableVertexAttribArray(F.position);if(F.normal>=0){b.bindBuffer(b.ARRAY_BUFFER,z.__webGLNormalBuffer);b.vertexAttribPointer(F.normal,3,b.FLOAT,false,0,0);b.enableVertexAttribArray(F.normal)}if(F.tangent>=0){b.bindBuffer(b.ARRAY_BUFFER,z.__webGLTangentBuffer);
b.vertexAttribPointer(F.tangent,4,b.FLOAT,false,0,0);b.enableVertexAttribArray(F.tangent)}if(F.uv>=0)if(z.__webGLUVBuffer){b.bindBuffer(b.ARRAY_BUFFER,z.__webGLUVBuffer);b.vertexAttribPointer(F.uv,2,b.FLOAT,false,0,0);b.enableVertexAttribArray(F.uv)}else b.disableVertexAttribArray(F.uv);if(n.wireframe||n instanceof THREE.LineBasicMaterial){F=n.wireframe_linewidth!==undefined?n.wireframe_linewidth:n.linewidth!==undefined?n.linewidth:1;n=n instanceof THREE.LineBasicMaterial&&M.type==THREE.LineStrip?
b.LINE_STRIP:b.LINES;b.lineWidth(F);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,z.__webGLLineBuffer);b.drawElements(n,z.__webGLLineCount,b.UNSIGNED_SHORT,0)}else{b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,z.__webGLFaceBuffer);b.drawElements(b.TRIANGLES,z.__webGLFaceCount,b.UNSIGNED_SHORT,0)}};this.renderPass=function(g,p,A,n,z,M,x){var D,F,E,y,O;E=0;for(y=n.materials.length;E<y;E++){D=n.materials[E];if(D instanceof THREE.MeshFaceMaterial){D=0;for(F=z.materials.length;D<F;D++)if((O=z.materials[D])&&O.blending==M&&
O.opacity<1==x){this.setBlending(O.blending);this.renderBuffer(g,p,A,O,z,n)}}else if((O=D)&&O.blending==M&&O.opacity<1==x){this.setBlending(O.blending);this.renderBuffer(g,p,A,O,z,n)}}};this.render=function(g,p,A,n){var z,M,x,D=g.lights,F=g.fog;this.initWebGLObjects(g);n=n!==undefined?n:true;if(A&&!A.__webGLFramebuffer){A.__webGLFramebuffer=b.createFramebuffer();A.__webGLRenderbuffer=b.createRenderbuffer();A.__webGLTexture=b.createTexture();b.bindRenderbuffer(b.RENDERBUFFER,A.__webGLRenderbuffer);
b.renderbufferStorage(b.RENDERBUFFER,b.DEPTH_COMPONENT16,A.width,A.height);b.bindTexture(b.TEXTURE_2D,A.__webGLTexture);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,f(A.wrap_s));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,f(A.wrap_t));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,f(A.mag_filter));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,f(A.min_filter));b.texImage2D(b.TEXTURE_2D,0,f(A.format),A.width,A.height,0,f(A.format),f(A.type),null);b.bindFramebuffer(b.FRAMEBUFFER,A.__webGLFramebuffer);
b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,A.__webGLTexture,0);b.framebufferRenderbuffer(b.FRAMEBUFFER,b.DEPTH_ATTACHMENT,b.RENDERBUFFER,A.__webGLRenderbuffer);b.bindTexture(b.TEXTURE_2D,null);b.bindRenderbuffer(b.RENDERBUFFER,null);b.bindFramebuffer(b.FRAMEBUFFER,null)}if(A){z=A.__webGLFramebuffer;x=A.width;M=A.height}else{z=null;x=j.width;M=j.height}if(z!=l){b.bindFramebuffer(b.FRAMEBUFFER,z);b.viewport(0,0,x,M);n&&b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT);l=z}this.autoClear&&
this.clear();p.autoUpdateMatrix&&p.updateMatrix();o.set(p.matrix.flatten());v.set(p.projectionMatrix.flatten());n=0;for(z=g.__webGLObjects.length;n<z;n++){M=g.__webGLObjects[n];x=M.object;M=M.buffer;if(x.visible){this.setupMatrices(x,p);this.renderPass(p,D,F,x,M,THREE.NormalBlending,false)}}n=0;for(z=g.__webGLObjects.length;n<z;n++){M=g.__webGLObjects[n];x=M.object;M=M.buffer;if(x.visible){this.setupMatrices(x,p);if(x.doubleSided)b.disable(b.CULL_FACE);else{b.enable(b.CULL_FACE);x.flipSided?b.frontFace(b.CW):
b.frontFace(b.CCW)}this.renderPass(p,D,F,x,M,THREE.AdditiveBlending,false);this.renderPass(p,D,F,x,M,THREE.SubtractiveBlending,false);this.renderPass(p,D,F,x,M,THREE.AdditiveBlending,true);this.renderPass(p,D,F,x,M,THREE.SubtractiveBlending,true);this.renderPass(p,D,F,x,M,THREE.NormalBlending,true)}}if(A&&A.min_filter!==THREE.NearestFilter&&A.min_filter!==THREE.LinearFilter){b.bindTexture(b.TEXTURE_2D,A.__webGLTexture);b.generateMipmap(b.TEXTURE_2D);b.bindTexture(b.TEXTURE_2D,null)}};this.initWebGLObjects=
function(g){function p(E,y,O,K){if(E[y]==undefined){g.__webGLObjects.push({buffer:O,object:K});E[y]=1}}var A,n,z,M,x,D,F;if(!g.__webGLObjects){g.__webGLObjects=[];g.__webGLObjectsMap={}}A=0;for(n=g.objects.length;A<n;A++){z=g.objects[A];x=z.geometry;if(g.__webGLObjectsMap[z.id]==undefined)g.__webGLObjectsMap[z.id]={};F=g.__webGLObjectsMap[z.id];if(z instanceof THREE.Mesh){for(M in x.geometryChunks){D=x.geometryChunks[M];if(!D.__webGLVertexBuffer){this.createMeshBuffers(D);this.initMeshBuffers(D,z);
x.__dirtyVertices=true;x.__dirtyElements=true;x.__dirtyUvs=true;x.__dirtyNormals=true;x.__dirtyTangents=true}if(x.__dirtyVertices||x.__dirtyElements||x.__dirtyUvs)this.setMeshBuffers(D,z,b.DYNAMIC_DRAW,x.__dirtyVertices,x.__dirtyElements,x.__dirtyUvs,x.__dirtyNormals,x.__dirtyTangents);p(F,M,D,z)}x.__dirtyVertices=false;x.__dirtyElements=false;x.__dirtyUvs=false;x.__dirtyNormals=false;x.__dirtyTangents=false}else if(z instanceof THREE.Line){if(!x.__webGLVertexBuffer){this.createLineBuffers(x);this.initLineBuffers(x);
x.__dirtyVertices=true;x.__dirtyElements=true}x.__dirtyVertices&&this.setLineBuffers(x,b.DYNAMIC_DRAW,x.__dirtyVertices,x.__dirtyElements);p(F,0,x,z);x.__dirtyVertices=false;x.__dirtyElements=false}else if(z instanceof THREE.ParticleSystem){x.__webGLVertexBuffer||this.createParticleBuffers(x);p(F,0,x,z)}}};this.removeObject=function(g,p){var A,n;for(A=g.__webGLObjects.length-1;A>=0;A--){n=g.__webGLObjects[A].object;p==n&&g.__webGLObjects.splice(A,1)}};this.setupMatrices=function(g,p){g.autoUpdateMatrix&&
g.updateMatrix();q.multiply(p.matrix,g.matrix);t.set(q.flatten());B=THREE.Matrix4.makeInvert3x3(q).transpose();C.set(B.m);H.set(g.matrix.flatten())};this.loadMatrices=function(g){b.uniformMatrix4fv(g.uniforms.viewMatrix,false,o);b.uniformMatrix4fv(g.uniforms.modelViewMatrix,false,t);b.uniformMatrix4fv(g.uniforms.projectionMatrix,false,v);b.uniformMatrix3fv(g.uniforms.normalMatrix,false,C);b.uniformMatrix4fv(g.uniforms.objectMatrix,false,H)};this.loadCamera=function(g,p){b.uniform3f(g.uniforms.cameraPosition,
p.position.x,p.position.y,p.position.z)};this.setBlending=function(g){switch(g){case THREE.AdditiveBlending:b.blendEquation(b.FUNC_ADD);b.blendFunc(b.ONE,b.ONE);break;case THREE.SubtractiveBlending:b.blendFunc(b.DST_COLOR,b.ZERO);break;default:b.blendEquation(b.FUNC_ADD);b.blendFunc(b.ONE,b.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=function(g,p){if(g){!p||p=="ccw"?b.frontFace(b.CCW):b.frontFace(b.CW);if(g=="back")b.cullFace(b.BACK);else g=="front"?b.cullFace(b.FRONT):b.cullFace(b.FRONT_AND_BACK);
b.enable(b.CULL_FACE)}else b.disable(b.CULL_FACE)};this.supportsVertexTextures=function(){return b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, 1.0 ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\ncubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = mix( gl_FragColor, cubeColor, reflectivity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}",
lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif"};
THREE.UniformsLib={common:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",
value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",
vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsLib.common,fragment_shader:["uniform vec3 color;\nuniform float opacity;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",
THREE.Snippets.map_fragment,"gl_FragColor = mColor * mapColor;",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},lambert:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nvarying vec3 vLightWeighting;",
THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,"gl_FragColor =  mColor * mapColor * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,
THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},phong:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},
shininess:{type:"f",value:30}}]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,THREE.Snippets.lights_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lights_fragment,
"gl_FragColor =  mapColor * totalLight * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",
THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")}};THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
var GeometryUtils={merge:function(a,c){var d=c instanceof THREE.Mesh,e=a.vertices.length,h=d?c.geometry:c,f=a.vertices,j=h.vertices,b=a.faces,k=h.faces,l=a.uvs;h=h.uvs;d&&c.autoUpdateMatrix&&c.updateMatrix();for(var q=0,B=j.length;q<B;q++){var o=new THREE.Vertex(j[q].position.clone());d&&c.matrix.multiplyVector3(o.position);f.push(o)}q=0;for(B=k.length;q<B;q++){j=k[q];var t,v=j.vertexNormals;if(j instanceof THREE.Face3)t=new THREE.Face3(j.a+e,j.b+e,j.c+e);else if(j instanceof THREE.Face4)t=new THREE.Face4(j.a+
e,j.b+e,j.c+e,j.d+e);t.centroid.copy(j.centroid);t.normal.copy(j.normal);d=0;for(f=v.length;d<f;d++){o=v[d];t.vertexNormals.push(o.clone())}t.materials=j.materials.slice();b.push(t)}q=0;for(B=h.length;q<B;q++){e=h[q];b=[];d=0;for(f=e.length;d<f;d++)b.push(new THREE.UV(e[d].u,e[d].v));l.push(b)}}},ImageUtils={loadTexture:function(a,c){var d=new Image;d.onload=function(){this.loaded=true};d.src=a;return new THREE.Texture(d,c)},loadArray:function(a){var c,d,e=[];c=e.loadCount=0;for(d=a.length;c<d;++c){e[c]=
new Image;e[c].loaded=0;e[c].onload=function(){e.loadCount+=1;this.loaded=true};e[c].src=a[c]}return e}},SceneUtils={loadScene:function(a,c,d){a=new Worker(a);a.postMessage(0);a.onmessage=function(e){function h(){for(k in g.objects)if(!n.objects[k]){t=g.objects[k];if(H=n.geometries[t.geometry]){m=[];for(i=0;i<t.materials.length;i++)m[i]=n.materials[t.materials[i]];v=t.position;r=t.rotation;s=t.scale;object=new THREE.Mesh(H,m);object.position.set(v[0],v[1],v[2]);object.rotation.set(r[0],r[1],r[2]);
object.scale.set(s[0],s[1],s[2]);object.visible=t.visible;n.scene.addObject(object);n.objects[k]=object}}}function f(z){return function(M){n.geometries[z]=M;h();A-=1;A==0&&d(n)}}var j,b,k,l,q,B,o,t,v,C,H,u,J,m,g,p,A,n;g=e.data;p=new THREE.Loader;A=0;n={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{}};for(j in g.geometries){e=g.geometries[j];if(e.type=="bin_mesh"||e.type=="ascii_mesh")A+=1}for(j in g.geometries){e=g.geometries[j];if(e.type=="cube"){H=
new Cube(e.width,e.height,e.depth,e.segments_width,e.segments_height,null,e.flipped,e.sides);n.geometries[j]=H}else if(e.type=="plane"){H=new Plane(e.width,e.height,e.segments_width,e.segments_height);n.geometries[j]=H}else if(e.type=="sphere"){H=new Sphere(e.radius,e.segments_width,e.segments_height);n.geometries[j]=H}else if(e.type=="cylinder"){H=new Cylinder(e.numSegs,e.topRad,e.botRad,e.height,e.topOffset,e.botOffset);n.geometries[j]=H}else if(e.type=="torus"){H=new Torus(e.radius,e.tube,e.segmentsR,
e.segmentsT);n.geometries[j]=H}else if(e.type=="icosahedron"){H=new Icosahedron(e.subdivisions);n.geometries[j]=H}else if(e.type=="bin_mesh")p.loadBinary({model:e.url,callback:f(j)});else e.type=="ascii_mesh"&&p.loadAscii({model:e.url,callback:f(j)})}for(o in g.textures){j=g.textures[o];if(j.url instanceof Array){j=ImageUtils.loadArray(j.url);e=new THREE.Texture(j)}else{e=ImageUtils.loadTexture(j.url);if(THREE[j.min_filter]!=undefined)e.min_filter=THREE[j.min_filter];if(THREE[j.mag_filter]!=undefined)e.mag_filter=
THREE[j.mag_filter]}n.textures[o]=e}for(b in g.materials){o=g.materials[b];for(C in o.parameters)if(C=="env_map"||C=="map")o.parameters[C]=n.textures[o.parameters[C]];else if(C=="shading")o.parameters[C]=o.parameters[C]=="flat"?THREE.FlatShading:THREE.SmoothShading;o=new THREE[o.type](o.parameters);n.materials[b]=o}h();for(l in g.lights){b=g.lights[l];if(b.type=="directional"){v=b.direction;light=new THREE.DirectionalLight;light.position.set(v[0],v[1],v[2]);light.position.normalize()}else if(b.type==
"point"){v=b.position;light=new THREE.PointLight;light.position.set(v[0],v[1],v[2])}b=b.color;light.color.setRGB(b[0],b[1],b[2]);n.scene.addLight(light);n.lights[l]=light}for(q in g.cameras){b=g.cameras[q];if(b.type=="perspective")u=new THREE.Camera(b.fov,b.aspect,b.near,b.far);else if(b.type=="ortho"){u=new THREE.Camera;u.projectionMatrix=THREE.Matrix4.makeOrtho(b.left,b.right,b.top,b.bottom,b.near,b.far)}v=b.position;l=b.target;u.position.set(v[0],v[1],v[2]);u.target.position.set(l[0],l[1],l[2]);
n.cameras[q]=u}for(B in g.fogs){q=g.fogs[B];if(q.type=="linear")J=new THREE.Fog(0,q.near,q.far);else if(q.type=="exp2")J=new THREE.FogExp2(0,q.density);b=q.color;J.color.setRGB(b[0],b[1],b[2]);n.fogs[B]=J}if(n.cameras&&g.defaults.camera)n.currentCamera=n.cameras[g.defaults.camera];if(n.fogs&&g.defaults.fog)n.scene.fog=n.fogs[g.defaults.fog];b=g.defaults.bgcolor;n.bgColor=new THREE.Color;n.bgColor.setRGB(b[0],b[1],b[2]);n.bgColorAlpha=g.defaults.bgalpha;c(n)}},addMesh:function(a,c,d,e,h,f,j,b,k,l){c=
new THREE.Mesh(c,l);c.scale.x=c.scale.y=c.scale.z=d;c.position.x=e;c.position.y=h;c.position.z=f;c.rotation.x=j;c.rotation.y=b;c.rotation.z=k;a.addObject(c);return c},addPanoramaCubeWebGL:function(a,c,d){var e=ShaderUtils.lib.cube;e.uniforms.tCube.texture=d;d=new THREE.MeshShaderMaterial({fragment_shader:e.fragment_shader,vertex_shader:e.vertex_shader,uniforms:e.uniforms});c=new THREE.Mesh(new Cube(c,c,c,1,1,null,true),d);a.addObject(c);return c},addPanoramaCube:function(a,c,d){var e=[];e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[0])}));
e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[1])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[2])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[3])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[4])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[5])}));c=new THREE.Mesh(new Cube(c,c,c,1,1,e,true),new THREE.MeshFaceMaterial);a.addObject(c);return c},addPanoramaCubePlanes:function(a,c,d){var e=c/2;c=new Plane(c,c);var h=
Math.PI/2,f=Math.PI;SceneUtils.addMesh(a,c,1,0,0,-e,0,0,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[5])}));SceneUtils.addMesh(a,c,1,-e,0,0,0,h,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[0])}));SceneUtils.addMesh(a,c,1,e,0,0,0,-h,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[1])}));SceneUtils.addMesh(a,c,1,0,e,0,h,0,f,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[2])}));SceneUtils.addMesh(a,c,1,0,-e,0,-h,0,f,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[3])}))}},
ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertex_shader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main(void) {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tNormal:{type:"t",value:2,texture:null},tAO:{type:"t",value:3,texture:null},uNormalScale:{type:"f",value:1},tDisplacement:{type:"t",value:4,texture:null},uDisplacementBias:{type:"f",value:-0.5},uDisplacementScale:{type:"f",value:2.5},uPointLightPos:{type:"v3",value:new THREE.Vector3},uPointLightColor:{type:"c",value:new THREE.Color(15658734)},uDirLightPos:{type:"v3",value:new THREE.Vector3},
uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30}},fragment_shader:"uniform vec3 uDirLightPos;\nuniform vec3 uAmbientLightColor;\nuniform vec3 uDirLightColor;\nuniform vec3 uPointLightColor;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform bool enableDiffuse;\nuniform bool enableAO;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tAO;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 diffuseTex = vec3( 1.0, 1.0, 1.0 );\nvec3 aoTex = vec3( 1.0, 1.0, 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse )\ndiffuseTex = texture2D( tDiffuse, vUv ).xyz;\nif( enableAO )\naoTex = texture2D( tAO, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec3 pointVector = normalize( vPointLightVector );\nvec3 pointHalfVector = normalize( vPointLightVector + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, uShininess );\npointDiffuse  += vec4( uDiffuseColor, 1.0 ) * pointDiffuseWeight;\npointSpecular += vec4( uSpecularColor, 1.0 ) * pointSpecularWeight;\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 lDirection = viewMatrix * vec4( uDirLightPos, 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, uShininess );\ndirDiffuse  += vec4( uDiffuseColor, 1.0 ) * dirDiffuseWeight;\ndirSpecular += vec4( uSpecularColor, 1.0 ) * dirSpecularWeight;\nvec4 totalLight = vec4( uAmbientLightColor * uAmbientColor, 1.0 );\ntotalLight += vec4( uDirLightColor, 1.0 ) * ( dirDiffuse + dirSpecular );\ntotalLight += vec4( uPointLightColor, 1.0 ) * ( pointDiffuse + pointSpecular );\ngl_FragColor = vec4( totalLight.xyz * aoTex * diffuseTex, 1.0 );\n}",
vertex_shader:"attribute vec4 tangent;\nuniform vec3 uPointLightPos;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec4 lPosition = viewMatrix * vec4( uPointLightPos, 1.0 );\nvPointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}"},
cube:{uniforms:{tCube:{type:"t",value:1,texture:null}},vertex_shader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( - wPos.x, wPos.yz ) );\n}"},basic:{uniforms:{},
vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"void main() {\ngl_FragColor = vec4(1.0, 0.0, 0.0, 0.5);\n}"}}},Cube=function(a,c,d,e,h,f,j,b){function k(C,H,u,J,m,g,p,A){var n,z,M=e||1,x=h||1,D=M+1,F=x+1,E=m/2,y=g/2;m=m/M;var O=g/x,K=l.vertices.length;if(C=="x"&&H=="y"||C=="y"&&H=="x")n="z";else if(C=="x"&&H=="z"||C=="z"&&H=="x")n="y";else if(C=="z"&&H=="y"||C=="y"&&H=="z")n="x";for(z=0;z<F;z++)for(g=0;g<D;g++){var U=new THREE.Vector3;
U[C]=(g*m-E)*u;U[H]=(z*O-y)*J;U[n]=p;l.vertices.push(new THREE.Vertex(U))}for(z=0;z<x;z++)for(g=0;g<M;g++){l.faces.push(new THREE.Face4(g+D*z+K,g+D*(z+1)+K,g+1+D*(z+1)+K,g+1+D*z+K,null,A));l.uvs.push([new THREE.UV(g/M,z/x),new THREE.UV(g/M,(z+1)/x),new THREE.UV((g+1)/M,(z+1)/x),new THREE.UV((g+1)/M,z/x)])}}THREE.Geometry.call(this);var l=this,q=a/2,B=c/2,o=d/2;j=j?-1:1;if(f!==undefined)if(f instanceof Array)this.materials=f;else{this.materials=[];for(var t=0;t<6;t++)this.materials.push([f])}else this.materials=
[];this.sides={px:true,nx:true,py:true,ny:true,pz:true,nz:true};if(b!=undefined)for(var v in b)if(this.sides[v]!=undefined)this.sides[v]=b[v];this.sides.px&&k("z","y",1*j,-1,d,c,-q,this.materials[0]);this.sides.nx&&k("z","y",-1*j,-1,d,c,q,this.materials[1]);this.sides.py&&k("x","z",1*j,1,a,d,B,this.materials[2]);this.sides.ny&&k("x","z",1*j,-1,a,d,-B,this.materials[3]);this.sides.pz&&k("x","y",1*j,-1,a,c,o,this.materials[4]);this.sides.nz&&k("x","y",-1*j,-1,a,c,-o,this.materials[5]);(function(){for(var C=
[],H=[],u=0,J=l.vertices.length;u<J;u++){for(var m=l.vertices[u],g=false,p=0,A=C.length;p<A;p++){var n=C[p];if(m.position.x==n.position.x&&m.position.y==n.position.y&&m.position.z==n.position.z){H[u]=p;g=true;break}}if(!g){H[u]=C.length;C.push(new THREE.Vertex(m.position.clone()))}}u=0;for(J=l.faces.length;u<J;u++){m=l.faces[u];m.a=H[m.a];m.b=H[m.b];m.c=H[m.c];m.d=H[m.d]}l.vertices=C})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cube.prototype=new THREE.Geometry;
Cube.prototype.constructor=Cube;
var Cylinder=function(a,c,d,e,h){function f(l,q,B){j.vertices.push(new THREE.Vertex(new THREE.Vector3(l,q,B)))}THREE.Geometry.call(this);var j=this,b=Math.PI,k;for(k=0;k<a;k++)f(Math.sin(2*b*k/a)*c,Math.cos(2*b*k/a)*c,0);for(k=0;k<a;k++)f(Math.sin(2*b*k/a)*d,Math.cos(2*b*k/a)*d,e);for(k=0;k<a;k++)j.faces.push(new THREE.Face4(k,k+a,a+(k+1)%a,(k+1)%a));if(d!=0){f(0,0,-h);for(k=a;k<a+a/2;k++)j.faces.push(new THREE.Face4(2*a,(2*k-2*a)%a,(2*k-2*a+1)%a,(2*k-2*a+2)%a))}if(c!=0){f(0,0,e+h);for(k=a+a/2;k<
2*a;k++)j.faces.push(new THREE.Face4((2*k-2*a+2)%a+a,(2*k-2*a+1)%a+a,(2*k-2*a)%a+a,2*a+1))}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cylinder.prototype=new THREE.Geometry;Cylinder.prototype.constructor=Cylinder;
var Plane=function(a,c,d,e){THREE.Geometry.call(this);var h,f=a/2,j=c/2;d=d||1;e=e||1;var b=d+1,k=e+1;a=a/d;var l=c/e;for(h=0;h<k;h++)for(c=0;c<b;c++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(c*a-f,-(h*l-j),0)));for(h=0;h<e;h++)for(c=0;c<d;c++){this.faces.push(new THREE.Face4(c+b*h,c+b*(h+1),c+1+b*(h+1),c+1+b*h));this.uvs.push([new THREE.UV(c/d,h/e),new THREE.UV(c/d,(h+1)/e),new THREE.UV((c+1)/d,(h+1)/e),new THREE.UV((c+1)/d,h/e)])}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};
Plane.prototype=new THREE.Geometry;Plane.prototype.constructor=Plane;
var Sphere=function(a,c,d){THREE.Geometry.call(this);var e,h=Math.PI,f=Math.max(3,c||8),j=Math.max(2,d||6);c=[];for(d=0;d<j+1;d++){e=d/j;var b=a*Math.cos(e*h),k=a*Math.sin(e*h),l=[],q=0;for(e=0;e<f;e++){var B=2*e/f,o=k*Math.sin(B*h);B=k*Math.cos(B*h);(d==0||d==j)&&e>0||(q=this.vertices.push(new THREE.Vertex(new THREE.Vector3(B,b,o)))-1);l.push(q)}c.push(l)}var t,v,C;h=c.length;for(d=0;d<h;d++){f=c[d].length;if(d>0)for(e=0;e<f;e++){l=e==f-1;j=c[d][l?0:e+1];b=c[d][l?f-1:e];k=c[d-1][l?f-1:e];l=c[d-1][l?
0:e+1];o=d/(h-1);t=(d-1)/(h-1);v=(e+1)/f;B=e/f;q=new THREE.UV(1-v,o);o=new THREE.UV(1-B,o);B=new THREE.UV(1-B,t);var H=new THREE.UV(1-v,t);if(d<c.length-1){t=this.vertices[j].position.clone();v=this.vertices[b].position.clone();C=this.vertices[k].position.clone();t.normalize();v.normalize();C.normalize();this.faces.push(new THREE.Face3(j,b,k,[new THREE.Vector3(t.x,t.y,t.z),new THREE.Vector3(v.x,v.y,v.z),new THREE.Vector3(C.x,C.y,C.z)]));this.uvs.push([q,o,B])}if(d>1){t=this.vertices[j].position.clone();
v=this.vertices[k].position.clone();C=this.vertices[l].position.clone();t.normalize();v.normalize();C.normalize();this.faces.push(new THREE.Face3(j,k,l,[new THREE.Vector3(t.x,t.y,t.z),new THREE.Vector3(v.x,v.y,v.z),new THREE.Vector3(C.x,C.y,C.z)]));this.uvs.push([q,B,H])}}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial();this.boundingSphere={radius:a}};Sphere.prototype=new THREE.Geometry;Sphere.prototype.constructor=Sphere;
var Torus=function(a,c,d,e){this.radius=a||100;this.tube=c||40;this.segmentsR=d||8;this.segmentsT=e||6;a=[];THREE.Geometry.call(this);for(c=0;c<=this.segmentsR;++c)for(d=0;d<=this.segmentsT;++d){e=d/this.segmentsT*2*Math.PI;var h=c/this.segmentsR*2*Math.PI;this.vertices.push(new THREE.Vertex(new THREE.Vector3((this.radius+this.tube*Math.cos(h))*Math.cos(e),(this.radius+this.tube*Math.cos(h))*Math.sin(e),this.tube*Math.sin(h))));a.push([d/this.segmentsT,1-c/this.segmentsR])}for(c=1;c<=this.segmentsR;++c)for(d=
1;d<=this.segmentsT;++d){e=(this.segmentsT+1)*c+d;h=(this.segmentsT+1)*c+d-1;var f=(this.segmentsT+1)*(c-1)+d-1,j=(this.segmentsT+1)*(c-1)+d;this.faces.push(new THREE.Face4(e,h,f,j));this.uvs.push([new THREE.UV(a[e][0],a[e][1]),new THREE.UV(a[h][0],a[h][1]),new THREE.UV(a[f][0],a[f][1]),new THREE.UV(a[j][0],a[j][1])])}delete a;this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()};Torus.prototype=new THREE.Geometry;Torus.prototype.constructor=Torus;
var Icosahedron=function(a){function c(B,o,t){var v=Math.sqrt(B*B+o*o+t*t);return h.vertices.push(new THREE.Vertex(new THREE.Vector3(B/v,o/v,t/v)))-1}function d(B,o,t,v){v.faces.push(new THREE.Face3(B,o,t))}function e(B,o){var t=h.vertices[B].position,v=h.vertices[o].position;return c((t.x+v.x)/2,(t.y+v.y)/2,(t.z+v.z)/2)}var h=this,f=new THREE.Geometry,j;this.subdivisions=a||0;THREE.Geometry.call(this);a=(1+Math.sqrt(5))/2;c(-1,a,0);c(1,a,0);c(-1,-a,0);c(1,-a,0);c(0,-1,a);c(0,1,a);c(0,-1,-a);c(0,
1,-a);c(a,0,-1);c(a,0,1);c(-a,0,-1);c(-a,0,1);d(0,11,5,f);d(0,5,1,f);d(0,1,7,f);d(0,7,10,f);d(0,10,11,f);d(1,5,9,f);d(5,11,4,f);d(11,10,2,f);d(10,7,6,f);d(7,1,8,f);d(3,9,4,f);d(3,4,2,f);d(3,2,6,f);d(3,6,8,f);d(3,8,9,f);d(4,9,5,f);d(2,4,11,f);d(6,2,10,f);d(8,6,7,f);d(9,8,1,f);for(a=0;a<this.subdivisions;a++){j=new THREE.Geometry;for(var b in f.faces){var k=e(f.faces[b].a,f.faces[b].b),l=e(f.faces[b].b,f.faces[b].c),q=e(f.faces[b].c,f.faces[b].a);d(f.faces[b].a,k,q,j);d(f.faces[b].b,l,k,j);d(f.faces[b].c,
q,l,j);d(k,l,q,j)}f.faces=j.faces}h.faces=f.faces;delete f;delete j;this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()};Icosahedron.prototype=new THREE.Geometry;Icosahedron.prototype.constructor=Icosahedron;
function LathedObject(a,c,d){THREE.Geometry.call(this);c=c||12;d=d||2*Math.PI;c=d/c;for(var e=[],h=[],f=[],j=[],b=0;b<a.length;b++){this.vertices.push(new THREE.Vertex(a[b]));h[b]=this.vertices.length-1;e[b]=new THREE.Vector3(a[b].x,a[b].y,a[b].z)}for(var k=THREE.Matrix4.rotationZMatrix(c),l=0;l<=d+0.0010;l+=c){for(b=0;b<e.length;b++)if(l<d){e[b]=k.multiplyVector3(e[b].clone());this.vertices.push(new THREE.Vertex(e[b]));f[b]=this.vertices.length-1}else f=j;if(l==0)j=h;for(b=0;b<h.length-1;b++){this.faces.push(new THREE.Face4(f[b],
f[b+1],h[b+1],h[b]));this.uvs.push([new THREE.UV(l/d,b/a.length),new THREE.UV(l/d,(b+1)/a.length),new THREE.UV((l-c)/d,(b+1)/a.length),new THREE.UV((l-c)/d,b/a.length)])}h=f;f=[]}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()}LathedObject.prototype=new THREE.Geometry;LathedObject.prototype.constructor=LathedObject;THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?this.addStatusElement():null};
THREE.Loader.prototype={addStatusElement:function(){var a=document.createElement("div");a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="#b00";a.style.color="#fff";a.style.width="140px";a.style.padding="0.25em 0.25em 0.25em 0.5em";a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var c="Loaded ";c+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1E3).toFixed(2)+" KB";this.statusDomElement.innerHTML=
c},loadAsciiOld:function(a,c){var d=document.createElement("script");d.type="text/javascript";d.onload=c;d.src=a;document.getElementsByTagName("head")[0].appendChild(d)},loadAscii:function(a){var c=a.model,d=a.callback,e=a.texture_path?a.texture_path:THREE.Loader.prototype.extractUrlbase(c);a=(new Date).getTime();c=new Worker(c);c.onmessage=function(h){THREE.Loader.prototype.createModel(h.data,d,e)};c.postMessage(a)},loadBinary:function(a){var c=a.model,d=a.callback,e=a.texture_path?a.texture_path:
THREE.Loader.prototype.extractUrlbase(c),h=a.bin_path?a.bin_path:THREE.Loader.prototype.extractUrlbase(c);a=(new Date).getTime();c=new Worker(c);var f=this.showProgress?THREE.Loader.prototype.updateProgress:null;c.onmessage=function(j){THREE.Loader.prototype.loadAjaxBuffers(j.data.buffers,j.data.materials,d,h,e,f)};c.onerror=function(j){alert("worker.onerror: "+j.message+"\n"+j.data);j.preventDefault()};c.postMessage(a)},loadAjaxBuffers:function(a,c,d,e,h,f){var j=new XMLHttpRequest,b=e+"/"+a,k=0;
j.onreadystatechange=function(){if(j.readyState==4)j.status==200||j.status==0?THREE.Loader.prototype.createBinModel(j.responseText,d,h,c):alert("Couldn't load ["+b+"] ["+j.status+"]");else if(j.readyState==3){if(f){if(k==0)k=j.getResponseHeader("Content-Length");f({total:k,loaded:j.responseText.length})}}else if(j.readyState==2)k=j.getResponseHeader("Content-Length")};j.open("GET",b,true);j.overrideMimeType("text/plain; charset=x-user-defined");j.setRequestHeader("Content-Type","text/plain");j.send(null)},
createBinModel:function(a,c,d,e){var h=function(f){function j(w,L){var I=q(w,L),Z=q(w,L+1),ca=q(w,L+2),ga=q(w,L+3),ja=(ga<<1&255|ca>>7)-127;I=(ca&127)<<16|Z<<8|I;if(I==0&&ja==-127)return 0;return(1-2*(ga>>7))*(1+I*Math.pow(2,-23))*Math.pow(2,ja)}function b(w,L){var I=q(w,L),Z=q(w,L+1),ca=q(w,L+2);return(q(w,L+3)<<24)+(ca<<16)+(Z<<8)+I}function k(w,L){var I=q(w,L);return(q(w,L+1)<<8)+I}function l(w,L){var I=q(w,L);return I>127?I-256:I}function q(w,L){return w.charCodeAt(L)&255}function B(w){var L,
I,Z;L=b(a,w);I=b(a,w+A);Z=b(a,w+n);w=k(a,w+z);THREE.Loader.prototype.f3(u,L,I,Z,w)}function o(w){var L,I,Z,ca,ga,ja;L=b(a,w);I=b(a,w+A);Z=b(a,w+n);ca=k(a,w+z);ga=b(a,w+M);ja=b(a,w+x);w=b(a,w+D);THREE.Loader.prototype.f3n(u,g,L,I,Z,ca,ga,ja,w)}function t(w){var L,I,Z,ca;L=b(a,w);I=b(a,w+F);Z=b(a,w+E);ca=b(a,w+y);w=k(a,w+O);THREE.Loader.prototype.f4(u,L,I,Z,ca,w)}function v(w){var L,I,Z,ca,ga,ja,qa,sa;L=b(a,w);I=b(a,w+F);Z=b(a,w+E);ca=b(a,w+y);ga=k(a,w+O);ja=b(a,w+K);qa=b(a,w+U);sa=b(a,w+W);w=b(a,w+
P);THREE.Loader.prototype.f4n(u,g,L,I,Z,ca,ga,ja,qa,sa,w)}function C(w){var L,I;L=b(a,w);I=b(a,w+da);w=b(a,w+X);THREE.Loader.prototype.uv3(u,p[L*2],p[L*2+1],p[I*2],p[I*2+1],p[w*2],p[w*2+1])}function H(w){var L,I,Z;L=b(a,w);I=b(a,w+R);Z=b(a,w+T);w=b(a,w+ba);THREE.Loader.prototype.uv4(u,p[L*2],p[L*2+1],p[I*2],p[I*2+1],p[Z*2],p[Z*2+1],p[w*2],p[w*2+1])}var u=this,J=0,m,g=[],p=[],A,n,z,M,x,D,F,E,y,O,K,U,W,P,da,X,R,T,ba,Y,G,S,V,ia,ha;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(u,e,f);
m={signature:a.substr(J,8),header_bytes:q(a,J+8),vertex_coordinate_bytes:q(a,J+9),normal_coordinate_bytes:q(a,J+10),uv_coordinate_bytes:q(a,J+11),vertex_index_bytes:q(a,J+12),normal_index_bytes:q(a,J+13),uv_index_bytes:q(a,J+14),material_index_bytes:q(a,J+15),nvertices:b(a,J+16),nnormals:b(a,J+16+4),nuvs:b(a,J+16+8),ntri_flat:b(a,J+16+12),ntri_smooth:b(a,J+16+16),ntri_flat_uv:b(a,J+16+20),ntri_smooth_uv:b(a,J+16+24),nquad_flat:b(a,J+16+28),nquad_smooth:b(a,J+16+32),nquad_flat_uv:b(a,J+16+36),nquad_smooth_uv:b(a,
J+16+40)};J+=m.header_bytes;A=m.vertex_index_bytes;n=m.vertex_index_bytes*2;z=m.vertex_index_bytes*3;M=m.vertex_index_bytes*3+m.material_index_bytes;x=m.vertex_index_bytes*3+m.material_index_bytes+m.normal_index_bytes;D=m.vertex_index_bytes*3+m.material_index_bytes+m.normal_index_bytes*2;F=m.vertex_index_bytes;E=m.vertex_index_bytes*2;y=m.vertex_index_bytes*3;O=m.vertex_index_bytes*4;K=m.vertex_index_bytes*4+m.material_index_bytes;U=m.vertex_index_bytes*4+m.material_index_bytes+m.normal_index_bytes;
W=m.vertex_index_bytes*4+m.material_index_bytes+m.normal_index_bytes*2;P=m.vertex_index_bytes*4+m.material_index_bytes+m.normal_index_bytes*3;da=m.uv_index_bytes;X=m.uv_index_bytes*2;R=m.uv_index_bytes;T=m.uv_index_bytes*2;ba=m.uv_index_bytes*3;f=m.vertex_index_bytes*3+m.material_index_bytes;ha=m.vertex_index_bytes*4+m.material_index_bytes;Y=m.ntri_flat*f;G=m.ntri_smooth*(f+m.normal_index_bytes*3);S=m.ntri_flat_uv*(f+m.uv_index_bytes*3);V=m.ntri_smooth_uv*(f+m.normal_index_bytes*3+m.uv_index_bytes*
3);ia=m.nquad_flat*ha;f=m.nquad_smooth*(ha+m.normal_index_bytes*4);ha=m.nquad_flat_uv*(ha+m.uv_index_bytes*4);J+=function(w){var L,I,Z,ca=m.vertex_coordinate_bytes*3,ga=w+m.nvertices*ca;for(w=w;w<ga;w+=ca){L=j(a,w);I=j(a,w+m.vertex_coordinate_bytes);Z=j(a,w+m.vertex_coordinate_bytes*2);THREE.Loader.prototype.v(u,L,I,Z)}return m.nvertices*ca}(J);J+=function(w){var L,I,Z,ca=m.normal_coordinate_bytes*3,ga=w+m.nnormals*ca;for(w=w;w<ga;w+=ca){L=l(a,w);I=l(a,w+m.normal_coordinate_bytes);Z=l(a,w+m.normal_coordinate_bytes*
2);g.push(L/127,I/127,Z/127)}return m.nnormals*ca}(J);J+=function(w){var L,I,Z=m.uv_coordinate_bytes*2,ca=w+m.nuvs*Z;for(w=w;w<ca;w+=Z){L=j(a,w);I=j(a,w+m.uv_coordinate_bytes);p.push(L,I)}return m.nuvs*Z}(J);J=J;Y=J+Y;G=Y+G;S=G+S;V=S+V;ia=V+ia;f=ia+f;ha=f+ha;(function(w){var L,I=m.vertex_index_bytes*3+m.material_index_bytes,Z=I+m.uv_index_bytes*3,ca=w+m.ntri_flat_uv*Z;for(L=w;L<ca;L+=Z){B(L);C(L+I)}return ca-w})(G);(function(w){var L,I=m.vertex_index_bytes*3+m.material_index_bytes+m.normal_index_bytes*
3,Z=I+m.uv_index_bytes*3,ca=w+m.ntri_smooth_uv*Z;for(L=w;L<ca;L+=Z){o(L);C(L+I)}return ca-w})(S);(function(w){var L,I=m.vertex_index_bytes*4+m.material_index_bytes,Z=I+m.uv_index_bytes*4,ca=w+m.nquad_flat_uv*Z;for(L=w;L<ca;L+=Z){t(L);H(L+I)}return ca-w})(f);(function(w){var L,I=m.vertex_index_bytes*4+m.material_index_bytes+m.normal_index_bytes*4,Z=I+m.uv_index_bytes*4,ca=w+m.nquad_smooth_uv*Z;for(L=w;L<ca;L+=Z){v(L);H(L+I)}return ca-w})(ha);(function(w){var L,I=m.vertex_index_bytes*3+m.material_index_bytes,
Z=w+m.ntri_flat*I;for(L=w;L<Z;L+=I)B(L);return Z-w})(J);(function(w){var L,I=m.vertex_index_bytes*3+m.material_index_bytes+m.normal_index_bytes*3,Z=w+m.ntri_smooth*I;for(L=w;L<Z;L+=I)o(L);return Z-w})(Y);(function(w){var L,I=m.vertex_index_bytes*4+m.material_index_bytes,Z=w+m.nquad_flat*I;for(L=w;L<Z;L+=I)t(L);return Z-w})(V);(function(w){var L,I=m.vertex_index_bytes*4+m.material_index_bytes+m.normal_index_bytes*4,Z=w+m.nquad_smooth*I;for(L=w;L<Z;L+=I)v(L);return Z-w})(ia);this.computeCentroids();
this.computeFaceNormals();this.sortFacesByMaterial()};h.prototype=new THREE.Geometry;h.prototype.constructor=h;c(new h(d))},createModel:function(a,c,d){var e=function(h){var f=this;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(f,a.materials,h);(function(){var j,b,k,l,q;j=0;for(b=a.vertices.length;j<b;j+=3){k=a.vertices[j];l=a.vertices[j+1];q=a.vertices[j+2];THREE.Loader.prototype.v(f,k,l,q)}})();(function(){function j(v,C){THREE.Loader.prototype.f3(f,v[C],v[C+1],v[C+2],v[C+3])}function b(v,
C){THREE.Loader.prototype.f3n(f,a.normals,v[C],v[C+1],v[C+2],v[C+3],v[C+4],v[C+5],v[C+6])}function k(v,C){THREE.Loader.prototype.f4(f,v[C],v[C+1],v[C+2],v[C+3],v[C+4])}function l(v,C){THREE.Loader.prototype.f4n(f,a.normals,v[C],v[C+1],v[C+2],v[C+3],v[C+4],v[C+5],v[C+6],v[C+7],v[C+8])}function q(v,C){var H,u,J;H=v[C];u=v[C+1];J=v[C+2];THREE.Loader.prototype.uv3(f,a.uvs[H*2],a.uvs[H*2+1],a.uvs[u*2],a.uvs[u*2+1],a.uvs[J*2],a.uvs[J*2+1])}function B(v,C){var H,u,J,m;H=v[C];u=v[C+1];J=v[C+2];m=v[C+3];THREE.Loader.prototype.uv4(f,
a.uvs[H*2],a.uvs[H*2+1],a.uvs[u*2],a.uvs[u*2+1],a.uvs[J*2],a.uvs[J*2+1],a.uvs[m*2],a.uvs[m*2+1])}var o,t;o=0;for(t=a.triangles_uv.length;o<t;o+=7){j(a.triangles_uv,o);q(a.triangles_uv,o+4)}o=0;for(t=a.triangles_n_uv.length;o<t;o+=10){b(a.triangles_n_uv,o);q(a.triangles_n_uv,o+7)}o=0;for(t=a.quads_uv.length;o<t;o+=9){k(a.quads_uv,o);B(a.quads_uv,o+5)}o=0;for(t=a.quads_n_uv.length;o<t;o+=13){l(a.quads_n_uv,o);B(a.quads_n_uv,o+9)}o=0;for(t=a.triangles.length;o<t;o+=4)j(a.triangles,o);o=0;for(t=a.triangles_n.length;o<
t;o+=7)b(a.triangles_n,o);o=0;for(t=a.quads.length;o<t;o+=5)k(a.quads,o);o=0;for(t=a.quads_n.length;o<t;o+=9)l(a.quads_n,o)})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};e.prototype=new THREE.Geometry;e.prototype.constructor=e;c(new e(d))},v:function(a,c,d,e){a.vertices.push(new THREE.Vertex(new THREE.Vector3(c,d,e)))},f3:function(a,c,d,e,h){a.faces.push(new THREE.Face3(c,d,e,null,a.materials[h]))},f4:function(a,c,d,e,h,f){a.faces.push(new THREE.Face4(c,d,e,h,null,
a.materials[f]))},f3n:function(a,c,d,e,h,f,j,b,k){f=a.materials[f];var l=c[b*3],q=c[b*3+1];b=c[b*3+2];var B=c[k*3],o=c[k*3+1];k=c[k*3+2];a.faces.push(new THREE.Face3(d,e,h,[new THREE.Vector3(c[j*3],c[j*3+1],c[j*3+2]),new THREE.Vector3(l,q,b),new THREE.Vector3(B,o,k)],f))},f4n:function(a,c,d,e,h,f,j,b,k,l,q){j=a.materials[j];var B=c[k*3],o=c[k*3+1];k=c[k*3+2];var t=c[l*3],v=c[l*3+1];l=c[l*3+2];var C=c[q*3],H=c[q*3+1];q=c[q*3+2];a.faces.push(new THREE.Face4(d,e,h,f,[new THREE.Vector3(c[b*3],c[b*3+1],
c[b*3+2]),new THREE.Vector3(B,o,k),new THREE.Vector3(t,v,l),new THREE.Vector3(C,H,q)],j))},uv3:function(a,c,d,e,h,f,j){var b=[];b.push(new THREE.UV(c,d));b.push(new THREE.UV(e,h));b.push(new THREE.UV(f,j));a.uvs.push(b)},uv4:function(a,c,d,e,h,f,j,b,k){var l=[];l.push(new THREE.UV(c,d));l.push(new THREE.UV(e,h));l.push(new THREE.UV(f,j));l.push(new THREE.UV(b,k));a.uvs.push(l)},init_materials:function(a,c,d){a.materials=[];for(var e=0;e<c.length;++e)a.materials[e]=[THREE.Loader.prototype.createMaterial(c[e],
d)]},createMaterial:function(a,c){function d(f){f=Math.log(f)/Math.LN2;return Math.floor(f)==f}var e,h;if(a.map_diffuse&&c){h=document.createElement("canvas");e=new THREE.MeshLambertMaterial({map:new THREE.Texture(h)});h=new Image;h.onload=function(){if(!d(this.width)||!d(this.height)){var f=Math.pow(2,Math.round(Math.log(this.width)/Math.LN2)),j=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));e.map.image.width=f;e.map.image.height=j;e.map.image.getContext("2d").drawImage(this,0,0,f,j)}else e.map.image=
this;e.map.image.loaded=1};h.src=c+"/"+a.map_diffuse}else if(a.col_diffuse){h=(a.col_diffuse[0]*255<<16)+(a.col_diffuse[1]*255<<8)+a.col_diffuse[2]*255;e=new THREE.MeshLambertMaterial({color:h,opacity:a.transparency})}else e=a.a_dbg_color?new THREE.MeshLambertMaterial({color:a.a_dbg_color}):new THREE.MeshLambertMaterial({color:15658734});return e},extractUrlbase:function(a){a=a.split("/");a.pop();return a.join("/")}};
