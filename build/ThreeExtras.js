// ThreeExtras.js r32 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,c,d){this.r=a;this.g=c;this.b=d;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+
","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,c){this.x=a||0;this.y=c||0};
THREE.Vector2.prototype={set:function(a,c){this.x=a;this.y=c;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,c,d){this.x=a||0;this.y=c||0;this.z=d||0};
THREE.Vector3.prototype={set:function(a,c,d){this.x=a;this.y=c;this.z=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,c){this.x=a.y*c.z-a.z*c.y;this.y=a.z*c.x-a.x*c.z;this.z=a.x*c.y-a.y*c.x;return this},crossSelf:function(a){var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},multiply:function(a,c){this.x=a.x*c.x;this.y=a.y*c.y;this.z=a.z*c.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=
a.z;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var c=this.x-a.x,d=this.y-a.y;a=this.z-a.z;return Math.sqrt(c*c+d*d+a*a)},distanceToSquared:function(a){var c=this.x-a.x,d=this.y-a.y;a=this.z-a.z;return c*c+d*d+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=
-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,c,d,e){this.x=a||0;this.y=c||0;this.z=d||0;this.w=e||1};
THREE.Vector4.prototype={set:function(a,c,d,e){this.x=a;this.y=c;this.z=d;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;this.w=a.w+c.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;this.w=a.w-c.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,c){this.x+=(a.x-this.x)*c;this.y+=(a.y-this.y)*c;this.z+=(a.z-this.z)*c;this.w+=(a.w-this.w)*c},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,c){this.origin=a||new THREE.Vector3;this.direction=c||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var c,d,e=a.objects,g=[];a=0;for(c=e.length;a<c;a++){d=e[a];if(d instanceof THREE.Mesh)g=g.concat(this.intersectObject(d))}g.sort(function(b,k){return b.distance-k.distance});return g},intersectObject:function(a){function c(F,t,l,f){f=f.clone().subSelf(t);l=l.clone().subSelf(t);var m=F.clone().subSelf(t);F=f.dot(f);t=f.dot(l);f=f.dot(m);var o=l.dot(l);l=l.dot(m);m=1/(F*o-t*t);o=(o*f-t*l)*m;F=(F*l-t*f)*m;return o>0&&F>0&&o+F<1}var d,e,g,b,k,j,h,n,v,y,
u,p=a.geometry,w=p.vertices,B=[];d=0;for(e=p.faces.length;d<e;d++){g=p.faces[d];y=this.origin.clone();u=this.direction.clone();b=a.matrix.multiplyVector3(w[g.a].position.clone());k=a.matrix.multiplyVector3(w[g.b].position.clone());j=a.matrix.multiplyVector3(w[g.c].position.clone());h=g instanceof THREE.Face4?a.matrix.multiplyVector3(w[g.d].position.clone()):null;n=a.rotationMatrix.multiplyVector3(g.normal.clone());v=u.dot(n);if(v<0){n=n.dot((new THREE.Vector3).sub(b,y))/v;y=y.addSelf(u.multiplyScalar(n));
if(g instanceof THREE.Face3){if(c(y,b,k,j)){g={distance:this.origin.distanceTo(y),point:y,face:g,object:a};B.push(g)}}else if(g instanceof THREE.Face4)if(c(y,b,k,h)||c(y,k,j,h)){g={distance:this.origin.distanceTo(y),point:y,face:g,object:a};B.push(g)}}}return B}};
THREE.Rectangle=function(){function a(){b=e-c;k=g-d}var c,d,e,g,b,k,j=true;this.getX=function(){return c};this.getY=function(){return d};this.getWidth=function(){return b};this.getHeight=function(){return k};this.getLeft=function(){return c};this.getTop=function(){return d};this.getRight=function(){return e};this.getBottom=function(){return g};this.set=function(h,n,v,y){j=false;c=h;d=n;e=v;g=y;a()};this.addPoint=function(h,n){if(j){j=false;c=h;d=n;e=h;g=n}else{c=c<h?c:h;d=d<n?d:n;e=e>h?e:h;g=g>n?
g:n}a()};this.add3Points=function(h,n,v,y,u,p){if(j){j=false;c=h<v?h<u?h:u:v<u?v:u;d=n<y?n<p?n:p:y<p?y:p;e=h>v?h>u?h:u:v>u?v:u;g=n>y?n>p?n:p:y>p?y:p}else{c=h<v?h<u?h<c?h:c:u<c?u:c:v<u?v<c?v:c:u<c?u:c;d=n<y?n<p?n<d?n:d:p<d?p:d:y<p?y<d?y:d:p<d?p:d;e=h>v?h>u?h>e?h:e:u>e?u:e:v>u?v>e?v:e:u>e?u:e;g=n>y?n>p?n>g?n:g:p>g?p:g:y>p?y>g?y:g:p>g?p:g}a()};this.addRectangle=function(h){if(j){j=false;c=h.getLeft();d=h.getTop();e=h.getRight();g=h.getBottom()}else{c=c<h.getLeft()?c:h.getLeft();d=d<h.getTop()?d:h.getTop();
e=e>h.getRight()?e:h.getRight();g=g>h.getBottom()?g:h.getBottom()}a()};this.inflate=function(h){c-=h;d-=h;e+=h;g+=h;a()};this.minSelf=function(h){c=c>h.getLeft()?c:h.getLeft();d=d>h.getTop()?d:h.getTop();e=e<h.getRight()?e:h.getRight();g=g<h.getBottom()?g:h.getBottom();a()};this.instersects=function(h){return Math.min(e,h.getRight())-Math.max(c,h.getLeft())>=0&&Math.min(g,h.getBottom())-Math.max(d,h.getTop())>=0};this.empty=function(){j=true;g=e=d=c=0;a()};this.isEmpty=function(){return j};this.toString=
function(){return"THREE.Rectangle ( left: "+c+", right: "+e+", top: "+d+", bottom: "+g+", width: "+b+", height: "+k+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a,c=this.m;a=c[1];c[1]=c[3];c[3]=a;a=c[2];c[2]=c[6];c[6]=a;a=c[5];c[5]=c[7];c[7]=a;return this}};
THREE.Matrix4=function(a,c,d,e,g,b,k,j,h,n,v,y,u,p,w,B){this.n11=a||1;this.n12=c||0;this.n13=d||0;this.n14=e||0;this.n21=g||0;this.n22=b||1;this.n23=k||0;this.n24=j||0;this.n31=h||0;this.n32=n||0;this.n33=v||1;this.n34=y||0;this.n41=u||0;this.n42=p||0;this.n43=w||0;this.n44=B||1;this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,c,d,e,g,b,k,j,h,n,v,y,u,p,w,B){this.n11=a;this.n12=c;this.n13=d;this.n14=e;this.n21=g;this.n22=b;this.n23=k;this.n24=j;this.n31=h;this.n32=n;this.n33=v;this.n34=y;this.n41=u;this.n42=p;this.n43=w;this.n44=B;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,c,d){var e=THREE.Matrix4.__tmpVec1,g=THREE.Matrix4.__tmpVec2,b=THREE.Matrix4.__tmpVec3;b.sub(a,c).normalize();e.cross(d,b).normalize();g.cross(b,e).normalize();this.n11=e.x;this.n12=e.y;this.n13=e.z;this.n14=-e.dot(a);this.n21=g.x;this.n22=g.y;this.n23=g.z;this.n24=-g.dot(a);
this.n31=b.x;this.n32=b.y;this.n33=b.z;this.n34=-b.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var c=a.x,d=a.y,e=a.z,g=1/(this.n41*c+this.n42*d+this.n43*e+this.n44);a.x=(this.n11*c+this.n12*d+this.n13*e+this.n14)*g;a.y=(this.n21*c+this.n22*d+this.n23*e+this.n24)*g;a.z=(this.n31*c+this.n32*d+this.n33*e+this.n34)*g;return a},multiplyVector4:function(a){var c=a.x,d=a.y,e=a.z,g=a.w;a.x=this.n11*c+this.n12*d+this.n13*e+this.n14*g;a.y=this.n21*c+this.n22*d+this.n23*
e+this.n24*g;a.z=this.n31*c+this.n32*d+this.n33*e+this.n34*g;a.w=this.n41*c+this.n42*d+this.n43*e+this.n44*g;return a},crossVector:function(a){var c=new THREE.Vector4;c.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;c.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;c.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;c.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return c},multiply:function(a,c){var d=a.n11,e=a.n12,g=a.n13,b=a.n14,k=a.n21,j=a.n22,h=a.n23,n=a.n24,v=a.n31,
y=a.n32,u=a.n33,p=a.n34,w=a.n41,B=a.n42,F=a.n43,t=a.n44,l=c.n11,f=c.n12,m=c.n13,o=c.n14,D=c.n21,x=c.n22,q=c.n23,H=c.n24,z=c.n31,K=c.n32,E=c.n33,A=c.n34,M=c.n41,aa=c.n42,N=c.n43,U=c.n44;this.n11=d*l+e*D+g*z+b*M;this.n12=d*f+e*x+g*K+b*aa;this.n13=d*m+e*q+g*E+b*N;this.n14=d*o+e*H+g*A+b*U;this.n21=k*l+j*D+h*z+n*M;this.n22=k*f+j*x+h*K+n*aa;this.n23=k*m+j*q+h*E+n*N;this.n24=k*o+j*H+h*A+n*U;this.n31=v*l+y*D+u*z+p*M;this.n32=v*f+y*x+u*K+p*aa;this.n33=v*m+y*q+u*E+p*N;this.n34=v*o+y*H+u*A+p*U;this.n41=w*l+
B*D+F*z+t*M;this.n42=w*f+B*x+F*K+t*aa;this.n43=w*m+B*q+F*E+t*N;this.n44=w*o+B*H+F*A+t*U;return this},multiplySelf:function(a){var c=this.n11,d=this.n12,e=this.n13,g=this.n14,b=this.n21,k=this.n22,j=this.n23,h=this.n24,n=this.n31,v=this.n32,y=this.n33,u=this.n34,p=this.n41,w=this.n42,B=this.n43,F=this.n44,t=a.n11,l=a.n21,f=a.n31,m=a.n41,o=a.n12,D=a.n22,x=a.n32,q=a.n42,H=a.n13,z=a.n23,K=a.n33,E=a.n43,A=a.n14,M=a.n24,aa=a.n34;a=a.n44;this.n11=c*t+d*l+e*f+g*m;this.n12=c*o+d*D+e*x+g*q;this.n13=c*H+d*z+
e*K+g*E;this.n14=c*A+d*M+e*aa+g*a;this.n21=b*t+k*l+j*f+h*m;this.n22=b*o+k*D+j*x+h*q;this.n23=b*H+k*z+j*K+h*E;this.n24=b*A+k*M+j*aa+h*a;this.n31=n*t+v*l+y*f+u*m;this.n32=n*o+v*D+y*x+u*q;this.n33=n*H+v*z+y*K+u*E;this.n34=n*A+v*M+y*aa+u*a;this.n41=p*t+w*l+B*f+F*m;this.n42=p*o+w*D+B*x+F*q;this.n43=p*H+w*z+B*K+F*E;this.n44=p*A+w*M+B*aa+F*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=
a;this.n34*=a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){var a=this.n11,c=this.n12,d=this.n13,e=this.n14,g=this.n21,b=this.n22,k=this.n23,j=this.n24,h=this.n31,n=this.n32,v=this.n33,y=this.n34,u=this.n41,p=this.n42,w=this.n43,B=this.n44;return e*k*n*u-d*j*n*u-e*b*v*u+c*j*v*u+d*b*y*u-c*k*y*u-e*k*h*p+d*j*h*p+e*g*v*p-a*j*v*p-d*g*y*p+a*k*y*p+e*b*h*w-c*j*h*w-e*g*n*w+a*j*n*w+c*g*y*w-a*b*y*w-d*b*h*B+c*k*h*B+d*g*n*B-a*k*n*B-c*g*v*B+a*b*v*B},transpose:function(){function a(c,
d,e){var g=c[d];c[d]=c[e];c[e]=g}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){var a=this.flat;a[0]=this.n11;
a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},setTranslation:function(a,c,d){this.set(1,0,0,a,0,1,0,c,0,0,1,d,0,0,0,1);return this},setScale:function(a,c,d){this.set(a,0,0,0,0,c,0,0,0,0,d,0,0,0,0,1);return this},setRotX:function(a){var c=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,c,-a,0,0,a,c,0,0,0,0,1);return this},setRotY:function(a){var c=
Math.cos(a);a=Math.sin(a);this.set(c,0,a,0,0,1,0,0,-a,0,c,0,0,0,0,1);return this},setRotZ:function(a){var c=Math.cos(a);a=Math.sin(a);this.set(c,-a,0,0,a,c,0,0,0,0,1,0,0,0,0,1);return this},setRotAxis:function(a,c){var d=Math.cos(c),e=Math.sin(c),g=1-d,b=a.x,k=a.y,j=a.z,h=g*b,n=g*k;this.set(h*b+d,h*k-e*j,h*j+e*k,0,h*k+e*j,n*k+d,n*j-e*b,0,h*j-e*k,n*j+e*b,g*j*j+d,0,0,0,0,1);return this},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+
this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,c,d){var e=new THREE.Matrix4;e.setTranslation(a,c,d);return e};THREE.Matrix4.scaleMatrix=function(a,c,d){var e=new THREE.Matrix4;e.setScale(a,c,d);return e};THREE.Matrix4.rotationXMatrix=function(a){var c=new THREE.Matrix4;c.setRotX(a);return c};
THREE.Matrix4.rotationYMatrix=function(a){var c=new THREE.Matrix4;c.setRotY(a);return c};THREE.Matrix4.rotationZMatrix=function(a){var c=new THREE.Matrix4;c.setRotZ(a);return c};THREE.Matrix4.rotationAxisAngleMatrix=function(a,c){var d=new THREE.Matrix4;d.setRotAxis(a,c);return d};
THREE.Matrix4.makeInvert=function(a){var c=a.n11,d=a.n12,e=a.n13,g=a.n14,b=a.n21,k=a.n22,j=a.n23,h=a.n24,n=a.n31,v=a.n32,y=a.n33,u=a.n34,p=a.n41,w=a.n42,B=a.n43,F=a.n44,t=new THREE.Matrix4;t.n11=j*u*w-h*y*w+h*v*B-k*u*B-j*v*F+k*y*F;t.n12=g*y*w-e*u*w-g*v*B+d*u*B+e*v*F-d*y*F;t.n13=e*h*w-g*j*w+g*k*B-d*h*B-e*k*F+d*j*F;t.n14=g*j*v-e*h*v-g*k*y+d*h*y+e*k*u-d*j*u;t.n21=h*y*p-j*u*p-h*n*B+b*u*B+j*n*F-b*y*F;t.n22=e*u*p-g*y*p+g*n*B-c*u*B-e*n*F+c*y*F;t.n23=g*j*p-e*h*p-g*b*B+c*h*B+e*b*F-c*j*F;t.n24=e*h*n-g*j*n+
g*b*y-c*h*y-e*b*u+c*j*u;t.n31=k*u*p-h*v*p+h*n*w-b*u*w-k*n*F+b*v*F;t.n32=g*v*p-d*u*p-g*n*w+c*u*w+d*n*F-c*v*F;t.n33=e*h*p-g*k*p+g*b*w-c*h*w-d*b*F+c*k*F;t.n34=g*k*n-d*h*n-g*b*v+c*h*v+d*b*u-c*k*u;t.n41=j*v*p-k*y*p-j*n*w+b*y*w+k*n*B-b*v*B;t.n42=d*y*p-e*v*p+e*n*w-c*y*w-d*n*B+c*v*B;t.n43=e*k*p-d*j*p-e*b*w+c*j*w+d*b*B-c*k*B;t.n44=d*j*n-e*k*n+e*b*v-c*j*v-d*b*y+c*k*y;t.multiplyScalar(1/a.determinant());return t};
THREE.Matrix4.makeInvert3x3=function(a){var c=a.flatten();a=a.m33;var d=a.m,e=c[10]*c[5]-c[6]*c[9],g=-c[10]*c[1]+c[2]*c[9],b=c[6]*c[1]-c[2]*c[5],k=-c[10]*c[4]+c[6]*c[8],j=c[10]*c[0]-c[2]*c[8],h=-c[6]*c[0]+c[2]*c[4],n=c[9]*c[4]-c[5]*c[8],v=-c[9]*c[0]+c[1]*c[8],y=c[5]*c[0]-c[1]*c[4];c=c[0]*e+c[1]*k+c[2]*n;if(c==0)throw"matrix not invertible";c=1/c;d[0]=c*e;d[1]=c*g;d[2]=c*b;d[3]=c*k;d[4]=c*j;d[5]=c*h;d[6]=c*n;d[7]=c*v;d[8]=c*y;return a};
THREE.Matrix4.makeFrustum=function(a,c,d,e,g,b){var k,j,h;k=new THREE.Matrix4;j=2*g/(c-a);h=2*g/(e-d);a=(c+a)/(c-a);d=(e+d)/(e-d);e=-(b+g)/(b-g);g=-2*b*g/(b-g);k.n11=j;k.n12=0;k.n13=a;k.n14=0;k.n21=0;k.n22=h;k.n23=d;k.n24=0;k.n31=0;k.n32=0;k.n33=e;k.n34=g;k.n41=0;k.n42=0;k.n43=-1;k.n44=0;return k};THREE.Matrix4.makePerspective=function(a,c,d,e){var g;a=d*Math.tan(a*Math.PI/360);g=-a;return THREE.Matrix4.makeFrustum(g*c,a*c,g,a,d,e)};
THREE.Matrix4.makeOrtho=function(a,c,d,e,g,b){var k,j,h,n;k=new THREE.Matrix4;j=c-a;h=d-e;n=b-g;a=(c+a)/j;d=(d+e)/h;g=(b+g)/n;k.n11=2/j;k.n12=0;k.n13=0;k.n14=-a;k.n21=0;k.n22=2/h;k.n23=0;k.n24=-d;k.n31=0;k.n32=0;k.n33=-2/n;k.n34=-g;k.n41=0;k.n42=0;k.n43=0;k.n44=1;return k};THREE.Matrix4.__tmpVec1=new THREE.Vector3;THREE.Matrix4.__tmpVec2=new THREE.Vector3;THREE.Matrix4.__tmpVec3=new THREE.Vector3;
THREE.Vertex=function(a,c){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=c||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,c,d,e,g){this.a=a;this.b=c;this.c=d;this.centroid=new THREE.Vector3;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.materials=g instanceof Array?g:[g]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,c,d,e,g,b){this.a=a;this.b=c;this.c=d;this.d=e;this.centroid=new THREE.Vector3;this.normal=g instanceof THREE.Vector3?g:new THREE.Vector3;this.vertexNormals=g instanceof Array?g:[];this.materials=b instanceof Array?b:[b]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,c){this.u=a||0;this.v=c||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.uvs2=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,c,d;a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];d.centroid.set(0,0,0);if(d instanceof THREE.Face3){d.centroid.addSelf(this.vertices[d.a].position);d.centroid.addSelf(this.vertices[d.b].position);d.centroid.addSelf(this.vertices[d.c].position);d.centroid.divideScalar(3)}else if(d instanceof THREE.Face4){d.centroid.addSelf(this.vertices[d.a].position);d.centroid.addSelf(this.vertices[d.b].position);d.centroid.addSelf(this.vertices[d.c].position);
d.centroid.addSelf(this.vertices[d.d].position);d.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var c,d,e,g,b,k,j=new THREE.Vector3,h=new THREE.Vector3;e=0;for(g=this.vertices.length;e<g;e++){b=this.vertices[e];b.normal.set(0,0,0)}e=0;for(g=this.faces.length;e<g;e++){b=this.faces[e];if(a&&b.vertexNormals.length){j.set(0,0,0);c=0;for(d=b.normal.length;c<d;c++)j.addSelf(b.vertexNormals[c]);j.divideScalar(3)}else{c=this.vertices[b.a];d=this.vertices[b.b];k=this.vertices[b.c];j.sub(k.position,
d.position);h.sub(c.position,d.position);j.crossSelf(h)}j.isZero()||j.normalize();b.normal.copy(j)}},computeVertexNormals:function(){var a,c,d,e;if(this.__tmpVertices==undefined){e=this.__tmpVertices=Array(this.vertices.length);a=0;for(c=this.vertices.length;a<c;a++)e[a]=new THREE.Vector3;a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];if(d instanceof THREE.Face3)d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(d instanceof THREE.Face4)d.vertexNormals=[new THREE.Vector3,
new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}}else{e=this.__tmpVertices;a=0;for(c=this.vertices.length;a<c;a++)e[a].set(0,0,0)}a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];if(d instanceof THREE.Face3){e[d.a].addSelf(d.normal);e[d.b].addSelf(d.normal);e[d.c].addSelf(d.normal)}else if(d instanceof THREE.Face4){e[d.a].addSelf(d.normal);e[d.b].addSelf(d.normal);e[d.c].addSelf(d.normal);e[d.d].addSelf(d.normal)}}a=0;for(c=this.vertices.length;a<c;a++)e[a].normalize();a=0;for(c=this.faces.length;a<
c;a++){d=this.faces[a];if(d instanceof THREE.Face3){d.vertexNormals[0].copy(e[d.a]);d.vertexNormals[1].copy(e[d.b]);d.vertexNormals[2].copy(e[d.c])}else if(d instanceof THREE.Face4){d.vertexNormals[0].copy(e[d.a]);d.vertexNormals[1].copy(e[d.b]);d.vertexNormals[2].copy(e[d.c]);d.vertexNormals[3].copy(e[d.d])}}},computeTangents:function(){function a(A,M,aa,N,U,T,R){b=A.vertices[M].position;k=A.vertices[aa].position;j=A.vertices[N].position;h=g[U];n=g[T];v=g[R];y=k.x-b.x;u=j.x-b.x;p=k.y-b.y;w=j.y-b.y;
B=k.z-b.z;F=j.z-b.z;t=n.u-h.u;l=v.u-h.u;f=n.v-h.v;m=v.v-h.v;o=1/(t*m-l*f);q.set((m*y-f*u)*o,(m*p-f*w)*o,(m*B-f*F)*o);H.set((t*u-l*y)*o,(t*w-l*p)*o,(t*F-l*B)*o);D[M].addSelf(q);D[aa].addSelf(q);D[N].addSelf(q);x[M].addSelf(H);x[aa].addSelf(H);x[N].addSelf(H)}var c,d,e,g,b,k,j,h,n,v,y,u,p,w,B,F,t,l,f,m,o,D=[],x=[],q=new THREE.Vector3,H=new THREE.Vector3,z=new THREE.Vector3,K=new THREE.Vector3,E=new THREE.Vector3;c=0;for(d=this.vertices.length;c<d;c++){D[c]=new THREE.Vector3;x[c]=new THREE.Vector3}c=
0;for(d=this.faces.length;c<d;c++){e=this.faces[c];g=this.uvs[c];if(e instanceof THREE.Face3){a(this,e.a,e.b,e.c,0,1,2);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);this.vertices[e.c].normal.copy(e.vertexNormals[2])}else if(e instanceof THREE.Face4){a(this,e.a,e.b,e.c,0,1,2);a(this,e.a,e.b,e.d,0,1,3);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);this.vertices[e.c].normal.copy(e.vertexNormals[2]);
this.vertices[e.d].normal.copy(e.vertexNormals[3])}}c=0;for(d=this.vertices.length;c<d;c++){E.copy(this.vertices[c].normal);e=D[c];z.copy(e);z.subSelf(E.multiplyScalar(E.dot(e))).normalize();K.cross(this.vertices[c].normal,e);e=K.dot(x[c]);e=e<0?-1:1;this.vertices[c].tangent.set(z.x,z.y,z.z,e)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],
z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var c=1,d=this.vertices.length;c<d;c++){a=this.vertices[c];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>
this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,c=0,d=this.vertices.length;c<d;c++)a=Math.max(a,this.vertices[c].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(v){var y=[];c=0;for(d=v.length;c<d;c++)v[c]==undefined?y.push("undefined"):y.push(v[c].toString());return y.join("_")}var c,d,e,g,b,k,j,h,n={};e=0;for(g=this.faces.length;e<g;e++){b=this.faces[e];
k=b.materials;j=a(k);if(n[j]==undefined)n[j]={hash:j,counter:0};h=n[j].hash+"_"+n[j].counter;if(this.geometryChunks[h]==undefined)this.geometryChunks[h]={faces:[],materials:k,vertices:0};b=b instanceof THREE.Face3?3:4;if(this.geometryChunks[h].vertices+b>65535){n[j].counter+=1;h=n[j].hash+"_"+n[j].counter;if(this.geometryChunks[h]==undefined)this.geometryChunks[h]={faces:[],materials:k,vertices:0}}this.geometryChunks[h].faces.push(e);this.geometryChunks[h].vertices+=b}},toString:function(){return"THREE.Geometry ( vertices: "+
this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,c,d,e){this.fov=a;this.aspect=c;this.near=d;this.far=e;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.tmpVec=new THREE.Vector3;this.translateX=function(g){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(g);this.tmpVec.crossSelf(this.up);this.position.addSelf(this.tmpVec);this.target.position.addSelf(this.tmpVec)};
this.translateZ=function(g){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(g);this.position.subSelf(this.tmpVec);this.target.position.subSelf(this.tmpVec)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};
THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=c||1};THREE.DirectionalLight.prototype=new THREE.Light;
THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=c||1};THREE.PointLight.prototype=new THREE.Light;THREE.PointLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.tmpMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){var a=this.position,c=this.rotation,d=this.scale,e=this.tmpMatrix;this.matrix.setTranslation(a.x,a.y,a.z);this.rotationMatrix.setRotX(c.x);if(c.y!=0){e.setRotY(c.y);this.rotationMatrix.multiplySelf(e)}if(c.z!=0){e.setRotZ(c.z);this.rotationMatrix.multiplySelf(e)}this.matrix.multiplySelf(this.rotationMatrix);if(d.x!=0||d.y!=0||d.z!=0){e.setScale(d.x,d.y,d.z);this.matrix.multiplySelf(e)}}};THREE.Object3DCounter={value:0};
THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.autoUpdateMatrix=false};THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;
THREE.Line=function(a,c,d){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.type=d!=undefined?d:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;THREE.Mesh=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};
THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.light_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==
undefined)this.map=a.map;if(a.light_map!==undefined)this.light_map=a.light_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==
undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>light_map: "+this.light_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.light_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);
if(a.map!==undefined)this.map=a.map;if(a.light_map!==undefined)this.light_map=a.light_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;
if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.light_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=
1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.light_map!==undefined)this.light_map=a.light_map;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;
if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;
if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial"}};
THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.opacity=1;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};
THREE.Texture=function(a,c,d,e,g,b){this.image=a;this.mapping=c!==undefined?c:new THREE.UVMapping;this.wrap_s=d!==undefined?d:THREE.ClampToEdgeWrapping;this.wrap_t=e!==undefined?e:THREE.ClampToEdgeWrapping;this.mag_filter=g!==undefined?g:THREE.LinearFilter;this.min_filter=b!==undefined?b:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;
THREE.RenderTarget=function(a,c,d){this.width=a;this.height=c;d=d||{};this.wrap_s=d.wrap_s!==undefined?d.wrap_s:THREE.ClampToEdgeWrapping;this.wrap_t=d.wrap_t!==undefined?d.wrap_t:THREE.ClampToEdgeWrapping;this.mag_filter=d.mag_filter!==undefined?d.mag_filter:THREE.LinearFilter;this.min_filter=d.min_filter!==undefined?d.min_filter:THREE.LinearMipMapLinearFilter;this.format=d.format!==undefined?d.format:THREE.RGBFormat;this.type=d.type!==undefined?d.type:THREE.UnsignedByteType};
var Uniforms={clone:function(a){var c,d,e,g={};for(c in a){g[c]={};for(d in a[c]){e=a[c][d];g[c][d]=e instanceof THREE.Color||e instanceof THREE.Vector3||e instanceof THREE.Texture?e.clone():e}}return g},merge:function(a){var c,d,e,g={};for(c=0;c<a.length;c++){e=this.clone(a[c]);for(d in e)g[d]=e[d]}return g}};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,c,d){this.color=new THREE.Color(a);this.near=c||1;this.far=d||1E3};THREE.FogExp2=function(a,c){this.color=new THREE.Color(a);this.density=c||2.5E-4};
THREE.Projector=function(){function a(x,q){return q.z-x.z}function c(x,q){var H=0,z=1,K=x.z+x.w,E=q.z+q.w,A=-x.z+x.w,M=-q.z+q.w;if(K>=0&&E>=0&&A>=0&&M>=0)return true;else if(K<0&&E<0||A<0&&M<0)return false;else{if(K<0)H=Math.max(H,K/(K-E));else if(E<0)z=Math.min(z,K/(K-E));if(A<0)H=Math.max(H,A/(A-M));else if(M<0)z=Math.min(z,A/(A-M));if(z<H)return false;else{x.lerpSelf(q,H);q.lerpSelf(x,1-z);return true}}}var d,e,g=[],b,k,j,h=[],n,v,y=[],u,p,w=[],B=new THREE.Vector4,F=new THREE.Vector4,t=new THREE.Matrix4,
l=new THREE.Matrix4,f=[],m=new THREE.Vector4,o=new THREE.Vector4,D;this.projectObjects=function(x,q,H){var z=[],K,E;e=0;t.multiply(q.projectionMatrix,q.matrix);f[0]=new THREE.Vector4(t.n41-t.n11,t.n42-t.n12,t.n43-t.n13,t.n44-t.n14);f[1]=new THREE.Vector4(t.n41+t.n11,t.n42+t.n12,t.n43+t.n13,t.n44+t.n14);f[2]=new THREE.Vector4(t.n41+t.n21,t.n42+t.n22,t.n43+t.n23,t.n44+t.n24);f[3]=new THREE.Vector4(t.n41-t.n21,t.n42-t.n22,t.n43-t.n23,t.n44-t.n24);f[4]=new THREE.Vector4(t.n41-t.n31,t.n42-t.n32,t.n43-
t.n33,t.n44-t.n34);f[5]=new THREE.Vector4(t.n41+t.n31,t.n42+t.n32,t.n43+t.n33,t.n44+t.n34);q=0;for(K=f.length;q<K;q++){E=f[q];E.divideScalar(Math.sqrt(E.x*E.x+E.y*E.y+E.z*E.z))}K=x.objects;x=0;for(q=K.length;x<q;x++){E=K[x];var A;if(!(A=!E.visible)){if(A=E instanceof THREE.Mesh){a:{A=void 0;for(var M=E.position,aa=-E.geometry.boundingSphere.radius*Math.max(E.scale.x,Math.max(E.scale.y,E.scale.z)),N=0;N<6;N++){A=f[N].x*M.x+f[N].y*M.y+f[N].z*M.z+f[N].w;if(A<=aa){A=false;break a}}A=true}A=!A}A=A}if(!A){d=
g[e]=g[e]||new THREE.RenderableObject;B.copy(E.position);t.multiplyVector3(B);d.object=E;d.z=B.z;z.push(d);e++}}H&&z.sort(a);return z};this.projectScene=function(x,q,H){var z=[],K=q.near,E=q.far,A,M,aa,N,U,T,R,Z,ca,W,S,ba,X,I,Q,V;j=v=p=0;q.autoUpdateMatrix&&q.updateMatrix();t.multiply(q.projectionMatrix,q.matrix);T=this.projectObjects(x,q,true);x=0;for(A=T.length;x<A;x++){R=T[x].object;if(R.visible){R.autoUpdateMatrix&&R.updateMatrix();Z=R.matrix;ca=R.rotationMatrix;W=R.materials;S=R.overdraw;if(R instanceof
THREE.Mesh){ba=R.geometry;X=ba.vertices;M=0;for(aa=X.length;M<aa;M++){I=X[M];I.positionWorld.copy(I.position);Z.multiplyVector3(I.positionWorld);N=I.positionScreen;N.copy(I.positionWorld);t.multiplyVector4(N);N.x/=N.w;N.y/=N.w;I.__visible=N.z>K&&N.z<E}ba=ba.faces;M=0;for(aa=ba.length;M<aa;M++){I=ba[M];if(I instanceof THREE.Face3){N=X[I.a];U=X[I.b];Q=X[I.c];if(N.__visible&&U.__visible&&Q.__visible)if(R.doubleSided||R.flipSided!=(Q.positionScreen.x-N.positionScreen.x)*(U.positionScreen.y-N.positionScreen.y)-
(Q.positionScreen.y-N.positionScreen.y)*(U.positionScreen.x-N.positionScreen.x)<0){b=h[j]=h[j]||new THREE.RenderableFace3;b.v1.positionWorld.copy(N.positionWorld);b.v2.positionWorld.copy(U.positionWorld);b.v3.positionWorld.copy(Q.positionWorld);b.v1.positionScreen.copy(N.positionScreen);b.v2.positionScreen.copy(U.positionScreen);b.v3.positionScreen.copy(Q.positionScreen);b.normalWorld.copy(I.normal);ca.multiplyVector3(b.normalWorld);b.centroidWorld.copy(I.centroid);Z.multiplyVector3(b.centroidWorld);
b.centroidScreen.copy(b.centroidWorld);t.multiplyVector3(b.centroidScreen);Q=I.vertexNormals;D=b.vertexNormalsWorld;N=0;for(U=Q.length;N<U;N++){V=D[N]=D[N]||new THREE.Vector3;V.copy(Q[N]);ca.multiplyVector3(V)}b.z=b.centroidScreen.z;b.meshMaterials=W;b.faceMaterials=I.materials;b.overdraw=S;if(R.geometry.uvs[M]){b.uvs[0]=R.geometry.uvs[M][0];b.uvs[1]=R.geometry.uvs[M][1];b.uvs[2]=R.geometry.uvs[M][2]}z.push(b);j++}}else if(I instanceof THREE.Face4){N=X[I.a];U=X[I.b];Q=X[I.c];V=X[I.d];if(N.__visible&&
U.__visible&&Q.__visible&&V.__visible)if(R.doubleSided||R.flipSided!=((V.positionScreen.x-N.positionScreen.x)*(U.positionScreen.y-N.positionScreen.y)-(V.positionScreen.y-N.positionScreen.y)*(U.positionScreen.x-N.positionScreen.x)<0||(U.positionScreen.x-Q.positionScreen.x)*(V.positionScreen.y-Q.positionScreen.y)-(U.positionScreen.y-Q.positionScreen.y)*(V.positionScreen.x-Q.positionScreen.x)<0)){b=h[j]=h[j]||new THREE.RenderableFace3;b.v1.positionWorld.copy(N.positionWorld);b.v2.positionWorld.copy(U.positionWorld);
b.v3.positionWorld.copy(V.positionWorld);b.v1.positionScreen.copy(N.positionScreen);b.v2.positionScreen.copy(U.positionScreen);b.v3.positionScreen.copy(V.positionScreen);b.normalWorld.copy(I.normal);ca.multiplyVector3(b.normalWorld);b.centroidWorld.copy(I.centroid);Z.multiplyVector3(b.centroidWorld);b.centroidScreen.copy(b.centroidWorld);t.multiplyVector3(b.centroidScreen);b.z=b.centroidScreen.z;b.meshMaterials=W;b.faceMaterials=I.materials;b.overdraw=S;if(R.geometry.uvs[M]){b.uvs[0]=R.geometry.uvs[M][0];
b.uvs[1]=R.geometry.uvs[M][1];b.uvs[2]=R.geometry.uvs[M][3]}z.push(b);j++;k=h[j]=h[j]||new THREE.RenderableFace3;k.v1.positionWorld.copy(U.positionWorld);k.v2.positionWorld.copy(Q.positionWorld);k.v3.positionWorld.copy(V.positionWorld);k.v1.positionScreen.copy(U.positionScreen);k.v2.positionScreen.copy(Q.positionScreen);k.v3.positionScreen.copy(V.positionScreen);k.normalWorld.copy(b.normalWorld);k.centroidWorld.copy(b.centroidWorld);k.centroidScreen.copy(b.centroidScreen);k.z=k.centroidScreen.z;k.meshMaterials=
W;k.faceMaterials=I.materials;k.overdraw=S;if(R.geometry.uvs[M]){k.uvs[0]=R.geometry.uvs[M][1];k.uvs[1]=R.geometry.uvs[M][2];k.uvs[2]=R.geometry.uvs[M][3]}z.push(k);j++}}}}else if(R instanceof THREE.Line){l.multiply(t,Z);X=R.geometry.vertices;I=X[0];I.positionScreen.copy(I.position);l.multiplyVector4(I.positionScreen);M=1;for(aa=X.length;M<aa;M++){N=X[M];N.positionScreen.copy(N.position);l.multiplyVector4(N.positionScreen);U=X[M-1];m.copy(N.positionScreen);o.copy(U.positionScreen);if(c(m,o)){m.multiplyScalar(1/
m.w);o.multiplyScalar(1/o.w);n=y[v]=y[v]||new THREE.RenderableLine;n.v1.positionScreen.copy(m);n.v2.positionScreen.copy(o);n.z=Math.max(m.z,o.z);n.materials=R.materials;z.push(n);v++}}}else if(R instanceof THREE.Particle){F.set(R.position.x,R.position.y,R.position.z,1);t.multiplyVector4(F);F.z/=F.w;if(F.z>0&&F.z<1){u=w[p]=w[p]||new THREE.RenderableParticle;u.x=F.x/F.w;u.y=F.y/F.w;u.z=F.z;u.rotation=R.rotation.z;u.scale.x=R.scale.x*Math.abs(u.x-(F.x+q.projectionMatrix.n11)/(F.w+q.projectionMatrix.n14));
u.scale.y=R.scale.y*Math.abs(u.y-(F.y+q.projectionMatrix.n22)/(F.w+q.projectionMatrix.n24));u.materials=R.materials;z.push(u);p++}}}}H&&z.sort(a);return z};this.unprojectVector=function(x,q){var H=THREE.Matrix4.makeInvert(q.matrix);H.multiplySelf(THREE.Matrix4.makeInvert(q.projectionMatrix));H.multiplyVector3(x);return x}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,c=new THREE.Projector,d,e,g,b;this.domElement=document.createElement("div");this.setSize=function(k,j){d=k;e=j;g=d/2;b=e/2};this.render=function(k,j){var h,n,v,y,u,p,w,B;a=c.projectScene(k,j);h=0;for(n=a.length;h<n;h++){u=a[h];if(u instanceof THREE.RenderableParticle){w=u.x*g+g;B=u.y*b+b;v=0;for(y=u.material.length;v<y;v++){p=u.material[v];if(p instanceof THREE.ParticleDOMMaterial){p=p.domElement;p.style.left=w+"px";p.style.top=B+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(la){if(u!=la)n.globalAlpha=u=la}function c(la){if(p!=la){switch(la){case THREE.NormalBlending:n.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:n.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:n.globalCompositeOperation="darker"}p=la}}var d=null,e=new THREE.Projector,g=document.createElement("canvas"),b,k,j,h,n=g.getContext("2d"),v=new THREE.Color(0),y=0,u=1,p=0,w=null,B=null,F=1,t,l,f,m,o,D,x,q,H,z=new THREE.Color,
K=new THREE.Color,E=new THREE.Color,A=new THREE.Color,M=new THREE.Color,aa,N,U,T,R,Z,ca,W,S,ba=new THREE.Rectangle,X=new THREE.Rectangle,I=new THREE.Rectangle,Q=false,V=new THREE.Color,ha=new THREE.Color,ka=new THREE.Color,C=new THREE.Color,G=Math.PI*2,J=new THREE.Vector3,P,da,ia,fa,qa,sa,wa=16;P=document.createElement("canvas");P.width=P.height=2;da=P.getContext("2d");da.fillStyle="rgba(0,0,0,1)";da.fillRect(0,0,2,2);ia=da.getImageData(0,0,2,2);fa=ia.data;qa=document.createElement("canvas");qa.width=
qa.height=wa;sa=qa.getContext("2d");sa.translate(-wa/2,-wa/2);sa.scale(wa,wa);wa--;this.domElement=g;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(la,xa){b=la;k=xa;j=b/2;h=k/2;g.width=b;g.height=k;ba.set(-j,-h,j,h);u=1;p=0;B=w=null;F=1};this.setClearColor=function(la,xa){v.setHex(la);y=xa;X.set(-j,-h,j,h);n.setTransform(1,0,0,-1,j,h);this.clear()};this.clear=function(){n.setTransform(1,0,0,-1,j,h);if(!X.isEmpty()){X.inflate(1);X.minSelf(ba);if(v.hex==0&&y==0)n.clearRect(X.getX(),
X.getY(),X.getWidth(),X.getHeight());else{c(THREE.NormalBlending);a(1);n.fillStyle="rgba("+Math.floor(v.r*255)+","+Math.floor(v.g*255)+","+Math.floor(v.b*255)+","+y+")";n.fillRect(X.getX(),X.getY(),X.getWidth(),X.getHeight())}X.empty()}};this.render=function(la,xa){function Pa(L){var ea,$,O,Y=L.lights;ha.setRGB(0,0,0);ka.setRGB(0,0,0);C.setRGB(0,0,0);L=0;for(ea=Y.length;L<ea;L++){$=Y[L];O=$.color;if($ instanceof THREE.AmbientLight){ha.r+=O.r;ha.g+=O.g;ha.b+=O.b}else if($ instanceof THREE.DirectionalLight){ka.r+=
O.r;ka.g+=O.g;ka.b+=O.b}else if($ instanceof THREE.PointLight){C.r+=O.r;C.g+=O.g;C.b+=O.b}}}function Da(L,ea,$,O){var Y,ga,ma,na,oa=L.lights;L=0;for(Y=oa.length;L<Y;L++){ga=oa[L];ma=ga.color;na=ga.intensity;if(ga instanceof THREE.DirectionalLight){ga=$.dot(ga.position)*na;if(ga>0){O.r+=ma.r*ga;O.g+=ma.g*ga;O.b+=ma.b*ga}}else if(ga instanceof THREE.PointLight){J.sub(ga.position,ea);J.normalize();ga=$.dot(J)*na;if(ga>0){O.r+=ma.r*ga;O.g+=ma.g*ga;O.b+=ma.b*ga}}}}function Qa(L,ea,$){if($.opacity!=0){a($.opacity);
c($.blending);var O,Y,ga,ma,na,oa;if($ instanceof THREE.ParticleBasicMaterial){if($.map&&$.map.image.loaded){ma=$.map.image;na=ma.width>>1;oa=ma.height>>1;Y=ea.scale.x*j;ga=ea.scale.y*h;$=Y*na;O=ga*oa;I.set(L.x-$,L.y-O,L.x+$,L.y+O);if(ba.instersects(I)){n.save();n.translate(L.x,L.y);n.rotate(-ea.rotation);n.scale(Y,-ga);n.translate(-na,-oa);n.drawImage(ma,0,0);n.restore()}}}else if($ instanceof THREE.ParticleCircleMaterial){if(Q){V.r=ha.r+ka.r+C.r;V.g=ha.g+ka.g+C.g;V.b=ha.b+ka.b+C.b;z.r=$.color.r*
V.r;z.g=$.color.g*V.g;z.b=$.color.b*V.b;z.updateStyleString()}else z.__styleString=$.color.__styleString;$=ea.scale.x*j;O=ea.scale.y*h;I.set(L.x-$,L.y-O,L.x+$,L.y+O);if(ba.instersects(I)){Y=z.__styleString;if(B!=Y)n.fillStyle=B=Y;n.save();n.translate(L.x,L.y);n.rotate(-ea.rotation);n.scale($,O);n.beginPath();n.arc(0,0,1,0,G,true);n.closePath();n.fill();n.restore()}}}}function Ra(L,ea,$,O){if(O.opacity!=0){a(O.opacity);c(O.blending);n.beginPath();n.moveTo(L.positionScreen.x,L.positionScreen.y);n.lineTo(ea.positionScreen.x,
ea.positionScreen.y);n.closePath();if(O instanceof THREE.LineBasicMaterial){z.__styleString=O.color.__styleString;L=O.linewidth;if(F!=L)n.lineWidth=F=L;L=z.__styleString;if(w!=L)n.strokeStyle=w=L;n.stroke();I.inflate(O.linewidth*2)}}}function La(L,ea,$,O,Y,ga){if(Y.opacity!=0){a(Y.opacity);c(Y.blending);m=L.positionScreen.x;o=L.positionScreen.y;D=ea.positionScreen.x;x=ea.positionScreen.y;q=$.positionScreen.x;H=$.positionScreen.y;n.beginPath();n.moveTo(m,o);n.lineTo(D,x);n.lineTo(q,H);n.lineTo(m,o);
n.closePath();if(Y instanceof THREE.MeshBasicMaterial)if(Y.map)Y.map.image.loaded&&Y.map.mapping instanceof THREE.UVMapping&&Aa(m,o,D,x,q,H,Y.map.image,O.uvs[0].u,O.uvs[0].v,O.uvs[1].u,O.uvs[1].v,O.uvs[2].u,O.uvs[2].v);else if(Y.env_map){if(Y.env_map.image.loaded)if(Y.env_map.mapping instanceof THREE.SphericalReflectionMapping){L=xa.matrix;J.copy(O.vertexNormalsWorld[0]);T=(J.x*L.n11+J.y*L.n12+J.z*L.n13)*0.5+0.5;R=-(J.x*L.n21+J.y*L.n22+J.z*L.n23)*0.5+0.5;J.copy(O.vertexNormalsWorld[1]);Z=(J.x*L.n11+
J.y*L.n12+J.z*L.n13)*0.5+0.5;ca=-(J.x*L.n21+J.y*L.n22+J.z*L.n23)*0.5+0.5;J.copy(O.vertexNormalsWorld[2]);W=(J.x*L.n11+J.y*L.n12+J.z*L.n13)*0.5+0.5;S=-(J.x*L.n21+J.y*L.n22+J.z*L.n23)*0.5+0.5;Aa(m,o,D,x,q,H,Y.env_map.image,T,R,Z,ca,W,S)}}else Y.wireframe?Ea(Y.color.__styleString,Y.wireframe_linewidth):Fa(Y.color.__styleString);else if(Y instanceof THREE.MeshLambertMaterial){if(Y.map&&!Y.wireframe){Y.map.mapping instanceof THREE.UVMapping&&Aa(m,o,D,x,q,H,Y.map.image,O.uvs[0].u,O.uvs[0].v,O.uvs[1].u,
O.uvs[1].v,O.uvs[2].u,O.uvs[2].v);c(THREE.SubtractiveBlending)}if(Q)if(!Y.wireframe&&Y.shading==THREE.SmoothShading&&O.vertexNormalsWorld.length==3){K.r=E.r=A.r=ha.r;K.g=E.g=A.g=ha.g;K.b=E.b=A.b=ha.b;Da(ga,O.v1.positionWorld,O.vertexNormalsWorld[0],K);Da(ga,O.v2.positionWorld,O.vertexNormalsWorld[1],E);Da(ga,O.v3.positionWorld,O.vertexNormalsWorld[2],A);M.r=(E.r+A.r)*0.5;M.g=(E.g+A.g)*0.5;M.b=(E.b+A.b)*0.5;U=Ma(K,E,A,M);Aa(m,o,D,x,q,H,U,0,0,1,0,0,1)}else{V.r=ha.r;V.g=ha.g;V.b=ha.b;Da(ga,O.centroidWorld,
O.normalWorld,V);z.r=Y.color.r*V.r;z.g=Y.color.g*V.g;z.b=Y.color.b*V.b;z.updateStyleString();Y.wireframe?Ea(z.__styleString,Y.wireframe_linewidth):Fa(z.__styleString)}else Y.wireframe?Ea(Y.color.__styleString,Y.wireframe_linewidth):Fa(Y.color.__styleString)}else if(Y instanceof THREE.MeshDepthMaterial){aa=xa.near;N=xa.far;K.r=K.g=K.b=1-Ha(L.positionScreen.z,aa,N);E.r=E.g=E.b=1-Ha(ea.positionScreen.z,aa,N);A.r=A.g=A.b=1-Ha($.positionScreen.z,aa,N);M.r=(E.r+A.r)*0.5;M.g=(E.g+A.g)*0.5;M.b=(E.b+A.b)*
0.5;U=Ma(K,E,A,M);Aa(m,o,D,x,q,H,U,0,0,1,0,0,1)}else if(Y instanceof THREE.MeshNormalMaterial){z.r=Ia(O.normalWorld.x);z.g=Ia(O.normalWorld.y);z.b=Ia(O.normalWorld.z);z.updateStyleString();Y.wireframe?Ea(z.__styleString,Y.wireframe_linewidth):Fa(z.__styleString)}}}function Ea(L,ea){if(w!=L)n.strokeStyle=w=L;if(F!=ea)n.lineWidth=F=ea;n.stroke();I.inflate(ea*2)}function Fa(L){if(B!=L)n.fillStyle=B=L;n.fill()}function Aa(L,ea,$,O,Y,ga,ma,na,oa,ta,pa,ua,Ba){var ya,va;ya=ma.width-1;va=ma.height-1;na*=
ya;oa*=va;ta*=ya;pa*=va;ua*=ya;Ba*=va;$-=L;O-=ea;Y-=L;ga-=ea;ta-=na;pa-=oa;ua-=na;Ba-=oa;va=1/(ta*Ba-ua*pa);ya=(Ba*$-pa*Y)*va;pa=(Ba*O-pa*ga)*va;$=(ta*Y-ua*$)*va;O=(ta*ga-ua*O)*va;L=L-ya*na-$*oa;ea=ea-pa*na-O*oa;n.save();n.transform(ya,pa,$,O,L,ea);n.clip();n.drawImage(ma,0,0);n.restore()}function Ma(L,ea,$,O){var Y=~~(L.r*255),ga=~~(L.g*255);L=~~(L.b*255);var ma=~~(ea.r*255),na=~~(ea.g*255);ea=~~(ea.b*255);var oa=~~($.r*255),ta=~~($.g*255);$=~~($.b*255);var pa=~~(O.r*255),ua=~~(O.g*255);O=~~(O.b*
255);fa[0]=Y<0?0:Y>255?255:Y;fa[1]=ga<0?0:ga>255?255:ga;fa[2]=L<0?0:L>255?255:L;fa[4]=ma<0?0:ma>255?255:ma;fa[5]=na<0?0:na>255?255:na;fa[6]=ea<0?0:ea>255?255:ea;fa[8]=oa<0?0:oa>255?255:oa;fa[9]=ta<0?0:ta>255?255:ta;fa[10]=$<0?0:$>255?255:$;fa[12]=pa<0?0:pa>255?255:pa;fa[13]=ua<0?0:ua>255?255:ua;fa[14]=O<0?0:O>255?255:O;da.putImageData(ia,0,0);sa.drawImage(P,0,0);return qa}function Ha(L,ea,$){L=(L-ea)/($-ea);return L*L*(3-2*L)}function Ia(L){L=(L+1)*0.5;return L<0?0:L>1?1:L}function Ja(L,ea){var $=
ea.x-L.x,O=ea.y-L.y,Y=1/Math.sqrt($*$+O*O);$*=Y;O*=Y;ea.x+=$;ea.y+=O;L.x-=$;L.y-=O}var Ga,Na,ja,ra,za,Ka,Oa,Ca;this.autoClear?this.clear():n.setTransform(1,0,0,-1,j,h);d=e.projectScene(la,xa,this.sortElements);(Q=la.lights.length>0)&&Pa(la);Ga=0;for(Na=d.length;Ga<Na;Ga++){ja=d[Ga];I.empty();if(ja instanceof THREE.RenderableParticle){t=ja;t.x*=j;t.y*=h;ra=0;for(za=ja.materials.length;ra<za;ra++)Qa(t,ja,ja.materials[ra],la)}else if(ja instanceof THREE.RenderableLine){t=ja.v1;l=ja.v2;t.positionScreen.x*=
j;t.positionScreen.y*=h;l.positionScreen.x*=j;l.positionScreen.y*=h;I.addPoint(t.positionScreen.x,t.positionScreen.y);I.addPoint(l.positionScreen.x,l.positionScreen.y);if(ba.instersects(I)){ra=0;for(za=ja.materials.length;ra<za;)Ra(t,l,ja,ja.materials[ra++],la)}}else if(ja instanceof THREE.RenderableFace3){t=ja.v1;l=ja.v2;f=ja.v3;t.positionScreen.x*=j;t.positionScreen.y*=h;l.positionScreen.x*=j;l.positionScreen.y*=h;f.positionScreen.x*=j;f.positionScreen.y*=h;if(ja.overdraw){Ja(t.positionScreen,l.positionScreen);
Ja(l.positionScreen,f.positionScreen);Ja(f.positionScreen,t.positionScreen)}I.add3Points(t.positionScreen.x,t.positionScreen.y,l.positionScreen.x,l.positionScreen.y,f.positionScreen.x,f.positionScreen.y);if(ba.instersects(I)){ra=0;for(za=ja.meshMaterials.length;ra<za;){Ca=ja.meshMaterials[ra++];if(Ca instanceof THREE.MeshFaceMaterial){Ka=0;for(Oa=ja.faceMaterials.length;Ka<Oa;)(Ca=ja.faceMaterials[Ka++])&&La(t,l,f,ja,Ca,la)}else La(t,l,f,ja,Ca,la)}}}X.addRectangle(I)}n.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(T,R,Z){var ca,W,S,ba;ca=0;for(W=T.lights.length;ca<W;ca++){S=T.lights[ca];if(S instanceof THREE.DirectionalLight){ba=R.normalWorld.dot(S.position)*S.intensity;if(ba>0){Z.r+=S.color.r*ba;Z.g+=S.color.g*ba;Z.b+=S.color.b*ba}}else if(S instanceof THREE.PointLight){H.sub(S.position,R.centroidWorld);H.normalize();ba=R.normalWorld.dot(H)*S.intensity;if(ba>0){Z.r+=S.color.r*ba;Z.g+=S.color.g*ba;Z.b+=S.color.b*ba}}}}function c(T,R,Z,ca,W,S){A=e(M++);A.setAttribute("d",
"M "+T.positionScreen.x+" "+T.positionScreen.y+" L "+R.positionScreen.x+" "+R.positionScreen.y+" L "+Z.positionScreen.x+","+Z.positionScreen.y+"z");if(W instanceof THREE.MeshBasicMaterial)f.__styleString=W.color.__styleString;else if(W instanceof THREE.MeshLambertMaterial)if(l){m.r=o.r;m.g=o.g;m.b=o.b;a(S,ca,m);f.r=W.color.r*m.r;f.g=W.color.g*m.g;f.b=W.color.b*m.b;f.updateStyleString()}else f.__styleString=W.color.__styleString;else if(W instanceof THREE.MeshDepthMaterial){q=1-W.__2near/(W.__farPlusNear-
ca.z*W.__farMinusNear);f.setRGB(q,q,q)}else W instanceof THREE.MeshNormalMaterial&&f.setRGB(g(ca.normalWorld.x),g(ca.normalWorld.y),g(ca.normalWorld.z));W.wireframe?A.setAttribute("style","fill: none; stroke: "+f.__styleString+"; stroke-width: "+W.wireframe_linewidth+"; stroke-opacity: "+W.opacity+"; stroke-linecap: "+W.wireframe_linecap+"; stroke-linejoin: "+W.wireframe_linejoin):A.setAttribute("style","fill: "+f.__styleString+"; fill-opacity: "+W.opacity);j.appendChild(A)}function d(T,R,Z,ca,W,
S,ba){A=e(M++);A.setAttribute("d","M "+T.positionScreen.x+" "+T.positionScreen.y+" L "+R.positionScreen.x+" "+R.positionScreen.y+" L "+Z.positionScreen.x+","+Z.positionScreen.y+" L "+ca.positionScreen.x+","+ca.positionScreen.y+"z");if(S instanceof THREE.MeshBasicMaterial)f.__styleString=S.color.__styleString;else if(S instanceof THREE.MeshLambertMaterial)if(l){m.r=o.r;m.g=o.g;m.b=o.b;a(ba,W,m);f.r=S.color.r*m.r;f.g=S.color.g*m.g;f.b=S.color.b*m.b;f.updateStyleString()}else f.__styleString=S.color.__styleString;
else if(S instanceof THREE.MeshDepthMaterial){q=1-S.__2near/(S.__farPlusNear-W.z*S.__farMinusNear);f.setRGB(q,q,q)}else S instanceof THREE.MeshNormalMaterial&&f.setRGB(g(W.normalWorld.x),g(W.normalWorld.y),g(W.normalWorld.z));S.wireframe?A.setAttribute("style","fill: none; stroke: "+f.__styleString+"; stroke-width: "+S.wireframe_linewidth+"; stroke-opacity: "+S.opacity+"; stroke-linecap: "+S.wireframe_linecap+"; stroke-linejoin: "+S.wireframe_linejoin):A.setAttribute("style","fill: "+f.__styleString+
"; fill-opacity: "+S.opacity);j.appendChild(A)}function e(T){if(z[T]==null){z[T]=document.createElementNS("http://www.w3.org/2000/svg","path");U==0&&z[T].setAttribute("shape-rendering","crispEdges");return z[T]}return z[T]}function g(T){return T<0?Math.min((1+T)*0.5,0.5):0.5+Math.min(T*0.5,0.5)}var b=null,k=new THREE.Projector,j=document.createElementNS("http://www.w3.org/2000/svg","svg"),h,n,v,y,u,p,w,B,F=new THREE.Rectangle,t=new THREE.Rectangle,l=false,f=new THREE.Color(16777215),m=new THREE.Color(16777215),
o=new THREE.Color(0),D=new THREE.Color(0),x=new THREE.Color(0),q,H=new THREE.Vector3,z=[],K=[],E=[],A,M,aa,N,U=1;this.domElement=j;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(T){switch(T){case "high":U=1;break;case "low":U=0}};this.setSize=function(T,R){h=T;n=R;v=h/2;y=n/2;j.setAttribute("viewBox",-v+" "+-y+" "+h+" "+n);j.setAttribute("width",h);j.setAttribute("height",n);F.set(-v,-y,v,y)};this.clear=function(){for(;j.childNodes.length>0;)j.removeChild(j.childNodes[0])};
this.render=function(T,R){var Z,ca,W,S,ba,X,I,Q;this.autoClear&&this.clear();b=k.projectScene(T,R,this.sortElements);N=aa=M=0;if(l=T.lights.length>0){I=T.lights;o.setRGB(0,0,0);D.setRGB(0,0,0);x.setRGB(0,0,0);Z=0;for(ca=I.length;Z<ca;Z++){W=I[Z];S=W.color;if(W instanceof THREE.AmbientLight){o.r+=S.r;o.g+=S.g;o.b+=S.b}else if(W instanceof THREE.DirectionalLight){D.r+=S.r;D.g+=S.g;D.b+=S.b}else if(W instanceof THREE.PointLight){x.r+=S.r;x.g+=S.g;x.b+=S.b}}}Z=0;for(ca=b.length;Z<ca;Z++){I=b[Z];t.empty();
if(I instanceof THREE.RenderableParticle){u=I;u.x*=v;u.y*=-y;W=0;for(S=I.materials.length;W<S;W++)if(Q=I.materials[W]){ba=u;X=I;Q=Q;var V=aa++;if(K[V]==null){K[V]=document.createElementNS("http://www.w3.org/2000/svg","circle");U==0&&K[V].setAttribute("shape-rendering","crispEdges")}A=K[V];A.setAttribute("cx",ba.x);A.setAttribute("cy",ba.y);A.setAttribute("r",X.scale.x*v);if(Q instanceof THREE.ParticleCircleMaterial){if(l){m.r=o.r+D.r+x.r;m.g=o.g+D.g+x.g;m.b=o.b+D.b+x.b;f.r=Q.color.r*m.r;f.g=Q.color.g*
m.g;f.b=Q.color.b*m.b;f.updateStyleString()}else f=Q.color;A.setAttribute("style","fill: "+f.__styleString)}j.appendChild(A)}}else if(I instanceof THREE.RenderableLine){u=I.v1;p=I.v2;u.positionScreen.x*=v;u.positionScreen.y*=-y;p.positionScreen.x*=v;p.positionScreen.y*=-y;t.addPoint(u.positionScreen.x,u.positionScreen.y);t.addPoint(p.positionScreen.x,p.positionScreen.y);if(F.instersects(t)){W=0;for(S=I.materials.length;W<S;)if(Q=I.materials[W++]){ba=u;X=p;Q=Q;V=N++;if(E[V]==null){E[V]=document.createElementNS("http://www.w3.org/2000/svg",
"line");U==0&&E[V].setAttribute("shape-rendering","crispEdges")}A=E[V];A.setAttribute("x1",ba.positionScreen.x);A.setAttribute("y1",ba.positionScreen.y);A.setAttribute("x2",X.positionScreen.x);A.setAttribute("y2",X.positionScreen.y);if(Q instanceof THREE.LineBasicMaterial){f.__styleString=Q.color.__styleString;A.setAttribute("style","fill: none; stroke: "+f.__styleString+"; stroke-width: "+Q.linewidth+"; stroke-opacity: "+Q.opacity+"; stroke-linecap: "+Q.linecap+"; stroke-linejoin: "+Q.linejoin);
j.appendChild(A)}}}}else if(I instanceof THREE.RenderableFace3){u=I.v1;p=I.v2;w=I.v3;u.positionScreen.x*=v;u.positionScreen.y*=-y;p.positionScreen.x*=v;p.positionScreen.y*=-y;w.positionScreen.x*=v;w.positionScreen.y*=-y;t.addPoint(u.positionScreen.x,u.positionScreen.y);t.addPoint(p.positionScreen.x,p.positionScreen.y);t.addPoint(w.positionScreen.x,w.positionScreen.y);if(F.instersects(t)){W=0;for(S=I.meshMaterials.length;W<S;){Q=I.meshMaterials[W++];if(Q instanceof THREE.MeshFaceMaterial){ba=0;for(X=
I.faceMaterials.length;ba<X;)(Q=I.faceMaterials[ba++])&&c(u,p,w,I,Q,T)}else Q&&c(u,p,w,I,Q,T)}}}else if(I instanceof THREE.RenderableFace4){u=I.v1;p=I.v2;w=I.v3;B=I.v4;u.positionScreen.x*=v;u.positionScreen.y*=-y;p.positionScreen.x*=v;p.positionScreen.y*=-y;w.positionScreen.x*=v;w.positionScreen.y*=-y;B.positionScreen.x*=v;B.positionScreen.y*=-y;t.addPoint(u.positionScreen.x,u.positionScreen.y);t.addPoint(p.positionScreen.x,p.positionScreen.y);t.addPoint(w.positionScreen.x,w.positionScreen.y);t.addPoint(B.positionScreen.x,
B.positionScreen.y);if(F.instersects(t)){W=0;for(S=I.meshMaterials.length;W<S;){Q=I.meshMaterials[W++];if(Q instanceof THREE.MeshFaceMaterial){ba=0;for(X=I.faceMaterials.length;ba<X;)(Q=I.faceMaterials[ba++])&&d(u,p,w,B,I,Q,T)}else Q&&d(u,p,w,B,I,Q,T)}}}}}};
THREE.WebGLRenderer=function(a){function c(l,f){l.fragment_shader=f.fragment_shader;l.vertex_shader=f.vertex_shader;l.uniforms=Uniforms.clone(f.uniforms)}function d(l,f){var m;if(l=="fragment")m=b.createShader(b.FRAGMENT_SHADER);else if(l=="vertex")m=b.createShader(b.VERTEX_SHADER);b.shaderSource(m,f);b.compileShader(m);if(!b.getShaderParameter(m,b.COMPILE_STATUS)){alert(b.getShaderInfoLog(m));return null}return m}function e(l){switch(l){case THREE.RepeatWrapping:return b.REPEAT;case THREE.ClampToEdgeWrapping:return b.CLAMP_TO_EDGE;
case THREE.MirroredRepeatWrapping:return b.MIRRORED_REPEAT;case THREE.NearestFilter:return b.NEAREST;case THREE.NearestMipMapNearestFilter:return b.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return b.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return b.LINEAR;case THREE.LinearMipMapNearestFilter:return b.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return b.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return b.BYTE;case THREE.UnsignedByteType:return b.UNSIGNED_BYTE;case THREE.ShortType:return b.SHORT;
case THREE.UnsignedShortType:return b.UNSIGNED_SHORT;case THREE.IntType:return b.INT;case THREE.UnsignedShortType:return b.UNSIGNED_INT;case THREE.FloatType:return b.FLOAT;case THREE.AlphaFormat:return b.ALPHA;case THREE.RGBFormat:return b.RGB;case THREE.RGBAFormat:return b.RGBA;case THREE.LuminanceFormat:return b.LUMINANCE;case THREE.LuminanceAlphaFormat:return b.LUMINANCE_ALPHA}return 0}var g=document.createElement("canvas"),b,k=null,j=null,h=new THREE.Matrix4,n,v=new Float32Array(16),y=new Float32Array(16),
u=new Float32Array(16),p=new Float32Array(9),w=new Float32Array(16),B=true,F=new THREE.Color(0),t=0;if(a){if(a.antialias!==undefined)B=a.antialias;a.clearColor!==undefined&&F.setHex(a.clearColor);if(a.clearAlpha!==undefined)t=a.clearAlpha}this.domElement=g;this.autoClear=true;(function(l,f,m){try{b=g.getContext("experimental-webgl",{antialias:l})}catch(o){}if(!b){alert("WebGL not supported");throw"cannot create webgl context";}b.clearColor(0,0,0,1);b.clearDepth(1);b.enable(b.DEPTH_TEST);b.depthFunc(b.LEQUAL);
b.frontFace(b.CCW);b.cullFace(b.BACK);b.enable(b.CULL_FACE);b.enable(b.BLEND);b.blendFunc(b.ONE,b.ONE_MINUS_SRC_ALPHA);b.clearColor(f.r,f.g,f.b,m)})(B,F,t);this.context=b;this.lights={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[]}};this.setSize=function(l,f){g.width=l;g.height=f;b.viewport(0,0,g.width,g.height)};this.setClearColor=function(l,f){var m=new THREE.Color(l);b.clearColor(m.r,m.g,m.b,f)};this.clear=function(){b.clear(b.COLOR_BUFFER_BIT|
b.DEPTH_BUFFER_BIT)};this.setupLights=function(l,f){var m,o,D,x=0,q=0,H=0,z,K,E,A=this.lights,M=A.directional.colors,aa=A.directional.positions,N=A.point.colors,U=A.point.positions,T=0,R=0;m=0;for(o=f.length;m<o;m++){D=f[m];z=D.color;K=D.position;E=D.intensity;if(D instanceof THREE.AmbientLight){x+=z.r;q+=z.g;H+=z.b}else if(D instanceof THREE.DirectionalLight){M[T*3]=z.r*E;M[T*3+1]=z.g*E;M[T*3+2]=z.b*E;aa[T*3]=K.x;aa[T*3+1]=K.y;aa[T*3+2]=K.z;T+=1}else if(D instanceof THREE.PointLight){N[R*3]=z.r*
E;N[R*3+1]=z.g*E;N[R*3+2]=z.b*E;U[R*3]=K.x;U[R*3+1]=K.y;U[R*3+2]=K.z;R+=1}}A.point.length=R;A.directional.length=T;A.ambient[0]=x;A.ambient[1]=q;A.ambient[2]=H};this.createParticleBuffers=function(l){l.__webGLVertexBuffer=b.createBuffer();l.__webGLFaceBuffer=b.createBuffer()};this.createLineBuffers=function(l){l.__webGLVertexBuffer=b.createBuffer();l.__webGLLineBuffer=b.createBuffer()};this.createMeshBuffers=function(l){l.__webGLVertexBuffer=b.createBuffer();l.__webGLNormalBuffer=b.createBuffer();
l.__webGLTangentBuffer=b.createBuffer();l.__webGLUVBuffer=b.createBuffer();l.__webGLUV2Buffer=b.createBuffer();l.__webGLFaceBuffer=b.createBuffer();l.__webGLLineBuffer=b.createBuffer()};this.initLineBuffers=function(l){var f=l.vertices.length;l.__vertexArray=new Float32Array(f*3);l.__lineArray=new Uint16Array(f);l.__webGLLineCount=f};this.initMeshBuffers=function(l,f){var m,o,D=0,x=0,q=0,H=f.geometry.faces,z=l.faces;m=0;for(o=z.length;m<o;m++){fi=z[m];face=H[fi];if(face instanceof THREE.Face3){D+=
3;x+=1;q+=3}else if(face instanceof THREE.Face4){D+=4;x+=2;q+=4}}l.__vertexArray=new Float32Array(D*3);l.__normalArray=new Float32Array(D*3);l.__tangentArray=new Float32Array(D*4);l.__uvArray=new Float32Array(D*2);l.__uv2Array=new Float32Array(D*2);l.__faceArray=new Uint16Array(x*3);l.__lineArray=new Uint16Array(q*2);D=false;m=0;for(o=f.materials.length;m<o;m++){H=f.materials[m];if(H instanceof THREE.MeshFaceMaterial){H=0;for(z=l.materials.length;H<z;H++)if(l.materials[H]&&l.materials[H].shading!=
undefined&&l.materials[H].shading==THREE.SmoothShading){D=true;break}}else if(H&&H.shading!=undefined&&H.shading==THREE.SmoothShading){D=true;break}if(D)break}l.__needsSmoothNormals=D;l.__webGLFaceCount=x*3;l.__webGLLineCount=q*2};this.setMeshBuffers=function(l,f,m,o,D,x,q,H){var z,K,E,A,M,aa,N,U,T,R,Z=0,ca=0,W=0,S=0,ba=0,X=0,I=0,Q=0,V=l.__vertexArray,ha=l.__uvArray,ka=l.__uv2Array,C=l.__normalArray,G=l.__tangentArray,J=l.__faceArray,P=l.__lineArray,da=l.__needsSmoothNormals,ia=f.geometry,fa=ia.vertices,
qa=l.faces,sa=ia.faces,wa=ia.uvs,la=ia.uvs2;f=0;for(z=qa.length;f<z;f++){K=qa[f];E=sa[K];aa=wa[K];K=la[K];A=E.vertexNormals;M=E.normal;if(E instanceof THREE.Face3){if(o){N=fa[E.a].position;U=fa[E.b].position;T=fa[E.c].position;V[ca]=N.x;V[ca+1]=N.y;V[ca+2]=N.z;V[ca+3]=U.x;V[ca+4]=U.y;V[ca+5]=U.z;V[ca+6]=T.x;V[ca+7]=T.y;V[ca+8]=T.z;ca+=9}if(H&&ia.hasTangents){N=fa[E.a].tangent;U=fa[E.b].tangent;T=fa[E.c].tangent;G[I]=N.x;G[I+1]=N.y;G[I+2]=N.z;G[I+3]=N.w;G[I+4]=U.x;G[I+5]=U.y;G[I+6]=U.z;G[I+7]=U.w;
G[I+8]=T.x;G[I+9]=T.y;G[I+10]=T.z;G[I+11]=T.w;I+=12}if(q)if(A.length==3&&da)for(E=0;E<3;E++){M=A[E];C[X]=M.x;C[X+1]=M.y;C[X+2]=M.z;X+=3}else for(E=0;E<3;E++){C[X]=M.x;C[X+1]=M.y;C[X+2]=M.z;X+=3}if(x&&aa)for(E=0;E<3;E++){A=aa[E];ha[W]=A.u;ha[W+1]=A.v;W+=2}if(x&&K)for(E=0;E<3;E++){aa=K[E];ka[S]=aa.u;ka[S+1]=aa.v;S+=2}if(D){J[ba]=Z;J[ba+1]=Z+1;J[ba+2]=Z+2;ba+=3;P[Q]=Z;P[Q+1]=Z+1;P[Q+2]=Z;P[Q+3]=Z+2;P[Q+4]=Z+1;P[Q+5]=Z+2;Q+=6;Z+=3}}else if(E instanceof THREE.Face4){if(o){N=fa[E.a].position;U=fa[E.b].position;
T=fa[E.c].position;R=fa[E.d].position;V[ca]=N.x;V[ca+1]=N.y;V[ca+2]=N.z;V[ca+3]=U.x;V[ca+4]=U.y;V[ca+5]=U.z;V[ca+6]=T.x;V[ca+7]=T.y;V[ca+8]=T.z;V[ca+9]=R.x;V[ca+10]=R.y;V[ca+11]=R.z;ca+=12}if(H&&ia.hasTangents){N=fa[E.a].tangent;U=fa[E.b].tangent;T=fa[E.c].tangent;E=fa[E.d].tangent;G[I]=N.x;G[I+1]=N.y;G[I+2]=N.z;G[I+3]=N.w;G[I+4]=U.x;G[I+5]=U.y;G[I+6]=U.z;G[I+7]=U.w;G[I+8]=T.x;G[I+9]=T.y;G[I+10]=T.z;G[I+11]=T.w;G[I+12]=E.x;G[I+13]=E.y;G[I+14]=E.z;G[I+15]=E.w;I+=16}if(q)if(A.length==4&&da)for(E=0;E<
4;E++){M=A[E];C[X]=M.x;C[X+1]=M.y;C[X+2]=M.z;X+=3}else for(E=0;E<4;E++){C[X]=M.x;C[X+1]=M.y;C[X+2]=M.z;X+=3}if(x&&aa)for(E=0;E<4;E++){A=aa[E];ha[W]=A.u;ha[W+1]=A.v;W+=2}if(x&&K)for(E=0;E<4;E++){aa=K[E];ka[S]=aa.u;ka[S+1]=aa.v;S+=2}if(D){J[ba]=Z;J[ba+1]=Z+1;J[ba+2]=Z+2;J[ba+3]=Z;J[ba+4]=Z+2;J[ba+5]=Z+3;ba+=6;P[Q]=Z;P[Q+1]=Z+1;P[Q+2]=Z;P[Q+3]=Z+3;P[Q+4]=Z+1;P[Q+5]=Z+2;P[Q+6]=Z+2;P[Q+7]=Z+3;Q+=8;Z+=4}}}if(o){b.bindBuffer(b.ARRAY_BUFFER,l.__webGLVertexBuffer);b.bufferData(b.ARRAY_BUFFER,V,m)}if(q){b.bindBuffer(b.ARRAY_BUFFER,
l.__webGLNormalBuffer);b.bufferData(b.ARRAY_BUFFER,C,m)}if(H&&ia.hasTangents){b.bindBuffer(b.ARRAY_BUFFER,l.__webGLTangentBuffer);b.bufferData(b.ARRAY_BUFFER,G,m)}if(x&&W>0){b.bindBuffer(b.ARRAY_BUFFER,l.__webGLUVBuffer);b.bufferData(b.ARRAY_BUFFER,ha,m)}if(x&&S>0){b.bindBuffer(b.ARRAY_BUFFER,l.__webGLUV2Buffer);b.bufferData(b.ARRAY_BUFFER,ka,m)}if(D){b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,l.__webGLFaceBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,J,m);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,l.__webGLLineBuffer);
b.bufferData(b.ELEMENT_ARRAY_BUFFER,P,m)}};this.setLineBuffers=function(l,f,m,o){var D,x,q=l.vertices,H=q.length,z=l.__vertexArray,K=l.__lineArray;if(m)for(m=0;m<H;m++){D=q[m].position;x=m*3;z[x]=D.x;z[x+1]=D.y;z[x+2]=D.z}if(o)for(m=0;m<H;m++)K[m]=m;b.bindBuffer(b.ARRAY_BUFFER,l.__webGLVertexBuffer);b.bufferData(b.ARRAY_BUFFER,z,f);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,l.__webGLLineBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,K,f)};this.setParticleBuffers=function(){};this.initMaterial=function(l,f,
m){if(!l.program){var o,D;if(l instanceof THREE.MeshDepthMaterial)c(l,THREE.ShaderLib.depth);else if(l instanceof THREE.MeshNormalMaterial)c(l,THREE.ShaderLib.normal);else if(l instanceof THREE.MeshBasicMaterial)c(l,THREE.ShaderLib.basic);else if(l instanceof THREE.MeshLambertMaterial)c(l,THREE.ShaderLib.lambert);else if(l instanceof THREE.MeshPhongMaterial)c(l,THREE.ShaderLib.phong);else l instanceof THREE.LineBasicMaterial&&c(l,THREE.ShaderLib.basic);var x,q,H,z;D=H=z=0;for(x=f.length;D<x;D++){q=
f[D];q instanceof THREE.DirectionalLight&&H++;q instanceof THREE.PointLight&&z++}if(z+H<=4){f=H;z=z}else{f=Math.ceil(4*H/(z+H));z=4-f}D={directional:f,point:z};z=l.fragment_shader;f=l.vertex_shader;x={fog:m,map:l.map,env_map:l.env_map,light_map:l.light_map,maxDirLights:D.directional,maxPointLights:D.point};m=b.createProgram();D=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+x.maxDirLights,"#define MAX_POINT_LIGHTS "+x.maxPointLights,x.fog?"#define USE_FOG":"",x.fog instanceof
THREE.FogExp2?"#define FOG_EXP2":"",x.map?"#define USE_MAP":"",x.env_map?"#define USE_ENVMAP":"",x.light_map?"#define USE_LIGHTMAP":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");x=[b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+x.maxDirLights,"#define MAX_POINT_LIGHTS "+x.maxPointLights,x.map?"#define USE_MAP":"",x.env_map?"#define USE_ENVMAP":"",x.light_map?"#define USE_LIGHTMAP":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n"].join("\n");
b.attachShader(m,d("fragment",D+z));b.attachShader(m,d("vertex",x+f));b.linkProgram(m);b.getProgramParameter(m,b.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+b.getProgramParameter(m,b.VALIDATE_STATUS)+", gl error ["+b.getError()+"]");m.uniforms={};m.attributes={};l.program=m;m=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(o in l.uniforms)m.push(o);o=l.program;z=0;for(f=m.length;z<f;z++){D=m[z];o.uniforms[D]=b.getUniformLocation(o,
D)}l=l.program;o=["position","normal","uv","uv2","tangent"];m=0;for(z=o.length;m<z;m++){f=o[m];l.attributes[f]=b.getAttribLocation(l,f)}}};this.renderBuffer=function(l,f,m,o,D,x){var q;this.initMaterial(o,f,m);q=o.program;if(q!=k){b.useProgram(q);k=q}this.loadCamera(q,l);this.loadMatrices(q);if(o instanceof THREE.MeshPhongMaterial||o instanceof THREE.MeshLambertMaterial){this.setupLights(q,f);f=this.lights;o.uniforms.enableLighting.value=f.directional.length+f.point.length;o.uniforms.ambientLightColor.value=
f.ambient;o.uniforms.directionalLightColor.value=f.directional.colors;o.uniforms.directionalLightDirection.value=f.directional.positions;o.uniforms.pointLightColor.value=f.point.colors;o.uniforms.pointLightPosition.value=f.point.positions}if(o instanceof THREE.MeshBasicMaterial||o instanceof THREE.MeshLambertMaterial||o instanceof THREE.MeshPhongMaterial){o.uniforms.color.value.setRGB(o.color.r*o.opacity,o.color.g*o.opacity,o.color.b*o.opacity);o.uniforms.opacity.value=o.opacity;o.uniforms.map.texture=
o.map;o.uniforms.light_map.texture=o.light_map;o.uniforms.env_map.texture=o.env_map;o.uniforms.reflectivity.value=o.reflectivity;o.uniforms.refraction_ratio.value=o.refraction_ratio;o.uniforms.combine.value=o.combine;o.uniforms.useRefract.value=o.env_map&&o.env_map.mapping instanceof THREE.CubeRefractionMapping;if(m){o.uniforms.fogColor.value.setHex(m.color.hex);if(m instanceof THREE.Fog){o.uniforms.fogNear.value=m.near;o.uniforms.fogFar.value=m.far}else if(m instanceof THREE.FogExp2)o.uniforms.fogDensity.value=
m.density}}if(o instanceof THREE.LineBasicMaterial){o.uniforms.color.value.setRGB(o.color.r*o.opacity,o.color.g*o.opacity,o.color.b*o.opacity);o.uniforms.opacity.value=o.opacity;if(m){o.uniforms.fogColor.value.setHex(m.color.hex);if(m instanceof THREE.Fog){o.uniforms.fogNear.value=m.near;o.uniforms.fogFar.value=m.far}else if(m instanceof THREE.FogExp2)o.uniforms.fogDensity.value=m.density}}if(o instanceof THREE.MeshPhongMaterial){o.uniforms.ambient.value.setRGB(o.ambient.r,o.ambient.g,o.ambient.b);
o.uniforms.specular.value.setRGB(o.specular.r,o.specular.g,o.specular.b);o.uniforms.shininess.value=o.shininess}if(o instanceof THREE.MeshDepthMaterial){o.uniforms.mNear.value=l.near;o.uniforms.mFar.value=l.far}l=o.uniforms;var H,z,K;for(H in l)if(K=q.uniforms[H]){f=l[H];z=f.type;m=f.value;if(z=="i")b.uniform1i(K,m);else if(z=="f")b.uniform1f(K,m);else if(z=="fv1")b.uniform1fv(K,m);else if(z=="fv")b.uniform3fv(K,m);else if(z=="v2")b.uniform2f(K,m.x,m.y);else if(z=="v3")b.uniform3f(K,m.x,m.y,m.z);
else if(z=="c")b.uniform3f(K,m.r,m.g,m.b);else if(z=="t"){b.uniform1i(K,m);if(f=f.texture)if(f.image instanceof Array&&f.image.length==6){f=f;m=m;if(f.image.length==6){if(!f.image.__webGLTextureCube&&!f.image.__cubeMapInitialized&&f.image.loadCount==6){f.image.__webGLTextureCube=b.createTexture();b.bindTexture(b.TEXTURE_CUBE_MAP,f.image.__webGLTextureCube);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_CUBE_MAP,
b.TEXTURE_MAG_FILTER,b.LINEAR);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_MIN_FILTER,b.LINEAR_MIPMAP_LINEAR);for(z=0;z<6;++z)b.texImage2D(b.TEXTURE_CUBE_MAP_POSITIVE_X+z,0,b.RGBA,b.RGBA,b.UNSIGNED_BYTE,f.image[z]);b.generateMipmap(b.TEXTURE_CUBE_MAP);b.bindTexture(b.TEXTURE_CUBE_MAP,null);f.image.__cubeMapInitialized=true}b.activeTexture(b.TEXTURE0+m);b.bindTexture(b.TEXTURE_CUBE_MAP,f.image.__webGLTextureCube)}}else{f=f;m=m;if(!f.__webGLTexture&&f.image.loaded){f.__webGLTexture=b.createTexture();
b.bindTexture(b.TEXTURE_2D,f.__webGLTexture);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,b.RGBA,b.UNSIGNED_BYTE,f.image);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,e(f.wrap_s));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,e(f.wrap_t));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,e(f.mag_filter));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,e(f.min_filter));b.generateMipmap(b.TEXTURE_2D);b.bindTexture(b.TEXTURE_2D,null)}b.activeTexture(b.TEXTURE0+m);b.bindTexture(b.TEXTURE_2D,f.__webGLTexture)}}}q=
q.attributes;b.bindBuffer(b.ARRAY_BUFFER,D.__webGLVertexBuffer);b.vertexAttribPointer(q.position,3,b.FLOAT,false,0,0);b.enableVertexAttribArray(q.position);if(q.normal>=0){b.bindBuffer(b.ARRAY_BUFFER,D.__webGLNormalBuffer);b.vertexAttribPointer(q.normal,3,b.FLOAT,false,0,0);b.enableVertexAttribArray(q.normal)}if(q.tangent>=0){b.bindBuffer(b.ARRAY_BUFFER,D.__webGLTangentBuffer);b.vertexAttribPointer(q.tangent,4,b.FLOAT,false,0,0);b.enableVertexAttribArray(q.tangent)}if(q.uv>=0)if(D.__webGLUVBuffer){b.bindBuffer(b.ARRAY_BUFFER,
D.__webGLUVBuffer);b.vertexAttribPointer(q.uv,2,b.FLOAT,false,0,0);b.enableVertexAttribArray(q.uv)}else b.disableVertexAttribArray(q.uv);if(q.uv2>=0)if(D.__webGLUV2Buffer){b.bindBuffer(b.ARRAY_BUFFER,D.__webGLUV2Buffer);b.vertexAttribPointer(q.uv2,2,b.FLOAT,false,0,0);b.enableVertexAttribArray(q.uv2)}else b.disableVertexAttribArray(q.uv2);if(o.wireframe||o instanceof THREE.LineBasicMaterial){q=o.wireframe_linewidth!==undefined?o.wireframe_linewidth:o.linewidth!==undefined?o.linewidth:1;o=o instanceof
THREE.LineBasicMaterial&&x.type==THREE.LineStrip?b.LINE_STRIP:b.LINES;b.lineWidth(q);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,D.__webGLLineBuffer);b.drawElements(o,D.__webGLLineCount,b.UNSIGNED_SHORT,0)}else{b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,D.__webGLFaceBuffer);b.drawElements(b.TRIANGLES,D.__webGLFaceCount,b.UNSIGNED_SHORT,0)}};this.renderPass=function(l,f,m,o,D,x,q){var H,z,K,E,A;K=0;for(E=o.materials.length;K<E;K++){H=o.materials[K];if(H instanceof THREE.MeshFaceMaterial){H=0;for(z=D.materials.length;H<
z;H++)if((A=D.materials[H])&&A.blending==x&&A.opacity<1==q){this.setBlending(A.blending);this.renderBuffer(l,f,m,A,D,o)}}else if((A=H)&&A.blending==x&&A.opacity<1==q){this.setBlending(A.blending);this.renderBuffer(l,f,m,A,D,o)}}};this.render=function(l,f,m,o){var D,x,q,H=l.lights,z=l.fog;this.initWebGLObjects(l);o=o!==undefined?o:true;if(m&&!m.__webGLFramebuffer){m.__webGLFramebuffer=b.createFramebuffer();m.__webGLRenderbuffer=b.createRenderbuffer();m.__webGLTexture=b.createTexture();b.bindRenderbuffer(b.RENDERBUFFER,
m.__webGLRenderbuffer);b.renderbufferStorage(b.RENDERBUFFER,b.DEPTH_COMPONENT16,m.width,m.height);b.bindTexture(b.TEXTURE_2D,m.__webGLTexture);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,e(m.wrap_s));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,e(m.wrap_t));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,e(m.mag_filter));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,e(m.min_filter));b.texImage2D(b.TEXTURE_2D,0,e(m.format),m.width,m.height,0,e(m.format),e(m.type),null);b.bindFramebuffer(b.FRAMEBUFFER,
m.__webGLFramebuffer);b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,m.__webGLTexture,0);b.framebufferRenderbuffer(b.FRAMEBUFFER,b.DEPTH_ATTACHMENT,b.RENDERBUFFER,m.__webGLRenderbuffer);b.bindTexture(b.TEXTURE_2D,null);b.bindRenderbuffer(b.RENDERBUFFER,null);b.bindFramebuffer(b.FRAMEBUFFER,null)}if(m){D=m.__webGLFramebuffer;q=m.width;x=m.height}else{D=null;q=g.width;x=g.height}if(D!=j){b.bindFramebuffer(b.FRAMEBUFFER,D);b.viewport(0,0,q,x);o&&b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT);
j=D}this.autoClear&&this.clear();f.autoUpdateMatrix&&f.updateMatrix();v.set(f.matrix.flatten());u.set(f.projectionMatrix.flatten());o=0;for(D=l.__webGLObjects.length;o<D;o++){x=l.__webGLObjects[o];q=x.object;x=x.buffer;if(q.visible){this.setupMatrices(q,f);this.renderPass(f,H,z,q,x,THREE.NormalBlending,false)}}o=0;for(D=l.__webGLObjects.length;o<D;o++){x=l.__webGLObjects[o];q=x.object;x=x.buffer;if(q.visible){this.setupMatrices(q,f);if(q.doubleSided)b.disable(b.CULL_FACE);else{b.enable(b.CULL_FACE);
q.flipSided?b.frontFace(b.CW):b.frontFace(b.CCW)}this.renderPass(f,H,z,q,x,THREE.AdditiveBlending,false);this.renderPass(f,H,z,q,x,THREE.SubtractiveBlending,false);this.renderPass(f,H,z,q,x,THREE.AdditiveBlending,true);this.renderPass(f,H,z,q,x,THREE.SubtractiveBlending,true);this.renderPass(f,H,z,q,x,THREE.NormalBlending,true)}}if(m&&m.min_filter!==THREE.NearestFilter&&m.min_filter!==THREE.LinearFilter){b.bindTexture(b.TEXTURE_2D,m.__webGLTexture);b.generateMipmap(b.TEXTURE_2D);b.bindTexture(b.TEXTURE_2D,
null)}};this.initWebGLObjects=function(l){function f(K,E,A,M){if(K[E]==undefined){l.__webGLObjects.push({buffer:A,object:M});K[E]=1}}var m,o,D,x,q,H,z;if(!l.__webGLObjects){l.__webGLObjects=[];l.__webGLObjectsMap={}}m=0;for(o=l.objects.length;m<o;m++){D=l.objects[m];q=D.geometry;if(l.__webGLObjectsMap[D.id]==undefined)l.__webGLObjectsMap[D.id]={};z=l.__webGLObjectsMap[D.id];if(D instanceof THREE.Mesh){for(x in q.geometryChunks){H=q.geometryChunks[x];if(!H.__webGLVertexBuffer){this.createMeshBuffers(H);
this.initMeshBuffers(H,D);q.__dirtyVertices=true;q.__dirtyElements=true;q.__dirtyUvs=true;q.__dirtyNormals=true;q.__dirtyTangents=true}if(q.__dirtyVertices||q.__dirtyElements||q.__dirtyUvs)this.setMeshBuffers(H,D,b.DYNAMIC_DRAW,q.__dirtyVertices,q.__dirtyElements,q.__dirtyUvs,q.__dirtyNormals,q.__dirtyTangents);f(z,x,H,D)}q.__dirtyVertices=false;q.__dirtyElements=false;q.__dirtyUvs=false;q.__dirtyNormals=false;q.__dirtyTangents=false}else if(D instanceof THREE.Line){if(!q.__webGLVertexBuffer){this.createLineBuffers(q);
this.initLineBuffers(q);q.__dirtyVertices=true;q.__dirtyElements=true}q.__dirtyVertices&&this.setLineBuffers(q,b.DYNAMIC_DRAW,q.__dirtyVertices,q.__dirtyElements);f(z,0,q,D);q.__dirtyVertices=false;q.__dirtyElements=false}else if(D instanceof THREE.ParticleSystem){q.__webGLVertexBuffer||this.createParticleBuffers(q);f(z,0,q,D)}}};this.removeObject=function(l,f){var m,o;for(m=l.__webGLObjects.length-1;m>=0;m--){o=l.__webGLObjects[m].object;f==o&&l.__webGLObjects.splice(m,1)}};this.setupMatrices=function(l,
f){l.autoUpdateMatrix&&l.updateMatrix();h.multiply(f.matrix,l.matrix);y.set(h.flatten());n=THREE.Matrix4.makeInvert3x3(h).transpose();p.set(n.m);w.set(l.matrix.flatten())};this.loadMatrices=function(l){b.uniformMatrix4fv(l.uniforms.viewMatrix,false,v);b.uniformMatrix4fv(l.uniforms.modelViewMatrix,false,y);b.uniformMatrix4fv(l.uniforms.projectionMatrix,false,u);b.uniformMatrix3fv(l.uniforms.normalMatrix,false,p);b.uniformMatrix4fv(l.uniforms.objectMatrix,false,w)};this.loadCamera=function(l,f){b.uniform3f(l.uniforms.cameraPosition,
f.position.x,f.position.y,f.position.z)};this.setBlending=function(l){switch(l){case THREE.AdditiveBlending:b.blendEquation(b.FUNC_ADD);b.blendFunc(b.ONE,b.ONE);break;case THREE.SubtractiveBlending:b.blendFunc(b.DST_COLOR,b.ZERO);break;default:b.blendEquation(b.FUNC_ADD);b.blendFunc(b.ONE,b.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=function(l,f){if(l){!f||f=="ccw"?b.frontFace(b.CCW):b.frontFace(b.CW);if(l=="back")b.cullFace(b.BACK);else l=="front"?b.cullFace(b.FRONT):b.cullFace(b.FRONT_AND_BACK);
b.enable(b.CULL_FACE)}else b.disable(b.CULL_FACE)};this.supportsVertexTextures=function(){return b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, 1.0 ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\ncubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = mix( gl_FragColor, cubeColor, reflectivity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D light_map;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\nlightmapColor = texture2D( light_map, vUv2 );\n#endif",
lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}",
lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif"};
THREE.UniformsLib={common:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},light_map:{type:"t",value:2,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",
value:1},ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",
vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsLib.common,fragment_shader:["uniform vec3 color;\nuniform float opacity;",THREE.Snippets.map_pars_fragment,THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 lightmapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",
THREE.Snippets.map_fragment,THREE.Snippets.lightmap_fragment,"gl_FragColor = mColor * mapColor * lightmapColor;",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,THREE.Snippets.envmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},
lambert:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nvarying vec3 vLightWeighting;",THREE.Snippets.map_pars_fragment,THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 lightmapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lightmap_fragment,
"gl_FragColor =  mColor * mapColor * lightmapColor * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,
"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},phong:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",
THREE.Snippets.map_pars_fragment,THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,THREE.Snippets.lights_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 lightmapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lights_fragment,THREE.Snippets.lightmap_fragment,"gl_FragColor =  mapColor * lightmapColor * totalLight * vec4( vLightWeighting, 1.0 );",
THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",
THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")}};THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
var GeometryUtils={merge:function(a,c){var d=c instanceof THREE.Mesh,e=a.vertices.length,g=d?c.geometry:c,b=a.vertices,k=g.vertices,j=a.faces,h=g.faces,n=a.uvs;g=g.uvs;d&&c.autoUpdateMatrix&&c.updateMatrix();for(var v=0,y=k.length;v<y;v++){var u=new THREE.Vertex(k[v].position.clone());d&&c.matrix.multiplyVector3(u.position);b.push(u)}v=0;for(y=h.length;v<y;v++){k=h[v];var p,w=k.vertexNormals;if(k instanceof THREE.Face3)p=new THREE.Face3(k.a+e,k.b+e,k.c+e);else if(k instanceof THREE.Face4)p=new THREE.Face4(k.a+
e,k.b+e,k.c+e,k.d+e);p.centroid.copy(k.centroid);p.normal.copy(k.normal);d=0;for(b=w.length;d<b;d++){u=w[d];p.vertexNormals.push(u.clone())}p.materials=k.materials.slice();j.push(p)}v=0;for(y=g.length;v<y;v++){e=g[v];j=[];d=0;for(b=e.length;d<b;d++)j.push(new THREE.UV(e[d].u,e[d].v));n.push(j)}}},ImageUtils={loadTexture:function(a,c,d){var e=new Image;e.onload=function(){this.loaded=true;d&&d(this)};e.src=a;return new THREE.Texture(e,c)},loadArray:function(a,c){var d,e,g=[];d=g.loadCount=0;for(e=
a.length;d<e;++d){g[d]=new Image;g[d].loaded=0;g[d].onload=function(){g.loadCount+=1;this.loaded=true;c&&c(this)};g[d].src=a[d]}return g}},SceneUtils={loadScene:function(a,c,d,e){a=new Worker(a);a.postMessage(0);a.onmessage=function(g){function b(){for(v in x.objects)if(!A.objects[v]){B=x.objects[v];if(f=A.geometries[B.geometry]){D=[];for(i=0;i<B.materials.length;i++)D[i]=A.materials[B.materials[i]];F=B.position;r=B.rotation;s=B.scale;object=new THREE.Mesh(f,D);object.position.set(F[0],F[1],F[2]);
object.rotation.set(r[0],r[1],r[2]);object.scale.set(s[0],s[1],s[2]);object.visible=B.visible;A.scene.addObject(object);A.objects[v]=object}}}function k(M){return function(aa){A.geometries[M]=aa;b();H-=1;j()}}function j(){e({total_models:K,total_textures:E,loaded_models:K-H,loaded_textures:E-z},A);H==0&&z==0&&d(A)}var h,n,v,y,u,p,w,B,F,t,l,f,m,o,D,x,q,H,z,K,E,A;x=g.data;q=new THREE.Loader;z=H=0;A={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{}};
g=function(){z-=1;j()};for(u in x.cameras){t=x.cameras[u];if(t.type=="perspective")m=new THREE.Camera(t.fov,t.aspect,t.near,t.far);else if(t.type=="ortho"){m=new THREE.Camera;m.projectionMatrix=THREE.Matrix4.makeOrtho(t.left,t.right,t.top,t.bottom,t.near,t.far)}F=t.position;t=t.target;m.position.set(F[0],F[1],F[2]);m.target.position.set(t[0],t[1],t[2]);A.cameras[u]=m}for(y in x.lights){u=x.lights[y];if(u.type=="directional"){F=u.direction;light=new THREE.DirectionalLight;light.position.set(F[0],F[1],
F[2]);light.position.normalize()}else if(u.type=="point"){F=u.position;light=new THREE.PointLight;light.position.set(F[0],F[1],F[2])}t=u.color;i=u.intensity||1;light.color.setRGB(t[0]*i,t[1]*i,t[2]*i);A.scene.addLight(light);A.lights[y]=light}for(p in x.fogs){y=x.fogs[p];if(y.type=="linear")o=new THREE.Fog(0,y.near,y.far);else if(y.type=="exp2")o=new THREE.FogExp2(0,y.density);t=y.color;o.color.setRGB(t[0],t[1],t[2]);A.fogs[p]=o}if(A.cameras&&x.defaults.camera)A.currentCamera=A.cameras[x.defaults.camera];
if(A.fogs&&x.defaults.fog)A.scene.fog=A.fogs[x.defaults.fog];t=x.defaults.bgcolor;A.bgColor=new THREE.Color;A.bgColor.setRGB(t[0],t[1],t[2]);A.bgColorAlpha=x.defaults.bgalpha;for(h in x.geometries){p=x.geometries[h];if(p.type=="bin_mesh"||p.type=="ascii_mesh")H+=1}K=H;for(h in x.geometries){p=x.geometries[h];if(p.type=="cube"){f=new Cube(p.width,p.height,p.depth,p.segments_width,p.segments_height,null,p.flipped,p.sides);A.geometries[h]=f}else if(p.type=="plane"){f=new Plane(p.width,p.height,p.segments_width,
p.segments_height);A.geometries[h]=f}else if(p.type=="sphere"){f=new Sphere(p.radius,p.segments_width,p.segments_height);A.geometries[h]=f}else if(p.type=="cylinder"){f=new Cylinder(p.numSegs,p.topRad,p.botRad,p.height,p.topOffset,p.botOffset);A.geometries[h]=f}else if(p.type=="torus"){f=new Torus(p.radius,p.tube,p.segmentsR,p.segmentsT);A.geometries[h]=f}else if(p.type=="icosahedron"){f=new Icosahedron(p.subdivisions);A.geometries[h]=f}else if(p.type=="bin_mesh")q.loadBinary({model:p.url,callback:k(h)});
else p.type=="ascii_mesh"&&q.loadAscii({model:p.url,callback:k(h)})}for(w in x.textures){h=x.textures[w];z+=h.url instanceof Array?h.url.length:1}E=z;for(w in x.textures){h=x.textures[w];if(h.mapping!=undefined&&THREE[h.mapping]!=undefined)h.mapping=new THREE[h.mapping];if(h.url instanceof Array){p=ImageUtils.loadArray(h.url,g);p=new THREE.Texture(p,h.mapping)}else{p=ImageUtils.loadTexture(h.url,h.mapping,g);if(THREE[h.min_filter]!=undefined)p.min_filter=THREE[h.min_filter];if(THREE[h.mag_filter]!=
undefined)p.mag_filter=THREE[h.mag_filter]}A.textures[w]=p}for(n in x.materials){w=x.materials[n];for(l in w.parameters)if(l=="env_map"||l=="map"||l=="light_map")w.parameters[l]=A.textures[w.parameters[l]];else if(l=="shading")w.parameters[l]=w.parameters[l]=="flat"?THREE.FlatShading:THREE.SmoothShading;else if(l=="combine")w.parameters[l]=w.parameters[l]=="MixOperation"?THREE.MixOperation:THREE.MultiplyOperation;w=new THREE[w.type](w.parameters);A.materials[n]=w}b();c(A)}},addMesh:function(a,c,d,
e,g,b,k,j,h,n){c=new THREE.Mesh(c,n);c.scale.x=c.scale.y=c.scale.z=d;c.position.x=e;c.position.y=g;c.position.z=b;c.rotation.x=k;c.rotation.y=j;c.rotation.z=h;a.addObject(c);return c},addPanoramaCubeWebGL:function(a,c,d){var e=ShaderUtils.lib.cube;e.uniforms.tCube.texture=d;d=new THREE.MeshShaderMaterial({fragment_shader:e.fragment_shader,vertex_shader:e.vertex_shader,uniforms:e.uniforms});c=new THREE.Mesh(new Cube(c,c,c,1,1,null,true),d);a.addObject(c);return c},addPanoramaCube:function(a,c,d){var e=
[];e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[0])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[1])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[2])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[3])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[4])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[5])}));c=new THREE.Mesh(new Cube(c,c,c,1,1,e,true),new THREE.MeshFaceMaterial);a.addObject(c);return c},
addPanoramaCubePlanes:function(a,c,d){var e=c/2;c=new Plane(c,c);var g=Math.PI/2,b=Math.PI;SceneUtils.addMesh(a,c,1,0,0,-e,0,0,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[5])}));SceneUtils.addMesh(a,c,1,-e,0,0,0,g,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[0])}));SceneUtils.addMesh(a,c,1,e,0,0,0,-g,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[1])}));SceneUtils.addMesh(a,c,1,0,e,0,g,0,b,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[2])}));SceneUtils.addMesh(a,
c,1,0,-e,0,-g,0,b,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[3])}))}},ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertex_shader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main(void) {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tNormal:{type:"t",value:2,texture:null},tAO:{type:"t",value:3,texture:null},uNormalScale:{type:"f",value:1},tDisplacement:{type:"t",value:4,texture:null},uDisplacementBias:{type:"f",value:-0.5},uDisplacementScale:{type:"f",value:2.5},uPointLightPos:{type:"v3",value:new THREE.Vector3},uPointLightColor:{type:"c",value:new THREE.Color(15658734)},uDirLightPos:{type:"v3",value:new THREE.Vector3},
uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30}},fragment_shader:"uniform vec3 uDirLightPos;\nuniform vec3 uAmbientLightColor;\nuniform vec3 uDirLightColor;\nuniform vec3 uPointLightColor;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform bool enableDiffuse;\nuniform bool enableAO;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tAO;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 diffuseTex = vec3( 1.0, 1.0, 1.0 );\nvec3 aoTex = vec3( 1.0, 1.0, 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse )\ndiffuseTex = texture2D( tDiffuse, vUv ).xyz;\nif( enableAO )\naoTex = texture2D( tAO, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec3 pointVector = normalize( vPointLightVector );\nvec3 pointHalfVector = normalize( vPointLightVector + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, uShininess );\npointDiffuse  += vec4( uDiffuseColor, 1.0 ) * pointDiffuseWeight;\npointSpecular += vec4( uSpecularColor, 1.0 ) * pointSpecularWeight;\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 lDirection = viewMatrix * vec4( uDirLightPos, 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, uShininess );\ndirDiffuse  += vec4( uDiffuseColor, 1.0 ) * dirDiffuseWeight;\ndirSpecular += vec4( uSpecularColor, 1.0 ) * dirSpecularWeight;\nvec4 totalLight = vec4( uAmbientLightColor * uAmbientColor, 1.0 );\ntotalLight += vec4( uDirLightColor, 1.0 ) * ( dirDiffuse + dirSpecular );\ntotalLight += vec4( uPointLightColor, 1.0 ) * ( pointDiffuse + pointSpecular );\ngl_FragColor = vec4( totalLight.xyz * aoTex * diffuseTex, 1.0 );\n}",
vertex_shader:"attribute vec4 tangent;\nuniform vec3 uPointLightPos;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec4 lPosition = viewMatrix * vec4( uPointLightPos, 1.0 );\nvPointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}"},
cube:{uniforms:{tCube:{type:"t",value:1,texture:null}},vertex_shader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( - wPos.x, wPos.yz ) );\n}"},basic:{uniforms:{},
vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"void main() {\ngl_FragColor = vec4(1.0, 0.0, 0.0, 0.5);\n}"}}},Cube=function(a,c,d,e,g,b,k,j){function h(B,F,t,l,f,m,o,D){var x,q,H=e||1,z=g||1,K=H+1,E=z+1,A=f/2,M=m/2;f=f/H;var aa=m/z,N=n.vertices.length;if(B=="x"&&F=="y"||B=="y"&&F=="x")x="z";else if(B=="x"&&F=="z"||B=="z"&&F=="x")x="y";else if(B=="z"&&F=="y"||B=="y"&&F=="z")x="x";for(q=0;q<E;q++)for(m=0;m<K;m++){var U=new THREE.Vector3;
U[B]=(m*f-A)*t;U[F]=(q*aa-M)*l;U[x]=o;n.vertices.push(new THREE.Vertex(U))}for(q=0;q<z;q++)for(m=0;m<H;m++){n.faces.push(new THREE.Face4(m+K*q+N,m+K*(q+1)+N,m+1+K*(q+1)+N,m+1+K*q+N,null,D));n.uvs.push([new THREE.UV(m/H,q/z),new THREE.UV(m/H,(q+1)/z),new THREE.UV((m+1)/H,(q+1)/z),new THREE.UV((m+1)/H,q/z)])}}THREE.Geometry.call(this);var n=this,v=a/2,y=c/2,u=d/2;k=k?-1:1;if(b!==undefined)if(b instanceof Array)this.materials=b;else{this.materials=[];for(var p=0;p<6;p++)this.materials.push([b])}else this.materials=
[];this.sides={px:true,nx:true,py:true,ny:true,pz:true,nz:true};if(j!=undefined)for(var w in j)if(this.sides[w]!=undefined)this.sides[w]=j[w];this.sides.px&&h("z","y",1*k,-1,d,c,-v,this.materials[0]);this.sides.nx&&h("z","y",-1*k,-1,d,c,v,this.materials[1]);this.sides.py&&h("x","z",1*k,1,a,d,y,this.materials[2]);this.sides.ny&&h("x","z",1*k,-1,a,d,-y,this.materials[3]);this.sides.pz&&h("x","y",1*k,-1,a,c,u,this.materials[4]);this.sides.nz&&h("x","y",-1*k,-1,a,c,-u,this.materials[5]);(function(){for(var B=
[],F=[],t=0,l=n.vertices.length;t<l;t++){for(var f=n.vertices[t],m=false,o=0,D=B.length;o<D;o++){var x=B[o];if(f.position.x==x.position.x&&f.position.y==x.position.y&&f.position.z==x.position.z){F[t]=o;m=true;break}}if(!m){F[t]=B.length;B.push(new THREE.Vertex(f.position.clone()))}}t=0;for(l=n.faces.length;t<l;t++){f=n.faces[t];f.a=F[f.a];f.b=F[f.b];f.c=F[f.c];f.d=F[f.d]}n.vertices=B})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cube.prototype=new THREE.Geometry;
Cube.prototype.constructor=Cube;
var Cylinder=function(a,c,d,e,g){function b(n,v,y){k.vertices.push(new THREE.Vertex(new THREE.Vector3(n,v,y)))}THREE.Geometry.call(this);var k=this,j=Math.PI,h;for(h=0;h<a;h++)b(Math.sin(2*j*h/a)*c,Math.cos(2*j*h/a)*c,0);for(h=0;h<a;h++)b(Math.sin(2*j*h/a)*d,Math.cos(2*j*h/a)*d,e);for(h=0;h<a;h++)k.faces.push(new THREE.Face4(h,h+a,a+(h+1)%a,(h+1)%a));if(d!=0){b(0,0,-g);for(h=a;h<a+a/2;h++)k.faces.push(new THREE.Face4(2*a,(2*h-2*a)%a,(2*h-2*a+1)%a,(2*h-2*a+2)%a))}if(c!=0){b(0,0,e+g);for(h=a+a/2;h<
2*a;h++)k.faces.push(new THREE.Face4((2*h-2*a+2)%a+a,(2*h-2*a+1)%a+a,(2*h-2*a)%a+a,2*a+1))}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cylinder.prototype=new THREE.Geometry;Cylinder.prototype.constructor=Cylinder;
var Plane=function(a,c,d,e){THREE.Geometry.call(this);var g,b=a/2,k=c/2;d=d||1;e=e||1;var j=d+1,h=e+1;a=a/d;var n=c/e;for(g=0;g<h;g++)for(c=0;c<j;c++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(c*a-b,-(g*n-k),0)));for(g=0;g<e;g++)for(c=0;c<d;c++){this.faces.push(new THREE.Face4(c+j*g,c+j*(g+1),c+1+j*(g+1),c+1+j*g));this.uvs.push([new THREE.UV(c/d,g/e),new THREE.UV(c/d,(g+1)/e),new THREE.UV((c+1)/d,(g+1)/e),new THREE.UV((c+1)/d,g/e)])}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};
Plane.prototype=new THREE.Geometry;Plane.prototype.constructor=Plane;
var Sphere=function(a,c,d){THREE.Geometry.call(this);var e,g=Math.PI,b=Math.max(3,c||8),k=Math.max(2,d||6);c=[];for(d=0;d<k+1;d++){e=d/k;var j=a*Math.cos(e*g),h=a*Math.sin(e*g),n=[],v=0;for(e=0;e<b;e++){var y=2*e/b,u=h*Math.sin(y*g);y=h*Math.cos(y*g);(d==0||d==k)&&e>0||(v=this.vertices.push(new THREE.Vertex(new THREE.Vector3(y,j,u)))-1);n.push(v)}c.push(n)}var p,w,B;g=c.length;for(d=0;d<g;d++){b=c[d].length;if(d>0)for(e=0;e<b;e++){n=e==b-1;k=c[d][n?0:e+1];j=c[d][n?b-1:e];h=c[d-1][n?b-1:e];n=c[d-1][n?
0:e+1];u=d/(g-1);p=(d-1)/(g-1);w=(e+1)/b;y=e/b;v=new THREE.UV(1-w,u);u=new THREE.UV(1-y,u);y=new THREE.UV(1-y,p);var F=new THREE.UV(1-w,p);if(d<c.length-1){p=this.vertices[k].position.clone();w=this.vertices[j].position.clone();B=this.vertices[h].position.clone();p.normalize();w.normalize();B.normalize();this.faces.push(new THREE.Face3(k,j,h,[new THREE.Vector3(p.x,p.y,p.z),new THREE.Vector3(w.x,w.y,w.z),new THREE.Vector3(B.x,B.y,B.z)]));this.uvs.push([v,u,y])}if(d>1){p=this.vertices[k].position.clone();
w=this.vertices[h].position.clone();B=this.vertices[n].position.clone();p.normalize();w.normalize();B.normalize();this.faces.push(new THREE.Face3(k,h,n,[new THREE.Vector3(p.x,p.y,p.z),new THREE.Vector3(w.x,w.y,w.z),new THREE.Vector3(B.x,B.y,B.z)]));this.uvs.push([v,y,F])}}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial();this.boundingSphere={radius:a}};Sphere.prototype=new THREE.Geometry;Sphere.prototype.constructor=Sphere;
var Torus=function(a,c,d,e){this.radius=a||100;this.tube=c||40;this.segmentsR=d||8;this.segmentsT=e||6;a=[];THREE.Geometry.call(this);for(c=0;c<=this.segmentsR;++c)for(d=0;d<=this.segmentsT;++d){e=d/this.segmentsT*2*Math.PI;var g=c/this.segmentsR*2*Math.PI;this.vertices.push(new THREE.Vertex(new THREE.Vector3((this.radius+this.tube*Math.cos(g))*Math.cos(e),(this.radius+this.tube*Math.cos(g))*Math.sin(e),this.tube*Math.sin(g))));a.push([d/this.segmentsT,1-c/this.segmentsR])}for(c=1;c<=this.segmentsR;++c)for(d=
1;d<=this.segmentsT;++d){e=(this.segmentsT+1)*c+d;g=(this.segmentsT+1)*c+d-1;var b=(this.segmentsT+1)*(c-1)+d-1,k=(this.segmentsT+1)*(c-1)+d;this.faces.push(new THREE.Face4(e,g,b,k));this.uvs.push([new THREE.UV(a[e][0],a[e][1]),new THREE.UV(a[g][0],a[g][1]),new THREE.UV(a[b][0],a[b][1]),new THREE.UV(a[k][0],a[k][1])])}delete a;this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()};Torus.prototype=new THREE.Geometry;Torus.prototype.constructor=Torus;
var Icosahedron=function(a){function c(y,u,p){var w=Math.sqrt(y*y+u*u+p*p);return g.vertices.push(new THREE.Vertex(new THREE.Vector3(y/w,u/w,p/w)))-1}function d(y,u,p,w){w.faces.push(new THREE.Face3(y,u,p))}function e(y,u){var p=g.vertices[y].position,w=g.vertices[u].position;return c((p.x+w.x)/2,(p.y+w.y)/2,(p.z+w.z)/2)}var g=this,b=new THREE.Geometry,k;this.subdivisions=a||0;THREE.Geometry.call(this);a=(1+Math.sqrt(5))/2;c(-1,a,0);c(1,a,0);c(-1,-a,0);c(1,-a,0);c(0,-1,a);c(0,1,a);c(0,-1,-a);c(0,
1,-a);c(a,0,-1);c(a,0,1);c(-a,0,-1);c(-a,0,1);d(0,11,5,b);d(0,5,1,b);d(0,1,7,b);d(0,7,10,b);d(0,10,11,b);d(1,5,9,b);d(5,11,4,b);d(11,10,2,b);d(10,7,6,b);d(7,1,8,b);d(3,9,4,b);d(3,4,2,b);d(3,2,6,b);d(3,6,8,b);d(3,8,9,b);d(4,9,5,b);d(2,4,11,b);d(6,2,10,b);d(8,6,7,b);d(9,8,1,b);for(a=0;a<this.subdivisions;a++){k=new THREE.Geometry;for(var j in b.faces){var h=e(b.faces[j].a,b.faces[j].b),n=e(b.faces[j].b,b.faces[j].c),v=e(b.faces[j].c,b.faces[j].a);d(b.faces[j].a,h,v,k);d(b.faces[j].b,n,h,k);d(b.faces[j].c,
v,n,k);d(h,n,v,k)}b.faces=k.faces}g.faces=b.faces;delete b;delete k;this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()};Icosahedron.prototype=new THREE.Geometry;Icosahedron.prototype.constructor=Icosahedron;
function LathedObject(a,c,d){THREE.Geometry.call(this);c=c||12;d=d||2*Math.PI;c=d/c;for(var e=[],g=[],b=[],k=[],j=0;j<a.length;j++){this.vertices.push(new THREE.Vertex(a[j]));g[j]=this.vertices.length-1;e[j]=new THREE.Vector3(a[j].x,a[j].y,a[j].z)}for(var h=THREE.Matrix4.rotationZMatrix(c),n=0;n<=d+0.0010;n+=c){for(j=0;j<e.length;j++)if(n<d){e[j]=h.multiplyVector3(e[j].clone());this.vertices.push(new THREE.Vertex(e[j]));b[j]=this.vertices.length-1}else b=k;if(n==0)k=g;for(j=0;j<g.length-1;j++){this.faces.push(new THREE.Face4(b[j],
b[j+1],g[j+1],g[j]));this.uvs.push([new THREE.UV(n/d,j/a.length),new THREE.UV(n/d,(j+1)/a.length),new THREE.UV((n-c)/d,(j+1)/a.length),new THREE.UV((n-c)/d,j/a.length)])}g=b;b=[]}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()}LathedObject.prototype=new THREE.Geometry;LathedObject.prototype.constructor=LathedObject;THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?this.addStatusElement():null};
THREE.Loader.prototype={addStatusElement:function(){var a=document.createElement("div");a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="#b00";a.style.color="#fff";a.style.width="140px";a.style.padding="0.25em 0.25em 0.25em 0.5em";a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var c="Loaded ";c+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1E3).toFixed(2)+" KB";this.statusDomElement.innerHTML=
c},loadAsciiOld:function(a,c){var d=document.createElement("script");d.type="text/javascript";d.onload=c;d.src=a;document.getElementsByTagName("head")[0].appendChild(d)},loadAscii:function(a){var c=a.model,d=a.callback,e=a.texture_path?a.texture_path:THREE.Loader.prototype.extractUrlbase(c);a=(new Date).getTime();c=new Worker(c);c.onmessage=function(g){THREE.Loader.prototype.createModel(g.data,d,e)};c.postMessage(a)},loadBinary:function(a){var c=a.model,d=a.callback,e=a.texture_path?a.texture_path:
THREE.Loader.prototype.extractUrlbase(c),g=a.bin_path?a.bin_path:THREE.Loader.prototype.extractUrlbase(c);a=(new Date).getTime();c=new Worker(c);var b=this.showProgress?THREE.Loader.prototype.updateProgress:null;c.onmessage=function(k){THREE.Loader.prototype.loadAjaxBuffers(k.data.buffers,k.data.materials,d,g,e,b)};c.onerror=function(k){alert("worker.onerror: "+k.message+"\n"+k.data);k.preventDefault()};c.postMessage(a)},loadAjaxBuffers:function(a,c,d,e,g,b){var k=new XMLHttpRequest,j=e+"/"+a,h=0;
k.onreadystatechange=function(){if(k.readyState==4)k.status==200||k.status==0?THREE.Loader.prototype.createBinModel(k.responseText,d,g,c):alert("Couldn't load ["+j+"] ["+k.status+"]");else if(k.readyState==3){if(b){if(h==0)h=k.getResponseHeader("Content-Length");b({total:h,loaded:k.responseText.length})}}else if(k.readyState==2)h=k.getResponseHeader("Content-Length")};k.open("GET",j,true);k.overrideMimeType("text/plain; charset=x-user-defined");k.setRequestHeader("Content-Type","text/plain");k.send(null)},
createBinModel:function(a,c,d,e){var g=function(b){function k(C,G){var J=v(C,G),P=v(C,G+1),da=v(C,G+2),ia=v(C,G+3),fa=(ia<<1&255|da>>7)-127;J=(da&127)<<16|P<<8|J;if(J==0&&fa==-127)return 0;return(1-2*(ia>>7))*(1+J*Math.pow(2,-23))*Math.pow(2,fa)}function j(C,G){var J=v(C,G),P=v(C,G+1),da=v(C,G+2);return(v(C,G+3)<<24)+(da<<16)+(P<<8)+J}function h(C,G){var J=v(C,G);return(v(C,G+1)<<8)+J}function n(C,G){var J=v(C,G);return J>127?J-256:J}function v(C,G){return C.charCodeAt(G)&255}function y(C){var G,
J,P;G=j(a,C);J=j(a,C+D);P=j(a,C+x);C=h(a,C+q);THREE.Loader.prototype.f3(t,G,J,P,C)}function u(C){var G,J,P,da,ia,fa;G=j(a,C);J=j(a,C+D);P=j(a,C+x);da=h(a,C+q);ia=j(a,C+H);fa=j(a,C+z);C=j(a,C+K);THREE.Loader.prototype.f3n(t,m,G,J,P,da,ia,fa,C)}function p(C){var G,J,P,da;G=j(a,C);J=j(a,C+E);P=j(a,C+A);da=j(a,C+M);C=h(a,C+aa);THREE.Loader.prototype.f4(t,G,J,P,da,C)}function w(C){var G,J,P,da,ia,fa,qa,sa;G=j(a,C);J=j(a,C+E);P=j(a,C+A);da=j(a,C+M);ia=h(a,C+aa);fa=j(a,C+N);qa=j(a,C+U);sa=j(a,C+T);C=j(a,
C+R);THREE.Loader.prototype.f4n(t,m,G,J,P,da,ia,fa,qa,sa,C)}function B(C){var G,J;G=j(a,C);J=j(a,C+Z);C=j(a,C+ca);THREE.Loader.prototype.uv3(t.uvs,o[G*2],o[G*2+1],o[J*2],o[J*2+1],o[C*2],o[C*2+1])}function F(C){var G,J,P;G=j(a,C);J=j(a,C+W);P=j(a,C+S);C=j(a,C+ba);THREE.Loader.prototype.uv4(t.uvs,o[G*2],o[G*2+1],o[J*2],o[J*2+1],o[P*2],o[P*2+1],o[C*2],o[C*2+1])}var t=this,l=0,f,m=[],o=[],D,x,q,H,z,K,E,A,M,aa,N,U,T,R,Z,ca,W,S,ba,X,I,Q,V,ha,ka;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(t,
e,b);f={signature:a.substr(l,8),header_bytes:v(a,l+8),vertex_coordinate_bytes:v(a,l+9),normal_coordinate_bytes:v(a,l+10),uv_coordinate_bytes:v(a,l+11),vertex_index_bytes:v(a,l+12),normal_index_bytes:v(a,l+13),uv_index_bytes:v(a,l+14),material_index_bytes:v(a,l+15),nvertices:j(a,l+16),nnormals:j(a,l+16+4),nuvs:j(a,l+16+8),ntri_flat:j(a,l+16+12),ntri_smooth:j(a,l+16+16),ntri_flat_uv:j(a,l+16+20),ntri_smooth_uv:j(a,l+16+24),nquad_flat:j(a,l+16+28),nquad_smooth:j(a,l+16+32),nquad_flat_uv:j(a,l+16+36),
nquad_smooth_uv:j(a,l+16+40)};l+=f.header_bytes;D=f.vertex_index_bytes;x=f.vertex_index_bytes*2;q=f.vertex_index_bytes*3;H=f.vertex_index_bytes*3+f.material_index_bytes;z=f.vertex_index_bytes*3+f.material_index_bytes+f.normal_index_bytes;K=f.vertex_index_bytes*3+f.material_index_bytes+f.normal_index_bytes*2;E=f.vertex_index_bytes;A=f.vertex_index_bytes*2;M=f.vertex_index_bytes*3;aa=f.vertex_index_bytes*4;N=f.vertex_index_bytes*4+f.material_index_bytes;U=f.vertex_index_bytes*4+f.material_index_bytes+
f.normal_index_bytes;T=f.vertex_index_bytes*4+f.material_index_bytes+f.normal_index_bytes*2;R=f.vertex_index_bytes*4+f.material_index_bytes+f.normal_index_bytes*3;Z=f.uv_index_bytes;ca=f.uv_index_bytes*2;W=f.uv_index_bytes;S=f.uv_index_bytes*2;ba=f.uv_index_bytes*3;b=f.vertex_index_bytes*3+f.material_index_bytes;ka=f.vertex_index_bytes*4+f.material_index_bytes;X=f.ntri_flat*b;I=f.ntri_smooth*(b+f.normal_index_bytes*3);Q=f.ntri_flat_uv*(b+f.uv_index_bytes*3);V=f.ntri_smooth_uv*(b+f.normal_index_bytes*
3+f.uv_index_bytes*3);ha=f.nquad_flat*ka;b=f.nquad_smooth*(ka+f.normal_index_bytes*4);ka=f.nquad_flat_uv*(ka+f.uv_index_bytes*4);l+=function(C){var G,J,P,da=f.vertex_coordinate_bytes*3,ia=C+f.nvertices*da;for(C=C;C<ia;C+=da){G=k(a,C);J=k(a,C+f.vertex_coordinate_bytes);P=k(a,C+f.vertex_coordinate_bytes*2);THREE.Loader.prototype.v(t,G,J,P)}return f.nvertices*da}(l);l+=function(C){var G,J,P,da=f.normal_coordinate_bytes*3,ia=C+f.nnormals*da;for(C=C;C<ia;C+=da){G=n(a,C);J=n(a,C+f.normal_coordinate_bytes);
P=n(a,C+f.normal_coordinate_bytes*2);m.push(G/127,J/127,P/127)}return f.nnormals*da}(l);l+=function(C){var G,J,P=f.uv_coordinate_bytes*2,da=C+f.nuvs*P;for(C=C;C<da;C+=P){G=k(a,C);J=k(a,C+f.uv_coordinate_bytes);o.push(G,J)}return f.nuvs*P}(l);l=l;X=l+X;I=X+I;Q=I+Q;V=Q+V;ha=V+ha;b=ha+b;ka=b+ka;(function(C){var G,J=f.vertex_index_bytes*3+f.material_index_bytes,P=J+f.uv_index_bytes*3,da=C+f.ntri_flat_uv*P;for(G=C;G<da;G+=P){y(G);B(G+J)}return da-C})(I);(function(C){var G,J=f.vertex_index_bytes*3+f.material_index_bytes+
f.normal_index_bytes*3,P=J+f.uv_index_bytes*3,da=C+f.ntri_smooth_uv*P;for(G=C;G<da;G+=P){u(G);B(G+J)}return da-C})(Q);(function(C){var G,J=f.vertex_index_bytes*4+f.material_index_bytes,P=J+f.uv_index_bytes*4,da=C+f.nquad_flat_uv*P;for(G=C;G<da;G+=P){p(G);F(G+J)}return da-C})(b);(function(C){var G,J=f.vertex_index_bytes*4+f.material_index_bytes+f.normal_index_bytes*4,P=J+f.uv_index_bytes*4,da=C+f.nquad_smooth_uv*P;for(G=C;G<da;G+=P){w(G);F(G+J)}return da-C})(ka);(function(C){var G,J=f.vertex_index_bytes*
3+f.material_index_bytes,P=C+f.ntri_flat*J;for(G=C;G<P;G+=J)y(G);return P-C})(l);(function(C){var G,J=f.vertex_index_bytes*3+f.material_index_bytes+f.normal_index_bytes*3,P=C+f.ntri_smooth*J;for(G=C;G<P;G+=J)u(G);return P-C})(X);(function(C){var G,J=f.vertex_index_bytes*4+f.material_index_bytes,P=C+f.nquad_flat*J;for(G=C;G<P;G+=J)p(G);return P-C})(V);(function(C){var G,J=f.vertex_index_bytes*4+f.material_index_bytes+f.normal_index_bytes*4,P=C+f.nquad_smooth*J;for(G=C;G<P;G+=J)w(G);return P-C})(ha);
this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};g.prototype=new THREE.Geometry;g.prototype.constructor=g;c(new g(d))},createModel:function(a,c,d){var e=function(g){var b=this;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(b,a.materials,g);(function(){var k,j,h,n,v;k=0;for(j=a.vertices.length;k<j;k+=3){h=a.vertices[k];n=a.vertices[k+1];v=a.vertices[k+2];THREE.Loader.prototype.v(b,h,n,v)}})();(function(){function k(w,B){THREE.Loader.prototype.f3(b,w[B],
w[B+1],w[B+2],w[B+3])}function j(w,B){THREE.Loader.prototype.f3n(b,a.normals,w[B],w[B+1],w[B+2],w[B+3],w[B+4],w[B+5],w[B+6])}function h(w,B){THREE.Loader.prototype.f4(b,w[B],w[B+1],w[B+2],w[B+3],w[B+4])}function n(w,B){THREE.Loader.prototype.f4n(b,a.normals,w[B],w[B+1],w[B+2],w[B+3],w[B+4],w[B+5],w[B+6],w[B+7],w[B+8])}function v(w,B){var F,t,l,f,m,o,D,x,q;F=w[B];t=w[B+1];l=w[B+2];f=a.uvs[F*2];D=a.uvs[F*2+1];m=a.uvs[t*2];x=a.uvs[t*2+1];o=a.uvs[l*2];q=a.uvs[l*2+1];THREE.Loader.prototype.uv3(b.uvs,f,
D,m,x,o,q);if(a.uvs2){f=a.uvs2[F*2];D=a.uvs2[F*2+1];m=a.uvs2[t*2];x=a.uvs2[t*2+1];o=a.uvs2[l*2];q=a.uvs2[l*2+1];THREE.Loader.prototype.uv3(b.uvs2,f,1-D,m,1-x,o,1-q)}}function y(w,B){var F,t,l,f,m,o,D,x,q,H,z,K;F=w[B];t=w[B+1];l=w[B+2];f=w[B+3];m=a.uvs[F*2];q=a.uvs[F*2+1];o=a.uvs[t*2];H=a.uvs[t*2+1];D=a.uvs[l*2];z=a.uvs[l*2+1];x=a.uvs[f*2];K=a.uvs[f*2+1];THREE.Loader.prototype.uv4(b.uvs,m,q,o,H,D,z,x,K);if(a.uvs2){m=a.uvs2[F*2];q=a.uvs2[F*2+1];o=a.uvs2[t*2];H=a.uvs2[t*2+1];D=a.uvs2[l*2];z=a.uvs2[l*
2+1];x=a.uvs2[f*2];K=a.uvs2[f*2+1];THREE.Loader.prototype.uv4(b.uvs2,m,1-q,o,1-H,D,1-z,x,1-K)}}var u,p;u=0;for(p=a.triangles_uv.length;u<p;u+=7){k(a.triangles_uv,u);v(a.triangles_uv,u+4)}u=0;for(p=a.triangles_n_uv.length;u<p;u+=10){j(a.triangles_n_uv,u);v(a.triangles_n_uv,u+7)}u=0;for(p=a.quads_uv.length;u<p;u+=9){h(a.quads_uv,u);y(a.quads_uv,u+5)}u=0;for(p=a.quads_n_uv.length;u<p;u+=13){n(a.quads_n_uv,u);y(a.quads_n_uv,u+9)}u=0;for(p=a.triangles.length;u<p;u+=4)k(a.triangles,u);u=0;for(p=a.triangles_n.length;u<
p;u+=7)j(a.triangles_n,u);u=0;for(p=a.quads.length;u<p;u+=5)h(a.quads,u);u=0;for(p=a.quads_n.length;u<p;u+=9)n(a.quads_n,u)})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};e.prototype=new THREE.Geometry;e.prototype.constructor=e;c(new e(d))},v:function(a,c,d,e){a.vertices.push(new THREE.Vertex(new THREE.Vector3(c,d,e)))},f3:function(a,c,d,e,g){a.faces.push(new THREE.Face3(c,d,e,null,a.materials[g]))},f4:function(a,c,d,e,g,b){a.faces.push(new THREE.Face4(c,d,e,g,null,
a.materials[b]))},f3n:function(a,c,d,e,g,b,k,j,h){b=a.materials[b];var n=c[j*3],v=c[j*3+1];j=c[j*3+2];var y=c[h*3],u=c[h*3+1];h=c[h*3+2];a.faces.push(new THREE.Face3(d,e,g,[new THREE.Vector3(c[k*3],c[k*3+1],c[k*3+2]),new THREE.Vector3(n,v,j),new THREE.Vector3(y,u,h)],b))},f4n:function(a,c,d,e,g,b,k,j,h,n,v){k=a.materials[k];var y=c[h*3],u=c[h*3+1];h=c[h*3+2];var p=c[n*3],w=c[n*3+1];n=c[n*3+2];var B=c[v*3],F=c[v*3+1];v=c[v*3+2];a.faces.push(new THREE.Face4(d,e,g,b,[new THREE.Vector3(c[j*3],c[j*3+1],
c[j*3+2]),new THREE.Vector3(y,u,h),new THREE.Vector3(p,w,n),new THREE.Vector3(B,F,v)],k))},uv3:function(a,c,d,e,g,b,k){var j=[];j.push(new THREE.UV(c,d));j.push(new THREE.UV(e,g));j.push(new THREE.UV(b,k));a.push(j)},uv4:function(a,c,d,e,g,b,k,j,h){var n=[];n.push(new THREE.UV(c,d));n.push(new THREE.UV(e,g));n.push(new THREE.UV(b,k));n.push(new THREE.UV(j,h));a.push(n)},init_materials:function(a,c,d){a.materials=[];for(var e=0;e<c.length;++e)a.materials[e]=[THREE.Loader.prototype.createMaterial(c[e],
d)]},createMaterial:function(a,c){function d(k){k=Math.log(k)/Math.LN2;return Math.floor(k)==k}function e(k,j){var h=new Image;h.onload=function(){if(!d(this.width)||!d(this.height)){var n=Math.pow(2,Math.round(Math.log(this.width)/Math.LN2)),v=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));k.image.width=n;k.image.height=v;k.image.getContext("2d").drawImage(this,0,0,n,v)}else k.image=this;k.image.loaded=1};h.src=j}var g,b;if(a.map_diffuse&&c){b=document.createElement("canvas");g=new THREE.MeshLambertMaterial({map:new THREE.Texture(b)});
e(g.map,c+"/"+a.map_diffuse)}else if(a.col_diffuse){g=(a.col_diffuse[0]*255<<16)+(a.col_diffuse[1]*255<<8)+a.col_diffuse[2]*255;g=new THREE.MeshLambertMaterial({color:g,opacity:a.transparency})}else g=a.a_dbg_color?new THREE.MeshLambertMaterial({color:a.a_dbg_color}):new THREE.MeshLambertMaterial({color:15658734});if(a.map_lightmap&&c){b=document.createElement("canvas");g.light_map=new THREE.Texture(b);e(g.light_map,c+"/"+a.map_lightmap)}return g},extractUrlbase:function(a){a=a.split("/");a.pop();
return a.join("/")}};
