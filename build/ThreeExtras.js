// ThreeExtras.js r32 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,c,d){this.r=a;this.g=c;this.b=d;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHSV:function(a,c,d){var e,f,b,j,h,g;if(d==0)e=f=b=0;else{j=Math.floor(a*6);h=a*6-j;a=d*(1-c);g=d*(1-c*h);c=d*(1-c*(1-h));switch(j){case 1:e=g;f=d;b=a;break;case 2:e=a;f=d;b=c;break;case 3:e=a;f=g;b=d;break;case 4:e=c;f=a;b=d;break;case 5:e=d;f=a;b=g;break;case 6:case 0:e=d;f=c;b=a}}this.r=e;this.g=f;this.b=b;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},
setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+
this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,c){this.x=a||0;this.y=c||0};
THREE.Vector2.prototype={set:function(a,c){this.x=a;this.y=c;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,c,d){this.x=a||0;this.y=c||0;this.z=d||0};
THREE.Vector3.prototype={set:function(a,c,d){this.x=a;this.y=c;this.z=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,c){this.x=a.y*c.z-a.z*c.y;this.y=a.z*c.x-a.x*c.z;this.z=a.x*c.y-a.y*c.x;return this},crossSelf:function(a){var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},multiply:function(a,c){this.x=a.x*c.x;this.y=a.y*c.y;this.z=a.z*c.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=
a.z;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var c=this.x-a.x,d=this.y-a.y;a=this.z-a.z;return Math.sqrt(c*c+d*d+a*a)},distanceToSquared:function(a){var c=this.x-a.x,d=this.y-a.y;a=this.z-a.z;return c*c+d*d+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=
-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,c,d,e){this.x=a||0;this.y=c||0;this.z=d||0;this.w=e||1};
THREE.Vector4.prototype={set:function(a,c,d,e){this.x=a;this.y=c;this.z=d;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;this.w=a.w+c.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;this.w=a.w-c.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,c){this.x+=(a.x-this.x)*c;this.y+=(a.y-this.y)*c;this.z+=(a.z-this.z)*c;this.w+=(a.w-this.w)*c},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,c){this.origin=a||new THREE.Vector3;this.direction=c||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var c,d,e=a.objects,f=[];a=0;for(c=e.length;a<c;a++){d=e[a];if(d instanceof THREE.Mesh)f=f.concat(this.intersectObject(d))}f.sort(function(b,j){return b.distance-j.distance});return f},intersectObject:function(a){function c(H,t,I,o){o=o.clone().subSelf(t);I=I.clone().subSelf(t);var k=H.clone().subSelf(t);H=o.dot(o);t=o.dot(I);o=o.dot(k);var p=I.dot(I);I=I.dot(k);k=1/(H*p-t*t);p=(p*o-t*I)*k;H=(H*I-t*o)*k;return p>0&&H>0&&p+H<1}var d,e,f,b,j,h,g,m,w,B,
u,q=a.geometry,x=q.vertices,E=[];d=0;for(e=q.faces.length;d<e;d++){f=q.faces[d];B=this.origin.clone();u=this.direction.clone();b=a.matrix.multiplyVector3(x[f.a].position.clone());j=a.matrix.multiplyVector3(x[f.b].position.clone());h=a.matrix.multiplyVector3(x[f.c].position.clone());g=f instanceof THREE.Face4?a.matrix.multiplyVector3(x[f.d].position.clone()):null;m=a.rotationMatrix.multiplyVector3(f.normal.clone());w=u.dot(m);if(w<0){m=m.dot((new THREE.Vector3).sub(b,B))/w;B=B.addSelf(u.multiplyScalar(m));
if(f instanceof THREE.Face3){if(c(B,b,j,h)){f={distance:this.origin.distanceTo(B),point:B,face:f,object:a};E.push(f)}}else if(f instanceof THREE.Face4)if(c(B,b,j,g)||c(B,j,h,g)){f={distance:this.origin.distanceTo(B),point:B,face:f,object:a};E.push(f)}}}return E}};
THREE.Rectangle=function(){function a(){b=e-c;j=f-d}var c,d,e,f,b,j,h=true;this.getX=function(){return c};this.getY=function(){return d};this.getWidth=function(){return b};this.getHeight=function(){return j};this.getLeft=function(){return c};this.getTop=function(){return d};this.getRight=function(){return e};this.getBottom=function(){return f};this.set=function(g,m,w,B){h=false;c=g;d=m;e=w;f=B;a()};this.addPoint=function(g,m){if(h){h=false;c=g;d=m;e=g;f=m}else{c=c<g?c:g;d=d<m?d:m;e=e>g?e:g;f=f>m?
f:m}a()};this.add3Points=function(g,m,w,B,u,q){if(h){h=false;c=g<w?g<u?g:u:w<u?w:u;d=m<B?m<q?m:q:B<q?B:q;e=g>w?g>u?g:u:w>u?w:u;f=m>B?m>q?m:q:B>q?B:q}else{c=g<w?g<u?g<c?g:c:u<c?u:c:w<u?w<c?w:c:u<c?u:c;d=m<B?m<q?m<d?m:d:q<d?q:d:B<q?B<d?B:d:q<d?q:d;e=g>w?g>u?g>e?g:e:u>e?u:e:w>u?w>e?w:e:u>e?u:e;f=m>B?m>q?m>f?m:f:q>f?q:f:B>q?B>f?B:f:q>f?q:f}a()};this.addRectangle=function(g){if(h){h=false;c=g.getLeft();d=g.getTop();e=g.getRight();f=g.getBottom()}else{c=c<g.getLeft()?c:g.getLeft();d=d<g.getTop()?d:g.getTop();
e=e>g.getRight()?e:g.getRight();f=f>g.getBottom()?f:g.getBottom()}a()};this.inflate=function(g){c-=g;d-=g;e+=g;f+=g;a()};this.minSelf=function(g){c=c>g.getLeft()?c:g.getLeft();d=d>g.getTop()?d:g.getTop();e=e<g.getRight()?e:g.getRight();f=f<g.getBottom()?f:g.getBottom();a()};this.instersects=function(g){return Math.min(e,g.getRight())-Math.max(c,g.getLeft())>=0&&Math.min(f,g.getBottom())-Math.max(d,g.getTop())>=0};this.empty=function(){h=true;f=e=d=c=0;a()};this.isEmpty=function(){return h};this.toString=
function(){return"THREE.Rectangle ( left: "+c+", right: "+e+", top: "+d+", bottom: "+f+", width: "+b+", height: "+j+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a,c=this.m;a=c[1];c[1]=c[3];c[3]=a;a=c[2];c[2]=c[6];c[6]=a;a=c[5];c[5]=c[7];c[7]=a;return this}};
THREE.Matrix4=function(a,c,d,e,f,b,j,h,g,m,w,B,u,q,x,E){this.n11=a||1;this.n12=c||0;this.n13=d||0;this.n14=e||0;this.n21=f||0;this.n22=b||1;this.n23=j||0;this.n24=h||0;this.n31=g||0;this.n32=m||0;this.n33=w||1;this.n34=B||0;this.n41=u||0;this.n42=q||0;this.n43=x||0;this.n44=E||1;this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,c,d,e,f,b,j,h,g,m,w,B,u,q,x,E){this.n11=a;this.n12=c;this.n13=d;this.n14=e;this.n21=f;this.n22=b;this.n23=j;this.n24=h;this.n31=g;this.n32=m;this.n33=w;this.n34=B;this.n41=u;this.n42=q;this.n43=x;this.n44=E;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,c,d){var e=THREE.Matrix4.__tmpVec1,f=THREE.Matrix4.__tmpVec2,b=THREE.Matrix4.__tmpVec3;b.sub(a,c).normalize();e.cross(d,b).normalize();f.cross(b,e).normalize();this.n11=e.x;this.n12=e.y;this.n13=e.z;this.n14=-e.dot(a);this.n21=f.x;this.n22=f.y;this.n23=f.z;this.n24=-f.dot(a);
this.n31=b.x;this.n32=b.y;this.n33=b.z;this.n34=-b.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var c=a.x,d=a.y,e=a.z,f=1/(this.n41*c+this.n42*d+this.n43*e+this.n44);a.x=(this.n11*c+this.n12*d+this.n13*e+this.n14)*f;a.y=(this.n21*c+this.n22*d+this.n23*e+this.n24)*f;a.z=(this.n31*c+this.n32*d+this.n33*e+this.n34)*f;return a},multiplyVector4:function(a){var c=a.x,d=a.y,e=a.z,f=a.w;a.x=this.n11*c+this.n12*d+this.n13*e+this.n14*f;a.y=this.n21*c+this.n22*d+this.n23*
e+this.n24*f;a.z=this.n31*c+this.n32*d+this.n33*e+this.n34*f;a.w=this.n41*c+this.n42*d+this.n43*e+this.n44*f;return a},crossVector:function(a){var c=new THREE.Vector4;c.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;c.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;c.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;c.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return c},multiply:function(a,c){var d=a.n11,e=a.n12,f=a.n13,b=a.n14,j=a.n21,h=a.n22,g=a.n23,m=a.n24,w=a.n31,
B=a.n32,u=a.n33,q=a.n34,x=a.n41,E=a.n42,H=a.n43,t=a.n44,I=c.n11,o=c.n12,k=c.n13,p=c.n14,n=c.n21,l=c.n22,v=c.n23,C=c.n24,y=c.n31,z=c.n32,D=c.n33,A=c.n34,F=c.n41,T=c.n42,N=c.n43,X=c.n44;this.n11=d*I+e*n+f*y+b*F;this.n12=d*o+e*l+f*z+b*T;this.n13=d*k+e*v+f*D+b*N;this.n14=d*p+e*C+f*A+b*X;this.n21=j*I+h*n+g*y+m*F;this.n22=j*o+h*l+g*z+m*T;this.n23=j*k+h*v+g*D+m*N;this.n24=j*p+h*C+g*A+m*X;this.n31=w*I+B*n+u*y+q*F;this.n32=w*o+B*l+u*z+q*T;this.n33=w*k+B*v+u*D+q*N;this.n34=w*p+B*C+u*A+q*X;this.n41=x*I+E*n+
H*y+t*F;this.n42=x*o+E*l+H*z+t*T;this.n43=x*k+E*v+H*D+t*N;this.n44=x*p+E*C+H*A+t*X;return this},multiplySelf:function(a){var c=this.n11,d=this.n12,e=this.n13,f=this.n14,b=this.n21,j=this.n22,h=this.n23,g=this.n24,m=this.n31,w=this.n32,B=this.n33,u=this.n34,q=this.n41,x=this.n42,E=this.n43,H=this.n44,t=a.n11,I=a.n21,o=a.n31,k=a.n41,p=a.n12,n=a.n22,l=a.n32,v=a.n42,C=a.n13,y=a.n23,z=a.n33,D=a.n43,A=a.n14,F=a.n24,T=a.n34;a=a.n44;this.n11=c*t+d*I+e*o+f*k;this.n12=c*p+d*n+e*l+f*v;this.n13=c*C+d*y+e*z+f*
D;this.n14=c*A+d*F+e*T+f*a;this.n21=b*t+j*I+h*o+g*k;this.n22=b*p+j*n+h*l+g*v;this.n23=b*C+j*y+h*z+g*D;this.n24=b*A+j*F+h*T+g*a;this.n31=m*t+w*I+B*o+u*k;this.n32=m*p+w*n+B*l+u*v;this.n33=m*C+w*y+B*z+u*D;this.n34=m*A+w*F+B*T+u*a;this.n41=q*t+x*I+E*o+H*k;this.n42=q*p+x*n+E*l+H*v;this.n43=q*C+x*y+E*z+H*D;this.n44=q*A+x*F+E*T+H*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=
a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){var a=this.n11,c=this.n12,d=this.n13,e=this.n14,f=this.n21,b=this.n22,j=this.n23,h=this.n24,g=this.n31,m=this.n32,w=this.n33,B=this.n34,u=this.n41,q=this.n42,x=this.n43,E=this.n44;return e*j*m*u-d*h*m*u-e*b*w*u+c*h*w*u+d*b*B*u-c*j*B*u-e*j*g*q+d*h*g*q+e*f*w*q-a*h*w*q-d*f*B*q+a*j*B*q+e*b*g*x-c*h*g*x-e*f*m*x+a*h*m*x+c*f*B*x-a*b*B*x-d*b*g*E+c*j*g*E+d*f*m*E-a*j*m*E-c*f*w*E+a*b*w*E},transpose:function(){function a(c,d,
e){var f=c[d];c[d]=c[e];c[e]=f}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){var a=this.flat;a[0]=this.n11;
a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},setTranslation:function(a,c,d){this.set(1,0,0,a,0,1,0,c,0,0,1,d,0,0,0,1);return this},setScale:function(a,c,d){this.set(a,0,0,0,0,c,0,0,0,0,d,0,0,0,0,1);return this},setRotX:function(a){var c=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,c,-a,0,0,a,c,0,0,0,0,1);return this},setRotY:function(a){var c=
Math.cos(a);a=Math.sin(a);this.set(c,0,a,0,0,1,0,0,-a,0,c,0,0,0,0,1);return this},setRotZ:function(a){var c=Math.cos(a);a=Math.sin(a);this.set(c,-a,0,0,a,c,0,0,0,0,1,0,0,0,0,1);return this},setRotAxis:function(a,c){var d=Math.cos(c),e=Math.sin(c),f=1-d,b=a.x,j=a.y,h=a.z,g=f*b,m=f*j;this.set(g*b+d,g*j-e*h,g*h+e*j,0,g*j+e*h,m*j+d,m*h-e*b,0,g*h-e*j,m*h+e*b,f*h*h+d,0,0,0,0,1);return this},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+
this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,c,d){var e=new THREE.Matrix4;e.setTranslation(a,c,d);return e};THREE.Matrix4.scaleMatrix=function(a,c,d){var e=new THREE.Matrix4;e.setScale(a,c,d);return e};THREE.Matrix4.rotationXMatrix=function(a){var c=new THREE.Matrix4;c.setRotX(a);return c};
THREE.Matrix4.rotationYMatrix=function(a){var c=new THREE.Matrix4;c.setRotY(a);return c};THREE.Matrix4.rotationZMatrix=function(a){var c=new THREE.Matrix4;c.setRotZ(a);return c};THREE.Matrix4.rotationAxisAngleMatrix=function(a,c){var d=new THREE.Matrix4;d.setRotAxis(a,c);return d};
THREE.Matrix4.makeInvert=function(a){var c=a.n11,d=a.n12,e=a.n13,f=a.n14,b=a.n21,j=a.n22,h=a.n23,g=a.n24,m=a.n31,w=a.n32,B=a.n33,u=a.n34,q=a.n41,x=a.n42,E=a.n43,H=a.n44,t=new THREE.Matrix4;t.n11=h*u*x-g*B*x+g*w*E-j*u*E-h*w*H+j*B*H;t.n12=f*B*x-e*u*x-f*w*E+d*u*E+e*w*H-d*B*H;t.n13=e*g*x-f*h*x+f*j*E-d*g*E-e*j*H+d*h*H;t.n14=f*h*w-e*g*w-f*j*B+d*g*B+e*j*u-d*h*u;t.n21=g*B*q-h*u*q-g*m*E+b*u*E+h*m*H-b*B*H;t.n22=e*u*q-f*B*q+f*m*E-c*u*E-e*m*H+c*B*H;t.n23=f*h*q-e*g*q-f*b*E+c*g*E+e*b*H-c*h*H;t.n24=e*g*m-f*h*m+
f*b*B-c*g*B-e*b*u+c*h*u;t.n31=j*u*q-g*w*q+g*m*x-b*u*x-j*m*H+b*w*H;t.n32=f*w*q-d*u*q-f*m*x+c*u*x+d*m*H-c*w*H;t.n33=e*g*q-f*j*q+f*b*x-c*g*x-d*b*H+c*j*H;t.n34=f*j*m-d*g*m-f*b*w+c*g*w+d*b*u-c*j*u;t.n41=h*w*q-j*B*q-h*m*x+b*B*x+j*m*E-b*w*E;t.n42=d*B*q-e*w*q+e*m*x-c*B*x-d*m*E+c*w*E;t.n43=e*j*q-d*h*q-e*b*x+c*h*x+d*b*E-c*j*E;t.n44=d*h*m-e*j*m+e*b*w-c*h*w-d*b*B+c*j*B;t.multiplyScalar(1/a.determinant());return t};
THREE.Matrix4.makeInvert3x3=function(a){var c=a.flatten();a=a.m33;var d=a.m,e=c[10]*c[5]-c[6]*c[9],f=-c[10]*c[1]+c[2]*c[9],b=c[6]*c[1]-c[2]*c[5],j=-c[10]*c[4]+c[6]*c[8],h=c[10]*c[0]-c[2]*c[8],g=-c[6]*c[0]+c[2]*c[4],m=c[9]*c[4]-c[5]*c[8],w=-c[9]*c[0]+c[1]*c[8],B=c[5]*c[0]-c[1]*c[4];c=c[0]*e+c[1]*j+c[2]*m;if(c==0)throw"matrix not invertible";c=1/c;d[0]=c*e;d[1]=c*f;d[2]=c*b;d[3]=c*j;d[4]=c*h;d[5]=c*g;d[6]=c*m;d[7]=c*w;d[8]=c*B;return a};
THREE.Matrix4.makeFrustum=function(a,c,d,e,f,b){var j,h,g;j=new THREE.Matrix4;h=2*f/(c-a);g=2*f/(e-d);a=(c+a)/(c-a);d=(e+d)/(e-d);e=-(b+f)/(b-f);f=-2*b*f/(b-f);j.n11=h;j.n12=0;j.n13=a;j.n14=0;j.n21=0;j.n22=g;j.n23=d;j.n24=0;j.n31=0;j.n32=0;j.n33=e;j.n34=f;j.n41=0;j.n42=0;j.n43=-1;j.n44=0;return j};THREE.Matrix4.makePerspective=function(a,c,d,e){var f;a=d*Math.tan(a*Math.PI/360);f=-a;return THREE.Matrix4.makeFrustum(f*c,a*c,f,a,d,e)};
THREE.Matrix4.makeOrtho=function(a,c,d,e,f,b){var j,h,g,m;j=new THREE.Matrix4;h=c-a;g=d-e;m=b-f;a=(c+a)/h;d=(d+e)/g;f=(b+f)/m;j.n11=2/h;j.n12=0;j.n13=0;j.n14=-a;j.n21=0;j.n22=2/g;j.n23=0;j.n24=-d;j.n31=0;j.n32=0;j.n33=-2/m;j.n34=-f;j.n41=0;j.n42=0;j.n43=0;j.n44=1;return j};THREE.Matrix4.__tmpVec1=new THREE.Vector3;THREE.Matrix4.__tmpVec2=new THREE.Vector3;THREE.Matrix4.__tmpVec3=new THREE.Vector3;
THREE.Vertex=function(a,c){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=c||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,c,d,e,f){this.a=a;this.b=c;this.c=d;this.centroid=new THREE.Vector3;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.materials=f instanceof Array?f:[f]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,c,d,e,f,b){this.a=a;this.b=c;this.c=d;this.d=e;this.centroid=new THREE.Vector3;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.materials=b instanceof Array?b:[b]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,c){this.u=a||0;this.v=c||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.uvs2=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,c,d;a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];d.centroid.set(0,0,0);if(d instanceof THREE.Face3){d.centroid.addSelf(this.vertices[d.a].position);d.centroid.addSelf(this.vertices[d.b].position);d.centroid.addSelf(this.vertices[d.c].position);d.centroid.divideScalar(3)}else if(d instanceof THREE.Face4){d.centroid.addSelf(this.vertices[d.a].position);d.centroid.addSelf(this.vertices[d.b].position);d.centroid.addSelf(this.vertices[d.c].position);
d.centroid.addSelf(this.vertices[d.d].position);d.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var c,d,e,f,b,j,h=new THREE.Vector3,g=new THREE.Vector3;e=0;for(f=this.vertices.length;e<f;e++){b=this.vertices[e];b.normal.set(0,0,0)}e=0;for(f=this.faces.length;e<f;e++){b=this.faces[e];if(a&&b.vertexNormals.length){h.set(0,0,0);c=0;for(d=b.normal.length;c<d;c++)h.addSelf(b.vertexNormals[c]);h.divideScalar(3)}else{c=this.vertices[b.a];d=this.vertices[b.b];j=this.vertices[b.c];h.sub(j.position,
d.position);g.sub(c.position,d.position);h.crossSelf(g)}h.isZero()||h.normalize();b.normal.copy(h)}},computeVertexNormals:function(){var a,c,d,e;if(this.__tmpVertices==undefined){e=this.__tmpVertices=Array(this.vertices.length);a=0;for(c=this.vertices.length;a<c;a++)e[a]=new THREE.Vector3;a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];if(d instanceof THREE.Face3)d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(d instanceof THREE.Face4)d.vertexNormals=[new THREE.Vector3,
new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}}else{e=this.__tmpVertices;a=0;for(c=this.vertices.length;a<c;a++)e[a].set(0,0,0)}a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];if(d instanceof THREE.Face3){e[d.a].addSelf(d.normal);e[d.b].addSelf(d.normal);e[d.c].addSelf(d.normal)}else if(d instanceof THREE.Face4){e[d.a].addSelf(d.normal);e[d.b].addSelf(d.normal);e[d.c].addSelf(d.normal);e[d.d].addSelf(d.normal)}}a=0;for(c=this.vertices.length;a<c;a++)e[a].normalize();a=0;for(c=this.faces.length;a<
c;a++){d=this.faces[a];if(d instanceof THREE.Face3){d.vertexNormals[0].copy(e[d.a]);d.vertexNormals[1].copy(e[d.b]);d.vertexNormals[2].copy(e[d.c])}else if(d instanceof THREE.Face4){d.vertexNormals[0].copy(e[d.a]);d.vertexNormals[1].copy(e[d.b]);d.vertexNormals[2].copy(e[d.c]);d.vertexNormals[3].copy(e[d.d])}}},computeTangents:function(){function a(A,F,T,N,X,W,R){b=A.vertices[F].position;j=A.vertices[T].position;h=A.vertices[N].position;g=f[X];m=f[W];w=f[R];B=j.x-b.x;u=h.x-b.x;q=j.y-b.y;x=h.y-b.y;
E=j.z-b.z;H=h.z-b.z;t=m.u-g.u;I=w.u-g.u;o=m.v-g.v;k=w.v-g.v;p=1/(t*k-I*o);v.set((k*B-o*u)*p,(k*q-o*x)*p,(k*E-o*H)*p);C.set((t*u-I*B)*p,(t*x-I*q)*p,(t*H-I*E)*p);n[F].addSelf(v);n[T].addSelf(v);n[N].addSelf(v);l[F].addSelf(C);l[T].addSelf(C);l[N].addSelf(C)}var c,d,e,f,b,j,h,g,m,w,B,u,q,x,E,H,t,I,o,k,p,n=[],l=[],v=new THREE.Vector3,C=new THREE.Vector3,y=new THREE.Vector3,z=new THREE.Vector3,D=new THREE.Vector3;c=0;for(d=this.vertices.length;c<d;c++){n[c]=new THREE.Vector3;l[c]=new THREE.Vector3}c=0;
for(d=this.faces.length;c<d;c++){e=this.faces[c];f=this.uvs[c];if(e instanceof THREE.Face3){a(this,e.a,e.b,e.c,0,1,2);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);this.vertices[e.c].normal.copy(e.vertexNormals[2])}else if(e instanceof THREE.Face4){a(this,e.a,e.b,e.c,0,1,2);a(this,e.a,e.b,e.d,0,1,3);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);this.vertices[e.c].normal.copy(e.vertexNormals[2]);
this.vertices[e.d].normal.copy(e.vertexNormals[3])}}c=0;for(d=this.vertices.length;c<d;c++){D.copy(this.vertices[c].normal);e=n[c];y.copy(e);y.subSelf(D.multiplyScalar(D.dot(e))).normalize();z.cross(this.vertices[c].normal,e);e=z.dot(l[c]);e=e<0?-1:1;this.vertices[c].tangent.set(y.x,y.y,y.z,e)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],
z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var c=1,d=this.vertices.length;c<d;c++){a=this.vertices[c];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>
this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,c=0,d=this.vertices.length;c<d;c++)a=Math.max(a,this.vertices[c].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(w){var B=[];c=0;for(d=w.length;c<d;c++)w[c]==undefined?B.push("undefined"):B.push(w[c].toString());return B.join("_")}var c,d,e,f,b,j,h,g,m={};e=0;for(f=this.faces.length;e<f;e++){b=this.faces[e];
j=b.materials;h=a(j);if(m[h]==undefined)m[h]={hash:h,counter:0};g=m[h].hash+"_"+m[h].counter;if(this.geometryChunks[g]==undefined)this.geometryChunks[g]={faces:[],materials:j,vertices:0};b=b instanceof THREE.Face3?3:4;if(this.geometryChunks[g].vertices+b>65535){m[h].counter+=1;g=m[h].hash+"_"+m[h].counter;if(this.geometryChunks[g]==undefined)this.geometryChunks[g]={faces:[],materials:j,vertices:0}}this.geometryChunks[g].faces.push(e);this.geometryChunks[g].vertices+=b}},toString:function(){return"THREE.Geometry ( vertices: "+
this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,c,d,e){this.fov=a;this.aspect=c;this.near=d;this.far=e;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.tmpVec=new THREE.Vector3;this.translateX=function(f){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(f);this.tmpVec.crossSelf(this.up);this.position.addSelf(this.tmpVec);this.target.position.addSelf(this.tmpVec)};
this.translateZ=function(f){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(f);this.position.subSelf(this.tmpVec);this.target.position.subSelf(this.tmpVec)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};
THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=c||1};THREE.DirectionalLight.prototype=new THREE.Light;
THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=c||1};THREE.PointLight.prototype=new THREE.Light;THREE.PointLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.tmpMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){var a=this.position,c=this.rotation,d=this.scale,e=this.tmpMatrix;this.matrix.setTranslation(a.x,a.y,a.z);this.rotationMatrix.setRotX(c.x);if(c.y!=0){e.setRotY(c.y);this.rotationMatrix.multiplySelf(e)}if(c.z!=0){e.setRotZ(c.z);this.rotationMatrix.multiplySelf(e)}this.matrix.multiplySelf(this.rotationMatrix);if(d.x!=0||d.y!=0||d.z!=0){e.setScale(d.x,d.y,d.z);this.matrix.multiplySelf(e)}}};THREE.Object3DCounter={value:0};
THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.sortParticles=false};THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;
THREE.Line=function(a,c,d){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.type=d!=undefined?d:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;THREE.Mesh=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};
THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;THREE.BillboardBlending=3;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.light_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==
undefined)this.map=a.map;if(a.light_map!==undefined)this.light_map=a.light_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==
undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>light_map: "+this.light_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.light_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);
if(a.map!==undefined)this.map=a.map;if(a.light_map!==undefined)this.light_map=a.light_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;
if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.light_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=
1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.light_map!==undefined)this.light_map=a.light_map;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;
if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;
if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial"}};
THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.size=this.opacity=1;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.size!==undefined)this.size=a.size;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>size: "+this.size+"<br/>blending: "+this.blending+"<br/>)"}};
THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};
THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};THREE.Texture=function(a,c,d,e,f,b){this.image=a;this.mapping=c!==undefined?c:new THREE.UVMapping;this.wrap_s=d!==undefined?d:THREE.ClampToEdgeWrapping;this.wrap_t=e!==undefined?e:THREE.ClampToEdgeWrapping;this.mag_filter=f!==undefined?f:THREE.LinearFilter;this.min_filter=b!==undefined?b:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;
THREE.RenderTarget=function(a,c,d){this.width=a;this.height=c;d=d||{};this.wrap_s=d.wrap_s!==undefined?d.wrap_s:THREE.ClampToEdgeWrapping;this.wrap_t=d.wrap_t!==undefined?d.wrap_t:THREE.ClampToEdgeWrapping;this.mag_filter=d.mag_filter!==undefined?d.mag_filter:THREE.LinearFilter;this.min_filter=d.min_filter!==undefined?d.min_filter:THREE.LinearMipMapLinearFilter;this.format=d.format!==undefined?d.format:THREE.RGBFormat;this.type=d.type!==undefined?d.type:THREE.UnsignedByteType};
var Uniforms={clone:function(a){var c,d,e,f={};for(c in a){f[c]={};for(d in a[c]){e=a[c][d];f[c][d]=e instanceof THREE.Color||e instanceof THREE.Vector3||e instanceof THREE.Texture?e.clone():e}}return f},merge:function(a){var c,d,e,f={};for(c=0;c<a.length;c++){e=this.clone(a[c]);for(d in e)f[d]=e[d]}return f}};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,c,d){this.color=new THREE.Color(a);this.near=c||1;this.far=d||1E3};THREE.FogExp2=function(a,c){this.color=new THREE.Color(a);this.density=c||2.5E-4};
THREE.Projector=function(){function a(l,v){return v.z-l.z}function c(l,v){var C=0,y=1,z=l.z+l.w,D=v.z+v.w,A=-l.z+l.w,F=-v.z+v.w;if(z>=0&&D>=0&&A>=0&&F>=0)return true;else if(z<0&&D<0||A<0&&F<0)return false;else{if(z<0)C=Math.max(C,z/(z-D));else if(D<0)y=Math.min(y,z/(z-D));if(A<0)C=Math.max(C,A/(A-F));else if(F<0)y=Math.min(y,A/(A-F));if(y<C)return false;else{l.lerpSelf(v,C);v.lerpSelf(l,1-y);return true}}}var d,e,f=[],b,j,h,g=[],m,w,B=[],u,q,x=[],E=new THREE.Vector4,H=new THREE.Vector4,t=new THREE.Matrix4,
I=new THREE.Matrix4,o=[],k=new THREE.Vector4,p=new THREE.Vector4,n;this.projectObjects=function(l,v,C){var y=[],z,D;e=0;t.multiply(v.projectionMatrix,v.matrix);o[0]=new THREE.Vector4(t.n41-t.n11,t.n42-t.n12,t.n43-t.n13,t.n44-t.n14);o[1]=new THREE.Vector4(t.n41+t.n11,t.n42+t.n12,t.n43+t.n13,t.n44+t.n14);o[2]=new THREE.Vector4(t.n41+t.n21,t.n42+t.n22,t.n43+t.n23,t.n44+t.n24);o[3]=new THREE.Vector4(t.n41-t.n21,t.n42-t.n22,t.n43-t.n23,t.n44-t.n24);o[4]=new THREE.Vector4(t.n41-t.n31,t.n42-t.n32,t.n43-
t.n33,t.n44-t.n34);o[5]=new THREE.Vector4(t.n41+t.n31,t.n42+t.n32,t.n43+t.n33,t.n44+t.n34);v=0;for(z=o.length;v<z;v++){D=o[v];D.divideScalar(Math.sqrt(D.x*D.x+D.y*D.y+D.z*D.z))}z=l.objects;l=0;for(v=z.length;l<v;l++){D=z[l];var A;if(!(A=!D.visible)){if(A=D instanceof THREE.Mesh){a:{A=void 0;for(var F=D.position,T=-D.geometry.boundingSphere.radius*Math.max(D.scale.x,Math.max(D.scale.y,D.scale.z)),N=0;N<6;N++){A=o[N].x*F.x+o[N].y*F.y+o[N].z*F.z+o[N].w;if(A<=T){A=false;break a}}A=true}A=!A}A=A}if(!A){d=
f[e]=f[e]||new THREE.RenderableObject;E.copy(D.position);t.multiplyVector3(E);d.object=D;d.z=E.z;y.push(d);e++}}C&&y.sort(a);return y};this.projectScene=function(l,v,C){var y=[],z=v.near,D=v.far,A,F,T,N,X,W,R,Y,ea,Q,P,ca,aa,K,U,V;h=w=q=0;v.autoUpdateMatrix&&v.updateMatrix();t.multiply(v.projectionMatrix,v.matrix);W=this.projectObjects(l,v,true);l=0;for(A=W.length;l<A;l++){R=W[l].object;if(R.visible){R.autoUpdateMatrix&&R.updateMatrix();Y=R.matrix;ea=R.rotationMatrix;Q=R.materials;P=R.overdraw;if(R instanceof
THREE.Mesh){ca=R.geometry;aa=ca.vertices;F=0;for(T=aa.length;F<T;F++){K=aa[F];K.positionWorld.copy(K.position);Y.multiplyVector3(K.positionWorld);N=K.positionScreen;N.copy(K.positionWorld);t.multiplyVector4(N);N.x/=N.w;N.y/=N.w;K.__visible=N.z>z&&N.z<D}ca=ca.faces;F=0;for(T=ca.length;F<T;F++){K=ca[F];if(K instanceof THREE.Face3){N=aa[K.a];X=aa[K.b];U=aa[K.c];if(N.__visible&&X.__visible&&U.__visible)if(R.doubleSided||R.flipSided!=(U.positionScreen.x-N.positionScreen.x)*(X.positionScreen.y-N.positionScreen.y)-
(U.positionScreen.y-N.positionScreen.y)*(X.positionScreen.x-N.positionScreen.x)<0){b=g[h]=g[h]||new THREE.RenderableFace3;b.v1.positionWorld.copy(N.positionWorld);b.v2.positionWorld.copy(X.positionWorld);b.v3.positionWorld.copy(U.positionWorld);b.v1.positionScreen.copy(N.positionScreen);b.v2.positionScreen.copy(X.positionScreen);b.v3.positionScreen.copy(U.positionScreen);b.normalWorld.copy(K.normal);ea.multiplyVector3(b.normalWorld);b.centroidWorld.copy(K.centroid);Y.multiplyVector3(b.centroidWorld);
b.centroidScreen.copy(b.centroidWorld);t.multiplyVector3(b.centroidScreen);U=K.vertexNormals;n=b.vertexNormalsWorld;N=0;for(X=U.length;N<X;N++){V=n[N]=n[N]||new THREE.Vector3;V.copy(U[N]);ea.multiplyVector3(V)}b.z=b.centroidScreen.z;b.meshMaterials=Q;b.faceMaterials=K.materials;b.overdraw=P;if(R.geometry.uvs[F]){b.uvs[0]=R.geometry.uvs[F][0];b.uvs[1]=R.geometry.uvs[F][1];b.uvs[2]=R.geometry.uvs[F][2]}y.push(b);h++}}else if(K instanceof THREE.Face4){N=aa[K.a];X=aa[K.b];U=aa[K.c];V=aa[K.d];if(N.__visible&&
X.__visible&&U.__visible&&V.__visible)if(R.doubleSided||R.flipSided!=((V.positionScreen.x-N.positionScreen.x)*(X.positionScreen.y-N.positionScreen.y)-(V.positionScreen.y-N.positionScreen.y)*(X.positionScreen.x-N.positionScreen.x)<0||(X.positionScreen.x-U.positionScreen.x)*(V.positionScreen.y-U.positionScreen.y)-(X.positionScreen.y-U.positionScreen.y)*(V.positionScreen.x-U.positionScreen.x)<0)){b=g[h]=g[h]||new THREE.RenderableFace3;b.v1.positionWorld.copy(N.positionWorld);b.v2.positionWorld.copy(X.positionWorld);
b.v3.positionWorld.copy(V.positionWorld);b.v1.positionScreen.copy(N.positionScreen);b.v2.positionScreen.copy(X.positionScreen);b.v3.positionScreen.copy(V.positionScreen);b.normalWorld.copy(K.normal);ea.multiplyVector3(b.normalWorld);b.centroidWorld.copy(K.centroid);Y.multiplyVector3(b.centroidWorld);b.centroidScreen.copy(b.centroidWorld);t.multiplyVector3(b.centroidScreen);b.z=b.centroidScreen.z;b.meshMaterials=Q;b.faceMaterials=K.materials;b.overdraw=P;if(R.geometry.uvs[F]){b.uvs[0]=R.geometry.uvs[F][0];
b.uvs[1]=R.geometry.uvs[F][1];b.uvs[2]=R.geometry.uvs[F][3]}y.push(b);h++;j=g[h]=g[h]||new THREE.RenderableFace3;j.v1.positionWorld.copy(X.positionWorld);j.v2.positionWorld.copy(U.positionWorld);j.v3.positionWorld.copy(V.positionWorld);j.v1.positionScreen.copy(X.positionScreen);j.v2.positionScreen.copy(U.positionScreen);j.v3.positionScreen.copy(V.positionScreen);j.normalWorld.copy(b.normalWorld);j.centroidWorld.copy(b.centroidWorld);j.centroidScreen.copy(b.centroidScreen);j.z=j.centroidScreen.z;j.meshMaterials=
Q;j.faceMaterials=K.materials;j.overdraw=P;if(R.geometry.uvs[F]){j.uvs[0]=R.geometry.uvs[F][1];j.uvs[1]=R.geometry.uvs[F][2];j.uvs[2]=R.geometry.uvs[F][3]}y.push(j);h++}}}}else if(R instanceof THREE.Line){I.multiply(t,Y);aa=R.geometry.vertices;K=aa[0];K.positionScreen.copy(K.position);I.multiplyVector4(K.positionScreen);F=1;for(T=aa.length;F<T;F++){N=aa[F];N.positionScreen.copy(N.position);I.multiplyVector4(N.positionScreen);X=aa[F-1];k.copy(N.positionScreen);p.copy(X.positionScreen);if(c(k,p)){k.multiplyScalar(1/
k.w);p.multiplyScalar(1/p.w);m=B[w]=B[w]||new THREE.RenderableLine;m.v1.positionScreen.copy(k);m.v2.positionScreen.copy(p);m.z=Math.max(k.z,p.z);m.materials=R.materials;y.push(m);w++}}}else if(R instanceof THREE.Particle){H.set(R.position.x,R.position.y,R.position.z,1);t.multiplyVector4(H);H.z/=H.w;if(H.z>0&&H.z<1){u=x[q]=x[q]||new THREE.RenderableParticle;u.x=H.x/H.w;u.y=H.y/H.w;u.z=H.z;u.rotation=R.rotation.z;u.scale.x=R.scale.x*Math.abs(u.x-(H.x+v.projectionMatrix.n11)/(H.w+v.projectionMatrix.n14));
u.scale.y=R.scale.y*Math.abs(u.y-(H.y+v.projectionMatrix.n22)/(H.w+v.projectionMatrix.n24));u.materials=R.materials;y.push(u);q++}}}}C&&y.sort(a);return y};this.unprojectVector=function(l,v){var C=THREE.Matrix4.makeInvert(v.matrix);C.multiplySelf(THREE.Matrix4.makeInvert(v.projectionMatrix));C.multiplyVector3(l);return l}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,c=new THREE.Projector,d,e,f,b;this.domElement=document.createElement("div");this.setSize=function(j,h){d=j;e=h;f=d/2;b=e/2};this.render=function(j,h){var g,m,w,B,u,q,x,E;a=c.projectScene(j,h);g=0;for(m=a.length;g<m;g++){u=a[g];if(u instanceof THREE.RenderableParticle){x=u.x*f+f;E=u.y*b+b;w=0;for(B=u.material.length;w<B;w++){q=u.material[w];if(q instanceof THREE.ParticleDOMMaterial){q=q.domElement;q.style.left=x+"px";q.style.top=E+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(ma){if(u!=ma)m.globalAlpha=u=ma}function c(ma){if(q!=ma){switch(ma){case THREE.NormalBlending:m.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:m.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:m.globalCompositeOperation="darker"}q=ma}}var d=null,e=new THREE.Projector,f=document.createElement("canvas"),b,j,h,g,m=f.getContext("2d"),w=new THREE.Color(0),B=0,u=1,q=0,x=null,E=null,H=1,t,I,o,k,p,n,l,v,C,y=new THREE.Color,
z=new THREE.Color,D=new THREE.Color,A=new THREE.Color,F=new THREE.Color,T,N,X,W,R,Y,ea,Q,P,ca=new THREE.Rectangle,aa=new THREE.Rectangle,K=new THREE.Rectangle,U=false,V=new THREE.Color,ga=new THREE.Color,fa=new THREE.Color,G=new THREE.Color,L=Math.PI*2,J=new THREE.Vector3,O,ba,ia,ja,pa,la,ua=16;O=document.createElement("canvas");O.width=O.height=2;ba=O.getContext("2d");ba.fillStyle="rgba(0,0,0,1)";ba.fillRect(0,0,2,2);ia=ba.getImageData(0,0,2,2);ja=ia.data;pa=document.createElement("canvas");pa.width=
pa.height=ua;la=pa.getContext("2d");la.translate(-ua/2,-ua/2);la.scale(ua,ua);ua--;this.domElement=f;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(ma,sa){b=ma;j=sa;h=b/2;g=j/2;f.width=b;f.height=j;ca.set(-h,-g,h,g);u=1;q=0;E=x=null;H=1};this.setClearColor=function(ma,sa){w.setHex(ma);B=sa;aa.set(-h,-g,h,g);m.setTransform(1,0,0,-1,h,g);this.clear()};this.clear=function(){m.setTransform(1,0,0,-1,h,g);if(!aa.isEmpty()){aa.inflate(1);aa.minSelf(ca);if(w.hex==0&&B==0)m.clearRect(aa.getX(),
aa.getY(),aa.getWidth(),aa.getHeight());else{c(THREE.NormalBlending);a(1);m.fillStyle="rgba("+Math.floor(w.r*255)+","+Math.floor(w.g*255)+","+Math.floor(w.b*255)+","+B+")";m.fillRect(aa.getX(),aa.getY(),aa.getWidth(),aa.getHeight())}aa.empty()}};this.render=function(ma,sa){function Ha(M){var da,$,S,Z=M.lights;ga.setRGB(0,0,0);fa.setRGB(0,0,0);G.setRGB(0,0,0);M=0;for(da=Z.length;M<da;M++){$=Z[M];S=$.color;if($ instanceof THREE.AmbientLight){ga.r+=S.r;ga.g+=S.g;ga.b+=S.b}else if($ instanceof THREE.DirectionalLight){fa.r+=
S.r;fa.g+=S.g;fa.b+=S.b}else if($ instanceof THREE.PointLight){G.r+=S.r;G.g+=S.g;G.b+=S.b}}}function Da(M,da,$,S){var Z,ha,na,oa,qa=M.lights;M=0;for(Z=qa.length;M<Z;M++){ha=qa[M];na=ha.color;oa=ha.intensity;if(ha instanceof THREE.DirectionalLight){ha=$.dot(ha.position)*oa;if(ha>0){S.r+=na.r*ha;S.g+=na.g*ha;S.b+=na.b*ha}}else if(ha instanceof THREE.PointLight){J.sub(ha.position,da);J.normalize();ha=$.dot(J)*oa;if(ha>0){S.r+=na.r*ha;S.g+=na.g*ha;S.b+=na.b*ha}}}}function Qa(M,da,$){if($.opacity!=0){a($.opacity);
c($.blending);var S,Z,ha,na,oa,qa;if($ instanceof THREE.ParticleBasicMaterial){if($.map&&$.map.image.loaded){na=$.map.image;oa=na.width>>1;qa=na.height>>1;Z=da.scale.x*h;ha=da.scale.y*g;$=Z*oa;S=ha*qa;K.set(M.x-$,M.y-S,M.x+$,M.y+S);if(ca.instersects(K)){m.save();m.translate(M.x,M.y);m.rotate(-da.rotation);m.scale(Z,-ha);m.translate(-oa,-qa);m.drawImage(na,0,0);m.restore()}}}else if($ instanceof THREE.ParticleCircleMaterial){if(U){V.r=ga.r+fa.r+G.r;V.g=ga.g+fa.g+G.g;V.b=ga.b+fa.b+G.b;y.r=$.color.r*
V.r;y.g=$.color.g*V.g;y.b=$.color.b*V.b;y.updateStyleString()}else y.__styleString=$.color.__styleString;$=da.scale.x*h;S=da.scale.y*g;K.set(M.x-$,M.y-S,M.x+$,M.y+S);if(ca.instersects(K)){Z=y.__styleString;if(E!=Z)m.fillStyle=E=Z;m.save();m.translate(M.x,M.y);m.rotate(-da.rotation);m.scale($,S);m.beginPath();m.arc(0,0,1,0,L,true);m.closePath();m.fill();m.restore()}}}}function Ra(M,da,$,S){if(S.opacity!=0){a(S.opacity);c(S.blending);m.beginPath();m.moveTo(M.positionScreen.x,M.positionScreen.y);m.lineTo(da.positionScreen.x,
da.positionScreen.y);m.closePath();if(S instanceof THREE.LineBasicMaterial){y.__styleString=S.color.__styleString;M=S.linewidth;if(H!=M)m.lineWidth=H=M;M=y.__styleString;if(x!=M)m.strokeStyle=x=M;m.stroke();K.inflate(S.linewidth*2)}}}function Ma(M,da,$,S,Z,ha){if(Z.opacity!=0){a(Z.opacity);c(Z.blending);k=M.positionScreen.x;p=M.positionScreen.y;n=da.positionScreen.x;l=da.positionScreen.y;v=$.positionScreen.x;C=$.positionScreen.y;m.beginPath();m.moveTo(k,p);m.lineTo(n,l);m.lineTo(v,C);m.lineTo(k,p);
m.closePath();if(Z instanceof THREE.MeshBasicMaterial)if(Z.map)Z.map.image.loaded&&Z.map.mapping instanceof THREE.UVMapping&&Aa(k,p,n,l,v,C,Z.map.image,S.uvs[0].u,S.uvs[0].v,S.uvs[1].u,S.uvs[1].v,S.uvs[2].u,S.uvs[2].v);else if(Z.env_map){if(Z.env_map.image.loaded)if(Z.env_map.mapping instanceof THREE.SphericalReflectionMapping){M=sa.matrix;J.copy(S.vertexNormalsWorld[0]);W=(J.x*M.n11+J.y*M.n12+J.z*M.n13)*0.5+0.5;R=-(J.x*M.n21+J.y*M.n22+J.z*M.n23)*0.5+0.5;J.copy(S.vertexNormalsWorld[1]);Y=(J.x*M.n11+
J.y*M.n12+J.z*M.n13)*0.5+0.5;ea=-(J.x*M.n21+J.y*M.n22+J.z*M.n23)*0.5+0.5;J.copy(S.vertexNormalsWorld[2]);Q=(J.x*M.n11+J.y*M.n12+J.z*M.n13)*0.5+0.5;P=-(J.x*M.n21+J.y*M.n22+J.z*M.n23)*0.5+0.5;Aa(k,p,n,l,v,C,Z.env_map.image,W,R,Y,ea,Q,P)}}else Z.wireframe?Ea(Z.color.__styleString,Z.wireframe_linewidth):Fa(Z.color.__styleString);else if(Z instanceof THREE.MeshLambertMaterial){if(Z.map&&!Z.wireframe){Z.map.mapping instanceof THREE.UVMapping&&Aa(k,p,n,l,v,C,Z.map.image,S.uvs[0].u,S.uvs[0].v,S.uvs[1].u,
S.uvs[1].v,S.uvs[2].u,S.uvs[2].v);c(THREE.SubtractiveBlending)}if(U)if(!Z.wireframe&&Z.shading==THREE.SmoothShading&&S.vertexNormalsWorld.length==3){z.r=D.r=A.r=ga.r;z.g=D.g=A.g=ga.g;z.b=D.b=A.b=ga.b;Da(ha,S.v1.positionWorld,S.vertexNormalsWorld[0],z);Da(ha,S.v2.positionWorld,S.vertexNormalsWorld[1],D);Da(ha,S.v3.positionWorld,S.vertexNormalsWorld[2],A);F.r=(D.r+A.r)*0.5;F.g=(D.g+A.g)*0.5;F.b=(D.b+A.b)*0.5;X=Na(z,D,A,F);Aa(k,p,n,l,v,C,X,0,0,1,0,0,1)}else{V.r=ga.r;V.g=ga.g;V.b=ga.b;Da(ha,S.centroidWorld,
S.normalWorld,V);y.r=Z.color.r*V.r;y.g=Z.color.g*V.g;y.b=Z.color.b*V.b;y.updateStyleString();Z.wireframe?Ea(y.__styleString,Z.wireframe_linewidth):Fa(y.__styleString)}else Z.wireframe?Ea(Z.color.__styleString,Z.wireframe_linewidth):Fa(Z.color.__styleString)}else if(Z instanceof THREE.MeshDepthMaterial){T=sa.near;N=sa.far;z.r=z.g=z.b=1-Ia(M.positionScreen.z,T,N);D.r=D.g=D.b=1-Ia(da.positionScreen.z,T,N);A.r=A.g=A.b=1-Ia($.positionScreen.z,T,N);F.r=(D.r+A.r)*0.5;F.g=(D.g+A.g)*0.5;F.b=(D.b+A.b)*0.5;
X=Na(z,D,A,F);Aa(k,p,n,l,v,C,X,0,0,1,0,0,1)}else if(Z instanceof THREE.MeshNormalMaterial){y.r=Ja(S.normalWorld.x);y.g=Ja(S.normalWorld.y);y.b=Ja(S.normalWorld.z);y.updateStyleString();Z.wireframe?Ea(y.__styleString,Z.wireframe_linewidth):Fa(y.__styleString)}}}function Ea(M,da){if(x!=M)m.strokeStyle=x=M;if(H!=da)m.lineWidth=H=da;m.stroke();K.inflate(da*2)}function Fa(M){if(E!=M)m.fillStyle=E=M;m.fill()}function Aa(M,da,$,S,Z,ha,na,oa,qa,va,ra,wa,Ba){var ya,xa;ya=na.width-1;xa=na.height-1;oa*=ya;qa*=
xa;va*=ya;ra*=xa;wa*=ya;Ba*=xa;$-=M;S-=da;Z-=M;ha-=da;va-=oa;ra-=qa;wa-=oa;Ba-=qa;xa=1/(va*Ba-wa*ra);ya=(Ba*$-ra*Z)*xa;ra=(Ba*S-ra*ha)*xa;$=(va*Z-wa*$)*xa;S=(va*ha-wa*S)*xa;M=M-ya*oa-$*qa;da=da-ra*oa-S*qa;m.save();m.transform(ya,ra,$,S,M,da);m.clip();m.drawImage(na,0,0);m.restore()}function Na(M,da,$,S){var Z=~~(M.r*255),ha=~~(M.g*255);M=~~(M.b*255);var na=~~(da.r*255),oa=~~(da.g*255);da=~~(da.b*255);var qa=~~($.r*255),va=~~($.g*255);$=~~($.b*255);var ra=~~(S.r*255),wa=~~(S.g*255);S=~~(S.b*255);ja[0]=
Z<0?0:Z>255?255:Z;ja[1]=ha<0?0:ha>255?255:ha;ja[2]=M<0?0:M>255?255:M;ja[4]=na<0?0:na>255?255:na;ja[5]=oa<0?0:oa>255?255:oa;ja[6]=da<0?0:da>255?255:da;ja[8]=qa<0?0:qa>255?255:qa;ja[9]=va<0?0:va>255?255:va;ja[10]=$<0?0:$>255?255:$;ja[12]=ra<0?0:ra>255?255:ra;ja[13]=wa<0?0:wa>255?255:wa;ja[14]=S<0?0:S>255?255:S;ba.putImageData(ia,0,0);la.drawImage(O,0,0);return pa}function Ia(M,da,$){M=(M-da)/($-da);return M*M*(3-2*M)}function Ja(M){M=(M+1)*0.5;return M<0?0:M>1?1:M}function Ka(M,da){var $=da.x-M.x,S=
da.y-M.y,Z=1/Math.sqrt($*$+S*S);$*=Z;S*=Z;da.x+=$;da.y+=S;M.x-=$;M.y-=S}var Ga,Oa,ka,ta,za,La,Pa,Ca;this.autoClear?this.clear():m.setTransform(1,0,0,-1,h,g);d=e.projectScene(ma,sa,this.sortElements);(U=ma.lights.length>0)&&Ha(ma);Ga=0;for(Oa=d.length;Ga<Oa;Ga++){ka=d[Ga];K.empty();if(ka instanceof THREE.RenderableParticle){t=ka;t.x*=h;t.y*=g;ta=0;for(za=ka.materials.length;ta<za;ta++)Qa(t,ka,ka.materials[ta],ma)}else if(ka instanceof THREE.RenderableLine){t=ka.v1;I=ka.v2;t.positionScreen.x*=h;t.positionScreen.y*=
g;I.positionScreen.x*=h;I.positionScreen.y*=g;K.addPoint(t.positionScreen.x,t.positionScreen.y);K.addPoint(I.positionScreen.x,I.positionScreen.y);if(ca.instersects(K)){ta=0;for(za=ka.materials.length;ta<za;)Ra(t,I,ka,ka.materials[ta++],ma)}}else if(ka instanceof THREE.RenderableFace3){t=ka.v1;I=ka.v2;o=ka.v3;t.positionScreen.x*=h;t.positionScreen.y*=g;I.positionScreen.x*=h;I.positionScreen.y*=g;o.positionScreen.x*=h;o.positionScreen.y*=g;if(ka.overdraw){Ka(t.positionScreen,I.positionScreen);Ka(I.positionScreen,
o.positionScreen);Ka(o.positionScreen,t.positionScreen)}K.add3Points(t.positionScreen.x,t.positionScreen.y,I.positionScreen.x,I.positionScreen.y,o.positionScreen.x,o.positionScreen.y);if(ca.instersects(K)){ta=0;for(za=ka.meshMaterials.length;ta<za;){Ca=ka.meshMaterials[ta++];if(Ca instanceof THREE.MeshFaceMaterial){La=0;for(Pa=ka.faceMaterials.length;La<Pa;)(Ca=ka.faceMaterials[La++])&&Ma(t,I,o,ka,Ca,ma)}else Ma(t,I,o,ka,Ca,ma)}}}aa.addRectangle(K)}m.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(W,R,Y){var ea,Q,P,ca;ea=0;for(Q=W.lights.length;ea<Q;ea++){P=W.lights[ea];if(P instanceof THREE.DirectionalLight){ca=R.normalWorld.dot(P.position)*P.intensity;if(ca>0){Y.r+=P.color.r*ca;Y.g+=P.color.g*ca;Y.b+=P.color.b*ca}}else if(P instanceof THREE.PointLight){C.sub(P.position,R.centroidWorld);C.normalize();ca=R.normalWorld.dot(C)*P.intensity;if(ca>0){Y.r+=P.color.r*ca;Y.g+=P.color.g*ca;Y.b+=P.color.b*ca}}}}function c(W,R,Y,ea,Q,P){A=e(F++);A.setAttribute("d",
"M "+W.positionScreen.x+" "+W.positionScreen.y+" L "+R.positionScreen.x+" "+R.positionScreen.y+" L "+Y.positionScreen.x+","+Y.positionScreen.y+"z");if(Q instanceof THREE.MeshBasicMaterial)o.__styleString=Q.color.__styleString;else if(Q instanceof THREE.MeshLambertMaterial)if(I){k.r=p.r;k.g=p.g;k.b=p.b;a(P,ea,k);o.r=Q.color.r*k.r;o.g=Q.color.g*k.g;o.b=Q.color.b*k.b;o.updateStyleString()}else o.__styleString=Q.color.__styleString;else if(Q instanceof THREE.MeshDepthMaterial){v=1-Q.__2near/(Q.__farPlusNear-
ea.z*Q.__farMinusNear);o.setRGB(v,v,v)}else Q instanceof THREE.MeshNormalMaterial&&o.setRGB(f(ea.normalWorld.x),f(ea.normalWorld.y),f(ea.normalWorld.z));Q.wireframe?A.setAttribute("style","fill: none; stroke: "+o.__styleString+"; stroke-width: "+Q.wireframe_linewidth+"; stroke-opacity: "+Q.opacity+"; stroke-linecap: "+Q.wireframe_linecap+"; stroke-linejoin: "+Q.wireframe_linejoin):A.setAttribute("style","fill: "+o.__styleString+"; fill-opacity: "+Q.opacity);h.appendChild(A)}function d(W,R,Y,ea,Q,
P,ca){A=e(F++);A.setAttribute("d","M "+W.positionScreen.x+" "+W.positionScreen.y+" L "+R.positionScreen.x+" "+R.positionScreen.y+" L "+Y.positionScreen.x+","+Y.positionScreen.y+" L "+ea.positionScreen.x+","+ea.positionScreen.y+"z");if(P instanceof THREE.MeshBasicMaterial)o.__styleString=P.color.__styleString;else if(P instanceof THREE.MeshLambertMaterial)if(I){k.r=p.r;k.g=p.g;k.b=p.b;a(ca,Q,k);o.r=P.color.r*k.r;o.g=P.color.g*k.g;o.b=P.color.b*k.b;o.updateStyleString()}else o.__styleString=P.color.__styleString;
else if(P instanceof THREE.MeshDepthMaterial){v=1-P.__2near/(P.__farPlusNear-Q.z*P.__farMinusNear);o.setRGB(v,v,v)}else P instanceof THREE.MeshNormalMaterial&&o.setRGB(f(Q.normalWorld.x),f(Q.normalWorld.y),f(Q.normalWorld.z));P.wireframe?A.setAttribute("style","fill: none; stroke: "+o.__styleString+"; stroke-width: "+P.wireframe_linewidth+"; stroke-opacity: "+P.opacity+"; stroke-linecap: "+P.wireframe_linecap+"; stroke-linejoin: "+P.wireframe_linejoin):A.setAttribute("style","fill: "+o.__styleString+
"; fill-opacity: "+P.opacity);h.appendChild(A)}function e(W){if(y[W]==null){y[W]=document.createElementNS("http://www.w3.org/2000/svg","path");X==0&&y[W].setAttribute("shape-rendering","crispEdges");return y[W]}return y[W]}function f(W){return W<0?Math.min((1+W)*0.5,0.5):0.5+Math.min(W*0.5,0.5)}var b=null,j=new THREE.Projector,h=document.createElementNS("http://www.w3.org/2000/svg","svg"),g,m,w,B,u,q,x,E,H=new THREE.Rectangle,t=new THREE.Rectangle,I=false,o=new THREE.Color(16777215),k=new THREE.Color(16777215),
p=new THREE.Color(0),n=new THREE.Color(0),l=new THREE.Color(0),v,C=new THREE.Vector3,y=[],z=[],D=[],A,F,T,N,X=1;this.domElement=h;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(W){switch(W){case "high":X=1;break;case "low":X=0}};this.setSize=function(W,R){g=W;m=R;w=g/2;B=m/2;h.setAttribute("viewBox",-w+" "+-B+" "+g+" "+m);h.setAttribute("width",g);h.setAttribute("height",m);H.set(-w,-B,w,B)};this.clear=function(){for(;h.childNodes.length>0;)h.removeChild(h.childNodes[0])};
this.render=function(W,R){var Y,ea,Q,P,ca,aa,K,U;this.autoClear&&this.clear();b=j.projectScene(W,R,this.sortElements);N=T=F=0;if(I=W.lights.length>0){K=W.lights;p.setRGB(0,0,0);n.setRGB(0,0,0);l.setRGB(0,0,0);Y=0;for(ea=K.length;Y<ea;Y++){Q=K[Y];P=Q.color;if(Q instanceof THREE.AmbientLight){p.r+=P.r;p.g+=P.g;p.b+=P.b}else if(Q instanceof THREE.DirectionalLight){n.r+=P.r;n.g+=P.g;n.b+=P.b}else if(Q instanceof THREE.PointLight){l.r+=P.r;l.g+=P.g;l.b+=P.b}}}Y=0;for(ea=b.length;Y<ea;Y++){K=b[Y];t.empty();
if(K instanceof THREE.RenderableParticle){u=K;u.x*=w;u.y*=-B;Q=0;for(P=K.materials.length;Q<P;Q++)if(U=K.materials[Q]){ca=u;aa=K;U=U;var V=T++;if(z[V]==null){z[V]=document.createElementNS("http://www.w3.org/2000/svg","circle");X==0&&z[V].setAttribute("shape-rendering","crispEdges")}A=z[V];A.setAttribute("cx",ca.x);A.setAttribute("cy",ca.y);A.setAttribute("r",aa.scale.x*w);if(U instanceof THREE.ParticleCircleMaterial){if(I){k.r=p.r+n.r+l.r;k.g=p.g+n.g+l.g;k.b=p.b+n.b+l.b;o.r=U.color.r*k.r;o.g=U.color.g*
k.g;o.b=U.color.b*k.b;o.updateStyleString()}else o=U.color;A.setAttribute("style","fill: "+o.__styleString)}h.appendChild(A)}}else if(K instanceof THREE.RenderableLine){u=K.v1;q=K.v2;u.positionScreen.x*=w;u.positionScreen.y*=-B;q.positionScreen.x*=w;q.positionScreen.y*=-B;t.addPoint(u.positionScreen.x,u.positionScreen.y);t.addPoint(q.positionScreen.x,q.positionScreen.y);if(H.instersects(t)){Q=0;for(P=K.materials.length;Q<P;)if(U=K.materials[Q++]){ca=u;aa=q;U=U;V=N++;if(D[V]==null){D[V]=document.createElementNS("http://www.w3.org/2000/svg",
"line");X==0&&D[V].setAttribute("shape-rendering","crispEdges")}A=D[V];A.setAttribute("x1",ca.positionScreen.x);A.setAttribute("y1",ca.positionScreen.y);A.setAttribute("x2",aa.positionScreen.x);A.setAttribute("y2",aa.positionScreen.y);if(U instanceof THREE.LineBasicMaterial){o.__styleString=U.color.__styleString;A.setAttribute("style","fill: none; stroke: "+o.__styleString+"; stroke-width: "+U.linewidth+"; stroke-opacity: "+U.opacity+"; stroke-linecap: "+U.linecap+"; stroke-linejoin: "+U.linejoin);
h.appendChild(A)}}}}else if(K instanceof THREE.RenderableFace3){u=K.v1;q=K.v2;x=K.v3;u.positionScreen.x*=w;u.positionScreen.y*=-B;q.positionScreen.x*=w;q.positionScreen.y*=-B;x.positionScreen.x*=w;x.positionScreen.y*=-B;t.addPoint(u.positionScreen.x,u.positionScreen.y);t.addPoint(q.positionScreen.x,q.positionScreen.y);t.addPoint(x.positionScreen.x,x.positionScreen.y);if(H.instersects(t)){Q=0;for(P=K.meshMaterials.length;Q<P;){U=K.meshMaterials[Q++];if(U instanceof THREE.MeshFaceMaterial){ca=0;for(aa=
K.faceMaterials.length;ca<aa;)(U=K.faceMaterials[ca++])&&c(u,q,x,K,U,W)}else U&&c(u,q,x,K,U,W)}}}else if(K instanceof THREE.RenderableFace4){u=K.v1;q=K.v2;x=K.v3;E=K.v4;u.positionScreen.x*=w;u.positionScreen.y*=-B;q.positionScreen.x*=w;q.positionScreen.y*=-B;x.positionScreen.x*=w;x.positionScreen.y*=-B;E.positionScreen.x*=w;E.positionScreen.y*=-B;t.addPoint(u.positionScreen.x,u.positionScreen.y);t.addPoint(q.positionScreen.x,q.positionScreen.y);t.addPoint(x.positionScreen.x,x.positionScreen.y);t.addPoint(E.positionScreen.x,
E.positionScreen.y);if(H.instersects(t)){Q=0;for(P=K.meshMaterials.length;Q<P;){U=K.meshMaterials[Q++];if(U instanceof THREE.MeshFaceMaterial){ca=0;for(aa=K.faceMaterials.length;ca<aa;)(U=K.faceMaterials[ca++])&&d(u,q,x,E,K,U,W)}else U&&d(u,q,x,E,K,U,W)}}}}}};
THREE.WebGLRenderer=function(a){function c(k,p){k.fragment_shader=p.fragment_shader;k.vertex_shader=p.vertex_shader;k.uniforms=Uniforms.clone(p.uniforms)}function d(k,p){var n;if(k=="fragment")n=b.createShader(b.FRAGMENT_SHADER);else if(k=="vertex")n=b.createShader(b.VERTEX_SHADER);b.shaderSource(n,p);b.compileShader(n);if(!b.getShaderParameter(n,b.COMPILE_STATUS)){alert(b.getShaderInfoLog(n));return null}return n}function e(k){switch(k){case THREE.RepeatWrapping:return b.REPEAT;case THREE.ClampToEdgeWrapping:return b.CLAMP_TO_EDGE;
case THREE.MirroredRepeatWrapping:return b.MIRRORED_REPEAT;case THREE.NearestFilter:return b.NEAREST;case THREE.NearestMipMapNearestFilter:return b.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return b.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return b.LINEAR;case THREE.LinearMipMapNearestFilter:return b.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return b.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return b.BYTE;case THREE.UnsignedByteType:return b.UNSIGNED_BYTE;case THREE.ShortType:return b.SHORT;
case THREE.UnsignedShortType:return b.UNSIGNED_SHORT;case THREE.IntType:return b.INT;case THREE.UnsignedShortType:return b.UNSIGNED_INT;case THREE.FloatType:return b.FLOAT;case THREE.AlphaFormat:return b.ALPHA;case THREE.RGBFormat:return b.RGB;case THREE.RGBAFormat:return b.RGBA;case THREE.LuminanceFormat:return b.LUMINANCE;case THREE.LuminanceAlphaFormat:return b.LUMINANCE_ALPHA}return 0}var f=document.createElement("canvas"),b,j=null,h=null,g=new THREE.Matrix4,m,w=new Float32Array(16),B=new Float32Array(16),
u=new Float32Array(16),q=new Float32Array(9),x=new Float32Array(16),E=new THREE.Matrix4,H=new THREE.Vector4,t=true,I=new THREE.Color(0),o=0;if(a){if(a.antialias!==undefined)t=a.antialias;a.clearColor!==undefined&&I.setHex(a.clearColor);if(a.clearAlpha!==undefined)o=a.clearAlpha}this.domElement=f;this.autoClear=true;(function(k,p,n){try{b=f.getContext("experimental-webgl",{antialias:k})}catch(l){}if(!b){alert("WebGL not supported");throw"cannot create webgl context";}b.clearColor(0,0,0,1);b.clearDepth(1);
b.enable(b.DEPTH_TEST);b.depthFunc(b.LEQUAL);b.frontFace(b.CCW);b.cullFace(b.BACK);b.enable(b.CULL_FACE);b.enable(b.BLEND);b.blendFunc(b.ONE,b.ONE_MINUS_SRC_ALPHA);b.clearColor(p.r,p.g,p.b,n)})(t,I,o);this.context=b;this.lights={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[]}};this.setSize=function(k,p){f.width=k;f.height=p;b.viewport(0,0,f.width,f.height)};this.setClearColor=function(k,p){var n=new THREE.Color(k);b.clearColor(n.r,n.g,n.b,p)};
this.clear=function(){b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT)};this.setupLights=function(k,p){var n,l,v,C=0,y=0,z=0,D,A,F,T=this.lights,N=T.directional.colors,X=T.directional.positions,W=T.point.colors,R=T.point.positions,Y=0,ea=0;n=0;for(l=p.length;n<l;n++){v=p[n];D=v.color;A=v.position;F=v.intensity;if(v instanceof THREE.AmbientLight){C+=D.r;y+=D.g;z+=D.b}else if(v instanceof THREE.DirectionalLight){N[Y*3]=D.r*F;N[Y*3+1]=D.g*F;N[Y*3+2]=D.b*F;X[Y*3]=A.x;X[Y*3+1]=A.y;X[Y*3+2]=A.z;Y+=1}else if(v instanceof
THREE.PointLight){W[ea*3]=D.r*F;W[ea*3+1]=D.g*F;W[ea*3+2]=D.b*F;R[ea*3]=A.x;R[ea*3+1]=A.y;R[ea*3+2]=A.z;ea+=1}}T.point.length=ea;T.directional.length=Y;T.ambient[0]=C;T.ambient[1]=y;T.ambient[2]=z};this.createParticleBuffers=function(k){k.__webGLVertexBuffer=b.createBuffer();k.__webGLParticleBuffer=b.createBuffer()};this.createLineBuffers=function(k){k.__webGLVertexBuffer=b.createBuffer();k.__webGLLineBuffer=b.createBuffer()};this.createMeshBuffers=function(k){k.__webGLVertexBuffer=b.createBuffer();
k.__webGLNormalBuffer=b.createBuffer();k.__webGLTangentBuffer=b.createBuffer();k.__webGLUVBuffer=b.createBuffer();k.__webGLUV2Buffer=b.createBuffer();k.__webGLFaceBuffer=b.createBuffer();k.__webGLLineBuffer=b.createBuffer()};this.initLineBuffers=function(k){var p=k.vertices.length;k.__vertexArray=new Float32Array(p*3);k.__lineArray=new Uint16Array(p);k.__webGLLineCount=p};this.initParticleBuffers=function(k){var p=k.vertices.length;k.__vertexArray=new Float32Array(p*3);k.__particleArray=new Uint16Array(p);
k.__sortArray=[];k.__webGLParticleCount=p};this.initMeshBuffers=function(k,p){var n,l,v=0,C=0,y=0,z=p.geometry.faces,D=k.faces;n=0;for(l=D.length;n<l;n++){fi=D[n];face=z[fi];if(face instanceof THREE.Face3){v+=3;C+=1;y+=3}else if(face instanceof THREE.Face4){v+=4;C+=2;y+=4}}k.__vertexArray=new Float32Array(v*3);k.__normalArray=new Float32Array(v*3);k.__tangentArray=new Float32Array(v*4);k.__uvArray=new Float32Array(v*2);k.__uv2Array=new Float32Array(v*2);k.__faceArray=new Uint16Array(C*3);k.__lineArray=
new Uint16Array(y*2);v=false;n=0;for(l=p.materials.length;n<l;n++){z=p.materials[n];if(z instanceof THREE.MeshFaceMaterial){z=0;for(D=k.materials.length;z<D;z++)if(k.materials[z]&&k.materials[z].shading!=undefined&&k.materials[z].shading==THREE.SmoothShading){v=true;break}}else if(z&&z.shading!=undefined&&z.shading==THREE.SmoothShading){v=true;break}if(v)break}k.__needsSmoothNormals=v;k.__webGLFaceCount=C*3;k.__webGLLineCount=y*2};this.setMeshBuffers=function(k,p,n,l,v,C,y,z){var D,A,F,T,N,X,W,R,
Y,ea,Q=0,P=0,ca=0,aa=0,K=0,U=0,V=0,ga=0,fa=k.__vertexArray,G=k.__uvArray,L=k.__uv2Array,J=k.__normalArray,O=k.__tangentArray,ba=k.__faceArray,ia=k.__lineArray,ja=k.__needsSmoothNormals,pa=p.geometry,la=pa.vertices,ua=k.faces,ma=pa.faces,sa=pa.uvs,Ha=pa.uvs2;p=0;for(D=ua.length;p<D;p++){A=ua[p];F=ma[A];X=sa[A];A=Ha[A];T=F.vertexNormals;N=F.normal;if(F instanceof THREE.Face3){if(l){W=la[F.a].position;R=la[F.b].position;Y=la[F.c].position;fa[P]=W.x;fa[P+1]=W.y;fa[P+2]=W.z;fa[P+3]=R.x;fa[P+4]=R.y;fa[P+
5]=R.z;fa[P+6]=Y.x;fa[P+7]=Y.y;fa[P+8]=Y.z;P+=9}if(z&&pa.hasTangents){W=la[F.a].tangent;R=la[F.b].tangent;Y=la[F.c].tangent;O[V]=W.x;O[V+1]=W.y;O[V+2]=W.z;O[V+3]=W.w;O[V+4]=R.x;O[V+5]=R.y;O[V+6]=R.z;O[V+7]=R.w;O[V+8]=Y.x;O[V+9]=Y.y;O[V+10]=Y.z;O[V+11]=Y.w;V+=12}if(y)if(T.length==3&&ja)for(F=0;F<3;F++){N=T[F];J[U]=N.x;J[U+1]=N.y;J[U+2]=N.z;U+=3}else for(F=0;F<3;F++){J[U]=N.x;J[U+1]=N.y;J[U+2]=N.z;U+=3}if(C&&X)for(F=0;F<3;F++){T=X[F];G[ca]=T.u;G[ca+1]=T.v;ca+=2}if(C&&A)for(F=0;F<3;F++){X=A[F];L[aa]=
X.u;L[aa+1]=X.v;aa+=2}if(v){ba[K]=Q;ba[K+1]=Q+1;ba[K+2]=Q+2;K+=3;ia[ga]=Q;ia[ga+1]=Q+1;ia[ga+2]=Q;ia[ga+3]=Q+2;ia[ga+4]=Q+1;ia[ga+5]=Q+2;ga+=6;Q+=3}}else if(F instanceof THREE.Face4){if(l){W=la[F.a].position;R=la[F.b].position;Y=la[F.c].position;ea=la[F.d].position;fa[P]=W.x;fa[P+1]=W.y;fa[P+2]=W.z;fa[P+3]=R.x;fa[P+4]=R.y;fa[P+5]=R.z;fa[P+6]=Y.x;fa[P+7]=Y.y;fa[P+8]=Y.z;fa[P+9]=ea.x;fa[P+10]=ea.y;fa[P+11]=ea.z;P+=12}if(z&&pa.hasTangents){W=la[F.a].tangent;R=la[F.b].tangent;Y=la[F.c].tangent;F=la[F.d].tangent;
O[V]=W.x;O[V+1]=W.y;O[V+2]=W.z;O[V+3]=W.w;O[V+4]=R.x;O[V+5]=R.y;O[V+6]=R.z;O[V+7]=R.w;O[V+8]=Y.x;O[V+9]=Y.y;O[V+10]=Y.z;O[V+11]=Y.w;O[V+12]=F.x;O[V+13]=F.y;O[V+14]=F.z;O[V+15]=F.w;V+=16}if(y)if(T.length==4&&ja)for(F=0;F<4;F++){N=T[F];J[U]=N.x;J[U+1]=N.y;J[U+2]=N.z;U+=3}else for(F=0;F<4;F++){J[U]=N.x;J[U+1]=N.y;J[U+2]=N.z;U+=3}if(C&&X)for(F=0;F<4;F++){T=X[F];G[ca]=T.u;G[ca+1]=T.v;ca+=2}if(C&&A)for(F=0;F<4;F++){X=A[F];L[aa]=X.u;L[aa+1]=X.v;aa+=2}if(v){ba[K]=Q;ba[K+1]=Q+1;ba[K+2]=Q+2;ba[K+3]=Q;ba[K+
4]=Q+2;ba[K+5]=Q+3;K+=6;ia[ga]=Q;ia[ga+1]=Q+1;ia[ga+2]=Q;ia[ga+3]=Q+3;ia[ga+4]=Q+1;ia[ga+5]=Q+2;ia[ga+6]=Q+2;ia[ga+7]=Q+3;ga+=8;Q+=4}}}if(l){b.bindBuffer(b.ARRAY_BUFFER,k.__webGLVertexBuffer);b.bufferData(b.ARRAY_BUFFER,fa,n)}if(y){b.bindBuffer(b.ARRAY_BUFFER,k.__webGLNormalBuffer);b.bufferData(b.ARRAY_BUFFER,J,n)}if(z&&pa.hasTangents){b.bindBuffer(b.ARRAY_BUFFER,k.__webGLTangentBuffer);b.bufferData(b.ARRAY_BUFFER,O,n)}if(C&&ca>0){b.bindBuffer(b.ARRAY_BUFFER,k.__webGLUVBuffer);b.bufferData(b.ARRAY_BUFFER,
G,n)}if(C&&aa>0){b.bindBuffer(b.ARRAY_BUFFER,k.__webGLUV2Buffer);b.bufferData(b.ARRAY_BUFFER,L,n)}if(v){b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,k.__webGLFaceBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,ba,n);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,k.__webGLLineBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,ia,n)}};this.setLineBuffers=function(k,p,n,l){var v,C,y=k.vertices,z=y.length,D=k.__vertexArray,A=k.__lineArray;if(n)for(n=0;n<z;n++){v=y[n].position;C=n*3;D[C]=v.x;D[C+1]=v.y;D[C+2]=v.z}if(l)for(n=0;n<z;n++)A[n]=
n;b.bindBuffer(b.ARRAY_BUFFER,k.__webGLVertexBuffer);b.bufferData(b.ARRAY_BUFFER,D,p);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,k.__webGLLineBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,A,p)};this.setParticleBuffers=function(k,p,n,l,v,C){var y=k.vertices,z=y.length,D=k.__vertexArray,A=k.__particleArray,F=k.__sortArray;if(v.sortParticles){E.multiply(C.projectionMatrix,C.matrix);E.multiplySelf(v.matrix);for(n=0;n<z;n++){v=y[n].position;H.copy(v);E.multiplyVector3(H);F[n]=[H.z,n]}F.sort(function(T,N){return N[0]-
T[0]});for(n=0;n<z;n++){v=y[F[n][1]].position;C=n*3;D[C]=v.x;D[C+1]=v.y;D[C+2]=v.z}}else if(n)for(n=0;n<z;n++){v=y[n].position;C=n*3;D[C]=v.x;D[C+1]=v.y;D[C+2]=v.z}if(l)for(n=0;n<z;n++)A[n]=n;b.bindBuffer(b.ARRAY_BUFFER,k.__webGLVertexBuffer);b.bufferData(b.ARRAY_BUFFER,D,p);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,k.__webGLParticleBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,A,p)};this.initMaterial=function(k,p,n){if(!k.program){var l,v;if(k instanceof THREE.MeshDepthMaterial)c(k,THREE.ShaderLib.depth);
else if(k instanceof THREE.MeshNormalMaterial)c(k,THREE.ShaderLib.normal);else if(k instanceof THREE.MeshBasicMaterial)c(k,THREE.ShaderLib.basic);else if(k instanceof THREE.MeshLambertMaterial)c(k,THREE.ShaderLib.lambert);else if(k instanceof THREE.MeshPhongMaterial)c(k,THREE.ShaderLib.phong);else if(k instanceof THREE.LineBasicMaterial)c(k,THREE.ShaderLib.basic);else k instanceof THREE.ParticleBasicMaterial&&c(k,THREE.ShaderLib.particle_basic);var C,y,z,D;v=z=D=0;for(C=p.length;v<C;v++){y=p[v];y instanceof
THREE.DirectionalLight&&z++;y instanceof THREE.PointLight&&D++}if(D+z<=4){p=z;D=D}else{p=Math.ceil(4*z/(D+z));D=4-p}v={directional:p,point:D};D=k.fragment_shader;p=k.vertex_shader;C={fog:n,map:k.map,env_map:k.env_map,light_map:k.light_map,maxDirLights:v.directional,maxPointLights:v.point};n=b.createProgram();v=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+C.maxDirLights,"#define MAX_POINT_LIGHTS "+C.maxPointLights,C.fog?"#define USE_FOG":"",C.fog instanceof THREE.FogExp2?
"#define FOG_EXP2":"",C.map?"#define USE_MAP":"",C.env_map?"#define USE_ENVMAP":"",C.light_map?"#define USE_LIGHTMAP":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");C=[b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+C.maxDirLights,"#define MAX_POINT_LIGHTS "+C.maxPointLights,C.map?"#define USE_MAP":"",C.env_map?"#define USE_ENVMAP":"",C.light_map?"#define USE_LIGHTMAP":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n"].join("\n");
b.attachShader(n,d("fragment",v+D));b.attachShader(n,d("vertex",C+p));b.linkProgram(n);b.getProgramParameter(n,b.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+b.getProgramParameter(n,b.VALIDATE_STATUS)+", gl error ["+b.getError()+"]");n.uniforms={};n.attributes={};k.program=n;n=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(l in k.uniforms)n.push(l);l=k.program;D=0;for(p=n.length;D<p;D++){v=n[D];l.uniforms[v]=b.getUniformLocation(l,
v)}k=k.program;l=["position","normal","uv","uv2","tangent"];n=0;for(D=l.length;n<D;n++){p=l[n];k.attributes[p]=b.getAttribLocation(k,p)}}};this.renderBuffer=function(k,p,n,l,v,C){var y;this.initMaterial(l,p,n);y=l.program;if(y!=j){b.useProgram(y);j=y}this.loadCamera(y,k);this.loadMatrices(y);if(l instanceof THREE.MeshPhongMaterial||l instanceof THREE.MeshLambertMaterial){this.setupLights(y,p);p=this.lights;l.uniforms.enableLighting.value=p.directional.length+p.point.length;l.uniforms.ambientLightColor.value=
p.ambient;l.uniforms.directionalLightColor.value=p.directional.colors;l.uniforms.directionalLightDirection.value=p.directional.positions;l.uniforms.pointLightColor.value=p.point.colors;l.uniforms.pointLightPosition.value=p.point.positions}if(l instanceof THREE.MeshBasicMaterial||l instanceof THREE.MeshLambertMaterial||l instanceof THREE.MeshPhongMaterial){l.uniforms.color.value.setRGB(l.color.r*l.opacity,l.color.g*l.opacity,l.color.b*l.opacity);l.uniforms.opacity.value=l.opacity;l.uniforms.map.texture=
l.map;l.uniforms.light_map.texture=l.light_map;l.uniforms.env_map.texture=l.env_map;l.uniforms.reflectivity.value=l.reflectivity;l.uniforms.refraction_ratio.value=l.refraction_ratio;l.uniforms.combine.value=l.combine;l.uniforms.useRefract.value=l.env_map&&l.env_map.mapping instanceof THREE.CubeRefractionMapping;if(n){l.uniforms.fogColor.value.setHex(n.color.hex);if(n instanceof THREE.Fog){l.uniforms.fogNear.value=n.near;l.uniforms.fogFar.value=n.far}else if(n instanceof THREE.FogExp2)l.uniforms.fogDensity.value=
n.density}}if(l instanceof THREE.LineBasicMaterial){l.uniforms.color.value.setRGB(l.color.r*l.opacity,l.color.g*l.opacity,l.color.b*l.opacity);l.uniforms.opacity.value=l.opacity;if(n){l.uniforms.fogColor.value.setHex(n.color.hex);if(n instanceof THREE.Fog){l.uniforms.fogNear.value=n.near;l.uniforms.fogFar.value=n.far}else if(n instanceof THREE.FogExp2)l.uniforms.fogDensity.value=n.density}}if(l instanceof THREE.ParticleBasicMaterial){l.uniforms.color.value.setRGB(l.color.r*l.opacity,l.color.g*l.opacity,
l.color.b*l.opacity);l.uniforms.opacity.value=l.opacity;l.uniforms.size.value=l.size;l.uniforms.map.texture=l.map;if(n){l.uniforms.fogColor.value.setHex(n.color.hex);if(n instanceof THREE.Fog){l.uniforms.fogNear.value=n.near;l.uniforms.fogFar.value=n.far}else if(n instanceof THREE.FogExp2)l.uniforms.fogDensity.value=n.density}}if(l instanceof THREE.MeshPhongMaterial){l.uniforms.ambient.value.setRGB(l.ambient.r,l.ambient.g,l.ambient.b);l.uniforms.specular.value.setRGB(l.specular.r,l.specular.g,l.specular.b);
l.uniforms.shininess.value=l.shininess}if(l instanceof THREE.MeshDepthMaterial){l.uniforms.mNear.value=k.near;l.uniforms.mFar.value=k.far}k=l.uniforms;var z,D,A;for(z in k)if(A=y.uniforms[z]){p=k[z];D=p.type;n=p.value;if(D=="i")b.uniform1i(A,n);else if(D=="f")b.uniform1f(A,n);else if(D=="fv1")b.uniform1fv(A,n);else if(D=="fv")b.uniform3fv(A,n);else if(D=="v2")b.uniform2f(A,n.x,n.y);else if(D=="v3")b.uniform3f(A,n.x,n.y,n.z);else if(D=="c")b.uniform3f(A,n.r,n.g,n.b);else if(D=="t"){b.uniform1i(A,n);
if(p=p.texture)if(p.image instanceof Array&&p.image.length==6){p=p;n=n;if(p.image.length==6){if(!p.image.__webGLTextureCube&&!p.image.__cubeMapInitialized&&p.image.loadCount==6){p.image.__webGLTextureCube=b.createTexture();b.bindTexture(b.TEXTURE_CUBE_MAP,p.image.__webGLTextureCube);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_MAG_FILTER,b.LINEAR);b.texParameteri(b.TEXTURE_CUBE_MAP,
b.TEXTURE_MIN_FILTER,b.LINEAR_MIPMAP_LINEAR);for(D=0;D<6;++D)b.texImage2D(b.TEXTURE_CUBE_MAP_POSITIVE_X+D,0,b.RGBA,b.RGBA,b.UNSIGNED_BYTE,p.image[D]);b.generateMipmap(b.TEXTURE_CUBE_MAP);b.bindTexture(b.TEXTURE_CUBE_MAP,null);p.image.__cubeMapInitialized=true}b.activeTexture(b.TEXTURE0+n);b.bindTexture(b.TEXTURE_CUBE_MAP,p.image.__webGLTextureCube)}}else{p=p;n=n;if(!p.__webGLTexture&&p.image.loaded){p.__webGLTexture=b.createTexture();b.bindTexture(b.TEXTURE_2D,p.__webGLTexture);b.texImage2D(b.TEXTURE_2D,
0,b.RGBA,b.RGBA,b.UNSIGNED_BYTE,p.image);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,e(p.wrap_s));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,e(p.wrap_t));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,e(p.mag_filter));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,e(p.min_filter));b.generateMipmap(b.TEXTURE_2D);b.bindTexture(b.TEXTURE_2D,null)}b.activeTexture(b.TEXTURE0+n);b.bindTexture(b.TEXTURE_2D,p.__webGLTexture)}}}y=y.attributes;b.bindBuffer(b.ARRAY_BUFFER,v.__webGLVertexBuffer);b.vertexAttribPointer(y.position,
3,b.FLOAT,false,0,0);b.enableVertexAttribArray(y.position);if(y.normal>=0){b.bindBuffer(b.ARRAY_BUFFER,v.__webGLNormalBuffer);b.vertexAttribPointer(y.normal,3,b.FLOAT,false,0,0);b.enableVertexAttribArray(y.normal)}if(y.tangent>=0){b.bindBuffer(b.ARRAY_BUFFER,v.__webGLTangentBuffer);b.vertexAttribPointer(y.tangent,4,b.FLOAT,false,0,0);b.enableVertexAttribArray(y.tangent)}if(y.uv>=0)if(v.__webGLUVBuffer){b.bindBuffer(b.ARRAY_BUFFER,v.__webGLUVBuffer);b.vertexAttribPointer(y.uv,2,b.FLOAT,false,0,0);
b.enableVertexAttribArray(y.uv)}else b.disableVertexAttribArray(y.uv);if(y.uv2>=0)if(v.__webGLUV2Buffer){b.bindBuffer(b.ARRAY_BUFFER,v.__webGLUV2Buffer);b.vertexAttribPointer(y.uv2,2,b.FLOAT,false,0,0);b.enableVertexAttribArray(y.uv2)}else b.disableVertexAttribArray(y.uv2);if(l.wireframe||l instanceof THREE.LineBasicMaterial){y=l.wireframe_linewidth!==undefined?l.wireframe_linewidth:l.linewidth!==undefined?l.linewidth:1;l=l instanceof THREE.LineBasicMaterial&&C.type==THREE.LineStrip?b.LINE_STRIP:
b.LINES;b.lineWidth(y);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,v.__webGLLineBuffer);b.drawElements(l,v.__webGLLineCount,b.UNSIGNED_SHORT,0)}else if(l instanceof THREE.ParticleBasicMaterial){b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,v.__webGLParticleBuffer);b.drawElements(b.POINTS,v.__webGLParticleCount,b.UNSIGNED_SHORT,0)}else{b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,v.__webGLFaceBuffer);b.drawElements(b.TRIANGLES,v.__webGLFaceCount,b.UNSIGNED_SHORT,0)}};this.renderPass=function(k,p,n,l,v,C,y){var z,D,A,F,T;A=0;
for(F=l.materials.length;A<F;A++){z=l.materials[A];if(z instanceof THREE.MeshFaceMaterial){z=0;for(D=v.materials.length;z<D;z++)if((T=v.materials[z])&&T.blending==C&&T.opacity<1==y){this.setBlending(T.blending);this.renderBuffer(k,p,n,T,v,l)}}else if((T=z)&&T.blending==C&&T.opacity<1==y){this.setBlending(T.blending);this.renderBuffer(k,p,n,T,v,l)}}};this.render=function(k,p,n,l){var v,C,y,z=k.lights,D=k.fog;p.autoUpdateMatrix&&p.updateMatrix();w.set(p.matrix.flatten());u.set(p.projectionMatrix.flatten());
this.initWebGLObjects(k,p);l=l!==undefined?l:true;if(n&&!n.__webGLFramebuffer){n.__webGLFramebuffer=b.createFramebuffer();n.__webGLRenderbuffer=b.createRenderbuffer();n.__webGLTexture=b.createTexture();b.bindRenderbuffer(b.RENDERBUFFER,n.__webGLRenderbuffer);b.renderbufferStorage(b.RENDERBUFFER,b.DEPTH_COMPONENT16,n.width,n.height);b.bindTexture(b.TEXTURE_2D,n.__webGLTexture);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,e(n.wrap_s));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,e(n.wrap_t));b.texParameteri(b.TEXTURE_2D,
b.TEXTURE_MAG_FILTER,e(n.mag_filter));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,e(n.min_filter));b.texImage2D(b.TEXTURE_2D,0,e(n.format),n.width,n.height,0,e(n.format),e(n.type),null);b.bindFramebuffer(b.FRAMEBUFFER,n.__webGLFramebuffer);b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,n.__webGLTexture,0);b.framebufferRenderbuffer(b.FRAMEBUFFER,b.DEPTH_ATTACHMENT,b.RENDERBUFFER,n.__webGLRenderbuffer);b.bindTexture(b.TEXTURE_2D,null);b.bindRenderbuffer(b.RENDERBUFFER,null);
b.bindFramebuffer(b.FRAMEBUFFER,null)}if(n){v=n.__webGLFramebuffer;y=n.width;C=n.height}else{v=null;y=f.width;C=f.height}if(v!=h){b.bindFramebuffer(b.FRAMEBUFFER,v);b.viewport(0,0,y,C);l&&b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT);h=v}this.autoClear&&this.clear();v=k.__webGLObjects.length;for(l=0;l<v;l++){C=k.__webGLObjects[l];y=C.object;if(y.visible){y.autoUpdateMatrix&&y.updateMatrix();if(y.doubleSided)b.disable(b.CULL_FACE);else{b.enable(b.CULL_FACE);y.flipSided?b.frontFace(b.CW):b.frontFace(b.CCW)}}}for(l=
0;l<v;l++){C=k.__webGLObjects[l];y=C.object;C=C.buffer;if(y.visible){this.setupMatrices(y,p);this.renderPass(p,z,D,y,C,THREE.NormalBlending,false)}}for(l=0;l<v;l++){C=k.__webGLObjects[l];y=C.object;C=C.buffer;if(y.visible){this.setupMatrices(y,p);this.renderPass(p,z,D,y,C,THREE.AdditiveBlending,false);this.renderPass(p,z,D,y,C,THREE.SubtractiveBlending,false);this.renderPass(p,z,D,y,C,THREE.AdditiveBlending,true);this.renderPass(p,z,D,y,C,THREE.SubtractiveBlending,true);this.renderPass(p,z,D,y,C,
THREE.NormalBlending,true);this.renderPass(p,z,D,y,C,THREE.BillboardBlending,false)}}if(n&&n.min_filter!==THREE.NearestFilter&&n.min_filter!==THREE.LinearFilter){b.bindTexture(b.TEXTURE_2D,n.__webGLTexture);b.generateMipmap(b.TEXTURE_2D);b.bindTexture(b.TEXTURE_2D,null)}};this.initWebGLObjects=function(k,p){function n(F,T,N,X){if(F[T]==undefined){k.__webGLObjects.push({buffer:N,object:X});F[T]=1}}var l,v,C,y,z,D,A;if(!k.__webGLObjects){k.__webGLObjects=[];k.__webGLObjectsMap={}}l=0;for(v=k.objects.length;l<
v;l++){C=k.objects[l];z=C.geometry;if(k.__webGLObjectsMap[C.id]==undefined)k.__webGLObjectsMap[C.id]={};A=k.__webGLObjectsMap[C.id];if(C instanceof THREE.Mesh){for(y in z.geometryChunks){D=z.geometryChunks[y];if(!D.__webGLVertexBuffer){this.createMeshBuffers(D);this.initMeshBuffers(D,C);z.__dirtyVertices=true;z.__dirtyElements=true;z.__dirtyUvs=true;z.__dirtyNormals=true;z.__dirtyTangents=true}if(z.__dirtyVertices||z.__dirtyElements||z.__dirtyUvs)this.setMeshBuffers(D,C,b.DYNAMIC_DRAW,z.__dirtyVertices,
z.__dirtyElements,z.__dirtyUvs,z.__dirtyNormals,z.__dirtyTangents);n(A,y,D,C)}z.__dirtyVertices=false;z.__dirtyElements=false;z.__dirtyUvs=false;z.__dirtyNormals=false;z.__dirtyTangents=false}else if(C instanceof THREE.Line){if(!z.__webGLVertexBuffer){this.createLineBuffers(z);this.initLineBuffers(z);z.__dirtyVertices=true;z.__dirtyElements=true}z.__dirtyVertices&&this.setLineBuffers(z,b.DYNAMIC_DRAW,z.__dirtyVertices,z.__dirtyElements);n(A,0,z,C);z.__dirtyVertices=false;z.__dirtyElements=false}else if(C instanceof
THREE.ParticleSystem){if(!z.__webGLVertexBuffer){this.createParticleBuffers(z);this.initParticleBuffers(z);z.__dirtyVertices=true;z.__dirtyElements=true}if(z.__dirtyVertices||C.sortParticles)this.setParticleBuffers(z,b.DYNAMIC_DRAW,z.__dirtyVertices,z.__dirtyElements,C,p);n(A,0,z,C);z.__dirtyVertices=false;z.__dirtyElements=false}}};this.removeObject=function(k,p){var n,l;for(n=k.__webGLObjects.length-1;n>=0;n--){l=k.__webGLObjects[n].object;p==l&&k.__webGLObjects.splice(n,1)}};this.setupMatrices=
function(k,p){g.multiply(p.matrix,k.matrix);B.set(g.flatten());m=THREE.Matrix4.makeInvert3x3(g).transpose();q.set(m.m);x.set(k.matrix.flatten())};this.loadMatrices=function(k){b.uniformMatrix4fv(k.uniforms.viewMatrix,false,w);b.uniformMatrix4fv(k.uniforms.modelViewMatrix,false,B);b.uniformMatrix4fv(k.uniforms.projectionMatrix,false,u);b.uniformMatrix3fv(k.uniforms.normalMatrix,false,q);b.uniformMatrix4fv(k.uniforms.objectMatrix,false,x)};this.loadCamera=function(k,p){b.uniform3f(k.uniforms.cameraPosition,
p.position.x,p.position.y,p.position.z)};this.setBlending=function(k){switch(k){case THREE.AdditiveBlending:b.blendEquation(b.FUNC_ADD);b.blendFunc(b.ONE,b.ONE);break;case THREE.SubtractiveBlending:b.blendFunc(b.DST_COLOR,b.ZERO);break;case THREE.BillboardBlending:b.blendEquation(b.FUNC_ADD);b.blendFunc(b.SRC_ALPHA,b.ONE_MINUS_SRC_ALPHA);break;default:b.blendEquation(b.FUNC_ADD);b.blendFunc(b.ONE,b.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=function(k,p){if(k){!p||p=="ccw"?b.frontFace(b.CCW):b.frontFace(b.CW);
if(k=="back")b.cullFace(b.BACK);else k=="front"?b.cullFace(b.FRONT):b.cullFace(b.FRONT_AND_BACK);b.enable(b.CULL_FACE)}else b.disable(b.CULL_FACE)};this.supportsVertexTextures=function(){return b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\ncubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = mix( gl_FragColor, cubeColor, reflectivity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, gl_PointCoord );\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D light_map;\n#endif",
lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\nlightmapColor = texture2D( light_map, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}",
lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif"};
THREE.UniformsLib={common:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},light_map:{type:"t",value:2,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",
value:1},ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]}},particle:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",
vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsLib.common,fragment_shader:["uniform vec3 color;\nuniform float opacity;",THREE.Snippets.map_pars_fragment,THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 lightmapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",
THREE.Snippets.map_fragment,THREE.Snippets.lightmap_fragment,"gl_FragColor = mColor * mapColor * lightmapColor;",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,THREE.Snippets.envmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},
lambert:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nvarying vec3 vLightWeighting;",THREE.Snippets.map_pars_fragment,THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 lightmapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lightmap_fragment,
"gl_FragColor =  mColor * mapColor * lightmapColor * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,
"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},phong:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",
THREE.Snippets.map_pars_fragment,THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,THREE.Snippets.lights_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 lightmapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lights_fragment,THREE.Snippets.lightmap_fragment,"gl_FragColor =  mapColor * lightmapColor * totalLight * vec4( vLightWeighting, 1.0 );",
THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",
THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},particle_basic:{uniforms:THREE.UniformsLib.particle,fragment_shader:["uniform vec3 color;\nuniform float opacity;",THREE.Snippets.map_particle_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );",THREE.Snippets.map_particle_fragment,"gl_FragColor = mColor * mapColor;",THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:"uniform float size;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\ngl_PointSize = size;\n}"}};
THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
var GeometryUtils={merge:function(a,c){var d=c instanceof THREE.Mesh,e=a.vertices.length,f=d?c.geometry:c,b=a.vertices,j=f.vertices,h=a.faces,g=f.faces,m=a.uvs;f=f.uvs;d&&c.autoUpdateMatrix&&c.updateMatrix();for(var w=0,B=j.length;w<B;w++){var u=new THREE.Vertex(j[w].position.clone());d&&c.matrix.multiplyVector3(u.position);b.push(u)}w=0;for(B=g.length;w<B;w++){j=g[w];var q,x=j.vertexNormals;if(j instanceof THREE.Face3)q=new THREE.Face3(j.a+e,j.b+e,j.c+e);else if(j instanceof THREE.Face4)q=new THREE.Face4(j.a+
e,j.b+e,j.c+e,j.d+e);q.centroid.copy(j.centroid);q.normal.copy(j.normal);d=0;for(b=x.length;d<b;d++){u=x[d];q.vertexNormals.push(u.clone())}q.materials=j.materials.slice();h.push(q)}w=0;for(B=f.length;w<B;w++){e=f[w];h=[];d=0;for(b=e.length;d<b;d++)h.push(new THREE.UV(e[d].u,e[d].v));m.push(h)}}},ImageUtils={loadTexture:function(a,c,d){var e=new Image;e.onload=function(){this.loaded=true;d&&d(this)};e.src=a;return new THREE.Texture(e,c)},loadArray:function(a,c){var d,e,f=[];d=f.loadCount=0;for(e=
a.length;d<e;++d){f[d]=new Image;f[d].loaded=0;f[d].onload=function(){f.loadCount+=1;this.loaded=true;c&&c(this)};f[d].src=a[d]}return f}},SceneUtils={loadScene:function(a,c,d,e){a=new Worker(a);a.postMessage(0);a.onmessage=function(f){function b(){for(w in l.objects)if(!A.objects[w]){E=l.objects[w];if(o=A.geometries[E.geometry]){n=[];for(i=0;i<E.materials.length;i++)n[i]=A.materials[E.materials[i]];H=E.position;r=E.rotation;s=E.scale;object=new THREE.Mesh(o,n);object.position.set(H[0],H[1],H[2]);
object.rotation.set(r[0],r[1],r[2]);object.scale.set(s[0],s[1],s[2]);object.visible=E.visible;A.scene.addObject(object);A.objects[w]=object}}}function j(F){return function(T){A.geometries[F]=T;b();C-=1;h()}}function h(){e({total_models:z,total_textures:D,loaded_models:z-C,loaded_textures:D-y},A);C==0&&y==0&&d(A)}var g,m,w,B,u,q,x,E,H,t,I,o,k,p,n,l,v,C,y,z,D,A;l=f.data;v=new THREE.Loader;y=C=0;A={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{}};
f=function(){y-=1;h()};for(u in l.cameras){t=l.cameras[u];if(t.type=="perspective")k=new THREE.Camera(t.fov,t.aspect,t.near,t.far);else if(t.type=="ortho"){k=new THREE.Camera;k.projectionMatrix=THREE.Matrix4.makeOrtho(t.left,t.right,t.top,t.bottom,t.near,t.far)}H=t.position;t=t.target;k.position.set(H[0],H[1],H[2]);k.target.position.set(t[0],t[1],t[2]);A.cameras[u]=k}for(B in l.lights){u=l.lights[B];if(u.type=="directional"){H=u.direction;light=new THREE.DirectionalLight;light.position.set(H[0],H[1],
H[2]);light.position.normalize()}else if(u.type=="point"){H=u.position;light=new THREE.PointLight;light.position.set(H[0],H[1],H[2])}t=u.color;i=u.intensity||1;light.color.setRGB(t[0]*i,t[1]*i,t[2]*i);A.scene.addLight(light);A.lights[B]=light}for(q in l.fogs){B=l.fogs[q];if(B.type=="linear")p=new THREE.Fog(0,B.near,B.far);else if(B.type=="exp2")p=new THREE.FogExp2(0,B.density);t=B.color;p.color.setRGB(t[0],t[1],t[2]);A.fogs[q]=p}if(A.cameras&&l.defaults.camera)A.currentCamera=A.cameras[l.defaults.camera];
if(A.fogs&&l.defaults.fog)A.scene.fog=A.fogs[l.defaults.fog];t=l.defaults.bgcolor;A.bgColor=new THREE.Color;A.bgColor.setRGB(t[0],t[1],t[2]);A.bgColorAlpha=l.defaults.bgalpha;for(g in l.geometries){q=l.geometries[g];if(q.type=="bin_mesh"||q.type=="ascii_mesh")C+=1}z=C;for(g in l.geometries){q=l.geometries[g];if(q.type=="cube"){o=new Cube(q.width,q.height,q.depth,q.segments_width,q.segments_height,null,q.flipped,q.sides);A.geometries[g]=o}else if(q.type=="plane"){o=new Plane(q.width,q.height,q.segments_width,
q.segments_height);A.geometries[g]=o}else if(q.type=="sphere"){o=new Sphere(q.radius,q.segments_width,q.segments_height);A.geometries[g]=o}else if(q.type=="cylinder"){o=new Cylinder(q.numSegs,q.topRad,q.botRad,q.height,q.topOffset,q.botOffset);A.geometries[g]=o}else if(q.type=="torus"){o=new Torus(q.radius,q.tube,q.segmentsR,q.segmentsT);A.geometries[g]=o}else if(q.type=="icosahedron"){o=new Icosahedron(q.subdivisions);A.geometries[g]=o}else if(q.type=="bin_mesh")v.loadBinary({model:q.url,callback:j(g)});
else q.type=="ascii_mesh"&&v.loadAscii({model:q.url,callback:j(g)})}for(x in l.textures){g=l.textures[x];y+=g.url instanceof Array?g.url.length:1}D=y;for(x in l.textures){g=l.textures[x];if(g.mapping!=undefined&&THREE[g.mapping]!=undefined)g.mapping=new THREE[g.mapping];if(g.url instanceof Array){q=ImageUtils.loadArray(g.url,f);q=new THREE.Texture(q,g.mapping)}else{q=ImageUtils.loadTexture(g.url,g.mapping,f);if(THREE[g.min_filter]!=undefined)q.min_filter=THREE[g.min_filter];if(THREE[g.mag_filter]!=
undefined)q.mag_filter=THREE[g.mag_filter]}A.textures[x]=q}for(m in l.materials){x=l.materials[m];for(I in x.parameters)if(I=="env_map"||I=="map"||I=="light_map")x.parameters[I]=A.textures[x.parameters[I]];else if(I=="shading")x.parameters[I]=x.parameters[I]=="flat"?THREE.FlatShading:THREE.SmoothShading;else if(I=="combine")x.parameters[I]=x.parameters[I]=="MixOperation"?THREE.MixOperation:THREE.MultiplyOperation;x=new THREE[x.type](x.parameters);A.materials[m]=x}b();c(A)}},addMesh:function(a,c,d,
e,f,b,j,h,g,m){c=new THREE.Mesh(c,m);c.scale.x=c.scale.y=c.scale.z=d;c.position.x=e;c.position.y=f;c.position.z=b;c.rotation.x=j;c.rotation.y=h;c.rotation.z=g;a.addObject(c);return c},addPanoramaCubeWebGL:function(a,c,d){var e=ShaderUtils.lib.cube;e.uniforms.tCube.texture=d;d=new THREE.MeshShaderMaterial({fragment_shader:e.fragment_shader,vertex_shader:e.vertex_shader,uniforms:e.uniforms});c=new THREE.Mesh(new Cube(c,c,c,1,1,null,true),d);a.addObject(c);return c},addPanoramaCube:function(a,c,d){var e=
[];e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[0])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[1])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[2])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[3])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[4])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[5])}));c=new THREE.Mesh(new Cube(c,c,c,1,1,e,true),new THREE.MeshFaceMaterial);a.addObject(c);return c},
addPanoramaCubePlanes:function(a,c,d){var e=c/2;c=new Plane(c,c);var f=Math.PI/2,b=Math.PI;SceneUtils.addMesh(a,c,1,0,0,-e,0,0,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[5])}));SceneUtils.addMesh(a,c,1,-e,0,0,0,f,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[0])}));SceneUtils.addMesh(a,c,1,e,0,0,0,-f,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[1])}));SceneUtils.addMesh(a,c,1,0,e,0,f,0,b,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[2])}));SceneUtils.addMesh(a,
c,1,0,-e,0,-f,0,b,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[3])}))}},ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertex_shader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tNormal:{type:"t",value:2,texture:null},tAO:{type:"t",value:3,texture:null},uNormalScale:{type:"f",value:1},tDisplacement:{type:"t",value:4,texture:null},uDisplacementBias:{type:"f",value:-0.5},uDisplacementScale:{type:"f",value:2.5},uPointLightPos:{type:"v3",value:new THREE.Vector3},uPointLightColor:{type:"c",value:new THREE.Color(15658734)},uDirLightPos:{type:"v3",value:new THREE.Vector3},
uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30}},fragment_shader:"uniform vec3 uDirLightPos;\nuniform vec3 uAmbientLightColor;\nuniform vec3 uDirLightColor;\nuniform vec3 uPointLightColor;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform bool enableDiffuse;\nuniform bool enableAO;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tAO;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 diffuseTex = vec3( 1.0, 1.0, 1.0 );\nvec3 aoTex = vec3( 1.0, 1.0, 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse )\ndiffuseTex = texture2D( tDiffuse, vUv ).xyz;\nif( enableAO )\naoTex = texture2D( tAO, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec3 pointVector = normalize( vPointLightVector );\nvec3 pointHalfVector = normalize( vPointLightVector + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, uShininess );\npointDiffuse  += vec4( uDiffuseColor, 1.0 ) * pointDiffuseWeight;\npointSpecular += vec4( uSpecularColor, 1.0 ) * pointSpecularWeight;\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 lDirection = viewMatrix * vec4( uDirLightPos, 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, uShininess );\ndirDiffuse  += vec4( uDiffuseColor, 1.0 ) * dirDiffuseWeight;\ndirSpecular += vec4( uSpecularColor, 1.0 ) * dirSpecularWeight;\nvec4 totalLight = vec4( uAmbientLightColor * uAmbientColor, 1.0 );\ntotalLight += vec4( uDirLightColor, 1.0 ) * ( dirDiffuse + dirSpecular );\ntotalLight += vec4( uPointLightColor, 1.0 ) * ( pointDiffuse + pointSpecular );\ngl_FragColor = vec4( totalLight.xyz * aoTex * diffuseTex, 1.0 );\n}",
vertex_shader:"attribute vec4 tangent;\nuniform vec3 uPointLightPos;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec4 lPosition = viewMatrix * vec4( uPointLightPos, 1.0 );\nvPointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}"},
cube:{uniforms:{tCube:{type:"t",value:1,texture:null}},vertex_shader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( - wPos.x, wPos.yz ) );\n}"},convolution:{uniforms:{tDiffuse:{type:"t",
value:0,texture:null},uImageIncrement:{type:"v2",value:new THREE.Vector2(0.001953125,0)},cKernel:{type:"fv1",value:[]}},vertex_shader:"varying vec2 vUv;\nuniform vec2 uImageIncrement;\nvoid main(void) {\nvUv = uv - ((KERNEL_SIZE - 1.0) / 2.0) * uImageIncrement;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"varying vec2 vUv;\nuniform sampler2D tDiffuse;\nuniform vec2 uImageIncrement;\nuniform float cKernel[KERNEL_SIZE];\nvoid main(void) {\nvec2 imageCoord = vUv;\nvec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\nfor( int i=0; i<KERNEL_SIZE; ++i ) {\nsum += texture2D( tDiffuse, imageCoord ) * cKernel[i];\nimageCoord += uImageIncrement;\n}\ngl_FragColor = sum;\n}"},
film:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},time:{type:"f",value:0}},vertex_shader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"varying vec2 vUv;\nuniform sampler2D tDiffuse;\nuniform float time;\nconst float fNintensity = 0.35;\nconst float fSintensity = 0.35;\nconst float fScount = 4096.0;\nvoid main() {\nvec4 cTextureScreen = texture2D( tDiffuse, vUv );\nfloat x = vUv.x * vUv.y * time *  1000.0;\nx = mod( x, 13.0 ) * mod( x, 123.0 );\nfloat dx = mod( x, 0.01 );\nvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\nvec2 sc = vec2( sin(vUv.y * fScount), cos(vUv.y * fScount) );\ncResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * fSintensity;\ncResult = cTextureScreen.rgb + clamp( fNintensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\ncResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\ngl_FragColor =  vec4( cResult, cTextureScreen.a );\n}"},
screen:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},opacity:{type:"f",value:1}},vertex_shader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"varying vec2 vUv;\nuniform sampler2D tDiffuse;\nuniform float opacity;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\ngl_FragColor = opacity * texel;\n}"},basic:{uniforms:{},vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragment_shader:"void main() {\ngl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\n}"}},buildKernel:function(a){var c,d,e,f,b=2*Math.ceil(a*3)+1;if(b>25)b=25;f=(b-1)*0.5;d=Array(b);for(c=e=0;c<b;++c){d[c]=Math.exp(-((c-f)*(c-f))/(2*a*a));e+=d[c]}for(c=0;c<b;++c)d[c]/=e;return d}},Cube=function(a,c,d,e,f,b,j,h){function g(E,H,t,I,o,k,p,n){var l,v,C=e||1,y=f||1,z=C+1,D=y+1,A=o/2,F=k/2;o=o/C;var T=k/y,N=m.vertices.length;if(E=="x"&&H=="y"||E=="y"&&H=="x")l="z";else if(E=="x"&&H=="z"||E=="z"&&H=="x")l="y";else if(E==
"z"&&H=="y"||E=="y"&&H=="z")l="x";for(v=0;v<D;v++)for(k=0;k<z;k++){var X=new THREE.Vector3;X[E]=(k*o-A)*t;X[H]=(v*T-F)*I;X[l]=p;m.vertices.push(new THREE.Vertex(X))}for(v=0;v<y;v++)for(k=0;k<C;k++){m.faces.push(new THREE.Face4(k+z*v+N,k+z*(v+1)+N,k+1+z*(v+1)+N,k+1+z*v+N,null,n));m.uvs.push([new THREE.UV(k/C,v/y),new THREE.UV(k/C,(v+1)/y),new THREE.UV((k+1)/C,(v+1)/y),new THREE.UV((k+1)/C,v/y)])}}THREE.Geometry.call(this);var m=this,w=a/2,B=c/2,u=d/2;j=j?-1:1;if(b!==undefined)if(b instanceof Array)this.materials=
b;else{this.materials=[];for(var q=0;q<6;q++)this.materials.push([b])}else this.materials=[];this.sides={px:true,nx:true,py:true,ny:true,pz:true,nz:true};if(h!=undefined)for(var x in h)if(this.sides[x]!=undefined)this.sides[x]=h[x];this.sides.px&&g("z","y",1*j,-1,d,c,-w,this.materials[0]);this.sides.nx&&g("z","y",-1*j,-1,d,c,w,this.materials[1]);this.sides.py&&g("x","z",1*j,1,a,d,B,this.materials[2]);this.sides.ny&&g("x","z",1*j,-1,a,d,-B,this.materials[3]);this.sides.pz&&g("x","y",1*j,-1,a,c,u,this.materials[4]);
this.sides.nz&&g("x","y",-1*j,-1,a,c,-u,this.materials[5]);(function(){for(var E=[],H=[],t=0,I=m.vertices.length;t<I;t++){for(var o=m.vertices[t],k=false,p=0,n=E.length;p<n;p++){var l=E[p];if(o.position.x==l.position.x&&o.position.y==l.position.y&&o.position.z==l.position.z){H[t]=p;k=true;break}}if(!k){H[t]=E.length;E.push(new THREE.Vertex(o.position.clone()))}}t=0;for(I=m.faces.length;t<I;t++){o=m.faces[t];o.a=H[o.a];o.b=H[o.b];o.c=H[o.c];o.d=H[o.d]}m.vertices=E})();this.computeCentroids();this.computeFaceNormals();
this.sortFacesByMaterial()};Cube.prototype=new THREE.Geometry;Cube.prototype.constructor=Cube;
var Cylinder=function(a,c,d,e,f){function b(m,w,B){j.vertices.push(new THREE.Vertex(new THREE.Vector3(m,w,B)))}THREE.Geometry.call(this);var j=this,h=Math.PI,g;for(g=0;g<a;g++)b(Math.sin(2*h*g/a)*c,Math.cos(2*h*g/a)*c,0);for(g=0;g<a;g++)b(Math.sin(2*h*g/a)*d,Math.cos(2*h*g/a)*d,e);for(g=0;g<a;g++)j.faces.push(new THREE.Face4(g,g+a,a+(g+1)%a,(g+1)%a));if(d!=0){b(0,0,-f);for(g=a;g<a+a/2;g++)j.faces.push(new THREE.Face4(2*a,(2*g-2*a)%a,(2*g-2*a+1)%a,(2*g-2*a+2)%a))}if(c!=0){b(0,0,e+f);for(g=a+a/2;g<
2*a;g++)j.faces.push(new THREE.Face4((2*g-2*a+2)%a+a,(2*g-2*a+1)%a+a,(2*g-2*a)%a+a,2*a+1))}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cylinder.prototype=new THREE.Geometry;Cylinder.prototype.constructor=Cylinder;
var Plane=function(a,c,d,e){THREE.Geometry.call(this);var f,b=a/2,j=c/2;d=d||1;e=e||1;var h=d+1,g=e+1;a=a/d;var m=c/e;for(f=0;f<g;f++)for(c=0;c<h;c++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(c*a-b,-(f*m-j),0)));for(f=0;f<e;f++)for(c=0;c<d;c++){this.faces.push(new THREE.Face4(c+h*f,c+h*(f+1),c+1+h*(f+1),c+1+h*f));this.uvs.push([new THREE.UV(c/d,f/e),new THREE.UV(c/d,(f+1)/e),new THREE.UV((c+1)/d,(f+1)/e),new THREE.UV((c+1)/d,f/e)])}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};
Plane.prototype=new THREE.Geometry;Plane.prototype.constructor=Plane;
var Sphere=function(a,c,d){THREE.Geometry.call(this);var e,f=Math.PI,b=Math.max(3,c||8),j=Math.max(2,d||6);c=[];for(d=0;d<j+1;d++){e=d/j;var h=a*Math.cos(e*f),g=a*Math.sin(e*f),m=[],w=0;for(e=0;e<b;e++){var B=2*e/b,u=g*Math.sin(B*f);B=g*Math.cos(B*f);(d==0||d==j)&&e>0||(w=this.vertices.push(new THREE.Vertex(new THREE.Vector3(B,h,u)))-1);m.push(w)}c.push(m)}var q,x,E;f=c.length;for(d=0;d<f;d++){b=c[d].length;if(d>0)for(e=0;e<b;e++){m=e==b-1;j=c[d][m?0:e+1];h=c[d][m?b-1:e];g=c[d-1][m?b-1:e];m=c[d-1][m?
0:e+1];u=d/(f-1);q=(d-1)/(f-1);x=(e+1)/b;B=e/b;w=new THREE.UV(1-x,u);u=new THREE.UV(1-B,u);B=new THREE.UV(1-B,q);var H=new THREE.UV(1-x,q);if(d<c.length-1){q=this.vertices[j].position.clone();x=this.vertices[h].position.clone();E=this.vertices[g].position.clone();q.normalize();x.normalize();E.normalize();this.faces.push(new THREE.Face3(j,h,g,[new THREE.Vector3(q.x,q.y,q.z),new THREE.Vector3(x.x,x.y,x.z),new THREE.Vector3(E.x,E.y,E.z)]));this.uvs.push([w,u,B])}if(d>1){q=this.vertices[j].position.clone();
x=this.vertices[g].position.clone();E=this.vertices[m].position.clone();q.normalize();x.normalize();E.normalize();this.faces.push(new THREE.Face3(j,g,m,[new THREE.Vector3(q.x,q.y,q.z),new THREE.Vector3(x.x,x.y,x.z),new THREE.Vector3(E.x,E.y,E.z)]));this.uvs.push([w,B,H])}}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial();this.boundingSphere={radius:a}};Sphere.prototype=new THREE.Geometry;Sphere.prototype.constructor=Sphere;
var Torus=function(a,c,d,e){this.radius=a||100;this.tube=c||40;this.segmentsR=d||8;this.segmentsT=e||6;a=[];THREE.Geometry.call(this);for(c=0;c<=this.segmentsR;++c)for(d=0;d<=this.segmentsT;++d){e=d/this.segmentsT*2*Math.PI;var f=c/this.segmentsR*2*Math.PI;this.vertices.push(new THREE.Vertex(new THREE.Vector3((this.radius+this.tube*Math.cos(f))*Math.cos(e),(this.radius+this.tube*Math.cos(f))*Math.sin(e),this.tube*Math.sin(f))));a.push([d/this.segmentsT,1-c/this.segmentsR])}for(c=1;c<=this.segmentsR;++c)for(d=
1;d<=this.segmentsT;++d){e=(this.segmentsT+1)*c+d;f=(this.segmentsT+1)*c+d-1;var b=(this.segmentsT+1)*(c-1)+d-1,j=(this.segmentsT+1)*(c-1)+d;this.faces.push(new THREE.Face4(e,f,b,j));this.uvs.push([new THREE.UV(a[e][0],a[e][1]),new THREE.UV(a[f][0],a[f][1]),new THREE.UV(a[b][0],a[b][1]),new THREE.UV(a[j][0],a[j][1])])}delete a;this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()};Torus.prototype=new THREE.Geometry;Torus.prototype.constructor=Torus;
var Icosahedron=function(a){function c(B,u,q){var x=Math.sqrt(B*B+u*u+q*q);return f.vertices.push(new THREE.Vertex(new THREE.Vector3(B/x,u/x,q/x)))-1}function d(B,u,q,x){x.faces.push(new THREE.Face3(B,u,q))}function e(B,u){var q=f.vertices[B].position,x=f.vertices[u].position;return c((q.x+x.x)/2,(q.y+x.y)/2,(q.z+x.z)/2)}var f=this,b=new THREE.Geometry,j;this.subdivisions=a||0;THREE.Geometry.call(this);a=(1+Math.sqrt(5))/2;c(-1,a,0);c(1,a,0);c(-1,-a,0);c(1,-a,0);c(0,-1,a);c(0,1,a);c(0,-1,-a);c(0,
1,-a);c(a,0,-1);c(a,0,1);c(-a,0,-1);c(-a,0,1);d(0,11,5,b);d(0,5,1,b);d(0,1,7,b);d(0,7,10,b);d(0,10,11,b);d(1,5,9,b);d(5,11,4,b);d(11,10,2,b);d(10,7,6,b);d(7,1,8,b);d(3,9,4,b);d(3,4,2,b);d(3,2,6,b);d(3,6,8,b);d(3,8,9,b);d(4,9,5,b);d(2,4,11,b);d(6,2,10,b);d(8,6,7,b);d(9,8,1,b);for(a=0;a<this.subdivisions;a++){j=new THREE.Geometry;for(var h in b.faces){var g=e(b.faces[h].a,b.faces[h].b),m=e(b.faces[h].b,b.faces[h].c),w=e(b.faces[h].c,b.faces[h].a);d(b.faces[h].a,g,w,j);d(b.faces[h].b,m,g,j);d(b.faces[h].c,
w,m,j);d(g,m,w,j)}b.faces=j.faces}f.faces=b.faces;delete b;delete j;this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()};Icosahedron.prototype=new THREE.Geometry;Icosahedron.prototype.constructor=Icosahedron;
function LathedObject(a,c,d){THREE.Geometry.call(this);c=c||12;d=d||2*Math.PI;c=d/c;for(var e=[],f=[],b=[],j=[],h=0;h<a.length;h++){this.vertices.push(new THREE.Vertex(a[h]));f[h]=this.vertices.length-1;e[h]=new THREE.Vector3(a[h].x,a[h].y,a[h].z)}for(var g=THREE.Matrix4.rotationZMatrix(c),m=0;m<=d+0.0010;m+=c){for(h=0;h<e.length;h++)if(m<d){e[h]=g.multiplyVector3(e[h].clone());this.vertices.push(new THREE.Vertex(e[h]));b[h]=this.vertices.length-1}else b=j;if(m==0)j=f;for(h=0;h<f.length-1;h++){this.faces.push(new THREE.Face4(b[h],
b[h+1],f[h+1],f[h]));this.uvs.push([new THREE.UV(m/d,h/a.length),new THREE.UV(m/d,(h+1)/a.length),new THREE.UV((m-c)/d,(h+1)/a.length),new THREE.UV((m-c)/d,h/a.length)])}f=b;b=[]}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()}LathedObject.prototype=new THREE.Geometry;LathedObject.prototype.constructor=LathedObject;THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?this.addStatusElement():null};
THREE.Loader.prototype={addStatusElement:function(){var a=document.createElement("div");a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="#b00";a.style.color="#fff";a.style.width="140px";a.style.padding="0.25em 0.25em 0.25em 0.5em";a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var c="Loaded ";c+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1E3).toFixed(2)+" KB";this.statusDomElement.innerHTML=
c},loadAsciiOld:function(a,c){var d=document.createElement("script");d.type="text/javascript";d.onload=c;d.src=a;document.getElementsByTagName("head")[0].appendChild(d)},loadAscii:function(a){var c=a.model,d=a.callback,e=a.texture_path?a.texture_path:THREE.Loader.prototype.extractUrlbase(c);a=(new Date).getTime();c=new Worker(c);c.onmessage=function(f){THREE.Loader.prototype.createModel(f.data,d,e)};c.postMessage(a)},loadBinary:function(a){var c=a.model,d=a.callback,e=a.texture_path?a.texture_path:
THREE.Loader.prototype.extractUrlbase(c),f=a.bin_path?a.bin_path:THREE.Loader.prototype.extractUrlbase(c);a=(new Date).getTime();c=new Worker(c);var b=this.showProgress?THREE.Loader.prototype.updateProgress:null;c.onmessage=function(j){THREE.Loader.prototype.loadAjaxBuffers(j.data.buffers,j.data.materials,d,f,e,b)};c.onerror=function(j){alert("worker.onerror: "+j.message+"\n"+j.data);j.preventDefault()};c.postMessage(a)},loadAjaxBuffers:function(a,c,d,e,f,b){var j=new XMLHttpRequest,h=e+"/"+a,g=0;
j.onreadystatechange=function(){if(j.readyState==4)j.status==200||j.status==0?THREE.Loader.prototype.createBinModel(j.responseText,d,f,c):alert("Couldn't load ["+h+"] ["+j.status+"]");else if(j.readyState==3){if(b){if(g==0)g=j.getResponseHeader("Content-Length");b({total:g,loaded:j.responseText.length})}}else if(j.readyState==2)g=j.getResponseHeader("Content-Length")};j.open("GET",h,true);j.overrideMimeType("text/plain; charset=x-user-defined");j.setRequestHeader("Content-Type","text/plain");j.send(null)},
createBinModel:function(a,c,d,e){var f=function(b){function j(G,L){var J=w(G,L),O=w(G,L+1),ba=w(G,L+2),ia=w(G,L+3),ja=(ia<<1&255|ba>>7)-127;J=(ba&127)<<16|O<<8|J;if(J==0&&ja==-127)return 0;return(1-2*(ia>>7))*(1+J*Math.pow(2,-23))*Math.pow(2,ja)}function h(G,L){var J=w(G,L),O=w(G,L+1),ba=w(G,L+2);return(w(G,L+3)<<24)+(ba<<16)+(O<<8)+J}function g(G,L){var J=w(G,L);return(w(G,L+1)<<8)+J}function m(G,L){var J=w(G,L);return J>127?J-256:J}function w(G,L){return G.charCodeAt(L)&255}function B(G){var L,
J,O;L=h(a,G);J=h(a,G+n);O=h(a,G+l);G=g(a,G+v);THREE.Loader.prototype.f3(t,L,J,O,G)}function u(G){var L,J,O,ba,ia,ja;L=h(a,G);J=h(a,G+n);O=h(a,G+l);ba=g(a,G+v);ia=h(a,G+C);ja=h(a,G+y);G=h(a,G+z);THREE.Loader.prototype.f3n(t,k,L,J,O,ba,ia,ja,G)}function q(G){var L,J,O,ba;L=h(a,G);J=h(a,G+D);O=h(a,G+A);ba=h(a,G+F);G=g(a,G+T);THREE.Loader.prototype.f4(t,L,J,O,ba,G)}function x(G){var L,J,O,ba,ia,ja,pa,la;L=h(a,G);J=h(a,G+D);O=h(a,G+A);ba=h(a,G+F);ia=g(a,G+T);ja=h(a,G+N);pa=h(a,G+X);la=h(a,G+W);G=h(a,G+
R);THREE.Loader.prototype.f4n(t,k,L,J,O,ba,ia,ja,pa,la,G)}function E(G){var L,J;L=h(a,G);J=h(a,G+Y);G=h(a,G+ea);THREE.Loader.prototype.uv3(t.uvs,p[L*2],p[L*2+1],p[J*2],p[J*2+1],p[G*2],p[G*2+1])}function H(G){var L,J,O;L=h(a,G);J=h(a,G+Q);O=h(a,G+P);G=h(a,G+ca);THREE.Loader.prototype.uv4(t.uvs,p[L*2],p[L*2+1],p[J*2],p[J*2+1],p[O*2],p[O*2+1],p[G*2],p[G*2+1])}var t=this,I=0,o,k=[],p=[],n,l,v,C,y,z,D,A,F,T,N,X,W,R,Y,ea,Q,P,ca,aa,K,U,V,ga,fa;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(t,
e,b);o={signature:a.substr(I,8),header_bytes:w(a,I+8),vertex_coordinate_bytes:w(a,I+9),normal_coordinate_bytes:w(a,I+10),uv_coordinate_bytes:w(a,I+11),vertex_index_bytes:w(a,I+12),normal_index_bytes:w(a,I+13),uv_index_bytes:w(a,I+14),material_index_bytes:w(a,I+15),nvertices:h(a,I+16),nnormals:h(a,I+16+4),nuvs:h(a,I+16+8),ntri_flat:h(a,I+16+12),ntri_smooth:h(a,I+16+16),ntri_flat_uv:h(a,I+16+20),ntri_smooth_uv:h(a,I+16+24),nquad_flat:h(a,I+16+28),nquad_smooth:h(a,I+16+32),nquad_flat_uv:h(a,I+16+36),
nquad_smooth_uv:h(a,I+16+40)};I+=o.header_bytes;n=o.vertex_index_bytes;l=o.vertex_index_bytes*2;v=o.vertex_index_bytes*3;C=o.vertex_index_bytes*3+o.material_index_bytes;y=o.vertex_index_bytes*3+o.material_index_bytes+o.normal_index_bytes;z=o.vertex_index_bytes*3+o.material_index_bytes+o.normal_index_bytes*2;D=o.vertex_index_bytes;A=o.vertex_index_bytes*2;F=o.vertex_index_bytes*3;T=o.vertex_index_bytes*4;N=o.vertex_index_bytes*4+o.material_index_bytes;X=o.vertex_index_bytes*4+o.material_index_bytes+
o.normal_index_bytes;W=o.vertex_index_bytes*4+o.material_index_bytes+o.normal_index_bytes*2;R=o.vertex_index_bytes*4+o.material_index_bytes+o.normal_index_bytes*3;Y=o.uv_index_bytes;ea=o.uv_index_bytes*2;Q=o.uv_index_bytes;P=o.uv_index_bytes*2;ca=o.uv_index_bytes*3;b=o.vertex_index_bytes*3+o.material_index_bytes;fa=o.vertex_index_bytes*4+o.material_index_bytes;aa=o.ntri_flat*b;K=o.ntri_smooth*(b+o.normal_index_bytes*3);U=o.ntri_flat_uv*(b+o.uv_index_bytes*3);V=o.ntri_smooth_uv*(b+o.normal_index_bytes*
3+o.uv_index_bytes*3);ga=o.nquad_flat*fa;b=o.nquad_smooth*(fa+o.normal_index_bytes*4);fa=o.nquad_flat_uv*(fa+o.uv_index_bytes*4);I+=function(G){var L,J,O,ba=o.vertex_coordinate_bytes*3,ia=G+o.nvertices*ba;for(G=G;G<ia;G+=ba){L=j(a,G);J=j(a,G+o.vertex_coordinate_bytes);O=j(a,G+o.vertex_coordinate_bytes*2);THREE.Loader.prototype.v(t,L,J,O)}return o.nvertices*ba}(I);I+=function(G){var L,J,O,ba=o.normal_coordinate_bytes*3,ia=G+o.nnormals*ba;for(G=G;G<ia;G+=ba){L=m(a,G);J=m(a,G+o.normal_coordinate_bytes);
O=m(a,G+o.normal_coordinate_bytes*2);k.push(L/127,J/127,O/127)}return o.nnormals*ba}(I);I+=function(G){var L,J,O=o.uv_coordinate_bytes*2,ba=G+o.nuvs*O;for(G=G;G<ba;G+=O){L=j(a,G);J=j(a,G+o.uv_coordinate_bytes);p.push(L,J)}return o.nuvs*O}(I);I=I;aa=I+aa;K=aa+K;U=K+U;V=U+V;ga=V+ga;b=ga+b;fa=b+fa;(function(G){var L,J=o.vertex_index_bytes*3+o.material_index_bytes,O=J+o.uv_index_bytes*3,ba=G+o.ntri_flat_uv*O;for(L=G;L<ba;L+=O){B(L);E(L+J)}return ba-G})(K);(function(G){var L,J=o.vertex_index_bytes*3+o.material_index_bytes+
o.normal_index_bytes*3,O=J+o.uv_index_bytes*3,ba=G+o.ntri_smooth_uv*O;for(L=G;L<ba;L+=O){u(L);E(L+J)}return ba-G})(U);(function(G){var L,J=o.vertex_index_bytes*4+o.material_index_bytes,O=J+o.uv_index_bytes*4,ba=G+o.nquad_flat_uv*O;for(L=G;L<ba;L+=O){q(L);H(L+J)}return ba-G})(b);(function(G){var L,J=o.vertex_index_bytes*4+o.material_index_bytes+o.normal_index_bytes*4,O=J+o.uv_index_bytes*4,ba=G+o.nquad_smooth_uv*O;for(L=G;L<ba;L+=O){x(L);H(L+J)}return ba-G})(fa);(function(G){var L,J=o.vertex_index_bytes*
3+o.material_index_bytes,O=G+o.ntri_flat*J;for(L=G;L<O;L+=J)B(L);return O-G})(I);(function(G){var L,J=o.vertex_index_bytes*3+o.material_index_bytes+o.normal_index_bytes*3,O=G+o.ntri_smooth*J;for(L=G;L<O;L+=J)u(L);return O-G})(aa);(function(G){var L,J=o.vertex_index_bytes*4+o.material_index_bytes,O=G+o.nquad_flat*J;for(L=G;L<O;L+=J)q(L);return O-G})(V);(function(G){var L,J=o.vertex_index_bytes*4+o.material_index_bytes+o.normal_index_bytes*4,O=G+o.nquad_smooth*J;for(L=G;L<O;L+=J)x(L);return O-G})(ga);
this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};f.prototype=new THREE.Geometry;f.prototype.constructor=f;c(new f(d))},createModel:function(a,c,d){var e=function(f){var b=this;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(b,a.materials,f);(function(){var j,h,g,m,w;j=0;for(h=a.vertices.length;j<h;j+=3){g=a.vertices[j];m=a.vertices[j+1];w=a.vertices[j+2];THREE.Loader.prototype.v(b,g,m,w)}})();(function(){function j(x,E){THREE.Loader.prototype.f3(b,x[E],
x[E+1],x[E+2],x[E+3])}function h(x,E){THREE.Loader.prototype.f3n(b,a.normals,x[E],x[E+1],x[E+2],x[E+3],x[E+4],x[E+5],x[E+6])}function g(x,E){THREE.Loader.prototype.f4(b,x[E],x[E+1],x[E+2],x[E+3],x[E+4])}function m(x,E){THREE.Loader.prototype.f4n(b,a.normals,x[E],x[E+1],x[E+2],x[E+3],x[E+4],x[E+5],x[E+6],x[E+7],x[E+8])}function w(x,E){var H,t,I,o,k,p,n,l,v;H=x[E];t=x[E+1];I=x[E+2];o=a.uvs[H*2];n=a.uvs[H*2+1];k=a.uvs[t*2];l=a.uvs[t*2+1];p=a.uvs[I*2];v=a.uvs[I*2+1];THREE.Loader.prototype.uv3(b.uvs,o,
n,k,l,p,v);if(a.uvs2){o=a.uvs2[H*2];n=a.uvs2[H*2+1];k=a.uvs2[t*2];l=a.uvs2[t*2+1];p=a.uvs2[I*2];v=a.uvs2[I*2+1];THREE.Loader.prototype.uv3(b.uvs2,o,1-n,k,1-l,p,1-v)}}function B(x,E){var H,t,I,o,k,p,n,l,v,C,y,z;H=x[E];t=x[E+1];I=x[E+2];o=x[E+3];k=a.uvs[H*2];v=a.uvs[H*2+1];p=a.uvs[t*2];C=a.uvs[t*2+1];n=a.uvs[I*2];y=a.uvs[I*2+1];l=a.uvs[o*2];z=a.uvs[o*2+1];THREE.Loader.prototype.uv4(b.uvs,k,v,p,C,n,y,l,z);if(a.uvs2){k=a.uvs2[H*2];v=a.uvs2[H*2+1];p=a.uvs2[t*2];C=a.uvs2[t*2+1];n=a.uvs2[I*2];y=a.uvs2[I*
2+1];l=a.uvs2[o*2];z=a.uvs2[o*2+1];THREE.Loader.prototype.uv4(b.uvs2,k,1-v,p,1-C,n,1-y,l,1-z)}}var u,q;u=0;for(q=a.triangles_uv.length;u<q;u+=7){j(a.triangles_uv,u);w(a.triangles_uv,u+4)}u=0;for(q=a.triangles_n_uv.length;u<q;u+=10){h(a.triangles_n_uv,u);w(a.triangles_n_uv,u+7)}u=0;for(q=a.quads_uv.length;u<q;u+=9){g(a.quads_uv,u);B(a.quads_uv,u+5)}u=0;for(q=a.quads_n_uv.length;u<q;u+=13){m(a.quads_n_uv,u);B(a.quads_n_uv,u+9)}u=0;for(q=a.triangles.length;u<q;u+=4)j(a.triangles,u);u=0;for(q=a.triangles_n.length;u<
q;u+=7)h(a.triangles_n,u);u=0;for(q=a.quads.length;u<q;u+=5)g(a.quads,u);u=0;for(q=a.quads_n.length;u<q;u+=9)m(a.quads_n,u)})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};e.prototype=new THREE.Geometry;e.prototype.constructor=e;c(new e(d))},v:function(a,c,d,e){a.vertices.push(new THREE.Vertex(new THREE.Vector3(c,d,e)))},f3:function(a,c,d,e,f){a.faces.push(new THREE.Face3(c,d,e,null,a.materials[f]))},f4:function(a,c,d,e,f,b){a.faces.push(new THREE.Face4(c,d,e,f,null,
a.materials[b]))},f3n:function(a,c,d,e,f,b,j,h,g){b=a.materials[b];var m=c[h*3],w=c[h*3+1];h=c[h*3+2];var B=c[g*3],u=c[g*3+1];g=c[g*3+2];a.faces.push(new THREE.Face3(d,e,f,[new THREE.Vector3(c[j*3],c[j*3+1],c[j*3+2]),new THREE.Vector3(m,w,h),new THREE.Vector3(B,u,g)],b))},f4n:function(a,c,d,e,f,b,j,h,g,m,w){j=a.materials[j];var B=c[g*3],u=c[g*3+1];g=c[g*3+2];var q=c[m*3],x=c[m*3+1];m=c[m*3+2];var E=c[w*3],H=c[w*3+1];w=c[w*3+2];a.faces.push(new THREE.Face4(d,e,f,b,[new THREE.Vector3(c[h*3],c[h*3+1],
c[h*3+2]),new THREE.Vector3(B,u,g),new THREE.Vector3(q,x,m),new THREE.Vector3(E,H,w)],j))},uv3:function(a,c,d,e,f,b,j){var h=[];h.push(new THREE.UV(c,d));h.push(new THREE.UV(e,f));h.push(new THREE.UV(b,j));a.push(h)},uv4:function(a,c,d,e,f,b,j,h,g){var m=[];m.push(new THREE.UV(c,d));m.push(new THREE.UV(e,f));m.push(new THREE.UV(b,j));m.push(new THREE.UV(h,g));a.push(m)},init_materials:function(a,c,d){a.materials=[];for(var e=0;e<c.length;++e)a.materials[e]=[THREE.Loader.prototype.createMaterial(c[e],
d)]},createMaterial:function(a,c){function d(j){j=Math.log(j)/Math.LN2;return Math.floor(j)==j}function e(j,h){var g=new Image;g.onload=function(){if(!d(this.width)||!d(this.height)){var m=Math.pow(2,Math.round(Math.log(this.width)/Math.LN2)),w=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));j.image.width=m;j.image.height=w;j.image.getContext("2d").drawImage(this,0,0,m,w)}else j.image=this;j.image.loaded=1};g.src=h}var f,b;if(a.map_diffuse&&c){b=document.createElement("canvas");f=new THREE.MeshLambertMaterial({map:new THREE.Texture(b)});
e(f.map,c+"/"+a.map_diffuse)}else if(a.col_diffuse){f=(a.col_diffuse[0]*255<<16)+(a.col_diffuse[1]*255<<8)+a.col_diffuse[2]*255;f=new THREE.MeshLambertMaterial({color:f,opacity:a.transparency})}else f=a.a_dbg_color?new THREE.MeshLambertMaterial({color:a.a_dbg_color}):new THREE.MeshLambertMaterial({color:15658734});if(a.map_lightmap&&c){b=document.createElement("canvas");f.light_map=new THREE.Texture(b);e(f.light_map,c+"/"+a.map_lightmap)}return f},extractUrlbase:function(a){a=a.split("/");a.pop();
return a.join("/")}};
