// ThreeExtras.js r31 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,b,e){this.r=a;this.g=b;this.b=e;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+
","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,b,e){this.x=a||0;this.y=b||0;this.z=e||0};
THREE.Vector3.prototype={set:function(a,b,e){this.x=a;this.y=b;this.z=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,e=this.y,d=this.z;this.x=e*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-e*a.x;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=
a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var b=this.x-a.x,e=this.y-a.y;a=this.z-a.z;return Math.sqrt(b*b+e*e+a*a)},distanceToSquared:function(a){var b=this.x-a.x,e=this.y-a.y;a=this.z-a.z;return b*b+e*e+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=
Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,b,e,d){this.x=a||0;this.y=b||0;this.z=e||0;this.w=d||1};
THREE.Vector4.prototype={set:function(a,b,e,d){this.x=a;this.y=b;this.z=e;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,b){this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var b,e,d=a.objects,f=[];a=0;for(b=d.length;a<b;a++){e=d[a];if(e instanceof THREE.Mesh)f=f.concat(this.intersectObject(e))}f.sort(function(g,k){return g.distance-k.distance});return f},intersectObject:function(a){function b(M,v,D,o){o=o.clone().subSelf(v);D=D.clone().subSelf(v);var H=M.clone().subSelf(v);M=o.dot(o);v=o.dot(D);o=o.dot(H);var N=D.dot(D);D=D.dot(H);H=1/(M*N-v*v);N=(N*o-v*D)*H;M=(M*D-v*o)*H;return N>0&&M>0&&N+M<1}var e,d,f,g,k,j,i,n,x,c,
u,y=a.geometry,z=y.vertices,A=[];e=0;for(d=y.faces.length;e<d;e++){f=y.faces[e];c=this.origin.clone();u=this.direction.clone();g=a.matrix.multiplyVector3(z[f.a].position.clone());k=a.matrix.multiplyVector3(z[f.b].position.clone());j=a.matrix.multiplyVector3(z[f.c].position.clone());i=f instanceof THREE.Face4?a.matrix.multiplyVector3(z[f.d].position.clone()):null;n=a.rotationMatrix.multiplyVector3(f.normal.clone());x=u.dot(n);if(x<0){n=n.dot((new THREE.Vector3).sub(g,c))/x;c=c.addSelf(u.multiplyScalar(n));
if(f instanceof THREE.Face3){if(b(c,g,k,j)){f={distance:this.origin.distanceTo(c),point:c,face:f,object:a};A.push(f)}}else if(f instanceof THREE.Face4)if(b(c,g,k,i)||b(c,k,j,i)){f={distance:this.origin.distanceTo(c),point:c,face:f,object:a};A.push(f)}}}return A}};
THREE.Rectangle=function(){function a(){g=d-b;k=f-e}var b,e,d,f,g,k,j=true;this.getX=function(){return b};this.getY=function(){return e};this.getWidth=function(){return g};this.getHeight=function(){return k};this.getLeft=function(){return b};this.getTop=function(){return e};this.getRight=function(){return d};this.getBottom=function(){return f};this.set=function(i,n,x,c){j=false;b=i;e=n;d=x;f=c;a()};this.addPoint=function(i,n){if(j){j=false;b=i;e=n;d=i;f=n}else{b=b<i?b:i;e=e<n?e:n;d=d>i?d:i;f=f>n?
f:n}a()};this.add3Points=function(i,n,x,c,u,y){if(j){j=false;b=i<x?i<u?i:u:x<u?x:u;e=n<c?n<y?n:y:c<y?c:y;d=i>x?i>u?i:u:x>u?x:u;f=n>c?n>y?n:y:c>y?c:y}else{b=i<x?i<u?i<b?i:b:u<b?u:b:x<u?x<b?x:b:u<b?u:b;e=n<c?n<y?n<e?n:e:y<e?y:e:c<y?c<e?c:e:y<e?y:e;d=i>x?i>u?i>d?i:d:u>d?u:d:x>u?x>d?x:d:u>d?u:d;f=n>c?n>y?n>f?n:f:y>f?y:f:c>y?c>f?c:f:y>f?y:f}a()};this.addRectangle=function(i){if(j){j=false;b=i.getLeft();e=i.getTop();d=i.getRight();f=i.getBottom()}else{b=b<i.getLeft()?b:i.getLeft();e=e<i.getTop()?e:i.getTop();
d=d>i.getRight()?d:i.getRight();f=f>i.getBottom()?f:i.getBottom()}a()};this.inflate=function(i){b-=i;e-=i;d+=i;f+=i;a()};this.minSelf=function(i){b=b>i.getLeft()?b:i.getLeft();e=e>i.getTop()?e:i.getTop();d=d<i.getRight()?d:i.getRight();f=f<i.getBottom()?f:i.getBottom();a()};this.instersects=function(i){return Math.min(d,i.getRight())-Math.max(b,i.getLeft())>=0&&Math.min(f,i.getBottom())-Math.max(e,i.getTop())>=0};this.empty=function(){j=true;f=d=e=b=0;a()};this.isEmpty=function(){return j};this.toString=
function(){return"THREE.Rectangle ( left: "+b+", right: "+d+", top: "+e+", bottom: "+f+", width: "+g+", height: "+k+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a;a=this.m[1];this.m[1]=this.m[3];this.m[3]=a;a=this.m[2];this.m[2]=this.m[6];this.m[6]=a;a=this.m[5];this.m[5]=this.m[7];this.m[7]=a;return this}};
THREE.Matrix4=function(a,b,e,d,f,g,k,j,i,n,x,c,u,y,z,A){this.n11=a||1;this.n12=b||0;this.n13=e||0;this.n14=d||0;this.n21=f||0;this.n22=g||1;this.n23=k||0;this.n24=j||0;this.n31=i||0;this.n32=n||0;this.n33=x||1;this.n34=c||0;this.n41=u||0;this.n42=y||0;this.n43=z||0;this.n44=A||1};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,b,e,d,f,g,k,j,i,n,x,c,u,y,z,A){this.n11=a;this.n12=b;this.n13=e;this.n14=d;this.n21=f;this.n22=g;this.n23=k;this.n24=j;this.n31=i;this.n32=n;this.n33=x;this.n34=c;this.n41=u;this.n42=y;this.n43=z;this.n44=A;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,b,e){var d=new THREE.Vector3,f=new THREE.Vector3,g=new THREE.Vector3;g.sub(a,b).normalize();d.cross(e,g).normalize();f.cross(g,d).normalize();this.n11=d.x;this.n12=d.y;this.n13=d.z;this.n14=-d.dot(a);this.n21=f.x;this.n22=f.y;this.n23=f.z;this.n24=-f.dot(a);this.n31=g.x;
this.n32=g.y;this.n33=g.z;this.n34=-g.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var b=a.x,e=a.y,d=a.z,f=1/(this.n41*b+this.n42*e+this.n43*d+this.n44);a.x=(this.n11*b+this.n12*e+this.n13*d+this.n14)*f;a.y=(this.n21*b+this.n22*e+this.n23*d+this.n24)*f;a.z=(this.n31*b+this.n32*e+this.n33*d+this.n34)*f;return a},multiplyVector4:function(a){var b=a.x,e=a.y,d=a.z,f=a.w;a.x=this.n11*b+this.n12*e+this.n13*d+this.n14*f;a.y=this.n21*b+this.n22*e+this.n23*d+this.n24*
f;a.z=this.n31*b+this.n32*e+this.n33*d+this.n34*f;a.w=this.n41*b+this.n42*e+this.n43*d+this.n44*f;return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},multiply:function(a,b){var e=a.n11,d=a.n12,f=a.n13,g=a.n14,k=a.n21,j=a.n22,i=a.n23,n=a.n24,x=a.n31,c=a.n32,
u=a.n33,y=a.n34,z=a.n41,A=a.n42,M=a.n43,v=a.n44,D=b.n11,o=b.n12,H=b.n13,N=b.n14,X=b.n21,Q=b.n22,I=b.n23,h=b.n24,m=b.n31,t=b.n32,l=b.n33,q=b.n34,p=b.n41,E=b.n42,B=b.n43,O=b.n44;this.n11=e*D+d*X+f*m+g*p;this.n12=e*o+d*Q+f*t+g*E;this.n13=e*H+d*I+f*l+g*B;this.n14=e*N+d*h+f*q+g*O;this.n21=k*D+j*X+i*m+n*p;this.n22=k*o+j*Q+i*t+n*E;this.n23=k*H+j*I+i*l+n*B;this.n24=k*N+j*h+i*q+n*O;this.n31=x*D+c*X+u*m+y*p;this.n32=x*o+c*Q+u*t+y*E;this.n33=x*H+c*I+u*l+y*B;this.n34=x*N+c*h+u*q+y*O;this.n41=z*D+A*X+M*m+v*p;
this.n42=z*o+A*Q+M*t+v*E;this.n43=z*H+A*I+M*l+v*B;this.n44=z*N+A*h+M*q+v*O;return this},multiplySelf:function(a){var b=this.n11,e=this.n12,d=this.n13,f=this.n14,g=this.n21,k=this.n22,j=this.n23,i=this.n24,n=this.n31,x=this.n32,c=this.n33,u=this.n34,y=this.n41,z=this.n42,A=this.n43,M=this.n44,v=a.n11,D=a.n21,o=a.n31,H=a.n41,N=a.n12,X=a.n22,Q=a.n32,I=a.n42,h=a.n13,m=a.n23,t=a.n33,l=a.n43,q=a.n14,p=a.n24,E=a.n34;a=a.n44;this.n11=b*v+e*D+d*o+f*H;this.n12=b*N+e*X+d*Q+f*I;this.n13=b*h+e*m+d*t+f*l;this.n14=
b*q+e*p+d*E+f*a;this.n21=g*v+k*D+j*o+i*H;this.n22=g*N+k*X+j*Q+i*I;this.n23=g*h+k*m+j*t+i*l;this.n24=g*q+k*p+j*E+i*a;this.n31=n*v+x*D+c*o+u*H;this.n32=n*N+x*X+c*Q+u*I;this.n33=n*h+x*m+c*t+u*l;this.n34=n*q+x*p+c*E+u*a;this.n41=y*v+z*D+A*o+M*H;this.n42=y*N+z*X+A*Q+M*I;this.n43=y*h+z*m+A*t+M*l;this.n44=y*q+z*p+A*E+M*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=
a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){return this.n14*this.n23*this.n32*this.n41-this.n13*this.n24*this.n32*this.n41-this.n14*this.n22*this.n33*this.n41+this.n12*this.n24*this.n33*this.n41+this.n13*this.n22*this.n34*this.n41-this.n12*this.n23*this.n34*this.n41-this.n14*this.n23*this.n31*this.n42+this.n13*this.n24*this.n31*this.n42+this.n14*this.n21*this.n33*this.n42-this.n11*this.n24*this.n33*this.n42-this.n13*this.n21*this.n34*this.n42+this.n11*this.n23*this.n34*
this.n42+this.n14*this.n22*this.n31*this.n43-this.n12*this.n24*this.n31*this.n43-this.n14*this.n21*this.n32*this.n43+this.n11*this.n24*this.n32*this.n43+this.n12*this.n21*this.n34*this.n43-this.n11*this.n22*this.n34*this.n43-this.n13*this.n22*this.n31*this.n44+this.n12*this.n23*this.n31*this.n44+this.n13*this.n21*this.n32*this.n44-this.n11*this.n23*this.n32*this.n44-this.n12*this.n21*this.n33*this.n44+this.n11*this.n22*this.n33*this.n44},transpose:function(){function a(b,e,d){var f=b[e];b[e]=b[d];
b[d]=f}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){return[this.n11,this.n21,this.n31,this.n41,this.n12,
this.n22,this.n32,this.n42,this.n13,this.n23,this.n33,this.n43,this.n14,this.n24,this.n34,this.n44]},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,b,e){var d=new THREE.Matrix4;d.n14=a;d.n24=b;d.n34=e;return d};
THREE.Matrix4.scaleMatrix=function(a,b,e){var d=new THREE.Matrix4;d.n11=a;d.n22=b;d.n33=e;return d};THREE.Matrix4.rotationXMatrix=function(a){var b=new THREE.Matrix4;b.n22=b.n33=Math.cos(a);b.n32=Math.sin(a);b.n23=-b.n32;return b};THREE.Matrix4.rotationYMatrix=function(a){var b=new THREE.Matrix4;b.n11=b.n33=Math.cos(a);b.n13=Math.sin(a);b.n31=-b.n13;return b};THREE.Matrix4.rotationZMatrix=function(a){var b=new THREE.Matrix4;b.n11=b.n22=Math.cos(a);b.n21=Math.sin(a);b.n12=-b.n21;return b};
THREE.Matrix4.rotationAxisAngleMatrix=function(a,b){var e=new THREE.Matrix4,d=Math.cos(b),f=Math.sin(b),g=1-d,k=a.x,j=a.y,i=a.z;e.n11=g*k*k+d;e.n12=g*k*j-f*i;e.n13=g*k*i+f*j;e.n21=g*k*j+f*i;e.n22=g*j*j+d;e.n23=g*j*i-f*k;e.n31=g*k*i-f*j;e.n32=g*j*i+f*k;e.n33=g*i*i+d;return e};
THREE.Matrix4.makeInvert=function(a){var b=new THREE.Matrix4;b.n11=a.n23*a.n34*a.n42-a.n24*a.n33*a.n42+a.n24*a.n32*a.n43-a.n22*a.n34*a.n43-a.n23*a.n32*a.n44+a.n22*a.n33*a.n44;b.n12=a.n14*a.n33*a.n42-a.n13*a.n34*a.n42-a.n14*a.n32*a.n43+a.n12*a.n34*a.n43+a.n13*a.n32*a.n44-a.n12*a.n33*a.n44;b.n13=a.n13*a.n24*a.n42-a.n14*a.n23*a.n42+a.n14*a.n22*a.n43-a.n12*a.n24*a.n43-a.n13*a.n22*a.n44+a.n12*a.n23*a.n44;b.n14=a.n14*a.n23*a.n32-a.n13*a.n24*a.n32-a.n14*a.n22*a.n33+a.n12*a.n24*a.n33+a.n13*a.n22*a.n34-a.n12*
a.n23*a.n34;b.n21=a.n24*a.n33*a.n41-a.n23*a.n34*a.n41-a.n24*a.n31*a.n43+a.n21*a.n34*a.n43+a.n23*a.n31*a.n44-a.n21*a.n33*a.n44;b.n22=a.n13*a.n34*a.n41-a.n14*a.n33*a.n41+a.n14*a.n31*a.n43-a.n11*a.n34*a.n43-a.n13*a.n31*a.n44+a.n11*a.n33*a.n44;b.n23=a.n14*a.n23*a.n41-a.n13*a.n24*a.n41-a.n14*a.n21*a.n43+a.n11*a.n24*a.n43+a.n13*a.n21*a.n44-a.n11*a.n23*a.n44;b.n24=a.n13*a.n24*a.n31-a.n14*a.n23*a.n31+a.n14*a.n21*a.n33-a.n11*a.n24*a.n33-a.n13*a.n21*a.n34+a.n11*a.n23*a.n34;b.n31=a.n22*a.n34*a.n41-a.n24*a.n32*
a.n41+a.n24*a.n31*a.n42-a.n21*a.n34*a.n42-a.n22*a.n31*a.n44+a.n21*a.n32*a.n44;b.n32=a.n14*a.n32*a.n41-a.n12*a.n34*a.n41-a.n14*a.n31*a.n42+a.n11*a.n34*a.n42+a.n12*a.n31*a.n44-a.n11*a.n32*a.n44;b.n33=a.n13*a.n24*a.n41-a.n14*a.n22*a.n41+a.n14*a.n21*a.n42-a.n11*a.n24*a.n42-a.n12*a.n21*a.n44+a.n11*a.n22*a.n44;b.n34=a.n14*a.n22*a.n31-a.n12*a.n24*a.n31-a.n14*a.n21*a.n32+a.n11*a.n24*a.n32+a.n12*a.n21*a.n34-a.n11*a.n22*a.n34;b.n41=a.n23*a.n32*a.n41-a.n22*a.n33*a.n41-a.n23*a.n31*a.n42+a.n21*a.n33*a.n42+a.n22*
a.n31*a.n43-a.n21*a.n32*a.n43;b.n42=a.n12*a.n33*a.n41-a.n13*a.n32*a.n41+a.n13*a.n31*a.n42-a.n11*a.n33*a.n42-a.n12*a.n31*a.n43+a.n11*a.n32*a.n43;b.n43=a.n13*a.n22*a.n41-a.n12*a.n23*a.n41-a.n13*a.n21*a.n42+a.n11*a.n23*a.n42+a.n12*a.n21*a.n43-a.n11*a.n22*a.n43;b.n44=a.n12*a.n23*a.n31-a.n13*a.n22*a.n31+a.n13*a.n21*a.n32-a.n11*a.n23*a.n32-a.n12*a.n21*a.n33+a.n11*a.n22*a.n33;b.multiplyScalar(1/a.determinant());return b};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.flatten();a=new THREE.Matrix3;var e=b[10]*b[5]-b[6]*b[9],d=-b[10]*b[1]+b[2]*b[9],f=b[6]*b[1]-b[2]*b[5],g=-b[10]*b[4]+b[6]*b[8],k=b[10]*b[0]-b[2]*b[8],j=-b[6]*b[0]+b[2]*b[4],i=b[9]*b[4]-b[5]*b[8],n=-b[9]*b[0]+b[1]*b[8],x=b[5]*b[0]-b[1]*b[4];b=b[0]*e+b[1]*g+b[2]*i;if(b==0)throw"matrix not invertible";b=1/b;a.m[0]=b*e;a.m[1]=b*d;a.m[2]=b*f;a.m[3]=b*g;a.m[4]=b*k;a.m[5]=b*j;a.m[6]=b*i;a.m[7]=b*n;a.m[8]=b*x;return a};
THREE.Matrix4.makeFrustum=function(a,b,e,d,f,g){var k,j,i;k=new THREE.Matrix4;j=2*f/(b-a);i=2*f/(d-e);a=(b+a)/(b-a);e=(d+e)/(d-e);d=-(g+f)/(g-f);f=-2*g*f/(g-f);k.n11=j;k.n12=0;k.n13=a;k.n14=0;k.n21=0;k.n22=i;k.n23=e;k.n24=0;k.n31=0;k.n32=0;k.n33=d;k.n34=f;k.n41=0;k.n42=0;k.n43=-1;k.n44=0;return k};THREE.Matrix4.makePerspective=function(a,b,e,d){var f;a=e*Math.tan(a*Math.PI/360);f=-a;return THREE.Matrix4.makeFrustum(f*b,a*b,f,a,e,d)};
THREE.Matrix4.makeOrtho=function(a,b,e,d,f,g){var k,j,i,n;k=new THREE.Matrix4;j=b-a;i=e-d;n=g-f;a=(b+a)/j;e=(e+d)/i;f=(g+f)/n;k.n11=2/j;k.n12=0;k.n13=0;k.n14=-a;k.n21=0;k.n22=2/i;k.n23=0;k.n24=-e;k.n31=0;k.n32=0;k.n33=-2/n;k.n34=-f;k.n41=0;k.n42=0;k.n43=0;k.n44=1;return k};
THREE.Vertex=function(a,b){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=b||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,b,e,d,f){this.a=a;this.b=b;this.c=e;this.centroid=new THREE.Vector3;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.materials=f instanceof Array?f:[f]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,b,e,d,f,g){this.a=a;this.b=b;this.c=e;this.d=d;this.centroid=new THREE.Vector3;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.materials=g instanceof Array?g:[g]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,b,e;a=0;for(b=this.faces.length;a<b;a++){e=this.faces[a];e.centroid.set(0,0,0);if(e instanceof THREE.Face3){e.centroid.addSelf(this.vertices[e.a].position);e.centroid.addSelf(this.vertices[e.b].position);e.centroid.addSelf(this.vertices[e.c].position);e.centroid.divideScalar(3)}else if(e instanceof THREE.Face4){e.centroid.addSelf(this.vertices[e.a].position);e.centroid.addSelf(this.vertices[e.b].position);e.centroid.addSelf(this.vertices[e.c].position);
e.centroid.addSelf(this.vertices[e.d].position);e.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var b,e,d,f,g,k,j=new THREE.Vector3,i=new THREE.Vector3;d=0;for(f=this.vertices.length;d<f;d++){g=this.vertices[d];g.normal.set(0,0,0)}d=0;for(f=this.faces.length;d<f;d++){g=this.faces[d];if(a&&g.vertexNormals.length){j.set(0,0,0);b=0;for(e=g.normal.length;b<e;b++)j.addSelf(g.vertexNormals[b]);j.divideScalar(3)}else{b=this.vertices[g.a];e=this.vertices[g.b];k=this.vertices[g.c];j.sub(k.position,
e.position);i.sub(b.position,e.position);j.crossSelf(i)}j.isZero()||j.normalize();g.normal.copy(j)}},computeVertexNormals:function(){var a,b,e=[],d;a=0;for(b=this.vertices.length;a<b;a++)e[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++){d=this.faces[a];if(d instanceof THREE.Face3){e[d.a].addSelf(d.normal);e[d.b].addSelf(d.normal);e[d.c].addSelf(d.normal)}else if(d instanceof THREE.Face4){e[d.a].addSelf(d.normal);e[d.b].addSelf(d.normal);e[d.c].addSelf(d.normal);e[d.d].addSelf(d.normal)}}a=
0;for(b=this.vertices.length;a<b;a++)e[a].normalize();a=0;for(b=this.faces.length;a<b;a++){d=this.faces[a];if(d instanceof THREE.Face3){d.vertexNormals[0]=e[d.a].clone();d.vertexNormals[1]=e[d.b].clone();d.vertexNormals[2]=e[d.c].clone()}else if(d instanceof THREE.Face4){d.vertexNormals[0]=e[d.a].clone();d.vertexNormals[1]=e[d.b].clone();d.vertexNormals[2]=e[d.c].clone();d.vertexNormals[3]=e[d.d].clone()}}},computeTangents:function(){function a(q,p,E,B,O,P,J){g=q.vertices[p].position;k=q.vertices[E].position;
j=q.vertices[B].position;i=f[O];n=f[P];x=f[J];c=k.x-g.x;u=j.x-g.x;y=k.y-g.y;z=j.y-g.y;A=k.z-g.z;M=j.z-g.z;v=n.u-i.u;D=x.u-i.u;o=n.v-i.v;H=x.v-i.v;N=1/(v*H-D*o);I.set((H*c-o*u)*N,(H*y-o*z)*N,(H*A-o*M)*N);h.set((v*u-D*c)*N,(v*z-D*y)*N,(v*M-D*A)*N);X[p].addSelf(I);X[E].addSelf(I);X[B].addSelf(I);Q[p].addSelf(h);Q[E].addSelf(h);Q[B].addSelf(h)}var b,e,d,f,g,k,j,i,n,x,c,u,y,z,A,M,v,D,o,H,N,X=[],Q=[],I=new THREE.Vector3,h=new THREE.Vector3,m=new THREE.Vector3,t=new THREE.Vector3,l=new THREE.Vector3;b=0;
for(e=this.vertices.length;b<e;b++){X[b]=new THREE.Vector3;Q[b]=new THREE.Vector3}b=0;for(e=this.faces.length;b<e;b++){d=this.faces[b];f=this.uvs[b];if(d instanceof THREE.Face3){a(this,d.a,d.b,d.c,0,1,2);this.vertices[d.a].normal.copy(d.vertexNormals[0]);this.vertices[d.b].normal.copy(d.vertexNormals[1]);this.vertices[d.c].normal.copy(d.vertexNormals[2])}else if(d instanceof THREE.Face4){a(this,d.a,d.b,d.c,0,1,2);a(this,d.a,d.b,d.d,0,1,3);this.vertices[d.a].normal.copy(d.vertexNormals[0]);this.vertices[d.b].normal.copy(d.vertexNormals[1]);
this.vertices[d.c].normal.copy(d.vertexNormals[2]);this.vertices[d.d].normal.copy(d.vertexNormals[3])}}b=0;for(e=this.vertices.length;b<e;b++){l.copy(this.vertices[b].normal);d=X[b];m.copy(d);m.subSelf(l.multiplyScalar(l.dot(d))).normalize();t.cross(this.vertices[b].normal,d);d=t.dot(Q[b]);d=d<0?-1:1;this.vertices[b].tangent.set(m.x,m.y,m.z,d)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],
y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,e=this.vertices.length;b<e;b++){a=this.vertices[b];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<
this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,b=0,e=this.vertices.length;b<e;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(x){var c=[];b=0;for(e=x.length;b<e;b++)x[b]==undefined?c.push("undefined"):c.push(x[b].toString());return c.join("_")}
var b,e,d,f,g,k,j,i,n={};d=0;for(f=this.faces.length;d<f;d++){g=this.faces[d];k=g.materials;j=a(k);if(n[j]==undefined)n[j]={hash:j,counter:0};i=n[j].hash+"_"+n[j].counter;if(this.geometryChunks[i]==undefined)this.geometryChunks[i]={faces:[],materials:k,vertices:0};g=g instanceof THREE.Face3?3:4;if(this.geometryChunks[i].vertices+g>65535){n[j].counter+=1;i=n[j].hash+"_"+n[j].counter;if(this.geometryChunks[i]==undefined)this.geometryChunks[i]={faces:[],materials:k,vertices:0}}this.geometryChunks[i].faces.push(d);
this.geometryChunks[i].vertices+=g}},toString:function(){return"THREE.Geometry ( vertices: "+this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,b,e,d){this.fov=a;this.aspect=b;this.near=e;this.far=d;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.translateX=function(f){f=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(f);f.cross(f.clone(),this.up);this.position.addSelf(f);this.target.position.addSelf(f)};this.translateZ=function(f){f=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(f);
this.position.subSelf(f);this.target.position.subSelf(f)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};
THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;
THREE.PointLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.translationMatrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.scaleMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){this.matrixPosition=THREE.Matrix4.translationMatrix(this.position.x,this.position.y,this.position.z);this.rotationMatrix=THREE.Matrix4.rotationXMatrix(this.rotation.x);this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationYMatrix(this.rotation.y));this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationZMatrix(this.rotation.z));this.scaleMatrix=THREE.Matrix4.scaleMatrix(this.scale.x,this.scale.y,this.scale.z);this.matrix.copy(this.matrixPosition);
this.matrix.multiplySelf(this.rotationMatrix);this.matrix.multiplySelf(this.scaleMatrix)}};THREE.Object3DCounter={value:0};THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.Line=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b]};THREE.Line.prototype=new THREE.Object3D;
THREE.Line.prototype.constructor=THREE.Line;THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+
"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=
this.wireframe_linecap="round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=
a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==
undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial"}};
THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.opacity=1;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};
THREE.Texture=function(a,b,e,d,f,g){this.image=a;this.mapping=b!==undefined?b:new THREE.UVMapping;this.wrap_s=e!==undefined?e:THREE.ClampToEdgeWrapping;this.wrap_t=d!==undefined?d:THREE.ClampToEdgeWrapping;this.mag_filter=f!==undefined?f:THREE.LinearFilter;this.min_filter=g!==undefined?g:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;var Uniforms={clone:function(a){var b,e,d,f={};for(b in a){f[b]={};for(e in a[b]){d=a[b][e];f[b][e]=d instanceof THREE.Color||d instanceof THREE.Vector3||d instanceof THREE.Texture?d.clone():d}}return f}};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};
THREE.LatitudeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,b,e){this.color=new THREE.Color(a);this.near=b||1;this.far=e||1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b||2.5E-4};
THREE.Projector=function(){function a(Q,I){return I.z-Q.z}function b(Q,I){var h=0,m=1,t=Q.z+Q.w,l=I.z+I.w,q=-Q.z+Q.w,p=-I.z+I.w;if(t>=0&&l>=0&&q>=0&&p>=0)return true;else if(t<0&&l<0||q<0&&p<0)return false;else{if(t<0)h=Math.max(h,t/(t-l));else if(l<0)m=Math.min(m,t/(t-l));if(q<0)h=Math.max(h,q/(q-p));else if(p<0)m=Math.min(m,q/(q-p));if(m<h)return false;else{Q.lerpSelf(I,h);I.lerpSelf(Q,1-m);return true}}}var e,d,f=[],g,k,j,i=[],n,x,c=[],u,y,z=[],A=new THREE.Vector4,M=new THREE.Vector4,v=new THREE.Matrix4,
D=new THREE.Matrix4,o=[],H=new THREE.Vector4,N=new THREE.Vector4,X;this.projectObjects=function(Q,I,h){var m=[],t,l;d=0;v.multiply(I.projectionMatrix,I.matrix);o[0]=new THREE.Vector4(v.n41-v.n11,v.n42-v.n12,v.n43-v.n13,v.n44-v.n14);o[1]=new THREE.Vector4(v.n41+v.n11,v.n42+v.n12,v.n43+v.n13,v.n44+v.n14);o[2]=new THREE.Vector4(v.n41+v.n21,v.n42+v.n22,v.n43+v.n23,v.n44+v.n24);o[3]=new THREE.Vector4(v.n41-v.n21,v.n42-v.n22,v.n43-v.n23,v.n44-v.n24);o[4]=new THREE.Vector4(v.n41-v.n31,v.n42-v.n32,v.n43-
v.n33,v.n44-v.n34);o[5]=new THREE.Vector4(v.n41+v.n31,v.n42+v.n32,v.n43+v.n33,v.n44+v.n34);I=0;for(t=o.length;I<t;I++){l=o[I];l.divideScalar(Math.sqrt(l.x*l.x+l.y*l.y+l.z*l.z))}t=Q.objects;Q=0;for(I=t.length;Q<I;Q++){l=t[Q];var q;if(!(q=!l.visible)){if(q=l instanceof THREE.Mesh){a:{q=void 0;for(var p=l.position,E=-l.geometry.boundingSphere.radius*Math.max(l.scale.x,Math.max(l.scale.y,l.scale.z)),B=0;B<6;B++){q=o[B].x*p.x+o[B].y*p.y+o[B].z*p.z+o[B].w;if(q<=E){q=false;break a}}q=true}q=!q}q=q}if(!q){e=
f[d]=f[d]||new THREE.RenderableObject;A.copy(l.position);v.multiplyVector3(A);e.object=l;e.z=A.z;m.push(e);d++}}h&&m.sort(a);return m};this.projectScene=function(Q,I,h){var m=[],t=I.near,l=I.far,q,p,E,B,O,P,J,R,V,F,K,W,r,s,w,C;j=x=y=0;I.autoUpdateMatrix&&I.updateMatrix();v.multiply(I.projectionMatrix,I.matrix);P=this.projectObjects(Q,I,true);Q=0;for(q=P.length;Q<q;Q++){J=P[Q].object;if(J.visible){J.autoUpdateMatrix&&J.updateMatrix();R=J.matrix;V=J.rotationMatrix;F=J.materials;K=J.overdraw;if(J instanceof
THREE.Mesh){W=J.geometry;r=W.vertices;p=0;for(E=r.length;p<E;p++){s=r[p];s.positionWorld.copy(s.position);R.multiplyVector3(s.positionWorld);B=s.positionScreen;B.copy(s.positionWorld);v.multiplyVector4(B);B.x/=B.w;B.y/=B.w;s.__visible=B.z>t&&B.z<l}W=W.faces;p=0;for(E=W.length;p<E;p++){s=W[p];if(s instanceof THREE.Face3){B=r[s.a];O=r[s.b];w=r[s.c];if(B.__visible&&O.__visible&&w.__visible)if(J.doubleSided||J.flipSided!=(w.positionScreen.x-B.positionScreen.x)*(O.positionScreen.y-B.positionScreen.y)-
(w.positionScreen.y-B.positionScreen.y)*(O.positionScreen.x-B.positionScreen.x)<0){g=i[j]=i[j]||new THREE.RenderableFace3;g.v1.positionWorld.copy(B.positionWorld);g.v2.positionWorld.copy(O.positionWorld);g.v3.positionWorld.copy(w.positionWorld);g.v1.positionScreen.copy(B.positionScreen);g.v2.positionScreen.copy(O.positionScreen);g.v3.positionScreen.copy(w.positionScreen);g.normalWorld.copy(s.normal);V.multiplyVector3(g.normalWorld);g.centroidWorld.copy(s.centroid);R.multiplyVector3(g.centroidWorld);
g.centroidScreen.copy(g.centroidWorld);v.multiplyVector3(g.centroidScreen);w=s.vertexNormals;X=g.vertexNormalsWorld;B=0;for(O=w.length;B<O;B++){C=X[B]=X[B]||new THREE.Vector3;C.copy(w[B]);V.multiplyVector3(C)}g.z=g.centroidScreen.z;g.meshMaterials=F;g.faceMaterials=s.materials;g.overdraw=K;if(J.geometry.uvs[p]){g.uvs[0]=J.geometry.uvs[p][0];g.uvs[1]=J.geometry.uvs[p][1];g.uvs[2]=J.geometry.uvs[p][2]}m.push(g);j++}}else if(s instanceof THREE.Face4){B=r[s.a];O=r[s.b];w=r[s.c];C=r[s.d];if(B.__visible&&
O.__visible&&w.__visible&&C.__visible)if(J.doubleSided||J.flipSided!=((C.positionScreen.x-B.positionScreen.x)*(O.positionScreen.y-B.positionScreen.y)-(C.positionScreen.y-B.positionScreen.y)*(O.positionScreen.x-B.positionScreen.x)<0||(O.positionScreen.x-w.positionScreen.x)*(C.positionScreen.y-w.positionScreen.y)-(O.positionScreen.y-w.positionScreen.y)*(C.positionScreen.x-w.positionScreen.x)<0)){g=i[j]=i[j]||new THREE.RenderableFace3;g.v1.positionWorld.copy(B.positionWorld);g.v2.positionWorld.copy(O.positionWorld);
g.v3.positionWorld.copy(C.positionWorld);g.v1.positionScreen.copy(B.positionScreen);g.v2.positionScreen.copy(O.positionScreen);g.v3.positionScreen.copy(C.positionScreen);g.normalWorld.copy(s.normal);V.multiplyVector3(g.normalWorld);g.centroidWorld.copy(s.centroid);R.multiplyVector3(g.centroidWorld);g.centroidScreen.copy(g.centroidWorld);v.multiplyVector3(g.centroidScreen);g.z=g.centroidScreen.z;g.meshMaterials=F;g.faceMaterials=s.materials;g.overdraw=K;if(J.geometry.uvs[p]){g.uvs[0]=J.geometry.uvs[p][0];
g.uvs[1]=J.geometry.uvs[p][1];g.uvs[2]=J.geometry.uvs[p][3]}m.push(g);j++;k=i[j]=i[j]||new THREE.RenderableFace3;k.v1.positionWorld.copy(O.positionWorld);k.v2.positionWorld.copy(w.positionWorld);k.v3.positionWorld.copy(C.positionWorld);k.v1.positionScreen.copy(O.positionScreen);k.v2.positionScreen.copy(w.positionScreen);k.v3.positionScreen.copy(C.positionScreen);k.normalWorld.copy(g.normalWorld);k.centroidWorld.copy(g.centroidWorld);k.centroidScreen.copy(g.centroidScreen);k.z=k.centroidScreen.z;k.meshMaterials=
F;k.faceMaterials=s.materials;k.overdraw=K;if(J.geometry.uvs[p]){k.uvs[0]=J.geometry.uvs[p][1];k.uvs[1]=J.geometry.uvs[p][2];k.uvs[2]=J.geometry.uvs[p][3]}m.push(k);j++}}}}else if(J instanceof THREE.Line){D.multiply(v,R);r=J.geometry.vertices;s=r[0];s.positionScreen.copy(s.position);D.multiplyVector4(s.positionScreen);p=1;for(E=r.length;p<E;p++){B=r[p];B.positionScreen.copy(B.position);D.multiplyVector4(B.positionScreen);O=r[p-1];H.copy(B.positionScreen);N.copy(O.positionScreen);if(b(H,N)){H.multiplyScalar(1/
H.w);N.multiplyScalar(1/N.w);n=c[x]=c[x]||new THREE.RenderableLine;n.v1.positionScreen.copy(H);n.v2.positionScreen.copy(N);n.z=Math.max(H.z,N.z);n.materials=J.materials;m.push(n);x++}}}else if(J instanceof THREE.Particle){M.set(J.position.x,J.position.y,J.position.z,1);v.multiplyVector4(M);M.z/=M.w;if(M.z>0&&M.z<1){u=z[y]=z[y]||new THREE.RenderableParticle;u.x=M.x/M.w;u.y=M.y/M.w;u.z=M.z;u.rotation=J.rotation.z;u.scale.x=J.scale.x*Math.abs(u.x-(M.x+I.projectionMatrix.n11)/(M.w+I.projectionMatrix.n14));
u.scale.y=J.scale.y*Math.abs(u.y-(M.y+I.projectionMatrix.n22)/(M.w+I.projectionMatrix.n24));u.materials=J.materials;m.push(u);y++}}}}h&&m.sort(a);return m};this.unprojectVector=function(Q,I){var h=new THREE.Matrix4;h.multiply(THREE.Matrix4.makeInvert(I.matrix),THREE.Matrix4.makeInvert(I.projectionMatrix));h.multiplyVector3(Q);return Q}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,b=new THREE.Projector,e,d,f,g;this.domElement=document.createElement("div");this.setSize=function(k,j){e=k;d=j;f=e/2;g=d/2};this.render=function(k,j){var i,n,x,c,u,y,z,A;a=b.projectScene(k,j);i=0;for(n=a.length;i<n;i++){u=a[i];if(u instanceof THREE.RenderableParticle){z=u.x*f+f;A=u.y*g+g;x=0;for(c=u.material.length;x<c;x++){y=u.material[x];if(y instanceof THREE.ParticleDOMMaterial){y=y.domElement;y.style.left=z+"px";y.style.top=A+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(da){if(u!=da)n.globalAlpha=u=da}function b(da){if(y!=da){switch(da){case THREE.NormalBlending:n.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:n.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:n.globalCompositeOperation="darker"}y=da}}var e=null,d=new THREE.Projector,f=document.createElement("canvas"),g,k,j,i,n=f.getContext("2d"),x=null,c=null,u=1,y=0,z=null,A=null,M=1,v,D,o,H,N,X,Q,I,h,m=new THREE.Color,
t=new THREE.Color,l=new THREE.Color,q=new THREE.Color,p=new THREE.Color,E,B,O,P,J,R,V,F,K,W=new THREE.Rectangle,r=new THREE.Rectangle,s=new THREE.Rectangle,w=false,C=new THREE.Color,T=new THREE.Color,ba=new THREE.Color,fa=new THREE.Color,xa=Math.PI*2,$=new THREE.Vector3,ra,sa,Da,ha,ta,ya,pa=16;ra=document.createElement("canvas");ra.width=ra.height=2;sa=ra.getContext("2d");sa.fillStyle="rgba(0,0,0,1)";sa.fillRect(0,0,2,2);Da=sa.getImageData(0,0,2,2);ha=Da.data;ta=document.createElement("canvas");ta.width=
ta.height=pa;ya=ta.getContext("2d");ya.translate(-pa/2,-pa/2);ya.scale(pa,pa);pa--;this.domElement=f;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(da,na){g=da;k=na;j=g/2;i=k/2;f.width=g;f.height=k;W.set(-j,-i,j,i)};this.setClearColor=function(da,na){x=da!==null?new THREE.Color(da):null;c=na;r.set(-j,-i,j,i);n.setTransform(1,0,0,-1,j,i);this.clear()};this.clear=function(){if(!r.isEmpty()){r.inflate(1);r.minSelf(W);if(x!==null){b(THREE.NormalBlending);a(1);n.fillStyle=
"rgba("+Math.floor(x.r*255)+","+Math.floor(x.g*255)+","+Math.floor(x.b*255)+","+c+")";n.fillRect(r.getX(),r.getY(),r.getWidth(),r.getHeight())}else n.clearRect(r.getX(),r.getY(),r.getWidth(),r.getHeight());r.empty()}};this.render=function(da,na){function Ma(G){var Y,U,L,S=G.lights;T.setRGB(0,0,0);ba.setRGB(0,0,0);fa.setRGB(0,0,0);G=0;for(Y=S.length;G<Y;G++){U=S[G];L=U.color;if(U instanceof THREE.AmbientLight){T.r+=L.r;T.g+=L.g;T.b+=L.b}else if(U instanceof THREE.DirectionalLight){ba.r+=L.r;ba.g+=
L.g;ba.b+=L.b}else if(U instanceof THREE.PointLight){fa.r+=L.r;fa.g+=L.g;fa.b+=L.b}}}function za(G,Y,U,L){var S,Z,ca,ea,ga=G.lights;G=0;for(S=ga.length;G<S;G++){Z=ga[G];ca=Z.color;ea=Z.intensity;if(Z instanceof THREE.DirectionalLight){Z=U.dot(Z.position)*ea;if(Z>0){L.r+=ca.r*Z;L.g+=ca.g*Z;L.b+=ca.b*Z}}else if(Z instanceof THREE.PointLight){$.sub(Z.position,Y);$.normalize();Z=U.dot($)*ea;if(Z>0){L.r+=ca.r*Z;L.g+=ca.g*Z;L.b+=ca.b*Z}}}}function Na(G,Y,U){if(U.opacity!=0){a(U.opacity);b(U.blending);var L,
S,Z,ca,ea,ga;if(U instanceof THREE.ParticleBasicMaterial){if(U.map){ca=U.map;ea=ca.width>>1;ga=ca.height>>1;S=Y.scale.x*j;Z=Y.scale.y*i;U=S*ea;L=Z*ga;s.set(G.x-U,G.y-L,G.x+U,G.y+L);if(W.instersects(s)){n.save();n.translate(G.x,G.y);n.rotate(-Y.rotation);n.scale(S,-Z);n.translate(-ea,-ga);n.drawImage(ca,0,0);n.restore()}}}else if(U instanceof THREE.ParticleCircleMaterial){if(w){C.r=T.r+ba.r+fa.r;C.g=T.g+ba.g+fa.g;C.b=T.b+ba.b+fa.b;m.r=U.color.r*C.r;m.g=U.color.g*C.g;m.b=U.color.b*C.b;m.updateStyleString()}else m.__styleString=
U.color.__styleString;U=Y.scale.x*j;L=Y.scale.y*i;s.set(G.x-U,G.y-L,G.x+U,G.y+L);if(W.instersects(s)){S=m.__styleString;if(A!=S)n.fillStyle=A=S;n.save();n.translate(G.x,G.y);n.rotate(-Y.rotation);n.scale(U,L);n.beginPath();n.arc(0,0,1,0,xa,true);n.closePath();n.fill();n.restore()}}}}function Oa(G,Y,U,L){if(L.opacity!=0){a(L.opacity);b(L.blending);n.beginPath();n.moveTo(G.positionScreen.x,G.positionScreen.y);n.lineTo(Y.positionScreen.x,Y.positionScreen.y);n.closePath();if(L instanceof THREE.LineBasicMaterial){m.__styleString=
L.color.__styleString;G=L.linewidth;if(M!=G)n.lineWidth=M=G;G=m.__styleString;if(z!=G)n.strokeStyle=z=G;n.stroke();s.inflate(L.linewidth*2)}}}function Ia(G,Y,U,L,S,Z){if(S.opacity!=0){a(S.opacity);b(S.blending);H=G.positionScreen.x;N=G.positionScreen.y;X=Y.positionScreen.x;Q=Y.positionScreen.y;I=U.positionScreen.x;h=U.positionScreen.y;n.beginPath();n.moveTo(H,N);n.lineTo(X,Q);n.lineTo(I,h);n.lineTo(H,N);n.closePath();if(S instanceof THREE.MeshBasicMaterial)if(S.map)S.map.image.loaded&&S.map.mapping instanceof
THREE.UVMapping&&ua(H,N,X,Q,I,h,S.map.image,L.uvs[0].u,L.uvs[0].v,L.uvs[1].u,L.uvs[1].v,L.uvs[2].u,L.uvs[2].v);else if(S.env_map){if(S.env_map.image.loaded)if(S.env_map.mapping instanceof THREE.SphericalReflectionMapping){G=na.matrix;$.copy(L.vertexNormalsWorld[0]);P=($.x*G.n11+$.y*G.n12+$.z*G.n13)*0.5+0.5;J=-($.x*G.n21+$.y*G.n22+$.z*G.n23)*0.5+0.5;$.copy(L.vertexNormalsWorld[1]);R=($.x*G.n11+$.y*G.n12+$.z*G.n13)*0.5+0.5;V=-($.x*G.n21+$.y*G.n22+$.z*G.n23)*0.5+0.5;$.copy(L.vertexNormalsWorld[2]);F=
($.x*G.n11+$.y*G.n12+$.z*G.n13)*0.5+0.5;K=-($.x*G.n21+$.y*G.n22+$.z*G.n23)*0.5+0.5;ua(H,N,X,Q,I,h,S.env_map.image,P,J,R,V,F,K)}}else S.wireframe?Aa(S.color.__styleString,S.wireframe_linewidth):Ba(S.color.__styleString);else if(S instanceof THREE.MeshLambertMaterial){if(S.map&&!S.wireframe){S.map.mapping instanceof THREE.UVMapping&&ua(H,N,X,Q,I,h,S.map.image,L.uvs[0].u,L.uvs[0].v,L.uvs[1].u,L.uvs[1].v,L.uvs[2].u,L.uvs[2].v);b(THREE.SubtractiveBlending)}if(w)if(!S.wireframe&&S.shading==THREE.SmoothShading&&
L.vertexNormalsWorld.length==3){t.r=l.r=q.r=T.r;t.g=l.g=q.g=T.g;t.b=l.b=q.b=T.b;za(Z,L.v1.positionWorld,L.vertexNormalsWorld[0],t);za(Z,L.v2.positionWorld,L.vertexNormalsWorld[1],l);za(Z,L.v3.positionWorld,L.vertexNormalsWorld[2],q);p.r=(l.r+q.r)*0.5;p.g=(l.g+q.g)*0.5;p.b=(l.b+q.b)*0.5;O=Ja(t,l,q,p);ua(H,N,X,Q,I,h,O,0,0,1,0,0,1)}else{C.r=T.r;C.g=T.g;C.b=T.b;za(Z,L.centroidWorld,L.normalWorld,C);m.r=S.color.r*C.r;m.g=S.color.g*C.g;m.b=S.color.b*C.b;m.updateStyleString();S.wireframe?Aa(m.__styleString,
S.wireframe_linewidth):Ba(m.__styleString)}else S.wireframe?Aa(S.color.__styleString,S.wireframe_linewidth):Ba(S.color.__styleString)}else if(S instanceof THREE.MeshDepthMaterial){E=na.near;B=na.far;t.r=t.g=t.b=1-Ea(G.positionScreen.z,E,B);l.r=l.g=l.b=1-Ea(Y.positionScreen.z,E,B);q.r=q.g=q.b=1-Ea(U.positionScreen.z,E,B);p.r=(l.r+q.r)*0.5;p.g=(l.g+q.g)*0.5;p.b=(l.b+q.b)*0.5;O=Ja(t,l,q,p);ua(H,N,X,Q,I,h,O,0,0,1,0,0,1)}else if(S instanceof THREE.MeshNormalMaterial){m.r=Fa(L.normalWorld.x);m.g=Fa(L.normalWorld.y);
m.b=Fa(L.normalWorld.z);m.updateStyleString();S.wireframe?Aa(m.__styleString,S.wireframe_linewidth):Ba(m.__styleString)}}}function Aa(G,Y){if(z!=G)n.strokeStyle=z=G;if(M!=Y)n.lineWidth=M=Y;n.stroke();s.inflate(Y*2)}function Ba(G){if(A!=G)n.fillStyle=A=G;n.fill()}function ua(G,Y,U,L,S,Z,ca,ea,ga,ka,ia,la,va){var oa,ma;oa=ca.width-1;ma=ca.height-1;ea*=oa;ga*=ma;ka*=oa;ia*=ma;la*=oa;va*=ma;U-=G;L-=Y;S-=G;Z-=Y;ka-=ea;ia-=ga;la-=ea;va-=ga;ma=1/(ka*va-la*ia);oa=(va*U-ia*S)*ma;ia=(va*L-ia*Z)*ma;U=(ka*S-
la*U)*ma;L=(ka*Z-la*L)*ma;G=G-oa*ea-U*ga;Y=Y-ia*ea-L*ga;n.save();n.transform(oa,ia,U,L,G,Y);n.clip();n.drawImage(ca,0,0);n.restore()}function Ja(G,Y,U,L){var S=~~(G.r*255),Z=~~(G.g*255);G=~~(G.b*255);var ca=~~(Y.r*255),ea=~~(Y.g*255);Y=~~(Y.b*255);var ga=~~(U.r*255),ka=~~(U.g*255);U=~~(U.b*255);var ia=~~(L.r*255),la=~~(L.g*255);L=~~(L.b*255);ha[0]=S<0?0:S>255?255:S;ha[1]=Z<0?0:Z>255?255:Z;ha[2]=G<0?0:G>255?255:G;ha[4]=ca<0?0:ca>255?255:ca;ha[5]=ea<0?0:ea>255?255:ea;ha[6]=Y<0?0:Y>255?255:Y;ha[8]=ga<
0?0:ga>255?255:ga;ha[9]=ka<0?0:ka>255?255:ka;ha[10]=U<0?0:U>255?255:U;ha[12]=ia<0?0:ia>255?255:ia;ha[13]=la<0?0:la>255?255:la;ha[14]=L<0?0:L>255?255:L;sa.putImageData(Da,0,0);ya.drawImage(ra,0,0);return ta}function Ea(G,Y,U){G=(G-Y)/(U-Y);return G*G*(3-2*G)}function Fa(G){G=(G+1)*0.5;return G<0?0:G>1?1:G}function Ga(G,Y){var U=Y.x-G.x,L=Y.y-G.y,S=1/Math.sqrt(U*U+L*L);U*=S;L*=S;Y.x+=U;Y.y+=L;G.x-=U;G.y-=L}var Ca,Ka,aa,ja,qa,Ha,La,wa;n.setTransform(1,0,0,-1,j,i);this.autoClear&&this.clear();e=d.projectScene(da,
na,this.sortElements);(w=da.lights.length>0)&&Ma(da);Ca=0;for(Ka=e.length;Ca<Ka;Ca++){aa=e[Ca];s.empty();if(aa instanceof THREE.RenderableParticle){v=aa;v.x*=j;v.y*=i;ja=0;for(qa=aa.materials.length;ja<qa;ja++)Na(v,aa,aa.materials[ja],da)}else if(aa instanceof THREE.RenderableLine){v=aa.v1;D=aa.v2;v.positionScreen.x*=j;v.positionScreen.y*=i;D.positionScreen.x*=j;D.positionScreen.y*=i;s.addPoint(v.positionScreen.x,v.positionScreen.y);s.addPoint(D.positionScreen.x,D.positionScreen.y);if(W.instersects(s)){ja=
0;for(qa=aa.materials.length;ja<qa;)Oa(v,D,aa,aa.materials[ja++],da)}}else if(aa instanceof THREE.RenderableFace3){v=aa.v1;D=aa.v2;o=aa.v3;v.positionScreen.x*=j;v.positionScreen.y*=i;D.positionScreen.x*=j;D.positionScreen.y*=i;o.positionScreen.x*=j;o.positionScreen.y*=i;if(aa.overdraw){Ga(v.positionScreen,D.positionScreen);Ga(D.positionScreen,o.positionScreen);Ga(o.positionScreen,v.positionScreen)}s.add3Points(v.positionScreen.x,v.positionScreen.y,D.positionScreen.x,D.positionScreen.y,o.positionScreen.x,
o.positionScreen.y);if(W.instersects(s)){ja=0;for(qa=aa.meshMaterials.length;ja<qa;){wa=aa.meshMaterials[ja++];if(wa instanceof THREE.MeshFaceMaterial){Ha=0;for(La=aa.faceMaterials.length;Ha<La;)(wa=aa.faceMaterials[Ha++])&&Ia(v,D,o,aa,wa,da)}else Ia(v,D,o,aa,wa,da)}}}r.addRectangle(s)}n.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(P,J,R){var V,F,K,W;V=0;for(F=P.lights.length;V<F;V++){K=P.lights[V];if(K instanceof THREE.DirectionalLight){W=J.normalWorld.dot(K.position)*K.intensity;if(W>0){R.r+=K.color.r*W;R.g+=K.color.g*W;R.b+=K.color.b*W}}else if(K instanceof THREE.PointLight){h.sub(K.position,J.centroidWorld);h.normalize();W=J.normalWorld.dot(h)*K.intensity;if(W>0){R.r+=K.color.r*W;R.g+=K.color.g*W;R.b+=K.color.b*W}}}}function b(P,J,R,V,F,K){q=d(p++);q.setAttribute("d","M "+P.positionScreen.x+
" "+P.positionScreen.y+" L "+J.positionScreen.x+" "+J.positionScreen.y+" L "+R.positionScreen.x+","+R.positionScreen.y+"z");if(F instanceof THREE.MeshBasicMaterial)o.__styleString=F.color.__styleString;else if(F instanceof THREE.MeshLambertMaterial)if(D){H.r=N.r;H.g=N.g;H.b=N.b;a(K,V,H);o.r=F.color.r*H.r;o.g=F.color.g*H.g;o.b=F.color.b*H.b;o.updateStyleString()}else o.__styleString=F.color.__styleString;else if(F instanceof THREE.MeshDepthMaterial){I=1-F.__2near/(F.__farPlusNear-V.z*F.__farMinusNear);
o.setRGB(I,I,I)}else F instanceof THREE.MeshNormalMaterial&&o.setRGB(f(V.normalWorld.x),f(V.normalWorld.y),f(V.normalWorld.z));F.wireframe?q.setAttribute("style","fill: none; stroke: "+o.__styleString+"; stroke-width: "+F.wireframe_linewidth+"; stroke-opacity: "+F.opacity+"; stroke-linecap: "+F.wireframe_linecap+"; stroke-linejoin: "+F.wireframe_linejoin):q.setAttribute("style","fill: "+o.__styleString+"; fill-opacity: "+F.opacity);j.appendChild(q)}function e(P,J,R,V,F,K,W){q=d(p++);q.setAttribute("d",
"M "+P.positionScreen.x+" "+P.positionScreen.y+" L "+J.positionScreen.x+" "+J.positionScreen.y+" L "+R.positionScreen.x+","+R.positionScreen.y+" L "+V.positionScreen.x+","+V.positionScreen.y+"z");if(K instanceof THREE.MeshBasicMaterial)o.__styleString=K.color.__styleString;else if(K instanceof THREE.MeshLambertMaterial)if(D){H.r=N.r;H.g=N.g;H.b=N.b;a(W,F,H);o.r=K.color.r*H.r;o.g=K.color.g*H.g;o.b=K.color.b*H.b;o.updateStyleString()}else o.__styleString=K.color.__styleString;else if(K instanceof THREE.MeshDepthMaterial){I=
1-K.__2near/(K.__farPlusNear-F.z*K.__farMinusNear);o.setRGB(I,I,I)}else K instanceof THREE.MeshNormalMaterial&&o.setRGB(f(F.normalWorld.x),f(F.normalWorld.y),f(F.normalWorld.z));K.wireframe?q.setAttribute("style","fill: none; stroke: "+o.__styleString+"; stroke-width: "+K.wireframe_linewidth+"; stroke-opacity: "+K.opacity+"; stroke-linecap: "+K.wireframe_linecap+"; stroke-linejoin: "+K.wireframe_linejoin):q.setAttribute("style","fill: "+o.__styleString+"; fill-opacity: "+K.opacity);j.appendChild(q)}
function d(P){if(m[P]==null){m[P]=document.createElementNS("http://www.w3.org/2000/svg","path");O==0&&m[P].setAttribute("shape-rendering","crispEdges");return m[P]}return m[P]}function f(P){return P<0?Math.min((1+P)*0.5,0.5):0.5+Math.min(P*0.5,0.5)}var g=null,k=new THREE.Projector,j=document.createElementNS("http://www.w3.org/2000/svg","svg"),i,n,x,c,u,y,z,A,M=new THREE.Rectangle,v=new THREE.Rectangle,D=false,o=new THREE.Color(16777215),H=new THREE.Color(16777215),N=new THREE.Color(0),X=new THREE.Color(0),
Q=new THREE.Color(0),I,h=new THREE.Vector3,m=[],t=[],l=[],q,p,E,B,O=1;this.domElement=j;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(P){switch(P){case "high":O=1;break;case "low":O=0}};this.setSize=function(P,J){i=P;n=J;x=i/2;c=n/2;j.setAttribute("viewBox",-x+" "+-c+" "+i+" "+n);j.setAttribute("width",i);j.setAttribute("height",n);M.set(-x,-c,x,c)};this.clear=function(){for(;j.childNodes.length>0;)j.removeChild(j.childNodes[0])};this.render=function(P,J){var R,V,
F,K,W,r,s,w;this.autoClear&&this.clear();g=k.projectScene(P,J,this.sortElements);B=E=p=0;if(D=P.lights.length>0){s=P.lights;N.setRGB(0,0,0);X.setRGB(0,0,0);Q.setRGB(0,0,0);R=0;for(V=s.length;R<V;R++){F=s[R];K=F.color;if(F instanceof THREE.AmbientLight){N.r+=K.r;N.g+=K.g;N.b+=K.b}else if(F instanceof THREE.DirectionalLight){X.r+=K.r;X.g+=K.g;X.b+=K.b}else if(F instanceof THREE.PointLight){Q.r+=K.r;Q.g+=K.g;Q.b+=K.b}}}R=0;for(V=g.length;R<V;R++){s=g[R];v.empty();if(s instanceof THREE.RenderableParticle){u=
s;u.x*=x;u.y*=-c;F=0;for(K=s.materials.length;F<K;F++)if(w=s.materials[F]){W=u;r=s;w=w;var C=E++;if(t[C]==null){t[C]=document.createElementNS("http://www.w3.org/2000/svg","circle");O==0&&t[C].setAttribute("shape-rendering","crispEdges")}q=t[C];q.setAttribute("cx",W.x);q.setAttribute("cy",W.y);q.setAttribute("r",r.scale.x*x);if(w instanceof THREE.ParticleCircleMaterial){if(D){H.r=N.r+X.r+Q.r;H.g=N.g+X.g+Q.g;H.b=N.b+X.b+Q.b;o.r=w.color.r*H.r;o.g=w.color.g*H.g;o.b=w.color.b*H.b;o.updateStyleString()}else o=
w.color;q.setAttribute("style","fill: "+o.__styleString)}j.appendChild(q)}}else if(s instanceof THREE.RenderableLine){u=s.v1;y=s.v2;u.positionScreen.x*=x;u.positionScreen.y*=-c;y.positionScreen.x*=x;y.positionScreen.y*=-c;v.addPoint(u.positionScreen.x,u.positionScreen.y);v.addPoint(y.positionScreen.x,y.positionScreen.y);if(M.instersects(v)){F=0;for(K=s.materials.length;F<K;)if(w=s.materials[F++]){W=u;r=y;w=w;C=B++;if(l[C]==null){l[C]=document.createElementNS("http://www.w3.org/2000/svg","line");O==
0&&l[C].setAttribute("shape-rendering","crispEdges")}q=l[C];q.setAttribute("x1",W.positionScreen.x);q.setAttribute("y1",W.positionScreen.y);q.setAttribute("x2",r.positionScreen.x);q.setAttribute("y2",r.positionScreen.y);if(w instanceof THREE.LineBasicMaterial){o.__styleString=w.color.__styleString;q.setAttribute("style","fill: none; stroke: "+o.__styleString+"; stroke-width: "+w.linewidth+"; stroke-opacity: "+w.opacity+"; stroke-linecap: "+w.linecap+"; stroke-linejoin: "+w.linejoin);j.appendChild(q)}}}}else if(s instanceof
THREE.RenderableFace3){u=s.v1;y=s.v2;z=s.v3;u.positionScreen.x*=x;u.positionScreen.y*=-c;y.positionScreen.x*=x;y.positionScreen.y*=-c;z.positionScreen.x*=x;z.positionScreen.y*=-c;v.addPoint(u.positionScreen.x,u.positionScreen.y);v.addPoint(y.positionScreen.x,y.positionScreen.y);v.addPoint(z.positionScreen.x,z.positionScreen.y);if(M.instersects(v)){F=0;for(K=s.meshMaterials.length;F<K;){w=s.meshMaterials[F++];if(w instanceof THREE.MeshFaceMaterial){W=0;for(r=s.faceMaterials.length;W<r;)(w=s.faceMaterials[W++])&&
b(u,y,z,s,w,P)}else w&&b(u,y,z,s,w,P)}}}else if(s instanceof THREE.RenderableFace4){u=s.v1;y=s.v2;z=s.v3;A=s.v4;u.positionScreen.x*=x;u.positionScreen.y*=-c;y.positionScreen.x*=x;y.positionScreen.y*=-c;z.positionScreen.x*=x;z.positionScreen.y*=-c;A.positionScreen.x*=x;A.positionScreen.y*=-c;v.addPoint(u.positionScreen.x,u.positionScreen.y);v.addPoint(y.positionScreen.x,y.positionScreen.y);v.addPoint(z.positionScreen.x,z.positionScreen.y);v.addPoint(A.positionScreen.x,A.positionScreen.y);if(M.instersects(v)){F=
0;for(K=s.meshMaterials.length;F<K;){w=s.meshMaterials[F++];if(w instanceof THREE.MeshFaceMaterial){W=0;for(r=s.faceMaterials.length;W<r;)(w=s.faceMaterials[W++])&&e(u,y,z,A,s,w,P)}else w&&e(u,y,z,A,s,w,P)}}}}}};
THREE.WebGLRenderer=function(a){function b(h,m){h.fragment_shader=m.fragment_shader;h.vertex_shader=m.vertex_shader;h.uniforms=Uniforms.clone(m.uniforms)}function e(h,m){h.uniforms.color.value.setHex(h.color.hex);h.uniforms.opacity.value=h.opacity;h.uniforms.map.texture=h.map;h.uniforms.env_map.texture=h.env_map;h.uniforms.reflectivity.value=h.reflectivity;h.uniforms.refraction_ratio.value=h.refraction_ratio;h.uniforms.combine.value=h.combine;h.uniforms.useRefract.value=h.env_map&&h.env_map.mapping instanceof
THREE.CubeRefractionMapping;if(m){h.uniforms.fogColor.value.setHex(m.color.hex);if(m instanceof THREE.Fog){h.uniforms.fogNear.value=m.near;h.uniforms.fogFar.value=m.far}else if(m instanceof THREE.FogExp2)h.uniforms.fogDensity.value=m.density}}function d(h,m,t){var l=c.createProgram(),q=["#ifdef GL_ES\nprecision highp float;\n#endif",t.fog?"#define USE_FOG":"",t.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.env_map?"#define USE_ENVMAP":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");
t=[c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"",t.map?"#define USE_MAP":"",t.env_map?"#define USE_ENVMAP":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n"].join("\n");c.attachShader(l,i("fragment",q+h));c.attachShader(l,i("vertex",t+m));c.linkProgram(l);c.getProgramParameter(l,
c.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+c.getProgramParameter(l,c.VALIDATE_STATUS)+", gl error ["+c.getError()+"]");l.uniforms={};l.attributes={};return l}function f(h,m){if(h.image.length==6){if(!h.image.__webGLTextureCube&&!h.image.__cubeMapInitialized&&h.image.loadCount==6){h.image.__webGLTextureCube=c.createTexture();c.bindTexture(c.TEXTURE_CUBE_MAP,h.image.__webGLTextureCube);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,
c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MAG_FILTER,c.LINEAR);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MIN_FILTER,c.LINEAR_MIPMAP_LINEAR);for(var t=0;t<6;++t)c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,h.image[t]);c.generateMipmap(c.TEXTURE_CUBE_MAP);c.bindTexture(c.TEXTURE_CUBE_MAP,null);h.image.__cubeMapInitialized=true}c.activeTexture(c.TEXTURE0+m);c.bindTexture(c.TEXTURE_CUBE_MAP,h.image.__webGLTextureCube)}}function g(h,
m){if(!h.__webGLTexture&&h.image.loaded){h.__webGLTexture=c.createTexture();c.bindTexture(c.TEXTURE_2D,h.__webGLTexture);c.texImage2D(c.TEXTURE_2D,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,h.image);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,n(h.wrap_s));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,n(h.wrap_t));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,n(h.mag_filter));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,n(h.min_filter));c.generateMipmap(c.TEXTURE_2D);c.bindTexture(c.TEXTURE_2D,null)}c.activeTexture(c.TEXTURE0+
m);c.bindTexture(c.TEXTURE_2D,h.__webGLTexture)}function k(h,m){var t,l,q;t=0;for(l=m.length;t<l;t++){q=m[t];h.uniforms[q]=c.getUniformLocation(h,q)}}function j(h,m){var t,l,q;t=0;for(l=m.length;t<l;t++){q=m[t];h.attributes[q]=c.getAttribLocation(h,q)}}function i(h,m){var t;if(h=="fragment")t=c.createShader(c.FRAGMENT_SHADER);else if(h=="vertex")t=c.createShader(c.VERTEX_SHADER);c.shaderSource(t,m);c.compileShader(t);if(!c.getShaderParameter(t,c.COMPILE_STATUS)){alert(c.getShaderInfoLog(t));return null}return t}
function n(h){switch(h){case THREE.RepeatWrapping:return c.REPEAT;case THREE.ClampToEdgeWrapping:return c.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return c.MIRRORED_REPEAT;case THREE.NearestFilter:return c.NEAREST;case THREE.NearestMipMapNearestFilter:return c.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return c.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return c.LINEAR;case THREE.LinearMipMapNearestFilter:return c.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return c.LINEAR_MIPMAP_LINEAR}return 0}
var x=document.createElement("canvas"),c,u,y,z=new THREE.Matrix4,A,M=new Float32Array(16),v=new Float32Array(16),D=new Float32Array(16),o=new Float32Array(9),H=new Float32Array(16),N=function(h,m){if(h){var t,l,q,p,E;t=p=E=0;for(l=h.lights.length;t<l;t++){q=h.lights[t];q instanceof THREE.DirectionalLight&&p++;q instanceof THREE.PointLight&&E++}if(E+p<=m){t=p;E=E}else{t=Math.ceil(m*p/(E+p));E=m-t}return{directional:t,point:E}}return{directional:1,point:m-1}}(a.scene,4),X=a.scene?a.scene.fog:null,Q=
a.antialias!=undefined?a.antialias:true,I=a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0);a=a.clearAlpha?a.clearAlpha:0;this.domElement=x;this.autoClear=true;(function(h,m,t){try{c=x.getContext("experimental-webgl",{antialias:h})}catch(l){}if(!c){alert("WebGL not supported");throw"cannot create webgl context";}c.clearColor(0,0,0,1);c.clearDepth(1);c.enable(c.DEPTH_TEST);c.depthFunc(c.LEQUAL);c.frontFace(c.CCW);c.cullFace(c.BACK);c.enable(c.CULL_FACE);c.enable(c.BLEND);c.blendFunc(c.ONE,
c.ONE_MINUS_SRC_ALPHA);c.clearColor(m.r,m.g,m.b,t)})(Q,I,a);u=y=function(h,m,t){var l=[h?"#define MAX_DIR_LIGHTS "+h:"",m?"#define MAX_POINT_LIGHTS "+m:"","uniform bool enableLighting;\nuniform bool useRefract;\nuniform int pointLightNumber;\nuniform int directionalLightNumber;\nuniform vec3 ambientLightColor;",h?"uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];":"",h?"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];":"",m?"uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];":"",m?"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];":
"","varying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vLightWeighting;",m?"varying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];":"","varying vec3 vViewPosition;\nvarying vec3 vReflect;\nuniform float mRefractionRatio;\nvoid main(void) {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec3 transformedNormal = normalize( normalMatrix * normal );\nif ( !enableLighting ) {\nvLightWeighting = vec3( 1.0, 1.0, 1.0 );\n} else {\nvLightWeighting = ambientLightColor;",
h?"for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {":"",h?"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );":"",h?"float directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );":"",h?"vLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;":"",h?"}":"",m?"for( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {":"",m?"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );":"",m?"vPointLightVector[ i ] = normalize( lPosition.xyz - mvPosition.xyz );":
"",m?"float pointLightWeighting = max( dot( transformedNormal, vPointLightVector[ i ] ), 0.0 );":"",m?"vLightWeighting += pointLightColor[ i ] * pointLightWeighting;":"",m?"}":"","}\nvNormal = transformedNormal;\nvUv = uv;\nif ( useRefract ) {\nvReflect = refract( normalize(mPosition.xyz - cameraPosition), normalize(nWorld.xyz), mRefractionRatio );\n} else {\nvReflect = reflect( normalize(mPosition.xyz - cameraPosition), normalize(nWorld.xyz) );\n}\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),
q=[h?"#define MAX_DIR_LIGHTS "+h:"",m?"#define MAX_POINT_LIGHTS "+m:"","uniform int material;\nuniform bool enableMap;\nuniform bool enableCubeMap;\nuniform bool mixEnvMap;\nuniform samplerCube tCube;\nuniform float mReflectivity;\nuniform sampler2D tMap;\nuniform vec4 mColor;\nuniform float mOpacity;\nuniform vec4 mAmbient;\nuniform vec4 mSpecular;\nuniform float mShininess;",THREE.Snippets.fog_uniforms,"uniform int pointLightNumber;\nuniform int directionalLightNumber;",h?"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];":
"","varying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vLightWeighting;",m?"varying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];":"","varying vec3 vViewPosition;\nvarying vec3 vReflect;\nvoid main() {\nvec4 mapColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nvec4 cubeColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nif ( enableMap ) {\nmapColor = texture2D( tMap, vUv );\n}\nif ( enableCubeMap ) {\ncubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n}\nif ( material == 2 ) { \nvec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );",
m?"vec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );":"",m?"vec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );":"",m?"for( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {":"",m?"vec3 pointVector = normalize( vPointLightVector[ i ] );":"",m?"vec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );":"",m?"float pointDotNormalHalf = dot( normal, pointHalfVector );":"",m?"float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );":"",m?"float pointSpecularWeight = 0.0;":"",m?"if ( pointDotNormalHalf >= 0.0 )":
"",m?"pointSpecularWeight = pow( pointDotNormalHalf, mShininess );":"",m?"pointDiffuse  += mColor * pointDiffuseWeight;":"",m?"pointSpecular += mSpecular * pointSpecularWeight;":"",m?"}":"",h?"vec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );":"",h?"vec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );":"",h?"for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {":"",h?"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );":"",h?"vec3 dirVector = normalize( lDirection.xyz );":"",h?"vec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );":
"",h?"float dirDotNormalHalf = dot( normal, dirHalfVector );":"",h?"float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );":"",h?"float dirSpecularWeight = 0.0;":"",h?"if ( dirDotNormalHalf >= 0.0 )":"",h?"dirSpecularWeight = pow( dirDotNormalHalf, mShininess );":"",h?"dirDiffuse  += mColor * dirDiffuseWeight;":"",h?"dirSpecular += mSpecular * dirSpecularWeight;":"",h?"}":"","vec4 totalLight = mAmbient;",h?"totalLight += dirDiffuse + dirSpecular;":"",m?"totalLight += pointDiffuse + pointSpecular;":
"","if ( mixEnvMap ) {\ngl_FragColor = vec4( mix( mapColor.rgb * totalLight.xyz * vLightWeighting, cubeColor.rgb, mReflectivity ), mapColor.a );\n} else {\ngl_FragColor = vec4( mapColor.rgb * cubeColor.rgb * totalLight.xyz * vLightWeighting, mapColor.a );\n}\n} else if ( material == 1 ) {\nif ( mixEnvMap ) {\ngl_FragColor = vec4( mix( mColor.rgb * mapColor.rgb * vLightWeighting, cubeColor.rgb, mReflectivity ), mColor.a * mapColor.a );\n} else {\ngl_FragColor = vec4( mColor.rgb * mapColor.rgb * cubeColor.rgb * vLightWeighting, mColor.a * mapColor.a );\n}\n}",
THREE.Snippets.fog_fragment,"}"].join("\n");l=d(q,l,{fog:t});c.useProgram(l);k(l,["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","enableLighting","ambientLightColor","material","mColor","mAmbient","mSpecular","mShininess","mOpacity","enableMap","tMap","enableCubeMap","tCube","mixEnvMap","mReflectivity","mRefractionRatio","useRefract"]);t&&k(l,["fogColor","fogNear","fogFar","fogDensity"]);h&&k(l,["directionalLightNumber","directionalLightColor","directionalLightDirection"]);
m&&k(l,["pointLightNumber","pointLightColor","pointLightPosition"]);c.uniform1i(l.uniforms.enableMap,0);c.uniform1i(l.uniforms.tMap,0);c.uniform1i(l.uniforms.enableCubeMap,0);c.uniform1i(l.uniforms.tCube,1);c.uniform1i(l.uniforms.mixEnvMap,0);c.uniform1i(l.uniforms.useRefract,0);j(l,["position","normal","uv"]);return l}(N.directional,N.point,X);this.setSize=function(h,m){x.width=h;x.height=m;c.viewport(0,0,x.width,x.height)};this.setClearColor=function(h,m){var t=new THREE.Color(h);c.clearColor(t.r,
t.g,t.b,m)};this.clear=function(){c.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT)};this.setupLights=function(h,m){var t,l,q,p,E,B=[],O=[],P=[];p=[];E=[];c.uniform1i(h.uniforms.enableLighting,m.length);t=0;for(l=m.length;t<l;t++){q=m[t];if(q instanceof THREE.AmbientLight)B.push(q);else if(q instanceof THREE.DirectionalLight)P.push(q);else q instanceof THREE.PointLight&&O.push(q)}t=q=p=E=0;for(l=B.length;t<l;t++){q+=B[t].color.r;p+=B[t].color.g;E+=B[t].color.b}c.uniform3f(h.uniforms.ambientLightColor,
q,p,E);p=[];E=[];t=0;for(l=P.length;t<l;t++){q=P[t];p.push(q.color.r*q.intensity);p.push(q.color.g*q.intensity);p.push(q.color.b*q.intensity);E.push(q.position.x);E.push(q.position.y);E.push(q.position.z)}if(P.length){c.uniform1i(h.uniforms.directionalLightNumber,P.length);c.uniform3fv(h.uniforms.directionalLightDirection,E);c.uniform3fv(h.uniforms.directionalLightColor,p)}p=[];E=[];t=0;for(l=O.length;t<l;t++){q=O[t];p.push(q.color.r*q.intensity);p.push(q.color.g*q.intensity);p.push(q.color.b*q.intensity);
E.push(q.position.x);E.push(q.position.y);E.push(q.position.z)}if(O.length){c.uniform1i(h.uniforms.pointLightNumber,O.length);c.uniform3fv(h.uniforms.pointLightPosition,E);c.uniform3fv(h.uniforms.pointLightColor,p)}};this.createBuffers=function(h,m){var t,l,q,p,E,B,O,P,J,R,V=[],F=[],K=[],W=[],r=[],s=[],w=0,C=h.geometry.geometryChunks[m],T;E=false;t=0;for(l=h.materials.length;t<l;t++){B=h.materials[t];if(B instanceof THREE.MeshFaceMaterial){B=0;for(T=C.materials.length;B<T;B++)if(C.materials[B]&&C.materials[B].shading!=
undefined&&C.materials[B].shading==THREE.SmoothShading){E=true;break}}else if(B&&B.shading!=undefined&&B.shading==THREE.SmoothShading){E=true;break}if(E)break}T=E;t=0;for(l=C.faces.length;t<l;t++){q=C.faces[t];p=h.geometry.faces[q];E=p.vertexNormals;B=p.normal;q=h.geometry.uvs[q];if(p instanceof THREE.Face3){O=h.geometry.vertices[p.a].position;P=h.geometry.vertices[p.b].position;J=h.geometry.vertices[p.c].position;K.push(O.x,O.y,O.z);K.push(P.x,P.y,P.z);K.push(J.x,J.y,J.z);if(h.geometry.hasTangents){O=
h.geometry.vertices[p.a].tangent;P=h.geometry.vertices[p.b].tangent;J=h.geometry.vertices[p.c].tangent;r.push(O.x,O.y,O.z,O.w);r.push(P.x,P.y,P.z,P.w);r.push(J.x,J.y,J.z,J.w)}if(E.length==3&&T)for(p=0;p<3;p++)W.push(E[p].x,E[p].y,E[p].z);else for(p=0;p<3;p++)W.push(B.x,B.y,B.z);if(q)for(p=0;p<3;p++)s.push(q[p].u,q[p].v);V.push(w,w+1,w+2);F.push(w,w+1);F.push(w,w+2);F.push(w+1,w+2);w+=3}else if(p instanceof THREE.Face4){O=h.geometry.vertices[p.a].position;P=h.geometry.vertices[p.b].position;J=h.geometry.vertices[p.c].position;
R=h.geometry.vertices[p.d].position;K.push(O.x,O.y,O.z);K.push(P.x,P.y,P.z);K.push(J.x,J.y,J.z);K.push(R.x,R.y,R.z);if(h.geometry.hasTangents){O=h.geometry.vertices[p.a].tangent;P=h.geometry.vertices[p.b].tangent;J=h.geometry.vertices[p.c].tangent;p=h.geometry.vertices[p.d].tangent;r.push(O.x,O.y,O.z,O.w);r.push(P.x,P.y,P.z,P.w);r.push(J.x,J.y,J.z,J.w);r.push(p.x,p.y,p.z,p.w)}if(E.length==4&&T)for(p=0;p<4;p++)W.push(E[p].x,E[p].y,E[p].z);else for(p=0;p<4;p++)W.push(B.x,B.y,B.z);if(q)for(p=0;p<4;p++)s.push(q[p].u,
q[p].v);V.push(w,w+1,w+2);V.push(w,w+2,w+3);F.push(w,w+1);F.push(w,w+2);F.push(w,w+3);F.push(w+1,w+2);F.push(w+2,w+3);w+=4}}if(K.length){C.__webGLVertexBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,C.__webGLVertexBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(K),c.STATIC_DRAW);C.__webGLNormalBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,C.__webGLNormalBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(W),c.STATIC_DRAW);if(h.geometry.hasTangents){C.__webGLTangentBuffer=c.createBuffer();
c.bindBuffer(c.ARRAY_BUFFER,C.__webGLTangentBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(r),c.STATIC_DRAW)}if(s.length>0){C.__webGLUVBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,C.__webGLUVBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(s),c.STATIC_DRAW)}C.__webGLFaceBuffer=c.createBuffer();c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,C.__webGLFaceBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,new Uint16Array(V),c.STATIC_DRAW);C.__webGLLineBuffer=c.createBuffer();c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,
C.__webGLLineBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,new Uint16Array(F),c.STATIC_DRAW);C.__webGLFaceCount=V.length;C.__webGLLineCount=F.length}};this.renderBuffer=function(h,m,t,l,q){var p,E,B,O,P,J,R,V,F;if(l instanceof THREE.MeshShaderMaterial||l instanceof THREE.MeshDepthMaterial||l instanceof THREE.MeshNormalMaterial||l instanceof THREE.MeshBasicMaterial){if(!l.program){if(l instanceof THREE.MeshDepthMaterial){b(l,THREE.ShaderLib.depth);l.uniforms.mNear.value=h.near;l.uniforms.mFar.value=
h.far}else if(l instanceof THREE.MeshNormalMaterial)b(l,THREE.ShaderLib.normal);else if(l instanceof THREE.MeshBasicMaterial){b(l,THREE.ShaderLib.basic);e(l,t)}l.program=d(l.fragment_shader,l.vertex_shader,{fog:t,map:l.map,env_map:l.env_map});R=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(F in l.uniforms)R.push(F);k(l.program,R);j(l.program,["position","normal","uv","tangent"])}F=l.program}else F=y;if(F!=u){c.useProgram(F);u=F}F==y&&this.setupLights(F,
m);this.loadCamera(F,h);this.loadMatrices(F);l instanceof THREE.MeshBasicMaterial&&e(l,t);if(l instanceof THREE.MeshShaderMaterial||l instanceof THREE.MeshDepthMaterial||l instanceof THREE.MeshNormalMaterial||l instanceof THREE.MeshBasicMaterial){B=l.wireframe;O=l.wireframe_linewidth;h=F;m=l.uniforms;var K;for(p in m){V=m[p].type;R=m[p].value;K=h.uniforms[p];if(V=="i")c.uniform1i(K,R);else if(V=="f")c.uniform1f(K,R);else if(V=="v2")c.uniform2f(K,R.x,R.y);else if(V=="v3")c.uniform3f(K,R.x,R.y,R.z);
else if(V=="c")c.uniform3f(K,R.r,R.g,R.b);else if(V=="t"){c.uniform1i(K,R);if(V=m[p].texture)V.image instanceof Array&&V.image.length==6?f(V,R):g(V,R)}}}if(l instanceof THREE.MeshPhongMaterial||l instanceof THREE.MeshLambertMaterial){p=l.color;E=l.opacity;B=l.wireframe;O=l.wireframe_linewidth;P=l.map;J=l.env_map;m=l.combine==THREE.MixOperation;h=l.reflectivity;V=l.env_map&&l.env_map.mapping instanceof THREE.CubeRefractionMapping;R=l.refraction_ratio;c.uniform4f(F.uniforms.mColor,p.r*E,p.g*E,p.b*E,
E);c.uniform1i(F.uniforms.mixEnvMap,m);c.uniform1f(F.uniforms.mReflectivity,h);c.uniform1i(F.uniforms.useRefract,V);c.uniform1f(F.uniforms.mRefractionRatio,R);if(t){c.uniform3f(F.uniforms.fogColor,t.color.r,t.color.g,t.color.b);if(t instanceof THREE.Fog){c.uniform1f(F.uniforms.fogNear,t.near);c.uniform1f(F.uniforms.fogFar,t.far)}else t instanceof THREE.FogExp2&&c.uniform1f(F.uniforms.fogDensity,t.density)}}if(l instanceof THREE.MeshPhongMaterial){t=l.ambient;p=l.specular;l=l.shininess;c.uniform4f(F.uniforms.mAmbient,
t.r,t.g,t.b,E);c.uniform4f(F.uniforms.mSpecular,p.r,p.g,p.b,E);c.uniform1f(F.uniforms.mShininess,l);c.uniform1i(F.uniforms.material,2)}else l instanceof THREE.MeshLambertMaterial&&c.uniform1i(F.uniforms.material,1);if(P){g(P,0);c.uniform1i(F.uniforms.tMap,0);c.uniform1i(F.uniforms.enableMap,1)}else c.uniform1i(F.uniforms.enableMap,0);if(J){f(J,1);c.uniform1i(F.uniforms.tCube,1);c.uniform1i(F.uniforms.enableCubeMap,1)}else c.uniform1i(F.uniforms.enableCubeMap,0);E=F.attributes;c.bindBuffer(c.ARRAY_BUFFER,
q.__webGLVertexBuffer);c.vertexAttribPointer(E.position,3,c.FLOAT,false,0,0);c.enableVertexAttribArray(E.position);if(E.normal>=0){c.bindBuffer(c.ARRAY_BUFFER,q.__webGLNormalBuffer);c.vertexAttribPointer(E.normal,3,c.FLOAT,false,0,0);c.enableVertexAttribArray(E.normal)}if(E.tangent>=0){c.bindBuffer(c.ARRAY_BUFFER,q.__webGLTangentBuffer);c.vertexAttribPointer(E.tangent,4,c.FLOAT,false,0,0);c.enableVertexAttribArray(E.tangent)}if(E.uv>=0)if(q.__webGLUVBuffer){c.bindBuffer(c.ARRAY_BUFFER,q.__webGLUVBuffer);
c.vertexAttribPointer(E.uv,2,c.FLOAT,false,0,0);c.enableVertexAttribArray(E.uv)}else c.disableVertexAttribArray(E.uv);if(B){c.lineWidth(O);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,q.__webGLLineBuffer);c.drawElements(c.LINES,q.__webGLLineCount,c.UNSIGNED_SHORT,0)}else{c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,q.__webGLFaceBuffer);c.drawElements(c.TRIANGLES,q.__webGLFaceCount,c.UNSIGNED_SHORT,0)}};this.renderPass=function(h,m,t,l,q,p,E){var B,O,P,J,R;P=0;for(J=l.materials.length;P<J;P++){B=l.materials[P];if(B instanceof
THREE.MeshFaceMaterial){B=0;for(O=q.materials.length;B<O;B++)if((R=q.materials[B])&&R.blending==p&&R.opacity<1==E){this.setBlending(R.blending);this.renderBuffer(h,m,t,R,q)}}else if((R=B)&&R.blending==p&&R.opacity<1==E){this.setBlending(R.blending);this.renderBuffer(h,m,t,R,q)}}};this.render=function(h,m){var t,l,q,p,E=h.lights,B=h.fog;this.initWebGLObjects(h);this.autoClear&&this.clear();m.autoUpdateMatrix&&m.updateMatrix();M.set(m.matrix.flatten());D.set(m.projectionMatrix.flatten());t=0;for(l=
h.__webGLObjects.length;t<l;t++){q=h.__webGLObjects[t];p=q.object;q=q.buffer;if(p.visible){this.setupMatrices(p,m);this.renderPass(m,E,B,p,q,THREE.NormalBlending,false)}}t=0;for(l=h.__webGLObjects.length;t<l;t++){q=h.__webGLObjects[t];p=q.object;q=q.buffer;if(p.visible){this.setupMatrices(p,m);this.renderPass(m,E,B,p,q,THREE.AdditiveBlending,false);this.renderPass(m,E,B,p,q,THREE.SubtractiveBlending,false);this.renderPass(m,E,B,p,q,THREE.AdditiveBlending,true);this.renderPass(m,E,B,p,q,THREE.SubtractiveBlending,
true);this.renderPass(m,E,B,p,q,THREE.NormalBlending,true)}}};this.initWebGLObjects=function(h){var m,t,l,q,p,E;if(!h.__webGLObjects){h.__webGLObjects=[];h.__webGLObjectsMap={}}m=0;for(t=h.objects.length;m<t;m++){l=h.objects[m];if(h.__webGLObjectsMap[l.id]==undefined)h.__webGLObjectsMap[l.id]={};E=h.__webGLObjectsMap[l.id];if(l instanceof THREE.Mesh)for(p in l.geometry.geometryChunks){q=l.geometry.geometryChunks[p];q.__webGLVertexBuffer||this.createBuffers(l,p);if(E[p]==undefined){q={buffer:q,object:l};
h.__webGLObjects.push(q);E[p]=1}}}};this.removeObject=function(h,m){var t,l;for(t=h.__webGLObjects.length-1;t>=0;t--){l=h.__webGLObjects[t].object;m==l&&h.__webGLObjects.splice(t,1)}};this.setupMatrices=function(h,m){h.autoUpdateMatrix&&h.updateMatrix();z.multiply(m.matrix,h.matrix);v.set(z.flatten());A=THREE.Matrix4.makeInvert3x3(z).transpose();o.set(A.m);H.set(h.matrix.flatten())};this.loadMatrices=function(h){c.uniformMatrix4fv(h.uniforms.viewMatrix,false,M);c.uniformMatrix4fv(h.uniforms.modelViewMatrix,
false,v);c.uniformMatrix4fv(h.uniforms.projectionMatrix,false,D);c.uniformMatrix3fv(h.uniforms.normalMatrix,false,o);c.uniformMatrix4fv(h.uniforms.objectMatrix,false,H)};this.loadCamera=function(h,m){c.uniform3f(h.uniforms.cameraPosition,m.position.x,m.position.y,m.position.z)};this.setBlending=function(h){switch(h){case THREE.AdditiveBlending:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ONE,c.ONE);break;case THREE.SubtractiveBlending:c.blendFunc(c.DST_COLOR,c.ZERO);break;default:c.blendEquation(c.FUNC_ADD);
c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=function(h,m){if(h){!m||m=="ccw"?c.frontFace(c.CCW):c.frontFace(c.CW);if(h=="back")c.cullFace(c.BACK);else h=="front"?c.cullFace(c.FRONT):c.cullFace(c.FRONT_AND_BACK);c.enable(c.CULL_FACE)}else c.disable(c.CULL_FACE)};this.supportsVertexTextures=function(){return c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_uniforms:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, 1.0 ), fogFactor );\n#endif"};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",
vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},
fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},fragment_shader:["uniform vec3 color;\nuniform float opacity;\n#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif\n#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",THREE.Snippets.fog_uniforms,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nvec4 cubeColor = vec4( 1.0, 1.0, 1.0, 1.0 );\n#ifdef USE_MAP\nmapColor = texture2D( map, vUv );\n#endif\n#ifdef USE_ENVMAP\ncubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = mix( mColor * mapColor, cubeColor, reflectivity );\n} else {\ngl_FragColor = mColor * mapColor * cubeColor;\n}\n#else\ngl_FragColor = mColor * mapColor;\n#endif",
THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif\n#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif\nvoid main() {\n#ifdef USE_MAP\nvUv = uv;\n#endif\n#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"}};
THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
var GeometryUtils={merge:function(a,b){var e=b instanceof THREE.Mesh,d=a.vertices.length,f=e?b.geometry:b,g=a.vertices,k=f.vertices,j=a.faces,i=f.faces,n=a.uvs;f=f.uvs;e&&b.updateMatrix();for(var x=0,c=k.length;x<c;x++){var u=new THREE.Vertex(k[x].position.clone());e&&b.matrix.multiplyVector3(u.position);g.push(u)}x=0;for(c=i.length;x<c;x++){k=i[x];var y,z=k.vertexNormals;if(k instanceof THREE.Face3)y=new THREE.Face3(k.a+d,k.b+d,k.c+d);else if(k instanceof THREE.Face4)y=new THREE.Face4(k.a+d,k.b+
d,k.c+d,k.d+d);y.centroid.copy(k.centroid);y.normal.copy(k.normal);e=0;for(g=z.length;e<g;e++){u=z[e];y.vertexNormals.push(u.clone())}y.materials=k.materials.slice();j.push(y)}x=0;for(c=f.length;x<c;x++){d=f[x];j=[];e=0;for(g=d.length;e<g;e++)j.push(new THREE.UV(d[e].u,d[e].v));n.push(j)}}},ImageUtils={loadTexture:function(a,b){var e=new Image;e.onload=function(){this.loaded=true};e.src=a;return new THREE.Texture(e,b)},loadArray:function(a){var b,e,d=[];b=d.loadCount=0;for(e=a.length;b<e;++b){d[b]=
new Image;d[b].loaded=0;d[b].onload=function(){d.loadCount+=1;this.loaded=true};d[b].src=a[b]}return d}},SceneUtils={addMesh:function(a,b,e,d,f,g,k,j,i,n){b=new THREE.Mesh(b,n);b.scale.x=b.scale.y=b.scale.z=e;b.position.x=d;b.position.y=f;b.position.z=g;b.rotation.x=k;b.rotation.y=j;b.rotation.z=i;a.addObject(b);return b},addPanoramaCubeWebGL:function(a,b,e){var d=ShaderUtils.lib.cube;d.uniforms.tCube.texture=e;e=new THREE.MeshShaderMaterial({fragment_shader:d.fragment_shader,vertex_shader:d.vertex_shader,
uniforms:d.uniforms});b=new THREE.Mesh(new Cube(b,b,b,1,1,null,true),e);a.addObject(b);return b},addPanoramaCube:function(a,b,e){var d=[];d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[0])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[1])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[2])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[3])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[4])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[5])}));
b=new THREE.Mesh(new Cube(b,b,b,1,1,d,true),new THREE.MeshFaceMaterial);a.addObject(b);return b},addPanoramaCubePlanes:function(a,b,e){var d=b/2;b=new Plane(b,b);var f=Math.PI/2,g=Math.PI;SceneUtils.addMesh(a,b,1,0,0,-d,0,0,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[5])}));SceneUtils.addMesh(a,b,1,-d,0,0,0,f,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[0])}));SceneUtils.addMesh(a,b,1,d,0,0,0,-f,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[1])}));SceneUtils.addMesh(a,
b,1,0,d,0,f,0,g,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[2])}));SceneUtils.addMesh(a,b,1,0,-d,0,-f,0,g,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[3])}))}},ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertex_shader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main(void) {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tNormal:{type:"t",value:2,texture:null},tAO:{type:"t",value:3,texture:null},uNormalScale:{type:"f",value:1},tDisplacement:{type:"t",value:4,texture:null},uDisplacementBias:{type:"f",value:-0.5},uDisplacementScale:{type:"f",value:2.5},uPointLightPos:{type:"v3",value:new THREE.Vector3},uPointLightColor:{type:"c",value:new THREE.Color(15658734)},uDirLightPos:{type:"v3",value:new THREE.Vector3},
uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30}},fragment_shader:"uniform vec3 uDirLightPos;\nuniform vec3 uAmbientLightColor;\nuniform vec3 uDirLightColor;\nuniform vec3 uPointLightColor;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform bool enableDiffuse;\nuniform bool enableAO;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tAO;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 diffuseTex = vec3( 1.0, 1.0, 1.0 );\nvec3 aoTex = vec3( 1.0, 1.0, 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse )\ndiffuseTex = texture2D( tDiffuse, vUv ).xyz;\nif( enableAO )\naoTex = texture2D( tAO, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec3 pointVector = normalize( vPointLightVector );\nvec3 pointHalfVector = normalize( vPointLightVector + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, uShininess );\npointDiffuse  += vec4( uDiffuseColor, 1.0 ) * pointDiffuseWeight;\npointSpecular += vec4( uSpecularColor, 1.0 ) * pointSpecularWeight;\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 lDirection = viewMatrix * vec4( uDirLightPos, 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, uShininess );\ndirDiffuse  += vec4( uDiffuseColor, 1.0 ) * dirDiffuseWeight;\ndirSpecular += vec4( uSpecularColor, 1.0 ) * dirSpecularWeight;\nvec4 totalLight = vec4( uAmbientLightColor * uAmbientColor, 1.0 );\ntotalLight += vec4( uDirLightColor, 1.0 ) * ( dirDiffuse + dirSpecular );\ntotalLight += vec4( uPointLightColor, 1.0 ) * ( pointDiffuse + pointSpecular );\ngl_FragColor = vec4( totalLight.xyz * aoTex * diffuseTex, 1.0 );\n}",
vertex_shader:"attribute vec4 tangent;\nuniform vec3 uPointLightPos;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec4 lPosition = viewMatrix * vec4( uPointLightPos, 1.0 );\nvPointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}"},
basic:{uniforms:{},vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"void main() {\ngl_FragColor = vec4(1.0, 0.0, 0.0, 0.5);\n}"},cube:{uniforms:{tCube:{type:"t",value:1,texture:null}},vertex_shader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( - wPos.x, wPos.yz ) );\n}"}}},Cube=function(a,b,e,d,f,g,k,j){function i(A,M,v,D,o,H,N,X){var Q,I,h=d||1,m=f||1,t=h+1,l=m+1,q=o/2,p=H/2;o=o/h;var E=H/m,B=n.vertices.length;if(A=="x"&&M=="y"||A=="y"&&M=="x")Q="z";else if(A=="x"&&M=="z"||A=="z"&&M=="x")Q="y";else if(A=="z"&&M=="y"||A=="y"&&M=="z")Q="x";for(I=0;I<l;I++)for(H=0;H<
t;H++){var O=new THREE.Vector3;O[A]=(H*o-q)*v;O[M]=(I*E-p)*D;O[Q]=N;n.vertices.push(new THREE.Vertex(O))}for(I=0;I<m;I++)for(H=0;H<h;H++){n.faces.push(new THREE.Face4(H+t*I+B,H+t*(I+1)+B,H+1+t*(I+1)+B,H+1+t*I+B,null,X));n.uvs.push([new THREE.UV(H/h,I/m),new THREE.UV(H/h,(I+1)/m),new THREE.UV((H+1)/h,(I+1)/m),new THREE.UV((H+1)/h,I/m)])}}THREE.Geometry.call(this);var n=this,x=a/2,c=b/2,u=e/2;k=k?-1:1;if(g!==undefined)if(g instanceof Array)this.materials=g;else{this.materials=[];for(var y=0;y<6;y++)this.materials.push([g])}else this.materials=
[];this.sides={px:true,nx:true,py:true,ny:true,pz:true,nz:true};if(j!=undefined)for(var z in j)if(this.sides[z]!=undefined)this.sides[z]=j[z];this.sides.px&&i("z","y",1*k,-1,e,b,-x,this.materials[0]);this.sides.nx&&i("z","y",-1*k,-1,e,b,x,this.materials[1]);this.sides.py&&i("x","z",1*k,1,a,e,c,this.materials[2]);this.sides.ny&&i("x","z",1*k,-1,a,e,-c,this.materials[3]);this.sides.pz&&i("x","y",1*k,-1,a,b,u,this.materials[4]);this.sides.nz&&i("x","y",-1*k,-1,a,b,-u,this.materials[5]);(function(){for(var A=
[],M=[],v=0,D=n.vertices.length;v<D;v++){for(var o=n.vertices[v],H=false,N=0,X=A.length;N<X;N++){var Q=A[N];if(o.position.x==Q.position.x&&o.position.y==Q.position.y&&o.position.z==Q.position.z){M[v]=N;H=true;break}}if(!H){M[v]=A.length;A.push(new THREE.Vertex(o.position.clone()))}}v=0;for(D=n.faces.length;v<D;v++){o=n.faces[v];o.a=M[o.a];o.b=M[o.b];o.c=M[o.c];o.d=M[o.d]}n.vertices=A})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cube.prototype=new THREE.Geometry;
Cube.prototype.constructor=Cube;
var Cylinder=function(a,b,e,d,f){function g(n,x,c){k.vertices.push(new THREE.Vertex(new THREE.Vector3(n,x,c)))}THREE.Geometry.call(this);var k=this,j=Math.PI,i;for(i=0;i<a;i++)g(Math.sin(2*j*i/a)*b,Math.cos(2*j*i/a)*b,0);for(i=0;i<a;i++)g(Math.sin(2*j*i/a)*e,Math.cos(2*j*i/a)*e,d);for(i=0;i<a;i++)k.faces.push(new THREE.Face4(i,i+a,a+(i+1)%a,(i+1)%a));if(e!=0){g(0,0,-f);for(i=a;i<a+a/2;i++)k.faces.push(new THREE.Face4(2*a,(2*i-2*a)%a,(2*i-2*a+1)%a,(2*i-2*a+2)%a))}if(b!=0){g(0,0,d+f);for(i=a+a/2;i<
2*a;i++)k.faces.push(new THREE.Face4((2*i-2*a+2)%a+a,(2*i-2*a+1)%a+a,(2*i-2*a)%a+a,2*a+1))}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cylinder.prototype=new THREE.Geometry;Cylinder.prototype.constructor=Cylinder;
var Plane=function(a,b,e,d){THREE.Geometry.call(this);var f,g=a/2,k=b/2;e=e||1;d=d||1;var j=e+1,i=d+1;a=a/e;var n=b/d;for(f=0;f<i;f++)for(b=0;b<j;b++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(b*a-g,-(f*n-k),0)));for(f=0;f<d;f++)for(b=0;b<e;b++){this.faces.push(new THREE.Face4(b+j*f,b+j*(f+1),b+1+j*(f+1),b+1+j*f));this.uvs.push([new THREE.UV(b/e,f/d),new THREE.UV(b/e,(f+1)/d),new THREE.UV((b+1)/e,(f+1)/d),new THREE.UV((b+1)/e,f/d)])}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};
Plane.prototype=new THREE.Geometry;Plane.prototype.constructor=Plane;
var Sphere=function(a,b,e){THREE.Geometry.call(this);var d,f=Math.PI,g=Math.max(3,b||8),k=Math.max(2,e||6);b=[];for(e=0;e<k+1;e++){d=e/k;var j=a*Math.cos(d*f),i=a*Math.sin(d*f),n=[],x=0;for(d=0;d<g;d++){var c=2*d/g,u=i*Math.sin(c*f);c=i*Math.cos(c*f);(e==0||e==k)&&d>0||(x=this.vertices.push(new THREE.Vertex(new THREE.Vector3(c,j,u)))-1);n.push(x)}b.push(n)}var y,z,A;f=b.length;for(e=0;e<f;e++){g=b[e].length;if(e>0)for(d=0;d<g;d++){n=d==g-1;k=b[e][n?0:d+1];j=b[e][n?g-1:d];i=b[e-1][n?g-1:d];n=b[e-1][n?
0:d+1];u=e/(f-1);y=(e-1)/(f-1);z=(d+1)/g;c=d/g;x=new THREE.UV(1-z,u);u=new THREE.UV(1-c,u);c=new THREE.UV(1-c,y);var M=new THREE.UV(1-z,y);if(e<b.length-1){y=this.vertices[k].position.clone();z=this.vertices[j].position.clone();A=this.vertices[i].position.clone();y.normalize();z.normalize();A.normalize();this.faces.push(new THREE.Face3(k,j,i,[new THREE.Vector3(y.x,y.y,y.z),new THREE.Vector3(z.x,z.y,z.z),new THREE.Vector3(A.x,A.y,A.z)]));this.uvs.push([x,u,c])}if(e>1){y=this.vertices[k].position.clone();
z=this.vertices[i].position.clone();A=this.vertices[n].position.clone();y.normalize();z.normalize();A.normalize();this.faces.push(new THREE.Face3(k,i,n,[new THREE.Vector3(y.x,y.y,y.z),new THREE.Vector3(z.x,z.y,z.z),new THREE.Vector3(A.x,A.y,A.z)]));this.uvs.push([x,c,M])}}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial();this.boundingSphere={radius:a}};Sphere.prototype=new THREE.Geometry;Sphere.prototype.constructor=Sphere;
THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?this.addStatusElement():null};
THREE.Loader.prototype={addStatusElement:function(){var a=document.createElement("div");a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="#b00";a.style.color="#fff";a.style.width="140px";a.style.padding="0.25em 0.25em 0.25em 0.5em";a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ";b+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1E3).toFixed(2)+" KB";this.statusDomElement.innerHTML=
b},loadAsciiOld:function(a,b){var e=document.createElement("script");e.type="text/javascript";e.onload=b;e.src=a;document.getElementsByTagName("head")[0].appendChild(e)},loadAscii:function(a,b,e){var d=(new Date).getTime();a=new Worker(a);a.onmessage=function(f){THREE.Loader.prototype.createModel(f.data,b,e)};a.postMessage(d)},loadBinary:function(a,b,e){var d=(new Date).getTime();a=new Worker(a);var f=this.showProgress?THREE.Loader.prototype.updateProgress:null;a.onmessage=function(g){THREE.Loader.prototype.loadAjaxBuffers(g.data.buffers,
g.data.materials,b,e,f)};a.onerror=function(g){alert("worker.onerror: "+g.message+"\n"+g.data);g.preventDefault()};a.postMessage(d)},loadAjaxBuffers:function(a,b,e,d,f){var g=new XMLHttpRequest,k=d+"/"+a,j=0;g.onreadystatechange=function(){if(g.readyState==4)g.status==200||g.status==0?THREE.Loader.prototype.createBinModel(g.responseText,e,d,b):alert("Couldn't load ["+k+"] ["+g.status+"]");else if(g.readyState==3){if(f){if(j==0)j=g.getResponseHeader("Content-Length");f({total:j,loaded:g.responseText.length})}}else if(g.readyState==
2)j=g.getResponseHeader("Content-Length")};g.open("GET",k,true);g.overrideMimeType("text/plain; charset=x-user-defined");g.setRequestHeader("Content-Type","text/plain");g.send(null)},createBinModel:function(a,b,e,d){var f=function(g){function k(r,s){var w=x(r,s),C=x(r,s+1),T=x(r,s+2),ba=x(r,s+3),fa=(ba<<1&255|T>>7)-127;w=(T&127)<<16|C<<8|w;if(w==0&&fa==-127)return 0;return(1-2*(ba>>7))*(1+w*Math.pow(2,-23))*Math.pow(2,fa)}function j(r,s){var w=x(r,s),C=x(r,s+1),T=x(r,s+2);return(x(r,s+3)<<24)+(T<<
16)+(C<<8)+w}function i(r,s){var w=x(r,s);return(x(r,s+1)<<8)+w}function n(r,s){var w=x(r,s);return w>127?w-256:w}function x(r,s){return r.charCodeAt(s)&255}function c(r){var s,w,C;s=j(a,r);w=j(a,r+X);C=j(a,r+Q);r=i(a,r+I);THREE.Loader.prototype.f3(v,s,w,C,r)}function u(r){var s,w,C,T,ba,fa;s=j(a,r);w=j(a,r+X);C=j(a,r+Q);T=i(a,r+I);ba=j(a,r+h);fa=j(a,r+m);r=j(a,r+t);THREE.Loader.prototype.f3n(v,H,s,w,C,T,ba,fa,r)}function y(r){var s,w,C,T;s=j(a,r);w=j(a,r+l);C=j(a,r+q);T=j(a,r+p);r=i(a,r+E);THREE.Loader.prototype.f4(v,
s,w,C,T,r)}function z(r){var s,w,C,T,ba,fa,xa,$;s=j(a,r);w=j(a,r+l);C=j(a,r+q);T=j(a,r+p);ba=i(a,r+E);fa=j(a,r+B);xa=j(a,r+O);$=j(a,r+P);r=j(a,r+J);THREE.Loader.prototype.f4n(v,H,s,w,C,T,ba,fa,xa,$,r)}function A(r){var s,w;s=j(a,r);w=j(a,r+R);r=j(a,r+V);THREE.Loader.prototype.uv3(v,N[s*2],N[s*2+1],N[w*2],N[w*2+1],N[r*2],N[r*2+1])}function M(r){var s,w,C;s=j(a,r);w=j(a,r+F);C=j(a,r+K);r=j(a,r+W);THREE.Loader.prototype.uv4(v,N[s*2],N[s*2+1],N[w*2],N[w*2+1],N[C*2],N[C*2+1],N[r*2],N[r*2+1])}var v=this,
D=0,o,H=[],N=[],X,Q,I,h,m,t,l,q,p,E,B,O,P,J,R,V,F,K,W;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(v,d,g);o={signature:a.substr(D,8),header_bytes:x(a,D+8),vertex_coordinate_bytes:x(a,D+9),normal_coordinate_bytes:x(a,D+10),uv_coordinate_bytes:x(a,D+11),vertex_index_bytes:x(a,D+12),normal_index_bytes:x(a,D+13),uv_index_bytes:x(a,D+14),material_index_bytes:x(a,D+15),nvertices:j(a,D+16),nnormals:j(a,D+16+4),nuvs:j(a,D+16+8),ntri_flat:j(a,D+16+12),ntri_smooth:j(a,D+16+16),ntri_flat_uv:j(a,
D+16+20),ntri_smooth_uv:j(a,D+16+24),nquad_flat:j(a,D+16+28),nquad_smooth:j(a,D+16+32),nquad_flat_uv:j(a,D+16+36),nquad_smooth_uv:j(a,D+16+40)};D+=o.header_bytes;X=o.vertex_index_bytes;Q=o.vertex_index_bytes*2;I=o.vertex_index_bytes*3;h=o.vertex_index_bytes*3+o.material_index_bytes;m=o.vertex_index_bytes*3+o.material_index_bytes+o.normal_index_bytes;t=o.vertex_index_bytes*3+o.material_index_bytes+o.normal_index_bytes*2;l=o.vertex_index_bytes;q=o.vertex_index_bytes*2;p=o.vertex_index_bytes*3;E=o.vertex_index_bytes*
4;B=o.vertex_index_bytes*4+o.material_index_bytes;O=o.vertex_index_bytes*4+o.material_index_bytes+o.normal_index_bytes;P=o.vertex_index_bytes*4+o.material_index_bytes+o.normal_index_bytes*2;J=o.vertex_index_bytes*4+o.material_index_bytes+o.normal_index_bytes*3;R=o.uv_index_bytes;V=o.uv_index_bytes*2;F=o.uv_index_bytes;K=o.uv_index_bytes*2;W=o.uv_index_bytes*3;D+=function(r){var s,w,C,T=o.vertex_coordinate_bytes*3,ba=r+o.nvertices*T;for(r=r;r<ba;r+=T){s=k(a,r);w=k(a,r+o.vertex_coordinate_bytes);C=
k(a,r+o.vertex_coordinate_bytes*2);THREE.Loader.prototype.v(v,s,w,C)}return o.nvertices*T}(D);D+=function(r){var s,w,C,T=o.normal_coordinate_bytes*3,ba=r+o.nnormals*T;for(r=r;r<ba;r+=T){s=n(a,r);w=n(a,r+o.normal_coordinate_bytes);C=n(a,r+o.normal_coordinate_bytes*2);H.push(s/127,w/127,C/127)}return o.nnormals*T}(D);D+=function(r){var s,w,C=o.uv_coordinate_bytes*2,T=r+o.nuvs*C;for(r=r;r<T;r+=C){s=k(a,r);w=k(a,r+o.uv_coordinate_bytes);N.push(s,w)}return o.nuvs*C}(D);D+=function(r){var s,w=o.vertex_index_bytes*
3+o.material_index_bytes,C=r+o.ntri_flat*w;for(s=r;s<C;s+=w)c(s);return C-r}(D);D+=function(r){var s,w=o.vertex_index_bytes*3+o.material_index_bytes+o.normal_index_bytes*3,C=r+o.ntri_smooth*w;for(s=r;s<C;s+=w)u(s);return C-r}(D);D+=function(r){var s,w=o.vertex_index_bytes*3+o.material_index_bytes,C=w+o.uv_index_bytes*3,T=r+o.ntri_flat_uv*C;for(s=r;s<T;s+=C){c(s);A(s+w)}return T-r}(D);D+=function(r){var s,w=o.vertex_index_bytes*3+o.material_index_bytes+o.normal_index_bytes*3,C=w+o.uv_index_bytes*3,
T=r+o.ntri_smooth_uv*C;for(s=r;s<T;s+=C){u(s);A(s+w)}return T-r}(D);D+=function(r){var s,w=o.vertex_index_bytes*4+o.material_index_bytes,C=r+o.nquad_flat*w;for(s=r;s<C;s+=w)y(s);return C-r}(D);D+=function(r){var s,w=o.vertex_index_bytes*4+o.material_index_bytes+o.normal_index_bytes*4,C=r+o.nquad_smooth*w;for(s=r;s<C;s+=w)z(s);return C-r}(D);D+=function(r){var s,w=o.vertex_index_bytes*4+o.material_index_bytes,C=w+o.uv_index_bytes*4,T=r+o.nquad_flat_uv*C;for(s=r;s<T;s+=C){y(s);M(s+w)}return T-r}(D);
D+=function(r){var s,w=o.vertex_index_bytes*4+o.material_index_bytes+o.normal_index_bytes*4,C=w+o.uv_index_bytes*4,T=r+o.nquad_smooth_uv*C;for(s=r;s<T;s+=C){z(s);M(s+w)}return T-r}(D);this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};f.prototype=new THREE.Geometry;f.prototype.constructor=f;b(new f(e))},createModel:function(a,b,e){var d=function(f){var g=this;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(g,a.materials,f);(function(){var k,j,i,n,x;k=0;for(j=
a.vertices.length;k<j;k+=3){i=a.vertices[k];n=a.vertices[k+1];x=a.vertices[k+2];THREE.Loader.prototype.v(g,i,n,x)}})();(function(){function k(z,A){THREE.Loader.prototype.f3(g,z[A],z[A+1],z[A+2],z[A+3])}function j(z,A){THREE.Loader.prototype.f3n(g,a.normals,z[A],z[A+1],z[A+2],z[A+3],z[A+4],z[A+5],z[A+6])}function i(z,A){THREE.Loader.prototype.f4(g,z[A],z[A+1],z[A+2],z[A+3],z[A+4])}function n(z,A){THREE.Loader.prototype.f4n(g,a.normals,z[A],z[A+1],z[A+2],z[A+3],z[A+4],z[A+5],z[A+6],z[A+7],z[A+8])}function x(z,
A){var M,v,D;M=z[A];v=z[A+1];D=z[A+2];THREE.Loader.prototype.uv3(g,a.uvs[M*2],a.uvs[M*2+1],a.uvs[v*2],a.uvs[v*2+1],a.uvs[D*2],a.uvs[D*2+1])}function c(z,A){var M,v,D,o;M=z[A];v=z[A+1];D=z[A+2];o=z[A+3];THREE.Loader.prototype.uv4(g,a.uvs[M*2],a.uvs[M*2+1],a.uvs[v*2],a.uvs[v*2+1],a.uvs[D*2],a.uvs[D*2+1],a.uvs[o*2],a.uvs[o*2+1])}var u,y;u=0;for(y=a.triangles.length;u<y;u+=4)k(a.triangles,u);u=0;for(y=a.triangles_uv.length;u<y;u+=7){k(a.triangles_uv,u);x(a.triangles_uv,u+4)}u=0;for(y=a.triangles_n.length;u<
y;u+=7)j(a.triangles_n,u);u=0;for(y=a.triangles_n_uv.length;u<y;u+=10){j(a.triangles_n_uv,u);x(a.triangles_n_uv,u+7)}u=0;for(y=a.quads.length;u<y;u+=5)i(a.quads,u);u=0;for(y=a.quads_uv.length;u<y;u+=9){i(a.quads_uv,u);c(a.quads_uv,u+5)}u=0;for(y=a.quads_n.length;u<y;u+=9)n(a.quads_n,u);u=0;for(y=a.quads_n_uv.length;u<y;u+=13){n(a.quads_n_uv,u);c(a.quads_n_uv,u+9)}})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};d.prototype=new THREE.Geometry;d.prototype.constructor=
d;b(new d(e))},v:function(a,b,e,d){a.vertices.push(new THREE.Vertex(new THREE.Vector3(b,e,d)))},f3:function(a,b,e,d,f){a.faces.push(new THREE.Face3(b,e,d,null,a.materials[f]))},f4:function(a,b,e,d,f,g){a.faces.push(new THREE.Face4(b,e,d,f,null,a.materials[g]))},f3n:function(a,b,e,d,f,g,k,j,i){g=a.materials[g];var n=b[j*3],x=b[j*3+1];j=b[j*3+2];var c=b[i*3],u=b[i*3+1];i=b[i*3+2];a.faces.push(new THREE.Face3(e,d,f,[new THREE.Vector3(b[k*3],b[k*3+1],b[k*3+2]),new THREE.Vector3(n,x,j),new THREE.Vector3(c,
u,i)],g))},f4n:function(a,b,e,d,f,g,k,j,i,n,x){k=a.materials[k];var c=b[i*3],u=b[i*3+1];i=b[i*3+2];var y=b[n*3],z=b[n*3+1];n=b[n*3+2];var A=b[x*3],M=b[x*3+1];x=b[x*3+2];a.faces.push(new THREE.Face4(e,d,f,g,[new THREE.Vector3(b[j*3],b[j*3+1],b[j*3+2]),new THREE.Vector3(c,u,i),new THREE.Vector3(y,z,n),new THREE.Vector3(A,M,x)],k))},uv3:function(a,b,e,d,f,g,k){var j=[];j.push(new THREE.UV(b,e));j.push(new THREE.UV(d,f));j.push(new THREE.UV(g,k));a.uvs.push(j)},uv4:function(a,b,e,d,f,g,k,j,i){var n=[];
n.push(new THREE.UV(b,e));n.push(new THREE.UV(d,f));n.push(new THREE.UV(g,k));n.push(new THREE.UV(j,i));a.uvs.push(n)},init_materials:function(a,b,e){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=[THREE.Loader.prototype.createMaterial(b[d],e)]},createMaterial:function(a,b){function e(g){g=Math.log(g)/Math.LN2;return Math.floor(g)==g}var d,f;if(a.map_diffuse&&b){f=document.createElement("canvas");d=new THREE.MeshLambertMaterial({map:new THREE.Texture(f)});f=new Image;f.onload=function(){if(!e(this.width)||
!e(this.height)){var g=Math.pow(2,Math.round(Math.log(this.width)/Math.LN2)),k=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));d.map.image.width=g;d.map.image.height=k;d.map.image.getContext("2d").drawImage(this,0,0,g,k)}else d.map.image=this;d.map.image.loaded=1};f.src=b+"/"+a.map_diffuse}else if(a.col_diffuse){f=(a.col_diffuse[0]*255<<16)+(a.col_diffuse[1]*255<<8)+a.col_diffuse[2]*255;d=new THREE.MeshLambertMaterial({color:f,opacity:a.transparency})}else d=a.a_dbg_color?new THREE.MeshLambertMaterial({color:a.a_dbg_color}):
new THREE.MeshLambertMaterial({color:15658734});return d}};
