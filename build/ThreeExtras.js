// ThreeExtras.js r31 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,c,f){this.r=a;this.g=c;this.b=f;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+
","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,c){this.x=a||0;this.y=c||0};
THREE.Vector2.prototype={set:function(a,c){this.x=a;this.y=c;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,c,f){this.x=a||0;this.y=c||0;this.z=f||0};
THREE.Vector3.prototype={set:function(a,c,f){this.x=a;this.y=c;this.z=f;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,c){this.x=a.y*c.z-a.z*c.y;this.y=a.z*c.x-a.x*c.z;this.z=a.x*c.y-a.y*c.x;return this},crossSelf:function(a){var c=this.x,f=this.y,e=this.z;this.x=f*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-f*a.x;return this},multiply:function(a,c){this.x=a.x*c.x;this.y=a.y*c.y;this.z=a.z*c.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=
a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var c=this.x-a.x,f=this.y-a.y;a=this.z-a.z;return Math.sqrt(c*c+f*f+a*a)},distanceToSquared:function(a){var c=this.x-a.x,f=this.y-a.y;a=this.z-a.z;return c*c+f*f+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=
Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,c,f,e){this.x=a||0;this.y=c||0;this.z=f||0;this.w=e||1};
THREE.Vector4.prototype={set:function(a,c,f,e){this.x=a;this.y=c;this.z=f;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;this.w=a.w+c.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;this.w=a.w-c.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,c){this.x+=(a.x-this.x)*c;this.y+=(a.y-this.y)*c;this.z+=(a.z-this.z)*c;this.w+=(a.w-this.w)*c},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,c){this.origin=a||new THREE.Vector3;this.direction=c||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var c,f,e=a.objects,h=[];a=0;for(c=e.length;a<c;a++){f=e[a];if(f instanceof THREE.Mesh)h=h.concat(this.intersectObject(f))}h.sort(function(i,l){return i.distance-l.distance});return h},intersectObject:function(a){function c(L,x,D,p){p=p.clone().subSelf(x);D=D.clone().subSelf(x);var O=L.clone().subSelf(x);L=p.dot(p);x=p.dot(D);p=p.dot(O);var K=D.dot(D);D=D.dot(O);O=1/(L*K-x*x);K=(K*p-x*D)*O;L=(L*D-x*p)*O;return K>0&&L>0&&K+L<1}var f,e,h,i,l,k,j,q,y,d,
w,A=a.geometry,B=A.vertices,C=[];f=0;for(e=A.faces.length;f<e;f++){h=A.faces[f];d=this.origin.clone();w=this.direction.clone();i=a.matrix.multiplyVector3(B[h.a].position.clone());l=a.matrix.multiplyVector3(B[h.b].position.clone());k=a.matrix.multiplyVector3(B[h.c].position.clone());j=h instanceof THREE.Face4?a.matrix.multiplyVector3(B[h.d].position.clone()):null;q=a.rotationMatrix.multiplyVector3(h.normal.clone());y=w.dot(q);if(y<0){q=q.dot((new THREE.Vector3).sub(i,d))/y;d=d.addSelf(w.multiplyScalar(q));
if(h instanceof THREE.Face3){if(c(d,i,l,k)){h={distance:this.origin.distanceTo(d),point:d,face:h,object:a};C.push(h)}}else if(h instanceof THREE.Face4)if(c(d,i,l,j)||c(d,l,k,j)){h={distance:this.origin.distanceTo(d),point:d,face:h,object:a};C.push(h)}}}return C}};
THREE.Rectangle=function(){function a(){i=e-c;l=h-f}var c,f,e,h,i,l,k=true;this.getX=function(){return c};this.getY=function(){return f};this.getWidth=function(){return i};this.getHeight=function(){return l};this.getLeft=function(){return c};this.getTop=function(){return f};this.getRight=function(){return e};this.getBottom=function(){return h};this.set=function(j,q,y,d){k=false;c=j;f=q;e=y;h=d;a()};this.addPoint=function(j,q){if(k){k=false;c=j;f=q;e=j;h=q}else{c=c<j?c:j;f=f<q?f:q;e=e>j?e:j;h=h>q?
h:q}a()};this.add3Points=function(j,q,y,d,w,A){if(k){k=false;c=j<y?j<w?j:w:y<w?y:w;f=q<d?q<A?q:A:d<A?d:A;e=j>y?j>w?j:w:y>w?y:w;h=q>d?q>A?q:A:d>A?d:A}else{c=j<y?j<w?j<c?j:c:w<c?w:c:y<w?y<c?y:c:w<c?w:c;f=q<d?q<A?q<f?q:f:A<f?A:f:d<A?d<f?d:f:A<f?A:f;e=j>y?j>w?j>e?j:e:w>e?w:e:y>w?y>e?y:e:w>e?w:e;h=q>d?q>A?q>h?q:h:A>h?A:h:d>A?d>h?d:h:A>h?A:h}a()};this.addRectangle=function(j){if(k){k=false;c=j.getLeft();f=j.getTop();e=j.getRight();h=j.getBottom()}else{c=c<j.getLeft()?c:j.getLeft();f=f<j.getTop()?f:j.getTop();
e=e>j.getRight()?e:j.getRight();h=h>j.getBottom()?h:j.getBottom()}a()};this.inflate=function(j){c-=j;f-=j;e+=j;h+=j;a()};this.minSelf=function(j){c=c>j.getLeft()?c:j.getLeft();f=f>j.getTop()?f:j.getTop();e=e<j.getRight()?e:j.getRight();h=h<j.getBottom()?h:j.getBottom();a()};this.instersects=function(j){return Math.min(e,j.getRight())-Math.max(c,j.getLeft())>=0&&Math.min(h,j.getBottom())-Math.max(f,j.getTop())>=0};this.empty=function(){k=true;h=e=f=c=0;a()};this.isEmpty=function(){return k};this.toString=
function(){return"THREE.Rectangle ( left: "+c+", right: "+e+", top: "+f+", bottom: "+h+", width: "+i+", height: "+l+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a;a=this.m[1];this.m[1]=this.m[3];this.m[3]=a;a=this.m[2];this.m[2]=this.m[6];this.m[6]=a;a=this.m[5];this.m[5]=this.m[7];this.m[7]=a;return this}};
THREE.Matrix4=function(a,c,f,e,h,i,l,k,j,q,y,d,w,A,B,C){this.n11=a||1;this.n12=c||0;this.n13=f||0;this.n14=e||0;this.n21=h||0;this.n22=i||1;this.n23=l||0;this.n24=k||0;this.n31=j||0;this.n32=q||0;this.n33=y||1;this.n34=d||0;this.n41=w||0;this.n42=A||0;this.n43=B||0;this.n44=C||1};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,c,f,e,h,i,l,k,j,q,y,d,w,A,B,C){this.n11=a;this.n12=c;this.n13=f;this.n14=e;this.n21=h;this.n22=i;this.n23=l;this.n24=k;this.n31=j;this.n32=q;this.n33=y;this.n34=d;this.n41=w;this.n42=A;this.n43=B;this.n44=C;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,c,f){var e=new THREE.Vector3,h=new THREE.Vector3,i=new THREE.Vector3;i.sub(a,c).normalize();e.cross(f,i).normalize();h.cross(i,e).normalize();this.n11=e.x;this.n12=e.y;this.n13=e.z;this.n14=-e.dot(a);this.n21=h.x;this.n22=h.y;this.n23=h.z;this.n24=-h.dot(a);this.n31=i.x;
this.n32=i.y;this.n33=i.z;this.n34=-i.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var c=a.x,f=a.y,e=a.z,h=1/(this.n41*c+this.n42*f+this.n43*e+this.n44);a.x=(this.n11*c+this.n12*f+this.n13*e+this.n14)*h;a.y=(this.n21*c+this.n22*f+this.n23*e+this.n24)*h;a.z=(this.n31*c+this.n32*f+this.n33*e+this.n34)*h;return a},multiplyVector4:function(a){var c=a.x,f=a.y,e=a.z,h=a.w;a.x=this.n11*c+this.n12*f+this.n13*e+this.n14*h;a.y=this.n21*c+this.n22*f+this.n23*e+this.n24*
h;a.z=this.n31*c+this.n32*f+this.n33*e+this.n34*h;a.w=this.n41*c+this.n42*f+this.n43*e+this.n44*h;return a},crossVector:function(a){var c=new THREE.Vector4;c.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;c.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;c.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;c.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return c},multiply:function(a,c){var f=a.n11,e=a.n12,h=a.n13,i=a.n14,l=a.n21,k=a.n22,j=a.n23,q=a.n24,y=a.n31,d=a.n32,
w=a.n33,A=a.n34,B=a.n41,C=a.n42,L=a.n43,x=a.n44,D=c.n11,p=c.n12,O=c.n13,K=c.n14,Z=c.n21,S=c.n22,M=c.n23,m=c.n24,r=c.n31,v=c.n32,o=c.n33,s=c.n34,u=c.n41,H=c.n42,F=c.n43,T=c.n44;this.n11=f*D+e*Z+h*r+i*u;this.n12=f*p+e*S+h*v+i*H;this.n13=f*O+e*M+h*o+i*F;this.n14=f*K+e*m+h*s+i*T;this.n21=l*D+k*Z+j*r+q*u;this.n22=l*p+k*S+j*v+q*H;this.n23=l*O+k*M+j*o+q*F;this.n24=l*K+k*m+j*s+q*T;this.n31=y*D+d*Z+w*r+A*u;this.n32=y*p+d*S+w*v+A*H;this.n33=y*O+d*M+w*o+A*F;this.n34=y*K+d*m+w*s+A*T;this.n41=B*D+C*Z+L*r+x*u;
this.n42=B*p+C*S+L*v+x*H;this.n43=B*O+C*M+L*o+x*F;this.n44=B*K+C*m+L*s+x*T;return this},multiplySelf:function(a){var c=this.n11,f=this.n12,e=this.n13,h=this.n14,i=this.n21,l=this.n22,k=this.n23,j=this.n24,q=this.n31,y=this.n32,d=this.n33,w=this.n34,A=this.n41,B=this.n42,C=this.n43,L=this.n44,x=a.n11,D=a.n21,p=a.n31,O=a.n41,K=a.n12,Z=a.n22,S=a.n32,M=a.n42,m=a.n13,r=a.n23,v=a.n33,o=a.n43,s=a.n14,u=a.n24,H=a.n34;a=a.n44;this.n11=c*x+f*D+e*p+h*O;this.n12=c*K+f*Z+e*S+h*M;this.n13=c*m+f*r+e*v+h*o;this.n14=
c*s+f*u+e*H+h*a;this.n21=i*x+l*D+k*p+j*O;this.n22=i*K+l*Z+k*S+j*M;this.n23=i*m+l*r+k*v+j*o;this.n24=i*s+l*u+k*H+j*a;this.n31=q*x+y*D+d*p+w*O;this.n32=q*K+y*Z+d*S+w*M;this.n33=q*m+y*r+d*v+w*o;this.n34=q*s+y*u+d*H+w*a;this.n41=A*x+B*D+C*p+L*O;this.n42=A*K+B*Z+C*S+L*M;this.n43=A*m+B*r+C*v+L*o;this.n44=A*s+B*u+C*H+L*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=
a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){return this.n14*this.n23*this.n32*this.n41-this.n13*this.n24*this.n32*this.n41-this.n14*this.n22*this.n33*this.n41+this.n12*this.n24*this.n33*this.n41+this.n13*this.n22*this.n34*this.n41-this.n12*this.n23*this.n34*this.n41-this.n14*this.n23*this.n31*this.n42+this.n13*this.n24*this.n31*this.n42+this.n14*this.n21*this.n33*this.n42-this.n11*this.n24*this.n33*this.n42-this.n13*this.n21*this.n34*this.n42+this.n11*this.n23*this.n34*
this.n42+this.n14*this.n22*this.n31*this.n43-this.n12*this.n24*this.n31*this.n43-this.n14*this.n21*this.n32*this.n43+this.n11*this.n24*this.n32*this.n43+this.n12*this.n21*this.n34*this.n43-this.n11*this.n22*this.n34*this.n43-this.n13*this.n22*this.n31*this.n44+this.n12*this.n23*this.n31*this.n44+this.n13*this.n21*this.n32*this.n44-this.n11*this.n23*this.n32*this.n44-this.n12*this.n21*this.n33*this.n44+this.n11*this.n22*this.n33*this.n44},transpose:function(){function a(c,f,e){var h=c[f];c[f]=c[e];
c[e]=h}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){return[this.n11,this.n21,this.n31,this.n41,this.n12,
this.n22,this.n32,this.n42,this.n13,this.n23,this.n33,this.n43,this.n14,this.n24,this.n34,this.n44]},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,c,f){var e=new THREE.Matrix4;e.n14=a;e.n24=c;e.n34=f;return e};
THREE.Matrix4.scaleMatrix=function(a,c,f){var e=new THREE.Matrix4;e.n11=a;e.n22=c;e.n33=f;return e};THREE.Matrix4.rotationXMatrix=function(a){var c=new THREE.Matrix4;c.n22=c.n33=Math.cos(a);c.n32=Math.sin(a);c.n23=-c.n32;return c};THREE.Matrix4.rotationYMatrix=function(a){var c=new THREE.Matrix4;c.n11=c.n33=Math.cos(a);c.n13=Math.sin(a);c.n31=-c.n13;return c};THREE.Matrix4.rotationZMatrix=function(a){var c=new THREE.Matrix4;c.n11=c.n22=Math.cos(a);c.n21=Math.sin(a);c.n12=-c.n21;return c};
THREE.Matrix4.rotationAxisAngleMatrix=function(a,c){var f=new THREE.Matrix4,e=Math.cos(c),h=Math.sin(c),i=1-e,l=a.x,k=a.y,j=a.z;f.n11=i*l*l+e;f.n12=i*l*k-h*j;f.n13=i*l*j+h*k;f.n21=i*l*k+h*j;f.n22=i*k*k+e;f.n23=i*k*j-h*l;f.n31=i*l*j-h*k;f.n32=i*k*j+h*l;f.n33=i*j*j+e;return f};
THREE.Matrix4.makeInvert=function(a){var c=new THREE.Matrix4;c.n11=a.n23*a.n34*a.n42-a.n24*a.n33*a.n42+a.n24*a.n32*a.n43-a.n22*a.n34*a.n43-a.n23*a.n32*a.n44+a.n22*a.n33*a.n44;c.n12=a.n14*a.n33*a.n42-a.n13*a.n34*a.n42-a.n14*a.n32*a.n43+a.n12*a.n34*a.n43+a.n13*a.n32*a.n44-a.n12*a.n33*a.n44;c.n13=a.n13*a.n24*a.n42-a.n14*a.n23*a.n42+a.n14*a.n22*a.n43-a.n12*a.n24*a.n43-a.n13*a.n22*a.n44+a.n12*a.n23*a.n44;c.n14=a.n14*a.n23*a.n32-a.n13*a.n24*a.n32-a.n14*a.n22*a.n33+a.n12*a.n24*a.n33+a.n13*a.n22*a.n34-a.n12*
a.n23*a.n34;c.n21=a.n24*a.n33*a.n41-a.n23*a.n34*a.n41-a.n24*a.n31*a.n43+a.n21*a.n34*a.n43+a.n23*a.n31*a.n44-a.n21*a.n33*a.n44;c.n22=a.n13*a.n34*a.n41-a.n14*a.n33*a.n41+a.n14*a.n31*a.n43-a.n11*a.n34*a.n43-a.n13*a.n31*a.n44+a.n11*a.n33*a.n44;c.n23=a.n14*a.n23*a.n41-a.n13*a.n24*a.n41-a.n14*a.n21*a.n43+a.n11*a.n24*a.n43+a.n13*a.n21*a.n44-a.n11*a.n23*a.n44;c.n24=a.n13*a.n24*a.n31-a.n14*a.n23*a.n31+a.n14*a.n21*a.n33-a.n11*a.n24*a.n33-a.n13*a.n21*a.n34+a.n11*a.n23*a.n34;c.n31=a.n22*a.n34*a.n41-a.n24*a.n32*
a.n41+a.n24*a.n31*a.n42-a.n21*a.n34*a.n42-a.n22*a.n31*a.n44+a.n21*a.n32*a.n44;c.n32=a.n14*a.n32*a.n41-a.n12*a.n34*a.n41-a.n14*a.n31*a.n42+a.n11*a.n34*a.n42+a.n12*a.n31*a.n44-a.n11*a.n32*a.n44;c.n33=a.n13*a.n24*a.n41-a.n14*a.n22*a.n41+a.n14*a.n21*a.n42-a.n11*a.n24*a.n42-a.n12*a.n21*a.n44+a.n11*a.n22*a.n44;c.n34=a.n14*a.n22*a.n31-a.n12*a.n24*a.n31-a.n14*a.n21*a.n32+a.n11*a.n24*a.n32+a.n12*a.n21*a.n34-a.n11*a.n22*a.n34;c.n41=a.n23*a.n32*a.n41-a.n22*a.n33*a.n41-a.n23*a.n31*a.n42+a.n21*a.n33*a.n42+a.n22*
a.n31*a.n43-a.n21*a.n32*a.n43;c.n42=a.n12*a.n33*a.n41-a.n13*a.n32*a.n41+a.n13*a.n31*a.n42-a.n11*a.n33*a.n42-a.n12*a.n31*a.n43+a.n11*a.n32*a.n43;c.n43=a.n13*a.n22*a.n41-a.n12*a.n23*a.n41-a.n13*a.n21*a.n42+a.n11*a.n23*a.n42+a.n12*a.n21*a.n43-a.n11*a.n22*a.n43;c.n44=a.n12*a.n23*a.n31-a.n13*a.n22*a.n31+a.n13*a.n21*a.n32-a.n11*a.n23*a.n32-a.n12*a.n21*a.n33+a.n11*a.n22*a.n33;c.multiplyScalar(1/a.determinant());return c};
THREE.Matrix4.makeInvert3x3=function(a){var c=a.flatten();a=new THREE.Matrix3;var f=c[10]*c[5]-c[6]*c[9],e=-c[10]*c[1]+c[2]*c[9],h=c[6]*c[1]-c[2]*c[5],i=-c[10]*c[4]+c[6]*c[8],l=c[10]*c[0]-c[2]*c[8],k=-c[6]*c[0]+c[2]*c[4],j=c[9]*c[4]-c[5]*c[8],q=-c[9]*c[0]+c[1]*c[8],y=c[5]*c[0]-c[1]*c[4];c=c[0]*f+c[1]*i+c[2]*j;if(c==0)throw"matrix not invertible";c=1/c;a.m[0]=c*f;a.m[1]=c*e;a.m[2]=c*h;a.m[3]=c*i;a.m[4]=c*l;a.m[5]=c*k;a.m[6]=c*j;a.m[7]=c*q;a.m[8]=c*y;return a};
THREE.Matrix4.makeFrustum=function(a,c,f,e,h,i){var l,k,j;l=new THREE.Matrix4;k=2*h/(c-a);j=2*h/(e-f);a=(c+a)/(c-a);f=(e+f)/(e-f);e=-(i+h)/(i-h);h=-2*i*h/(i-h);l.n11=k;l.n12=0;l.n13=a;l.n14=0;l.n21=0;l.n22=j;l.n23=f;l.n24=0;l.n31=0;l.n32=0;l.n33=e;l.n34=h;l.n41=0;l.n42=0;l.n43=-1;l.n44=0;return l};THREE.Matrix4.makePerspective=function(a,c,f,e){var h;a=f*Math.tan(a*Math.PI/360);h=-a;return THREE.Matrix4.makeFrustum(h*c,a*c,h,a,f,e)};
THREE.Matrix4.makeOrtho=function(a,c,f,e,h,i){var l,k,j,q;l=new THREE.Matrix4;k=c-a;j=f-e;q=i-h;a=(c+a)/k;f=(f+e)/j;h=(i+h)/q;l.n11=2/k;l.n12=0;l.n13=0;l.n14=-a;l.n21=0;l.n22=2/j;l.n23=0;l.n24=-f;l.n31=0;l.n32=0;l.n33=-2/q;l.n34=-h;l.n41=0;l.n42=0;l.n43=0;l.n44=1;return l};
THREE.Vertex=function(a,c){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=c||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,c,f,e,h){this.a=a;this.b=c;this.c=f;this.centroid=new THREE.Vector3;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.materials=h instanceof Array?h:[h]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,c,f,e,h,i){this.a=a;this.b=c;this.c=f;this.d=e;this.centroid=new THREE.Vector3;this.normal=h instanceof THREE.Vector3?h:new THREE.Vector3;this.vertexNormals=h instanceof Array?h:[];this.materials=i instanceof Array?i:[i]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,c){this.u=a||0;this.v=c||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,c,f;a=0;for(c=this.faces.length;a<c;a++){f=this.faces[a];f.centroid.set(0,0,0);if(f instanceof THREE.Face3){f.centroid.addSelf(this.vertices[f.a].position);f.centroid.addSelf(this.vertices[f.b].position);f.centroid.addSelf(this.vertices[f.c].position);f.centroid.divideScalar(3)}else if(f instanceof THREE.Face4){f.centroid.addSelf(this.vertices[f.a].position);f.centroid.addSelf(this.vertices[f.b].position);f.centroid.addSelf(this.vertices[f.c].position);
f.centroid.addSelf(this.vertices[f.d].position);f.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var c,f,e,h,i,l,k=new THREE.Vector3,j=new THREE.Vector3;e=0;for(h=this.vertices.length;e<h;e++){i=this.vertices[e];i.normal.set(0,0,0)}e=0;for(h=this.faces.length;e<h;e++){i=this.faces[e];if(a&&i.vertexNormals.length){k.set(0,0,0);c=0;for(f=i.normal.length;c<f;c++)k.addSelf(i.vertexNormals[c]);k.divideScalar(3)}else{c=this.vertices[i.a];f=this.vertices[i.b];l=this.vertices[i.c];k.sub(l.position,
f.position);j.sub(c.position,f.position);k.crossSelf(j)}k.isZero()||k.normalize();i.normal.copy(k)}},computeVertexNormals:function(){var a,c=[],f,e;a=0;for(vl=this.vertices.length;a<vl;a++)c[a]=new THREE.Vector3;a=0;for(f=this.faces.length;a<f;a++){e=this.faces[a];if(e instanceof THREE.Face3){c[e.a].addSelf(e.normal);c[e.b].addSelf(e.normal);c[e.c].addSelf(e.normal)}else if(e instanceof THREE.Face4){c[e.a].addSelf(e.normal);c[e.b].addSelf(e.normal);c[e.c].addSelf(e.normal);c[e.d].addSelf(e.normal)}}a=
0;for(vl=this.vertices.length;a<vl;a++)c[a].normalize();a=0;for(f=this.faces.length;a<f;a++){e=this.faces[a];if(e instanceof THREE.Face3){e.vertexNormals[0]=c[e.a].clone();e.vertexNormals[1]=c[e.b].clone();e.vertexNormals[2]=c[e.c].clone()}else if(e instanceof THREE.Face4){e.vertexNormals[0]=c[e.a].clone();e.vertexNormals[1]=c[e.b].clone();e.vertexNormals[2]=c[e.c].clone();e.vertexNormals[3]=c[e.d].clone()}}},computeTangents:function(){function a(s,u,H,F,T,P,Q){i=s.vertices[u].position;l=s.vertices[H].position;
k=s.vertices[F].position;j=h[T];q=h[P];y=h[Q];d=l.x-i.x;w=k.x-i.x;A=l.y-i.y;B=k.y-i.y;C=l.z-i.z;L=k.z-i.z;x=q.u-j.u;D=y.u-j.u;p=q.v-j.v;O=y.v-j.v;K=1/(x*O-D*p);m.set((O*d-p*w)*K,(O*A-p*B)*K,(O*C-p*L)*K);r.set((x*w-D*d)*K,(x*B-D*A)*K,(x*L-D*C)*K);S[u].addSelf(m);S[H].addSelf(m);S[F].addSelf(m);M[u].addSelf(r);M[H].addSelf(r);M[F].addSelf(r)}var c,f,e,h,i,l,k,j,q,y,d,w,A,B,C,L,x,D,p,O,K,Z,S=[],M=[],m=new THREE.Vector3,r=new THREE.Vector3,v=new THREE.Vector3,o=new THREE.Vector3;Z=new THREE.Vector3;c=
0;for(f=this.vertices.length;c<f;c++){S[c]=new THREE.Vector3;M[c]=new THREE.Vector3}c=0;for(f=this.faces.length;c<f;c++){e=this.faces[c];h=this.uvs[c];if(e instanceof THREE.Face3){a(this,e.a,e.b,e.c,0,1,2);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);this.vertices[e.c].normal.copy(e.vertexNormals[2])}else if(e instanceof THREE.Face4){a(this,e.a,e.b,e.c,0,1,2);a(this,e.a,e.b,e.d,0,1,3);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);
this.vertices[e.c].normal.copy(e.vertexNormals[2]);this.vertices[e.d].normal.copy(e.vertexNormals[3])}}c=0;for(f=this.vertices.length;c<f;c++){Z.copy(this.vertices[c].normal);e=S[c];v.copy(e);v.subSelf(Z.multiplyScalar(Z.dot(e))).normalize();o.cross(this.vertices[c].normal,e);test=o.dot(M[c]);e=test<0?-1:1;this.vertices[c].tangent.set(v.x,v.y,v.z,e)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],
y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var c=1,f=this.vertices.length;c<f;c++){a=this.vertices[c];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<
this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,c=0,f=this.vertices.length;c<f;c++)a=Math.max(a,this.vertices[c].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(q){var y=[];c=0;for(f=q.length;c<f;c++)q[c]==undefined?y.push("undefined"):y.push(q[c].toString());return y.join("_")}
var c,f,e,h,i,l,k,j={};e=0;for(h=this.faces.length;e<h;e++){i=this.faces[e];materials=i.materials;l=a(materials);if(j[l]==undefined)j[l]={hash:l,counter:0};k=j[l].hash+"_"+j[l].counter;if(this.geometryChunks[k]==undefined)this.geometryChunks[k]={faces:[],materials:materials,vertices:0};i=i instanceof THREE.Face3?3:4;if(this.geometryChunks[k].vertices+i>65535){j[l].counter+=1;k=j[l].hash+"_"+j[l].counter;if(this.geometryChunks[k]==undefined)this.geometryChunks[k]={faces:[],materials:materials,vertices:0}}this.geometryChunks[k].faces.push(e);
this.geometryChunks[k].vertices+=i}},toString:function(){return"THREE.Geometry ( vertices: "+this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,c,f,e){this.fov=a;this.aspect=c;this.near=f;this.far=e;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.translateX=function(h){h=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(h);h.cross(h.clone(),this.up);this.position.addSelf(h);this.target.position.addSelf(h)};this.translateZ=function(h){h=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(h);
this.position.subSelf(h);this.target.position.subSelf(h)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};
THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=c||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;
THREE.PointLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=c||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.translationMatrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.scaleMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){this.matrixPosition=THREE.Matrix4.translationMatrix(this.position.x,this.position.y,this.position.z);this.rotationMatrix=THREE.Matrix4.rotationXMatrix(this.rotation.x);this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationYMatrix(this.rotation.y));this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationZMatrix(this.rotation.z));this.scaleMatrix=THREE.Matrix4.scaleMatrix(this.scale.x,this.scale.y,this.scale.z);this.matrix.copy(this.matrixPosition);
this.matrix.multiplySelf(this.rotationMatrix);this.matrix.multiplySelf(this.scaleMatrix)}};THREE.Object3DCounter={value:0};THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.Line=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c]};THREE.Line.prototype=new THREE.Object3D;
THREE.Line.prototype.constructor=THREE.Line;THREE.Mesh=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+
"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=
this.wireframe_linecap="round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=
a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==
undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial"}};
THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.opacity=1;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};
THREE.Texture=function(a,c,f,e,h,i){this.image=a;this.mapping=c!==undefined?c:new THREE.UVMapping;this.wrap_s=f!==undefined?f:THREE.ClampToEdgeWrapping;this.wrap_t=e!==undefined?e:THREE.ClampToEdgeWrapping;this.mag_filter=h!==undefined?h:THREE.LinearFilter;this.min_filter=i!==undefined?i:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;var Uniforms={clone:function(a){var c,f,e={};for(c in a){e[c]={};for(f in a[c]){parameter_src=a[c][f];e[c][f]=parameter_src instanceof THREE.Color||parameter_src instanceof THREE.Vector3||parameter_src instanceof THREE.Texture?parameter_src.clone():parameter_src}}return e}};THREE.CubeReflectionMapping=function(){};
THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,c,f){this.color=new THREE.Color(a);this.near=c||1;this.far=f||1E3};THREE.FogExp2=function(a,c){this.color=new THREE.Color(a);this.density=c||2.5E-4};
THREE.Projector=function(){function a(S,M){return M.z-S.z}function c(S,M){var m=0,r=1,v=S.z+S.w,o=M.z+M.w,s=-S.z+S.w,u=-M.z+M.w;if(v>=0&&o>=0&&s>=0&&u>=0)return true;else if(v<0&&o<0||s<0&&u<0)return false;else{if(v<0)m=Math.max(m,v/(v-o));else if(o<0)r=Math.min(r,v/(v-o));if(s<0)m=Math.max(m,s/(s-u));else if(u<0)r=Math.min(r,s/(s-u));if(r<m)return false;else{S.lerpSelf(M,m);M.lerpSelf(S,1-r);return true}}}var f,e,h=[],i,l,k,j=[],q,y,d=[],w,A,B=[],C=new THREE.Vector4,L=new THREE.Vector4,x=new THREE.Matrix4,
D=new THREE.Matrix4,p=[],O=new THREE.Vector4,K=new THREE.Vector4,Z;this.projectObjects=function(S,M,m){var r=[],v,o;e=0;x.multiply(M.projectionMatrix,M.matrix);p[0]=new THREE.Vector4(x.n41-x.n11,x.n42-x.n12,x.n43-x.n13,x.n44-x.n14);p[1]=new THREE.Vector4(x.n41+x.n11,x.n42+x.n12,x.n43+x.n13,x.n44+x.n14);p[2]=new THREE.Vector4(x.n41+x.n21,x.n42+x.n22,x.n43+x.n23,x.n44+x.n24);p[3]=new THREE.Vector4(x.n41-x.n21,x.n42-x.n22,x.n43-x.n23,x.n44-x.n24);p[4]=new THREE.Vector4(x.n41-x.n31,x.n42-x.n32,x.n43-
x.n33,x.n44-x.n34);p[5]=new THREE.Vector4(x.n41+x.n31,x.n42+x.n32,x.n43+x.n33,x.n44+x.n34);M=0;for(v=p.length;M<v;M++){o=p[M];o.divideScalar(Math.sqrt(o.x*o.x+o.y*o.y+o.z*o.z))}v=S.objects;S=0;for(M=v.length;S<M;S++){o=v[S];var s;if(!(s=!o.visible)){if(s=o instanceof THREE.Mesh){a:{s=void 0;for(var u=o.position,H=-o.geometry.boundingSphere.radius*Math.max(o.scale.x,Math.max(o.scale.y,o.scale.z)),F=0;F<6;F++){s=p[F].x*u.x+p[F].y*u.y+p[F].z*u.z+p[F].w;if(s<=H){s=false;break a}}s=true}s=!s}s=s}if(!s){f=
h[e]=h[e]||new THREE.RenderableObject;C.copy(o.position);x.multiplyVector3(C);f.object=o;f.z=C.z;r.push(f);e++}}m&&r.sort(a);return r};this.projectScene=function(S,M,m){var r=[],v=M.near,o=M.far,s,u,H,F,T,P,Q,R,V,E,N,X,t,n,z,G;k=y=A=0;M.autoUpdateMatrix&&M.updateMatrix();x.multiply(M.projectionMatrix,M.matrix);P=this.projectObjects(S,M,true);S=0;for(s=P.length;S<s;S++){Q=P[S].object;if(Q.visible){Q.autoUpdateMatrix&&Q.updateMatrix();R=Q.matrix;V=Q.rotationMatrix;E=Q.materials;N=Q.overdraw;if(Q instanceof
THREE.Mesh){X=Q.geometry;t=X.vertices;u=0;for(H=t.length;u<H;u++){n=t[u];n.positionWorld.copy(n.position);R.multiplyVector3(n.positionWorld);F=n.positionScreen;F.copy(n.positionWorld);x.multiplyVector4(F);F.x/=F.w;F.y/=F.w;n.__visible=F.z>v&&F.z<o}X=X.faces;u=0;for(H=X.length;u<H;u++){n=X[u];if(n instanceof THREE.Face3){F=t[n.a];T=t[n.b];z=t[n.c];if(F.__visible&&T.__visible&&z.__visible)if(Q.doubleSided||Q.flipSided!=(z.positionScreen.x-F.positionScreen.x)*(T.positionScreen.y-F.positionScreen.y)-
(z.positionScreen.y-F.positionScreen.y)*(T.positionScreen.x-F.positionScreen.x)<0){i=j[k]=j[k]||new THREE.RenderableFace3;i.v1.positionWorld.copy(F.positionWorld);i.v2.positionWorld.copy(T.positionWorld);i.v3.positionWorld.copy(z.positionWorld);i.v1.positionScreen.copy(F.positionScreen);i.v2.positionScreen.copy(T.positionScreen);i.v3.positionScreen.copy(z.positionScreen);i.normalWorld.copy(n.normal);V.multiplyVector3(i.normalWorld);i.centroidWorld.copy(n.centroid);R.multiplyVector3(i.centroidWorld);
i.centroidScreen.copy(i.centroidWorld);x.multiplyVector3(i.centroidScreen);z=n.vertexNormals;Z=i.vertexNormalsWorld;F=0;for(T=z.length;F<T;F++){G=Z[F]=Z[F]||new THREE.Vector3;G.copy(z[F]);V.multiplyVector3(G)}i.z=i.centroidScreen.z;i.meshMaterials=E;i.faceMaterials=n.materials;i.overdraw=N;if(Q.geometry.uvs[u]){i.uvs[0]=Q.geometry.uvs[u][0];i.uvs[1]=Q.geometry.uvs[u][1];i.uvs[2]=Q.geometry.uvs[u][2]}r.push(i);k++}}else if(n instanceof THREE.Face4){F=t[n.a];T=t[n.b];z=t[n.c];G=t[n.d];if(F.__visible&&
T.__visible&&z.__visible&&G.__visible)if(Q.doubleSided||Q.flipSided!=((G.positionScreen.x-F.positionScreen.x)*(T.positionScreen.y-F.positionScreen.y)-(G.positionScreen.y-F.positionScreen.y)*(T.positionScreen.x-F.positionScreen.x)<0||(T.positionScreen.x-z.positionScreen.x)*(G.positionScreen.y-z.positionScreen.y)-(T.positionScreen.y-z.positionScreen.y)*(G.positionScreen.x-z.positionScreen.x)<0)){i=j[k]=j[k]||new THREE.RenderableFace3;i.v1.positionWorld.copy(F.positionWorld);i.v2.positionWorld.copy(T.positionWorld);
i.v3.positionWorld.copy(G.positionWorld);i.v1.positionScreen.copy(F.positionScreen);i.v2.positionScreen.copy(T.positionScreen);i.v3.positionScreen.copy(G.positionScreen);i.normalWorld.copy(n.normal);V.multiplyVector3(i.normalWorld);i.centroidWorld.copy(n.centroid);R.multiplyVector3(i.centroidWorld);i.centroidScreen.copy(i.centroidWorld);x.multiplyVector3(i.centroidScreen);i.z=i.centroidScreen.z;i.meshMaterials=E;i.faceMaterials=n.materials;i.overdraw=N;if(Q.geometry.uvs[u]){i.uvs[0]=Q.geometry.uvs[u][0];
i.uvs[1]=Q.geometry.uvs[u][1];i.uvs[2]=Q.geometry.uvs[u][3]}r.push(i);k++;l=j[k]=j[k]||new THREE.RenderableFace3;l.v1.positionWorld.copy(T.positionWorld);l.v2.positionWorld.copy(z.positionWorld);l.v3.positionWorld.copy(G.positionWorld);l.v1.positionScreen.copy(T.positionScreen);l.v2.positionScreen.copy(z.positionScreen);l.v3.positionScreen.copy(G.positionScreen);l.normalWorld.copy(i.normalWorld);l.centroidWorld.copy(i.centroidWorld);l.centroidScreen.copy(i.centroidScreen);l.z=l.centroidScreen.z;l.meshMaterials=
E;l.faceMaterials=n.materials;l.overdraw=N;if(Q.geometry.uvs[u]){l.uvs[0]=Q.geometry.uvs[u][1];l.uvs[1]=Q.geometry.uvs[u][2];l.uvs[2]=Q.geometry.uvs[u][3]}r.push(l);k++}}}}else if(Q instanceof THREE.Line){D.multiply(x,R);t=Q.geometry.vertices;n=t[0];n.positionScreen.copy(n.position);D.multiplyVector4(n.positionScreen);u=1;for(H=t.length;u<H;u++){F=t[u];F.positionScreen.copy(F.position);D.multiplyVector4(F.positionScreen);T=t[u-1];O.copy(F.positionScreen);K.copy(T.positionScreen);if(c(O,K)){O.multiplyScalar(1/
O.w);K.multiplyScalar(1/K.w);q=d[y]=d[y]||new THREE.RenderableLine;q.v1.positionScreen.copy(O);q.v2.positionScreen.copy(K);q.z=Math.max(O.z,K.z);q.materials=Q.materials;r.push(q);y++}}}else if(Q instanceof THREE.Particle){L.set(Q.position.x,Q.position.y,Q.position.z,1);x.multiplyVector4(L);L.z/=L.w;if(L.z>0&&L.z<1){w=B[A]=B[A]||new THREE.RenderableParticle;w.x=L.x/L.w;w.y=L.y/L.w;w.z=L.z;w.rotation=Q.rotation.z;w.scale.x=Q.scale.x*Math.abs(w.x-(L.x+M.projectionMatrix.n11)/(L.w+M.projectionMatrix.n14));
w.scale.y=Q.scale.y*Math.abs(w.y-(L.y+M.projectionMatrix.n22)/(L.w+M.projectionMatrix.n24));w.materials=Q.materials;r.push(w);A++}}}}m&&r.sort(a);return r};this.unprojectVector=function(S,M){var m=new THREE.Matrix4;m.multiply(THREE.Matrix4.makeInvert(M.matrix),THREE.Matrix4.makeInvert(M.projectionMatrix));m.multiplyVector3(S);return S}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,c=new THREE.Projector,f,e,h,i;this.domElement=document.createElement("div");this.setSize=function(l,k){f=l;e=k;h=f/2;i=e/2};this.render=function(l,k){var j,q,y,d,w,A,B,C;a=c.projectScene(l,k);j=0;for(q=a.length;j<q;j++){w=a[j];if(w instanceof THREE.RenderableParticle){B=w.x*h+h;C=w.y*i+i;y=0;for(d=w.material.length;y<d;y++){A=w.material[y];if(A instanceof THREE.ParticleDOMMaterial){A=A.domElement;A.style.left=B+"px";A.style.top=C+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(fa){if(w!=fa)q.globalAlpha=w=fa}function c(fa){if(A!=fa){switch(fa){case THREE.NormalBlending:q.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:q.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:q.globalCompositeOperation="darker"}A=fa}}var f=null,e=new THREE.Projector,h=document.createElement("canvas"),i,l,k,j,q=h.getContext("2d"),y=null,d=null,w=1,A=0,B=null,C=null,L=1,x,D,p,O,K,Z,S,M,m,r=new THREE.Color,
v=new THREE.Color,o=new THREE.Color,s=new THREE.Color,u=new THREE.Color,H,F,T,P,Q,R,V,E,N,X=new THREE.Rectangle,t=new THREE.Rectangle,n=new THREE.Rectangle,z=false,G=new THREE.Color,Y=new THREE.Color,da=new THREE.Color,ha=new THREE.Color,za=Math.PI*2,ba=new THREE.Vector3,ta,ua,Fa,ja,va,Aa,ra=16;ta=document.createElement("canvas");ta.width=ta.height=2;ua=ta.getContext("2d");ua.fillStyle="rgba(0,0,0,1)";ua.fillRect(0,0,2,2);Fa=ua.getImageData(0,0,2,2);ja=Fa.data;va=document.createElement("canvas");
va.width=va.height=ra;Aa=va.getContext("2d");Aa.translate(-ra/2,-ra/2);Aa.scale(ra,ra);ra--;this.domElement=h;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(fa,pa){i=fa;l=pa;k=i/2;j=l/2;h.width=i;h.height=l;X.set(-k,-j,k,j)};this.setClearColor=function(fa,pa){y=fa!==null?new THREE.Color(fa):null;d=pa;t.set(-k,-j,k,j);q.setTransform(1,0,0,-1,k,j);this.clear()};this.clear=function(){if(!t.isEmpty()){t.inflate(1);t.minSelf(X);if(y!==null){c(THREE.NormalBlending);a(1);q.fillStyle=
"rgba("+Math.floor(y.r*255)+","+Math.floor(y.g*255)+","+Math.floor(y.b*255)+","+d+")";q.fillRect(t.getX(),t.getY(),t.getWidth(),t.getHeight())}else q.clearRect(t.getX(),t.getY(),t.getWidth(),t.getHeight());t.empty()}};this.render=function(fa,pa){function Oa(I){var $,W,J,U=I.lights;Y.setRGB(0,0,0);da.setRGB(0,0,0);ha.setRGB(0,0,0);I=0;for($=U.length;I<$;I++){W=U[I];J=W.color;if(W instanceof THREE.AmbientLight){Y.r+=J.r;Y.g+=J.g;Y.b+=J.b}else if(W instanceof THREE.DirectionalLight){da.r+=J.r;da.g+=
J.g;da.b+=J.b}else if(W instanceof THREE.PointLight){ha.r+=J.r;ha.g+=J.g;ha.b+=J.b}}}function Ba(I,$,W,J){var U,aa,ea,ga,ia=I.lights;I=0;for(U=ia.length;I<U;I++){aa=ia[I];ea=aa.color;ga=aa.intensity;if(aa instanceof THREE.DirectionalLight){aa=W.dot(aa.position)*ga;if(aa>0){J.r+=ea.r*aa;J.g+=ea.g*aa;J.b+=ea.b*aa}}else if(aa instanceof THREE.PointLight){ba.sub(aa.position,$);ba.normalize();aa=W.dot(ba)*ga;if(aa>0){J.r+=ea.r*aa;J.g+=ea.g*aa;J.b+=ea.b*aa}}}}function Pa(I,$,W){if(W.opacity!=0){a(W.opacity);
c(W.blending);var J,U,aa,ea,ga,ia;if(W instanceof THREE.ParticleBasicMaterial){if(W.map){ea=W.map;ga=ea.width>>1;ia=ea.height>>1;U=$.scale.x*k;aa=$.scale.y*j;W=U*ga;J=aa*ia;n.set(I.x-W,I.y-J,I.x+W,I.y+J);if(X.instersects(n)){q.save();q.translate(I.x,I.y);q.rotate(-$.rotation);q.scale(U,-aa);q.translate(-ga,-ia);q.drawImage(ea,0,0);q.restore()}}}else if(W instanceof THREE.ParticleCircleMaterial){if(z){G.r=Y.r+da.r+ha.r;G.g=Y.g+da.g+ha.g;G.b=Y.b+da.b+ha.b;r.r=W.color.r*G.r;r.g=W.color.g*G.g;r.b=W.color.b*
G.b;r.updateStyleString()}else r.__styleString=W.color.__styleString;W=$.scale.x*k;J=$.scale.y*j;n.set(I.x-W,I.y-J,I.x+W,I.y+J);if(X.instersects(n)){U=r.__styleString;if(C!=U)q.fillStyle=C=U;q.save();q.translate(I.x,I.y);q.rotate(-$.rotation);q.scale(W,J);q.beginPath();q.arc(0,0,1,0,za,true);q.closePath();q.fill();q.restore()}}}}function Qa(I,$,W,J){if(J.opacity!=0){a(J.opacity);c(J.blending);q.beginPath();q.moveTo(I.positionScreen.x,I.positionScreen.y);q.lineTo($.positionScreen.x,$.positionScreen.y);
q.closePath();if(J instanceof THREE.LineBasicMaterial){r.__styleString=J.color.__styleString;I=J.linewidth;if(L!=I)q.lineWidth=L=I;I=r.__styleString;if(B!=I)q.strokeStyle=B=I;q.stroke();n.inflate(J.linewidth*2)}}}function Ka(I,$,W,J,U,aa){if(U.opacity!=0){a(U.opacity);c(U.blending);O=I.positionScreen.x;K=I.positionScreen.y;Z=$.positionScreen.x;S=$.positionScreen.y;M=W.positionScreen.x;m=W.positionScreen.y;q.beginPath();q.moveTo(O,K);q.lineTo(Z,S);q.lineTo(M,m);q.lineTo(O,K);q.closePath();if(U instanceof
THREE.MeshBasicMaterial)if(U.map)U.map.image.loaded&&U.map.mapping instanceof THREE.UVMapping&&wa(O,K,Z,S,M,m,U.map.image,J.uvs[0].u,J.uvs[0].v,J.uvs[1].u,J.uvs[1].v,J.uvs[2].u,J.uvs[2].v);else if(U.env_map){if(U.env_map.image.loaded)if(U.env_map.mapping instanceof THREE.SphericalReflectionMapping){I=pa.matrix;ba.copy(J.vertexNormalsWorld[0]);P=(ba.x*I.n11+ba.y*I.n12+ba.z*I.n13)*0.5+0.5;Q=-(ba.x*I.n21+ba.y*I.n22+ba.z*I.n23)*0.5+0.5;ba.copy(J.vertexNormalsWorld[1]);R=(ba.x*I.n11+ba.y*I.n12+ba.z*I.n13)*
0.5+0.5;V=-(ba.x*I.n21+ba.y*I.n22+ba.z*I.n23)*0.5+0.5;ba.copy(J.vertexNormalsWorld[2]);E=(ba.x*I.n11+ba.y*I.n12+ba.z*I.n13)*0.5+0.5;N=-(ba.x*I.n21+ba.y*I.n22+ba.z*I.n23)*0.5+0.5;wa(O,K,Z,S,M,m,U.env_map.image,P,Q,R,V,E,N)}}else U.wireframe?Ca(U.color.__styleString,U.wireframe_linewidth):Da(U.color.__styleString);else if(U instanceof THREE.MeshLambertMaterial){if(U.map&&!U.wireframe){U.map.mapping instanceof THREE.UVMapping&&wa(O,K,Z,S,M,m,U.map.image,J.uvs[0].u,J.uvs[0].v,J.uvs[1].u,J.uvs[1].v,J.uvs[2].u,
J.uvs[2].v);c(THREE.SubtractiveBlending)}if(z)if(!U.wireframe&&U.shading==THREE.SmoothShading&&J.vertexNormalsWorld.length==3){v.r=o.r=s.r=Y.r;v.g=o.g=s.g=Y.g;v.b=o.b=s.b=Y.b;Ba(aa,J.v1.positionWorld,J.vertexNormalsWorld[0],v);Ba(aa,J.v2.positionWorld,J.vertexNormalsWorld[1],o);Ba(aa,J.v3.positionWorld,J.vertexNormalsWorld[2],s);u.r=(o.r+s.r)*0.5;u.g=(o.g+s.g)*0.5;u.b=(o.b+s.b)*0.5;T=La(v,o,s,u);wa(O,K,Z,S,M,m,T,0,0,1,0,0,1)}else{G.r=Y.r;G.g=Y.g;G.b=Y.b;Ba(aa,J.centroidWorld,J.normalWorld,G);r.r=
U.color.r*G.r;r.g=U.color.g*G.g;r.b=U.color.b*G.b;r.updateStyleString();U.wireframe?Ca(r.__styleString,U.wireframe_linewidth):Da(r.__styleString)}else U.wireframe?Ca(U.color.__styleString,U.wireframe_linewidth):Da(U.color.__styleString)}else if(U instanceof THREE.MeshDepthMaterial){H=pa.near;F=pa.far;v.r=v.g=v.b=1-Ga(I.positionScreen.z,H,F);o.r=o.g=o.b=1-Ga($.positionScreen.z,H,F);s.r=s.g=s.b=1-Ga(W.positionScreen.z,H,F);u.r=(o.r+s.r)*0.5;u.g=(o.g+s.g)*0.5;u.b=(o.b+s.b)*0.5;T=La(v,o,s,u);wa(O,K,Z,
S,M,m,T,0,0,1,0,0,1)}else if(U instanceof THREE.MeshNormalMaterial){r.r=Ha(J.normalWorld.x);r.g=Ha(J.normalWorld.y);r.b=Ha(J.normalWorld.z);r.updateStyleString();U.wireframe?Ca(r.__styleString,U.wireframe_linewidth):Da(r.__styleString)}}}function Ca(I,$){if(B!=I)q.strokeStyle=B=I;if(L!=$)q.lineWidth=L=$;q.stroke();n.inflate($*2)}function Da(I){if(C!=I)q.fillStyle=C=I;q.fill()}function wa(I,$,W,J,U,aa,ea,ga,ia,ma,ka,na,xa){var qa,oa;qa=ea.width-1;oa=ea.height-1;ga*=qa;ia*=oa;ma*=qa;ka*=oa;na*=qa;xa*=
oa;W-=I;J-=$;U-=I;aa-=$;ma-=ga;ka-=ia;na-=ga;xa-=ia;oa=1/(ma*xa-na*ka);qa=(xa*W-ka*U)*oa;ka=(xa*J-ka*aa)*oa;W=(ma*U-na*W)*oa;J=(ma*aa-na*J)*oa;I=I-qa*ga-W*ia;$=$-ka*ga-J*ia;q.save();q.transform(qa,ka,W,J,I,$);q.clip();q.drawImage(ea,0,0);q.restore()}function La(I,$,W,J){var U=~~(I.r*255),aa=~~(I.g*255);I=~~(I.b*255);var ea=~~($.r*255),ga=~~($.g*255);$=~~($.b*255);var ia=~~(W.r*255),ma=~~(W.g*255);W=~~(W.b*255);var ka=~~(J.r*255),na=~~(J.g*255);J=~~(J.b*255);ja[0]=U<0?0:U>255?255:U;ja[1]=aa<0?0:aa>
255?255:aa;ja[2]=I<0?0:I>255?255:I;ja[4]=ea<0?0:ea>255?255:ea;ja[5]=ga<0?0:ga>255?255:ga;ja[6]=$<0?0:$>255?255:$;ja[8]=ia<0?0:ia>255?255:ia;ja[9]=ma<0?0:ma>255?255:ma;ja[10]=W<0?0:W>255?255:W;ja[12]=ka<0?0:ka>255?255:ka;ja[13]=na<0?0:na>255?255:na;ja[14]=J<0?0:J>255?255:J;ua.putImageData(Fa,0,0);Aa.drawImage(ta,0,0);return va}function Ga(I,$,W){I=(I-$)/(W-$);return I*I*(3-2*I)}function Ha(I){I=(I+1)*0.5;return I<0?0:I>1?1:I}function Ia(I,$){var W=$.x-I.x,J=$.y-I.y,U=1/Math.sqrt(W*W+J*J);W*=U;J*=U;
$.x+=W;$.y+=J;I.x-=W;I.y-=J}var Ea,Ma,ca,la,sa,Ja,Na,ya;q.setTransform(1,0,0,-1,k,j);this.autoClear&&this.clear();f=e.projectScene(fa,pa,this.sortElements);(z=fa.lights.length>0)&&Oa(fa);Ea=0;for(Ma=f.length;Ea<Ma;Ea++){ca=f[Ea];n.empty();if(ca instanceof THREE.RenderableParticle){x=ca;x.x*=k;x.y*=j;la=0;for(sa=ca.materials.length;la<sa;la++)Pa(x,ca,ca.materials[la],fa)}else if(ca instanceof THREE.RenderableLine){x=ca.v1;D=ca.v2;x.positionScreen.x*=k;x.positionScreen.y*=j;D.positionScreen.x*=k;D.positionScreen.y*=
j;n.addPoint(x.positionScreen.x,x.positionScreen.y);n.addPoint(D.positionScreen.x,D.positionScreen.y);if(X.instersects(n)){la=0;for(sa=ca.materials.length;la<sa;)Qa(x,D,ca,ca.materials[la++],fa)}}else if(ca instanceof THREE.RenderableFace3){x=ca.v1;D=ca.v2;p=ca.v3;x.positionScreen.x*=k;x.positionScreen.y*=j;D.positionScreen.x*=k;D.positionScreen.y*=j;p.positionScreen.x*=k;p.positionScreen.y*=j;if(ca.overdraw){Ia(x.positionScreen,D.positionScreen);Ia(D.positionScreen,p.positionScreen);Ia(p.positionScreen,
x.positionScreen)}n.add3Points(x.positionScreen.x,x.positionScreen.y,D.positionScreen.x,D.positionScreen.y,p.positionScreen.x,p.positionScreen.y);if(X.instersects(n)){la=0;for(sa=ca.meshMaterials.length;la<sa;){ya=ca.meshMaterials[la++];if(ya instanceof THREE.MeshFaceMaterial){Ja=0;for(Na=ca.faceMaterials.length;Ja<Na;)(ya=ca.faceMaterials[Ja++])&&Ka(x,D,p,ca,ya,fa)}else Ka(x,D,p,ca,ya,fa)}}}t.addRectangle(n)}q.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(P,Q,R){var V,E,N,X;V=0;for(E=P.lights.length;V<E;V++){N=P.lights[V];if(N instanceof THREE.DirectionalLight){X=Q.normalWorld.dot(N.position)*N.intensity;if(X>0){R.r+=N.color.r*X;R.g+=N.color.g*X;R.b+=N.color.b*X}}else if(N instanceof THREE.PointLight){m.sub(N.position,Q.centroidWorld);m.normalize();X=Q.normalWorld.dot(m)*N.intensity;if(X>0){R.r+=N.color.r*X;R.g+=N.color.g*X;R.b+=N.color.b*X}}}}function c(P,Q,R,V,E,N){s=e(u++);s.setAttribute("d","M "+P.positionScreen.x+
" "+P.positionScreen.y+" L "+Q.positionScreen.x+" "+Q.positionScreen.y+" L "+R.positionScreen.x+","+R.positionScreen.y+"z");if(E instanceof THREE.MeshBasicMaterial)p.__styleString=E.color.__styleString;else if(E instanceof THREE.MeshLambertMaterial)if(D){O.r=K.r;O.g=K.g;O.b=K.b;a(N,V,O);p.r=E.color.r*O.r;p.g=E.color.g*O.g;p.b=E.color.b*O.b;p.updateStyleString()}else p.__styleString=E.color.__styleString;else if(E instanceof THREE.MeshDepthMaterial){M=1-E.__2near/(E.__farPlusNear-V.z*E.__farMinusNear);
p.setRGB(M,M,M)}else E instanceof THREE.MeshNormalMaterial&&p.setRGB(h(V.normalWorld.x),h(V.normalWorld.y),h(V.normalWorld.z));E.wireframe?s.setAttribute("style","fill: none; stroke: "+p.__styleString+"; stroke-width: "+E.wireframe_linewidth+"; stroke-opacity: "+E.opacity+"; stroke-linecap: "+E.wireframe_linecap+"; stroke-linejoin: "+E.wireframe_linejoin):s.setAttribute("style","fill: "+p.__styleString+"; fill-opacity: "+E.opacity);k.appendChild(s)}function f(P,Q,R,V,E,N,X){s=e(u++);s.setAttribute("d",
"M "+P.positionScreen.x+" "+P.positionScreen.y+" L "+Q.positionScreen.x+" "+Q.positionScreen.y+" L "+R.positionScreen.x+","+R.positionScreen.y+" L "+V.positionScreen.x+","+V.positionScreen.y+"z");if(N instanceof THREE.MeshBasicMaterial)p.__styleString=N.color.__styleString;else if(N instanceof THREE.MeshLambertMaterial)if(D){O.r=K.r;O.g=K.g;O.b=K.b;a(X,E,O);p.r=N.color.r*O.r;p.g=N.color.g*O.g;p.b=N.color.b*O.b;p.updateStyleString()}else p.__styleString=N.color.__styleString;else if(N instanceof THREE.MeshDepthMaterial){M=
1-N.__2near/(N.__farPlusNear-E.z*N.__farMinusNear);p.setRGB(M,M,M)}else N instanceof THREE.MeshNormalMaterial&&p.setRGB(h(E.normalWorld.x),h(E.normalWorld.y),h(E.normalWorld.z));N.wireframe?s.setAttribute("style","fill: none; stroke: "+p.__styleString+"; stroke-width: "+N.wireframe_linewidth+"; stroke-opacity: "+N.opacity+"; stroke-linecap: "+N.wireframe_linecap+"; stroke-linejoin: "+N.wireframe_linejoin):s.setAttribute("style","fill: "+p.__styleString+"; fill-opacity: "+N.opacity);k.appendChild(s)}
function e(P){if(r[P]==null){r[P]=document.createElementNS("http://www.w3.org/2000/svg","path");T==0&&r[P].setAttribute("shape-rendering","crispEdges");return r[P]}return r[P]}function h(P){return P<0?Math.min((1+P)*0.5,0.5):0.5+Math.min(P*0.5,0.5)}var i=null,l=new THREE.Projector,k=document.createElementNS("http://www.w3.org/2000/svg","svg"),j,q,y,d,w,A,B,C,L=new THREE.Rectangle,x=new THREE.Rectangle,D=false,p=new THREE.Color(16777215),O=new THREE.Color(16777215),K=new THREE.Color(0),Z=new THREE.Color(0),
S=new THREE.Color(0),M,m=new THREE.Vector3,r=[],v=[],o=[],s,u,H,F,T=1;this.domElement=k;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(P){switch(P){case "high":T=1;break;case "low":T=0}};this.setSize=function(P,Q){j=P;q=Q;y=j/2;d=q/2;k.setAttribute("viewBox",-y+" "+-d+" "+j+" "+q);k.setAttribute("width",j);k.setAttribute("height",q);L.set(-y,-d,y,d)};this.clear=function(){for(;k.childNodes.length>0;)k.removeChild(k.childNodes[0])};this.render=function(P,Q){var R,V,
E,N,X,t,n,z;this.autoClear&&this.clear();i=l.projectScene(P,Q,this.sortElements);F=H=u=0;if(D=P.lights.length>0){n=P.lights;K.setRGB(0,0,0);Z.setRGB(0,0,0);S.setRGB(0,0,0);R=0;for(V=n.length;R<V;R++){E=n[R];N=E.color;if(E instanceof THREE.AmbientLight){K.r+=N.r;K.g+=N.g;K.b+=N.b}else if(E instanceof THREE.DirectionalLight){Z.r+=N.r;Z.g+=N.g;Z.b+=N.b}else if(E instanceof THREE.PointLight){S.r+=N.r;S.g+=N.g;S.b+=N.b}}}R=0;for(V=i.length;R<V;R++){n=i[R];x.empty();if(n instanceof THREE.RenderableParticle){w=
n;w.x*=y;w.y*=-d;E=0;for(N=n.materials.length;E<N;E++)if(z=n.materials[E]){X=w;t=n;z=z;var G=H++;if(v[G]==null){v[G]=document.createElementNS("http://www.w3.org/2000/svg","circle");T==0&&v[G].setAttribute("shape-rendering","crispEdges")}s=v[G];s.setAttribute("cx",X.x);s.setAttribute("cy",X.y);s.setAttribute("r",t.scale.x*y);if(z instanceof THREE.ParticleCircleMaterial){if(D){O.r=K.r+Z.r+S.r;O.g=K.g+Z.g+S.g;O.b=K.b+Z.b+S.b;p.r=z.color.r*O.r;p.g=z.color.g*O.g;p.b=z.color.b*O.b;p.updateStyleString()}else p=
z.color;s.setAttribute("style","fill: "+p.__styleString)}k.appendChild(s)}}else if(n instanceof THREE.RenderableLine){w=n.v1;A=n.v2;w.positionScreen.x*=y;w.positionScreen.y*=-d;A.positionScreen.x*=y;A.positionScreen.y*=-d;x.addPoint(w.positionScreen.x,w.positionScreen.y);x.addPoint(A.positionScreen.x,A.positionScreen.y);if(L.instersects(x)){E=0;for(N=n.materials.length;E<N;)if(z=n.materials[E++]){X=w;t=A;z=z;G=F++;if(o[G]==null){o[G]=document.createElementNS("http://www.w3.org/2000/svg","line");T==
0&&o[G].setAttribute("shape-rendering","crispEdges")}s=o[G];s.setAttribute("x1",X.positionScreen.x);s.setAttribute("y1",X.positionScreen.y);s.setAttribute("x2",t.positionScreen.x);s.setAttribute("y2",t.positionScreen.y);if(z instanceof THREE.LineBasicMaterial){p.__styleString=z.color.__styleString;s.setAttribute("style","fill: none; stroke: "+p.__styleString+"; stroke-width: "+z.linewidth+"; stroke-opacity: "+z.opacity+"; stroke-linecap: "+z.linecap+"; stroke-linejoin: "+z.linejoin);k.appendChild(s)}}}}else if(n instanceof
THREE.RenderableFace3){w=n.v1;A=n.v2;B=n.v3;w.positionScreen.x*=y;w.positionScreen.y*=-d;A.positionScreen.x*=y;A.positionScreen.y*=-d;B.positionScreen.x*=y;B.positionScreen.y*=-d;x.addPoint(w.positionScreen.x,w.positionScreen.y);x.addPoint(A.positionScreen.x,A.positionScreen.y);x.addPoint(B.positionScreen.x,B.positionScreen.y);if(L.instersects(x)){E=0;for(N=n.meshMaterials.length;E<N;){z=n.meshMaterials[E++];if(z instanceof THREE.MeshFaceMaterial){X=0;for(t=n.faceMaterials.length;X<t;)(z=n.faceMaterials[X++])&&
c(w,A,B,n,z,P)}else z&&c(w,A,B,n,z,P)}}}else if(n instanceof THREE.RenderableFace4){w=n.v1;A=n.v2;B=n.v3;C=n.v4;w.positionScreen.x*=y;w.positionScreen.y*=-d;A.positionScreen.x*=y;A.positionScreen.y*=-d;B.positionScreen.x*=y;B.positionScreen.y*=-d;C.positionScreen.x*=y;C.positionScreen.y*=-d;x.addPoint(w.positionScreen.x,w.positionScreen.y);x.addPoint(A.positionScreen.x,A.positionScreen.y);x.addPoint(B.positionScreen.x,B.positionScreen.y);x.addPoint(C.positionScreen.x,C.positionScreen.y);if(L.instersects(x)){E=
0;for(N=n.meshMaterials.length;E<N;){z=n.meshMaterials[E++];if(z instanceof THREE.MeshFaceMaterial){X=0;for(t=n.faceMaterials.length;X<t;)(z=n.faceMaterials[X++])&&f(w,A,B,C,n,z,P)}else z&&f(w,A,B,C,n,z,P)}}}}}};
THREE.WebGLRenderer=function(a){function c(m,r){m.fragment_shader=r.fragment_shader;m.vertex_shader=r.vertex_shader;m.uniforms=Uniforms.clone(r.uniforms)}function f(m,r){m.uniforms.color.value.setRGB(m.color.r*m.opacity,m.color.g*m.opacity,m.color.b*m.opacity);m.uniforms.opacity.value=m.opacity;m.uniforms.map.texture=m.map;m.uniforms.env_map.texture=m.env_map;m.uniforms.reflectivity.value=m.reflectivity;m.uniforms.refraction_ratio.value=m.refraction_ratio;m.uniforms.combine.value=m.combine;m.uniforms.useRefract.value=
m.env_map&&m.env_map.mapping instanceof THREE.CubeRefractionMapping;if(r){m.uniforms.fogColor.value.setHex(r.color.hex);if(r instanceof THREE.Fog){m.uniforms.fogNear.value=r.near;m.uniforms.fogFar.value=r.far}else if(r instanceof THREE.FogExp2)m.uniforms.fogDensity.value=r.density}}function e(m,r,v){var o=d.createProgram(),s=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+v.maxDirLights,"#define MAX_POINT_LIGHTS "+v.maxPointLights,v.fog?"#define USE_FOG":"",v.fog instanceof
THREE.FogExp2?"#define FOG_EXP2":"",v.map?"#define USE_MAP":"",v.env_map?"#define USE_ENVMAP":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");v=[d.getParameter(d.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+v.maxDirLights,"#define MAX_POINT_LIGHTS "+v.maxPointLights,v.map?"#define USE_MAP":"",v.env_map?"#define USE_ENVMAP":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n"].join("\n");
d.attachShader(o,j("fragment",s+m));d.attachShader(o,j("vertex",v+r));d.linkProgram(o);d.getProgramParameter(o,d.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+d.getProgramParameter(o,d.VALIDATE_STATUS)+", gl error ["+d.getError()+"]");o.uniforms={};o.attributes={};return o}function h(m,r){if(m.image.length==6){if(!m.image.__webGLTextureCube&&!m.image.__cubeMapInitialized&&m.image.loadCount==6){m.image.__webGLTextureCube=d.createTexture();d.bindTexture(d.TEXTURE_CUBE_MAP,m.image.__webGLTextureCube);
d.texParameteri(d.TEXTURE_CUBE_MAP,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE);d.texParameteri(d.TEXTURE_CUBE_MAP,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE);d.texParameteri(d.TEXTURE_CUBE_MAP,d.TEXTURE_MAG_FILTER,d.LINEAR);d.texParameteri(d.TEXTURE_CUBE_MAP,d.TEXTURE_MIN_FILTER,d.LINEAR_MIPMAP_LINEAR);for(var v=0;v<6;++v)d.texImage2D(d.TEXTURE_CUBE_MAP_POSITIVE_X+v,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,m.image[v]);d.generateMipmap(d.TEXTURE_CUBE_MAP);d.bindTexture(d.TEXTURE_CUBE_MAP,null);m.image.__cubeMapInitialized=true}d.activeTexture(d.TEXTURE0+
r);d.bindTexture(d.TEXTURE_CUBE_MAP,m.image.__webGLTextureCube)}}function i(m,r){if(!m.__webGLTexture&&m.image.loaded){m.__webGLTexture=d.createTexture();d.bindTexture(d.TEXTURE_2D,m.__webGLTexture);d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,m.image);d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,q(m.wrap_s));d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,q(m.wrap_t));d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,q(m.mag_filter));d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,
q(m.min_filter));d.generateMipmap(d.TEXTURE_2D);d.bindTexture(d.TEXTURE_2D,null)}d.activeTexture(d.TEXTURE0+r);d.bindTexture(d.TEXTURE_2D,m.__webGLTexture)}function l(m,r){var v,o,s;v=0;for(o=r.length;v<o;v++){s=r[v];m.uniforms[s]=d.getUniformLocation(m,s)}}function k(m,r){var v,o,s;v=0;for(o=r.length;v<o;v++){s=r[v];m.attributes[s]=d.getAttribLocation(m,s)}}function j(m,r){var v;if(m=="fragment")v=d.createShader(d.FRAGMENT_SHADER);else if(m=="vertex")v=d.createShader(d.VERTEX_SHADER);d.shaderSource(v,
r);d.compileShader(v);if(!d.getShaderParameter(v,d.COMPILE_STATUS)){alert(d.getShaderInfoLog(v));return null}return v}function q(m){switch(m){case THREE.RepeatWrapping:return d.REPEAT;case THREE.ClampToEdgeWrapping:return d.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return d.MIRRORED_REPEAT;case THREE.NearestFilter:return d.NEAREST;case THREE.NearestMipMapNearestFilter:return d.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return d.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return d.LINEAR;
case THREE.LinearMipMapNearestFilter:return d.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return d.LINEAR_MIPMAP_LINEAR}return 0}var y=document.createElement("canvas"),d,w,A,B=new THREE.Matrix4,C,L=new Float32Array(16),x=new Float32Array(16),D=new Float32Array(16),p=new Float32Array(9),O=new Float32Array(16),K=function(m,r){if(m){var v,o,s,u=pointLights=maxDirLights=maxPointLights=0;v=0;for(o=m.lights.length;v<o;v++){s=m.lights[v];s instanceof THREE.DirectionalLight&&u++;s instanceof
THREE.PointLight&&pointLights++}if(pointLights+u<=r){maxDirLights=u;maxPointLights=pointLights}else{maxDirLights=Math.ceil(r*u/(pointLights+u));maxPointLights=r-maxDirLights}return{directional:maxDirLights,point:maxPointLights}}return{directional:1,point:r-1}}(a.scene,4),Z=a.scene?a.scene.fog:null,S=a.antialias!=undefined?a.antialias:true,M=a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0);a=a.clearAlpha?a.clearAlpha:0;this.domElement=y;this.autoClear=true;(function(m,r,v){try{d=y.getContext("experimental-webgl",
{antialias:m})}catch(o){}if(!d){alert("WebGL not supported");throw"cannot create webgl context";}d.clearColor(0,0,0,1);d.clearDepth(1);d.enable(d.DEPTH_TEST);d.depthFunc(d.LEQUAL);d.frontFace(d.CCW);d.cullFace(d.BACK);d.enable(d.CULL_FACE);d.enable(d.BLEND);d.blendFunc(d.ONE,d.ONE_MINUS_SRC_ALPHA);d.clearColor(r.r,r.g,r.b,v)})(S,M,a);w=A=function(m,r,v){var o=["#define PHONG\nuniform bool useRefract;",THREE.Snippets.lights_pars_vertex,"varying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vReflect;\nuniform float mRefractionRatio;\nvoid main(void) {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec3 transformedNormal = normalize( normalMatrix * normal );",
THREE.Snippets.lights_vertex,"vNormal = transformedNormal;\nvUv = uv;\nif ( useRefract ) {\nvReflect = refract( normalize(mPosition.xyz - cameraPosition), normalize(nWorld.xyz), mRefractionRatio );\n} else {\nvReflect = reflect( normalize(mPosition.xyz - cameraPosition), normalize(nWorld.xyz) );\n}\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),s=["uniform int material;\nuniform bool enableMap;\nuniform bool enableCubeMap;\nuniform bool mixEnvMap;\nuniform samplerCube tCube;\nuniform float mReflectivity;\nuniform sampler2D tMap;\nuniform vec4 mColor;\nuniform float mOpacity;\nuniform vec4 mAmbient;\nuniform vec4 mSpecular;\nuniform float mShininess;",
THREE.Snippets.fog_pars_fragment,"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vLightWeighting;\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vReflect;\nvoid main() {\nvec4 mapColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nvec4 cubeColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nif ( enableMap ) {\nmapColor = texture2D( tMap, vUv );\n}\nif ( enableCubeMap ) {\ncubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n}\nif ( material == 2 ) { \nvec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, mShininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, mShininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = mAmbient;\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif\nif ( mixEnvMap ) {\ngl_FragColor = vec4( mix( mapColor.rgb * totalLight.xyz * vLightWeighting, cubeColor.rgb, mReflectivity ), mapColor.a );\n} else {\ngl_FragColor = vec4( mapColor.rgb * cubeColor.rgb * totalLight.xyz * vLightWeighting, mapColor.a );\n}\n}",
THREE.Snippets.fog_fragment,"}"].join("\n");o=e(s,o,{fog:v,maxDirLights:m,maxPointLights:r});d.useProgram(o);l(o,["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","enableLighting","ambientLightColor","material","mColor","mAmbient","mSpecular","mShininess","mOpacity","enableMap","tMap","enableCubeMap","tCube","mixEnvMap","mReflectivity","mRefractionRatio","useRefract"]);v&&l(o,["fogColor","fogNear","fogFar","fogDensity"]);m&&l(o,["directionalLightColor",
"directionalLightDirection"]);r&&l(o,["pointLightColor","pointLightPosition"]);d.uniform1i(o.uniforms.enableMap,0);d.uniform1i(o.uniforms.tMap,0);d.uniform1i(o.uniforms.enableCubeMap,0);d.uniform1i(o.uniforms.tCube,1);d.uniform1i(o.uniforms.mixEnvMap,0);d.uniform1i(o.uniforms.useRefract,0);k(o,["position","normal","uv"]);return o}(K.directional,K.point,Z);this.setSize=function(m,r){y.width=m;y.height=r;d.viewport(0,0,y.width,y.height)};this.setClearColor=function(m,r){var v=new THREE.Color(m);d.clearColor(v.r,
v.g,v.b,r)};this.clear=function(){d.clear(d.COLOR_BUFFER_BIT|d.DEPTH_BUFFER_BIT)};this.setupLights=function(m,r){var v,o,s,u=g=b=0,H=[],F=[],T=[],P=[];v=0;for(o=r.length;v<o;v++){s=r[v];if(s instanceof THREE.AmbientLight){u+=s.color.r;g+=s.color.g;b+=s.color.b}else if(s instanceof THREE.DirectionalLight){H.push(s.color.r*s.intensity,s.color.g*s.intensity,s.color.b*s.intensity);F.push(s.position.x,s.position.y,s.position.z)}else if(s instanceof THREE.PointLight){T.push(s.color.r*s.intensity,s.color.g*
s.intensity,s.color.b*s.intensity);P.push(s.position.x,s.position.y,s.position.z)}}return{ambient:[u,g,b],directional:{colors:H,positions:F},point:{colors:T,positions:P}}};this.createBuffers=function(m,r){var v,o,s,u,H,F,T,P,Q,R=[],V=[],E=[],N=[],X=[],t=[],n=0,z=m.geometry.geometryChunks[r],G;s=false;v=0;for(o=m.materials.length;v<o;v++){meshMaterial=m.materials[v];if(meshMaterial instanceof THREE.MeshFaceMaterial){H=0;for(G=z.materials.length;H<G;H++)if(z.materials[H]&&z.materials[H].shading!=undefined&&
z.materials[H].shading==THREE.SmoothShading){s=true;break}}else if(meshMaterial&&meshMaterial.shading!=undefined&&meshMaterial.shading==THREE.SmoothShading){s=true;break}if(s)break}G=s;v=0;for(o=z.faces.length;v<o;v++){s=z.faces[v];u=m.geometry.faces[s];H=u.vertexNormals;faceNormal=u.normal;s=m.geometry.uvs[s];if(u instanceof THREE.Face3){F=m.geometry.vertices[u.a].position;T=m.geometry.vertices[u.b].position;P=m.geometry.vertices[u.c].position;E.push(F.x,F.y,F.z);E.push(T.x,T.y,T.z);E.push(P.x,P.y,
P.z);if(m.geometry.hasTangents){F=m.geometry.vertices[u.a].tangent;T=m.geometry.vertices[u.b].tangent;P=m.geometry.vertices[u.c].tangent;X.push(F.x,F.y,F.z,F.w);X.push(T.x,T.y,T.z,T.w);X.push(P.x,P.y,P.z,P.w)}if(H.length==3&&G)for(u=0;u<3;u++)N.push(H[u].x,H[u].y,H[u].z);else for(u=0;u<3;u++)N.push(faceNormal.x,faceNormal.y,faceNormal.z);if(s)for(u=0;u<3;u++)t.push(s[u].u,s[u].v);R.push(n,n+1,n+2);V.push(n,n+1);V.push(n,n+2);V.push(n+1,n+2);n+=3}else if(u instanceof THREE.Face4){F=m.geometry.vertices[u.a].position;
T=m.geometry.vertices[u.b].position;P=m.geometry.vertices[u.c].position;Q=m.geometry.vertices[u.d].position;E.push(F.x,F.y,F.z);E.push(T.x,T.y,T.z);E.push(P.x,P.y,P.z);E.push(Q.x,Q.y,Q.z);if(m.geometry.hasTangents){F=m.geometry.vertices[u.a].tangent;T=m.geometry.vertices[u.b].tangent;P=m.geometry.vertices[u.c].tangent;u=m.geometry.vertices[u.d].tangent;X.push(F.x,F.y,F.z,F.w);X.push(T.x,T.y,T.z,T.w);X.push(P.x,P.y,P.z,P.w);X.push(u.x,u.y,u.z,u.w)}if(H.length==4&&G)for(u=0;u<4;u++)N.push(H[u].x,H[u].y,
H[u].z);else for(u=0;u<4;u++)N.push(faceNormal.x,faceNormal.y,faceNormal.z);if(s)for(u=0;u<4;u++)t.push(s[u].u,s[u].v);R.push(n,n+1,n+2);R.push(n,n+2,n+3);V.push(n,n+1);V.push(n,n+2);V.push(n,n+3);V.push(n+1,n+2);V.push(n+2,n+3);n+=4}}if(E.length){z.__webGLVertexBuffer=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,z.__webGLVertexBuffer);d.bufferData(d.ARRAY_BUFFER,new Float32Array(E),d.STATIC_DRAW);z.__webGLNormalBuffer=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,z.__webGLNormalBuffer);d.bufferData(d.ARRAY_BUFFER,
new Float32Array(N),d.STATIC_DRAW);if(m.geometry.hasTangents){z.__webGLTangentBuffer=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,z.__webGLTangentBuffer);d.bufferData(d.ARRAY_BUFFER,new Float32Array(X),d.STATIC_DRAW)}if(t.length>0){z.__webGLUVBuffer=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,z.__webGLUVBuffer);d.bufferData(d.ARRAY_BUFFER,new Float32Array(t),d.STATIC_DRAW)}z.__webGLFaceBuffer=d.createBuffer();d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,z.__webGLFaceBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,
new Uint16Array(R),d.STATIC_DRAW);z.__webGLLineBuffer=d.createBuffer();d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,z.__webGLLineBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,new Uint16Array(V),d.STATIC_DRAW);z.__webGLFaceCount=R.length;z.__webGLLineCount=V.length}};this.renderBuffer=function(m,r,v,o,s){var u,H,F,T,P,Q,R,V,E;if(o instanceof THREE.MeshShaderMaterial||o instanceof THREE.MeshDepthMaterial||o instanceof THREE.MeshNormalMaterial||o instanceof THREE.MeshBasicMaterial||o instanceof THREE.MeshLambertMaterial){if(!o.program){if(o instanceof
THREE.MeshDepthMaterial){c(o,THREE.ShaderLib.depth);o.uniforms.mNear.value=m.near;o.uniforms.mFar.value=m.far}else if(o instanceof THREE.MeshNormalMaterial)c(o,THREE.ShaderLib.normal);else if(o instanceof THREE.MeshBasicMaterial){c(o,THREE.ShaderLib.basic);f(o,v)}else if(o instanceof THREE.MeshLambertMaterial){c(o,THREE.ShaderLib.lambert);f(o,v)}R={fog:v,map:o.map,env_map:o.env_map,maxDirLights:K.directional,maxPointLights:K.point};o.program=e(o.fragment_shader,o.vertex_shader,R);R=["viewMatrix",
"modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(E in o.uniforms)R.push(E);l(o.program,R);k(o.program,["position","normal","uv","tangent"])}E=o.program}else E=A;if(E!=w){d.useProgram(E);w=E}if(E==A||o instanceof THREE.MeshLambertMaterial){r=this.setupLights(E,r);if(E==A){d.uniform1i(E.uniforms.enableLighting,r.directional.positions.length+r.point.positions.length||r.ambient[0]||r.ambient[1]||r.ambient[2]);d.uniform3fv(E.uniforms.ambientLightColor,r.ambient);
if(r.directional.positions.length){d.uniform3fv(E.uniforms.directionalLightDirection,r.directional.positions);d.uniform3fv(E.uniforms.directionalLightColor,r.directional.colors)}if(r.point.positions.length){d.uniform3fv(E.uniforms.pointLightPosition,r.point.positions);d.uniform3fv(E.uniforms.pointLightColor,r.point.colors)}}else{o.uniforms.enableLighting.value=r.directional.positions.length+r.point.positions.length;o.uniforms.ambientLightColor.value=r.ambient;o.uniforms.directionalLightColor.value=
r.directional.colors;o.uniforms.directionalLightDirection.value=r.directional.positions;o.uniforms.pointLightColor.value=r.point.colors;o.uniforms.pointLightPosition.value=r.point.positions}}this.loadCamera(E,m);this.loadMatrices(E);if(o instanceof THREE.MeshBasicMaterial||o instanceof THREE.MeshLambertMaterial)f(o,v);if(o instanceof THREE.MeshShaderMaterial||o instanceof THREE.MeshDepthMaterial||o instanceof THREE.MeshNormalMaterial||o instanceof THREE.MeshBasicMaterial||o instanceof THREE.MeshLambertMaterial){F=
o.wireframe;T=o.wireframe_linewidth;m=E;r=o.uniforms;var N;for(u in r){V=r[u].type;R=r[u].value;N=m.uniforms[u];if(V=="i")d.uniform1i(N,R);else if(V=="f")d.uniform1f(N,R);else if(V=="fv")d.uniform3fv(N,R);else if(V=="v3")d.uniform3f(N,R.x,R.y,R.z);else if(V=="c")d.uniform3f(N,R.r,R.g,R.b);else if(V=="t"){d.uniform1i(N,R);if(V=r[u].texture)V.image instanceof Array&&V.image.length==6?h(V,R):i(V,R)}}}if(o instanceof THREE.MeshPhongMaterial){u=o.color;H=o.opacity;F=o.wireframe;T=o.wireframe_linewidth;
P=o.map;Q=o.env_map;r=o.combine==THREE.MixOperation;m=o.reflectivity;V=o.env_map&&o.env_map.mapping instanceof THREE.CubeRefractionMapping;R=o.refraction_ratio;d.uniform4f(E.uniforms.mColor,u.r*H,u.g*H,u.b*H,H);d.uniform1i(E.uniforms.mixEnvMap,r);d.uniform1f(E.uniforms.mReflectivity,m);d.uniform1i(E.uniforms.useRefract,V);d.uniform1f(E.uniforms.mRefractionRatio,R);if(v){d.uniform3f(E.uniforms.fogColor,v.color.r,v.color.g,v.color.b);if(v instanceof THREE.Fog){d.uniform1f(E.uniforms.fogNear,v.near);
d.uniform1f(E.uniforms.fogFar,v.far)}else v instanceof THREE.FogExp2&&d.uniform1f(E.uniforms.fogDensity,v.density)}}if(o instanceof THREE.MeshPhongMaterial){v=o.ambient;u=o.specular;o=o.shininess;d.uniform4f(E.uniforms.mAmbient,v.r,v.g,v.b,H);d.uniform4f(E.uniforms.mSpecular,u.r,u.g,u.b,H);d.uniform1f(E.uniforms.mShininess,o);d.uniform1i(E.uniforms.material,2)}if(P){i(P,0);d.uniform1i(E.uniforms.tMap,0);d.uniform1i(E.uniforms.enableMap,1)}else d.uniform1i(E.uniforms.enableMap,0);if(Q){h(Q,1);d.uniform1i(E.uniforms.tCube,
1);d.uniform1i(E.uniforms.enableCubeMap,1)}else d.uniform1i(E.uniforms.enableCubeMap,0);H=E.attributes;d.bindBuffer(d.ARRAY_BUFFER,s.__webGLVertexBuffer);d.vertexAttribPointer(H.position,3,d.FLOAT,false,0,0);d.enableVertexAttribArray(H.position);if(H.normal>=0){d.bindBuffer(d.ARRAY_BUFFER,s.__webGLNormalBuffer);d.vertexAttribPointer(H.normal,3,d.FLOAT,false,0,0);d.enableVertexAttribArray(H.normal)}if(H.tangent>=0){d.bindBuffer(d.ARRAY_BUFFER,s.__webGLTangentBuffer);d.vertexAttribPointer(H.tangent,
4,d.FLOAT,false,0,0);d.enableVertexAttribArray(H.tangent)}if(H.uv>=0)if(s.__webGLUVBuffer){d.bindBuffer(d.ARRAY_BUFFER,s.__webGLUVBuffer);d.vertexAttribPointer(H.uv,2,d.FLOAT,false,0,0);d.enableVertexAttribArray(H.uv)}else d.disableVertexAttribArray(H.uv);if(F){d.lineWidth(T);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,s.__webGLLineBuffer);d.drawElements(d.LINES,s.__webGLLineCount,d.UNSIGNED_SHORT,0)}else{d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,s.__webGLFaceBuffer);d.drawElements(d.TRIANGLES,s.__webGLFaceCount,
d.UNSIGNED_SHORT,0)}};this.renderPass=function(m,r,v,o,s,u,H){var F,T,P,Q,R;P=0;for(Q=o.materials.length;P<Q;P++){F=o.materials[P];if(F instanceof THREE.MeshFaceMaterial){F=0;for(T=s.materials.length;F<T;F++)if((R=s.materials[F])&&R.blending==u&&R.opacity<1==H){this.setBlending(R.blending);this.renderBuffer(m,r,v,R,s)}}else if((R=F)&&R.blending==u&&R.opacity<1==H){this.setBlending(R.blending);this.renderBuffer(m,r,v,R,s)}}};this.render=function(m,r){var v,o,s,u,H=m.lights,F=m.fog;this.initWebGLObjects(m);
this.autoClear&&this.clear();r.autoUpdateMatrix&&r.updateMatrix();L.set(r.matrix.flatten());D.set(r.projectionMatrix.flatten());v=0;for(o=m.__webGLObjects.length;v<o;v++){s=m.__webGLObjects[v];u=s.object;s=s.buffer;if(u.visible){this.setupMatrices(u,r);this.renderPass(r,H,F,u,s,THREE.NormalBlending,false)}}v=0;for(o=m.__webGLObjects.length;v<o;v++){s=m.__webGLObjects[v];u=s.object;s=s.buffer;if(u.visible){this.setupMatrices(u,r);this.renderPass(r,H,F,u,s,THREE.AdditiveBlending,false);this.renderPass(r,
H,F,u,s,THREE.SubtractiveBlending,false);this.renderPass(r,H,F,u,s,THREE.AdditiveBlending,true);this.renderPass(r,H,F,u,s,THREE.SubtractiveBlending,true);this.renderPass(r,H,F,u,s,THREE.NormalBlending,true)}}};this.initWebGLObjects=function(m){var r,v,o,s,u,H;if(!m.__webGLObjects){m.__webGLObjects=[];m.__webGLObjectsMap={}}r=0;for(v=m.objects.length;r<v;r++){o=m.objects[r];if(m.__webGLObjectsMap[o.id]==undefined)m.__webGLObjectsMap[o.id]={};H=m.__webGLObjectsMap[o.id];if(o instanceof THREE.Mesh)for(u in o.geometry.geometryChunks){s=
o.geometry.geometryChunks[u];s.__webGLVertexBuffer||this.createBuffers(o,u);if(H[u]==undefined){s={buffer:s,object:o};m.__webGLObjects.push(s);H[u]=1}}}};this.removeObject=function(m,r){var v,o;for(v=m.__webGLObjects.length-1;v>=0;v--){o=m.__webGLObjects[v].object;r==o&&m.__webGLObjects.splice(v,1)}};this.setupMatrices=function(m,r){m.autoUpdateMatrix&&m.updateMatrix();B.multiply(r.matrix,m.matrix);x.set(B.flatten());C=THREE.Matrix4.makeInvert3x3(B).transpose();p.set(C.m);O.set(m.matrix.flatten())};
this.loadMatrices=function(m){d.uniformMatrix4fv(m.uniforms.viewMatrix,false,L);d.uniformMatrix4fv(m.uniforms.modelViewMatrix,false,x);d.uniformMatrix4fv(m.uniforms.projectionMatrix,false,D);d.uniformMatrix3fv(m.uniforms.normalMatrix,false,p);d.uniformMatrix4fv(m.uniforms.objectMatrix,false,O)};this.loadCamera=function(m,r){d.uniform3f(m.uniforms.cameraPosition,r.position.x,r.position.y,r.position.z)};this.setBlending=function(m){switch(m){case THREE.AdditiveBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.ONE,
d.ONE);break;case THREE.SubtractiveBlending:d.blendFunc(d.DST_COLOR,d.ZERO);break;default:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.ONE,d.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=function(m,r){if(m){!r||r=="ccw"?d.frontFace(d.CCW):d.frontFace(d.CW);if(m=="back")d.cullFace(d.BACK);else m=="front"?d.cullFace(d.FRONT):d.cullFace(d.FRONT_AND_BACK);d.enable(d.CULL_FACE)}else d.disable(d.CULL_FACE)};this.supportsVertexTextures=function(){return d.getParameter(d.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, 1.0 ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\ncubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = mix( gl_FragColor, cubeColor, reflectivity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif",
envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",
map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0, 1.0, 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}"};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",
vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},
fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},fragment_shader:["uniform vec3 color;\nuniform float opacity;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nvec4 cubeColor = vec4( 1.0, 1.0, 1.0, 1.0 );",THREE.Snippets.map_fragment,"gl_FragColor = mColor * mapColor;",
THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},lambert:{uniforms:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},env_map:{type:"t",value:1,
texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)},enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",
value:[]}},fragment_shader:["uniform vec3 color;\nuniform float opacity;\nvarying vec3 vLightWeighting;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nvec4 cubeColor = vec4( 1.0, 1.0, 1.0, 1.0 );",THREE.Snippets.map_fragment,"gl_FragColor =  mColor * mapColor * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,
"}"].join("\n"),vertex_shader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")}};
THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
var GeometryUtils={merge:function(a,c){var f=c instanceof THREE.Mesh,e=a.vertices.length,h=f?c.geometry:c,i=a.vertices,l=h.vertices,k=a.faces,j=h.faces,q=a.uvs;h=h.uvs;f&&c.updateMatrix();for(var y=0,d=l.length;y<d;y++){var w=new THREE.Vertex(l[y].position.clone());f&&c.matrix.multiplyVector3(w.position);i.push(w)}y=0;for(d=j.length;y<d;y++){l=j[y];var A,B=l.vertexNormals;if(l instanceof THREE.Face3)A=new THREE.Face3(l.a+e,l.b+e,l.c+e);else if(l instanceof THREE.Face4)A=new THREE.Face4(l.a+e,l.b+
e,l.c+e,l.d+e);A.centroid.copy(l.centroid);A.normal.copy(l.normal);f=0;for(i=B.length;f<i;f++){w=B[f];A.vertexNormals.push(w.clone())}A.materials=l.materials.slice();k.push(A)}y=0;for(d=h.length;y<d;y++){e=h[y];k=[];f=0;for(i=e.length;f<i;f++)k.push(new THREE.UV(e[f].u,e[f].v));q.push(k)}}},ImageUtils={loadTexture:function(a,c){var f=new Image;f.onload=function(){this.loaded=true};f.src=a;return new THREE.Texture(f,c)},loadArray:function(a){var c,f,e=[];c=e.loadCount=0;for(f=a.length;c<f;++c){e[c]=
new Image;e[c].loaded=0;e[c].onload=function(){e.loadCount+=1;this.loaded=true};e[c].src=a[c]}return e}},SceneUtils={addMesh:function(a,c,f,e,h,i,l,k,j,q){c=new THREE.Mesh(c,q);c.scale.x=c.scale.y=c.scale.z=f;c.position.x=e;c.position.y=h;c.position.z=i;c.rotation.x=l;c.rotation.y=k;c.rotation.z=j;a.addObject(c);return c},addPanoramaCubeWebGL:function(a,c,f){var e=ShaderUtils.lib.cube;e.uniforms.tCube.texture=f;f=new THREE.MeshShaderMaterial({fragment_shader:e.fragment_shader,vertex_shader:e.vertex_shader,
uniforms:e.uniforms});c=new THREE.Mesh(new Cube(c,c,c,1,1,null,true),f);a.addObject(c);return c},addPanoramaCube:function(a,c,f){var e=[];e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(f[0])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(f[1])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(f[2])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(f[3])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(f[4])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(f[5])}));
mesh=new THREE.Mesh(new Cube(c,c,c,1,1,e,true),new THREE.MeshFaceMaterial);a.addObject(mesh);return mesh},addPanoramaCubePlanes:function(a,c,f){var e=c/2;c=new Plane(c,c);var h=Math.PI/2,i=Math.PI;SceneUtils.addMesh(a,c,1,0,0,-e,0,0,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(f[5])}));SceneUtils.addMesh(a,c,1,-e,0,0,0,h,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(f[0])}));SceneUtils.addMesh(a,c,1,e,0,0,0,-h,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(f[1])}));SceneUtils.addMesh(a,
c,1,0,e,0,h,0,i,new THREE.MeshBasicMaterial({map:new THREE.Texture(f[2])}));SceneUtils.addMesh(a,c,1,0,-e,0,-h,0,i,new THREE.MeshBasicMaterial({map:new THREE.Texture(f[3])}))}},ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertex_shader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main(void) {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tNormal:{type:"t",value:2,texture:null},tAO:{type:"t",value:3,texture:null},uNormalScale:{type:"f",value:1},tDisplacement:{type:"t",value:4,texture:null},uDisplacementBias:{type:"f",value:-0.5},uDisplacementScale:{type:"f",value:2.5},uPointLightPos:{type:"v3",value:new THREE.Vector3},uPointLightColor:{type:"c",value:new THREE.Color(15658734)},uDirLightPos:{type:"v3",value:new THREE.Vector3},
uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30}},fragment_shader:"uniform vec3 uDirLightPos;\nuniform vec3 uAmbientLightColor;\nuniform vec3 uDirLightColor;\nuniform vec3 uPointLightColor;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform bool enableDiffuse;\nuniform bool enableAO;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tAO;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 diffuseTex = vec3( 1.0, 1.0, 1.0 );\nvec3 aoTex = vec3( 1.0, 1.0, 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse )\ndiffuseTex = texture2D( tDiffuse, vUv ).xyz;\nif( enableAO )\naoTex = texture2D( tAO, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec3 pointVector = normalize( vPointLightVector );\nvec3 pointHalfVector = normalize( vPointLightVector + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, uShininess );\npointDiffuse  += vec4( uDiffuseColor, 1.0 ) * pointDiffuseWeight;\npointSpecular += vec4( uSpecularColor, 1.0 ) * pointSpecularWeight;\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 lDirection = viewMatrix * vec4( uDirLightPos, 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, uShininess );\ndirDiffuse  += vec4( uDiffuseColor, 1.0 ) * dirDiffuseWeight;\ndirSpecular += vec4( uSpecularColor, 1.0 ) * dirSpecularWeight;\nvec4 totalLight = vec4( uAmbientLightColor * uAmbientColor, 1.0 );\ntotalLight += vec4( uDirLightColor, 1.0 ) * ( dirDiffuse + dirSpecular );\ntotalLight += vec4( uPointLightColor, 1.0 ) * ( pointDiffuse + pointSpecular );\ngl_FragColor = vec4( totalLight.xyz * aoTex * diffuseTex, 1.0 );\n}",
vertex_shader:"attribute vec4 tangent;\nuniform vec3 uPointLightPos;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec4 lPosition = viewMatrix * vec4( uPointLightPos, 1.0 );\nvPointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}"},
basic:{uniforms:{},vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"void main() {\ngl_FragColor = vec4(1.0, 0.0, 0.0, 0.5);\n}"},cube:{uniforms:{tCube:{type:"t",value:1,texture:null}},vertex_shader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( - wPos.x, wPos.yz ) );\n}"}}},Cube=function(a,c,f,e,h,i,l,k){function j(C,L,x,D,p,O,K,Z){var S,M=e||1,m=h||1,r=M+1,v=m+1,o=p/2,s=O/2;p=p/M;O=O/m;var u=q.vertices.length;if(C=="x"&&L=="y"||C=="y"&&L=="x")S="z";else if(C=="x"&&L=="z"||C=="z"&&L=="x")S="y";else if(C=="z"&&L=="y"||C=="y"&&L=="z")S="x";for(iy=0;iy<v;iy++)for(ix=0;ix<
r;ix++){var H=new THREE.Vector3;H[C]=(ix*p-o)*x;H[L]=(iy*O-s)*D;H[S]=K;q.vertices.push(new THREE.Vertex(H))}for(iy=0;iy<m;iy++)for(ix=0;ix<M;ix++){q.faces.push(new THREE.Face4(ix+r*iy+u,ix+r*(iy+1)+u,ix+1+r*(iy+1)+u,ix+1+r*iy+u,null,Z));q.uvs.push([new THREE.UV(ix/M,iy/m),new THREE.UV(ix/M,(iy+1)/m),new THREE.UV((ix+1)/M,(iy+1)/m),new THREE.UV((ix+1)/M,iy/m)])}}THREE.Geometry.call(this);var q=this,y=a/2,d=c/2,w=f/2;l=l?-1:1;if(i!==undefined)if(i instanceof Array)this.materials=i;else{this.materials=
[];for(var A=0;A<6;A++)this.materials.push([i])}else this.materials=[];this.sides={px:true,nx:true,py:true,ny:true,pz:true,nz:true};if(k!=undefined)for(var B in k)if(this.sides[B]!=undefined)this.sides[B]=k[B];this.sides.px&&j("z","y",1*l,-1,f,c,-y,this.materials[0]);this.sides.nx&&j("z","y",-1*l,-1,f,c,y,this.materials[1]);this.sides.py&&j("x","z",1*l,1,a,f,d,this.materials[2]);this.sides.ny&&j("x","z",1*l,-1,a,f,-d,this.materials[3]);this.sides.pz&&j("x","y",1*l,-1,a,c,w,this.materials[4]);this.sides.nz&&
j("x","y",-1*l,-1,a,c,-w,this.materials[5]);(function(){for(var C=[],L=[],x=0,D=q.vertices.length;x<D;x++){for(var p=q.vertices[x],O=false,K=0,Z=C.length;K<Z;K++){var S=C[K];if(p.position.x==S.position.x&&p.position.y==S.position.y&&p.position.z==S.position.z){L[x]=K;O=true;break}}if(!O){L[x]=C.length;C.push(new THREE.Vertex(p.position.clone()))}}x=0;for(D=q.faces.length;x<D;x++){p=q.faces[x];p.a=L[p.a];p.b=L[p.b];p.c=L[p.c];p.d=L[p.d]}q.vertices=C})();this.computeCentroids();this.computeFaceNormals();
this.sortFacesByMaterial()};Cube.prototype=new THREE.Geometry;Cube.prototype.constructor=Cube;
var Cylinder=function(a,c,f,e,h){function i(q,y,d){l.vertices.push(new THREE.Vertex(new THREE.Vector3(q,y,d)))}THREE.Geometry.call(this);var l=this,k=Math.PI,j;for(j=0;j<a;j++)i(Math.sin(2*k*j/a)*c,Math.cos(2*k*j/a)*c,0);for(j=0;j<a;j++)i(Math.sin(2*k*j/a)*f,Math.cos(2*k*j/a)*f,e);for(j=0;j<a;j++)l.faces.push(new THREE.Face4(j,j+a,a+(j+1)%a,(j+1)%a));if(f!=0){i(0,0,-h);for(j=a;j<a+a/2;j++)l.faces.push(new THREE.Face4(2*a,(2*j-2*a)%a,(2*j-2*a+1)%a,(2*j-2*a+2)%a))}if(c!=0){i(0,0,e+h);for(j=a+a/2;j<
2*a;j++)l.faces.push(new THREE.Face4((2*j-2*a+2)%a+a,(2*j-2*a+1)%a+a,(2*j-2*a)%a+a,2*a+1))}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cylinder.prototype=new THREE.Geometry;Cylinder.prototype.constructor=Cylinder;
var Plane=function(a,c,f,e){THREE.Geometry.call(this);var h,i=a/2,l=c/2;f=f||1;e=e||1;var k=f+1,j=e+1;a=a/f;var q=c/e;for(h=0;h<j;h++)for(c=0;c<k;c++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(c*a-i,-(h*q-l),0)));for(h=0;h<e;h++)for(c=0;c<f;c++){this.faces.push(new THREE.Face4(c+k*h,c+k*(h+1),c+1+k*(h+1),c+1+k*h));this.uvs.push([new THREE.UV(c/f,h/e),new THREE.UV(c/f,(h+1)/e),new THREE.UV((c+1)/f,(h+1)/e),new THREE.UV((c+1)/f,h/e)])}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};
Plane.prototype=new THREE.Geometry;Plane.prototype.constructor=Plane;
var Sphere=function(a,c,f){THREE.Geometry.call(this);var e,h=Math.PI,i=Math.max(3,c||8),l=Math.max(2,f||6);c=[];for(f=0;f<l+1;f++){e=f/l;var k=a*Math.cos(e*h),j=a*Math.sin(e*h),q=[],y=0;for(e=0;e<i;e++){var d=2*e/i,w=j*Math.sin(d*h);d=j*Math.cos(d*h);(f==0||f==l)&&e>0||(y=this.vertices.push(new THREE.Vertex(new THREE.Vector3(d,k,w)))-1);q.push(y)}c.push(q)}var A,B,C;h=c.length;for(f=0;f<h;f++){i=c[f].length;if(f>0)for(e=0;e<i;e++){q=e==i-1;l=c[f][q?0:e+1];k=c[f][q?i-1:e];j=c[f-1][q?i-1:e];q=c[f-1][q?
0:e+1];w=f/(h-1);A=(f-1)/(h-1);B=(e+1)/i;d=e/i;y=new THREE.UV(1-B,w);w=new THREE.UV(1-d,w);d=new THREE.UV(1-d,A);var L=new THREE.UV(1-B,A);if(f<c.length-1){A=this.vertices[l].position.clone();B=this.vertices[k].position.clone();C=this.vertices[j].position.clone();A.normalize();B.normalize();C.normalize();this.faces.push(new THREE.Face3(l,k,j,[new THREE.Vector3(A.x,A.y,A.z),new THREE.Vector3(B.x,B.y,B.z),new THREE.Vector3(C.x,C.y,C.z)]));this.uvs.push([y,w,d])}if(f>1){A=this.vertices[l].position.clone();
B=this.vertices[j].position.clone();C=this.vertices[q].position.clone();A.normalize();B.normalize();C.normalize();this.faces.push(new THREE.Face3(l,j,q,[new THREE.Vector3(A.x,A.y,A.z),new THREE.Vector3(B.x,B.y,B.z),new THREE.Vector3(C.x,C.y,C.z)]));this.uvs.push([y,d,L])}}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial();this.boundingSphere={radius:a}};Sphere.prototype=new THREE.Geometry;Sphere.prototype.constructor=Sphere;
THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?this.addStatusElement():null};
THREE.Loader.prototype={addStatusElement:function(){var a=document.createElement("div");a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="#b00";a.style.color="#fff";a.style.width="140px";a.style.padding="0.25em 0.25em 0.25em 0.5em";a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var c="Loaded ";c+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1E3).toFixed(2)+" KB";this.statusDomElement.innerHTML=
c},loadAsciiOld:function(a,c){var f=document.createElement("script");f.type="text/javascript";f.onload=c;f.src=a;document.getElementsByTagName("head")[0].appendChild(f)},loadAscii:function(a,c,f){var e=(new Date).getTime();a=new Worker(a);a.onmessage=function(h){THREE.Loader.prototype.createModel(h.data,c,f)};a.postMessage(e)},loadBinary:function(a,c,f){var e=(new Date).getTime();a=new Worker(a);var h=this.showProgress?THREE.Loader.prototype.updateProgress:null;a.onmessage=function(i){THREE.Loader.prototype.loadAjaxBuffers(i.data.buffers,
i.data.materials,c,f,h)};a.onerror=function(i){alert("worker.onerror: "+i.message+"\n"+i.data);i.preventDefault()};a.postMessage(e)},loadAjaxBuffers:function(a,c,f,e,h){var i=new XMLHttpRequest,l=e+"/"+a,k=0;i.onreadystatechange=function(){if(i.readyState==4)i.status==200||i.status==0?THREE.Loader.prototype.createBinModel(i.responseText,f,e,c):alert("Couldn't load ["+l+"] ["+i.status+"]");else if(i.readyState==3){if(h){if(k==0)k=i.getResponseHeader("Content-Length");h({total:k,loaded:i.responseText.length})}}else if(i.readyState==
2)k=i.getResponseHeader("Content-Length")};i.open("GET",l,true);i.overrideMimeType("text/plain; charset=x-user-defined");i.setRequestHeader("Content-Type","text/plain");i.send(null)},createBinModel:function(a,c,f,e){var h=function(i){function l(t,n){var z=y(t,n),G=y(t,n+1),Y=y(t,n+2),da=y(t,n+3),ha=(da<<1&255|Y>>7)-127;z=(Y&127)<<16|G<<8|z;if(z==0&&ha==-127)return 0;return(1-2*(da>>7))*(1+z*Math.pow(2,-23))*Math.pow(2,ha)}function k(t,n){var z=y(t,n),G=y(t,n+1),Y=y(t,n+2);return(y(t,n+3)<<24)+(Y<<
16)+(G<<8)+z}function j(t,n){var z=y(t,n);return(y(t,n+1)<<8)+z}function q(t,n){var z=y(t,n);return z>127?z-256:z}function y(t,n){return t.charCodeAt(n)&255}function d(t){var n,z,G;n=k(a,t);z=k(a,t+Z);G=k(a,t+S);t=j(a,t+M);THREE.Loader.prototype.f3(x,n,z,G,t)}function w(t){var n,z,G,Y,da,ha;n=k(a,t);z=k(a,t+Z);G=k(a,t+S);Y=j(a,t+M);da=k(a,t+m);ha=k(a,t+r);t=k(a,t+v);THREE.Loader.prototype.f3n(x,O,n,z,G,Y,da,ha,t)}function A(t){var n,z,G,Y;n=k(a,t);z=k(a,t+o);G=k(a,t+s);Y=k(a,t+u);t=j(a,t+H);THREE.Loader.prototype.f4(x,
n,z,G,Y,t)}function B(t){var n,z,G,Y,da,ha,za,ba;n=k(a,t);z=k(a,t+o);G=k(a,t+s);Y=k(a,t+u);da=j(a,t+H);ha=k(a,t+F);za=k(a,t+T);ba=k(a,t+P);t=k(a,t+Q);THREE.Loader.prototype.f4n(x,O,n,z,G,Y,da,ha,za,ba,t)}function C(t){var n,z;n=k(a,t);z=k(a,t+R);t=k(a,t+V);THREE.Loader.prototype.uv3(x,K[n*2],K[n*2+1],K[z*2],K[z*2+1],K[t*2],K[t*2+1])}function L(t){var n,z,G;n=k(a,t);z=k(a,t+E);G=k(a,t+N);t=k(a,t+X);THREE.Loader.prototype.uv4(x,K[n*2],K[n*2+1],K[z*2],K[z*2+1],K[G*2],K[G*2+1],K[t*2],K[t*2+1])}var x=
this,D=0,p,O=[],K=[],Z,S,M,m,r,v,o,s,u,H,F,T,P,Q,R,V,E,N,X;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(x,e,i);p={signature:a.substr(D,8),header_bytes:y(a,D+8),vertex_coordinate_bytes:y(a,D+9),normal_coordinate_bytes:y(a,D+10),uv_coordinate_bytes:y(a,D+11),vertex_index_bytes:y(a,D+12),normal_index_bytes:y(a,D+13),uv_index_bytes:y(a,D+14),material_index_bytes:y(a,D+15),nvertices:k(a,D+16),nnormals:k(a,D+16+4),nuvs:k(a,D+16+8),ntri_flat:k(a,D+16+12),ntri_smooth:k(a,D+16+16),ntri_flat_uv:k(a,
D+16+20),ntri_smooth_uv:k(a,D+16+24),nquad_flat:k(a,D+16+28),nquad_smooth:k(a,D+16+32),nquad_flat_uv:k(a,D+16+36),nquad_smooth_uv:k(a,D+16+40)};D+=p.header_bytes;Z=p.vertex_index_bytes;S=p.vertex_index_bytes*2;M=p.vertex_index_bytes*3;m=p.vertex_index_bytes*3+p.material_index_bytes;r=p.vertex_index_bytes*3+p.material_index_bytes+p.normal_index_bytes;v=p.vertex_index_bytes*3+p.material_index_bytes+p.normal_index_bytes*2;o=p.vertex_index_bytes;s=p.vertex_index_bytes*2;u=p.vertex_index_bytes*3;H=p.vertex_index_bytes*
4;F=p.vertex_index_bytes*4+p.material_index_bytes;T=p.vertex_index_bytes*4+p.material_index_bytes+p.normal_index_bytes;P=p.vertex_index_bytes*4+p.material_index_bytes+p.normal_index_bytes*2;Q=p.vertex_index_bytes*4+p.material_index_bytes+p.normal_index_bytes*3;R=p.uv_index_bytes;V=p.uv_index_bytes*2;E=p.uv_index_bytes;N=p.uv_index_bytes*2;X=p.uv_index_bytes*3;D+=function(t){var n,z,G,Y=p.vertex_coordinate_bytes*3,da=t+p.nvertices*Y;for(t=t;t<da;t+=Y){n=l(a,t);z=l(a,t+p.vertex_coordinate_bytes);G=
l(a,t+p.vertex_coordinate_bytes*2);THREE.Loader.prototype.v(x,n,z,G)}return p.nvertices*Y}(D);D+=function(t){var n,z,G,Y=p.normal_coordinate_bytes*3,da=t+p.nnormals*Y;for(t=t;t<da;t+=Y){n=q(a,t);z=q(a,t+p.normal_coordinate_bytes);G=q(a,t+p.normal_coordinate_bytes*2);O.push(n/127,z/127,G/127)}return p.nnormals*Y}(D);D+=function(t){var n,z,G=p.uv_coordinate_bytes*2,Y=t+p.nuvs*G;for(t=t;t<Y;t+=G){n=l(a,t);z=l(a,t+p.uv_coordinate_bytes);K.push(n,z)}return p.nuvs*G}(D);D+=function(t){var n,z=p.vertex_index_bytes*
3+p.material_index_bytes,G=t+p.ntri_flat*z;for(n=t;n<G;n+=z)d(n);return G-t}(D);D+=function(t){var n,z=p.vertex_index_bytes*3+p.material_index_bytes+p.normal_index_bytes*3,G=t+p.ntri_smooth*z;for(n=t;n<G;n+=z)w(n);return G-t}(D);D+=function(t){var n,z=p.vertex_index_bytes*3+p.material_index_bytes,G=z+p.uv_index_bytes*3,Y=t+p.ntri_flat_uv*G;for(n=t;n<Y;n+=G){d(n);C(n+z)}return Y-t}(D);D+=function(t){var n,z=p.vertex_index_bytes*3+p.material_index_bytes+p.normal_index_bytes*3,G=z+p.uv_index_bytes*3,
Y=t+p.ntri_smooth_uv*G;for(n=t;n<Y;n+=G){w(n);C(n+z)}return Y-t}(D);D+=function(t){var n,z=p.vertex_index_bytes*4+p.material_index_bytes,G=t+p.nquad_flat*z;for(n=t;n<G;n+=z)A(n);return G-t}(D);D+=function(t){var n,z=p.vertex_index_bytes*4+p.material_index_bytes+p.normal_index_bytes*4,G=t+p.nquad_smooth*z;for(n=t;n<G;n+=z)B(n);return G-t}(D);D+=function(t){var n,z=p.vertex_index_bytes*4+p.material_index_bytes,G=z+p.uv_index_bytes*4,Y=t+p.nquad_flat_uv*G;for(n=t;n<Y;n+=G){A(n);L(n+z)}return Y-t}(D);
D+=function(t){var n,z=p.vertex_index_bytes*4+p.material_index_bytes+p.normal_index_bytes*4,G=z+p.uv_index_bytes*4,Y=t+p.nquad_smooth_uv*G;for(n=t;n<Y;n+=G){B(n);L(n+z)}return Y-t}(D);this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};h.prototype=new THREE.Geometry;h.prototype.constructor=h;c(new h(f))},createModel:function(a,c,f){var e=function(h){var i=this;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(i,a.materials,h);(function(){var l,k,j,q,y;l=0;for(k=
a.vertices.length;l<k;l+=3){j=a.vertices[l];q=a.vertices[l+1];y=a.vertices[l+2];THREE.Loader.prototype.v(i,j,q,y)}})();(function(){function l(B,C){THREE.Loader.prototype.f3(i,B[C],B[C+1],B[C+2],B[C+3])}function k(B,C){THREE.Loader.prototype.f3n(i,a.normals,B[C],B[C+1],B[C+2],B[C+3],B[C+4],B[C+5],B[C+6])}function j(B,C){THREE.Loader.prototype.f4(i,B[C],B[C+1],B[C+2],B[C+3],B[C+4])}function q(B,C){THREE.Loader.prototype.f4n(i,a.normals,B[C],B[C+1],B[C+2],B[C+3],B[C+4],B[C+5],B[C+6],B[C+7],B[C+8])}function y(B,
C){var L,x,D;L=B[C];x=B[C+1];D=B[C+2];THREE.Loader.prototype.uv3(i,a.uvs[L*2],a.uvs[L*2+1],a.uvs[x*2],a.uvs[x*2+1],a.uvs[D*2],a.uvs[D*2+1])}function d(B,C){var L,x,D,p;L=B[C];x=B[C+1];D=B[C+2];p=B[C+3];THREE.Loader.prototype.uv4(i,a.uvs[L*2],a.uvs[L*2+1],a.uvs[x*2],a.uvs[x*2+1],a.uvs[D*2],a.uvs[D*2+1],a.uvs[p*2],a.uvs[p*2+1])}var w,A;w=0;for(A=a.triangles.length;w<A;w+=4)l(a.triangles,w);w=0;for(A=a.triangles_uv.length;w<A;w+=7){l(a.triangles_uv,w);y(a.triangles_uv,w+4)}w=0;for(A=a.triangles_n.length;w<
A;w+=7)k(a.triangles_n,w);w=0;for(A=a.triangles_n_uv.length;w<A;w+=10){k(a.triangles_n_uv,w);y(a.triangles_n_uv,w+7)}w=0;for(A=a.quads.length;w<A;w+=5)j(a.quads,w);w=0;for(A=a.quads_uv.length;w<A;w+=9){j(a.quads_uv,w);d(a.quads_uv,w+5)}w=0;for(A=a.quads_n.length;w<A;w+=9)q(a.quads_n,w);w=0;for(A=a.quads_n_uv.length;w<A;w+=13){q(a.quads_n_uv,w);d(a.quads_n_uv,w+9)}})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};e.prototype=new THREE.Geometry;e.prototype.constructor=
e;c(new e(f))},v:function(a,c,f,e){a.vertices.push(new THREE.Vertex(new THREE.Vector3(c,f,e)))},f3:function(a,c,f,e,h){a.faces.push(new THREE.Face3(c,f,e,null,a.materials[h]))},f4:function(a,c,f,e,h,i){a.faces.push(new THREE.Face4(c,f,e,h,null,a.materials[i]))},f3n:function(a,c,f,e,h,i,l,k,j){i=a.materials[i];var q=c[k*3],y=c[k*3+1];k=c[k*3+2];var d=c[j*3],w=c[j*3+1];j=c[j*3+2];a.faces.push(new THREE.Face3(f,e,h,[new THREE.Vector3(c[l*3],c[l*3+1],c[l*3+2]),new THREE.Vector3(q,y,k),new THREE.Vector3(d,
w,j)],i))},f4n:function(a,c,f,e,h,i,l,k,j,q,y){l=a.materials[l];var d=c[j*3],w=c[j*3+1];j=c[j*3+2];var A=c[q*3],B=c[q*3+1];q=c[q*3+2];var C=c[y*3],L=c[y*3+1];y=c[y*3+2];a.faces.push(new THREE.Face4(f,e,h,i,[new THREE.Vector3(c[k*3],c[k*3+1],c[k*3+2]),new THREE.Vector3(d,w,j),new THREE.Vector3(A,B,q),new THREE.Vector3(C,L,y)],l))},uv3:function(a,c,f,e,h,i,l){var k=[];k.push(new THREE.UV(c,f));k.push(new THREE.UV(e,h));k.push(new THREE.UV(i,l));a.uvs.push(k)},uv4:function(a,c,f,e,h,i,l,k,j){var q=[];
q.push(new THREE.UV(c,f));q.push(new THREE.UV(e,h));q.push(new THREE.UV(i,l));q.push(new THREE.UV(k,j));a.uvs.push(q)},init_materials:function(a,c,f){a.materials=[];for(var e=0;e<c.length;++e)a.materials[e]=[THREE.Loader.prototype.createMaterial(c[e],f)]},createMaterial:function(a,c){function f(i){i=Math.log(i)/Math.LN2;return Math.floor(i)==i}var e,h;if(a.map_diffuse&&c){h=document.createElement("canvas");e=new THREE.MeshLambertMaterial({map:new THREE.Texture(h)});h=new Image;h.onload=function(){if(!f(this.width)||
!f(this.height)){var i=Math.pow(2,Math.round(Math.log(this.width)/Math.LN2)),l=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));e.map.image.width=i;e.map.image.height=l;e.map.image.getContext("2d").drawImage(this,0,0,i,l)}else e.map.image=this;e.map.image.loaded=1};h.src=c+"/"+a.map_diffuse}else if(a.col_diffuse){h=(a.col_diffuse[0]*255<<16)+(a.col_diffuse[1]*255<<8)+a.col_diffuse[2]*255;e=new THREE.MeshLambertMaterial({color:h,opacity:a.transparency})}else e=a.a_dbg_color?new THREE.MeshLambertMaterial({color:a.a_dbg_color}):
new THREE.MeshLambertMaterial({color:15658734});return e}};
