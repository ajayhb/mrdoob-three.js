// ThreeExtras.js r32 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,b,e){this.r=a;this.g=b;this.b=e;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+
","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,b,e){this.x=a||0;this.y=b||0;this.z=e||0};
THREE.Vector3.prototype={set:function(a,b,e){this.x=a;this.y=b;this.z=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,e=this.y,d=this.z;this.x=e*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-e*a.x;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=
a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var b=this.x-a.x,e=this.y-a.y;a=this.z-a.z;return Math.sqrt(b*b+e*e+a*a)},distanceToSquared:function(a){var b=this.x-a.x,e=this.y-a.y;a=this.z-a.z;return b*b+e*e+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=
Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,b,e,d){this.x=a||0;this.y=b||0;this.z=e||0;this.w=d||1};
THREE.Vector4.prototype={set:function(a,b,e,d){this.x=a;this.y=b;this.z=e;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,b){this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var b,e,d=a.objects,g=[];a=0;for(b=d.length;a<b;a++){e=d[a];if(e instanceof THREE.Mesh)g=g.concat(this.intersectObject(e))}g.sort(function(j,c){return j.distance-c.distance});return g},intersectObject:function(a){function b(J,s,h,f){f=f.clone().subSelf(s);h=h.clone().subSelf(s);var t=J.clone().subSelf(s);J=f.dot(f);s=f.dot(h);f=f.dot(t);var p=h.dot(h);h=h.dot(t);t=1/(J*p-s*s);p=(p*f-s*h)*t;J=(J*h-s*f)*t;return p>0&&J>0&&p+J<1}var e,d,g,j,c,k,i,l,u,C,
q,v=a.geometry,z=v.vertices,B=[];e=0;for(d=v.faces.length;e<d;e++){g=v.faces[e];C=this.origin.clone();q=this.direction.clone();j=a.matrix.multiplyVector3(z[g.a].position.clone());c=a.matrix.multiplyVector3(z[g.b].position.clone());k=a.matrix.multiplyVector3(z[g.c].position.clone());i=g instanceof THREE.Face4?a.matrix.multiplyVector3(z[g.d].position.clone()):null;l=a.rotationMatrix.multiplyVector3(g.normal.clone());u=q.dot(l);if(u<0){l=l.dot((new THREE.Vector3).sub(j,C))/u;C=C.addSelf(q.multiplyScalar(l));
if(g instanceof THREE.Face3){if(b(C,j,c,k)){g={distance:this.origin.distanceTo(C),point:C,face:g,object:a};B.push(g)}}else if(g instanceof THREE.Face4)if(b(C,j,c,i)||b(C,c,k,i)){g={distance:this.origin.distanceTo(C),point:C,face:g,object:a};B.push(g)}}}return B}};
THREE.Rectangle=function(){function a(){j=d-b;c=g-e}var b,e,d,g,j,c,k=true;this.getX=function(){return b};this.getY=function(){return e};this.getWidth=function(){return j};this.getHeight=function(){return c};this.getLeft=function(){return b};this.getTop=function(){return e};this.getRight=function(){return d};this.getBottom=function(){return g};this.set=function(i,l,u,C){k=false;b=i;e=l;d=u;g=C;a()};this.addPoint=function(i,l){if(k){k=false;b=i;e=l;d=i;g=l}else{b=b<i?b:i;e=e<l?e:l;d=d>i?d:i;g=g>l?
g:l}a()};this.add3Points=function(i,l,u,C,q,v){if(k){k=false;b=i<u?i<q?i:q:u<q?u:q;e=l<C?l<v?l:v:C<v?C:v;d=i>u?i>q?i:q:u>q?u:q;g=l>C?l>v?l:v:C>v?C:v}else{b=i<u?i<q?i<b?i:b:q<b?q:b:u<q?u<b?u:b:q<b?q:b;e=l<C?l<v?l<e?l:e:v<e?v:e:C<v?C<e?C:e:v<e?v:e;d=i>u?i>q?i>d?i:d:q>d?q:d:u>q?u>d?u:d:q>d?q:d;g=l>C?l>v?l>g?l:g:v>g?v:g:C>v?C>g?C:g:v>g?v:g}a()};this.addRectangle=function(i){if(k){k=false;b=i.getLeft();e=i.getTop();d=i.getRight();g=i.getBottom()}else{b=b<i.getLeft()?b:i.getLeft();e=e<i.getTop()?e:i.getTop();
d=d>i.getRight()?d:i.getRight();g=g>i.getBottom()?g:i.getBottom()}a()};this.inflate=function(i){b-=i;e-=i;d+=i;g+=i;a()};this.minSelf=function(i){b=b>i.getLeft()?b:i.getLeft();e=e>i.getTop()?e:i.getTop();d=d<i.getRight()?d:i.getRight();g=g<i.getBottom()?g:i.getBottom();a()};this.instersects=function(i){return Math.min(d,i.getRight())-Math.max(b,i.getLeft())>=0&&Math.min(g,i.getBottom())-Math.max(e,i.getTop())>=0};this.empty=function(){k=true;g=d=e=b=0;a()};this.isEmpty=function(){return k};this.toString=
function(){return"THREE.Rectangle ( left: "+b+", right: "+d+", top: "+e+", bottom: "+g+", width: "+j+", height: "+c+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a;a=this.m[1];this.m[1]=this.m[3];this.m[3]=a;a=this.m[2];this.m[2]=this.m[6];this.m[6]=a;a=this.m[5];this.m[5]=this.m[7];this.m[7]=a;return this}};
THREE.Matrix4=function(a,b,e,d,g,j,c,k,i,l,u,C,q,v,z,B){this.n11=a||1;this.n12=b||0;this.n13=e||0;this.n14=d||0;this.n21=g||0;this.n22=j||1;this.n23=c||0;this.n24=k||0;this.n31=i||0;this.n32=l||0;this.n33=u||1;this.n34=C||0;this.n41=q||0;this.n42=v||0;this.n43=z||0;this.n44=B||1};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,b,e,d,g,j,c,k,i,l,u,C,q,v,z,B){this.n11=a;this.n12=b;this.n13=e;this.n14=d;this.n21=g;this.n22=j;this.n23=c;this.n24=k;this.n31=i;this.n32=l;this.n33=u;this.n34=C;this.n41=q;this.n42=v;this.n43=z;this.n44=B;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,b,e){var d=new THREE.Vector3,g=new THREE.Vector3,j=new THREE.Vector3;j.sub(a,b).normalize();d.cross(e,j).normalize();g.cross(j,d).normalize();this.n11=d.x;this.n12=d.y;this.n13=d.z;this.n14=-d.dot(a);this.n21=g.x;this.n22=g.y;this.n23=g.z;this.n24=-g.dot(a);this.n31=j.x;
this.n32=j.y;this.n33=j.z;this.n34=-j.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var b=a.x,e=a.y,d=a.z,g=1/(this.n41*b+this.n42*e+this.n43*d+this.n44);a.x=(this.n11*b+this.n12*e+this.n13*d+this.n14)*g;a.y=(this.n21*b+this.n22*e+this.n23*d+this.n24)*g;a.z=(this.n31*b+this.n32*e+this.n33*d+this.n34)*g;return a},multiplyVector4:function(a){var b=a.x,e=a.y,d=a.z,g=a.w;a.x=this.n11*b+this.n12*e+this.n13*d+this.n14*g;a.y=this.n21*b+this.n22*e+this.n23*d+this.n24*
g;a.z=this.n31*b+this.n32*e+this.n33*d+this.n34*g;a.w=this.n41*b+this.n42*e+this.n43*d+this.n44*g;return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},multiply:function(a,b){var e=a.n11,d=a.n12,g=a.n13,j=a.n14,c=a.n21,k=a.n22,i=a.n23,l=a.n24,u=a.n31,C=a.n32,
q=a.n33,v=a.n34,z=a.n41,B=a.n42,J=a.n43,s=a.n44,h=b.n11,f=b.n12,t=b.n13,p=b.n14,y=b.n21,o=b.n22,r=b.n23,E=b.n24,w=b.n31,F=b.n32,D=b.n33,A=b.n34,K=b.n41,Y=b.n42,L=b.n43,S=b.n44;this.n11=e*h+d*y+g*w+j*K;this.n12=e*f+d*o+g*F+j*Y;this.n13=e*t+d*r+g*D+j*L;this.n14=e*p+d*E+g*A+j*S;this.n21=c*h+k*y+i*w+l*K;this.n22=c*f+k*o+i*F+l*Y;this.n23=c*t+k*r+i*D+l*L;this.n24=c*p+k*E+i*A+l*S;this.n31=u*h+C*y+q*w+v*K;this.n32=u*f+C*o+q*F+v*Y;this.n33=u*t+C*r+q*D+v*L;this.n34=u*p+C*E+q*A+v*S;this.n41=z*h+B*y+J*w+s*K;
this.n42=z*f+B*o+J*F+s*Y;this.n43=z*t+B*r+J*D+s*L;this.n44=z*p+B*E+J*A+s*S;return this},multiplySelf:function(a){var b=this.n11,e=this.n12,d=this.n13,g=this.n14,j=this.n21,c=this.n22,k=this.n23,i=this.n24,l=this.n31,u=this.n32,C=this.n33,q=this.n34,v=this.n41,z=this.n42,B=this.n43,J=this.n44,s=a.n11,h=a.n21,f=a.n31,t=a.n41,p=a.n12,y=a.n22,o=a.n32,r=a.n42,E=a.n13,w=a.n23,F=a.n33,D=a.n43,A=a.n14,K=a.n24,Y=a.n34;a=a.n44;this.n11=b*s+e*h+d*f+g*t;this.n12=b*p+e*y+d*o+g*r;this.n13=b*E+e*w+d*F+g*D;this.n14=
b*A+e*K+d*Y+g*a;this.n21=j*s+c*h+k*f+i*t;this.n22=j*p+c*y+k*o+i*r;this.n23=j*E+c*w+k*F+i*D;this.n24=j*A+c*K+k*Y+i*a;this.n31=l*s+u*h+C*f+q*t;this.n32=l*p+u*y+C*o+q*r;this.n33=l*E+u*w+C*F+q*D;this.n34=l*A+u*K+C*Y+q*a;this.n41=v*s+z*h+B*f+J*t;this.n42=v*p+z*y+B*o+J*r;this.n43=v*E+z*w+B*F+J*D;this.n44=v*A+z*K+B*Y+J*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=
a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){return this.n14*this.n23*this.n32*this.n41-this.n13*this.n24*this.n32*this.n41-this.n14*this.n22*this.n33*this.n41+this.n12*this.n24*this.n33*this.n41+this.n13*this.n22*this.n34*this.n41-this.n12*this.n23*this.n34*this.n41-this.n14*this.n23*this.n31*this.n42+this.n13*this.n24*this.n31*this.n42+this.n14*this.n21*this.n33*this.n42-this.n11*this.n24*this.n33*this.n42-this.n13*this.n21*this.n34*this.n42+this.n11*this.n23*this.n34*
this.n42+this.n14*this.n22*this.n31*this.n43-this.n12*this.n24*this.n31*this.n43-this.n14*this.n21*this.n32*this.n43+this.n11*this.n24*this.n32*this.n43+this.n12*this.n21*this.n34*this.n43-this.n11*this.n22*this.n34*this.n43-this.n13*this.n22*this.n31*this.n44+this.n12*this.n23*this.n31*this.n44+this.n13*this.n21*this.n32*this.n44-this.n11*this.n23*this.n32*this.n44-this.n12*this.n21*this.n33*this.n44+this.n11*this.n22*this.n33*this.n44},transpose:function(){function a(b,e,d){var g=b[e];b[e]=b[d];
b[d]=g}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){return[this.n11,this.n21,this.n31,this.n41,this.n12,
this.n22,this.n32,this.n42,this.n13,this.n23,this.n33,this.n43,this.n14,this.n24,this.n34,this.n44]},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,b,e){var d=new THREE.Matrix4;d.n14=a;d.n24=b;d.n34=e;return d};
THREE.Matrix4.scaleMatrix=function(a,b,e){var d=new THREE.Matrix4;d.n11=a;d.n22=b;d.n33=e;return d};THREE.Matrix4.rotationXMatrix=function(a){var b=new THREE.Matrix4;b.n22=b.n33=Math.cos(a);b.n32=Math.sin(a);b.n23=-b.n32;return b};THREE.Matrix4.rotationYMatrix=function(a){var b=new THREE.Matrix4;b.n11=b.n33=Math.cos(a);b.n13=Math.sin(a);b.n31=-b.n13;return b};THREE.Matrix4.rotationZMatrix=function(a){var b=new THREE.Matrix4;b.n11=b.n22=Math.cos(a);b.n21=Math.sin(a);b.n12=-b.n21;return b};
THREE.Matrix4.rotationAxisAngleMatrix=function(a,b){var e=new THREE.Matrix4,d=Math.cos(b),g=Math.sin(b),j=1-d,c=a.x,k=a.y,i=a.z;e.n11=j*c*c+d;e.n12=j*c*k-g*i;e.n13=j*c*i+g*k;e.n21=j*c*k+g*i;e.n22=j*k*k+d;e.n23=j*k*i-g*c;e.n31=j*c*i-g*k;e.n32=j*k*i+g*c;e.n33=j*i*i+d;return e};
THREE.Matrix4.makeInvert=function(a){var b=new THREE.Matrix4;b.n11=a.n23*a.n34*a.n42-a.n24*a.n33*a.n42+a.n24*a.n32*a.n43-a.n22*a.n34*a.n43-a.n23*a.n32*a.n44+a.n22*a.n33*a.n44;b.n12=a.n14*a.n33*a.n42-a.n13*a.n34*a.n42-a.n14*a.n32*a.n43+a.n12*a.n34*a.n43+a.n13*a.n32*a.n44-a.n12*a.n33*a.n44;b.n13=a.n13*a.n24*a.n42-a.n14*a.n23*a.n42+a.n14*a.n22*a.n43-a.n12*a.n24*a.n43-a.n13*a.n22*a.n44+a.n12*a.n23*a.n44;b.n14=a.n14*a.n23*a.n32-a.n13*a.n24*a.n32-a.n14*a.n22*a.n33+a.n12*a.n24*a.n33+a.n13*a.n22*a.n34-a.n12*
a.n23*a.n34;b.n21=a.n24*a.n33*a.n41-a.n23*a.n34*a.n41-a.n24*a.n31*a.n43+a.n21*a.n34*a.n43+a.n23*a.n31*a.n44-a.n21*a.n33*a.n44;b.n22=a.n13*a.n34*a.n41-a.n14*a.n33*a.n41+a.n14*a.n31*a.n43-a.n11*a.n34*a.n43-a.n13*a.n31*a.n44+a.n11*a.n33*a.n44;b.n23=a.n14*a.n23*a.n41-a.n13*a.n24*a.n41-a.n14*a.n21*a.n43+a.n11*a.n24*a.n43+a.n13*a.n21*a.n44-a.n11*a.n23*a.n44;b.n24=a.n13*a.n24*a.n31-a.n14*a.n23*a.n31+a.n14*a.n21*a.n33-a.n11*a.n24*a.n33-a.n13*a.n21*a.n34+a.n11*a.n23*a.n34;b.n31=a.n22*a.n34*a.n41-a.n24*a.n32*
a.n41+a.n24*a.n31*a.n42-a.n21*a.n34*a.n42-a.n22*a.n31*a.n44+a.n21*a.n32*a.n44;b.n32=a.n14*a.n32*a.n41-a.n12*a.n34*a.n41-a.n14*a.n31*a.n42+a.n11*a.n34*a.n42+a.n12*a.n31*a.n44-a.n11*a.n32*a.n44;b.n33=a.n13*a.n24*a.n41-a.n14*a.n22*a.n41+a.n14*a.n21*a.n42-a.n11*a.n24*a.n42-a.n12*a.n21*a.n44+a.n11*a.n22*a.n44;b.n34=a.n14*a.n22*a.n31-a.n12*a.n24*a.n31-a.n14*a.n21*a.n32+a.n11*a.n24*a.n32+a.n12*a.n21*a.n34-a.n11*a.n22*a.n34;b.n41=a.n23*a.n32*a.n41-a.n22*a.n33*a.n41-a.n23*a.n31*a.n42+a.n21*a.n33*a.n42+a.n22*
a.n31*a.n43-a.n21*a.n32*a.n43;b.n42=a.n12*a.n33*a.n41-a.n13*a.n32*a.n41+a.n13*a.n31*a.n42-a.n11*a.n33*a.n42-a.n12*a.n31*a.n43+a.n11*a.n32*a.n43;b.n43=a.n13*a.n22*a.n41-a.n12*a.n23*a.n41-a.n13*a.n21*a.n42+a.n11*a.n23*a.n42+a.n12*a.n21*a.n43-a.n11*a.n22*a.n43;b.n44=a.n12*a.n23*a.n31-a.n13*a.n22*a.n31+a.n13*a.n21*a.n32-a.n11*a.n23*a.n32-a.n12*a.n21*a.n33+a.n11*a.n22*a.n33;b.multiplyScalar(1/a.determinant());return b};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.flatten();a=new THREE.Matrix3;var e=b[10]*b[5]-b[6]*b[9],d=-b[10]*b[1]+b[2]*b[9],g=b[6]*b[1]-b[2]*b[5],j=-b[10]*b[4]+b[6]*b[8],c=b[10]*b[0]-b[2]*b[8],k=-b[6]*b[0]+b[2]*b[4],i=b[9]*b[4]-b[5]*b[8],l=-b[9]*b[0]+b[1]*b[8],u=b[5]*b[0]-b[1]*b[4];b=b[0]*e+b[1]*j+b[2]*i;if(b==0)throw"matrix not invertible";b=1/b;a.m[0]=b*e;a.m[1]=b*d;a.m[2]=b*g;a.m[3]=b*j;a.m[4]=b*c;a.m[5]=b*k;a.m[6]=b*i;a.m[7]=b*l;a.m[8]=b*u;return a};
THREE.Matrix4.makeFrustum=function(a,b,e,d,g,j){var c,k,i;c=new THREE.Matrix4;k=2*g/(b-a);i=2*g/(d-e);a=(b+a)/(b-a);e=(d+e)/(d-e);d=-(j+g)/(j-g);g=-2*j*g/(j-g);c.n11=k;c.n12=0;c.n13=a;c.n14=0;c.n21=0;c.n22=i;c.n23=e;c.n24=0;c.n31=0;c.n32=0;c.n33=d;c.n34=g;c.n41=0;c.n42=0;c.n43=-1;c.n44=0;return c};THREE.Matrix4.makePerspective=function(a,b,e,d){var g;a=e*Math.tan(a*Math.PI/360);g=-a;return THREE.Matrix4.makeFrustum(g*b,a*b,g,a,e,d)};
THREE.Matrix4.makeOrtho=function(a,b,e,d,g,j){var c,k,i,l;c=new THREE.Matrix4;k=b-a;i=e-d;l=j-g;a=(b+a)/k;e=(e+d)/i;g=(j+g)/l;c.n11=2/k;c.n12=0;c.n13=0;c.n14=-a;c.n21=0;c.n22=2/i;c.n23=0;c.n24=-e;c.n31=0;c.n32=0;c.n33=-2/l;c.n34=-g;c.n41=0;c.n42=0;c.n43=0;c.n44=1;return c};
THREE.Vertex=function(a,b){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=b||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,b,e,d,g){this.a=a;this.b=b;this.c=e;this.centroid=new THREE.Vector3;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.materials=g instanceof Array?g:[g]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,b,e,d,g,j){this.a=a;this.b=b;this.c=e;this.d=d;this.centroid=new THREE.Vector3;this.normal=g instanceof THREE.Vector3?g:new THREE.Vector3;this.vertexNormals=g instanceof Array?g:[];this.materials=j instanceof Array?j:[j]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,b,e;a=0;for(b=this.faces.length;a<b;a++){e=this.faces[a];e.centroid.set(0,0,0);if(e instanceof THREE.Face3){e.centroid.addSelf(this.vertices[e.a].position);e.centroid.addSelf(this.vertices[e.b].position);e.centroid.addSelf(this.vertices[e.c].position);e.centroid.divideScalar(3)}else if(e instanceof THREE.Face4){e.centroid.addSelf(this.vertices[e.a].position);e.centroid.addSelf(this.vertices[e.b].position);e.centroid.addSelf(this.vertices[e.c].position);
e.centroid.addSelf(this.vertices[e.d].position);e.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var b,e,d,g,j,c,k=new THREE.Vector3,i=new THREE.Vector3;d=0;for(g=this.vertices.length;d<g;d++){j=this.vertices[d];j.normal.set(0,0,0)}d=0;for(g=this.faces.length;d<g;d++){j=this.faces[d];if(a&&j.vertexNormals.length){k.set(0,0,0);b=0;for(e=j.normal.length;b<e;b++)k.addSelf(j.vertexNormals[b]);k.divideScalar(3)}else{b=this.vertices[j.a];e=this.vertices[j.b];c=this.vertices[j.c];k.sub(c.position,
e.position);i.sub(b.position,e.position);k.crossSelf(i)}k.isZero()||k.normalize();j.normal.copy(k)}},computeVertexNormals:function(){var a,b,e=[],d;a=0;for(b=this.vertices.length;a<b;a++)e[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++){d=this.faces[a];if(d instanceof THREE.Face3){e[d.a].addSelf(d.normal);e[d.b].addSelf(d.normal);e[d.c].addSelf(d.normal)}else if(d instanceof THREE.Face4){e[d.a].addSelf(d.normal);e[d.b].addSelf(d.normal);e[d.c].addSelf(d.normal);e[d.d].addSelf(d.normal)}}a=
0;for(b=this.vertices.length;a<b;a++)e[a].normalize();a=0;for(b=this.faces.length;a<b;a++){d=this.faces[a];if(d instanceof THREE.Face3){d.vertexNormals[0]=e[d.a].clone();d.vertexNormals[1]=e[d.b].clone();d.vertexNormals[2]=e[d.c].clone()}else if(d instanceof THREE.Face4){d.vertexNormals[0]=e[d.a].clone();d.vertexNormals[1]=e[d.b].clone();d.vertexNormals[2]=e[d.c].clone();d.vertexNormals[3]=e[d.d].clone()}}},computeTangents:function(){function a(A,K,Y,L,S,V,M){j=A.vertices[K].position;c=A.vertices[Y].position;
k=A.vertices[L].position;i=g[S];l=g[V];u=g[M];C=c.x-j.x;q=k.x-j.x;v=c.y-j.y;z=k.y-j.y;B=c.z-j.z;J=k.z-j.z;s=l.u-i.u;h=u.u-i.u;f=l.v-i.v;t=u.v-i.v;p=1/(s*t-h*f);r.set((t*C-f*q)*p,(t*v-f*z)*p,(t*B-f*J)*p);E.set((s*q-h*C)*p,(s*z-h*v)*p,(s*J-h*B)*p);y[K].addSelf(r);y[Y].addSelf(r);y[L].addSelf(r);o[K].addSelf(E);o[Y].addSelf(E);o[L].addSelf(E)}var b,e,d,g,j,c,k,i,l,u,C,q,v,z,B,J,s,h,f,t,p,y=[],o=[],r=new THREE.Vector3,E=new THREE.Vector3,w=new THREE.Vector3,F=new THREE.Vector3,D=new THREE.Vector3;b=0;
for(e=this.vertices.length;b<e;b++){y[b]=new THREE.Vector3;o[b]=new THREE.Vector3}b=0;for(e=this.faces.length;b<e;b++){d=this.faces[b];g=this.uvs[b];if(d instanceof THREE.Face3){a(this,d.a,d.b,d.c,0,1,2);this.vertices[d.a].normal.copy(d.vertexNormals[0]);this.vertices[d.b].normal.copy(d.vertexNormals[1]);this.vertices[d.c].normal.copy(d.vertexNormals[2])}else if(d instanceof THREE.Face4){a(this,d.a,d.b,d.c,0,1,2);a(this,d.a,d.b,d.d,0,1,3);this.vertices[d.a].normal.copy(d.vertexNormals[0]);this.vertices[d.b].normal.copy(d.vertexNormals[1]);
this.vertices[d.c].normal.copy(d.vertexNormals[2]);this.vertices[d.d].normal.copy(d.vertexNormals[3])}}b=0;for(e=this.vertices.length;b<e;b++){D.copy(this.vertices[b].normal);d=y[b];w.copy(d);w.subSelf(D.multiplyScalar(D.dot(d))).normalize();F.cross(this.vertices[b].normal,d);d=F.dot(o[b]);d=d<0?-1:1;this.vertices[b].tangent.set(w.x,w.y,w.z,d)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],
y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,e=this.vertices.length;b<e;b++){a=this.vertices[b];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<
this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,b=0,e=this.vertices.length;b<e;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(u){var C=[];b=0;for(e=u.length;b<e;b++)u[b]==undefined?C.push("undefined"):C.push(u[b].toString());return C.join("_")}
var b,e,d,g,j,c,k,i,l={};d=0;for(g=this.faces.length;d<g;d++){j=this.faces[d];c=j.materials;k=a(c);if(l[k]==undefined)l[k]={hash:k,counter:0};i=l[k].hash+"_"+l[k].counter;if(this.geometryChunks[i]==undefined)this.geometryChunks[i]={faces:[],materials:c,vertices:0};j=j instanceof THREE.Face3?3:4;if(this.geometryChunks[i].vertices+j>65535){l[k].counter+=1;i=l[k].hash+"_"+l[k].counter;if(this.geometryChunks[i]==undefined)this.geometryChunks[i]={faces:[],materials:c,vertices:0}}this.geometryChunks[i].faces.push(d);
this.geometryChunks[i].vertices+=j}},toString:function(){return"THREE.Geometry ( vertices: "+this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,b,e,d){this.fov=a;this.aspect=b;this.near=e;this.far=d;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.translateX=function(g){g=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(g);g.cross(g.clone(),this.up);this.position.addSelf(g);this.target.position.addSelf(g)};this.translateZ=function(g){g=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(g);
this.position.subSelf(g);this.target.position.subSelf(g)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};
THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;
THREE.PointLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.translationMatrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.scaleMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){this.matrixPosition=THREE.Matrix4.translationMatrix(this.position.x,this.position.y,this.position.z);this.rotationMatrix=THREE.Matrix4.rotationXMatrix(this.rotation.x);this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationYMatrix(this.rotation.y));this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationZMatrix(this.rotation.z));this.scaleMatrix=THREE.Matrix4.scaleMatrix(this.scale.x,this.scale.y,this.scale.z);this.matrix.copy(this.matrixPosition);
this.matrix.multiplySelf(this.rotationMatrix);this.matrix.multiplySelf(this.scaleMatrix)}};THREE.Object3DCounter={value:0};THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.Line=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b]};THREE.Line.prototype=new THREE.Object3D;
THREE.Line.prototype.constructor=THREE.Line;THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+
"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=
this.wireframe_linecap="round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=
a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==
undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial"}};
THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.opacity=1;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};
THREE.Texture=function(a,b,e,d,g,j){this.image=a;this.mapping=b!==undefined?b:new THREE.UVMapping;this.wrap_s=e!==undefined?e:THREE.ClampToEdgeWrapping;this.wrap_t=d!==undefined?d:THREE.ClampToEdgeWrapping;this.mag_filter=g!==undefined?g:THREE.LinearFilter;this.min_filter=j!==undefined?j:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;var Uniforms={clone:function(a){var b,e,d,g={};for(b in a){g[b]={};for(e in a[b]){d=a[b][e];g[b][e]=d instanceof THREE.Color||d instanceof THREE.Vector3||d instanceof THREE.Texture?d.clone():d}}return g},merge:function(a){var b,e,d,g={};for(b=0;b<a.length;b++){d=this.clone(a[b]);for(e in d)g[e]=d[e]}return g}};
THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,b,e){this.color=new THREE.Color(a);this.near=b||1;this.far=e||1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b||2.5E-4};
THREE.Projector=function(){function a(o,r){return r.z-o.z}function b(o,r){var E=0,w=1,F=o.z+o.w,D=r.z+r.w,A=-o.z+o.w,K=-r.z+r.w;if(F>=0&&D>=0&&A>=0&&K>=0)return true;else if(F<0&&D<0||A<0&&K<0)return false;else{if(F<0)E=Math.max(E,F/(F-D));else if(D<0)w=Math.min(w,F/(F-D));if(A<0)E=Math.max(E,A/(A-K));else if(K<0)w=Math.min(w,A/(A-K));if(w<E)return false;else{o.lerpSelf(r,E);r.lerpSelf(o,1-w);return true}}}var e,d,g=[],j,c,k,i=[],l,u,C=[],q,v,z=[],B=new THREE.Vector4,J=new THREE.Vector4,s=new THREE.Matrix4,
h=new THREE.Matrix4,f=[],t=new THREE.Vector4,p=new THREE.Vector4,y;this.projectObjects=function(o,r,E){var w=[],F,D;d=0;s.multiply(r.projectionMatrix,r.matrix);f[0]=new THREE.Vector4(s.n41-s.n11,s.n42-s.n12,s.n43-s.n13,s.n44-s.n14);f[1]=new THREE.Vector4(s.n41+s.n11,s.n42+s.n12,s.n43+s.n13,s.n44+s.n14);f[2]=new THREE.Vector4(s.n41+s.n21,s.n42+s.n22,s.n43+s.n23,s.n44+s.n24);f[3]=new THREE.Vector4(s.n41-s.n21,s.n42-s.n22,s.n43-s.n23,s.n44-s.n24);f[4]=new THREE.Vector4(s.n41-s.n31,s.n42-s.n32,s.n43-
s.n33,s.n44-s.n34);f[5]=new THREE.Vector4(s.n41+s.n31,s.n42+s.n32,s.n43+s.n33,s.n44+s.n34);r=0;for(F=f.length;r<F;r++){D=f[r];D.divideScalar(Math.sqrt(D.x*D.x+D.y*D.y+D.z*D.z))}F=o.objects;o=0;for(r=F.length;o<r;o++){D=F[o];var A;if(!(A=!D.visible)){if(A=D instanceof THREE.Mesh){a:{A=void 0;for(var K=D.position,Y=-D.geometry.boundingSphere.radius*Math.max(D.scale.x,Math.max(D.scale.y,D.scale.z)),L=0;L<6;L++){A=f[L].x*K.x+f[L].y*K.y+f[L].z*K.z+f[L].w;if(A<=Y){A=false;break a}}A=true}A=!A}A=A}if(!A){e=
g[d]=g[d]||new THREE.RenderableObject;B.copy(D.position);s.multiplyVector3(B);e.object=D;e.z=B.z;w.push(e);d++}}E&&w.sort(a);return w};this.projectScene=function(o,r,E){var w=[],F=r.near,D=r.far,A,K,Y,L,S,V,M,P,T,O,N,X,n,m,x,H;k=u=v=0;r.autoUpdateMatrix&&r.updateMatrix();s.multiply(r.projectionMatrix,r.matrix);V=this.projectObjects(o,r,true);o=0;for(A=V.length;o<A;o++){M=V[o].object;if(M.visible){M.autoUpdateMatrix&&M.updateMatrix();P=M.matrix;T=M.rotationMatrix;O=M.materials;N=M.overdraw;if(M instanceof
THREE.Mesh){X=M.geometry;n=X.vertices;K=0;for(Y=n.length;K<Y;K++){m=n[K];m.positionWorld.copy(m.position);P.multiplyVector3(m.positionWorld);L=m.positionScreen;L.copy(m.positionWorld);s.multiplyVector4(L);L.x/=L.w;L.y/=L.w;m.__visible=L.z>F&&L.z<D}X=X.faces;K=0;for(Y=X.length;K<Y;K++){m=X[K];if(m instanceof THREE.Face3){L=n[m.a];S=n[m.b];x=n[m.c];if(L.__visible&&S.__visible&&x.__visible)if(M.doubleSided||M.flipSided!=(x.positionScreen.x-L.positionScreen.x)*(S.positionScreen.y-L.positionScreen.y)-
(x.positionScreen.y-L.positionScreen.y)*(S.positionScreen.x-L.positionScreen.x)<0){j=i[k]=i[k]||new THREE.RenderableFace3;j.v1.positionWorld.copy(L.positionWorld);j.v2.positionWorld.copy(S.positionWorld);j.v3.positionWorld.copy(x.positionWorld);j.v1.positionScreen.copy(L.positionScreen);j.v2.positionScreen.copy(S.positionScreen);j.v3.positionScreen.copy(x.positionScreen);j.normalWorld.copy(m.normal);T.multiplyVector3(j.normalWorld);j.centroidWorld.copy(m.centroid);P.multiplyVector3(j.centroidWorld);
j.centroidScreen.copy(j.centroidWorld);s.multiplyVector3(j.centroidScreen);x=m.vertexNormals;y=j.vertexNormalsWorld;L=0;for(S=x.length;L<S;L++){H=y[L]=y[L]||new THREE.Vector3;H.copy(x[L]);T.multiplyVector3(H)}j.z=j.centroidScreen.z;j.meshMaterials=O;j.faceMaterials=m.materials;j.overdraw=N;if(M.geometry.uvs[K]){j.uvs[0]=M.geometry.uvs[K][0];j.uvs[1]=M.geometry.uvs[K][1];j.uvs[2]=M.geometry.uvs[K][2]}w.push(j);k++}}else if(m instanceof THREE.Face4){L=n[m.a];S=n[m.b];x=n[m.c];H=n[m.d];if(L.__visible&&
S.__visible&&x.__visible&&H.__visible)if(M.doubleSided||M.flipSided!=((H.positionScreen.x-L.positionScreen.x)*(S.positionScreen.y-L.positionScreen.y)-(H.positionScreen.y-L.positionScreen.y)*(S.positionScreen.x-L.positionScreen.x)<0||(S.positionScreen.x-x.positionScreen.x)*(H.positionScreen.y-x.positionScreen.y)-(S.positionScreen.y-x.positionScreen.y)*(H.positionScreen.x-x.positionScreen.x)<0)){j=i[k]=i[k]||new THREE.RenderableFace3;j.v1.positionWorld.copy(L.positionWorld);j.v2.positionWorld.copy(S.positionWorld);
j.v3.positionWorld.copy(H.positionWorld);j.v1.positionScreen.copy(L.positionScreen);j.v2.positionScreen.copy(S.positionScreen);j.v3.positionScreen.copy(H.positionScreen);j.normalWorld.copy(m.normal);T.multiplyVector3(j.normalWorld);j.centroidWorld.copy(m.centroid);P.multiplyVector3(j.centroidWorld);j.centroidScreen.copy(j.centroidWorld);s.multiplyVector3(j.centroidScreen);j.z=j.centroidScreen.z;j.meshMaterials=O;j.faceMaterials=m.materials;j.overdraw=N;if(M.geometry.uvs[K]){j.uvs[0]=M.geometry.uvs[K][0];
j.uvs[1]=M.geometry.uvs[K][1];j.uvs[2]=M.geometry.uvs[K][3]}w.push(j);k++;c=i[k]=i[k]||new THREE.RenderableFace3;c.v1.positionWorld.copy(S.positionWorld);c.v2.positionWorld.copy(x.positionWorld);c.v3.positionWorld.copy(H.positionWorld);c.v1.positionScreen.copy(S.positionScreen);c.v2.positionScreen.copy(x.positionScreen);c.v3.positionScreen.copy(H.positionScreen);c.normalWorld.copy(j.normalWorld);c.centroidWorld.copy(j.centroidWorld);c.centroidScreen.copy(j.centroidScreen);c.z=c.centroidScreen.z;c.meshMaterials=
O;c.faceMaterials=m.materials;c.overdraw=N;if(M.geometry.uvs[K]){c.uvs[0]=M.geometry.uvs[K][1];c.uvs[1]=M.geometry.uvs[K][2];c.uvs[2]=M.geometry.uvs[K][3]}w.push(c);k++}}}}else if(M instanceof THREE.Line){h.multiply(s,P);n=M.geometry.vertices;m=n[0];m.positionScreen.copy(m.position);h.multiplyVector4(m.positionScreen);K=1;for(Y=n.length;K<Y;K++){L=n[K];L.positionScreen.copy(L.position);h.multiplyVector4(L.positionScreen);S=n[K-1];t.copy(L.positionScreen);p.copy(S.positionScreen);if(b(t,p)){t.multiplyScalar(1/
t.w);p.multiplyScalar(1/p.w);l=C[u]=C[u]||new THREE.RenderableLine;l.v1.positionScreen.copy(t);l.v2.positionScreen.copy(p);l.z=Math.max(t.z,p.z);l.materials=M.materials;w.push(l);u++}}}else if(M instanceof THREE.Particle){J.set(M.position.x,M.position.y,M.position.z,1);s.multiplyVector4(J);J.z/=J.w;if(J.z>0&&J.z<1){q=z[v]=z[v]||new THREE.RenderableParticle;q.x=J.x/J.w;q.y=J.y/J.w;q.z=J.z;q.rotation=M.rotation.z;q.scale.x=M.scale.x*Math.abs(q.x-(J.x+r.projectionMatrix.n11)/(J.w+r.projectionMatrix.n14));
q.scale.y=M.scale.y*Math.abs(q.y-(J.y+r.projectionMatrix.n22)/(J.w+r.projectionMatrix.n24));q.materials=M.materials;w.push(q);v++}}}}E&&w.sort(a);return w};this.unprojectVector=function(o,r){var E=new THREE.Matrix4;E.multiply(THREE.Matrix4.makeInvert(r.matrix),THREE.Matrix4.makeInvert(r.projectionMatrix));E.multiplyVector3(o);return o}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,b=new THREE.Projector,e,d,g,j;this.domElement=document.createElement("div");this.setSize=function(c,k){e=c;d=k;g=e/2;j=d/2};this.render=function(c,k){var i,l,u,C,q,v,z,B;a=b.projectScene(c,k);i=0;for(l=a.length;i<l;i++){q=a[i];if(q instanceof THREE.RenderableParticle){z=q.x*g+g;B=q.y*j+j;u=0;for(C=q.material.length;u<C;u++){v=q.material[u];if(v instanceof THREE.ParticleDOMMaterial){v=v.domElement;v.style.left=z+"px";v.style.top=B+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(da){if(q!=da)l.globalAlpha=q=da}function b(da){if(v!=da){switch(da){case THREE.NormalBlending:l.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:l.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:l.globalCompositeOperation="darker"}v=da}}var e=null,d=new THREE.Projector,g=document.createElement("canvas"),j,c,k,i,l=g.getContext("2d"),u=null,C=null,q=1,v=0,z=null,B=null,J=1,s,h,f,t,p,y,o,r,E,w=new THREE.Color,
F=new THREE.Color,D=new THREE.Color,A=new THREE.Color,K=new THREE.Color,Y,L,S,V,M,P,T,O,N,X=new THREE.Rectangle,n=new THREE.Rectangle,m=new THREE.Rectangle,x=false,H=new THREE.Color,U=new THREE.Color,ba=new THREE.Color,fa=new THREE.Color,xa=Math.PI*2,$=new THREE.Vector3,ra,sa,Da,ha,ta,ya,pa=16;ra=document.createElement("canvas");ra.width=ra.height=2;sa=ra.getContext("2d");sa.fillStyle="rgba(0,0,0,1)";sa.fillRect(0,0,2,2);Da=sa.getImageData(0,0,2,2);ha=Da.data;ta=document.createElement("canvas");ta.width=
ta.height=pa;ya=ta.getContext("2d");ya.translate(-pa/2,-pa/2);ya.scale(pa,pa);pa--;this.domElement=g;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(da,na){j=da;c=na;k=j/2;i=c/2;g.width=j;g.height=c;X.set(-k,-i,k,i)};this.setClearColor=function(da,na){u=da!==null?new THREE.Color(da):null;C=na;n.set(-k,-i,k,i);l.setTransform(1,0,0,-1,k,i);this.clear()};this.clear=function(){if(!n.isEmpty()){n.inflate(1);n.minSelf(X);if(u!==null){b(THREE.NormalBlending);a(1);l.fillStyle=
"rgba("+Math.floor(u.r*255)+","+Math.floor(u.g*255)+","+Math.floor(u.b*255)+","+C+")";l.fillRect(n.getX(),n.getY(),n.getWidth(),n.getHeight())}else l.clearRect(n.getX(),n.getY(),n.getWidth(),n.getHeight());n.empty()}};this.render=function(da,na){function Ma(G){var W,R,I,Q=G.lights;U.setRGB(0,0,0);ba.setRGB(0,0,0);fa.setRGB(0,0,0);G=0;for(W=Q.length;G<W;G++){R=Q[G];I=R.color;if(R instanceof THREE.AmbientLight){U.r+=I.r;U.g+=I.g;U.b+=I.b}else if(R instanceof THREE.DirectionalLight){ba.r+=I.r;ba.g+=
I.g;ba.b+=I.b}else if(R instanceof THREE.PointLight){fa.r+=I.r;fa.g+=I.g;fa.b+=I.b}}}function za(G,W,R,I){var Q,Z,ca,ea,ga=G.lights;G=0;for(Q=ga.length;G<Q;G++){Z=ga[G];ca=Z.color;ea=Z.intensity;if(Z instanceof THREE.DirectionalLight){Z=R.dot(Z.position)*ea;if(Z>0){I.r+=ca.r*Z;I.g+=ca.g*Z;I.b+=ca.b*Z}}else if(Z instanceof THREE.PointLight){$.sub(Z.position,W);$.normalize();Z=R.dot($)*ea;if(Z>0){I.r+=ca.r*Z;I.g+=ca.g*Z;I.b+=ca.b*Z}}}}function Na(G,W,R){if(R.opacity!=0){a(R.opacity);b(R.blending);var I,
Q,Z,ca,ea,ga;if(R instanceof THREE.ParticleBasicMaterial){if(R.map){ca=R.map;ea=ca.width>>1;ga=ca.height>>1;Q=W.scale.x*k;Z=W.scale.y*i;R=Q*ea;I=Z*ga;m.set(G.x-R,G.y-I,G.x+R,G.y+I);if(X.instersects(m)){l.save();l.translate(G.x,G.y);l.rotate(-W.rotation);l.scale(Q,-Z);l.translate(-ea,-ga);l.drawImage(ca,0,0);l.restore()}}}else if(R instanceof THREE.ParticleCircleMaterial){if(x){H.r=U.r+ba.r+fa.r;H.g=U.g+ba.g+fa.g;H.b=U.b+ba.b+fa.b;w.r=R.color.r*H.r;w.g=R.color.g*H.g;w.b=R.color.b*H.b;w.updateStyleString()}else w.__styleString=
R.color.__styleString;R=W.scale.x*k;I=W.scale.y*i;m.set(G.x-R,G.y-I,G.x+R,G.y+I);if(X.instersects(m)){Q=w.__styleString;if(B!=Q)l.fillStyle=B=Q;l.save();l.translate(G.x,G.y);l.rotate(-W.rotation);l.scale(R,I);l.beginPath();l.arc(0,0,1,0,xa,true);l.closePath();l.fill();l.restore()}}}}function Oa(G,W,R,I){if(I.opacity!=0){a(I.opacity);b(I.blending);l.beginPath();l.moveTo(G.positionScreen.x,G.positionScreen.y);l.lineTo(W.positionScreen.x,W.positionScreen.y);l.closePath();if(I instanceof THREE.LineBasicMaterial){w.__styleString=
I.color.__styleString;G=I.linewidth;if(J!=G)l.lineWidth=J=G;G=w.__styleString;if(z!=G)l.strokeStyle=z=G;l.stroke();m.inflate(I.linewidth*2)}}}function Ia(G,W,R,I,Q,Z){if(Q.opacity!=0){a(Q.opacity);b(Q.blending);t=G.positionScreen.x;p=G.positionScreen.y;y=W.positionScreen.x;o=W.positionScreen.y;r=R.positionScreen.x;E=R.positionScreen.y;l.beginPath();l.moveTo(t,p);l.lineTo(y,o);l.lineTo(r,E);l.lineTo(t,p);l.closePath();if(Q instanceof THREE.MeshBasicMaterial)if(Q.map)Q.map.image.loaded&&Q.map.mapping instanceof
THREE.UVMapping&&ua(t,p,y,o,r,E,Q.map.image,I.uvs[0].u,I.uvs[0].v,I.uvs[1].u,I.uvs[1].v,I.uvs[2].u,I.uvs[2].v);else if(Q.env_map){if(Q.env_map.image.loaded)if(Q.env_map.mapping instanceof THREE.SphericalReflectionMapping){G=na.matrix;$.copy(I.vertexNormalsWorld[0]);V=($.x*G.n11+$.y*G.n12+$.z*G.n13)*0.5+0.5;M=-($.x*G.n21+$.y*G.n22+$.z*G.n23)*0.5+0.5;$.copy(I.vertexNormalsWorld[1]);P=($.x*G.n11+$.y*G.n12+$.z*G.n13)*0.5+0.5;T=-($.x*G.n21+$.y*G.n22+$.z*G.n23)*0.5+0.5;$.copy(I.vertexNormalsWorld[2]);O=
($.x*G.n11+$.y*G.n12+$.z*G.n13)*0.5+0.5;N=-($.x*G.n21+$.y*G.n22+$.z*G.n23)*0.5+0.5;ua(t,p,y,o,r,E,Q.env_map.image,V,M,P,T,O,N)}}else Q.wireframe?Aa(Q.color.__styleString,Q.wireframe_linewidth):Ba(Q.color.__styleString);else if(Q instanceof THREE.MeshLambertMaterial){if(Q.map&&!Q.wireframe){Q.map.mapping instanceof THREE.UVMapping&&ua(t,p,y,o,r,E,Q.map.image,I.uvs[0].u,I.uvs[0].v,I.uvs[1].u,I.uvs[1].v,I.uvs[2].u,I.uvs[2].v);b(THREE.SubtractiveBlending)}if(x)if(!Q.wireframe&&Q.shading==THREE.SmoothShading&&
I.vertexNormalsWorld.length==3){F.r=D.r=A.r=U.r;F.g=D.g=A.g=U.g;F.b=D.b=A.b=U.b;za(Z,I.v1.positionWorld,I.vertexNormalsWorld[0],F);za(Z,I.v2.positionWorld,I.vertexNormalsWorld[1],D);za(Z,I.v3.positionWorld,I.vertexNormalsWorld[2],A);K.r=(D.r+A.r)*0.5;K.g=(D.g+A.g)*0.5;K.b=(D.b+A.b)*0.5;S=Ja(F,D,A,K);ua(t,p,y,o,r,E,S,0,0,1,0,0,1)}else{H.r=U.r;H.g=U.g;H.b=U.b;za(Z,I.centroidWorld,I.normalWorld,H);w.r=Q.color.r*H.r;w.g=Q.color.g*H.g;w.b=Q.color.b*H.b;w.updateStyleString();Q.wireframe?Aa(w.__styleString,
Q.wireframe_linewidth):Ba(w.__styleString)}else Q.wireframe?Aa(Q.color.__styleString,Q.wireframe_linewidth):Ba(Q.color.__styleString)}else if(Q instanceof THREE.MeshDepthMaterial){Y=na.near;L=na.far;F.r=F.g=F.b=1-Ea(G.positionScreen.z,Y,L);D.r=D.g=D.b=1-Ea(W.positionScreen.z,Y,L);A.r=A.g=A.b=1-Ea(R.positionScreen.z,Y,L);K.r=(D.r+A.r)*0.5;K.g=(D.g+A.g)*0.5;K.b=(D.b+A.b)*0.5;S=Ja(F,D,A,K);ua(t,p,y,o,r,E,S,0,0,1,0,0,1)}else if(Q instanceof THREE.MeshNormalMaterial){w.r=Fa(I.normalWorld.x);w.g=Fa(I.normalWorld.y);
w.b=Fa(I.normalWorld.z);w.updateStyleString();Q.wireframe?Aa(w.__styleString,Q.wireframe_linewidth):Ba(w.__styleString)}}}function Aa(G,W){if(z!=G)l.strokeStyle=z=G;if(J!=W)l.lineWidth=J=W;l.stroke();m.inflate(W*2)}function Ba(G){if(B!=G)l.fillStyle=B=G;l.fill()}function ua(G,W,R,I,Q,Z,ca,ea,ga,ka,ia,la,va){var oa,ma;oa=ca.width-1;ma=ca.height-1;ea*=oa;ga*=ma;ka*=oa;ia*=ma;la*=oa;va*=ma;R-=G;I-=W;Q-=G;Z-=W;ka-=ea;ia-=ga;la-=ea;va-=ga;ma=1/(ka*va-la*ia);oa=(va*R-ia*Q)*ma;ia=(va*I-ia*Z)*ma;R=(ka*Q-
la*R)*ma;I=(ka*Z-la*I)*ma;G=G-oa*ea-R*ga;W=W-ia*ea-I*ga;l.save();l.transform(oa,ia,R,I,G,W);l.clip();l.drawImage(ca,0,0);l.restore()}function Ja(G,W,R,I){var Q=~~(G.r*255),Z=~~(G.g*255);G=~~(G.b*255);var ca=~~(W.r*255),ea=~~(W.g*255);W=~~(W.b*255);var ga=~~(R.r*255),ka=~~(R.g*255);R=~~(R.b*255);var ia=~~(I.r*255),la=~~(I.g*255);I=~~(I.b*255);ha[0]=Q<0?0:Q>255?255:Q;ha[1]=Z<0?0:Z>255?255:Z;ha[2]=G<0?0:G>255?255:G;ha[4]=ca<0?0:ca>255?255:ca;ha[5]=ea<0?0:ea>255?255:ea;ha[6]=W<0?0:W>255?255:W;ha[8]=ga<
0?0:ga>255?255:ga;ha[9]=ka<0?0:ka>255?255:ka;ha[10]=R<0?0:R>255?255:R;ha[12]=ia<0?0:ia>255?255:ia;ha[13]=la<0?0:la>255?255:la;ha[14]=I<0?0:I>255?255:I;sa.putImageData(Da,0,0);ya.drawImage(ra,0,0);return ta}function Ea(G,W,R){G=(G-W)/(R-W);return G*G*(3-2*G)}function Fa(G){G=(G+1)*0.5;return G<0?0:G>1?1:G}function Ga(G,W){var R=W.x-G.x,I=W.y-G.y,Q=1/Math.sqrt(R*R+I*I);R*=Q;I*=Q;W.x+=R;W.y+=I;G.x-=R;G.y-=I}var Ca,Ka,aa,ja,qa,Ha,La,wa;l.setTransform(1,0,0,-1,k,i);this.autoClear&&this.clear();e=d.projectScene(da,
na,this.sortElements);(x=da.lights.length>0)&&Ma(da);Ca=0;for(Ka=e.length;Ca<Ka;Ca++){aa=e[Ca];m.empty();if(aa instanceof THREE.RenderableParticle){s=aa;s.x*=k;s.y*=i;ja=0;for(qa=aa.materials.length;ja<qa;ja++)Na(s,aa,aa.materials[ja],da)}else if(aa instanceof THREE.RenderableLine){s=aa.v1;h=aa.v2;s.positionScreen.x*=k;s.positionScreen.y*=i;h.positionScreen.x*=k;h.positionScreen.y*=i;m.addPoint(s.positionScreen.x,s.positionScreen.y);m.addPoint(h.positionScreen.x,h.positionScreen.y);if(X.instersects(m)){ja=
0;for(qa=aa.materials.length;ja<qa;)Oa(s,h,aa,aa.materials[ja++],da)}}else if(aa instanceof THREE.RenderableFace3){s=aa.v1;h=aa.v2;f=aa.v3;s.positionScreen.x*=k;s.positionScreen.y*=i;h.positionScreen.x*=k;h.positionScreen.y*=i;f.positionScreen.x*=k;f.positionScreen.y*=i;if(aa.overdraw){Ga(s.positionScreen,h.positionScreen);Ga(h.positionScreen,f.positionScreen);Ga(f.positionScreen,s.positionScreen)}m.add3Points(s.positionScreen.x,s.positionScreen.y,h.positionScreen.x,h.positionScreen.y,f.positionScreen.x,
f.positionScreen.y);if(X.instersects(m)){ja=0;for(qa=aa.meshMaterials.length;ja<qa;){wa=aa.meshMaterials[ja++];if(wa instanceof THREE.MeshFaceMaterial){Ha=0;for(La=aa.faceMaterials.length;Ha<La;)(wa=aa.faceMaterials[Ha++])&&Ia(s,h,f,aa,wa,da)}else Ia(s,h,f,aa,wa,da)}}}n.addRectangle(m)}l.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(V,M,P){var T,O,N,X;T=0;for(O=V.lights.length;T<O;T++){N=V.lights[T];if(N instanceof THREE.DirectionalLight){X=M.normalWorld.dot(N.position)*N.intensity;if(X>0){P.r+=N.color.r*X;P.g+=N.color.g*X;P.b+=N.color.b*X}}else if(N instanceof THREE.PointLight){E.sub(N.position,M.centroidWorld);E.normalize();X=M.normalWorld.dot(E)*N.intensity;if(X>0){P.r+=N.color.r*X;P.g+=N.color.g*X;P.b+=N.color.b*X}}}}function b(V,M,P,T,O,N){A=d(K++);A.setAttribute("d","M "+V.positionScreen.x+
" "+V.positionScreen.y+" L "+M.positionScreen.x+" "+M.positionScreen.y+" L "+P.positionScreen.x+","+P.positionScreen.y+"z");if(O instanceof THREE.MeshBasicMaterial)f.__styleString=O.color.__styleString;else if(O instanceof THREE.MeshLambertMaterial)if(h){t.r=p.r;t.g=p.g;t.b=p.b;a(N,T,t);f.r=O.color.r*t.r;f.g=O.color.g*t.g;f.b=O.color.b*t.b;f.updateStyleString()}else f.__styleString=O.color.__styleString;else if(O instanceof THREE.MeshDepthMaterial){r=1-O.__2near/(O.__farPlusNear-T.z*O.__farMinusNear);
f.setRGB(r,r,r)}else O instanceof THREE.MeshNormalMaterial&&f.setRGB(g(T.normalWorld.x),g(T.normalWorld.y),g(T.normalWorld.z));O.wireframe?A.setAttribute("style","fill: none; stroke: "+f.__styleString+"; stroke-width: "+O.wireframe_linewidth+"; stroke-opacity: "+O.opacity+"; stroke-linecap: "+O.wireframe_linecap+"; stroke-linejoin: "+O.wireframe_linejoin):A.setAttribute("style","fill: "+f.__styleString+"; fill-opacity: "+O.opacity);k.appendChild(A)}function e(V,M,P,T,O,N,X){A=d(K++);A.setAttribute("d",
"M "+V.positionScreen.x+" "+V.positionScreen.y+" L "+M.positionScreen.x+" "+M.positionScreen.y+" L "+P.positionScreen.x+","+P.positionScreen.y+" L "+T.positionScreen.x+","+T.positionScreen.y+"z");if(N instanceof THREE.MeshBasicMaterial)f.__styleString=N.color.__styleString;else if(N instanceof THREE.MeshLambertMaterial)if(h){t.r=p.r;t.g=p.g;t.b=p.b;a(X,O,t);f.r=N.color.r*t.r;f.g=N.color.g*t.g;f.b=N.color.b*t.b;f.updateStyleString()}else f.__styleString=N.color.__styleString;else if(N instanceof THREE.MeshDepthMaterial){r=
1-N.__2near/(N.__farPlusNear-O.z*N.__farMinusNear);f.setRGB(r,r,r)}else N instanceof THREE.MeshNormalMaterial&&f.setRGB(g(O.normalWorld.x),g(O.normalWorld.y),g(O.normalWorld.z));N.wireframe?A.setAttribute("style","fill: none; stroke: "+f.__styleString+"; stroke-width: "+N.wireframe_linewidth+"; stroke-opacity: "+N.opacity+"; stroke-linecap: "+N.wireframe_linecap+"; stroke-linejoin: "+N.wireframe_linejoin):A.setAttribute("style","fill: "+f.__styleString+"; fill-opacity: "+N.opacity);k.appendChild(A)}
function d(V){if(w[V]==null){w[V]=document.createElementNS("http://www.w3.org/2000/svg","path");S==0&&w[V].setAttribute("shape-rendering","crispEdges");return w[V]}return w[V]}function g(V){return V<0?Math.min((1+V)*0.5,0.5):0.5+Math.min(V*0.5,0.5)}var j=null,c=new THREE.Projector,k=document.createElementNS("http://www.w3.org/2000/svg","svg"),i,l,u,C,q,v,z,B,J=new THREE.Rectangle,s=new THREE.Rectangle,h=false,f=new THREE.Color(16777215),t=new THREE.Color(16777215),p=new THREE.Color(0),y=new THREE.Color(0),
o=new THREE.Color(0),r,E=new THREE.Vector3,w=[],F=[],D=[],A,K,Y,L,S=1;this.domElement=k;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(V){switch(V){case "high":S=1;break;case "low":S=0}};this.setSize=function(V,M){i=V;l=M;u=i/2;C=l/2;k.setAttribute("viewBox",-u+" "+-C+" "+i+" "+l);k.setAttribute("width",i);k.setAttribute("height",l);J.set(-u,-C,u,C)};this.clear=function(){for(;k.childNodes.length>0;)k.removeChild(k.childNodes[0])};this.render=function(V,M){var P,T,
O,N,X,n,m,x;this.autoClear&&this.clear();j=c.projectScene(V,M,this.sortElements);L=Y=K=0;if(h=V.lights.length>0){m=V.lights;p.setRGB(0,0,0);y.setRGB(0,0,0);o.setRGB(0,0,0);P=0;for(T=m.length;P<T;P++){O=m[P];N=O.color;if(O instanceof THREE.AmbientLight){p.r+=N.r;p.g+=N.g;p.b+=N.b}else if(O instanceof THREE.DirectionalLight){y.r+=N.r;y.g+=N.g;y.b+=N.b}else if(O instanceof THREE.PointLight){o.r+=N.r;o.g+=N.g;o.b+=N.b}}}P=0;for(T=j.length;P<T;P++){m=j[P];s.empty();if(m instanceof THREE.RenderableParticle){q=
m;q.x*=u;q.y*=-C;O=0;for(N=m.materials.length;O<N;O++)if(x=m.materials[O]){X=q;n=m;x=x;var H=Y++;if(F[H]==null){F[H]=document.createElementNS("http://www.w3.org/2000/svg","circle");S==0&&F[H].setAttribute("shape-rendering","crispEdges")}A=F[H];A.setAttribute("cx",X.x);A.setAttribute("cy",X.y);A.setAttribute("r",n.scale.x*u);if(x instanceof THREE.ParticleCircleMaterial){if(h){t.r=p.r+y.r+o.r;t.g=p.g+y.g+o.g;t.b=p.b+y.b+o.b;f.r=x.color.r*t.r;f.g=x.color.g*t.g;f.b=x.color.b*t.b;f.updateStyleString()}else f=
x.color;A.setAttribute("style","fill: "+f.__styleString)}k.appendChild(A)}}else if(m instanceof THREE.RenderableLine){q=m.v1;v=m.v2;q.positionScreen.x*=u;q.positionScreen.y*=-C;v.positionScreen.x*=u;v.positionScreen.y*=-C;s.addPoint(q.positionScreen.x,q.positionScreen.y);s.addPoint(v.positionScreen.x,v.positionScreen.y);if(J.instersects(s)){O=0;for(N=m.materials.length;O<N;)if(x=m.materials[O++]){X=q;n=v;x=x;H=L++;if(D[H]==null){D[H]=document.createElementNS("http://www.w3.org/2000/svg","line");S==
0&&D[H].setAttribute("shape-rendering","crispEdges")}A=D[H];A.setAttribute("x1",X.positionScreen.x);A.setAttribute("y1",X.positionScreen.y);A.setAttribute("x2",n.positionScreen.x);A.setAttribute("y2",n.positionScreen.y);if(x instanceof THREE.LineBasicMaterial){f.__styleString=x.color.__styleString;A.setAttribute("style","fill: none; stroke: "+f.__styleString+"; stroke-width: "+x.linewidth+"; stroke-opacity: "+x.opacity+"; stroke-linecap: "+x.linecap+"; stroke-linejoin: "+x.linejoin);k.appendChild(A)}}}}else if(m instanceof
THREE.RenderableFace3){q=m.v1;v=m.v2;z=m.v3;q.positionScreen.x*=u;q.positionScreen.y*=-C;v.positionScreen.x*=u;v.positionScreen.y*=-C;z.positionScreen.x*=u;z.positionScreen.y*=-C;s.addPoint(q.positionScreen.x,q.positionScreen.y);s.addPoint(v.positionScreen.x,v.positionScreen.y);s.addPoint(z.positionScreen.x,z.positionScreen.y);if(J.instersects(s)){O=0;for(N=m.meshMaterials.length;O<N;){x=m.meshMaterials[O++];if(x instanceof THREE.MeshFaceMaterial){X=0;for(n=m.faceMaterials.length;X<n;)(x=m.faceMaterials[X++])&&
b(q,v,z,m,x,V)}else x&&b(q,v,z,m,x,V)}}}else if(m instanceof THREE.RenderableFace4){q=m.v1;v=m.v2;z=m.v3;B=m.v4;q.positionScreen.x*=u;q.positionScreen.y*=-C;v.positionScreen.x*=u;v.positionScreen.y*=-C;z.positionScreen.x*=u;z.positionScreen.y*=-C;B.positionScreen.x*=u;B.positionScreen.y*=-C;s.addPoint(q.positionScreen.x,q.positionScreen.y);s.addPoint(v.positionScreen.x,v.positionScreen.y);s.addPoint(z.positionScreen.x,z.positionScreen.y);s.addPoint(B.positionScreen.x,B.positionScreen.y);if(J.instersects(s)){O=
0;for(N=m.meshMaterials.length;O<N;){x=m.meshMaterials[O++];if(x instanceof THREE.MeshFaceMaterial){X=0;for(n=m.faceMaterials.length;X<n;)(x=m.faceMaterials[X++])&&e(q,v,z,B,m,x,V)}else x&&e(q,v,z,B,m,x,V)}}}}}};
THREE.WebGLRenderer=function(a){function b(h,f){h.fragment_shader=f.fragment_shader;h.vertex_shader=f.vertex_shader;h.uniforms=Uniforms.clone(f.uniforms)}function e(h,f){h.uniforms.color.value.setRGB(h.color.r*h.opacity,h.color.g*h.opacity,h.color.b*h.opacity);h.uniforms.opacity.value=h.opacity;h.uniforms.map.texture=h.map;h.uniforms.env_map.texture=h.env_map;h.uniforms.reflectivity.value=h.reflectivity;h.uniforms.refraction_ratio.value=h.refraction_ratio;h.uniforms.combine.value=h.combine;h.uniforms.useRefract.value=
h.env_map&&h.env_map.mapping instanceof THREE.CubeRefractionMapping;if(f){h.uniforms.fogColor.value.setHex(f.color.hex);if(f instanceof THREE.Fog){h.uniforms.fogNear.value=f.near;h.uniforms.fogFar.value=f.far}else if(f instanceof THREE.FogExp2)h.uniforms.fogDensity.value=f.density}}function d(h,f){var t;if(h=="fragment")t=c.createShader(c.FRAGMENT_SHADER);else if(h=="vertex")t=c.createShader(c.VERTEX_SHADER);c.shaderSource(t,f);c.compileShader(t);if(!c.getShaderParameter(t,c.COMPILE_STATUS)){alert(c.getShaderInfoLog(t));
return null}return t}function g(h){switch(h){case THREE.RepeatWrapping:return c.REPEAT;case THREE.ClampToEdgeWrapping:return c.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return c.MIRRORED_REPEAT;case THREE.NearestFilter:return c.NEAREST;case THREE.NearestMipMapNearestFilter:return c.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return c.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return c.LINEAR;case THREE.LinearMipMapNearestFilter:return c.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return c.LINEAR_MIPMAP_LINEAR}return 0}
var j=document.createElement("canvas"),c,k=null,i=new THREE.Matrix4,l,u=new Float32Array(16),C=new Float32Array(16),q=new Float32Array(16),v=new Float32Array(9),z=new Float32Array(16),B=true,J=new THREE.Color(0),s=0;if(a){if(a.antialias!==undefined)B=a.antialias;a.clearColor!==undefined&&J.setHex(a.clearColor);if(a.clearAlpha!==undefined)s=a.clearAlpha}this.domElement=j;this.autoClear=true;(function(h,f,t){try{c=j.getContext("experimental-webgl",{antialias:h})}catch(p){}if(!c){alert("WebGL not supported");
throw"cannot create webgl context";}c.clearColor(0,0,0,1);c.clearDepth(1);c.enable(c.DEPTH_TEST);c.depthFunc(c.LEQUAL);c.frontFace(c.CCW);c.cullFace(c.BACK);c.enable(c.CULL_FACE);c.enable(c.BLEND);c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA);c.clearColor(f.r,f.g,f.b,t)})(B,J,s);this.setSize=function(h,f){j.width=h;j.height=f;c.viewport(0,0,j.width,j.height)};this.setClearColor=function(h,f){var t=new THREE.Color(h);c.clearColor(t.r,t.g,t.b,f)};this.clear=function(){c.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT)};
this.setupLights=function(h,f){var t,p,y,o=0,r=0,E=0,w=[],F=[],D=[],A=[];t=0;for(p=f.length;t<p;t++){y=f[t];if(y instanceof THREE.AmbientLight){o+=y.color.r;r+=y.color.g;E+=y.color.b}else if(y instanceof THREE.DirectionalLight){w.push(y.color.r*y.intensity,y.color.g*y.intensity,y.color.b*y.intensity);F.push(y.position.x,y.position.y,y.position.z)}else if(y instanceof THREE.PointLight){D.push(y.color.r*y.intensity,y.color.g*y.intensity,y.color.b*y.intensity);A.push(y.position.x,y.position.y,y.position.z)}}return{ambient:[o,
r,E],directional:{colors:w,positions:F},point:{colors:D,positions:A}}};this.createBuffers=function(h,f){var t,p,y,o,r,E,w,F,D,A,K=[],Y=[],L=[],S=[],V=[],M=[],P=0,T=h.geometry.geometryChunks[f],O;r=false;t=0;for(p=h.materials.length;t<p;t++){E=h.materials[t];if(E instanceof THREE.MeshFaceMaterial){E=0;for(O=T.materials.length;E<O;E++)if(T.materials[E]&&T.materials[E].shading!=undefined&&T.materials[E].shading==THREE.SmoothShading){r=true;break}}else if(E&&E.shading!=undefined&&E.shading==THREE.SmoothShading){r=
true;break}if(r)break}O=r;t=0;for(p=T.faces.length;t<p;t++){y=T.faces[t];o=h.geometry.faces[y];r=o.vertexNormals;E=o.normal;y=h.geometry.uvs[y];if(o instanceof THREE.Face3){w=h.geometry.vertices[o.a].position;F=h.geometry.vertices[o.b].position;D=h.geometry.vertices[o.c].position;L.push(w.x,w.y,w.z,F.x,F.y,F.z,D.x,D.y,D.z);if(h.geometry.hasTangents){w=h.geometry.vertices[o.a].tangent;F=h.geometry.vertices[o.b].tangent;D=h.geometry.vertices[o.c].tangent;V.push(w.x,w.y,w.z,w.w,F.x,F.y,F.z,F.w,D.x,D.y,
D.z,D.w)}if(r.length==3&&O)for(o=0;o<3;o++)S.push(r[o].x,r[o].y,r[o].z);else for(o=0;o<3;o++)S.push(E.x,E.y,E.z);if(y)for(o=0;o<3;o++)M.push(y[o].u,y[o].v);K.push(P,P+1,P+2);Y.push(P,P+1,P,P+2,P+1,P+2);P+=3}else if(o instanceof THREE.Face4){w=h.geometry.vertices[o.a].position;F=h.geometry.vertices[o.b].position;D=h.geometry.vertices[o.c].position;A=h.geometry.vertices[o.d].position;L.push(w.x,w.y,w.z,F.x,F.y,F.z,D.x,D.y,D.z,A.x,A.y,A.z);if(h.geometry.hasTangents){w=h.geometry.vertices[o.a].tangent;
F=h.geometry.vertices[o.b].tangent;D=h.geometry.vertices[o.c].tangent;o=h.geometry.vertices[o.d].tangent;V.push(w.x,w.y,w.z,w.w,F.x,F.y,F.z,F.w,D.x,D.y,D.z,D.w,o.x,o.y,o.z,o.w)}if(r.length==4&&O)for(o=0;o<4;o++)S.push(r[o].x,r[o].y,r[o].z);else for(o=0;o<4;o++)S.push(E.x,E.y,E.z);if(y)for(o=0;o<4;o++)M.push(y[o].u,y[o].v);K.push(P,P+1,P+2,P,P+2,P+3);Y.push(P,P+1,P,P+2,P,P+3,P+1,P+2,P+2,P+3);P+=4}}if(L.length){T.__webGLVertexBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,T.__webGLVertexBuffer);
c.bufferData(c.ARRAY_BUFFER,new Float32Array(L),c.STATIC_DRAW);T.__webGLNormalBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,T.__webGLNormalBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(S),c.STATIC_DRAW);if(h.geometry.hasTangents){T.__webGLTangentBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,T.__webGLTangentBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(V),c.STATIC_DRAW)}if(M.length>0){T.__webGLUVBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,T.__webGLUVBuffer);c.bufferData(c.ARRAY_BUFFER,
new Float32Array(M),c.STATIC_DRAW)}T.__webGLFaceBuffer=c.createBuffer();c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,T.__webGLFaceBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,new Uint16Array(K),c.STATIC_DRAW);T.__webGLLineBuffer=c.createBuffer();c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,T.__webGLLineBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,new Uint16Array(Y),c.STATIC_DRAW);T.__webGLFaceCount=K.length;T.__webGLLineCount=Y.length}};this.renderBuffer=function(h,f,t,p,y){var o,r,E,w;if(!p.program){if(p instanceof
THREE.MeshDepthMaterial){b(p,THREE.ShaderLib.depth);p.uniforms.mNear.value=h.near;p.uniforms.mFar.value=h.far}else if(p instanceof THREE.MeshNormalMaterial)b(p,THREE.ShaderLib.normal);else if(p instanceof THREE.MeshBasicMaterial){b(p,THREE.ShaderLib.basic);e(p,t)}else if(p instanceof THREE.MeshLambertMaterial){b(p,THREE.ShaderLib.lambert);e(p,t)}else if(p instanceof THREE.MeshPhongMaterial){b(p,THREE.ShaderLib.phong);e(p,t)}if(scene){var F,D,A;F=w=r=0;for(D=f.length;F<D;F++){A=f[F];A instanceof THREE.DirectionalLight&&
w++;A instanceof THREE.PointLight&&r++}if(r+w<=4){F=w;r=r}else{F=Math.ceil(4*w/(r+w));r=4-F}r={directional:F,point:r}}else r={directional:1,point:3};w={fog:t,map:p.map,env_map:p.env_map,maxDirLights:r.directional,maxPointLights:r.point};r=p.fragment_shader;F=p.vertex_shader;D=c.createProgram();A=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+w.maxDirLights,"#define MAX_POINT_LIGHTS "+w.maxPointLights,w.fog?"#define USE_FOG":"",w.fog instanceof THREE.FogExp2?"#define FOG_EXP2":
"",w.map?"#define USE_MAP":"",w.env_map?"#define USE_ENVMAP":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");w=[c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+w.maxDirLights,"#define MAX_POINT_LIGHTS "+w.maxPointLights,w.map?"#define USE_MAP":"",w.env_map?"#define USE_ENVMAP":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n"].join("\n");
c.attachShader(D,d("fragment",A+r));c.attachShader(D,d("vertex",w+F));c.linkProgram(D);c.getProgramParameter(D,c.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+c.getProgramParameter(D,c.VALIDATE_STATUS)+", gl error ["+c.getError()+"]");D.uniforms={};D.attributes={};p.program=D;r=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(o in p.uniforms)r.push(o);o=p.program;F=0;for(D=r.length;F<D;F++){A=r[F];o.uniforms[A]=c.getUniformLocation(o,
A)}o=p.program;r=["position","normal","uv","tangent"];F=0;for(D=r.length;F<D;F++){A=r[F];o.attributes[A]=c.getAttribLocation(o,A)}}o=p.program;if(o!=k){c.useProgram(o);k=o}this.loadCamera(o,h);this.loadMatrices(o);if(p instanceof THREE.MeshPhongMaterial||p instanceof THREE.MeshLambertMaterial){h=this.setupLights(o,f);p.uniforms.enableLighting.value=h.directional.positions.length+h.point.positions.length;p.uniforms.ambientLightColor.value=h.ambient;p.uniforms.directionalLightColor.value=h.directional.colors;
p.uniforms.directionalLightDirection.value=h.directional.positions;p.uniforms.pointLightColor.value=h.point.colors;p.uniforms.pointLightPosition.value=h.point.positions}if(p instanceof THREE.MeshBasicMaterial||p instanceof THREE.MeshLambertMaterial||p instanceof THREE.MeshPhongMaterial)e(p,t);if(p instanceof THREE.MeshPhongMaterial){p.uniforms.ambient.value.setRGB(p.ambient.r,p.ambient.g,p.ambient.b);p.uniforms.specular.value.setRGB(p.specular.r,p.specular.g,p.specular.b);p.uniforms.shininess.value=
p.shininess}t=p.uniforms;for(E in t){f=t[E].type;h=t[E].value;r=o.uniforms[E];if(f=="i")c.uniform1i(r,h);else if(f=="f")c.uniform1f(r,h);else if(f=="fv")c.uniform3fv(r,h);else if(f=="v2")c.uniform2f(r,h.x,h.y);else if(f=="v3")c.uniform3f(r,h.x,h.y,h.z);else if(f=="c")c.uniform3f(r,h.r,h.g,h.b);else if(f=="t"){c.uniform1i(r,h);if(f=t[E].texture)if(f.image instanceof Array&&f.image.length==6){f=f;h=h;if(f.image.length==6){if(!f.image.__webGLTextureCube&&!f.image.__cubeMapInitialized&&f.image.loadCount==
6){f.image.__webGLTextureCube=c.createTexture();c.bindTexture(c.TEXTURE_CUBE_MAP,f.image.__webGLTextureCube);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MAG_FILTER,c.LINEAR);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MIN_FILTER,c.LINEAR_MIPMAP_LINEAR);for(r=0;r<6;++r)c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,f.image[r]);c.generateMipmap(c.TEXTURE_CUBE_MAP);
c.bindTexture(c.TEXTURE_CUBE_MAP,null);f.image.__cubeMapInitialized=true}c.activeTexture(c.TEXTURE0+h);c.bindTexture(c.TEXTURE_CUBE_MAP,f.image.__webGLTextureCube)}}else{f=f;h=h;if(!f.__webGLTexture&&f.image.loaded){f.__webGLTexture=c.createTexture();c.bindTexture(c.TEXTURE_2D,f.__webGLTexture);c.texImage2D(c.TEXTURE_2D,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,f.image);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,g(f.wrap_s));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,g(f.wrap_t));c.texParameteri(c.TEXTURE_2D,
c.TEXTURE_MAG_FILTER,g(f.mag_filter));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,g(f.min_filter));c.generateMipmap(c.TEXTURE_2D);c.bindTexture(c.TEXTURE_2D,null)}c.activeTexture(c.TEXTURE0+h);c.bindTexture(c.TEXTURE_2D,f.__webGLTexture)}}}E=o.attributes;c.bindBuffer(c.ARRAY_BUFFER,y.__webGLVertexBuffer);c.vertexAttribPointer(E.position,3,c.FLOAT,false,0,0);c.enableVertexAttribArray(E.position);if(E.normal>=0){c.bindBuffer(c.ARRAY_BUFFER,y.__webGLNormalBuffer);c.vertexAttribPointer(E.normal,
3,c.FLOAT,false,0,0);c.enableVertexAttribArray(E.normal)}if(E.tangent>=0){c.bindBuffer(c.ARRAY_BUFFER,y.__webGLTangentBuffer);c.vertexAttribPointer(E.tangent,4,c.FLOAT,false,0,0);c.enableVertexAttribArray(E.tangent)}if(E.uv>=0)if(y.__webGLUVBuffer){c.bindBuffer(c.ARRAY_BUFFER,y.__webGLUVBuffer);c.vertexAttribPointer(E.uv,2,c.FLOAT,false,0,0);c.enableVertexAttribArray(E.uv)}else c.disableVertexAttribArray(E.uv);if(p.wireframe){c.lineWidth(p.wireframe_linewidth);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,
y.__webGLLineBuffer);c.drawElements(c.LINES,y.__webGLLineCount,c.UNSIGNED_SHORT,0)}else{c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,y.__webGLFaceBuffer);c.drawElements(c.TRIANGLES,y.__webGLFaceCount,c.UNSIGNED_SHORT,0)}};this.renderPass=function(h,f,t,p,y,o,r){var E,w,F,D,A;F=0;for(D=p.materials.length;F<D;F++){E=p.materials[F];if(E instanceof THREE.MeshFaceMaterial){E=0;for(w=y.materials.length;E<w;E++)if((A=y.materials[E])&&A.blending==o&&A.opacity<1==r){this.setBlending(A.blending);this.renderBuffer(h,
f,t,A,y)}}else if((A=E)&&A.blending==o&&A.opacity<1==r){this.setBlending(A.blending);this.renderBuffer(h,f,t,A,y)}}};this.render=function(h,f){var t,p,y,o,r=h.lights,E=h.fog;this.initWebGLObjects(h);this.autoClear&&this.clear();f.autoUpdateMatrix&&f.updateMatrix();u.set(f.matrix.flatten());q.set(f.projectionMatrix.flatten());t=0;for(p=h.__webGLObjects.length;t<p;t++){y=h.__webGLObjects[t];o=y.object;y=y.buffer;if(o.visible){this.setupMatrices(o,f);this.renderPass(f,r,E,o,y,THREE.NormalBlending,false)}}t=
0;for(p=h.__webGLObjects.length;t<p;t++){y=h.__webGLObjects[t];o=y.object;y=y.buffer;if(o.visible){this.setupMatrices(o,f);this.renderPass(f,r,E,o,y,THREE.AdditiveBlending,false);this.renderPass(f,r,E,o,y,THREE.SubtractiveBlending,false);this.renderPass(f,r,E,o,y,THREE.AdditiveBlending,true);this.renderPass(f,r,E,o,y,THREE.SubtractiveBlending,true);this.renderPass(f,r,E,o,y,THREE.NormalBlending,true)}}};this.initWebGLObjects=function(h){var f,t,p,y,o,r;if(!h.__webGLObjects){h.__webGLObjects=[];h.__webGLObjectsMap=
{}}f=0;for(t=h.objects.length;f<t;f++){p=h.objects[f];if(h.__webGLObjectsMap[p.id]==undefined)h.__webGLObjectsMap[p.id]={};r=h.__webGLObjectsMap[p.id];if(p instanceof THREE.Mesh)for(o in p.geometry.geometryChunks){y=p.geometry.geometryChunks[o];y.__webGLVertexBuffer||this.createBuffers(p,o);if(r[o]==undefined){y={buffer:y,object:p};h.__webGLObjects.push(y);r[o]=1}}}};this.removeObject=function(h,f){var t,p;for(t=h.__webGLObjects.length-1;t>=0;t--){p=h.__webGLObjects[t].object;f==p&&h.__webGLObjects.splice(t,
1)}};this.setupMatrices=function(h,f){h.autoUpdateMatrix&&h.updateMatrix();i.multiply(f.matrix,h.matrix);C.set(i.flatten());l=THREE.Matrix4.makeInvert3x3(i).transpose();v.set(l.m);z.set(h.matrix.flatten())};this.loadMatrices=function(h){c.uniformMatrix4fv(h.uniforms.viewMatrix,false,u);c.uniformMatrix4fv(h.uniforms.modelViewMatrix,false,C);c.uniformMatrix4fv(h.uniforms.projectionMatrix,false,q);c.uniformMatrix3fv(h.uniforms.normalMatrix,false,v);c.uniformMatrix4fv(h.uniforms.objectMatrix,false,z)};
this.loadCamera=function(h,f){c.uniform3f(h.uniforms.cameraPosition,f.position.x,f.position.y,f.position.z)};this.setBlending=function(h){switch(h){case THREE.AdditiveBlending:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ONE,c.ONE);break;case THREE.SubtractiveBlending:c.blendFunc(c.DST_COLOR,c.ZERO);break;default:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=function(h,f){if(h){!f||f=="ccw"?c.frontFace(c.CCW):c.frontFace(c.CW);if(h=="back")c.cullFace(c.BACK);
else h=="front"?c.cullFace(c.FRONT):c.cullFace(c.FRONT_AND_BACK);c.enable(c.CULL_FACE)}else c.disable(c.CULL_FACE)};this.supportsVertexTextures=function(){return c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, 1.0 ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\ncubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = mix( gl_FragColor, cubeColor, reflectivity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}",
lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif"};
THREE.UniformsLib={common:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",
value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",
vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsLib.common,fragment_shader:["uniform vec3 color;\nuniform float opacity;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",
THREE.Snippets.map_fragment,"gl_FragColor = mColor * mapColor;",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},lambert:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nvarying vec3 vLightWeighting;",
THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,"gl_FragColor =  mColor * mapColor * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,
THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},phong:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},
shininess:{type:"f",value:30}}]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,THREE.Snippets.lights_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lights_fragment,
"gl_FragColor =  mapColor * totalLight * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",
THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")}};THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
var GeometryUtils={merge:function(a,b){var e=b instanceof THREE.Mesh,d=a.vertices.length,g=e?b.geometry:b,j=a.vertices,c=g.vertices,k=a.faces,i=g.faces,l=a.uvs;g=g.uvs;e&&b.updateMatrix();for(var u=0,C=c.length;u<C;u++){var q=new THREE.Vertex(c[u].position.clone());e&&b.matrix.multiplyVector3(q.position);j.push(q)}u=0;for(C=i.length;u<C;u++){c=i[u];var v,z=c.vertexNormals;if(c instanceof THREE.Face3)v=new THREE.Face3(c.a+d,c.b+d,c.c+d);else if(c instanceof THREE.Face4)v=new THREE.Face4(c.a+d,c.b+
d,c.c+d,c.d+d);v.centroid.copy(c.centroid);v.normal.copy(c.normal);e=0;for(j=z.length;e<j;e++){q=z[e];v.vertexNormals.push(q.clone())}v.materials=c.materials.slice();k.push(v)}u=0;for(C=g.length;u<C;u++){d=g[u];k=[];e=0;for(j=d.length;e<j;e++)k.push(new THREE.UV(d[e].u,d[e].v));l.push(k)}}},ImageUtils={loadTexture:function(a,b){var e=new Image;e.onload=function(){this.loaded=true};e.src=a;return new THREE.Texture(e,b)},loadArray:function(a){var b,e,d=[];b=d.loadCount=0;for(e=a.length;b<e;++b){d[b]=
new Image;d[b].loaded=0;d[b].onload=function(){d.loadCount+=1;this.loaded=true};d[b].src=a[b]}return d}},SceneUtils={addMesh:function(a,b,e,d,g,j,c,k,i,l){b=new THREE.Mesh(b,l);b.scale.x=b.scale.y=b.scale.z=e;b.position.x=d;b.position.y=g;b.position.z=j;b.rotation.x=c;b.rotation.y=k;b.rotation.z=i;a.addObject(b);return b},addPanoramaCubeWebGL:function(a,b,e){var d=ShaderUtils.lib.cube;d.uniforms.tCube.texture=e;e=new THREE.MeshShaderMaterial({fragment_shader:d.fragment_shader,vertex_shader:d.vertex_shader,
uniforms:d.uniforms});b=new THREE.Mesh(new Cube(b,b,b,1,1,null,true),e);a.addObject(b);return b},addPanoramaCube:function(a,b,e){var d=[];d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[0])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[1])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[2])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[3])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[4])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[5])}));
b=new THREE.Mesh(new Cube(b,b,b,1,1,d,true),new THREE.MeshFaceMaterial);a.addObject(b);return b},addPanoramaCubePlanes:function(a,b,e){var d=b/2;b=new Plane(b,b);var g=Math.PI/2,j=Math.PI;SceneUtils.addMesh(a,b,1,0,0,-d,0,0,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[5])}));SceneUtils.addMesh(a,b,1,-d,0,0,0,g,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[0])}));SceneUtils.addMesh(a,b,1,d,0,0,0,-g,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[1])}));SceneUtils.addMesh(a,
b,1,0,d,0,g,0,j,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[2])}));SceneUtils.addMesh(a,b,1,0,-d,0,-g,0,j,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[3])}))}},ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertex_shader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main(void) {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tNormal:{type:"t",value:2,texture:null},tAO:{type:"t",value:3,texture:null},uNormalScale:{type:"f",value:1},tDisplacement:{type:"t",value:4,texture:null},uDisplacementBias:{type:"f",value:-0.5},uDisplacementScale:{type:"f",value:2.5},uPointLightPos:{type:"v3",value:new THREE.Vector3},uPointLightColor:{type:"c",value:new THREE.Color(15658734)},uDirLightPos:{type:"v3",value:new THREE.Vector3},
uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30}},fragment_shader:"uniform vec3 uDirLightPos;\nuniform vec3 uAmbientLightColor;\nuniform vec3 uDirLightColor;\nuniform vec3 uPointLightColor;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform bool enableDiffuse;\nuniform bool enableAO;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tAO;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 diffuseTex = vec3( 1.0, 1.0, 1.0 );\nvec3 aoTex = vec3( 1.0, 1.0, 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse )\ndiffuseTex = texture2D( tDiffuse, vUv ).xyz;\nif( enableAO )\naoTex = texture2D( tAO, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec3 pointVector = normalize( vPointLightVector );\nvec3 pointHalfVector = normalize( vPointLightVector + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, uShininess );\npointDiffuse  += vec4( uDiffuseColor, 1.0 ) * pointDiffuseWeight;\npointSpecular += vec4( uSpecularColor, 1.0 ) * pointSpecularWeight;\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 lDirection = viewMatrix * vec4( uDirLightPos, 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, uShininess );\ndirDiffuse  += vec4( uDiffuseColor, 1.0 ) * dirDiffuseWeight;\ndirSpecular += vec4( uSpecularColor, 1.0 ) * dirSpecularWeight;\nvec4 totalLight = vec4( uAmbientLightColor * uAmbientColor, 1.0 );\ntotalLight += vec4( uDirLightColor, 1.0 ) * ( dirDiffuse + dirSpecular );\ntotalLight += vec4( uPointLightColor, 1.0 ) * ( pointDiffuse + pointSpecular );\ngl_FragColor = vec4( totalLight.xyz * aoTex * diffuseTex, 1.0 );\n}",
vertex_shader:"attribute vec4 tangent;\nuniform vec3 uPointLightPos;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec4 lPosition = viewMatrix * vec4( uPointLightPos, 1.0 );\nvPointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}"},
basic:{uniforms:{},vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"void main() {\ngl_FragColor = vec4(1.0, 0.0, 0.0, 0.5);\n}"},cube:{uniforms:{tCube:{type:"t",value:1,texture:null}},vertex_shader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( - wPos.x, wPos.yz ) );\n}"}}},Cube=function(a,b,e,d,g,j,c,k){function i(B,J,s,h,f,t,p,y){var o,r,E=d||1,w=g||1,F=E+1,D=w+1,A=f/2,K=t/2;f=f/E;var Y=t/w,L=l.vertices.length;if(B=="x"&&J=="y"||B=="y"&&J=="x")o="z";else if(B=="x"&&J=="z"||B=="z"&&J=="x")o="y";else if(B=="z"&&J=="y"||B=="y"&&J=="z")o="x";for(r=0;r<D;r++)for(t=0;t<
F;t++){var S=new THREE.Vector3;S[B]=(t*f-A)*s;S[J]=(r*Y-K)*h;S[o]=p;l.vertices.push(new THREE.Vertex(S))}for(r=0;r<w;r++)for(t=0;t<E;t++){l.faces.push(new THREE.Face4(t+F*r+L,t+F*(r+1)+L,t+1+F*(r+1)+L,t+1+F*r+L,null,y));l.uvs.push([new THREE.UV(t/E,r/w),new THREE.UV(t/E,(r+1)/w),new THREE.UV((t+1)/E,(r+1)/w),new THREE.UV((t+1)/E,r/w)])}}THREE.Geometry.call(this);var l=this,u=a/2,C=b/2,q=e/2;c=c?-1:1;if(j!==undefined)if(j instanceof Array)this.materials=j;else{this.materials=[];for(var v=0;v<6;v++)this.materials.push([j])}else this.materials=
[];this.sides={px:true,nx:true,py:true,ny:true,pz:true,nz:true};if(k!=undefined)for(var z in k)if(this.sides[z]!=undefined)this.sides[z]=k[z];this.sides.px&&i("z","y",1*c,-1,e,b,-u,this.materials[0]);this.sides.nx&&i("z","y",-1*c,-1,e,b,u,this.materials[1]);this.sides.py&&i("x","z",1*c,1,a,e,C,this.materials[2]);this.sides.ny&&i("x","z",1*c,-1,a,e,-C,this.materials[3]);this.sides.pz&&i("x","y",1*c,-1,a,b,q,this.materials[4]);this.sides.nz&&i("x","y",-1*c,-1,a,b,-q,this.materials[5]);(function(){for(var B=
[],J=[],s=0,h=l.vertices.length;s<h;s++){for(var f=l.vertices[s],t=false,p=0,y=B.length;p<y;p++){var o=B[p];if(f.position.x==o.position.x&&f.position.y==o.position.y&&f.position.z==o.position.z){J[s]=p;t=true;break}}if(!t){J[s]=B.length;B.push(new THREE.Vertex(f.position.clone()))}}s=0;for(h=l.faces.length;s<h;s++){f=l.faces[s];f.a=J[f.a];f.b=J[f.b];f.c=J[f.c];f.d=J[f.d]}l.vertices=B})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cube.prototype=new THREE.Geometry;
Cube.prototype.constructor=Cube;
var Cylinder=function(a,b,e,d,g){function j(l,u,C){c.vertices.push(new THREE.Vertex(new THREE.Vector3(l,u,C)))}THREE.Geometry.call(this);var c=this,k=Math.PI,i;for(i=0;i<a;i++)j(Math.sin(2*k*i/a)*b,Math.cos(2*k*i/a)*b,0);for(i=0;i<a;i++)j(Math.sin(2*k*i/a)*e,Math.cos(2*k*i/a)*e,d);for(i=0;i<a;i++)c.faces.push(new THREE.Face4(i,i+a,a+(i+1)%a,(i+1)%a));if(e!=0){j(0,0,-g);for(i=a;i<a+a/2;i++)c.faces.push(new THREE.Face4(2*a,(2*i-2*a)%a,(2*i-2*a+1)%a,(2*i-2*a+2)%a))}if(b!=0){j(0,0,d+g);for(i=a+a/2;i<
2*a;i++)c.faces.push(new THREE.Face4((2*i-2*a+2)%a+a,(2*i-2*a+1)%a+a,(2*i-2*a)%a+a,2*a+1))}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cylinder.prototype=new THREE.Geometry;Cylinder.prototype.constructor=Cylinder;
var Plane=function(a,b,e,d){THREE.Geometry.call(this);var g,j=a/2,c=b/2;e=e||1;d=d||1;var k=e+1,i=d+1;a=a/e;var l=b/d;for(g=0;g<i;g++)for(b=0;b<k;b++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(b*a-j,-(g*l-c),0)));for(g=0;g<d;g++)for(b=0;b<e;b++){this.faces.push(new THREE.Face4(b+k*g,b+k*(g+1),b+1+k*(g+1),b+1+k*g));this.uvs.push([new THREE.UV(b/e,g/d),new THREE.UV(b/e,(g+1)/d),new THREE.UV((b+1)/e,(g+1)/d),new THREE.UV((b+1)/e,g/d)])}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};
Plane.prototype=new THREE.Geometry;Plane.prototype.constructor=Plane;
var Sphere=function(a,b,e){THREE.Geometry.call(this);var d,g=Math.PI,j=Math.max(3,b||8),c=Math.max(2,e||6);b=[];for(e=0;e<c+1;e++){d=e/c;var k=a*Math.cos(d*g),i=a*Math.sin(d*g),l=[],u=0;for(d=0;d<j;d++){var C=2*d/j,q=i*Math.sin(C*g);C=i*Math.cos(C*g);(e==0||e==c)&&d>0||(u=this.vertices.push(new THREE.Vertex(new THREE.Vector3(C,k,q)))-1);l.push(u)}b.push(l)}var v,z,B;g=b.length;for(e=0;e<g;e++){j=b[e].length;if(e>0)for(d=0;d<j;d++){l=d==j-1;c=b[e][l?0:d+1];k=b[e][l?j-1:d];i=b[e-1][l?j-1:d];l=b[e-1][l?
0:d+1];q=e/(g-1);v=(e-1)/(g-1);z=(d+1)/j;C=d/j;u=new THREE.UV(1-z,q);q=new THREE.UV(1-C,q);C=new THREE.UV(1-C,v);var J=new THREE.UV(1-z,v);if(e<b.length-1){v=this.vertices[c].position.clone();z=this.vertices[k].position.clone();B=this.vertices[i].position.clone();v.normalize();z.normalize();B.normalize();this.faces.push(new THREE.Face3(c,k,i,[new THREE.Vector3(v.x,v.y,v.z),new THREE.Vector3(z.x,z.y,z.z),new THREE.Vector3(B.x,B.y,B.z)]));this.uvs.push([u,q,C])}if(e>1){v=this.vertices[c].position.clone();
z=this.vertices[i].position.clone();B=this.vertices[l].position.clone();v.normalize();z.normalize();B.normalize();this.faces.push(new THREE.Face3(c,i,l,[new THREE.Vector3(v.x,v.y,v.z),new THREE.Vector3(z.x,z.y,z.z),new THREE.Vector3(B.x,B.y,B.z)]));this.uvs.push([u,C,J])}}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial();this.boundingSphere={radius:a}};Sphere.prototype=new THREE.Geometry;Sphere.prototype.constructor=Sphere;
THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?this.addStatusElement():null};
THREE.Loader.prototype={addStatusElement:function(){var a=document.createElement("div");a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="#b00";a.style.color="#fff";a.style.width="140px";a.style.padding="0.25em 0.25em 0.25em 0.5em";a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ";b+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1E3).toFixed(2)+" KB";this.statusDomElement.innerHTML=
b},loadAsciiOld:function(a,b){var e=document.createElement("script");e.type="text/javascript";e.onload=b;e.src=a;document.getElementsByTagName("head")[0].appendChild(e)},loadAscii:function(a){var b=a.model,e=a.callback,d=a.texture_path?a.texture_path:THREE.Loader.prototype.extractUrlbase(b);a=(new Date).getTime();b=new Worker(b);b.onmessage=function(g){THREE.Loader.prototype.createModel(g.data,e,d)};b.postMessage(a)},loadBinary:function(a){var b=a.model,e=a.callback,d=a.texture_path?a.texture_path:
THREE.Loader.prototype.extractUrlbase(b),g=a.bin_path?a.bin_path:THREE.Loader.prototype.extractUrlbase(b);a=(new Date).getTime();b=new Worker(b);var j=this.showProgress?THREE.Loader.prototype.updateProgress:null;b.onmessage=function(c){THREE.Loader.prototype.loadAjaxBuffers(c.data.buffers,c.data.materials,e,g,d,j)};b.onerror=function(c){alert("worker.onerror: "+c.message+"\n"+c.data);c.preventDefault()};b.postMessage(a)},loadAjaxBuffers:function(a,b,e,d,g,j){var c=new XMLHttpRequest,k=d+"/"+a,i=0;
c.onreadystatechange=function(){if(c.readyState==4)c.status==200||c.status==0?THREE.Loader.prototype.createBinModel(c.responseText,e,g,b):alert("Couldn't load ["+k+"] ["+c.status+"]");else if(c.readyState==3){if(j){if(i==0)i=c.getResponseHeader("Content-Length");j({total:i,loaded:c.responseText.length})}}else if(c.readyState==2)i=c.getResponseHeader("Content-Length")};c.open("GET",k,true);c.overrideMimeType("text/plain; charset=x-user-defined");c.setRequestHeader("Content-Type","text/plain");c.send(null)},
createBinModel:function(a,b,e,d){var g=function(j){function c(n,m){var x=u(n,m),H=u(n,m+1),U=u(n,m+2),ba=u(n,m+3),fa=(ba<<1&255|U>>7)-127;x=(U&127)<<16|H<<8|x;if(x==0&&fa==-127)return 0;return(1-2*(ba>>7))*(1+x*Math.pow(2,-23))*Math.pow(2,fa)}function k(n,m){var x=u(n,m),H=u(n,m+1),U=u(n,m+2);return(u(n,m+3)<<24)+(U<<16)+(H<<8)+x}function i(n,m){var x=u(n,m);return(u(n,m+1)<<8)+x}function l(n,m){var x=u(n,m);return x>127?x-256:x}function u(n,m){return n.charCodeAt(m)&255}function C(n){var m,x,H;m=
k(a,n);x=k(a,n+y);H=k(a,n+o);n=i(a,n+r);THREE.Loader.prototype.f3(s,m,x,H,n)}function q(n){var m,x,H,U,ba,fa;m=k(a,n);x=k(a,n+y);H=k(a,n+o);U=i(a,n+r);ba=k(a,n+E);fa=k(a,n+w);n=k(a,n+F);THREE.Loader.prototype.f3n(s,t,m,x,H,U,ba,fa,n)}function v(n){var m,x,H,U;m=k(a,n);x=k(a,n+D);H=k(a,n+A);U=k(a,n+K);n=i(a,n+Y);THREE.Loader.prototype.f4(s,m,x,H,U,n)}function z(n){var m,x,H,U,ba,fa,xa,$;m=k(a,n);x=k(a,n+D);H=k(a,n+A);U=k(a,n+K);ba=i(a,n+Y);fa=k(a,n+L);xa=k(a,n+S);$=k(a,n+V);n=k(a,n+M);THREE.Loader.prototype.f4n(s,
t,m,x,H,U,ba,fa,xa,$,n)}function B(n){var m,x;m=k(a,n);x=k(a,n+P);n=k(a,n+T);THREE.Loader.prototype.uv3(s,p[m*2],p[m*2+1],p[x*2],p[x*2+1],p[n*2],p[n*2+1])}function J(n){var m,x,H;m=k(a,n);x=k(a,n+O);H=k(a,n+N);n=k(a,n+X);THREE.Loader.prototype.uv4(s,p[m*2],p[m*2+1],p[x*2],p[x*2+1],p[H*2],p[H*2+1],p[n*2],p[n*2+1])}var s=this,h=0,f,t=[],p=[],y,o,r,E,w,F,D,A,K,Y,L,S,V,M,P,T,O,N,X;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(s,d,j);f={signature:a.substr(h,8),header_bytes:u(a,h+8),vertex_coordinate_bytes:u(a,
h+9),normal_coordinate_bytes:u(a,h+10),uv_coordinate_bytes:u(a,h+11),vertex_index_bytes:u(a,h+12),normal_index_bytes:u(a,h+13),uv_index_bytes:u(a,h+14),material_index_bytes:u(a,h+15),nvertices:k(a,h+16),nnormals:k(a,h+16+4),nuvs:k(a,h+16+8),ntri_flat:k(a,h+16+12),ntri_smooth:k(a,h+16+16),ntri_flat_uv:k(a,h+16+20),ntri_smooth_uv:k(a,h+16+24),nquad_flat:k(a,h+16+28),nquad_smooth:k(a,h+16+32),nquad_flat_uv:k(a,h+16+36),nquad_smooth_uv:k(a,h+16+40)};h+=f.header_bytes;y=f.vertex_index_bytes;o=f.vertex_index_bytes*
2;r=f.vertex_index_bytes*3;E=f.vertex_index_bytes*3+f.material_index_bytes;w=f.vertex_index_bytes*3+f.material_index_bytes+f.normal_index_bytes;F=f.vertex_index_bytes*3+f.material_index_bytes+f.normal_index_bytes*2;D=f.vertex_index_bytes;A=f.vertex_index_bytes*2;K=f.vertex_index_bytes*3;Y=f.vertex_index_bytes*4;L=f.vertex_index_bytes*4+f.material_index_bytes;S=f.vertex_index_bytes*4+f.material_index_bytes+f.normal_index_bytes;V=f.vertex_index_bytes*4+f.material_index_bytes+f.normal_index_bytes*2;
M=f.vertex_index_bytes*4+f.material_index_bytes+f.normal_index_bytes*3;P=f.uv_index_bytes;T=f.uv_index_bytes*2;O=f.uv_index_bytes;N=f.uv_index_bytes*2;X=f.uv_index_bytes*3;h+=function(n){var m,x,H,U=f.vertex_coordinate_bytes*3,ba=n+f.nvertices*U;for(n=n;n<ba;n+=U){m=c(a,n);x=c(a,n+f.vertex_coordinate_bytes);H=c(a,n+f.vertex_coordinate_bytes*2);THREE.Loader.prototype.v(s,m,x,H)}return f.nvertices*U}(h);h+=function(n){var m,x,H,U=f.normal_coordinate_bytes*3,ba=n+f.nnormals*U;for(n=n;n<ba;n+=U){m=l(a,
n);x=l(a,n+f.normal_coordinate_bytes);H=l(a,n+f.normal_coordinate_bytes*2);t.push(m/127,x/127,H/127)}return f.nnormals*U}(h);h+=function(n){var m,x,H=f.uv_coordinate_bytes*2,U=n+f.nuvs*H;for(n=n;n<U;n+=H){m=c(a,n);x=c(a,n+f.uv_coordinate_bytes);p.push(m,x)}return f.nuvs*H}(h);h+=function(n){var m,x=f.vertex_index_bytes*3+f.material_index_bytes,H=n+f.ntri_flat*x;for(m=n;m<H;m+=x)C(m);return H-n}(h);h+=function(n){var m,x=f.vertex_index_bytes*3+f.material_index_bytes+f.normal_index_bytes*3,H=n+f.ntri_smooth*
x;for(m=n;m<H;m+=x)q(m);return H-n}(h);h+=function(n){var m,x=f.vertex_index_bytes*3+f.material_index_bytes,H=x+f.uv_index_bytes*3,U=n+f.ntri_flat_uv*H;for(m=n;m<U;m+=H){C(m);B(m+x)}return U-n}(h);h+=function(n){var m,x=f.vertex_index_bytes*3+f.material_index_bytes+f.normal_index_bytes*3,H=x+f.uv_index_bytes*3,U=n+f.ntri_smooth_uv*H;for(m=n;m<U;m+=H){q(m);B(m+x)}return U-n}(h);h+=function(n){var m,x=f.vertex_index_bytes*4+f.material_index_bytes,H=n+f.nquad_flat*x;for(m=n;m<H;m+=x)v(m);return H-n}(h);
h+=function(n){var m,x=f.vertex_index_bytes*4+f.material_index_bytes+f.normal_index_bytes*4,H=n+f.nquad_smooth*x;for(m=n;m<H;m+=x)z(m);return H-n}(h);h+=function(n){var m,x=f.vertex_index_bytes*4+f.material_index_bytes,H=x+f.uv_index_bytes*4,U=n+f.nquad_flat_uv*H;for(m=n;m<U;m+=H){v(m);J(m+x)}return U-n}(h);h+=function(n){var m,x=f.vertex_index_bytes*4+f.material_index_bytes+f.normal_index_bytes*4,H=x+f.uv_index_bytes*4,U=n+f.nquad_smooth_uv*H;for(m=n;m<U;m+=H){z(m);J(m+x)}return U-n}(h);this.computeCentroids();
this.computeFaceNormals();this.sortFacesByMaterial()};g.prototype=new THREE.Geometry;g.prototype.constructor=g;b(new g(e))},createModel:function(a,b,e){var d=function(g){var j=this;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(j,a.materials,g);(function(){var c,k,i,l,u;c=0;for(k=a.vertices.length;c<k;c+=3){i=a.vertices[c];l=a.vertices[c+1];u=a.vertices[c+2];THREE.Loader.prototype.v(j,i,l,u)}})();(function(){function c(z,B){THREE.Loader.prototype.f3(j,z[B],z[B+1],z[B+2],z[B+3])}function k(z,
B){THREE.Loader.prototype.f3n(j,a.normals,z[B],z[B+1],z[B+2],z[B+3],z[B+4],z[B+5],z[B+6])}function i(z,B){THREE.Loader.prototype.f4(j,z[B],z[B+1],z[B+2],z[B+3],z[B+4])}function l(z,B){THREE.Loader.prototype.f4n(j,a.normals,z[B],z[B+1],z[B+2],z[B+3],z[B+4],z[B+5],z[B+6],z[B+7],z[B+8])}function u(z,B){var J,s,h;J=z[B];s=z[B+1];h=z[B+2];THREE.Loader.prototype.uv3(j,a.uvs[J*2],a.uvs[J*2+1],a.uvs[s*2],a.uvs[s*2+1],a.uvs[h*2],a.uvs[h*2+1])}function C(z,B){var J,s,h,f;J=z[B];s=z[B+1];h=z[B+2];f=z[B+3];THREE.Loader.prototype.uv4(j,
a.uvs[J*2],a.uvs[J*2+1],a.uvs[s*2],a.uvs[s*2+1],a.uvs[h*2],a.uvs[h*2+1],a.uvs[f*2],a.uvs[f*2+1])}var q,v;q=0;for(v=a.triangles.length;q<v;q+=4)c(a.triangles,q);q=0;for(v=a.triangles_uv.length;q<v;q+=7){c(a.triangles_uv,q);u(a.triangles_uv,q+4)}q=0;for(v=a.triangles_n.length;q<v;q+=7)k(a.triangles_n,q);q=0;for(v=a.triangles_n_uv.length;q<v;q+=10){k(a.triangles_n_uv,q);u(a.triangles_n_uv,q+7)}q=0;for(v=a.quads.length;q<v;q+=5)i(a.quads,q);q=0;for(v=a.quads_uv.length;q<v;q+=9){i(a.quads_uv,q);C(a.quads_uv,
q+5)}q=0;for(v=a.quads_n.length;q<v;q+=9)l(a.quads_n,q);q=0;for(v=a.quads_n_uv.length;q<v;q+=13){l(a.quads_n_uv,q);C(a.quads_n_uv,q+9)}})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};d.prototype=new THREE.Geometry;d.prototype.constructor=d;b(new d(e))},v:function(a,b,e,d){a.vertices.push(new THREE.Vertex(new THREE.Vector3(b,e,d)))},f3:function(a,b,e,d,g){a.faces.push(new THREE.Face3(b,e,d,null,a.materials[g]))},f4:function(a,b,e,d,g,j){a.faces.push(new THREE.Face4(b,
e,d,g,null,a.materials[j]))},f3n:function(a,b,e,d,g,j,c,k,i){j=a.materials[j];var l=b[k*3],u=b[k*3+1];k=b[k*3+2];var C=b[i*3],q=b[i*3+1];i=b[i*3+2];a.faces.push(new THREE.Face3(e,d,g,[new THREE.Vector3(b[c*3],b[c*3+1],b[c*3+2]),new THREE.Vector3(l,u,k),new THREE.Vector3(C,q,i)],j))},f4n:function(a,b,e,d,g,j,c,k,i,l,u){c=a.materials[c];var C=b[i*3],q=b[i*3+1];i=b[i*3+2];var v=b[l*3],z=b[l*3+1];l=b[l*3+2];var B=b[u*3],J=b[u*3+1];u=b[u*3+2];a.faces.push(new THREE.Face4(e,d,g,j,[new THREE.Vector3(b[k*
3],b[k*3+1],b[k*3+2]),new THREE.Vector3(C,q,i),new THREE.Vector3(v,z,l),new THREE.Vector3(B,J,u)],c))},uv3:function(a,b,e,d,g,j,c){var k=[];k.push(new THREE.UV(b,e));k.push(new THREE.UV(d,g));k.push(new THREE.UV(j,c));a.uvs.push(k)},uv4:function(a,b,e,d,g,j,c,k,i){var l=[];l.push(new THREE.UV(b,e));l.push(new THREE.UV(d,g));l.push(new THREE.UV(j,c));l.push(new THREE.UV(k,i));a.uvs.push(l)},init_materials:function(a,b,e){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=[THREE.Loader.prototype.createMaterial(b[d],
e)]},createMaterial:function(a,b){function e(j){j=Math.log(j)/Math.LN2;return Math.floor(j)==j}var d,g;if(a.map_diffuse&&b){g=document.createElement("canvas");d=new THREE.MeshLambertMaterial({map:new THREE.Texture(g)});g=new Image;g.onload=function(){if(!e(this.width)||!e(this.height)){var j=Math.pow(2,Math.round(Math.log(this.width)/Math.LN2)),c=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));d.map.image.width=j;d.map.image.height=c;d.map.image.getContext("2d").drawImage(this,0,0,j,c)}else d.map.image=
this;d.map.image.loaded=1};g.src=b+"/"+a.map_diffuse}else if(a.col_diffuse){g=(a.col_diffuse[0]*255<<16)+(a.col_diffuse[1]*255<<8)+a.col_diffuse[2]*255;d=new THREE.MeshLambertMaterial({color:g,opacity:a.transparency})}else d=a.a_dbg_color?new THREE.MeshLambertMaterial({color:a.a_dbg_color}):new THREE.MeshLambertMaterial({color:15658734});return d},extractUrlbase:function(a){a=a.split("/");a.pop();return a.join("/")}};
