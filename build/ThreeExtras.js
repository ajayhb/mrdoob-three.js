// ThreeExtras.js r32 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHSV:function(a,b,c){var e,h,f,j,l,k;if(c==0)e=h=f=0;else{j=Math.floor(a*6);l=a*6-j;a=c*(1-b);k=c*(1-b*l);b=c*(1-b*(1-l));switch(j){case 1:e=k;h=c;f=a;break;case 2:e=a;h=c;f=b;break;case 3:e=a;h=k;f=c;break;case 4:e=b;h=a;f=c;break;case 5:e=c;h=a;f=k;break;case 6:case 0:e=c;h=b;f=a}}this.r=e;this.g=h;this.b=f;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},
setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+
this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,e=this.z;this.x=c*a.z-e*a.y;this.y=e*a.x-b*a.z;this.z=b*a.y-c*a.x;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=
a.z;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var b=this.x-a.x,c=this.y-a.y;a=this.z-a.z;return Math.sqrt(b*b+c*c+a*a)},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;a=this.z-a.z;return b*b+c*c+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=
-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,b,c,e){this.x=a||0;this.y=b||0;this.z=c||0;this.w=e||1};
THREE.Vector4.prototype={set:function(a,b,c,e){this.x=a;this.y=b;this.z=c;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,b){this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var b,c,e=a.objects,h=[];a=0;for(b=e.length;a<b;a++){c=e[a];if(c instanceof THREE.Mesh)h=h.concat(this.intersectObject(c))}h.sort(function(f,j){return f.distance-j.distance});return h},intersectObject:function(a){function b(E,w,F,u){u=u.clone().subSelf(w);F=F.clone().subSelf(w);var I=E.clone().subSelf(w);E=u.dot(u);w=u.dot(F);u=u.dot(I);var Q=F.dot(F);F=F.dot(I);I=1/(E*Q-w*w);Q=(Q*u-w*F)*I;E=(E*F-w*u)*I;return Q>0&&E>0&&Q+E<1}var c,e,h,f,j,l,k,m,p,y,
t,o=a.geometry,d=o.vertices,A=[];c=0;for(e=o.faces.length;c<e;c++){h=o.faces[c];y=this.origin.clone();t=this.direction.clone();f=a.matrix.multiplyVector3(d[h.a].position.clone());j=a.matrix.multiplyVector3(d[h.b].position.clone());l=a.matrix.multiplyVector3(d[h.c].position.clone());k=h instanceof THREE.Face4?a.matrix.multiplyVector3(d[h.d].position.clone()):null;m=a.rotationMatrix.multiplyVector3(h.normal.clone());p=t.dot(m);if(p<0){m=m.dot((new THREE.Vector3).sub(f,y))/p;y=y.addSelf(t.multiplyScalar(m));
if(h instanceof THREE.Face3){if(b(y,f,j,l)){h={distance:this.origin.distanceTo(y),point:y,face:h,object:a};A.push(h)}}else if(h instanceof THREE.Face4)if(b(y,f,j,k)||b(y,j,l,k)){h={distance:this.origin.distanceTo(y),point:y,face:h,object:a};A.push(h)}}}return A}};
THREE.Rectangle=function(){function a(){f=e-b;j=h-c}var b,c,e,h,f,j,l=true;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return f};this.getHeight=function(){return j};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return e};this.getBottom=function(){return h};this.set=function(k,m,p,y){l=false;b=k;c=m;e=p;h=y;a()};this.addPoint=function(k,m){if(l){l=false;b=k;c=m;e=k;h=m}else{b=b<k?b:k;c=c<m?c:m;e=e>k?e:k;h=h>m?
h:m}a()};this.add3Points=function(k,m,p,y,t,o){if(l){l=false;b=k<p?k<t?k:t:p<t?p:t;c=m<y?m<o?m:o:y<o?y:o;e=k>p?k>t?k:t:p>t?p:t;h=m>y?m>o?m:o:y>o?y:o}else{b=k<p?k<t?k<b?k:b:t<b?t:b:p<t?p<b?p:b:t<b?t:b;c=m<y?m<o?m<c?m:c:o<c?o:c:y<o?y<c?y:c:o<c?o:c;e=k>p?k>t?k>e?k:e:t>e?t:e:p>t?p>e?p:e:t>e?t:e;h=m>y?m>o?m>h?m:h:o>h?o:h:y>o?y>h?y:h:o>h?o:h}a()};this.addRectangle=function(k){if(l){l=false;b=k.getLeft();c=k.getTop();e=k.getRight();h=k.getBottom()}else{b=b<k.getLeft()?b:k.getLeft();c=c<k.getTop()?c:k.getTop();
e=e>k.getRight()?e:k.getRight();h=h>k.getBottom()?h:k.getBottom()}a()};this.inflate=function(k){b-=k;c-=k;e+=k;h+=k;a()};this.minSelf=function(k){b=b>k.getLeft()?b:k.getLeft();c=c>k.getTop()?c:k.getTop();e=e<k.getRight()?e:k.getRight();h=h<k.getBottom()?h:k.getBottom();a()};this.instersects=function(k){return Math.min(e,k.getRight())-Math.max(b,k.getLeft())>=0&&Math.min(h,k.getBottom())-Math.max(c,k.getTop())>=0};this.empty=function(){l=true;h=e=c=b=0;a()};this.isEmpty=function(){return l};this.toString=
function(){return"THREE.Rectangle ( left: "+b+", right: "+e+", top: "+c+", bottom: "+h+", width: "+f+", height: "+j+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a,b=this.m;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};
THREE.Matrix4=function(a,b,c,e,h,f,j,l,k,m,p,y,t,o,d,A){this.n11=a||1;this.n12=b||0;this.n13=c||0;this.n14=e||0;this.n21=h||0;this.n22=f||1;this.n23=j||0;this.n24=l||0;this.n31=k||0;this.n32=m||0;this.n33=p||1;this.n34=y||0;this.n41=t||0;this.n42=o||0;this.n43=d||0;this.n44=A||1;this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,b,c,e,h,f,j,l,k,m,p,y,t,o,d,A){this.n11=a;this.n12=b;this.n13=c;this.n14=e;this.n21=h;this.n22=f;this.n23=j;this.n24=l;this.n31=k;this.n32=m;this.n33=p;this.n34=y;this.n41=t;this.n42=o;this.n43=d;this.n44=A;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,b,c){var e=THREE.Matrix4.__tmpVec1,h=THREE.Matrix4.__tmpVec2,f=THREE.Matrix4.__tmpVec3;f.sub(a,b).normalize();e.cross(c,f).normalize();h.cross(f,e).normalize();this.n11=e.x;this.n12=e.y;this.n13=e.z;this.n14=-e.dot(a);this.n21=h.x;this.n22=h.y;this.n23=h.z;this.n24=-h.dot(a);
this.n31=f.x;this.n32=f.y;this.n33=f.z;this.n34=-f.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var b=a.x,c=a.y,e=a.z,h=1/(this.n41*b+this.n42*c+this.n43*e+this.n44);a.x=(this.n11*b+this.n12*c+this.n13*e+this.n14)*h;a.y=(this.n21*b+this.n22*c+this.n23*e+this.n24)*h;a.z=(this.n31*b+this.n32*c+this.n33*e+this.n34)*h;return a},multiplyVector4:function(a){var b=a.x,c=a.y,e=a.z,h=a.w;a.x=this.n11*b+this.n12*c+this.n13*e+this.n14*h;a.y=this.n21*b+this.n22*c+this.n23*
e+this.n24*h;a.z=this.n31*b+this.n32*c+this.n33*e+this.n34*h;a.w=this.n41*b+this.n42*c+this.n43*e+this.n44*h;return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},multiply:function(a,b){var c=a.n11,e=a.n12,h=a.n13,f=a.n14,j=a.n21,l=a.n22,k=a.n23,m=a.n24,p=a.n31,
y=a.n32,t=a.n33,o=a.n34,d=a.n41,A=a.n42,E=a.n43,w=a.n44,F=b.n11,u=b.n12,I=b.n13,Q=b.n14,$=b.n21,N=b.n22,K=b.n23,W=b.n24,R=b.n31,X=b.n32,g=b.n33,n=b.n34,v=b.n41,x=b.n42,q=b.n43,z=b.n44;this.n11=c*F+e*$+h*R+f*v;this.n12=c*u+e*N+h*X+f*x;this.n13=c*I+e*K+h*g+f*q;this.n14=c*Q+e*W+h*n+f*z;this.n21=j*F+l*$+k*R+m*v;this.n22=j*u+l*N+k*X+m*x;this.n23=j*I+l*K+k*g+m*q;this.n24=j*Q+l*W+k*n+m*z;this.n31=p*F+y*$+t*R+o*v;this.n32=p*u+y*N+t*X+o*x;this.n33=p*I+y*K+t*g+o*q;this.n34=p*Q+y*W+t*n+o*z;this.n41=d*F+A*$+
E*R+w*v;this.n42=d*u+A*N+E*X+w*x;this.n43=d*I+A*K+E*g+w*q;this.n44=d*Q+A*W+E*n+w*z;return this},multiplyToArray:function(a,b,c){var e=a.n11,h=a.n12,f=a.n13,j=a.n14,l=a.n21,k=a.n22,m=a.n23,p=a.n24,y=a.n31,t=a.n32,o=a.n33,d=a.n34,A=a.n41,E=a.n42,w=a.n43;a=a.n44;var F=b.n11,u=b.n12,I=b.n13,Q=b.n14,$=b.n21,N=b.n22,K=b.n23,W=b.n24,R=b.n31,X=b.n32,g=b.n33,n=b.n34,v=b.n41,x=b.n42,q=b.n43;b=b.n44;this.n11=e*F+h*$+f*R+j*v;this.n12=e*u+h*N+f*X+j*x;this.n13=e*I+h*K+f*g+j*q;this.n14=e*Q+h*W+f*n+j*b;this.n21=
l*F+k*$+m*R+p*v;this.n22=l*u+k*N+m*X+p*x;this.n23=l*I+k*K+m*g+p*q;this.n24=l*Q+k*W+m*n+p*b;this.n31=y*F+t*$+o*R+d*v;this.n32=y*u+t*N+o*X+d*x;this.n33=y*I+t*K+o*g+d*q;this.n34=y*Q+t*W+o*n+d*b;this.n41=A*F+E*$+w*R+a*v;this.n42=A*u+E*N+w*X+a*x;this.n43=A*I+E*K+w*g+a*q;this.n44=A*Q+E*W+w*n+a*b;c[0]=this.n11;c[1]=this.n21;c[2]=this.n31;c[3]=this.n41;c[4]=this.n12;c[5]=this.n22;c[6]=this.n32;c[7]=this.n42;c[8]=this.n13;c[9]=this.n23;c[10]=this.n33;c[11]=this.n43;c[12]=this.n14;c[13]=this.n24;c[14]=this.n34;
c[15]=this.n44;return this},multiplySelf:function(a){var b=this.n11,c=this.n12,e=this.n13,h=this.n14,f=this.n21,j=this.n22,l=this.n23,k=this.n24,m=this.n31,p=this.n32,y=this.n33,t=this.n34,o=this.n41,d=this.n42,A=this.n43,E=this.n44,w=a.n11,F=a.n21,u=a.n31,I=a.n41,Q=a.n12,$=a.n22,N=a.n32,K=a.n42,W=a.n13,R=a.n23,X=a.n33,g=a.n43,n=a.n14,v=a.n24,x=a.n34;a=a.n44;this.n11=b*w+c*F+e*u+h*I;this.n12=b*Q+c*$+e*N+h*K;this.n13=b*W+c*R+e*X+h*g;this.n14=b*n+c*v+e*x+h*a;this.n21=f*w+j*F+l*u+k*I;this.n22=f*Q+j*
$+l*N+k*K;this.n23=f*W+j*R+l*X+k*g;this.n24=f*n+j*v+l*x+k*a;this.n31=m*w+p*F+y*u+t*I;this.n32=m*Q+p*$+y*N+t*K;this.n33=m*W+p*R+y*X+t*g;this.n34=m*n+p*v+y*x+t*a;this.n41=o*w+d*F+A*u+E*I;this.n42=o*Q+d*$+A*N+E*K;this.n43=o*W+d*R+A*X+E*g;this.n44=o*n+d*v+A*x+E*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},
determinant:function(){var a=this.n11,b=this.n12,c=this.n13,e=this.n14,h=this.n21,f=this.n22,j=this.n23,l=this.n24,k=this.n31,m=this.n32,p=this.n33,y=this.n34,t=this.n41,o=this.n42,d=this.n43,A=this.n44;return e*j*m*t-c*l*m*t-e*f*p*t+b*l*p*t+c*f*y*t-b*j*y*t-e*j*k*o+c*l*k*o+e*h*p*o-a*l*p*o-c*h*y*o+a*j*y*o+e*f*k*d-b*l*k*d-e*h*m*d+a*l*m*d+b*h*y*d-a*f*y*d-c*f*k*A+b*j*k*A+c*h*m*A-a*j*m*A-b*h*p*A+a*f*p*A},transpose:function(){function a(b,c,e){var h=b[c];b[c]=b[e];b[e]=h}a(this,"n21","n12");a(this,"n31",
"n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){var a=this.flat;a[0]=this.n11;a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=
this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},flattenToArray:function(a){a[0]=this.n11;a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},setTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,
1);return this},setScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},setRotX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},setRotY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},setRotZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},setRotAxis:function(a,b){var c=Math.cos(b),e=Math.sin(b),h=1-c,f=a.x,j=a.y,l=a.z,
k=h*f,m=h*j;this.set(k*f+c,k*j-e*l,k*l+e*j,0,k*j+e*l,m*j+c,m*l-e*f,0,k*l-e*j,m*l+e*f,h*l*l+c,0,0,0,0,1);return this},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,b,c){var e=new THREE.Matrix4;e.setTranslation(a,b,c);return e};
THREE.Matrix4.scaleMatrix=function(a,b,c){var e=new THREE.Matrix4;e.setScale(a,b,c);return e};THREE.Matrix4.rotationXMatrix=function(a){var b=new THREE.Matrix4;b.setRotX(a);return b};THREE.Matrix4.rotationYMatrix=function(a){var b=new THREE.Matrix4;b.setRotY(a);return b};THREE.Matrix4.rotationZMatrix=function(a){var b=new THREE.Matrix4;b.setRotZ(a);return b};THREE.Matrix4.rotationAxisAngleMatrix=function(a,b){var c=new THREE.Matrix4;c.setRotAxis(a,b);return c};
THREE.Matrix4.makeInvert=function(a){var b=a.n11,c=a.n12,e=a.n13,h=a.n14,f=a.n21,j=a.n22,l=a.n23,k=a.n24,m=a.n31,p=a.n32,y=a.n33,t=a.n34,o=a.n41,d=a.n42,A=a.n43,E=a.n44,w=new THREE.Matrix4;w.n11=l*t*d-k*y*d+k*p*A-j*t*A-l*p*E+j*y*E;w.n12=h*y*d-e*t*d-h*p*A+c*t*A+e*p*E-c*y*E;w.n13=e*k*d-h*l*d+h*j*A-c*k*A-e*j*E+c*l*E;w.n14=h*l*p-e*k*p-h*j*y+c*k*y+e*j*t-c*l*t;w.n21=k*y*o-l*t*o-k*m*A+f*t*A+l*m*E-f*y*E;w.n22=e*t*o-h*y*o+h*m*A-b*t*A-e*m*E+b*y*E;w.n23=h*l*o-e*k*o-h*f*A+b*k*A+e*f*E-b*l*E;w.n24=e*k*m-h*l*m+
h*f*y-b*k*y-e*f*t+b*l*t;w.n31=j*t*o-k*p*o+k*m*d-f*t*d-j*m*E+f*p*E;w.n32=h*p*o-c*t*o-h*m*d+b*t*d+c*m*E-b*p*E;w.n33=e*k*o-h*j*o+h*f*d-b*k*d-c*f*E+b*j*E;w.n34=h*j*m-c*k*m-h*f*p+b*k*p+c*f*t-b*j*t;w.n41=l*p*o-j*y*o-l*m*d+f*y*d+j*m*A-f*p*A;w.n42=c*y*o-e*p*o+e*m*d-b*y*d-c*m*A+b*p*A;w.n43=e*j*o-c*l*o-e*f*d+b*l*d+c*f*A-b*j*A;w.n44=c*l*m-e*j*m+e*f*p-b*l*p-c*f*y+b*j*y;w.multiplyScalar(1/a.determinant());return w};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.m33,c=b.m,e=a.n33*a.n22-a.n32*a.n23,h=-a.n33*a.n21+a.n31*a.n23,f=a.n32*a.n21-a.n31*a.n22,j=-a.n33*a.n12+a.n32*a.n13,l=a.n33*a.n11-a.n31*a.n13,k=-a.n32*a.n11+a.n31*a.n12,m=a.n23*a.n12-a.n22*a.n13,p=-a.n23*a.n11+a.n21*a.n13,y=a.n22*a.n11-a.n21*a.n12;a=a.n11*e+a.n21*j+a.n31*m;if(a==0)throw"matrix not invertible";a=1/a;c[0]=a*e;c[1]=a*h;c[2]=a*f;c[3]=a*j;c[4]=a*l;c[5]=a*k;c[6]=a*m;c[7]=a*p;c[8]=a*y;return b};
THREE.Matrix4.makeFrustum=function(a,b,c,e,h,f){var j,l,k;j=new THREE.Matrix4;l=2*h/(b-a);k=2*h/(e-c);a=(b+a)/(b-a);c=(e+c)/(e-c);e=-(f+h)/(f-h);h=-2*f*h/(f-h);j.n11=l;j.n12=0;j.n13=a;j.n14=0;j.n21=0;j.n22=k;j.n23=c;j.n24=0;j.n31=0;j.n32=0;j.n33=e;j.n34=h;j.n41=0;j.n42=0;j.n43=-1;j.n44=0;return j};THREE.Matrix4.makePerspective=function(a,b,c,e){var h;a=c*Math.tan(a*Math.PI/360);h=-a;return THREE.Matrix4.makeFrustum(h*b,a*b,h,a,c,e)};
THREE.Matrix4.makeOrtho=function(a,b,c,e,h,f){var j,l,k,m;j=new THREE.Matrix4;l=b-a;k=c-e;m=f-h;a=(b+a)/l;c=(c+e)/k;h=(f+h)/m;j.n11=2/l;j.n12=0;j.n13=0;j.n14=-a;j.n21=0;j.n22=2/k;j.n23=0;j.n24=-c;j.n31=0;j.n32=0;j.n33=-2/m;j.n34=-h;j.n41=0;j.n42=0;j.n43=0;j.n44=1;return j};THREE.Matrix4.__tmpVec1=new THREE.Vector3;THREE.Matrix4.__tmpVec2=new THREE.Vector3;THREE.Matrix4.__tmpVec3=new THREE.Vector3;
THREE.Vertex=function(a,b){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=b||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,b,c,e,h){this.a=a;this.b=b;this.c=c;this.centroid=new THREE.Vector3;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.materials=h instanceof Array?h:[h]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,b,c,e,h,f){this.a=a;this.b=b;this.c=c;this.d=e;this.centroid=new THREE.Vector3;this.normal=h instanceof THREE.Vector3?h:new THREE.Vector3;this.vertexNormals=h instanceof Array?h:[];this.materials=f instanceof Array?f:[f]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.uvs2=[];this.colors=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++){c=this.faces[a];c.centroid.set(0,0,0);if(c instanceof THREE.Face3){c.centroid.addSelf(this.vertices[c.a].position);c.centroid.addSelf(this.vertices[c.b].position);c.centroid.addSelf(this.vertices[c.c].position);c.centroid.divideScalar(3)}else if(c instanceof THREE.Face4){c.centroid.addSelf(this.vertices[c.a].position);c.centroid.addSelf(this.vertices[c.b].position);c.centroid.addSelf(this.vertices[c.c].position);
c.centroid.addSelf(this.vertices[c.d].position);c.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var b,c,e,h,f,j,l=new THREE.Vector3,k=new THREE.Vector3;e=0;for(h=this.vertices.length;e<h;e++){f=this.vertices[e];f.normal.set(0,0,0)}e=0;for(h=this.faces.length;e<h;e++){f=this.faces[e];if(a&&f.vertexNormals.length){l.set(0,0,0);b=0;for(c=f.normal.length;b<c;b++)l.addSelf(f.vertexNormals[b]);l.divideScalar(3)}else{b=this.vertices[f.a];c=this.vertices[f.b];j=this.vertices[f.c];l.sub(j.position,
c.position);k.sub(b.position,c.position);l.crossSelf(k)}l.isZero()||l.normalize();f.normal.copy(l)}},computeVertexNormals:function(){var a,b,c,e;if(this.__tmpVertices==undefined){e=this.__tmpVertices=Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)e[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++){c=this.faces[a];if(c instanceof THREE.Face3)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(c instanceof THREE.Face4)c.vertexNormals=[new THREE.Vector3,
new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}}else{e=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)e[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++){c=this.faces[a];if(c instanceof THREE.Face3){e[c.a].addSelf(c.normal);e[c.b].addSelf(c.normal);e[c.c].addSelf(c.normal)}else if(c instanceof THREE.Face4){e[c.a].addSelf(c.normal);e[c.b].addSelf(c.normal);e[c.c].addSelf(c.normal);e[c.d].addSelf(c.normal)}}a=0;for(b=this.vertices.length;a<b;a++)e[a].normalize();a=0;for(b=this.faces.length;a<
b;a++){c=this.faces[a];if(c instanceof THREE.Face3){c.vertexNormals[0].copy(e[c.a]);c.vertexNormals[1].copy(e[c.b]);c.vertexNormals[2].copy(e[c.c])}else if(c instanceof THREE.Face4){c.vertexNormals[0].copy(e[c.a]);c.vertexNormals[1].copy(e[c.b]);c.vertexNormals[2].copy(e[c.c]);c.vertexNormals[3].copy(e[c.d])}}},computeTangents:function(){function a(n,v,x,q,z,L,C){f=n.vertices[v].position;j=n.vertices[x].position;l=n.vertices[q].position;k=h[z];m=h[L];p=h[C];y=j.x-f.x;t=l.x-f.x;o=j.y-f.y;d=l.y-f.y;
A=j.z-f.z;E=l.z-f.z;w=m.u-k.u;F=p.u-k.u;u=m.v-k.v;I=p.v-k.v;Q=1/(w*I-F*u);K.set((I*y-u*t)*Q,(I*o-u*d)*Q,(I*A-u*E)*Q);W.set((w*t-F*y)*Q,(w*d-F*o)*Q,(w*E-F*A)*Q);$[v].addSelf(K);$[x].addSelf(K);$[q].addSelf(K);N[v].addSelf(W);N[x].addSelf(W);N[q].addSelf(W)}var b,c,e,h,f,j,l,k,m,p,y,t,o,d,A,E,w,F,u,I,Q,$=[],N=[],K=new THREE.Vector3,W=new THREE.Vector3,R=new THREE.Vector3,X=new THREE.Vector3,g=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++){$[b]=new THREE.Vector3;N[b]=new THREE.Vector3}b=0;
for(c=this.faces.length;b<c;b++){e=this.faces[b];h=this.uvs[b];if(e instanceof THREE.Face3){a(this,e.a,e.b,e.c,0,1,2);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);this.vertices[e.c].normal.copy(e.vertexNormals[2])}else if(e instanceof THREE.Face4){a(this,e.a,e.b,e.c,0,1,2);a(this,e.a,e.b,e.d,0,1,3);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);this.vertices[e.c].normal.copy(e.vertexNormals[2]);
this.vertices[e.d].normal.copy(e.vertexNormals[3])}}b=0;for(c=this.vertices.length;b<c;b++){g.copy(this.vertices[b].normal);e=$[b];R.copy(e);R.subSelf(g.multiplyScalar(g.dot(e))).normalize();X.cross(this.vertices[b].normal,e);e=X.dot(N[b]);e=e<0?-1:1;this.vertices[b].tangent.set(R.x,R.y,R.z,e)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],
z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,c=this.vertices.length;b<c;b++){a=this.vertices[b];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>
this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,b=0,c=this.vertices.length;b<c;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(p){var y=[];b=0;for(c=p.length;b<c;b++)p[b]==undefined?y.push("undefined"):y.push(p[b].toString());return y.join("_")}var b,c,e,h,f,j,l,k,m={};e=0;for(h=this.faces.length;e<h;e++){f=this.faces[e];
j=f.materials;l=a(j);if(m[l]==undefined)m[l]={hash:l,counter:0};k=m[l].hash+"_"+m[l].counter;if(this.geometryChunks[k]==undefined)this.geometryChunks[k]={faces:[],materials:j,vertices:0};f=f instanceof THREE.Face3?3:4;if(this.geometryChunks[k].vertices+f>65535){m[l].counter+=1;k=m[l].hash+"_"+m[l].counter;if(this.geometryChunks[k]==undefined)this.geometryChunks[k]={faces:[],materials:j,vertices:0}}this.geometryChunks[k].faces.push(e);this.geometryChunks[k].vertices+=f}},toString:function(){return"THREE.Geometry ( vertices: "+
this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,b,c,e){this.fov=a;this.aspect=b;this.near=c;this.far=e;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.tmpVec=new THREE.Vector3;this.translateX=function(h){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(h);this.tmpVec.crossSelf(this.up);this.position.addSelf(this.tmpVec);this.target.position.addSelf(this.tmpVec)};
this.translateZ=function(h){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(h);this.position.subSelf(this.tmpVec);this.target.position.subSelf(this.tmpVec)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};
THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;
THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=b||1};THREE.PointLight.prototype=new THREE.Light;THREE.PointLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.tmpMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){var a=this.position,b=this.rotation,c=this.scale,e=this.tmpMatrix;this.matrix.setTranslation(a.x,a.y,a.z);this.rotationMatrix.setRotX(b.x);if(b.y!=0){e.setRotY(b.y);this.rotationMatrix.multiplySelf(e)}if(b.z!=0){e.setRotZ(b.z);this.rotationMatrix.multiplySelf(e)}this.matrix.multiplySelf(this.rotationMatrix);if(c.x!=0||c.y!=0||c.z!=0){e.setScale(c.x,c.y,c.z);this.matrix.multiplySelf(e)}}};THREE.Object3DCounter={value:0};
THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.sortParticles=false};THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;
THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.type=c!=undefined?c:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};
THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;THREE.BillboardBlending=3;
THREE.LineBasicMaterial=function(a){this.id=THREE.LineBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.depth_test=true;this.linewidth=1;this.linejoin=this.linecap="round";this.vertex_colors=false;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.linewidth!==undefined)this.linewidth=
a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin;if(a.vertex_colors!==undefined)this.vertex_colors=a.vertex_colors}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>vertex_colors: "+this.vertex_colors+"<br/>)"}};THREE.LineBasicMaterialCounter={value:0};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.opacity=1;this.env_map=this.light_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.depth_test=true;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";this.vertex_colors=false;if(a){a.color!==
undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.map!==undefined)this.map=a.map;if(a.light_map!==undefined)this.light_map=a.light_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==
undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin;if(a.vertex_colors!==undefined)this.vertex_colors=a.vertex_colors}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>map: "+this.map+"<br/>light_map: "+this.light_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+
"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>vertex_colors: "+this.vertex_colors+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.opacity=1;this.env_map=this.light_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.depth_test=true;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";this.vertex_colors=false;if(a){a.color!==
undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.map!==undefined)this.map=a.map;if(a.light_map!==undefined)this.light_map=a.light_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==
undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin;if(a.vertex_colors!==undefined)this.vertex_colors=a.vertex_colors}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>map: "+this.map+"<br/>light_map: "+this.light_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>wireframe: "+this.wireframe+
"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>vertex_colors: "+this.vertex_colors+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.opacity=1;this.env_map=this.light_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.depth_test=true;this.wireframe=false;this.wireframe_linewidth=
1;this.wireframe_linejoin=this.wireframe_linecap="round";this.vertex_colors=false;if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.light_map!==undefined)this.light_map=a.light_map;if(a.map!==undefined)this.map=a.map;if(a.env_map!==undefined)this.env_map=
a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=
a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin;if(a.vertex_colors!==undefined)this.vertex_colors=a.vertex_colors}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>opacity: "+this.opacity+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>depth_test: "+
this.depth_test+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>vertex_colors: "+this.vertex_colors+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.id=THREE.MeshDepthMaterialCounter.value++;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.depth_test=true;this.wireframe=false;this.wireframe_linewidth=1;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial (<br/>id: "+this.id+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>)"}};THREE.MeshDepthMaterialCounter={value:0};
THREE.MeshNormalMaterial=function(a){this.id=THREE.MeshNormalMaterialCounter.value++;this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;this.depth_test=true;this.wireframe=false;this.wireframe_linewidth=1;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial (<br/>id: "+this.id+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>)"}};THREE.MeshNormalMaterialCounter={value:0};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.depth_test=true;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";this.vertex_colors=false;if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=
a.vertex_shader;if(a.uniforms!==undefined)this.uniforms=a.uniforms;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==
undefined)this.wireframe_linejoin=a.wireframe_linejoin;if(a.vertex_colors!==undefined)this.vertex_colors=a.vertex_colors}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>vertex_colors: "+this.vertex_colors+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.id=THREE.ParticleBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.opacity=1;this.map=null;this.size=1;this.blending=THREE.NormalBlending;this.depth_test=true;this.offset=new THREE.Vector2;this.vertex_colors=false;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.map!==undefined)this.map=a.map;if(a.size!==undefined)this.size=a.size;if(a.blending!==undefined)this.blending=a.blending;
if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.vertex_colors!==undefined)this.vertex_colors=a.vertex_colors}};THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>map: "+this.map+"<br/>size: "+this.size+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>vertex_colors: "+this.vertex_colors+"<br/>)"}};THREE.ParticleBasicMaterialCounter={value:0};
THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};
THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};THREE.Texture=function(a,b,c,e,h,f){this.image=a;this.mapping=b!==undefined?b:new THREE.UVMapping;this.wrap_s=c!==undefined?c:THREE.ClampToEdgeWrapping;this.wrap_t=e!==undefined?e:THREE.ClampToEdgeWrapping;this.mag_filter=h!==undefined?h:THREE.LinearFilter;this.min_filter=f!==undefined?f:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;
THREE.RenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrap_s=c.wrap_s!==undefined?c.wrap_s:THREE.ClampToEdgeWrapping;this.wrap_t=c.wrap_t!==undefined?c.wrap_t:THREE.ClampToEdgeWrapping;this.mag_filter=c.mag_filter!==undefined?c.mag_filter:THREE.LinearFilter;this.min_filter=c.min_filter!==undefined?c.min_filter:THREE.LinearMipMapLinearFilter;this.format=c.format!==undefined?c.format:THREE.RGBFormat;this.type=c.type!==undefined?c.type:THREE.UnsignedByteType};
var Uniforms={clone:function(a){var b,c,e,h={};for(b in a){h[b]={};for(c in a[b]){e=a[b][c];h[b][c]=e instanceof THREE.Color||e instanceof THREE.Vector3||e instanceof THREE.Texture?e.clone():e}}return h},merge:function(a){var b,c,e,h={};for(b=0;b<a.length;b++){e=this.clone(a[b]);for(c in e)h[c]=e[c]}return h}};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=b||1;this.far=c||1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b||2.5E-4};
THREE.Projector=function(){function a(N,K){return K.z-N.z}function b(N,K){var W=0,R=1,X=N.z+N.w,g=K.z+K.w,n=-N.z+N.w,v=-K.z+K.w;if(X>=0&&g>=0&&n>=0&&v>=0)return true;else if(X<0&&g<0||n<0&&v<0)return false;else{if(X<0)W=Math.max(W,X/(X-g));else if(g<0)R=Math.min(R,X/(X-g));if(n<0)W=Math.max(W,n/(n-v));else if(v<0)R=Math.min(R,n/(n-v));if(R<W)return false;else{N.lerpSelf(K,W);K.lerpSelf(N,1-R);return true}}}var c,e,h=[],f,j,l,k=[],m,p,y=[],t,o,d=[],A=new THREE.Vector4,E=new THREE.Vector4,w=new THREE.Matrix4,
F=new THREE.Matrix4,u=[],I=new THREE.Vector4,Q=new THREE.Vector4,$;this.projectObjects=function(N,K,W){var R=[],X,g;e=0;w.multiply(K.projectionMatrix,K.matrix);u[0]=new THREE.Vector4(w.n41-w.n11,w.n42-w.n12,w.n43-w.n13,w.n44-w.n14);u[1]=new THREE.Vector4(w.n41+w.n11,w.n42+w.n12,w.n43+w.n13,w.n44+w.n14);u[2]=new THREE.Vector4(w.n41+w.n21,w.n42+w.n22,w.n43+w.n23,w.n44+w.n24);u[3]=new THREE.Vector4(w.n41-w.n21,w.n42-w.n22,w.n43-w.n23,w.n44-w.n24);u[4]=new THREE.Vector4(w.n41-w.n31,w.n42-w.n32,w.n43-
w.n33,w.n44-w.n34);u[5]=new THREE.Vector4(w.n41+w.n31,w.n42+w.n32,w.n43+w.n33,w.n44+w.n34);K=0;for(X=u.length;K<X;K++){g=u[K];g.divideScalar(Math.sqrt(g.x*g.x+g.y*g.y+g.z*g.z))}X=N.objects;N=0;for(K=X.length;N<K;N++){g=X[N];var n;if(!(n=!g.visible)){if(n=g instanceof THREE.Mesh){a:{n=void 0;for(var v=g.position,x=-g.geometry.boundingSphere.radius*Math.max(g.scale.x,Math.max(g.scale.y,g.scale.z)),q=0;q<6;q++){n=u[q].x*v.x+u[q].y*v.y+u[q].z*v.z+u[q].w;if(n<=x){n=false;break a}}n=true}n=!n}n=n}if(!n){c=
h[e]=h[e]||new THREE.RenderableObject;A.copy(g.position);w.multiplyVector3(A);c.object=g;c.z=A.z;R.push(c);e++}}W&&R.sort(a);return R};this.projectScene=function(N,K,W){var R=[],X=K.near,g=K.far,n,v,x,q,z,L,C,D,G,H,J,Y,T,M,Z,ba;l=p=o=0;K.autoUpdateMatrix&&K.updateMatrix();w.multiply(K.projectionMatrix,K.matrix);L=this.projectObjects(N,K,true);N=0;for(n=L.length;N<n;N++){C=L[N].object;if(C.visible){C.autoUpdateMatrix&&C.updateMatrix();D=C.matrix;G=C.rotationMatrix;H=C.materials;J=C.overdraw;if(C instanceof
THREE.Mesh){Y=C.geometry;T=Y.vertices;v=0;for(x=T.length;v<x;v++){M=T[v];M.positionWorld.copy(M.position);D.multiplyVector3(M.positionWorld);q=M.positionScreen;q.copy(M.positionWorld);w.multiplyVector4(q);q.x/=q.w;q.y/=q.w;M.__visible=q.z>X&&q.z<g}Y=Y.faces;v=0;for(x=Y.length;v<x;v++){M=Y[v];if(M instanceof THREE.Face3){q=T[M.a];z=T[M.b];Z=T[M.c];if(q.__visible&&z.__visible&&Z.__visible)if(C.doubleSided||C.flipSided!=(Z.positionScreen.x-q.positionScreen.x)*(z.positionScreen.y-q.positionScreen.y)-
(Z.positionScreen.y-q.positionScreen.y)*(z.positionScreen.x-q.positionScreen.x)<0){f=k[l]=k[l]||new THREE.RenderableFace3;f.v1.positionWorld.copy(q.positionWorld);f.v2.positionWorld.copy(z.positionWorld);f.v3.positionWorld.copy(Z.positionWorld);f.v1.positionScreen.copy(q.positionScreen);f.v2.positionScreen.copy(z.positionScreen);f.v3.positionScreen.copy(Z.positionScreen);f.normalWorld.copy(M.normal);G.multiplyVector3(f.normalWorld);f.centroidWorld.copy(M.centroid);D.multiplyVector3(f.centroidWorld);
f.centroidScreen.copy(f.centroidWorld);w.multiplyVector3(f.centroidScreen);Z=M.vertexNormals;$=f.vertexNormalsWorld;q=0;for(z=Z.length;q<z;q++){ba=$[q]=$[q]||new THREE.Vector3;ba.copy(Z[q]);G.multiplyVector3(ba)}f.z=f.centroidScreen.z;f.meshMaterials=H;f.faceMaterials=M.materials;f.overdraw=J;if(C.geometry.uvs[v]){f.uvs[0]=C.geometry.uvs[v][0];f.uvs[1]=C.geometry.uvs[v][1];f.uvs[2]=C.geometry.uvs[v][2]}R.push(f);l++}}else if(M instanceof THREE.Face4){q=T[M.a];z=T[M.b];Z=T[M.c];ba=T[M.d];if(q.__visible&&
z.__visible&&Z.__visible&&ba.__visible)if(C.doubleSided||C.flipSided!=((ba.positionScreen.x-q.positionScreen.x)*(z.positionScreen.y-q.positionScreen.y)-(ba.positionScreen.y-q.positionScreen.y)*(z.positionScreen.x-q.positionScreen.x)<0||(z.positionScreen.x-Z.positionScreen.x)*(ba.positionScreen.y-Z.positionScreen.y)-(z.positionScreen.y-Z.positionScreen.y)*(ba.positionScreen.x-Z.positionScreen.x)<0)){f=k[l]=k[l]||new THREE.RenderableFace3;f.v1.positionWorld.copy(q.positionWorld);f.v2.positionWorld.copy(z.positionWorld);
f.v3.positionWorld.copy(ba.positionWorld);f.v1.positionScreen.copy(q.positionScreen);f.v2.positionScreen.copy(z.positionScreen);f.v3.positionScreen.copy(ba.positionScreen);f.normalWorld.copy(M.normal);G.multiplyVector3(f.normalWorld);f.centroidWorld.copy(M.centroid);D.multiplyVector3(f.centroidWorld);f.centroidScreen.copy(f.centroidWorld);w.multiplyVector3(f.centroidScreen);f.z=f.centroidScreen.z;f.meshMaterials=H;f.faceMaterials=M.materials;f.overdraw=J;if(C.geometry.uvs[v]){f.uvs[0]=C.geometry.uvs[v][0];
f.uvs[1]=C.geometry.uvs[v][1];f.uvs[2]=C.geometry.uvs[v][3]}R.push(f);l++;j=k[l]=k[l]||new THREE.RenderableFace3;j.v1.positionWorld.copy(z.positionWorld);j.v2.positionWorld.copy(Z.positionWorld);j.v3.positionWorld.copy(ba.positionWorld);j.v1.positionScreen.copy(z.positionScreen);j.v2.positionScreen.copy(Z.positionScreen);j.v3.positionScreen.copy(ba.positionScreen);j.normalWorld.copy(f.normalWorld);j.centroidWorld.copy(f.centroidWorld);j.centroidScreen.copy(f.centroidScreen);j.z=j.centroidScreen.z;
j.meshMaterials=H;j.faceMaterials=M.materials;j.overdraw=J;if(C.geometry.uvs[v]){j.uvs[0]=C.geometry.uvs[v][1];j.uvs[1]=C.geometry.uvs[v][2];j.uvs[2]=C.geometry.uvs[v][3]}R.push(j);l++}}}}else if(C instanceof THREE.Line){F.multiply(w,D);T=C.geometry.vertices;M=T[0];M.positionScreen.copy(M.position);F.multiplyVector4(M.positionScreen);v=1;for(x=T.length;v<x;v++){q=T[v];q.positionScreen.copy(q.position);F.multiplyVector4(q.positionScreen);z=T[v-1];I.copy(q.positionScreen);Q.copy(z.positionScreen);if(b(I,
Q)){I.multiplyScalar(1/I.w);Q.multiplyScalar(1/Q.w);m=y[p]=y[p]||new THREE.RenderableLine;m.v1.positionScreen.copy(I);m.v2.positionScreen.copy(Q);m.z=Math.max(I.z,Q.z);m.materials=C.materials;R.push(m);p++}}}else if(C instanceof THREE.Particle){E.set(C.position.x,C.position.y,C.position.z,1);w.multiplyVector4(E);E.z/=E.w;if(E.z>0&&E.z<1){t=d[o]=d[o]||new THREE.RenderableParticle;t.x=E.x/E.w;t.y=E.y/E.w;t.z=E.z;t.rotation=C.rotation.z;t.scale.x=C.scale.x*Math.abs(t.x-(E.x+K.projectionMatrix.n11)/(E.w+
K.projectionMatrix.n14));t.scale.y=C.scale.y*Math.abs(t.y-(E.y+K.projectionMatrix.n22)/(E.w+K.projectionMatrix.n24));t.materials=C.materials;R.push(t);o++}}}}W&&R.sort(a);return R};this.unprojectVector=function(N,K){var W=THREE.Matrix4.makeInvert(K.matrix);W.multiplySelf(THREE.Matrix4.makeInvert(K.projectionMatrix));W.multiplyVector3(N);return N}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,b=new THREE.Projector,c,e,h,f;this.domElement=document.createElement("div");this.setSize=function(j,l){c=j;e=l;h=c/2;f=e/2};this.render=function(j,l){var k,m,p,y,t,o,d,A;a=b.projectScene(j,l);k=0;for(m=a.length;k<m;k++){t=a[k];if(t instanceof THREE.RenderableParticle){d=t.x*h+h;A=t.y*f+f;p=0;for(y=t.material.length;p<y;p++){o=t.material[p];if(o instanceof THREE.ParticleDOMMaterial){o=o.domElement;o.style.left=d+"px";o.style.top=A+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(ga){if(t!=ga)m.globalAlpha=t=ga}function b(ga){if(o!=ga){switch(ga){case THREE.NormalBlending:m.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:m.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:m.globalCompositeOperation="darker"}o=ga}}var c=null,e=new THREE.Projector,h=document.createElement("canvas"),f,j,l,k,m=h.getContext("2d"),p=new THREE.Color(0),y=0,t=1,o=0,d=null,A=null,E=1,w,F,u,I,Q,$,N,K,W,R=new THREE.Color,
X=new THREE.Color,g=new THREE.Color,n=new THREE.Color,v=new THREE.Color,x,q,z,L,C,D,G,H,J,Y=new THREE.Rectangle,T=new THREE.Rectangle,M=new THREE.Rectangle,Z=false,ba=new THREE.Color,ha=new THREE.Color,ka=new THREE.Color,B=new THREE.Color,P=Math.PI*2,O=new THREE.Vector3,U,da,na,ia,fa,la,qa=16;U=document.createElement("canvas");U.width=U.height=2;da=U.getContext("2d");da.fillStyle="rgba(0,0,0,1)";da.fillRect(0,0,2,2);na=da.getImageData(0,0,2,2);ia=na.data;fa=document.createElement("canvas");fa.width=
fa.height=qa;la=fa.getContext("2d");la.translate(-qa/2,-qa/2);la.scale(qa,qa);qa--;this.domElement=h;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(ga,va){f=ga;j=va;l=f/2;k=j/2;h.width=f;h.height=j;Y.set(-l,-k,l,k);t=1;o=0;A=d=null;E=1};this.setClearColor=function(ga,va){p=ga;y=va;T.set(-l,-k,l,k);m.setTransform(1,0,0,-1,l,k);this.clear()};this.setClearColorHex=function(ga,va){p.setHex(ga);y=va;T.set(-l,-k,l,k);m.setTransform(1,0,0,-1,l,k);this.clear()};this.clear=function(){m.setTransform(1,
0,0,-1,l,k);if(!T.isEmpty()){T.inflate(1);T.minSelf(Y);if(p.hex==0&&y==0)m.clearRect(T.getX(),T.getY(),T.getWidth(),T.getHeight());else{b(THREE.NormalBlending);a(1);m.fillStyle="rgba("+Math.floor(p.r*255)+","+Math.floor(p.g*255)+","+Math.floor(p.b*255)+","+y+")";m.fillRect(T.getX(),T.getY(),T.getWidth(),T.getHeight())}T.empty()}};this.render=function(ga,va){function sa(S){var ea,ca,V,aa=S.lights;ha.setRGB(0,0,0);ka.setRGB(0,0,0);B.setRGB(0,0,0);S=0;for(ea=aa.length;S<ea;S++){ca=aa[S];V=ca.color;if(ca instanceof
THREE.AmbientLight){ha.r+=V.r;ha.g+=V.g;ha.b+=V.b}else if(ca instanceof THREE.DirectionalLight){ka.r+=V.r;ka.g+=V.g;ka.b+=V.b}else if(ca instanceof THREE.PointLight){B.r+=V.r;B.g+=V.g;B.b+=V.b}}}function Ca(S,ea,ca,V){var aa,ja,oa,ra,ta=S.lights;S=0;for(aa=ta.length;S<aa;S++){ja=ta[S];oa=ja.color;ra=ja.intensity;if(ja instanceof THREE.DirectionalLight){ja=ca.dot(ja.position)*ra;if(ja>0){V.r+=oa.r*ja;V.g+=oa.g*ja;V.b+=oa.b*ja}}else if(ja instanceof THREE.PointLight){O.sub(ja.position,ea);O.normalize();
ja=ca.dot(O)*ra;if(ja>0){V.r+=oa.r*ja;V.g+=oa.g*ja;V.b+=oa.b*ja}}}}function Ia(S,ea,ca){if(ca.opacity!=0){a(ca.opacity);b(ca.blending);var V,aa,ja,oa,ra,ta;if(ca instanceof THREE.ParticleBasicMaterial){if(ca.map&&ca.map.image.loaded){oa=ca.map.image;ra=oa.width>>1;ta=oa.height>>1;aa=ea.scale.x*l;ja=ea.scale.y*k;ca=aa*ra;V=ja*ta;M.set(S.x-ca,S.y-V,S.x+ca,S.y+V);if(Y.instersects(M)){m.save();m.translate(S.x,S.y);m.rotate(-ea.rotation);m.scale(aa,-ja);m.translate(-ra,-ta);m.drawImage(oa,0,0);m.restore()}}}else if(ca instanceof
THREE.ParticleCircleMaterial){if(Z){ba.r=ha.r+ka.r+B.r;ba.g=ha.g+ka.g+B.g;ba.b=ha.b+ka.b+B.b;R.r=ca.color.r*ba.r;R.g=ca.color.g*ba.g;R.b=ca.color.b*ba.b;R.updateStyleString()}else R.__styleString=ca.color.__styleString;ca=ea.scale.x*l;V=ea.scale.y*k;M.set(S.x-ca,S.y-V,S.x+ca,S.y+V);if(Y.instersects(M)){aa=R.__styleString;if(A!=aa)m.fillStyle=A=aa;m.save();m.translate(S.x,S.y);m.rotate(-ea.rotation);m.scale(ca,V);m.beginPath();m.arc(0,0,1,0,P,true);m.closePath();m.fill();m.restore()}}}}function Da(S,
ea,ca,V){if(V.opacity!=0){a(V.opacity);b(V.blending);m.beginPath();m.moveTo(S.positionScreen.x,S.positionScreen.y);m.lineTo(ea.positionScreen.x,ea.positionScreen.y);m.closePath();if(V instanceof THREE.LineBasicMaterial){R.__styleString=V.color.__styleString;S=V.linewidth;if(E!=S)m.lineWidth=E=S;S=R.__styleString;if(d!=S)m.strokeStyle=d=S;m.stroke();M.inflate(V.linewidth*2)}}}function Ga(S,ea,ca,V,aa,ja){if(aa.opacity!=0){a(aa.opacity);b(aa.blending);I=S.positionScreen.x;Q=S.positionScreen.y;$=ea.positionScreen.x;
N=ea.positionScreen.y;K=ca.positionScreen.x;W=ca.positionScreen.y;m.beginPath();m.moveTo(I,Q);m.lineTo($,N);m.lineTo(K,W);m.lineTo(I,Q);m.closePath();if(aa instanceof THREE.MeshBasicMaterial)if(aa.map)aa.map.image.loaded&&aa.map.mapping instanceof THREE.UVMapping&&pa(I,Q,$,N,K,W,aa.map.image,V.uvs[0].u,V.uvs[0].v,V.uvs[1].u,V.uvs[1].v,V.uvs[2].u,V.uvs[2].v);else if(aa.env_map){if(aa.env_map.image.loaded)if(aa.env_map.mapping instanceof THREE.SphericalReflectionMapping){S=va.matrix;O.copy(V.vertexNormalsWorld[0]);
L=(O.x*S.n11+O.y*S.n12+O.z*S.n13)*0.5+0.5;C=-(O.x*S.n21+O.y*S.n22+O.z*S.n23)*0.5+0.5;O.copy(V.vertexNormalsWorld[1]);D=(O.x*S.n11+O.y*S.n12+O.z*S.n13)*0.5+0.5;G=-(O.x*S.n21+O.y*S.n22+O.z*S.n23)*0.5+0.5;O.copy(V.vertexNormalsWorld[2]);H=(O.x*S.n11+O.y*S.n12+O.z*S.n13)*0.5+0.5;J=-(O.x*S.n21+O.y*S.n22+O.z*S.n23)*0.5+0.5;pa(I,Q,$,N,K,W,aa.env_map.image,L,C,D,G,H,J)}}else aa.wireframe?Ea(aa.color.__styleString,aa.wireframe_linewidth):Fa(aa.color.__styleString);else if(aa instanceof THREE.MeshLambertMaterial){if(aa.map&&
!aa.wireframe){aa.map.mapping instanceof THREE.UVMapping&&pa(I,Q,$,N,K,W,aa.map.image,V.uvs[0].u,V.uvs[0].v,V.uvs[1].u,V.uvs[1].v,V.uvs[2].u,V.uvs[2].v);b(THREE.SubtractiveBlending)}if(Z)if(!aa.wireframe&&aa.shading==THREE.SmoothShading&&V.vertexNormalsWorld.length==3){X.r=g.r=n.r=ha.r;X.g=g.g=n.g=ha.g;X.b=g.b=n.b=ha.b;Ca(ja,V.v1.positionWorld,V.vertexNormalsWorld[0],X);Ca(ja,V.v2.positionWorld,V.vertexNormalsWorld[1],g);Ca(ja,V.v3.positionWorld,V.vertexNormalsWorld[2],n);v.r=(g.r+n.r)*0.5;v.g=(g.g+
n.g)*0.5;v.b=(g.b+n.b)*0.5;z=Ja(X,g,n,v);pa(I,Q,$,N,K,W,z,0,0,1,0,0,1)}else{ba.r=ha.r;ba.g=ha.g;ba.b=ha.b;Ca(ja,V.centroidWorld,V.normalWorld,ba);R.r=aa.color.r*ba.r;R.g=aa.color.g*ba.g;R.b=aa.color.b*ba.b;R.updateStyleString();aa.wireframe?Ea(R.__styleString,aa.wireframe_linewidth):Fa(R.__styleString)}else aa.wireframe?Ea(aa.color.__styleString,aa.wireframe_linewidth):Fa(aa.color.__styleString)}else if(aa instanceof THREE.MeshDepthMaterial){x=va.near;q=va.far;X.r=X.g=X.b=1-Ka(S.positionScreen.z,
x,q);g.r=g.g=g.b=1-Ka(ea.positionScreen.z,x,q);n.r=n.g=n.b=1-Ka(ca.positionScreen.z,x,q);v.r=(g.r+n.r)*0.5;v.g=(g.g+n.g)*0.5;v.b=(g.b+n.b)*0.5;z=Ja(X,g,n,v);pa(I,Q,$,N,K,W,z,0,0,1,0,0,1)}else if(aa instanceof THREE.MeshNormalMaterial){R.r=La(V.normalWorld.x);R.g=La(V.normalWorld.y);R.b=La(V.normalWorld.z);R.updateStyleString();aa.wireframe?Ea(R.__styleString,aa.wireframe_linewidth):Fa(R.__styleString)}}}function Ea(S,ea){if(d!=S)m.strokeStyle=d=S;if(E!=ea)m.lineWidth=E=ea;m.stroke();M.inflate(ea*
2)}function Fa(S){if(A!=S)m.fillStyle=A=S;m.fill()}function pa(S,ea,ca,V,aa,ja,oa,ra,ta,za,wa,Aa,Ma){var xa,Ba;xa=oa.width-1;Ba=oa.height-1;ra*=xa;ta*=Ba;za*=xa;wa*=Ba;Aa*=xa;Ma*=Ba;ca-=S;V-=ea;aa-=S;ja-=ea;za-=ra;wa-=ta;Aa-=ra;Ma-=ta;xa=za*Ma-Aa*wa;if(xa!=0){Ba=1/xa;xa=(Ma*ca-wa*aa)*Ba;wa=(Ma*V-wa*ja)*Ba;ca=(za*aa-Aa*ca)*Ba;V=(za*ja-Aa*V)*Ba;S=S-xa*ra-ca*ta;ea=ea-wa*ra-V*ta;m.save();m.transform(xa,wa,ca,V,S,ea);m.clip();m.drawImage(oa,0,0);m.restore()}}function Ja(S,ea,ca,V){var aa=~~(S.r*255),ja=
~~(S.g*255);S=~~(S.b*255);var oa=~~(ea.r*255),ra=~~(ea.g*255);ea=~~(ea.b*255);var ta=~~(ca.r*255),za=~~(ca.g*255);ca=~~(ca.b*255);var wa=~~(V.r*255),Aa=~~(V.g*255);V=~~(V.b*255);ia[0]=aa<0?0:aa>255?255:aa;ia[1]=ja<0?0:ja>255?255:ja;ia[2]=S<0?0:S>255?255:S;ia[4]=oa<0?0:oa>255?255:oa;ia[5]=ra<0?0:ra>255?255:ra;ia[6]=ea<0?0:ea>255?255:ea;ia[8]=ta<0?0:ta>255?255:ta;ia[9]=za<0?0:za>255?255:za;ia[10]=ca<0?0:ca>255?255:ca;ia[12]=wa<0?0:wa>255?255:wa;ia[13]=Aa<0?0:Aa>255?255:Aa;ia[14]=V<0?0:V>255?255:V;da.putImageData(na,
0,0);la.drawImage(U,0,0);return fa}function Ka(S,ea,ca){S=(S-ea)/(ca-ea);return S*S*(3-2*S)}function La(S){S=(S+1)*0.5;return S<0?0:S>1?1:S}function Na(S,ea){var ca=ea.x-S.x,V=ea.y-S.y,aa=1/Math.sqrt(ca*ca+V*V);ca*=aa;V*=aa;ea.x+=ca;ea.y+=V;S.x-=ca;S.y-=V}var ua,Qa,ma,ya,Ha,Pa,Ra,Oa;this.autoClear?this.clear():m.setTransform(1,0,0,-1,l,k);c=e.projectScene(ga,va,this.sortElements);(Z=ga.lights.length>0)&&sa(ga);ua=0;for(Qa=c.length;ua<Qa;ua++){ma=c[ua];M.empty();if(ma instanceof THREE.RenderableParticle){w=
ma;w.x*=l;w.y*=k;ya=0;for(Ha=ma.materials.length;ya<Ha;ya++)Ia(w,ma,ma.materials[ya],ga)}else if(ma instanceof THREE.RenderableLine){w=ma.v1;F=ma.v2;w.positionScreen.x*=l;w.positionScreen.y*=k;F.positionScreen.x*=l;F.positionScreen.y*=k;M.addPoint(w.positionScreen.x,w.positionScreen.y);M.addPoint(F.positionScreen.x,F.positionScreen.y);if(Y.instersects(M)){ya=0;for(Ha=ma.materials.length;ya<Ha;)Da(w,F,ma,ma.materials[ya++],ga)}}else if(ma instanceof THREE.RenderableFace3){w=ma.v1;F=ma.v2;u=ma.v3;w.positionScreen.x*=
l;w.positionScreen.y*=k;F.positionScreen.x*=l;F.positionScreen.y*=k;u.positionScreen.x*=l;u.positionScreen.y*=k;if(ma.overdraw){Na(w.positionScreen,F.positionScreen);Na(F.positionScreen,u.positionScreen);Na(u.positionScreen,w.positionScreen)}M.add3Points(w.positionScreen.x,w.positionScreen.y,F.positionScreen.x,F.positionScreen.y,u.positionScreen.x,u.positionScreen.y);if(Y.instersects(M)){ya=0;for(Ha=ma.meshMaterials.length;ya<Ha;){Oa=ma.meshMaterials[ya++];if(Oa instanceof THREE.MeshFaceMaterial){Pa=
0;for(Ra=ma.faceMaterials.length;Pa<Ra;)(Oa=ma.faceMaterials[Pa++])&&Ga(w,F,u,ma,Oa,ga)}else Ga(w,F,u,ma,Oa,ga)}}}T.addRectangle(M)}m.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(L,C,D){var G,H,J,Y;G=0;for(H=L.lights.length;G<H;G++){J=L.lights[G];if(J instanceof THREE.DirectionalLight){Y=C.normalWorld.dot(J.position)*J.intensity;if(Y>0){D.r+=J.color.r*Y;D.g+=J.color.g*Y;D.b+=J.color.b*Y}}else if(J instanceof THREE.PointLight){W.sub(J.position,C.centroidWorld);W.normalize();Y=C.normalWorld.dot(W)*J.intensity;if(Y>0){D.r+=J.color.r*Y;D.g+=J.color.g*Y;D.b+=J.color.b*Y}}}}function b(L,C,D,G,H,J){n=e(v++);n.setAttribute("d","M "+L.positionScreen.x+
" "+L.positionScreen.y+" L "+C.positionScreen.x+" "+C.positionScreen.y+" L "+D.positionScreen.x+","+D.positionScreen.y+"z");if(H instanceof THREE.MeshBasicMaterial)u.__styleString=H.color.__styleString;else if(H instanceof THREE.MeshLambertMaterial)if(F){I.r=Q.r;I.g=Q.g;I.b=Q.b;a(J,G,I);u.r=H.color.r*I.r;u.g=H.color.g*I.g;u.b=H.color.b*I.b;u.updateStyleString()}else u.__styleString=H.color.__styleString;else if(H instanceof THREE.MeshDepthMaterial){K=1-H.__2near/(H.__farPlusNear-G.z*H.__farMinusNear);
u.setRGB(K,K,K)}else H instanceof THREE.MeshNormalMaterial&&u.setRGB(h(G.normalWorld.x),h(G.normalWorld.y),h(G.normalWorld.z));H.wireframe?n.setAttribute("style","fill: none; stroke: "+u.__styleString+"; stroke-width: "+H.wireframe_linewidth+"; stroke-opacity: "+H.opacity+"; stroke-linecap: "+H.wireframe_linecap+"; stroke-linejoin: "+H.wireframe_linejoin):n.setAttribute("style","fill: "+u.__styleString+"; fill-opacity: "+H.opacity);l.appendChild(n)}function c(L,C,D,G,H,J,Y){n=e(v++);n.setAttribute("d",
"M "+L.positionScreen.x+" "+L.positionScreen.y+" L "+C.positionScreen.x+" "+C.positionScreen.y+" L "+D.positionScreen.x+","+D.positionScreen.y+" L "+G.positionScreen.x+","+G.positionScreen.y+"z");if(J instanceof THREE.MeshBasicMaterial)u.__styleString=J.color.__styleString;else if(J instanceof THREE.MeshLambertMaterial)if(F){I.r=Q.r;I.g=Q.g;I.b=Q.b;a(Y,H,I);u.r=J.color.r*I.r;u.g=J.color.g*I.g;u.b=J.color.b*I.b;u.updateStyleString()}else u.__styleString=J.color.__styleString;else if(J instanceof THREE.MeshDepthMaterial){K=
1-J.__2near/(J.__farPlusNear-H.z*J.__farMinusNear);u.setRGB(K,K,K)}else J instanceof THREE.MeshNormalMaterial&&u.setRGB(h(H.normalWorld.x),h(H.normalWorld.y),h(H.normalWorld.z));J.wireframe?n.setAttribute("style","fill: none; stroke: "+u.__styleString+"; stroke-width: "+J.wireframe_linewidth+"; stroke-opacity: "+J.opacity+"; stroke-linecap: "+J.wireframe_linecap+"; stroke-linejoin: "+J.wireframe_linejoin):n.setAttribute("style","fill: "+u.__styleString+"; fill-opacity: "+J.opacity);l.appendChild(n)}
function e(L){if(R[L]==null){R[L]=document.createElementNS("http://www.w3.org/2000/svg","path");z==0&&R[L].setAttribute("shape-rendering","crispEdges");return R[L]}return R[L]}function h(L){return L<0?Math.min((1+L)*0.5,0.5):0.5+Math.min(L*0.5,0.5)}var f=null,j=new THREE.Projector,l=document.createElementNS("http://www.w3.org/2000/svg","svg"),k,m,p,y,t,o,d,A,E=new THREE.Rectangle,w=new THREE.Rectangle,F=false,u=new THREE.Color(16777215),I=new THREE.Color(16777215),Q=new THREE.Color(0),$=new THREE.Color(0),
N=new THREE.Color(0),K,W=new THREE.Vector3,R=[],X=[],g=[],n,v,x,q,z=1;this.domElement=l;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(L){switch(L){case "high":z=1;break;case "low":z=0}};this.setSize=function(L,C){k=L;m=C;p=k/2;y=m/2;l.setAttribute("viewBox",-p+" "+-y+" "+k+" "+m);l.setAttribute("width",k);l.setAttribute("height",m);E.set(-p,-y,p,y)};this.clear=function(){for(;l.childNodes.length>0;)l.removeChild(l.childNodes[0])};this.render=function(L,C){var D,G,
H,J,Y,T,M,Z;this.autoClear&&this.clear();f=j.projectScene(L,C,this.sortElements);q=x=v=0;if(F=L.lights.length>0){M=L.lights;Q.setRGB(0,0,0);$.setRGB(0,0,0);N.setRGB(0,0,0);D=0;for(G=M.length;D<G;D++){H=M[D];J=H.color;if(H instanceof THREE.AmbientLight){Q.r+=J.r;Q.g+=J.g;Q.b+=J.b}else if(H instanceof THREE.DirectionalLight){$.r+=J.r;$.g+=J.g;$.b+=J.b}else if(H instanceof THREE.PointLight){N.r+=J.r;N.g+=J.g;N.b+=J.b}}}D=0;for(G=f.length;D<G;D++){M=f[D];w.empty();if(M instanceof THREE.RenderableParticle){t=
M;t.x*=p;t.y*=-y;H=0;for(J=M.materials.length;H<J;H++)if(Z=M.materials[H]){Y=t;T=M;Z=Z;var ba=x++;if(X[ba]==null){X[ba]=document.createElementNS("http://www.w3.org/2000/svg","circle");z==0&&X[ba].setAttribute("shape-rendering","crispEdges")}n=X[ba];n.setAttribute("cx",Y.x);n.setAttribute("cy",Y.y);n.setAttribute("r",T.scale.x*p);if(Z instanceof THREE.ParticleCircleMaterial){if(F){I.r=Q.r+$.r+N.r;I.g=Q.g+$.g+N.g;I.b=Q.b+$.b+N.b;u.r=Z.color.r*I.r;u.g=Z.color.g*I.g;u.b=Z.color.b*I.b;u.updateStyleString()}else u=
Z.color;n.setAttribute("style","fill: "+u.__styleString)}l.appendChild(n)}}else if(M instanceof THREE.RenderableLine){t=M.v1;o=M.v2;t.positionScreen.x*=p;t.positionScreen.y*=-y;o.positionScreen.x*=p;o.positionScreen.y*=-y;w.addPoint(t.positionScreen.x,t.positionScreen.y);w.addPoint(o.positionScreen.x,o.positionScreen.y);if(E.instersects(w)){H=0;for(J=M.materials.length;H<J;)if(Z=M.materials[H++]){Y=t;T=o;Z=Z;ba=q++;if(g[ba]==null){g[ba]=document.createElementNS("http://www.w3.org/2000/svg","line");
z==0&&g[ba].setAttribute("shape-rendering","crispEdges")}n=g[ba];n.setAttribute("x1",Y.positionScreen.x);n.setAttribute("y1",Y.positionScreen.y);n.setAttribute("x2",T.positionScreen.x);n.setAttribute("y2",T.positionScreen.y);if(Z instanceof THREE.LineBasicMaterial){u.__styleString=Z.color.__styleString;n.setAttribute("style","fill: none; stroke: "+u.__styleString+"; stroke-width: "+Z.linewidth+"; stroke-opacity: "+Z.opacity+"; stroke-linecap: "+Z.linecap+"; stroke-linejoin: "+Z.linejoin);l.appendChild(n)}}}}else if(M instanceof
THREE.RenderableFace3){t=M.v1;o=M.v2;d=M.v3;t.positionScreen.x*=p;t.positionScreen.y*=-y;o.positionScreen.x*=p;o.positionScreen.y*=-y;d.positionScreen.x*=p;d.positionScreen.y*=-y;w.addPoint(t.positionScreen.x,t.positionScreen.y);w.addPoint(o.positionScreen.x,o.positionScreen.y);w.addPoint(d.positionScreen.x,d.positionScreen.y);if(E.instersects(w)){H=0;for(J=M.meshMaterials.length;H<J;){Z=M.meshMaterials[H++];if(Z instanceof THREE.MeshFaceMaterial){Y=0;for(T=M.faceMaterials.length;Y<T;)(Z=M.faceMaterials[Y++])&&
b(t,o,d,M,Z,L)}else Z&&b(t,o,d,M,Z,L)}}}else if(M instanceof THREE.RenderableFace4){t=M.v1;o=M.v2;d=M.v3;A=M.v4;t.positionScreen.x*=p;t.positionScreen.y*=-y;o.positionScreen.x*=p;o.positionScreen.y*=-y;d.positionScreen.x*=p;d.positionScreen.y*=-y;A.positionScreen.x*=p;A.positionScreen.y*=-y;w.addPoint(t.positionScreen.x,t.positionScreen.y);w.addPoint(o.positionScreen.x,o.positionScreen.y);w.addPoint(d.positionScreen.x,d.positionScreen.y);w.addPoint(A.positionScreen.x,A.positionScreen.y);if(E.instersects(w)){H=
0;for(J=M.meshMaterials.length;H<J;){Z=M.meshMaterials[H++];if(Z instanceof THREE.MeshFaceMaterial){Y=0;for(T=M.faceMaterials.length;Y<T;)(Z=M.faceMaterials[Y++])&&c(t,o,d,A,M,Z,L)}else Z&&c(t,o,d,A,M,Z,L)}}}}}};
THREE.WebGLRenderer=function(a){function b(g,n){g.fragment_shader=n.fragment_shader;g.vertex_shader=n.vertex_shader;g.uniforms=Uniforms.clone(n.uniforms)}function c(g,n){if(!g.__webGLVertexBuffer)g.__webGLVertexBuffer=d.createBuffer();if(!g.__webGLNormalBuffer)g.__webGLNormalBuffer=d.createBuffer();if(g.hasPos){d.bindBuffer(d.ARRAY_BUFFER,g.__webGLVertexBuffer);d.bufferData(d.ARRAY_BUFFER,g.positionArray,d.DYNAMIC_DRAW);d.enableVertexAttribArray(n.attributes.position);d.vertexAttribPointer(n.attributes.position,
3,d.FLOAT,false,0,0)}if(g.hasNormal){d.bindBuffer(d.ARRAY_BUFFER,g.__webGLNormalBuffer);d.bufferData(d.ARRAY_BUFFER,g.normalArray,d.DYNAMIC_DRAW);d.enableVertexAttribArray(n.attributes.normal);d.vertexAttribPointer(n.attributes.normal,3,d.FLOAT,false,0,0)}d.drawArrays(d.TRIANGLES,0,g.count);g.count=0}function e(g){if(w!=g.doubleSided){g.doubleSided?d.disable(d.CULL_FACE):d.enable(d.CULL_FACE);w=g.doubleSided}if(F!=g.flipSided){g.flipSided?d.frontFace(d.CW):d.frontFace(d.CCW);F=g.flipSided}}function h(g){I[0].set(g.n41-
g.n11,g.n42-g.n12,g.n43-g.n13,g.n44-g.n14);I[1].set(g.n41+g.n11,g.n42+g.n12,g.n43+g.n13,g.n44+g.n14);I[2].set(g.n41+g.n21,g.n42+g.n22,g.n43+g.n23,g.n44+g.n24);I[3].set(g.n41-g.n21,g.n42-g.n22,g.n43-g.n23,g.n44-g.n24);I[4].set(g.n41-g.n31,g.n42-g.n32,g.n43-g.n33,g.n44-g.n34);I[5].set(g.n41+g.n31,g.n42+g.n32,g.n43+g.n33,g.n44+g.n34);var n;for(g=0;g<5;g++){n=I[g];n.divideScalar(Math.sqrt(n.x*n.x+n.y*n.y+n.z*n.z))}}function f(g){for(var n=g.matrix,v=-g.geometry.boundingSphere.radius*Math.max(g.scale.x,
Math.max(g.scale.y,g.scale.z)),x=0;x<6;x++){g=I[x].x*n.n14+I[x].y*n.n24+I[x].z*n.n34+I[x].w;if(g<=v)return false}return true}function j(g,n){g.list[g.count]=n;g.count+=1}function l(g){var n,v,x=g.object,q=g.opaque,z=g.transparent;z.count=0;g=q.count=0;for(n=x.materials.length;g<n;g++){v=x.materials[g];v.opacity&&v.opacity<1||v.blending!=THREE.NormalBlending?j(z,v):j(q,v)}}function k(g){var n,v,x,q,z=g.object,L=g.buffer,C=g.opaque,D=g.transparent;D.count=0;g=C.count=0;for(x=z.materials.length;g<x;g++){n=
z.materials[g];if(n instanceof THREE.MeshFaceMaterial){n=0;for(v=L.materials.length;n<v;n++)if(q=L.materials[n])q.opacity&&q.opacity<1||q.blending!=THREE.NormalBlending?j(D,q):j(C,q)}else{q=n;q.opacity&&q.opacity<1||q.blending!=THREE.NormalBlending?j(D,q):j(C,q)}}}function m(g){if(g!=u){switch(g){case THREE.AdditiveBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.ONE,d.ONE);break;case THREE.SubtractiveBlending:d.blendFunc(d.DST_COLOR,d.ZERO);break;case THREE.BillboardBlending:d.blendEquation(d.FUNC_ADD);
d.blendFunc(d.SRC_ALPHA,d.ONE_MINUS_SRC_ALPHA);break;default:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.ONE,d.ONE_MINUS_SRC_ALPHA)}u=g}}function p(g,n){if(g&&!g.__webGLFramebuffer){g.__webGLFramebuffer=d.createFramebuffer();g.__webGLRenderbuffer=d.createRenderbuffer();g.__webGLTexture=d.createTexture();d.bindRenderbuffer(d.RENDERBUFFER,g.__webGLRenderbuffer);d.renderbufferStorage(d.RENDERBUFFER,d.DEPTH_COMPONENT16,g.width,g.height);d.bindTexture(d.TEXTURE_2D,g.__webGLTexture);d.texParameteri(d.TEXTURE_2D,
d.TEXTURE_WRAP_S,t(g.wrap_s));d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,t(g.wrap_t));d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,t(g.mag_filter));d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,t(g.min_filter));d.texImage2D(d.TEXTURE_2D,0,t(g.format),g.width,g.height,0,t(g.format),t(g.type),null);d.bindFramebuffer(d.FRAMEBUFFER,g.__webGLFramebuffer);d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,g.__webGLTexture,0);d.framebufferRenderbuffer(d.FRAMEBUFFER,d.DEPTH_ATTACHMENT,
d.RENDERBUFFER,g.__webGLRenderbuffer);d.bindTexture(d.TEXTURE_2D,null);d.bindRenderbuffer(d.RENDERBUFFER,null);d.bindFramebuffer(d.FRAMEBUFFER,null)}var v,x,q;if(g){v=g.__webGLFramebuffer;x=g.width;q=g.height}else{v=null;x=o.width;q=o.height}if(v!=E){d.bindFramebuffer(d.FRAMEBUFFER,v);d.viewport(0,0,x,q);n&&d.clear(d.COLOR_BUFFER_BIT|d.DEPTH_BUFFER_BIT);E=v}}function y(g,n){var v;if(g=="fragment")v=d.createShader(d.FRAGMENT_SHADER);else if(g=="vertex")v=d.createShader(d.VERTEX_SHADER);d.shaderSource(v,
n);d.compileShader(v);if(!d.getShaderParameter(v,d.COMPILE_STATUS)){alert(d.getShaderInfoLog(v));return null}return v}function t(g){switch(g){case THREE.RepeatWrapping:return d.REPEAT;case THREE.ClampToEdgeWrapping:return d.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return d.MIRRORED_REPEAT;case THREE.NearestFilter:return d.NEAREST;case THREE.NearestMipMapNearestFilter:return d.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return d.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return d.LINEAR;
case THREE.LinearMipMapNearestFilter:return d.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return d.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return d.BYTE;case THREE.UnsignedByteType:return d.UNSIGNED_BYTE;case THREE.ShortType:return d.SHORT;case THREE.UnsignedShortType:return d.UNSIGNED_SHORT;case THREE.IntType:return d.INT;case THREE.UnsignedShortType:return d.UNSIGNED_INT;case THREE.FloatType:return d.FLOAT;case THREE.AlphaFormat:return d.ALPHA;case THREE.RGBFormat:return d.RGB;case THREE.RGBAFormat:return d.RGBA;
case THREE.LuminanceFormat:return d.LUMINANCE;case THREE.LuminanceAlphaFormat:return d.LUMINANCE_ALPHA}return 0}var o=document.createElement("canvas"),d,A=null,E=null,w=null,F=null,u=null,I=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],Q=new THREE.Matrix4,$=new Float32Array(16),N=new Float32Array(16),K=new THREE.Vector4,W=true,R=new THREE.Color(0),X=0;if(a){if(a.antialias!==undefined)W=a.antialias;a.clearColor!==undefined&&R.setHex(a.clearColor);
if(a.clearAlpha!==undefined)X=a.clearAlpha}this.domElement=o;this.autoClear=true;(function(g,n,v){try{d=o.getContext("experimental-webgl",{antialias:g})}catch(x){console.log(x)}if(!d){alert("WebGL not supported");throw"cannot create webgl context";}d.clearColor(0,0,0,1);d.clearDepth(1);d.enable(d.DEPTH_TEST);d.depthFunc(d.LEQUAL);d.frontFace(d.CCW);d.cullFace(d.BACK);d.enable(d.CULL_FACE);d.enable(d.BLEND);d.blendFunc(d.ONE,d.ONE_MINUS_SRC_ALPHA);d.clearColor(n.r,n.g,n.b,v);_cullEnabled=true})(W,
R,X);this.context=d;this.lights={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[]}};this.setSize=function(g,n){o.width=g;o.height=n;d.viewport(0,0,o.width,o.height)};this.setClearColorHex=function(g,n){var v=new THREE.Color(g);d.clearColor(v.r,v.g,v.b,n)};this.setClearColor=function(g,n){d.clearColor(g.r,g.g,g.b,n)};this.clear=function(){d.clear(d.COLOR_BUFFER_BIT|d.DEPTH_BUFFER_BIT)};this.setupLights=function(g,n){var v,x,q,z=0,L=0,C=0,D,G,H,J=
this.lights,Y=J.directional.colors,T=J.directional.positions,M=J.point.colors,Z=J.point.positions,ba=0,ha=0;v=q=q=0;for(x=n.length;v<x;v++){q=n[v];D=q.color;G=q.position;H=q.intensity;if(q instanceof THREE.AmbientLight){z+=D.r;L+=D.g;C+=D.b}else if(q instanceof THREE.DirectionalLight){q=ba*3;Y[q]=D.r*H;Y[q+1]=D.g*H;Y[q+2]=D.b*H;T[q]=G.x;T[q+1]=G.y;T[q+2]=G.z;ba+=1}else if(q instanceof THREE.PointLight){q=ha*3;M[q]=D.r*H;M[q+1]=D.g*H;M[q+2]=D.b*H;Z[q]=G.x;Z[q+1]=G.y;Z[q+2]=G.z;ha+=1}}for(v=ba*3;v<
Y.length;v++)Y[v]=0;for(v=ha*3;v<M.length;v++)M[v]=0;J.point.length=ha;J.directional.length=ba;J.ambient[0]=z;J.ambient[1]=L;J.ambient[2]=C};this.createParticleBuffers=function(g){g.__webGLVertexBuffer=d.createBuffer();g.__webGLColorBuffer=d.createBuffer()};this.createLineBuffers=function(g){g.__webGLVertexBuffer=d.createBuffer();g.__webGLColorBuffer=d.createBuffer()};this.createMeshBuffers=function(g){g.__webGLVertexBuffer=d.createBuffer();g.__webGLNormalBuffer=d.createBuffer();g.__webGLTangentBuffer=
d.createBuffer();g.__webGLColorBuffer=d.createBuffer();g.__webGLUVBuffer=d.createBuffer();g.__webGLUV2Buffer=d.createBuffer();g.__webGLFaceBuffer=d.createBuffer();g.__webGLLineBuffer=d.createBuffer()};this.initLineBuffers=function(g){var n=g.vertices.length;g.__vertexArray=new Float32Array(n*3);g.__colorArray=new Float32Array(n*3);g.__webGLLineCount=n};this.initParticleBuffers=function(g){var n=g.vertices.length;g.__vertexArray=new Float32Array(n*3);g.__colorArray=new Float32Array(n*3);g.__sortArray=
[];g.__webGLParticleCount=n};this.initMeshBuffers=function(g,n){var v,x,q=0,z=0,L=0,C=n.geometry.faces,D=g.faces;v=0;for(x=D.length;v<x;v++){fi=D[v];face=C[fi];if(face instanceof THREE.Face3){q+=3;z+=1;L+=3}else if(face instanceof THREE.Face4){q+=4;z+=2;L+=4}}g.__vertexArray=new Float32Array(q*3);g.__normalArray=new Float32Array(q*3);g.__tangentArray=new Float32Array(q*4);g.__colorArray=new Float32Array(q*3);g.__uvArray=new Float32Array(q*2);g.__uv2Array=new Float32Array(q*2);g.__faceArray=new Uint16Array(z*
3);g.__lineArray=new Uint16Array(L*2);q=false;v=0;for(x=n.materials.length;v<x;v++){C=n.materials[v];if(C instanceof THREE.MeshFaceMaterial){C=0;for(D=g.materials.length;C<D;C++)if(g.materials[C]&&g.materials[C].shading!=undefined&&g.materials[C].shading==THREE.SmoothShading){q=true;break}}else if(C&&C.shading!=undefined&&C.shading==THREE.SmoothShading){q=true;break}if(q)break}g.__needsSmoothNormals=q;g.__webGLFaceCount=z*3;g.__webGLLineCount=L*2};this.setMeshBuffers=function(g,n,v){var x,q,z,L,C,
D,G,H,J,Y,T=0,M=0,Z=0,ba=0,ha=0,ka=0,B=0,P=0,O=0,U=g.__vertexArray,da=g.__uvArray,na=g.__uv2Array,ia=g.__normalArray,fa=g.__tangentArray,la=g.__colorArray,qa=g.__faceArray,ga=g.__lineArray,va=g.__needsSmoothNormals,sa=n.geometry,Ca=sa.__dirtyVertices,Ia=sa.__dirtyElements,Da=sa.__dirtyUvs,Ga=sa.__dirtyNormals,Ea=sa.__dirtyTangents,Fa=sa.__dirtyColors,pa=sa.vertices,Ja=g.faces,Ka=sa.faces,La=sa.uvs,Na=sa.uvs2,ua=sa.colors;n=0;for(x=Ja.length;n<x;n++){q=Ja[n];z=Ka[q];D=La[q];q=Na[q];L=z.vertexNormals;
C=z.normal;if(z instanceof THREE.Face3){if(Ca){G=pa[z.a].position;H=pa[z.b].position;J=pa[z.c].position;U[M]=G.x;U[M+1]=G.y;U[M+2]=G.z;U[M+3]=H.x;U[M+4]=H.y;U[M+5]=H.z;U[M+6]=J.x;U[M+7]=J.y;U[M+8]=J.z;M+=9}if(Fa&&ua.length){G=ua[z.a];H=ua[z.b];J=ua[z.c];la[O]=G.r;la[O+1]=G.g;la[O+2]=G.b;la[O+3]=H.r;la[O+4]=H.g;la[O+5]=H.b;la[O+6]=J.r;la[O+7]=J.g;la[O+8]=J.b;O+=9}if(Ea&&sa.hasTangents){G=pa[z.a].tangent;H=pa[z.b].tangent;J=pa[z.c].tangent;fa[B]=G.x;fa[B+1]=G.y;fa[B+2]=G.z;fa[B+3]=G.w;fa[B+4]=H.x;fa[B+
5]=H.y;fa[B+6]=H.z;fa[B+7]=H.w;fa[B+8]=J.x;fa[B+9]=J.y;fa[B+10]=J.z;fa[B+11]=J.w;B+=12}if(Ga)if(L.length==3&&va)for(z=0;z<3;z++){C=L[z];ia[ka]=C.x;ia[ka+1]=C.y;ia[ka+2]=C.z;ka+=3}else for(z=0;z<3;z++){ia[ka]=C.x;ia[ka+1]=C.y;ia[ka+2]=C.z;ka+=3}if(Da&&D)for(z=0;z<3;z++){L=D[z];da[Z]=L.u;da[Z+1]=L.v;Z+=2}if(Da&&q)for(z=0;z<3;z++){D=q[z];na[ba]=D.u;na[ba+1]=D.v;ba+=2}if(Ia){qa[ha]=T;qa[ha+1]=T+1;qa[ha+2]=T+2;ha+=3;ga[P]=T;ga[P+1]=T+1;ga[P+2]=T;ga[P+3]=T+2;ga[P+4]=T+1;ga[P+5]=T+2;P+=6;T+=3}}else if(z instanceof
THREE.Face4){if(Ca){G=pa[z.a].position;H=pa[z.b].position;J=pa[z.c].position;Y=pa[z.d].position;U[M]=G.x;U[M+1]=G.y;U[M+2]=G.z;U[M+3]=H.x;U[M+4]=H.y;U[M+5]=H.z;U[M+6]=J.x;U[M+7]=J.y;U[M+8]=J.z;U[M+9]=Y.x;U[M+10]=Y.y;U[M+11]=Y.z;M+=12}if(Fa&&ua.length){G=ua[z.a];H=ua[z.b];J=ua[z.c];Y=ua[z.d];la[O]=G.r;la[O+1]=G.g;la[O+2]=G.b;la[O+3]=H.r;la[O+4]=H.g;la[O+5]=H.b;la[O+6]=J.r;la[O+7]=J.g;la[O+8]=J.b;la[O+9]=Y.r;la[O+10]=Y.g;la[O+11]=Y.b;O+=12}if(Ea&&sa.hasTangents){G=pa[z.a].tangent;H=pa[z.b].tangent;
J=pa[z.c].tangent;z=pa[z.d].tangent;fa[B]=G.x;fa[B+1]=G.y;fa[B+2]=G.z;fa[B+3]=G.w;fa[B+4]=H.x;fa[B+5]=H.y;fa[B+6]=H.z;fa[B+7]=H.w;fa[B+8]=J.x;fa[B+9]=J.y;fa[B+10]=J.z;fa[B+11]=J.w;fa[B+12]=z.x;fa[B+13]=z.y;fa[B+14]=z.z;fa[B+15]=z.w;B+=16}if(Ga)if(L.length==4&&va)for(z=0;z<4;z++){C=L[z];ia[ka]=C.x;ia[ka+1]=C.y;ia[ka+2]=C.z;ka+=3}else for(z=0;z<4;z++){ia[ka]=C.x;ia[ka+1]=C.y;ia[ka+2]=C.z;ka+=3}if(Da&&D)for(z=0;z<4;z++){L=D[z];da[Z]=L.u;da[Z+1]=L.v;Z+=2}if(Da&&q)for(z=0;z<4;z++){D=q[z];na[ba]=D.u;na[ba+
1]=D.v;ba+=2}if(Ia){qa[ha]=T;qa[ha+1]=T+1;qa[ha+2]=T+2;qa[ha+3]=T;qa[ha+4]=T+2;qa[ha+5]=T+3;ha+=6;ga[P]=T;ga[P+1]=T+1;ga[P+2]=T;ga[P+3]=T+3;ga[P+4]=T+1;ga[P+5]=T+2;ga[P+6]=T+2;ga[P+7]=T+3;P+=8;T+=4}}}if(Ca){d.bindBuffer(d.ARRAY_BUFFER,g.__webGLVertexBuffer);d.bufferData(d.ARRAY_BUFFER,U,v)}if(Fa&&ua.length){d.bindBuffer(d.ARRAY_BUFFER,g.__webGLColorBuffer);d.bufferData(d.ARRAY_BUFFER,la,v)}if(Ga){d.bindBuffer(d.ARRAY_BUFFER,g.__webGLNormalBuffer);d.bufferData(d.ARRAY_BUFFER,ia,v)}if(Ea&&sa.hasTangents){d.bindBuffer(d.ARRAY_BUFFER,
g.__webGLTangentBuffer);d.bufferData(d.ARRAY_BUFFER,fa,v)}if(Da&&Z>0){d.bindBuffer(d.ARRAY_BUFFER,g.__webGLUVBuffer);d.bufferData(d.ARRAY_BUFFER,da,v)}if(Da&&ba>0){d.bindBuffer(d.ARRAY_BUFFER,g.__webGLUV2Buffer);d.bufferData(d.ARRAY_BUFFER,na,v)}if(Ia){d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,g.__webGLFaceBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,qa,v);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,g.__webGLLineBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,ga,v)}};this.setLineBuffers=function(g,n){var v,x,q,z=g.vertices,
L=g.colors,C=z.length,D=L.length,G=g.__vertexArray,H=g.__colorArray,J=g.__dirtyColors;if(g.__dirtyVertices){for(v=0;v<C;v++){x=z[v].position;q=v*3;G[q]=x.x;G[q+1]=x.y;G[q+2]=x.z}d.bindBuffer(d.ARRAY_BUFFER,g.__webGLVertexBuffer);d.bufferData(d.ARRAY_BUFFER,G,n)}if(J){for(v=0;v<D;v++){color=L[v];q=v*3;H[q]=color.r;H[q+1]=color.g;H[q+2]=color.b}d.bindBuffer(d.ARRAY_BUFFER,g.__webGLColorBuffer);d.bufferData(d.ARRAY_BUFFER,H,n)}};this.setParticleBuffers=function(g,n,v){var x,q,z,L=g.vertices,C=L.length,
D=g.colors,G=D.length,H=g.__vertexArray,J=g.__colorArray,Y=g.__sortArray,T=g.__dirtyVertices,M=g.__dirtyColors;if(v.sortParticles){Q.multiplySelf(v.matrix);for(x=0;x<C;x++){q=L[x].position;K.copy(q);Q.multiplyVector3(K);Y[x]=[K.z,x]}Y.sort(function(Z,ba){return ba[0]-Z[0]});for(x=0;x<C;x++){q=L[Y[x][1]].position;z=x*3;H[z]=q.x;H[z+1]=q.y;H[z+2]=q.z}for(x=0;x<G;x++){z=x*3;color=D[Y[x][1]];J[z]=color.r;J[z+1]=color.g;J[z+2]=color.b}}else{if(T)for(x=0;x<C;x++){q=L[x].position;z=x*3;H[z]=q.x;H[z+1]=q.y;
H[z+2]=q.z}if(M)for(x=0;x<G;x++){color=D[x];z=x*3;J[z]=color.r;J[z+1]=color.g;J[z+2]=color.b}}if(T||v.sortParticles){d.bindBuffer(d.ARRAY_BUFFER,g.__webGLVertexBuffer);d.bufferData(d.ARRAY_BUFFER,H,n)}if(M||v.sortParticles){d.bindBuffer(d.ARRAY_BUFFER,g.__webGLColorBuffer);d.bufferData(d.ARRAY_BUFFER,J,n)}};this.initMaterial=function(g,n,v){var x,q;if(g instanceof THREE.MeshDepthMaterial)b(g,THREE.ShaderLib.depth);else if(g instanceof THREE.MeshNormalMaterial)b(g,THREE.ShaderLib.normal);else if(g instanceof
THREE.MeshBasicMaterial)b(g,THREE.ShaderLib.basic);else if(g instanceof THREE.MeshLambertMaterial)b(g,THREE.ShaderLib.lambert);else if(g instanceof THREE.MeshPhongMaterial)b(g,THREE.ShaderLib.phong);else if(g instanceof THREE.LineBasicMaterial)b(g,THREE.ShaderLib.basic);else g instanceof THREE.ParticleBasicMaterial&&b(g,THREE.ShaderLib.particle_basic);var z,L,C,D;q=C=D=0;for(z=n.length;q<z;q++){L=n[q];L instanceof THREE.DirectionalLight&&C++;L instanceof THREE.PointLight&&D++}if(D+C<=4){n=C;D=D}else{n=
Math.ceil(4*C/(D+C));D=4-n}q={directional:n,point:D};D=g.fragment_shader;n=g.vertex_shader;z={fog:v,map:g.map,env_map:g.env_map,light_map:g.light_map,vertex_colors:g.vertex_colors,maxDirLights:q.directional,maxPointLights:q.point};v=d.createProgram();q=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+z.maxDirLights,"#define MAX_POINT_LIGHTS "+z.maxPointLights,z.fog?"#define USE_FOG":"",z.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",z.map?"#define USE_MAP":"",z.env_map?
"#define USE_ENVMAP":"",z.light_map?"#define USE_LIGHTMAP":"",z.vertex_colors?"#define USE_COLOR":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");z=[d.getParameter(d.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+z.maxDirLights,"#define MAX_POINT_LIGHTS "+z.maxPointLights,z.map?"#define USE_MAP":"",z.env_map?"#define USE_ENVMAP":"",z.light_map?"#define USE_LIGHTMAP":"",z.vertex_colors?"#define USE_COLOR":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec3 color;\nattribute vec2 uv;\nattribute vec2 uv2;\n"].join("\n");
d.attachShader(v,y("fragment",q+D));d.attachShader(v,y("vertex",z+n));d.linkProgram(v);d.getProgramParameter(v,d.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+d.getProgramParameter(v,d.VALIDATE_STATUS)+", gl error ["+d.getError()+"]");v.uniforms={};v.attributes={};g.program=v;v=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(x in g.uniforms)v.push(x);x=g.program;D=0;for(n=v.length;D<n;D++){q=v[D];x.uniforms[q]=d.getUniformLocation(x,
q)}g=g.program;x=["position","normal","uv","uv2","tangent","color"];v=0;for(D=x.length;v<D;v++){n=x[v];g.attributes[n]=d.getAttribLocation(g,n)}};this.setProgram=function(g,n,v,x,q){x.program||this.initMaterial(x,n,v);var z=x.program,L=z.uniforms,C=x.uniforms;if(z!=A){d.useProgram(z);A=z;d.uniformMatrix4fv(L.projectionMatrix,false,$)}if(v&&(x instanceof THREE.MeshBasicMaterial||x instanceof THREE.MeshLambertMaterial||x instanceof THREE.MeshPhongMaterial||x instanceof THREE.LineBasicMaterial||x instanceof
THREE.ParticleBasicMaterial)){C.fogColor.value.setHex(v.color.hex);if(v instanceof THREE.Fog){C.fogNear.value=v.near;C.fogFar.value=v.far}else if(v instanceof THREE.FogExp2)C.fogDensity.value=v.density}if(x instanceof THREE.MeshPhongMaterial||x instanceof THREE.MeshLambertMaterial){this.setupLights(z,n);n=this.lights;C.enableLighting.value=n.directional.length+n.point.length;C.ambientLightColor.value=n.ambient;C.directionalLightColor.value=n.directional.colors;C.directionalLightDirection.value=n.directional.positions;
C.pointLightColor.value=n.point.colors;C.pointLightPosition.value=n.point.positions}if(x instanceof THREE.MeshBasicMaterial||x instanceof THREE.MeshLambertMaterial||x instanceof THREE.MeshPhongMaterial){C.diffuse.value.setRGB(x.color.r*x.opacity,x.color.g*x.opacity,x.color.b*x.opacity);C.opacity.value=x.opacity;C.map.texture=x.map;C.light_map.texture=x.light_map;C.env_map.texture=x.env_map;C.reflectivity.value=x.reflectivity;C.refraction_ratio.value=x.refraction_ratio;C.combine.value=x.combine;C.useRefract.value=
x.env_map&&x.env_map.mapping instanceof THREE.CubeRefractionMapping}if(x instanceof THREE.LineBasicMaterial){C.diffuse.value.setRGB(x.color.r*x.opacity,x.color.g*x.opacity,x.color.b*x.opacity);C.opacity.value=x.opacity}else if(x instanceof THREE.ParticleBasicMaterial){C.psColor.value.setRGB(x.color.r*x.opacity,x.color.g*x.opacity,x.color.b*x.opacity);C.opacity.value=x.opacity;C.size.value=x.size;C.map.texture=x.map}else if(x instanceof THREE.MeshPhongMaterial){C.ambient.value.setRGB(x.ambient.r,x.ambient.g,
x.ambient.b);C.specular.value.setRGB(x.specular.r,x.specular.g,x.specular.b);C.shininess.value=x.shininess}else if(x instanceof THREE.MeshDepthMaterial){C.mNear.value=g.near;C.mFar.value=g.far;C.opacity.value=x.opacity}else if(x instanceof THREE.MeshNormalMaterial)C.opacity.value=x.opacity;var D,G,H;for(D in C)if(H=z.uniforms[D]){v=C[D];G=v.type;n=v.value;if(G=="i")d.uniform1i(H,n);else if(G=="f")d.uniform1f(H,n);else if(G=="fv1")d.uniform1fv(H,n);else if(G=="fv")d.uniform3fv(H,n);else if(G=="v2")d.uniform2f(H,
n.x,n.y);else if(G=="v3")d.uniform3f(H,n.x,n.y,n.z);else if(G=="c")d.uniform3f(H,n.r,n.g,n.b);else if(G=="t"){d.uniform1i(H,n);if(v=v.texture)if(v.image instanceof Array&&v.image.length==6){v=v;n=n;if(v.image.length==6){if(!v.image.__webGLTextureCube&&!v.image.__cubeMapInitialized&&v.image.loadCount==6){v.image.__webGLTextureCube=d.createTexture();d.bindTexture(d.TEXTURE_CUBE_MAP,v.image.__webGLTextureCube);d.texParameteri(d.TEXTURE_CUBE_MAP,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE);d.texParameteri(d.TEXTURE_CUBE_MAP,
d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE);d.texParameteri(d.TEXTURE_CUBE_MAP,d.TEXTURE_MAG_FILTER,d.LINEAR);d.texParameteri(d.TEXTURE_CUBE_MAP,d.TEXTURE_MIN_FILTER,d.LINEAR_MIPMAP_LINEAR);for(G=0;G<6;++G)d.texImage2D(d.TEXTURE_CUBE_MAP_POSITIVE_X+G,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,v.image[G]);d.generateMipmap(d.TEXTURE_CUBE_MAP);d.bindTexture(d.TEXTURE_CUBE_MAP,null);v.image.__cubeMapInitialized=true}d.activeTexture(d.TEXTURE0+n);d.bindTexture(d.TEXTURE_CUBE_MAP,v.image.__webGLTextureCube)}}else{v=v;n=n;if(!v.__webGLTexture&&
v.image.loaded){v.__webGLTexture=d.createTexture();d.bindTexture(d.TEXTURE_2D,v.__webGLTexture);d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,v.image);d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,t(v.wrap_s));d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,t(v.wrap_t));d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,t(v.mag_filter));d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,t(v.min_filter));d.generateMipmap(d.TEXTURE_2D);d.bindTexture(d.TEXTURE_2D,null)}d.activeTexture(d.TEXTURE0+
n);d.bindTexture(d.TEXTURE_2D,v.__webGLTexture)}}}d.uniformMatrix4fv(L.modelViewMatrix,false,q._modelViewMatrixArray);d.uniformMatrix3fv(L.normalMatrix,false,q._normalMatrixArray);if(x instanceof THREE.MeshShaderMaterial||x instanceof THREE.MeshPhongMaterial||x.env_map)d.uniform3f(L.cameraPosition,g.position.x,g.position.y,g.position.z);if(x instanceof THREE.MeshShaderMaterial||x.env_map)d.uniformMatrix4fv(L.objectMatrix,false,q._objectMatrixArray);if(x instanceof THREE.MeshPhongMaterial||x instanceof
THREE.MeshLambertMaterial||x instanceof THREE.MeshShaderMaterial)d.uniformMatrix4fv(L.viewMatrix,false,N);return z};this.renderBuffer=function(g,n,v,x,q,z){g=this.setProgram(g,n,v,x,z).attributes;d.bindBuffer(d.ARRAY_BUFFER,q.__webGLVertexBuffer);d.vertexAttribPointer(g.position,3,d.FLOAT,false,0,0);d.enableVertexAttribArray(g.position);if(g.color>=0){d.bindBuffer(d.ARRAY_BUFFER,q.__webGLColorBuffer);d.vertexAttribPointer(g.color,3,d.FLOAT,false,0,0);d.enableVertexAttribArray(g.color)}if(g.normal>=
0){d.bindBuffer(d.ARRAY_BUFFER,q.__webGLNormalBuffer);d.vertexAttribPointer(g.normal,3,d.FLOAT,false,0,0);d.enableVertexAttribArray(g.normal)}if(g.tangent>=0){d.bindBuffer(d.ARRAY_BUFFER,q.__webGLTangentBuffer);d.vertexAttribPointer(g.tangent,4,d.FLOAT,false,0,0);d.enableVertexAttribArray(g.tangent)}if(g.uv>=0)if(q.__webGLUVBuffer){d.bindBuffer(d.ARRAY_BUFFER,q.__webGLUVBuffer);d.vertexAttribPointer(g.uv,2,d.FLOAT,false,0,0);d.enableVertexAttribArray(g.uv)}else d.disableVertexAttribArray(g.uv);if(g.uv2>=
0)if(q.__webGLUV2Buffer){d.bindBuffer(d.ARRAY_BUFFER,q.__webGLUV2Buffer);d.vertexAttribPointer(g.uv2,2,d.FLOAT,false,0,0);d.enableVertexAttribArray(g.uv2)}else d.disableVertexAttribArray(g.uv2);if(z instanceof THREE.Mesh)if(x.wireframe){d.lineWidth(x.wireframe_linewidth);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,q.__webGLLineBuffer);d.drawElements(d.LINES,q.__webGLLineCount,d.UNSIGNED_SHORT,0)}else{d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,q.__webGLFaceBuffer);d.drawElements(d.TRIANGLES,q.__webGLFaceCount,d.UNSIGNED_SHORT,
0)}else if(z instanceof THREE.Line){z=z.type==THREE.LineStrip?d.LINE_STRIP:d.LINES;d.lineWidth(x.linewidth);d.drawArrays(z,0,q.__webGLLineCount)}else z instanceof THREE.ParticleSystem&&d.drawArrays(d.POINTS,0,q.__webGLParticleCount)};this.render=function(g,n,v,x){var q,z,L,C,D,G,H,J=g.lights,Y=g.fog;n.autoUpdateMatrix&&n.updateMatrix();n.matrix.flattenToArray(N);n.projectionMatrix.flattenToArray($);Q.multiply(n.projectionMatrix,n.matrix);h(Q);this.initWebGLObjects(g,n);p(v,x!==undefined?x:true);this.autoClear&&
this.clear();C=g.__webGLObjects.length;for(x=0;x<C;x++){q=g.__webGLObjects[x];G=q.object;if(G.visible&&(!(G instanceof THREE.Mesh)||f(G))){if(G.autoUpdateMatrix){G.updateMatrix();G.matrix.flattenToArray(G._objectMatrixArray)}this.setupMatrices(G,n);k(q);q.render=true}else q.render=false}D=g.__webGLObjectsImmediate.length;for(x=0;x<D;x++){q=g.__webGLObjectsImmediate[x];G=q.object;if(G.visible){if(G.autoUpdateMatrix){G.updateMatrix();G.matrix.flattenToArray(G._objectMatrixArray)}this.setupMatrices(G,
n);l(q)}}m(THREE.NormalBlending);for(x=0;x<C;x++){q=g.__webGLObjects[x];if(q.render){G=q.object;H=q.buffer;L=q.opaque;e(G);for(q=0;q<L.count;q++){material=L.list[q];this.setDepthTest(material.depth_test);this.renderBuffer(n,J,Y,material,H,G)}}}for(x=0;x<D;x++){q=g.__webGLObjectsImmediate[x];G=q.object;if(G.visible){L=q.opaque;e(G);for(q=0;q<L.count;q++){material=L.list[q];this.setDepthTest(material.depth_test);z=this.setProgram(n,J,Y,material,G);G.render(function(T){c(T,z)})}}}for(x=0;x<C;x++){q=
g.__webGLObjects[x];if(q.render){G=q.object;H=q.buffer;L=q.transparent;e(G);for(q=0;q<L.count;q++){material=L.list[q];m(material.blending);this.setDepthTest(material.depth_test);this.renderBuffer(n,J,Y,material,H,G)}}}for(x=0;x<D;x++){q=g.__webGLObjectsImmediate[x];G=q.object;if(G.visible){L=q.transparent;e(G);for(q=0;q<L.count;q++){material=L.list[q];m(material.blending);this.setDepthTest(material.depth_test);z=this.setProgram(n,J,Y,material,G);G.render(function(T){c(T,z)})}}}if(v&&v.min_filter!==
THREE.NearestFilter&&v.min_filter!==THREE.LinearFilter){d.bindTexture(d.TEXTURE_2D,v.__webGLTexture);d.generateMipmap(d.TEXTURE_2D);d.bindTexture(d.TEXTURE_2D,null)}};this.initWebGLObjects=function(g,n){function v(J,Y,T,M){if(J[Y]==undefined){g.__webGLObjects.push({buffer:T,object:M,opaque:{list:[],count:0},transparent:{list:[],count:0}});J[Y]=1}}function x(J,Y,T){if(J[Y]==undefined){g.__webGLObjectsImmediate.push({object:T,opaque:{list:[],count:0},transparent:{list:[],count:0}});J[Y]=1}}var q,z,
L,C,D,G,H;if(!g.__webGLObjects){g.__webGLObjects=[];g.__webGLObjectsMap={};g.__webGLObjectsImmediate=[]}q=0;for(z=g.objects.length;q<z;q++){L=g.objects[q];D=L.geometry;if(g.__webGLObjectsMap[L.id]==undefined){g.__webGLObjectsMap[L.id]={};L._modelViewMatrix=new THREE.Matrix4;L._normalMatrixArray=new Float32Array(9);L._modelViewMatrixArray=new Float32Array(16);L._objectMatrixArray=new Float32Array(16);L.matrix.flattenToArray(L._objectMatrixArray)}H=g.__webGLObjectsMap[L.id];if(L instanceof THREE.Mesh){for(C in D.geometryChunks){G=
D.geometryChunks[C];if(!G.__webGLVertexBuffer){this.createMeshBuffers(G);this.initMeshBuffers(G,L);D.__dirtyVertices=true;D.__dirtyElements=true;D.__dirtyUvs=true;D.__dirtyNormals=true;D.__dirtyTangents=true;D.__dirtyColors=true}if(D.__dirtyVertices||D.__dirtyElements||D.__dirtyUvs||D.__dirtyNormals||D.__dirtyColors||D.__dirtyTangents)this.setMeshBuffers(G,L,d.DYNAMIC_DRAW);v(H,C,G,L)}D.__dirtyVertices=false;D.__dirtyElements=false;D.__dirtyUvs=false;D.__dirtyNormals=false;D.__dirtyTangents=false;
D.__dirtyColors=false}else if(L instanceof THREE.Line){if(!D.__webGLVertexBuffer){this.createLineBuffers(D);this.initLineBuffers(D);D.__dirtyVertices=true;D.__dirtyColors=true}if(D.__dirtyVertices||D.__dirtyColors)this.setLineBuffers(D,d.DYNAMIC_DRAW);v(H,0,D,L);D.__dirtyVertices=false;D.__dirtyColors=false}else if(L instanceof THREE.ParticleSystem){if(!D.__webGLVertexBuffer){this.createParticleBuffers(D);this.initParticleBuffers(D);D.__dirtyVertices=true;D.__dirtyColors=true}if(D.__dirtyVertices||
D.__dirtyColors||L.sortParticles)this.setParticleBuffers(D,d.DYNAMIC_DRAW,L,n);v(H,0,D,L);D.__dirtyVertices=false;D.__dirtyColors=false}else L instanceof THREE.MarchingCubes&&x(H,0,L)}};this.removeObject=function(g,n){var v,x;for(v=g.__webGLObjects.length-1;v>=0;v--){x=g.__webGLObjects[v].object;n==x&&g.__webGLObjects.splice(v,1)}};this.setupMatrices=function(g,n){g._modelViewMatrix.multiplyToArray(n.matrix,g.matrix,g._modelViewMatrixArray);g._normalMatrix=THREE.Matrix4.makeInvert3x3(g._modelViewMatrix).transposeIntoArray(g._normalMatrixArray)};
this.setDepthTest=function(g){g?d.enable(d.DEPTH_TEST):d.disable(d.DEPTH_TEST)};this.setFaceCulling=function(g,n){if(g){!n||n=="ccw"?d.frontFace(d.CCW):d.frontFace(d.CW);if(g=="back")d.cullFace(d.BACK);else g=="front"?d.cullFace(d.FRONT):d.cullFace(d.FRONT_AND_BACK);d.enable(d.CULL_FACE)}else d.disable(d.CULL_FACE)};this.supportsVertexTextures=function(){return d.getParameter(d.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec4 cubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = vec4( mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity ), opacity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif",
envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D light_map;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",
lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( light_map, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}",
lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mColor = vec4( diffuse, opacity );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif\ngl_FragColor = gl_FragColor * totalLight;",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\nvColor = color;\n#endif"};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},light_map:{type:"t",value:2,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",
value:1},ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{opacity:{type:"f",
value:1}},fragment_shader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}",vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsLib.common,fragment_shader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.Snippets.color_pars_fragment,
THREE.Snippets.map_pars_fragment,THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.Snippets.map_fragment,THREE.Snippets.lightmap_fragment,THREE.Snippets.color_fragment,THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.color_pars_vertex,
"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,THREE.Snippets.color_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},lambert:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights]),fragment_shader:["uniform vec3 diffuse;\nuniform float opacity;\nvarying vec3 vLightWeighting;",THREE.Snippets.color_pars_fragment,THREE.Snippets.map_pars_fragment,
THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );\ngl_FragColor = gl_FragColor * vec4( vLightWeighting, 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lightmap_fragment,THREE.Snippets.color_fragment,THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,
THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,THREE.Snippets.color_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,THREE.Snippets.color_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},phong:{uniforms:Uniforms.merge([THREE.UniformsLib.common,
THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),fragment_shader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",THREE.Snippets.color_pars_fragment,THREE.Snippets.map_pars_fragment,THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,
THREE.Snippets.lights_pars_fragment,"void main() {\ngl_FragColor = vec4( vLightWeighting, 1.0 );",THREE.Snippets.lights_fragment,THREE.Snippets.map_fragment,THREE.Snippets.lightmap_fragment,THREE.Snippets.color_fragment,THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,THREE.Snippets.envmap_pars_vertex,
THREE.Snippets.lights_pars_vertex,THREE.Snippets.color_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,THREE.Snippets.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",THREE.Snippets.lights_vertex,
"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},particle_basic:{uniforms:THREE.UniformsLib.particle,fragment_shader:["uniform vec3 psColor;\nuniform float opacity;",THREE.Snippets.color_pars_fragment,THREE.Snippets.map_particle_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.Snippets.map_particle_fragment,THREE.Snippets.color_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["uniform float size;",THREE.Snippets.color_pars_vertex,
"void main() {",THREE.Snippets.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\ngl_PointSize = size;\n}"].join("\n")}};THREE.RenderableObject=function(){this.z=this.object=null};
THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};
THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
THREE.Detector={canvas:!!document.createElement("canvas").getContext,webgl:window.Uint8Array!=undefined,workers:!!window.Worker,addGetWebGLMessage:function(a){var b=document.body,c="oldie";if(a){if(a.parent!==undefined)b=a.parent;if(a.id!==undefined)c=a.id}a=document.createElement("center");var e=document.createElement("div");e.innerHTML='Sorry, your browser doesn\'t support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation">WebGL</a><br/>\n<br/>\nPlease try in\n<a href="http://www.google.com/chrome">Chrome 9+</a> /\n<a href="http://www.mozilla.com/en-US/firefox/all-beta.html">Firefox 4+</a> /\n<a href="http://nightly.webkit.org/">Safari OSX 10.6+</a>';e.id=
c;c=e.style;c.fontFamily="monospace";c.fontSize="13px";c.textAlign="center";c.background="#eee";c.color="#000";c.padding="1em";c.width="475px";c.margin="5em auto 0";a.appendChild(e);b.appendChild(a);return e}};
var GeometryUtils={merge:function(a,b){var c=b instanceof THREE.Mesh,e=a.vertices.length,h=c?b.geometry:b,f=a.vertices,j=h.vertices,l=a.faces,k=h.faces,m=a.uvs;h=h.uvs;c&&b.autoUpdateMatrix&&b.updateMatrix();for(var p=0,y=j.length;p<y;p++){var t=new THREE.Vertex(j[p].position.clone());c&&b.matrix.multiplyVector3(t.position);f.push(t)}p=0;for(y=k.length;p<y;p++){j=k[p];var o,d=j.vertexNormals;if(j instanceof THREE.Face3)o=new THREE.Face3(j.a+e,j.b+e,j.c+e);else if(j instanceof THREE.Face4)o=new THREE.Face4(j.a+
e,j.b+e,j.c+e,j.d+e);o.centroid.copy(j.centroid);o.normal.copy(j.normal);c=0;for(f=d.length;c<f;c++){t=d[c];o.vertexNormals.push(t.clone())}o.materials=j.materials.slice();l.push(o)}p=0;for(y=h.length;p<y;p++){e=h[p];l=[];c=0;for(f=e.length;c<f;c++)l.push(new THREE.UV(e[c].u,e[c].v));m.push(l)}}},ImageUtils={loadTexture:function(a,b,c){var e=new Image;e.onload=function(){this.loaded=true;c&&c(this)};e.src=a;return new THREE.Texture(e,b)},loadArray:function(a,b){var c,e,h=[];c=h.loadCount=0;for(e=
a.length;c<e;++c){h[c]=new Image;h[c].loaded=0;h[c].onload=function(){h.loadCount+=1;this.loaded=true;b&&b(this)};h[c].src=a[c]}return h}},SceneUtils={loadScene:function(a,b,c,e){a=new Worker(a);a.postMessage(0);a.onmessage=function(h){function f(){for(p in N.objects)if(!n.objects[p]){A=N.objects[p];if(u=n.geometries[A.geometry]){$=[];for(i=0;i<A.materials.length;i++)$[i]=n.materials[A.materials[i]];E=A.position;r=A.rotation;s=A.scale;object=new THREE.Mesh(u,$);object.position.set(E[0],E[1],E[2]);
object.rotation.set(r[0],r[1],r[2]);object.scale.set(s[0],s[1],s[2]);object.visible=A.visible;n.scene.addObject(object);n.objects[p]=object}}}function j(v){return function(x){n.geometries[v]=x;f();W-=1;l()}}function l(){e({total_models:X,total_textures:g,loaded_models:X-W,loaded_textures:g-R},n);W==0&&R==0&&c(n)}var k,m,p,y,t,o,d,A,E,w,F,u,I,Q,$,N,K,W,R,X,g,n;N=h.data;K=new THREE.Loader;R=W=0;n={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{}};
h=function(){R-=1;l()};for(t in N.cameras){w=N.cameras[t];if(w.type=="perspective")I=new THREE.Camera(w.fov,w.aspect,w.near,w.far);else if(w.type=="ortho"){I=new THREE.Camera;I.projectionMatrix=THREE.Matrix4.makeOrtho(w.left,w.right,w.top,w.bottom,w.near,w.far)}E=w.position;w=w.target;I.position.set(E[0],E[1],E[2]);I.target.position.set(w[0],w[1],w[2]);n.cameras[t]=I}for(y in N.lights){t=N.lights[y];if(t.type=="directional"){E=t.direction;light=new THREE.DirectionalLight;light.position.set(E[0],E[1],
E[2]);light.position.normalize()}else if(t.type=="point"){E=t.position;light=new THREE.PointLight;light.position.set(E[0],E[1],E[2])}w=t.color;i=t.intensity||1;light.color.setRGB(w[0]*i,w[1]*i,w[2]*i);n.scene.addLight(light);n.lights[y]=light}for(o in N.fogs){y=N.fogs[o];if(y.type=="linear")Q=new THREE.Fog(0,y.near,y.far);else if(y.type=="exp2")Q=new THREE.FogExp2(0,y.density);w=y.color;Q.color.setRGB(w[0],w[1],w[2]);n.fogs[o]=Q}if(n.cameras&&N.defaults.camera)n.currentCamera=n.cameras[N.defaults.camera];
if(n.fogs&&N.defaults.fog)n.scene.fog=n.fogs[N.defaults.fog];w=N.defaults.bgcolor;n.bgColor=new THREE.Color;n.bgColor.setRGB(w[0],w[1],w[2]);n.bgColorAlpha=N.defaults.bgalpha;for(k in N.geometries){o=N.geometries[k];if(o.type=="bin_mesh"||o.type=="ascii_mesh")W+=1}X=W;for(k in N.geometries){o=N.geometries[k];if(o.type=="cube"){u=new Cube(o.width,o.height,o.depth,o.segments_width,o.segments_height,null,o.flipped,o.sides);n.geometries[k]=u}else if(o.type=="plane"){u=new Plane(o.width,o.height,o.segments_width,
o.segments_height);n.geometries[k]=u}else if(o.type=="sphere"){u=new Sphere(o.radius,o.segments_width,o.segments_height);n.geometries[k]=u}else if(o.type=="cylinder"){u=new Cylinder(o.numSegs,o.topRad,o.botRad,o.height,o.topOffset,o.botOffset);n.geometries[k]=u}else if(o.type=="torus"){u=new Torus(o.radius,o.tube,o.segmentsR,o.segmentsT);n.geometries[k]=u}else if(o.type=="icosahedron"){u=new Icosahedron(o.subdivisions);n.geometries[k]=u}else if(o.type=="bin_mesh")K.loadBinary({model:o.url,callback:j(k)});
else o.type=="ascii_mesh"&&K.loadAscii({model:o.url,callback:j(k)})}for(d in N.textures){k=N.textures[d];R+=k.url instanceof Array?k.url.length:1}g=R;for(d in N.textures){k=N.textures[d];if(k.mapping!=undefined&&THREE[k.mapping]!=undefined)k.mapping=new THREE[k.mapping];if(k.url instanceof Array){o=ImageUtils.loadArray(k.url,h);o=new THREE.Texture(o,k.mapping)}else{o=ImageUtils.loadTexture(k.url,k.mapping,h);if(THREE[k.min_filter]!=undefined)o.min_filter=THREE[k.min_filter];if(THREE[k.mag_filter]!=
undefined)o.mag_filter=THREE[k.mag_filter]}n.textures[d]=o}for(m in N.materials){d=N.materials[m];for(F in d.parameters)if(F=="env_map"||F=="map"||F=="light_map")d.parameters[F]=n.textures[d.parameters[F]];else if(F=="shading")d.parameters[F]=d.parameters[F]=="flat"?THREE.FlatShading:THREE.SmoothShading;else if(F=="blending")d.parameters[F]=THREE[d.parameters[F]]?THREE[d.parameters[F]]:THREE.NormalBlending;else if(F=="combine")d.parameters[F]=d.parameters[F]=="MixOperation"?THREE.MixOperation:THREE.MultiplyOperation;
d=new THREE[d.type](d.parameters);n.materials[m]=d}f();b(n)}},addMesh:function(a,b,c,e,h,f,j,l,k,m){b=new THREE.Mesh(b,m);b.scale.x=b.scale.y=b.scale.z=c;b.position.x=e;b.position.y=h;b.position.z=f;b.rotation.x=j;b.rotation.y=l;b.rotation.z=k;a.addObject(b);return b},addPanoramaCubeWebGL:function(a,b,c){var e=ShaderUtils.lib.cube;e.uniforms.tCube.texture=c;c=new THREE.MeshShaderMaterial({fragment_shader:e.fragment_shader,vertex_shader:e.vertex_shader,uniforms:e.uniforms});b=new THREE.Mesh(new Cube(b,
b,b,1,1,null,true),c);a.addObject(b);return b},addPanoramaCube:function(a,b,c){var e=[];e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(c[0])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(c[1])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(c[2])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(c[3])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(c[4])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(c[5])}));b=new THREE.Mesh(new Cube(b,
b,b,1,1,e,true),new THREE.MeshFaceMaterial);a.addObject(b);return b},addPanoramaCubePlanes:function(a,b,c){var e=b/2;b=new Plane(b,b);var h=Math.PI/2,f=Math.PI;SceneUtils.addMesh(a,b,1,0,0,-e,0,0,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(c[5])}));SceneUtils.addMesh(a,b,1,-e,0,0,0,h,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(c[0])}));SceneUtils.addMesh(a,b,1,e,0,0,0,-h,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(c[1])}));SceneUtils.addMesh(a,b,1,0,e,0,h,0,f,new THREE.MeshBasicMaterial({map:new THREE.Texture(c[2])}));
SceneUtils.addMesh(a,b,1,0,-e,0,-h,0,f,new THREE.MeshBasicMaterial({map:new THREE.Texture(c[3])}))}},ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertex_shader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tNormal:{type:"t",value:2,texture:null},tAO:{type:"t",value:3,texture:null},uNormalScale:{type:"f",value:1},tDisplacement:{type:"t",value:4,texture:null},uDisplacementBias:{type:"f",value:-0.5},uDisplacementScale:{type:"f",value:2.5},uPointLightPos:{type:"v3",value:new THREE.Vector3},uPointLightColor:{type:"c",value:new THREE.Color(15658734)},uDirLightPos:{type:"v3",value:new THREE.Vector3},
uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30}},fragment_shader:"uniform vec3 uDirLightPos;\nuniform vec3 uAmbientLightColor;\nuniform vec3 uDirLightColor;\nuniform vec3 uPointLightColor;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform bool enableDiffuse;\nuniform bool enableAO;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tAO;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 diffuseTex = vec3( 1.0, 1.0, 1.0 );\nvec3 aoTex = vec3( 1.0, 1.0, 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse )\ndiffuseTex = texture2D( tDiffuse, vUv ).xyz;\nif( enableAO )\naoTex = texture2D( tAO, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec3 pointVector = normalize( vPointLightVector );\nvec3 pointHalfVector = normalize( vPointLightVector + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, uShininess );\npointDiffuse  += vec4( uDiffuseColor, 1.0 ) * pointDiffuseWeight;\npointSpecular += vec4( uSpecularColor, 1.0 ) * pointSpecularWeight;\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 lDirection = viewMatrix * vec4( uDirLightPos, 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, uShininess );\ndirDiffuse  += vec4( uDiffuseColor, 1.0 ) * dirDiffuseWeight;\ndirSpecular += vec4( uSpecularColor, 1.0 ) * dirSpecularWeight;\nvec4 totalLight = vec4( uAmbientLightColor * uAmbientColor, 1.0 );\ntotalLight += vec4( uDirLightColor, 1.0 ) * ( dirDiffuse + dirSpecular );\ntotalLight += vec4( uPointLightColor, 1.0 ) * ( pointDiffuse + pointSpecular );\ngl_FragColor = vec4( totalLight.xyz * aoTex * diffuseTex, 1.0 );\n}",
vertex_shader:"attribute vec4 tangent;\nuniform vec3 uPointLightPos;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec4 lPosition = viewMatrix * vec4( uPointLightPos, 1.0 );\nvPointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}"},
cube:{uniforms:{tCube:{type:"t",value:1,texture:null}},vertex_shader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( - wPos.x, wPos.yz ) );\n}"},convolution:{uniforms:{tDiffuse:{type:"t",
value:0,texture:null},uImageIncrement:{type:"v2",value:new THREE.Vector2(0.001953125,0)},cKernel:{type:"fv1",value:[]}},vertex_shader:"varying vec2 vUv;\nuniform vec2 uImageIncrement;\nvoid main(void) {\nvUv = uv - ((KERNEL_SIZE - 1.0) / 2.0) * uImageIncrement;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"varying vec2 vUv;\nuniform sampler2D tDiffuse;\nuniform vec2 uImageIncrement;\nuniform float cKernel[KERNEL_SIZE];\nvoid main(void) {\nvec2 imageCoord = vUv;\nvec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\nfor( int i=0; i<KERNEL_SIZE; ++i ) {\nsum += texture2D( tDiffuse, imageCoord ) * cKernel[i];\nimageCoord += uImageIncrement;\n}\ngl_FragColor = sum;\n}"},
film:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},time:{type:"f",value:0},grayscale:{type:"i",value:1}},vertex_shader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"varying vec2 vUv;\nuniform sampler2D tDiffuse;\nuniform float time;\nuniform bool grayscale;\nconst float fNintensity = 0.35;\nconst float fSintensity = 0.35;\nconst float fScount = 4096.0;\nvoid main() {\nvec4 cTextureScreen = texture2D( tDiffuse, vUv );\nfloat x = vUv.x * vUv.y * time *  1000.0;\nx = mod( x, 13.0 ) * mod( x, 123.0 );\nfloat dx = mod( x, 0.01 );\nvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\nvec2 sc = vec2( sin(vUv.y * fScount), cos(vUv.y * fScount) );\ncResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * fSintensity;\ncResult = cTextureScreen.rgb + clamp( fNintensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\nif( grayscale ) {\ncResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\n}\ngl_FragColor =  vec4( cResult, cTextureScreen.a );\n}"},
screen:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},opacity:{type:"f",value:1}},vertex_shader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"varying vec2 vUv;\nuniform sampler2D tDiffuse;\nuniform float opacity;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\ngl_FragColor = opacity * texel;\n}"},basic:{uniforms:{},vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragment_shader:"void main() {\ngl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\n}"}},buildKernel:function(a){var b,c,e,h,f=2*Math.ceil(a*3)+1;if(f>25)f=25;h=(f-1)*0.5;c=Array(f);for(b=e=0;b<f;++b){c[b]=Math.exp(-((b-h)*(b-h))/(2*a*a));e+=c[b]}for(b=0;b<f;++b)c[b]/=e;return c}},Cube=function(a,b,c,e,h,f,j,l){function k(A,E,w,F,u,I,Q,$){var N,K,W=e||1,R=h||1,X=W+1,g=R+1,n=u/2,v=I/2;u=u/W;var x=I/R,q=m.vertices.length;if(A=="x"&&E=="y"||A=="y"&&E=="x")N="z";else if(A=="x"&&E=="z"||A=="z"&&E=="x")N="y";else if(A==
"z"&&E=="y"||A=="y"&&E=="z")N="x";for(K=0;K<g;K++)for(I=0;I<X;I++){var z=new THREE.Vector3;z[A]=(I*u-n)*w;z[E]=(K*x-v)*F;z[N]=Q;m.vertices.push(new THREE.Vertex(z))}for(K=0;K<R;K++)for(I=0;I<W;I++){m.faces.push(new THREE.Face4(I+X*K+q,I+X*(K+1)+q,I+1+X*(K+1)+q,I+1+X*K+q,null,$));m.uvs.push([new THREE.UV(I/W,K/R),new THREE.UV(I/W,(K+1)/R),new THREE.UV((I+1)/W,(K+1)/R),new THREE.UV((I+1)/W,K/R)])}}THREE.Geometry.call(this);var m=this,p=a/2,y=b/2,t=c/2;j=j?-1:1;if(f!==undefined)if(f instanceof Array)this.materials=
f;else{this.materials=[];for(var o=0;o<6;o++)this.materials.push([f])}else this.materials=[];this.sides={px:true,nx:true,py:true,ny:true,pz:true,nz:true};if(l!=undefined)for(var d in l)if(this.sides[d]!=undefined)this.sides[d]=l[d];this.sides.px&&k("z","y",1*j,-1,c,b,-p,this.materials[0]);this.sides.nx&&k("z","y",-1*j,-1,c,b,p,this.materials[1]);this.sides.py&&k("x","z",1*j,1,a,c,y,this.materials[2]);this.sides.ny&&k("x","z",1*j,-1,a,c,-y,this.materials[3]);this.sides.pz&&k("x","y",1*j,-1,a,b,t,this.materials[4]);
this.sides.nz&&k("x","y",-1*j,-1,a,b,-t,this.materials[5]);(function(){for(var A=[],E=[],w=0,F=m.vertices.length;w<F;w++){for(var u=m.vertices[w],I=false,Q=0,$=A.length;Q<$;Q++){var N=A[Q];if(u.position.x==N.position.x&&u.position.y==N.position.y&&u.position.z==N.position.z){E[w]=Q;I=true;break}}if(!I){E[w]=A.length;A.push(new THREE.Vertex(u.position.clone()))}}w=0;for(F=m.faces.length;w<F;w++){u=m.faces[w];u.a=E[u.a];u.b=E[u.b];u.c=E[u.c];u.d=E[u.d]}m.vertices=A})();this.computeCentroids();this.computeFaceNormals();
this.sortFacesByMaterial()};Cube.prototype=new THREE.Geometry;Cube.prototype.constructor=Cube;
var Cylinder=function(a,b,c,e,h){function f(m,p,y){j.vertices.push(new THREE.Vertex(new THREE.Vector3(m,p,y)))}THREE.Geometry.call(this);var j=this,l=Math.PI,k;for(k=0;k<a;k++)f(Math.sin(2*l*k/a)*b,Math.cos(2*l*k/a)*b,0);for(k=0;k<a;k++)f(Math.sin(2*l*k/a)*c,Math.cos(2*l*k/a)*c,e);for(k=0;k<a;k++)j.faces.push(new THREE.Face4(k,k+a,a+(k+1)%a,(k+1)%a));if(c!=0){f(0,0,-h);for(k=a;k<a+a/2;k++)j.faces.push(new THREE.Face4(2*a,(2*k-2*a)%a,(2*k-2*a+1)%a,(2*k-2*a+2)%a))}if(b!=0){f(0,0,e+h);for(k=a+a/2;k<
2*a;k++)j.faces.push(new THREE.Face4((2*k-2*a+2)%a+a,(2*k-2*a+1)%a+a,(2*k-2*a)%a+a,2*a+1))}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cylinder.prototype=new THREE.Geometry;Cylinder.prototype.constructor=Cylinder;
var Plane=function(a,b,c,e){THREE.Geometry.call(this);var h,f=a/2,j=b/2;c=c||1;e=e||1;var l=c+1,k=e+1;a=a/c;var m=b/e;for(h=0;h<k;h++)for(b=0;b<l;b++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(b*a-f,-(h*m-j),0)));for(h=0;h<e;h++)for(b=0;b<c;b++){this.faces.push(new THREE.Face4(b+l*h,b+l*(h+1),b+1+l*(h+1),b+1+l*h));this.uvs.push([new THREE.UV(b/c,h/e),new THREE.UV(b/c,(h+1)/e),new THREE.UV((b+1)/c,(h+1)/e),new THREE.UV((b+1)/c,h/e)])}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};
Plane.prototype=new THREE.Geometry;Plane.prototype.constructor=Plane;
var Sphere=function(a,b,c){THREE.Geometry.call(this);var e,h=Math.PI,f=Math.max(3,b||8),j=Math.max(2,c||6);b=[];for(c=0;c<j+1;c++){e=c/j;var l=a*Math.cos(e*h),k=a*Math.sin(e*h),m=[],p=0;for(e=0;e<f;e++){var y=2*e/f,t=k*Math.sin(y*h);y=k*Math.cos(y*h);(c==0||c==j)&&e>0||(p=this.vertices.push(new THREE.Vertex(new THREE.Vector3(y,l,t)))-1);m.push(p)}b.push(m)}var o,d,A;h=b.length;for(c=0;c<h;c++){f=b[c].length;if(c>0)for(e=0;e<f;e++){m=e==f-1;j=b[c][m?0:e+1];l=b[c][m?f-1:e];k=b[c-1][m?f-1:e];m=b[c-1][m?
0:e+1];t=c/(h-1);o=(c-1)/(h-1);d=(e+1)/f;y=e/f;p=new THREE.UV(1-d,t);t=new THREE.UV(1-y,t);y=new THREE.UV(1-y,o);var E=new THREE.UV(1-d,o);if(c<b.length-1){o=this.vertices[j].position.clone();d=this.vertices[l].position.clone();A=this.vertices[k].position.clone();o.normalize();d.normalize();A.normalize();this.faces.push(new THREE.Face3(j,l,k,[new THREE.Vector3(o.x,o.y,o.z),new THREE.Vector3(d.x,d.y,d.z),new THREE.Vector3(A.x,A.y,A.z)]));this.uvs.push([p,t,y])}if(c>1){o=this.vertices[j].position.clone();
d=this.vertices[k].position.clone();A=this.vertices[m].position.clone();o.normalize();d.normalize();A.normalize();this.faces.push(new THREE.Face3(j,k,m,[new THREE.Vector3(o.x,o.y,o.z),new THREE.Vector3(d.x,d.y,d.z),new THREE.Vector3(A.x,A.y,A.z)]));this.uvs.push([p,y,E])}}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial();this.boundingSphere={radius:a}};Sphere.prototype=new THREE.Geometry;Sphere.prototype.constructor=Sphere;
var Torus=function(a,b,c,e){this.radius=a||100;this.tube=b||40;this.segmentsR=c||8;this.segmentsT=e||6;a=[];THREE.Geometry.call(this);for(b=0;b<=this.segmentsR;++b)for(c=0;c<=this.segmentsT;++c){e=c/this.segmentsT*2*Math.PI;var h=b/this.segmentsR*2*Math.PI;this.vertices.push(new THREE.Vertex(new THREE.Vector3((this.radius+this.tube*Math.cos(h))*Math.cos(e),(this.radius+this.tube*Math.cos(h))*Math.sin(e),this.tube*Math.sin(h))));a.push([c/this.segmentsT,1-b/this.segmentsR])}for(b=1;b<=this.segmentsR;++b)for(c=
1;c<=this.segmentsT;++c){e=(this.segmentsT+1)*b+c;h=(this.segmentsT+1)*b+c-1;var f=(this.segmentsT+1)*(b-1)+c-1,j=(this.segmentsT+1)*(b-1)+c;this.faces.push(new THREE.Face4(e,h,f,j));this.uvs.push([new THREE.UV(a[e][0],a[e][1]),new THREE.UV(a[h][0],a[h][1]),new THREE.UV(a[f][0],a[f][1]),new THREE.UV(a[j][0],a[j][1])])}delete a;this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()};Torus.prototype=new THREE.Geometry;Torus.prototype.constructor=Torus;
var Icosahedron=function(a){function b(y,t,o){var d=Math.sqrt(y*y+t*t+o*o);return h.vertices.push(new THREE.Vertex(new THREE.Vector3(y/d,t/d,o/d)))-1}function c(y,t,o,d){d.faces.push(new THREE.Face3(y,t,o))}function e(y,t){var o=h.vertices[y].position,d=h.vertices[t].position;return b((o.x+d.x)/2,(o.y+d.y)/2,(o.z+d.z)/2)}var h=this,f=new THREE.Geometry,j;this.subdivisions=a||0;THREE.Geometry.call(this);a=(1+Math.sqrt(5))/2;b(-1,a,0);b(1,a,0);b(-1,-a,0);b(1,-a,0);b(0,-1,a);b(0,1,a);b(0,-1,-a);b(0,
1,-a);b(a,0,-1);b(a,0,1);b(-a,0,-1);b(-a,0,1);c(0,11,5,f);c(0,5,1,f);c(0,1,7,f);c(0,7,10,f);c(0,10,11,f);c(1,5,9,f);c(5,11,4,f);c(11,10,2,f);c(10,7,6,f);c(7,1,8,f);c(3,9,4,f);c(3,4,2,f);c(3,2,6,f);c(3,6,8,f);c(3,8,9,f);c(4,9,5,f);c(2,4,11,f);c(6,2,10,f);c(8,6,7,f);c(9,8,1,f);for(a=0;a<this.subdivisions;a++){j=new THREE.Geometry;for(var l in f.faces){var k=e(f.faces[l].a,f.faces[l].b),m=e(f.faces[l].b,f.faces[l].c),p=e(f.faces[l].c,f.faces[l].a);c(f.faces[l].a,k,p,j);c(f.faces[l].b,m,k,j);c(f.faces[l].c,
p,m,j);c(k,m,p,j)}f.faces=j.faces}h.faces=f.faces;delete f;delete j;this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()};Icosahedron.prototype=new THREE.Geometry;Icosahedron.prototype.constructor=Icosahedron;
function LathedObject(a,b,c){THREE.Geometry.call(this);b=b||12;c=c||2*Math.PI;b=c/b;for(var e=[],h=[],f=[],j=[],l=0;l<a.length;l++){this.vertices.push(new THREE.Vertex(a[l]));h[l]=this.vertices.length-1;e[l]=new THREE.Vector3(a[l].x,a[l].y,a[l].z)}for(var k=THREE.Matrix4.rotationZMatrix(b),m=0;m<=c+0.0010;m+=b){for(l=0;l<e.length;l++)if(m<c){e[l]=k.multiplyVector3(e[l].clone());this.vertices.push(new THREE.Vertex(e[l]));f[l]=this.vertices.length-1}else f=j;if(m==0)j=h;for(l=0;l<h.length-1;l++){this.faces.push(new THREE.Face4(f[l],
f[l+1],h[l+1],h[l]));this.uvs.push([new THREE.UV(m/c,l/a.length),new THREE.UV(m/c,(l+1)/a.length),new THREE.UV((m-b)/c,(l+1)/a.length),new THREE.UV((m-b)/c,l/a.length)])}h=f;f=[]}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()}LathedObject.prototype=new THREE.Geometry;LathedObject.prototype.constructor=LathedObject;if(!window.Int32Array){window.Int32Array=Array;window.Float32Array=Array}
THREE.MarchingCubes=function(a,b){THREE.Object3D.call(this);this.materials=b instanceof Array?b:[b];this.init=function(c){this.isolation=80;this.size=c;this.size2=this.size*this.size;this.size3=this.size2*this.size;this.halfsize=this.size/2;this.delta=2/this.size;this.yd=this.size;this.zd=this.size2;this.field=new Float32Array(this.size3);this.normal_cache=new Float32Array(this.size3*3);this.vlist=new Float32Array(36);this.nlist=new Float32Array(36);this.firstDraw=true;this.maxCount=4096;this.count=
0;this.hasNormal=this.hasPos=false;this.positionArray=new Float32Array(this.maxCount*3);this.normalArray=new Float32Array(this.maxCount*3)};this.lerp=function(c,e,h){return c+(e-c)*h};this.VIntX=function(c,e,h,f,j,l,k,m,p,y){j=(j-p)/(y-p);p=this.normal_cache;e[f]=l+j*this.delta;e[f+1]=k;e[f+2]=m;h[f]=this.lerp(p[c],p[c+3],j);h[f+1]=this.lerp(p[c+1],p[c+4],j);h[f+2]=this.lerp(p[c+2],p[c+5],j)};this.VIntY=function(c,e,h,f,j,l,k,m,p,y){j=(j-p)/(y-p);p=this.normal_cache;e[f]=l;e[f+1]=k+j*this.delta;e[f+
2]=m;e=c+this.yd*3;h[f]=this.lerp(p[c],p[e],j);h[f+1]=this.lerp(p[c+1],p[e+1],j);h[f+2]=this.lerp(p[c+2],p[e+2],j)};this.VIntZ=function(c,e,h,f,j,l,k,m,p,y){j=(j-p)/(y-p);p=this.normal_cache;e[f]=l;e[f+1]=k;e[f+2]=m+j*this.delta;e=c+this.zd*3;h[f]=this.lerp(p[c],p[e],j);h[f+1]=this.lerp(p[c+1],p[e+1],j);h[f+2]=this.lerp(p[c+2],p[e+2],j)};this.compNorm=function(c){var e=c*3;if(this.normal_cache[e]==0){this.normal_cache[e]=this.field[c-1]-this.field[c+1];this.normal_cache[e+1]=this.field[c-this.yd]-
this.field[c+this.yd];this.normal_cache[e+2]=this.field[c-this.zd]-this.field[c+this.zd]}};this.polygonize=function(c,e,h,f,j,l){var k=f+1,m=f+this.yd,p=f+this.zd,y=k+this.yd,t=k+this.zd,o=f+this.yd+this.zd,d=k+this.yd+this.zd,A=0,E=this.field[f],w=this.field[k],F=this.field[m],u=this.field[y],I=this.field[p],Q=this.field[t],$=this.field[o],N=this.field[d];if(E<j)A|=1;if(w<j)A|=2;if(F<j)A|=8;if(u<j)A|=4;if(I<j)A|=16;if(Q<j)A|=32;if($<j)A|=128;if(N<j)A|=64;var K=THREE.edgeTable[A];if(K==0)return 0;
var W=this.delta,R=c+W,X=e+W;W=h+W;if(K&1){this.compNorm(f);this.compNorm(k);this.VIntX(f*3,this.vlist,this.nlist,0,j,c,e,h,E,w)}if(K&2){this.compNorm(k);this.compNorm(y);this.VIntY(k*3,this.vlist,this.nlist,3,j,R,e,h,w,u)}if(K&4){this.compNorm(m);this.compNorm(y);this.VIntX(m*3,this.vlist,this.nlist,6,j,c,X,h,F,u)}if(K&8){this.compNorm(f);this.compNorm(m);this.VIntY(f*3,this.vlist,this.nlist,9,j,c,e,h,E,F)}if(K&16){this.compNorm(p);this.compNorm(t);this.VIntX(p*3,this.vlist,this.nlist,12,j,c,e,W,
I,Q)}if(K&32){this.compNorm(t);this.compNorm(d);this.VIntY(t*3,this.vlist,this.nlist,15,j,R,e,W,Q,N)}if(K&64){this.compNorm(o);this.compNorm(d);this.VIntX(o*3,this.vlist,this.nlist,18,j,c,X,W,$,N)}if(K&128){this.compNorm(p);this.compNorm(o);this.VIntY(p*3,this.vlist,this.nlist,21,j,c,e,W,I,$)}if(K&256){this.compNorm(f);this.compNorm(p);this.VIntZ(f*3,this.vlist,this.nlist,24,j,c,e,h,E,I)}if(K&512){this.compNorm(k);this.compNorm(t);this.VIntZ(k*3,this.vlist,this.nlist,27,j,R,e,h,w,Q)}if(K&1024){this.compNorm(y);
this.compNorm(d);this.VIntZ(y*3,this.vlist,this.nlist,30,j,R,X,h,u,N)}if(K&2048){this.compNorm(m);this.compNorm(o);this.VIntZ(m*3,this.vlist,this.nlist,33,j,c,X,h,F,$)}A<<=4;for(j=f=0;THREE.triTable[A+j]!=-1;){c=A+j;e=c+1;h=c+2;this.posnormtriv(this.vlist,this.nlist,3*THREE.triTable[c],3*THREE.triTable[e],3*THREE.triTable[h],l);j+=3;f++}return f};this.posnormtriv=function(c,e,h,f,j,l){var k=this.count*3;this.positionArray[k]=c[h];this.positionArray[k+1]=c[h+1];this.positionArray[k+2]=c[h+2];this.positionArray[k+
3]=c[f];this.positionArray[k+4]=c[f+1];this.positionArray[k+5]=c[f+2];this.positionArray[k+6]=c[j];this.positionArray[k+7]=c[j+1];this.positionArray[k+8]=c[j+2];this.normalArray[k]=e[h];this.normalArray[k+1]=e[h+1];this.normalArray[k+2]=e[h+2];this.normalArray[k+3]=e[f];this.normalArray[k+4]=e[f+1];this.normalArray[k+5]=e[f+2];this.normalArray[k+6]=e[j];this.normalArray[k+7]=e[j+1];this.normalArray[k+8]=e[j+2];this.hasNormal=this.hasPos=true;this.count+=3;this.count>=this.maxCount-3&&l(this)};this.begin=
function(){this.count=0;this.hasNormal=this.hasPos=false};this.end=function(c){if(this.count!=0){for(var e=this.count*3;e<this.positionArray.length;e++)this.positionArray[e]=0;c(this)}};this.addBall=function(c,e,h,f,j){var l=this.size*Math.sqrt(f/j),k=h*this.size,m=e*this.size,p=c*this.size,y=Math.floor(k-l);if(y<1)y=1;k=Math.floor(k+l);if(k>this.size-1)k=this.size-1;var t=Math.floor(m-l);if(t<1)t=1;m=Math.floor(m+l);if(m>this.size-1)m=this.size-1;var o=Math.floor(p-l);if(o<1)o=1;l=Math.floor(p+l);
if(l>this.size-1)l=this.size-1;var d,A,E,w,F,u;for(y=y;y<k;y++){p=this.size2*y;A=y/this.size-h;F=A*A;for(A=t;A<m;A++){E=p+this.size*A;d=A/this.size-e;u=d*d;for(d=o;d<l;d++){w=d/this.size-c;w=f/(1.0E-6+w*w+u+F)-j;if(w>0)this.field[E+d]+=w}}}};this.addPlaneX=function(c,e){var h,f,j,l,k,m=this.size,p=this.yd,y=this.zd,t=this.field,o=m*Math.sqrt(c/e);if(o>m)o=m;for(h=0;h<o;h++){f=h/m;f=f*f;l=c/(1.0E-4+f)-e;if(l>0)for(f=0;f<m;f++){k=h+f*p;for(j=0;j<m;j++)t[y*j+k]+=l}}};this.addPlaneY=function(c,e){var h,
f,j,l,k,m,p=this.size,y=this.yd,t=this.zd,o=this.field,d=p*Math.sqrt(c/e);if(d>p)d=p;for(f=0;f<d;f++){h=f/p;h=h*h;l=c/(1.0E-4+h)-e;if(l>0){k=f*y;for(h=0;h<p;h++){m=k+h;for(j=0;j<p;j++)o[t*j+m]+=l}}}};this.addPlaneZ=function(c,e){var h,f,j,l,k,m;size=this.size;yd=this.yd;zd=this.zd;field=this.field;dist=size*Math.sqrt(c/e);if(dist>size)dist=size;for(j=0;j<dist;j++){h=j/size;h=h*h;l=c/(1.0E-4+h)-e;if(l>0){k=zd*j;for(f=0;f<size;f++){m=k+f*yd;for(h=0;h<size;h++)field[m+h]+=l}}}};this.reset=function(){var c;
for(c=0;c<this.size3;c++){this.normal_cache[c*3]=0;this.field[c]=0}};this.render=function(c){this.begin();var e,h,f,j,l,k,m,p,y,t=this.size-2;for(j=1;j<t;j++){y=this.size2*j;m=(j-this.halfsize)/this.halfsize;for(f=1;f<t;f++){p=y+this.size*f;k=(f-this.halfsize)/this.halfsize;for(h=1;h<t;h++){l=(h-this.halfsize)/this.halfsize;e=p+h;this.polygonize(l,k,m,e,this.isolation,c)}}}this.end(c)};this.generateGeometry=function(){var c=0,e=new THREE.Geometry;this.render(function(h){var f,j,l,k,m,p,y,t;for(f=
0;f<h.count;f++){m=f*3;y=m+1;t=m+2;j=h.positionArray[m];l=h.positionArray[y];k=h.positionArray[t];p=new THREE.Vector3(j,l,k);j=h.normalArray[m];l=h.normalArray[y];k=h.normalArray[t];m=new THREE.Vector3(j,l,k);m.normalize();m=new THREE.Vertex(p,m);e.vertices.push(m)}nfaces=h.count/3;for(f=0;f<nfaces;f++){m=(c+f)*3;y=m+1;t=m+2;p=e.vertices[m].normal;j=e.vertices[y].normal;l=e.vertices[t].normal;m=new THREE.Face3(m,y,t,[p,j,l]);e.faces.push(m)}c+=nfaces;h.count=0});e.sortFacesByMaterial();return e};
this.init(a)};THREE.MarchingCubes.prototype=new THREE.Object3D;THREE.MarchingCubes.prototype.constructor=THREE.MarchingCubes;
THREE.edgeTable=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,
1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,
419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]);
THREE.triTable=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,
-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,
8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,
-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,
5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,
-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,
10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,
6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,
8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,
2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,
-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,
-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,
-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,
-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,
2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,
4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,
2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?this.addStatusElement():null};
THREE.Loader.prototype={addStatusElement:function(){var a=document.createElement("div");a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="#b00";a.style.color="#fff";a.style.width="140px";a.style.padding="0.25em 0.25em 0.25em 0.5em";a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ";b+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1E3).toFixed(2)+" KB";this.statusDomElement.innerHTML=
b},loadAsciiOld:function(a,b){var c=document.createElement("script");c.type="text/javascript";c.onload=b;c.src=a;document.getElementsByTagName("head")[0].appendChild(c)},loadAscii:function(a){var b=a.model,c=a.callback,e=a.texture_path?a.texture_path:THREE.Loader.prototype.extractUrlbase(b);a=(new Date).getTime();b=new Worker(b);b.onmessage=function(h){THREE.Loader.prototype.createModel(h.data,c,e)};b.postMessage(a)},loadBinary:function(a){var b=a.model,c=a.callback,e=a.texture_path?a.texture_path:
THREE.Loader.prototype.extractUrlbase(b),h=a.bin_path?a.bin_path:THREE.Loader.prototype.extractUrlbase(b);a=(new Date).getTime();b=new Worker(b);var f=this.showProgress?THREE.Loader.prototype.updateProgress:null;b.onmessage=function(j){THREE.Loader.prototype.loadAjaxBuffers(j.data.buffers,j.data.materials,c,h,e,f)};b.onerror=function(j){alert("worker.onerror: "+j.message+"\n"+j.data);j.preventDefault()};b.postMessage(a)},loadAjaxBuffers:function(a,b,c,e,h,f){var j=new XMLHttpRequest,l=e+"/"+a,k=0;
j.onreadystatechange=function(){if(j.readyState==4)j.status==200||j.status==0?THREE.Loader.prototype.createBinModel(j.responseText,c,h,b):alert("Couldn't load ["+l+"] ["+j.status+"]");else if(j.readyState==3){if(f){if(k==0)k=j.getResponseHeader("Content-Length");f({total:k,loaded:j.responseText.length})}}else if(j.readyState==2)k=j.getResponseHeader("Content-Length")};j.open("GET",l,true);j.overrideMimeType("text/plain; charset=x-user-defined");j.setRequestHeader("Content-Type","text/plain");j.send(null)},
createBinModel:function(a,b,c,e){var h=function(f){function j(B,P){var O=p(B,P),U=p(B,P+1),da=p(B,P+2),na=p(B,P+3),ia=(na<<1&255|da>>7)-127;O=(da&127)<<16|U<<8|O;if(O==0&&ia==-127)return 0;return(1-2*(na>>7))*(1+O*Math.pow(2,-23))*Math.pow(2,ia)}function l(B,P){var O=p(B,P),U=p(B,P+1),da=p(B,P+2);return(p(B,P+3)<<24)+(da<<16)+(U<<8)+O}function k(B,P){var O=p(B,P);return(p(B,P+1)<<8)+O}function m(B,P){var O=p(B,P);return O>127?O-256:O}function p(B,P){return B.charCodeAt(P)&255}function y(B){var P,
O,U;P=l(a,B);O=l(a,B+$);U=l(a,B+N);B=k(a,B+K);THREE.Loader.prototype.f3(w,P,O,U,B)}function t(B){var P,O,U,da,na,ia;P=l(a,B);O=l(a,B+$);U=l(a,B+N);da=k(a,B+K);na=l(a,B+W);ia=l(a,B+R);B=l(a,B+X);THREE.Loader.prototype.f3n(w,I,P,O,U,da,na,ia,B)}function o(B){var P,O,U,da;P=l(a,B);O=l(a,B+g);U=l(a,B+n);da=l(a,B+v);B=k(a,B+x);THREE.Loader.prototype.f4(w,P,O,U,da,B)}function d(B){var P,O,U,da,na,ia,fa,la;P=l(a,B);O=l(a,B+g);U=l(a,B+n);da=l(a,B+v);na=k(a,B+x);ia=l(a,B+q);fa=l(a,B+z);la=l(a,B+L);B=l(a,B+
C);THREE.Loader.prototype.f4n(w,I,P,O,U,da,na,ia,fa,la,B)}function A(B){var P,O;P=l(a,B);O=l(a,B+D);B=l(a,B+G);THREE.Loader.prototype.uv3(w.uvs,Q[P*2],Q[P*2+1],Q[O*2],Q[O*2+1],Q[B*2],Q[B*2+1])}function E(B){var P,O,U;P=l(a,B);O=l(a,B+H);U=l(a,B+J);B=l(a,B+Y);THREE.Loader.prototype.uv4(w.uvs,Q[P*2],Q[P*2+1],Q[O*2],Q[O*2+1],Q[U*2],Q[U*2+1],Q[B*2],Q[B*2+1])}var w=this,F=0,u,I=[],Q=[],$,N,K,W,R,X,g,n,v,x,q,z,L,C,D,G,H,J,Y,T,M,Z,ba,ha,ka;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(w,
e,f);u={signature:a.substr(F,8),header_bytes:p(a,F+8),vertex_coordinate_bytes:p(a,F+9),normal_coordinate_bytes:p(a,F+10),uv_coordinate_bytes:p(a,F+11),vertex_index_bytes:p(a,F+12),normal_index_bytes:p(a,F+13),uv_index_bytes:p(a,F+14),material_index_bytes:p(a,F+15),nvertices:l(a,F+16),nnormals:l(a,F+16+4),nuvs:l(a,F+16+8),ntri_flat:l(a,F+16+12),ntri_smooth:l(a,F+16+16),ntri_flat_uv:l(a,F+16+20),ntri_smooth_uv:l(a,F+16+24),nquad_flat:l(a,F+16+28),nquad_smooth:l(a,F+16+32),nquad_flat_uv:l(a,F+16+36),
nquad_smooth_uv:l(a,F+16+40)};F+=u.header_bytes;$=u.vertex_index_bytes;N=u.vertex_index_bytes*2;K=u.vertex_index_bytes*3;W=u.vertex_index_bytes*3+u.material_index_bytes;R=u.vertex_index_bytes*3+u.material_index_bytes+u.normal_index_bytes;X=u.vertex_index_bytes*3+u.material_index_bytes+u.normal_index_bytes*2;g=u.vertex_index_bytes;n=u.vertex_index_bytes*2;v=u.vertex_index_bytes*3;x=u.vertex_index_bytes*4;q=u.vertex_index_bytes*4+u.material_index_bytes;z=u.vertex_index_bytes*4+u.material_index_bytes+
u.normal_index_bytes;L=u.vertex_index_bytes*4+u.material_index_bytes+u.normal_index_bytes*2;C=u.vertex_index_bytes*4+u.material_index_bytes+u.normal_index_bytes*3;D=u.uv_index_bytes;G=u.uv_index_bytes*2;H=u.uv_index_bytes;J=u.uv_index_bytes*2;Y=u.uv_index_bytes*3;f=u.vertex_index_bytes*3+u.material_index_bytes;ka=u.vertex_index_bytes*4+u.material_index_bytes;T=u.ntri_flat*f;M=u.ntri_smooth*(f+u.normal_index_bytes*3);Z=u.ntri_flat_uv*(f+u.uv_index_bytes*3);ba=u.ntri_smooth_uv*(f+u.normal_index_bytes*
3+u.uv_index_bytes*3);ha=u.nquad_flat*ka;f=u.nquad_smooth*(ka+u.normal_index_bytes*4);ka=u.nquad_flat_uv*(ka+u.uv_index_bytes*4);F+=function(B){var P,O,U,da=u.vertex_coordinate_bytes*3,na=B+u.nvertices*da;for(B=B;B<na;B+=da){P=j(a,B);O=j(a,B+u.vertex_coordinate_bytes);U=j(a,B+u.vertex_coordinate_bytes*2);THREE.Loader.prototype.v(w,P,O,U)}return u.nvertices*da}(F);F+=function(B){var P,O,U,da=u.normal_coordinate_bytes*3,na=B+u.nnormals*da;for(B=B;B<na;B+=da){P=m(a,B);O=m(a,B+u.normal_coordinate_bytes);
U=m(a,B+u.normal_coordinate_bytes*2);I.push(P/127,O/127,U/127)}return u.nnormals*da}(F);F+=function(B){var P,O,U=u.uv_coordinate_bytes*2,da=B+u.nuvs*U;for(B=B;B<da;B+=U){P=j(a,B);O=j(a,B+u.uv_coordinate_bytes);Q.push(P,O)}return u.nuvs*U}(F);F=F;T=F+T;M=T+M;Z=M+Z;ba=Z+ba;ha=ba+ha;f=ha+f;ka=f+ka;(function(B){var P,O=u.vertex_index_bytes*3+u.material_index_bytes,U=O+u.uv_index_bytes*3,da=B+u.ntri_flat_uv*U;for(P=B;P<da;P+=U){y(P);A(P+O)}return da-B})(M);(function(B){var P,O=u.vertex_index_bytes*3+u.material_index_bytes+
u.normal_index_bytes*3,U=O+u.uv_index_bytes*3,da=B+u.ntri_smooth_uv*U;for(P=B;P<da;P+=U){t(P);A(P+O)}return da-B})(Z);(function(B){var P,O=u.vertex_index_bytes*4+u.material_index_bytes,U=O+u.uv_index_bytes*4,da=B+u.nquad_flat_uv*U;for(P=B;P<da;P+=U){o(P);E(P+O)}return da-B})(f);(function(B){var P,O=u.vertex_index_bytes*4+u.material_index_bytes+u.normal_index_bytes*4,U=O+u.uv_index_bytes*4,da=B+u.nquad_smooth_uv*U;for(P=B;P<da;P+=U){d(P);E(P+O)}return da-B})(ka);(function(B){var P,O=u.vertex_index_bytes*
3+u.material_index_bytes,U=B+u.ntri_flat*O;for(P=B;P<U;P+=O)y(P);return U-B})(F);(function(B){var P,O=u.vertex_index_bytes*3+u.material_index_bytes+u.normal_index_bytes*3,U=B+u.ntri_smooth*O;for(P=B;P<U;P+=O)t(P);return U-B})(T);(function(B){var P,O=u.vertex_index_bytes*4+u.material_index_bytes,U=B+u.nquad_flat*O;for(P=B;P<U;P+=O)o(P);return U-B})(ba);(function(B){var P,O=u.vertex_index_bytes*4+u.material_index_bytes+u.normal_index_bytes*4,U=B+u.nquad_smooth*O;for(P=B;P<U;P+=O)d(P);return U-B})(ha);
this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};h.prototype=new THREE.Geometry;h.prototype.constructor=h;b(new h(c))},createModel:function(a,b,c){var e=function(h){var f=this;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(f,a.materials,h);(function(){var j,l,k,m,p;j=0;for(l=a.vertices.length;j<l;j+=3){k=a.vertices[j];m=a.vertices[j+1];p=a.vertices[j+2];THREE.Loader.prototype.v(f,k,m,p)}if(a.colors){j=0;for(l=a.colors.length;j<l;j+=3){k=a.colors[j];m=
a.colors[j+1];p=a.colors[j+2];THREE.Loader.prototype.vc(f,k,m,p)}}})();(function(){function j(d,A){THREE.Loader.prototype.f3(f,d[A],d[A+1],d[A+2],d[A+3])}function l(d,A){THREE.Loader.prototype.f3n(f,a.normals,d[A],d[A+1],d[A+2],d[A+3],d[A+4],d[A+5],d[A+6])}function k(d,A){THREE.Loader.prototype.f4(f,d[A],d[A+1],d[A+2],d[A+3],d[A+4])}function m(d,A){THREE.Loader.prototype.f4n(f,a.normals,d[A],d[A+1],d[A+2],d[A+3],d[A+4],d[A+5],d[A+6],d[A+7],d[A+8])}function p(d,A){var E,w,F,u,I,Q,$,N,K;E=d[A];w=d[A+
1];F=d[A+2];u=a.uvs[E*2];$=a.uvs[E*2+1];I=a.uvs[w*2];N=a.uvs[w*2+1];Q=a.uvs[F*2];K=a.uvs[F*2+1];THREE.Loader.prototype.uv3(f.uvs,u,$,I,N,Q,K);if(a.uvs2){u=a.uvs2[E*2];$=a.uvs2[E*2+1];I=a.uvs2[w*2];N=a.uvs2[w*2+1];Q=a.uvs2[F*2];K=a.uvs2[F*2+1];THREE.Loader.prototype.uv3(f.uvs2,u,1-$,I,1-N,Q,1-K)}}function y(d,A){var E,w,F,u,I,Q,$,N,K,W,R,X;E=d[A];w=d[A+1];F=d[A+2];u=d[A+3];I=a.uvs[E*2];K=a.uvs[E*2+1];Q=a.uvs[w*2];W=a.uvs[w*2+1];$=a.uvs[F*2];R=a.uvs[F*2+1];N=a.uvs[u*2];X=a.uvs[u*2+1];THREE.Loader.prototype.uv4(f.uvs,
I,K,Q,W,$,R,N,X);if(a.uvs2){I=a.uvs2[E*2];K=a.uvs2[E*2+1];Q=a.uvs2[w*2];W=a.uvs2[w*2+1];$=a.uvs2[F*2];R=a.uvs2[F*2+1];N=a.uvs2[u*2];X=a.uvs2[u*2+1];THREE.Loader.prototype.uv4(f.uvs2,I,1-K,Q,1-W,$,1-R,N,1-X)}}var t,o;t=0;for(o=a.triangles_uv.length;t<o;t+=7){j(a.triangles_uv,t);p(a.triangles_uv,t+4)}t=0;for(o=a.triangles_n_uv.length;t<o;t+=10){l(a.triangles_n_uv,t);p(a.triangles_n_uv,t+7)}t=0;for(o=a.quads_uv.length;t<o;t+=9){k(a.quads_uv,t);y(a.quads_uv,t+5)}t=0;for(o=a.quads_n_uv.length;t<o;t+=13){m(a.quads_n_uv,
t);y(a.quads_n_uv,t+9)}t=0;for(o=a.triangles.length;t<o;t+=4)j(a.triangles,t);t=0;for(o=a.triangles_n.length;t<o;t+=7)l(a.triangles_n,t);t=0;for(o=a.quads.length;t<o;t+=5)k(a.quads,t);t=0;for(o=a.quads_n.length;t<o;t+=9)m(a.quads_n,t)})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};e.prototype=new THREE.Geometry;e.prototype.constructor=e;b(new e(c))},v:function(a,b,c,e){a.vertices.push(new THREE.Vertex(new THREE.Vector3(b,c,e)))},vc:function(a,b,c,e){var h=new THREE.Color(16777215);
h.setRGB(b,c,e);a.colors.push(h)},f3:function(a,b,c,e,h){a.faces.push(new THREE.Face3(b,c,e,null,a.materials[h]))},f4:function(a,b,c,e,h,f){a.faces.push(new THREE.Face4(b,c,e,h,null,a.materials[f]))},f3n:function(a,b,c,e,h,f,j,l,k){f=a.materials[f];var m=b[l*3],p=b[l*3+1];l=b[l*3+2];var y=b[k*3],t=b[k*3+1];k=b[k*3+2];a.faces.push(new THREE.Face3(c,e,h,[new THREE.Vector3(b[j*3],b[j*3+1],b[j*3+2]),new THREE.Vector3(m,p,l),new THREE.Vector3(y,t,k)],f))},f4n:function(a,b,c,e,h,f,j,l,k,m,p){j=a.materials[j];
var y=b[k*3],t=b[k*3+1];k=b[k*3+2];var o=b[m*3],d=b[m*3+1];m=b[m*3+2];var A=b[p*3],E=b[p*3+1];p=b[p*3+2];a.faces.push(new THREE.Face4(c,e,h,f,[new THREE.Vector3(b[l*3],b[l*3+1],b[l*3+2]),new THREE.Vector3(y,t,k),new THREE.Vector3(o,d,m),new THREE.Vector3(A,E,p)],j))},uv3:function(a,b,c,e,h,f,j){var l=[];l.push(new THREE.UV(b,c));l.push(new THREE.UV(e,h));l.push(new THREE.UV(f,j));a.push(l)},uv4:function(a,b,c,e,h,f,j,l,k){var m=[];m.push(new THREE.UV(b,c));m.push(new THREE.UV(e,h));m.push(new THREE.UV(f,
j));m.push(new THREE.UV(l,k));a.push(m)},init_materials:function(a,b,c){a.materials=[];for(var e=0;e<b.length;++e)a.materials[e]=[THREE.Loader.prototype.createMaterial(b[e],c)]},createMaterial:function(a,b){function c(l){l=Math.log(l)/Math.LN2;return Math.floor(l)==l}function e(l,k){var m=new Image;m.onload=function(){if(!c(this.width)||!c(this.height)){var p=Math.pow(2,Math.round(Math.log(this.width)/Math.LN2)),y=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));l.image.width=p;l.image.height=
y;l.image.getContext("2d").drawImage(this,0,0,p,y)}else l.image=this;l.image.loaded=1};m.src=k}var h,f,j;h="MeshLambertMaterial";f={color:15658734,opacity:1,map:null,light_map:null,vertex_colors:a.vertex_colors};if(a.shading)if(a.shading=="Phong")h="MeshPhongMaterial";if(a.map_diffuse&&b){j=document.createElement("canvas");f.map=new THREE.Texture(j);e(f.map,b+"/"+a.map_diffuse)}else if(a.col_diffuse){j=(a.col_diffuse[0]*255<<16)+(a.col_diffuse[1]*255<<8)+a.col_diffuse[2]*255;f.color=j;f.opacity=a.transparency}else if(a.a_dbg_color)f.color=
a.a_dbg_color;if(a.map_lightmap&&b){j=document.createElement("canvas");f.light_map=new THREE.Texture(j);e(f.light_map,b+"/"+a.map_lightmap)}return new THREE[h](f)},extractUrlbase:function(a){a=a.split("/");a.pop();return a.join("/")}};
