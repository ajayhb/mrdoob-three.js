// ThreeExtras.js r32 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,b,e){this.r=a;this.g=b;this.b=e;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+
","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,b,e){this.x=a||0;this.y=b||0;this.z=e||0};
THREE.Vector3.prototype={set:function(a,b,e){this.x=a;this.y=b;this.z=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,e=this.y,d=this.z;this.x=e*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-e*a.x;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=
a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var b=this.x-a.x,e=this.y-a.y;a=this.z-a.z;return Math.sqrt(b*b+e*e+a*a)},distanceToSquared:function(a){var b=this.x-a.x,e=this.y-a.y;a=this.z-a.z;return b*b+e*e+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=
Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,b,e,d){this.x=a||0;this.y=b||0;this.z=e||0;this.w=d||1};
THREE.Vector4.prototype={set:function(a,b,e,d){this.x=a;this.y=b;this.z=e;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,b){this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var b,e,d=a.objects,g=[];a=0;for(b=d.length;a<b;a++){e=d[a];if(e instanceof THREE.Mesh)g=g.concat(this.intersectObject(e))}g.sort(function(i,c){return i.distance-c.distance});return g},intersectObject:function(a){function b(J,q,h,f){f=f.clone().subSelf(q);h=h.clone().subSelf(q);var r=J.clone().subSelf(q);J=f.dot(f);q=f.dot(h);f=f.dot(r);var n=h.dot(h);h=h.dot(r);r=1/(J*n-q*q);n=(n*f-q*h)*r;J=(J*h-q*f)*r;return n>0&&J>0&&n+J<1}var e,d,g,i,c,k,j,l,s,A,
o,u=a.geometry,x=u.vertices,z=[];e=0;for(d=u.faces.length;e<d;e++){g=u.faces[e];A=this.origin.clone();o=this.direction.clone();i=a.matrix.multiplyVector3(x[g.a].position.clone());c=a.matrix.multiplyVector3(x[g.b].position.clone());k=a.matrix.multiplyVector3(x[g.c].position.clone());j=g instanceof THREE.Face4?a.matrix.multiplyVector3(x[g.d].position.clone()):null;l=a.rotationMatrix.multiplyVector3(g.normal.clone());s=o.dot(l);if(s<0){l=l.dot((new THREE.Vector3).sub(i,A))/s;A=A.addSelf(o.multiplyScalar(l));
if(g instanceof THREE.Face3){if(b(A,i,c,k)){g={distance:this.origin.distanceTo(A),point:A,face:g,object:a};z.push(g)}}else if(g instanceof THREE.Face4)if(b(A,i,c,j)||b(A,c,k,j)){g={distance:this.origin.distanceTo(A),point:A,face:g,object:a};z.push(g)}}}return z}};
THREE.Rectangle=function(){function a(){i=d-b;c=g-e}var b,e,d,g,i,c,k=true;this.getX=function(){return b};this.getY=function(){return e};this.getWidth=function(){return i};this.getHeight=function(){return c};this.getLeft=function(){return b};this.getTop=function(){return e};this.getRight=function(){return d};this.getBottom=function(){return g};this.set=function(j,l,s,A){k=false;b=j;e=l;d=s;g=A;a()};this.addPoint=function(j,l){if(k){k=false;b=j;e=l;d=j;g=l}else{b=b<j?b:j;e=e<l?e:l;d=d>j?d:j;g=g>l?
g:l}a()};this.add3Points=function(j,l,s,A,o,u){if(k){k=false;b=j<s?j<o?j:o:s<o?s:o;e=l<A?l<u?l:u:A<u?A:u;d=j>s?j>o?j:o:s>o?s:o;g=l>A?l>u?l:u:A>u?A:u}else{b=j<s?j<o?j<b?j:b:o<b?o:b:s<o?s<b?s:b:o<b?o:b;e=l<A?l<u?l<e?l:e:u<e?u:e:A<u?A<e?A:e:u<e?u:e;d=j>s?j>o?j>d?j:d:o>d?o:d:s>o?s>d?s:d:o>d?o:d;g=l>A?l>u?l>g?l:g:u>g?u:g:A>u?A>g?A:g:u>g?u:g}a()};this.addRectangle=function(j){if(k){k=false;b=j.getLeft();e=j.getTop();d=j.getRight();g=j.getBottom()}else{b=b<j.getLeft()?b:j.getLeft();e=e<j.getTop()?e:j.getTop();
d=d>j.getRight()?d:j.getRight();g=g>j.getBottom()?g:j.getBottom()}a()};this.inflate=function(j){b-=j;e-=j;d+=j;g+=j;a()};this.minSelf=function(j){b=b>j.getLeft()?b:j.getLeft();e=e>j.getTop()?e:j.getTop();d=d<j.getRight()?d:j.getRight();g=g<j.getBottom()?g:j.getBottom();a()};this.instersects=function(j){return Math.min(d,j.getRight())-Math.max(b,j.getLeft())>=0&&Math.min(g,j.getBottom())-Math.max(e,j.getTop())>=0};this.empty=function(){k=true;g=d=e=b=0;a()};this.isEmpty=function(){return k};this.toString=
function(){return"THREE.Rectangle ( left: "+b+", right: "+d+", top: "+e+", bottom: "+g+", width: "+i+", height: "+c+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a;a=this.m[1];this.m[1]=this.m[3];this.m[3]=a;a=this.m[2];this.m[2]=this.m[6];this.m[6]=a;a=this.m[5];this.m[5]=this.m[7];this.m[7]=a;return this}};
THREE.Matrix4=function(a,b,e,d,g,i,c,k,j,l,s,A,o,u,x,z){this.n11=a||1;this.n12=b||0;this.n13=e||0;this.n14=d||0;this.n21=g||0;this.n22=i||1;this.n23=c||0;this.n24=k||0;this.n31=j||0;this.n32=l||0;this.n33=s||1;this.n34=A||0;this.n41=o||0;this.n42=u||0;this.n43=x||0;this.n44=z||1};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,b,e,d,g,i,c,k,j,l,s,A,o,u,x,z){this.n11=a;this.n12=b;this.n13=e;this.n14=d;this.n21=g;this.n22=i;this.n23=c;this.n24=k;this.n31=j;this.n32=l;this.n33=s;this.n34=A;this.n41=o;this.n42=u;this.n43=x;this.n44=z;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,b,e){var d=new THREE.Vector3,g=new THREE.Vector3,i=new THREE.Vector3;i.sub(a,b).normalize();d.cross(e,i).normalize();g.cross(i,d).normalize();this.n11=d.x;this.n12=d.y;this.n13=d.z;this.n14=-d.dot(a);this.n21=g.x;this.n22=g.y;this.n23=g.z;this.n24=-g.dot(a);this.n31=i.x;
this.n32=i.y;this.n33=i.z;this.n34=-i.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var b=a.x,e=a.y,d=a.z,g=1/(this.n41*b+this.n42*e+this.n43*d+this.n44);a.x=(this.n11*b+this.n12*e+this.n13*d+this.n14)*g;a.y=(this.n21*b+this.n22*e+this.n23*d+this.n24)*g;a.z=(this.n31*b+this.n32*e+this.n33*d+this.n34)*g;return a},multiplyVector4:function(a){var b=a.x,e=a.y,d=a.z,g=a.w;a.x=this.n11*b+this.n12*e+this.n13*d+this.n14*g;a.y=this.n21*b+this.n22*e+this.n23*d+this.n24*
g;a.z=this.n31*b+this.n32*e+this.n33*d+this.n34*g;a.w=this.n41*b+this.n42*e+this.n43*d+this.n44*g;return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},multiply:function(a,b){var e=a.n11,d=a.n12,g=a.n13,i=a.n14,c=a.n21,k=a.n22,j=a.n23,l=a.n24,s=a.n31,A=a.n32,
o=a.n33,u=a.n34,x=a.n41,z=a.n42,J=a.n43,q=a.n44,h=b.n11,f=b.n12,r=b.n13,n=b.n14,w=b.n21,m=b.n22,p=b.n23,C=b.n24,v=b.n31,D=b.n32,B=b.n33,y=b.n34,K=b.n41,aa=b.n42,L=b.n43,U=b.n44;this.n11=e*h+d*w+g*v+i*K;this.n12=e*f+d*m+g*D+i*aa;this.n13=e*r+d*p+g*B+i*L;this.n14=e*n+d*C+g*y+i*U;this.n21=c*h+k*w+j*v+l*K;this.n22=c*f+k*m+j*D+l*aa;this.n23=c*r+k*p+j*B+l*L;this.n24=c*n+k*C+j*y+l*U;this.n31=s*h+A*w+o*v+u*K;this.n32=s*f+A*m+o*D+u*aa;this.n33=s*r+A*p+o*B+u*L;this.n34=s*n+A*C+o*y+u*U;this.n41=x*h+z*w+J*v+
q*K;this.n42=x*f+z*m+J*D+q*aa;this.n43=x*r+z*p+J*B+q*L;this.n44=x*n+z*C+J*y+q*U;return this},multiplySelf:function(a){var b=this.n11,e=this.n12,d=this.n13,g=this.n14,i=this.n21,c=this.n22,k=this.n23,j=this.n24,l=this.n31,s=this.n32,A=this.n33,o=this.n34,u=this.n41,x=this.n42,z=this.n43,J=this.n44,q=a.n11,h=a.n21,f=a.n31,r=a.n41,n=a.n12,w=a.n22,m=a.n32,p=a.n42,C=a.n13,v=a.n23,D=a.n33,B=a.n43,y=a.n14,K=a.n24,aa=a.n34;a=a.n44;this.n11=b*q+e*h+d*f+g*r;this.n12=b*n+e*w+d*m+g*p;this.n13=b*C+e*v+d*D+g*B;
this.n14=b*y+e*K+d*aa+g*a;this.n21=i*q+c*h+k*f+j*r;this.n22=i*n+c*w+k*m+j*p;this.n23=i*C+c*v+k*D+j*B;this.n24=i*y+c*K+k*aa+j*a;this.n31=l*q+s*h+A*f+o*r;this.n32=l*n+s*w+A*m+o*p;this.n33=l*C+s*v+A*D+o*B;this.n34=l*y+s*K+A*aa+o*a;this.n41=u*q+x*h+z*f+J*r;this.n42=u*n+x*w+z*m+J*p;this.n43=u*C+x*v+z*D+J*B;this.n44=u*y+x*K+z*aa+J*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;
this.n34*=a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){return this.n14*this.n23*this.n32*this.n41-this.n13*this.n24*this.n32*this.n41-this.n14*this.n22*this.n33*this.n41+this.n12*this.n24*this.n33*this.n41+this.n13*this.n22*this.n34*this.n41-this.n12*this.n23*this.n34*this.n41-this.n14*this.n23*this.n31*this.n42+this.n13*this.n24*this.n31*this.n42+this.n14*this.n21*this.n33*this.n42-this.n11*this.n24*this.n33*this.n42-this.n13*this.n21*this.n34*this.n42+this.n11*
this.n23*this.n34*this.n42+this.n14*this.n22*this.n31*this.n43-this.n12*this.n24*this.n31*this.n43-this.n14*this.n21*this.n32*this.n43+this.n11*this.n24*this.n32*this.n43+this.n12*this.n21*this.n34*this.n43-this.n11*this.n22*this.n34*this.n43-this.n13*this.n22*this.n31*this.n44+this.n12*this.n23*this.n31*this.n44+this.n13*this.n21*this.n32*this.n44-this.n11*this.n23*this.n32*this.n44-this.n12*this.n21*this.n33*this.n44+this.n11*this.n22*this.n33*this.n44},transpose:function(){function a(b,e,d){var g=
b[e];b[e]=b[d];b[d]=g}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){return[this.n11,this.n21,this.n31,this.n41,
this.n12,this.n22,this.n32,this.n42,this.n13,this.n23,this.n33,this.n43,this.n14,this.n24,this.n34,this.n44]},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,b,e){var d=new THREE.Matrix4;d.n14=a;d.n24=b;d.n34=e;return d};
THREE.Matrix4.scaleMatrix=function(a,b,e){var d=new THREE.Matrix4;d.n11=a;d.n22=b;d.n33=e;return d};THREE.Matrix4.rotationXMatrix=function(a){var b=new THREE.Matrix4;b.n22=b.n33=Math.cos(a);b.n32=Math.sin(a);b.n23=-b.n32;return b};THREE.Matrix4.rotationYMatrix=function(a){var b=new THREE.Matrix4;b.n11=b.n33=Math.cos(a);b.n13=Math.sin(a);b.n31=-b.n13;return b};THREE.Matrix4.rotationZMatrix=function(a){var b=new THREE.Matrix4;b.n11=b.n22=Math.cos(a);b.n21=Math.sin(a);b.n12=-b.n21;return b};
THREE.Matrix4.rotationAxisAngleMatrix=function(a,b){var e=new THREE.Matrix4,d=Math.cos(b),g=Math.sin(b),i=1-d,c=a.x,k=a.y,j=a.z;e.n11=i*c*c+d;e.n12=i*c*k-g*j;e.n13=i*c*j+g*k;e.n21=i*c*k+g*j;e.n22=i*k*k+d;e.n23=i*k*j-g*c;e.n31=i*c*j-g*k;e.n32=i*k*j+g*c;e.n33=i*j*j+d;return e};
THREE.Matrix4.makeInvert=function(a){var b=new THREE.Matrix4;b.n11=a.n23*a.n34*a.n42-a.n24*a.n33*a.n42+a.n24*a.n32*a.n43-a.n22*a.n34*a.n43-a.n23*a.n32*a.n44+a.n22*a.n33*a.n44;b.n12=a.n14*a.n33*a.n42-a.n13*a.n34*a.n42-a.n14*a.n32*a.n43+a.n12*a.n34*a.n43+a.n13*a.n32*a.n44-a.n12*a.n33*a.n44;b.n13=a.n13*a.n24*a.n42-a.n14*a.n23*a.n42+a.n14*a.n22*a.n43-a.n12*a.n24*a.n43-a.n13*a.n22*a.n44+a.n12*a.n23*a.n44;b.n14=a.n14*a.n23*a.n32-a.n13*a.n24*a.n32-a.n14*a.n22*a.n33+a.n12*a.n24*a.n33+a.n13*a.n22*a.n34-a.n12*
a.n23*a.n34;b.n21=a.n24*a.n33*a.n41-a.n23*a.n34*a.n41-a.n24*a.n31*a.n43+a.n21*a.n34*a.n43+a.n23*a.n31*a.n44-a.n21*a.n33*a.n44;b.n22=a.n13*a.n34*a.n41-a.n14*a.n33*a.n41+a.n14*a.n31*a.n43-a.n11*a.n34*a.n43-a.n13*a.n31*a.n44+a.n11*a.n33*a.n44;b.n23=a.n14*a.n23*a.n41-a.n13*a.n24*a.n41-a.n14*a.n21*a.n43+a.n11*a.n24*a.n43+a.n13*a.n21*a.n44-a.n11*a.n23*a.n44;b.n24=a.n13*a.n24*a.n31-a.n14*a.n23*a.n31+a.n14*a.n21*a.n33-a.n11*a.n24*a.n33-a.n13*a.n21*a.n34+a.n11*a.n23*a.n34;b.n31=a.n22*a.n34*a.n41-a.n24*a.n32*
a.n41+a.n24*a.n31*a.n42-a.n21*a.n34*a.n42-a.n22*a.n31*a.n44+a.n21*a.n32*a.n44;b.n32=a.n14*a.n32*a.n41-a.n12*a.n34*a.n41-a.n14*a.n31*a.n42+a.n11*a.n34*a.n42+a.n12*a.n31*a.n44-a.n11*a.n32*a.n44;b.n33=a.n13*a.n24*a.n41-a.n14*a.n22*a.n41+a.n14*a.n21*a.n42-a.n11*a.n24*a.n42-a.n12*a.n21*a.n44+a.n11*a.n22*a.n44;b.n34=a.n14*a.n22*a.n31-a.n12*a.n24*a.n31-a.n14*a.n21*a.n32+a.n11*a.n24*a.n32+a.n12*a.n21*a.n34-a.n11*a.n22*a.n34;b.n41=a.n23*a.n32*a.n41-a.n22*a.n33*a.n41-a.n23*a.n31*a.n42+a.n21*a.n33*a.n42+a.n22*
a.n31*a.n43-a.n21*a.n32*a.n43;b.n42=a.n12*a.n33*a.n41-a.n13*a.n32*a.n41+a.n13*a.n31*a.n42-a.n11*a.n33*a.n42-a.n12*a.n31*a.n43+a.n11*a.n32*a.n43;b.n43=a.n13*a.n22*a.n41-a.n12*a.n23*a.n41-a.n13*a.n21*a.n42+a.n11*a.n23*a.n42+a.n12*a.n21*a.n43-a.n11*a.n22*a.n43;b.n44=a.n12*a.n23*a.n31-a.n13*a.n22*a.n31+a.n13*a.n21*a.n32-a.n11*a.n23*a.n32-a.n12*a.n21*a.n33+a.n11*a.n22*a.n33;b.multiplyScalar(1/a.determinant());return b};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.flatten();a=new THREE.Matrix3;var e=b[10]*b[5]-b[6]*b[9],d=-b[10]*b[1]+b[2]*b[9],g=b[6]*b[1]-b[2]*b[5],i=-b[10]*b[4]+b[6]*b[8],c=b[10]*b[0]-b[2]*b[8],k=-b[6]*b[0]+b[2]*b[4],j=b[9]*b[4]-b[5]*b[8],l=-b[9]*b[0]+b[1]*b[8],s=b[5]*b[0]-b[1]*b[4];b=b[0]*e+b[1]*i+b[2]*j;if(b==0)throw"matrix not invertible";b=1/b;a.m[0]=b*e;a.m[1]=b*d;a.m[2]=b*g;a.m[3]=b*i;a.m[4]=b*c;a.m[5]=b*k;a.m[6]=b*j;a.m[7]=b*l;a.m[8]=b*s;return a};
THREE.Matrix4.makeFrustum=function(a,b,e,d,g,i){var c,k,j;c=new THREE.Matrix4;k=2*g/(b-a);j=2*g/(d-e);a=(b+a)/(b-a);e=(d+e)/(d-e);d=-(i+g)/(i-g);g=-2*i*g/(i-g);c.n11=k;c.n12=0;c.n13=a;c.n14=0;c.n21=0;c.n22=j;c.n23=e;c.n24=0;c.n31=0;c.n32=0;c.n33=d;c.n34=g;c.n41=0;c.n42=0;c.n43=-1;c.n44=0;return c};THREE.Matrix4.makePerspective=function(a,b,e,d){var g;a=e*Math.tan(a*Math.PI/360);g=-a;return THREE.Matrix4.makeFrustum(g*b,a*b,g,a,e,d)};
THREE.Matrix4.makeOrtho=function(a,b,e,d,g,i){var c,k,j,l;c=new THREE.Matrix4;k=b-a;j=e-d;l=i-g;a=(b+a)/k;e=(e+d)/j;g=(i+g)/l;c.n11=2/k;c.n12=0;c.n13=0;c.n14=-a;c.n21=0;c.n22=2/j;c.n23=0;c.n24=-e;c.n31=0;c.n32=0;c.n33=-2/l;c.n34=-g;c.n41=0;c.n42=0;c.n43=0;c.n44=1;return c};
THREE.Vertex=function(a,b){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=b||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,b,e,d,g){this.a=a;this.b=b;this.c=e;this.centroid=new THREE.Vector3;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.materials=g instanceof Array?g:[g]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,b,e,d,g,i){this.a=a;this.b=b;this.c=e;this.d=d;this.centroid=new THREE.Vector3;this.normal=g instanceof THREE.Vector3?g:new THREE.Vector3;this.vertexNormals=g instanceof Array?g:[];this.materials=i instanceof Array?i:[i]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,b,e;a=0;for(b=this.faces.length;a<b;a++){e=this.faces[a];e.centroid.set(0,0,0);if(e instanceof THREE.Face3){e.centroid.addSelf(this.vertices[e.a].position);e.centroid.addSelf(this.vertices[e.b].position);e.centroid.addSelf(this.vertices[e.c].position);e.centroid.divideScalar(3)}else if(e instanceof THREE.Face4){e.centroid.addSelf(this.vertices[e.a].position);e.centroid.addSelf(this.vertices[e.b].position);e.centroid.addSelf(this.vertices[e.c].position);
e.centroid.addSelf(this.vertices[e.d].position);e.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var b,e,d,g,i,c,k=new THREE.Vector3,j=new THREE.Vector3;d=0;for(g=this.vertices.length;d<g;d++){i=this.vertices[d];i.normal.set(0,0,0)}d=0;for(g=this.faces.length;d<g;d++){i=this.faces[d];if(a&&i.vertexNormals.length){k.set(0,0,0);b=0;for(e=i.normal.length;b<e;b++)k.addSelf(i.vertexNormals[b]);k.divideScalar(3)}else{b=this.vertices[i.a];e=this.vertices[i.b];c=this.vertices[i.c];k.sub(c.position,
e.position);j.sub(b.position,e.position);k.crossSelf(j)}k.isZero()||k.normalize();i.normal.copy(k)}},computeVertexNormals:function(){var a,b,e=[],d;a=0;for(b=this.vertices.length;a<b;a++)e[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++){d=this.faces[a];if(d instanceof THREE.Face3){e[d.a].addSelf(d.normal);e[d.b].addSelf(d.normal);e[d.c].addSelf(d.normal)}else if(d instanceof THREE.Face4){e[d.a].addSelf(d.normal);e[d.b].addSelf(d.normal);e[d.c].addSelf(d.normal);e[d.d].addSelf(d.normal)}}a=
0;for(b=this.vertices.length;a<b;a++)e[a].normalize();a=0;for(b=this.faces.length;a<b;a++){d=this.faces[a];if(d instanceof THREE.Face3){d.vertexNormals[0]=e[d.a].clone();d.vertexNormals[1]=e[d.b].clone();d.vertexNormals[2]=e[d.c].clone()}else if(d instanceof THREE.Face4){d.vertexNormals[0]=e[d.a].clone();d.vertexNormals[1]=e[d.b].clone();d.vertexNormals[2]=e[d.c].clone();d.vertexNormals[3]=e[d.d].clone()}}},computeTangents:function(){function a(y,K,aa,L,U,W,M){i=y.vertices[K].position;c=y.vertices[aa].position;
k=y.vertices[L].position;j=g[U];l=g[W];s=g[M];A=c.x-i.x;o=k.x-i.x;u=c.y-i.y;x=k.y-i.y;z=c.z-i.z;J=k.z-i.z;q=l.u-j.u;h=s.u-j.u;f=l.v-j.v;r=s.v-j.v;n=1/(q*r-h*f);p.set((r*A-f*o)*n,(r*u-f*x)*n,(r*z-f*J)*n);C.set((q*o-h*A)*n,(q*x-h*u)*n,(q*J-h*z)*n);w[K].addSelf(p);w[aa].addSelf(p);w[L].addSelf(p);m[K].addSelf(C);m[aa].addSelf(C);m[L].addSelf(C)}var b,e,d,g,i,c,k,j,l,s,A,o,u,x,z,J,q,h,f,r,n,w=[],m=[],p=new THREE.Vector3,C=new THREE.Vector3,v=new THREE.Vector3,D=new THREE.Vector3,B=new THREE.Vector3;b=
0;for(e=this.vertices.length;b<e;b++){w[b]=new THREE.Vector3;m[b]=new THREE.Vector3}b=0;for(e=this.faces.length;b<e;b++){d=this.faces[b];g=this.uvs[b];if(d instanceof THREE.Face3){a(this,d.a,d.b,d.c,0,1,2);this.vertices[d.a].normal.copy(d.vertexNormals[0]);this.vertices[d.b].normal.copy(d.vertexNormals[1]);this.vertices[d.c].normal.copy(d.vertexNormals[2])}else if(d instanceof THREE.Face4){a(this,d.a,d.b,d.c,0,1,2);a(this,d.a,d.b,d.d,0,1,3);this.vertices[d.a].normal.copy(d.vertexNormals[0]);this.vertices[d.b].normal.copy(d.vertexNormals[1]);
this.vertices[d.c].normal.copy(d.vertexNormals[2]);this.vertices[d.d].normal.copy(d.vertexNormals[3])}}b=0;for(e=this.vertices.length;b<e;b++){B.copy(this.vertices[b].normal);d=w[b];v.copy(d);v.subSelf(B.multiplyScalar(B.dot(d))).normalize();D.cross(this.vertices[b].normal,d);d=D.dot(m[b]);d=d<0?-1:1;this.vertices[b].tangent.set(v.x,v.y,v.z,d)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],
y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,e=this.vertices.length;b<e;b++){a=this.vertices[b];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<
this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,b=0,e=this.vertices.length;b<e;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(s){var A=[];b=0;for(e=s.length;b<e;b++)s[b]==undefined?A.push("undefined"):A.push(s[b].toString());return A.join("_")}
var b,e,d,g,i,c,k,j,l={};d=0;for(g=this.faces.length;d<g;d++){i=this.faces[d];c=i.materials;k=a(c);if(l[k]==undefined)l[k]={hash:k,counter:0};j=l[k].hash+"_"+l[k].counter;if(this.geometryChunks[j]==undefined)this.geometryChunks[j]={faces:[],materials:c,vertices:0};i=i instanceof THREE.Face3?3:4;if(this.geometryChunks[j].vertices+i>65535){l[k].counter+=1;j=l[k].hash+"_"+l[k].counter;if(this.geometryChunks[j]==undefined)this.geometryChunks[j]={faces:[],materials:c,vertices:0}}this.geometryChunks[j].faces.push(d);
this.geometryChunks[j].vertices+=i}},toString:function(){return"THREE.Geometry ( vertices: "+this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,b,e,d){this.fov=a;this.aspect=b;this.near=e;this.far=d;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.translateX=function(g){g=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(g);g.cross(g.clone(),this.up);this.position.addSelf(g);this.target.position.addSelf(g)};this.translateZ=function(g){g=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(g);
this.position.subSelf(g);this.target.position.subSelf(g)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};
THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;
THREE.PointLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.translationMatrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.scaleMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){this.matrixPosition=THREE.Matrix4.translationMatrix(this.position.x,this.position.y,this.position.z);this.rotationMatrix=THREE.Matrix4.rotationXMatrix(this.rotation.x);this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationYMatrix(this.rotation.y));this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationZMatrix(this.rotation.z));this.scaleMatrix=THREE.Matrix4.scaleMatrix(this.scale.x,this.scale.y,this.scale.z);this.matrix.copy(this.matrixPosition);
this.matrix.multiplySelf(this.rotationMatrix);this.matrix.multiplySelf(this.scaleMatrix)}};THREE.Object3DCounter={value:0};THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.Line=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b]};THREE.Line.prototype=new THREE.Object3D;
THREE.Line.prototype.constructor=THREE.Line;THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+
"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=
this.wireframe_linecap="round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=
a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==
undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial"}};
THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.opacity=1;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};
THREE.Texture=function(a,b,e,d,g,i){this.image=a;this.mapping=b!==undefined?b:new THREE.UVMapping;this.wrap_s=e!==undefined?e:THREE.ClampToEdgeWrapping;this.wrap_t=d!==undefined?d:THREE.ClampToEdgeWrapping;this.mag_filter=g!==undefined?g:THREE.LinearFilter;this.min_filter=i!==undefined?i:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;var Uniforms={clone:function(a){var b,e,d,g={};for(b in a){g[b]={};for(e in a[b]){d=a[b][e];g[b][e]=d instanceof THREE.Color||d instanceof THREE.Vector3||d instanceof THREE.Texture?d.clone():d}}return g},merge:function(a){var b,e,d,g={};for(b=0;b<a.length;b++){d=this.clone(a[b]);for(e in d)g[e]=d[e]}return g}};
THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,b,e){this.color=new THREE.Color(a);this.near=b||1;this.far=e||1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b||2.5E-4};
THREE.Projector=function(){function a(m,p){return p.z-m.z}function b(m,p){var C=0,v=1,D=m.z+m.w,B=p.z+p.w,y=-m.z+m.w,K=-p.z+p.w;if(D>=0&&B>=0&&y>=0&&K>=0)return true;else if(D<0&&B<0||y<0&&K<0)return false;else{if(D<0)C=Math.max(C,D/(D-B));else if(B<0)v=Math.min(v,D/(D-B));if(y<0)C=Math.max(C,y/(y-K));else if(K<0)v=Math.min(v,y/(y-K));if(v<C)return false;else{m.lerpSelf(p,C);p.lerpSelf(m,1-v);return true}}}var e,d,g=[],i,c,k,j=[],l,s,A=[],o,u,x=[],z=new THREE.Vector4,J=new THREE.Vector4,q=new THREE.Matrix4,
h=new THREE.Matrix4,f=[],r=new THREE.Vector4,n=new THREE.Vector4,w;this.projectObjects=function(m,p,C){var v=[],D,B;d=0;q.multiply(p.projectionMatrix,p.matrix);f[0]=new THREE.Vector4(q.n41-q.n11,q.n42-q.n12,q.n43-q.n13,q.n44-q.n14);f[1]=new THREE.Vector4(q.n41+q.n11,q.n42+q.n12,q.n43+q.n13,q.n44+q.n14);f[2]=new THREE.Vector4(q.n41+q.n21,q.n42+q.n22,q.n43+q.n23,q.n44+q.n24);f[3]=new THREE.Vector4(q.n41-q.n21,q.n42-q.n22,q.n43-q.n23,q.n44-q.n24);f[4]=new THREE.Vector4(q.n41-q.n31,q.n42-q.n32,q.n43-
q.n33,q.n44-q.n34);f[5]=new THREE.Vector4(q.n41+q.n31,q.n42+q.n32,q.n43+q.n33,q.n44+q.n34);p=0;for(D=f.length;p<D;p++){B=f[p];B.divideScalar(Math.sqrt(B.x*B.x+B.y*B.y+B.z*B.z))}D=m.objects;m=0;for(p=D.length;m<p;m++){B=D[m];var y;if(!(y=!B.visible)){if(y=B instanceof THREE.Mesh){a:{y=void 0;for(var K=B.position,aa=-B.geometry.boundingSphere.radius*Math.max(B.scale.x,Math.max(B.scale.y,B.scale.z)),L=0;L<6;L++){y=f[L].x*K.x+f[L].y*K.y+f[L].z*K.z+f[L].w;if(y<=aa){y=false;break a}}y=true}y=!y}y=y}if(!y){e=
g[d]=g[d]||new THREE.RenderableObject;z.copy(B.position);q.multiplyVector3(z);e.object=B;e.z=z.z;v.push(e);d++}}C&&v.sort(a);return v};this.projectScene=function(m,p,C){var v=[],D=p.near,B=p.far,y,K,aa,L,U,W,M,P,V,O,N,$,X,H,S,Z;k=s=u=0;p.autoUpdateMatrix&&p.updateMatrix();q.multiply(p.projectionMatrix,p.matrix);W=this.projectObjects(m,p,true);m=0;for(y=W.length;m<y;m++){M=W[m].object;if(M.visible){M.autoUpdateMatrix&&M.updateMatrix();P=M.matrix;V=M.rotationMatrix;O=M.materials;N=M.overdraw;if(M instanceof
THREE.Mesh){$=M.geometry;X=$.vertices;K=0;for(aa=X.length;K<aa;K++){H=X[K];H.positionWorld.copy(H.position);P.multiplyVector3(H.positionWorld);L=H.positionScreen;L.copy(H.positionWorld);q.multiplyVector4(L);L.x/=L.w;L.y/=L.w;H.__visible=L.z>D&&L.z<B}$=$.faces;K=0;for(aa=$.length;K<aa;K++){H=$[K];if(H instanceof THREE.Face3){L=X[H.a];U=X[H.b];S=X[H.c];if(L.__visible&&U.__visible&&S.__visible)if(M.doubleSided||M.flipSided!=(S.positionScreen.x-L.positionScreen.x)*(U.positionScreen.y-L.positionScreen.y)-
(S.positionScreen.y-L.positionScreen.y)*(U.positionScreen.x-L.positionScreen.x)<0){i=j[k]=j[k]||new THREE.RenderableFace3;i.v1.positionWorld.copy(L.positionWorld);i.v2.positionWorld.copy(U.positionWorld);i.v3.positionWorld.copy(S.positionWorld);i.v1.positionScreen.copy(L.positionScreen);i.v2.positionScreen.copy(U.positionScreen);i.v3.positionScreen.copy(S.positionScreen);i.normalWorld.copy(H.normal);V.multiplyVector3(i.normalWorld);i.centroidWorld.copy(H.centroid);P.multiplyVector3(i.centroidWorld);
i.centroidScreen.copy(i.centroidWorld);q.multiplyVector3(i.centroidScreen);S=H.vertexNormals;w=i.vertexNormalsWorld;L=0;for(U=S.length;L<U;L++){Z=w[L]=w[L]||new THREE.Vector3;Z.copy(S[L]);V.multiplyVector3(Z)}i.z=i.centroidScreen.z;i.meshMaterials=O;i.faceMaterials=H.materials;i.overdraw=N;if(M.geometry.uvs[K]){i.uvs[0]=M.geometry.uvs[K][0];i.uvs[1]=M.geometry.uvs[K][1];i.uvs[2]=M.geometry.uvs[K][2]}v.push(i);k++}}else if(H instanceof THREE.Face4){L=X[H.a];U=X[H.b];S=X[H.c];Z=X[H.d];if(L.__visible&&
U.__visible&&S.__visible&&Z.__visible)if(M.doubleSided||M.flipSided!=((Z.positionScreen.x-L.positionScreen.x)*(U.positionScreen.y-L.positionScreen.y)-(Z.positionScreen.y-L.positionScreen.y)*(U.positionScreen.x-L.positionScreen.x)<0||(U.positionScreen.x-S.positionScreen.x)*(Z.positionScreen.y-S.positionScreen.y)-(U.positionScreen.y-S.positionScreen.y)*(Z.positionScreen.x-S.positionScreen.x)<0)){i=j[k]=j[k]||new THREE.RenderableFace3;i.v1.positionWorld.copy(L.positionWorld);i.v2.positionWorld.copy(U.positionWorld);
i.v3.positionWorld.copy(Z.positionWorld);i.v1.positionScreen.copy(L.positionScreen);i.v2.positionScreen.copy(U.positionScreen);i.v3.positionScreen.copy(Z.positionScreen);i.normalWorld.copy(H.normal);V.multiplyVector3(i.normalWorld);i.centroidWorld.copy(H.centroid);P.multiplyVector3(i.centroidWorld);i.centroidScreen.copy(i.centroidWorld);q.multiplyVector3(i.centroidScreen);i.z=i.centroidScreen.z;i.meshMaterials=O;i.faceMaterials=H.materials;i.overdraw=N;if(M.geometry.uvs[K]){i.uvs[0]=M.geometry.uvs[K][0];
i.uvs[1]=M.geometry.uvs[K][1];i.uvs[2]=M.geometry.uvs[K][3]}v.push(i);k++;c=j[k]=j[k]||new THREE.RenderableFace3;c.v1.positionWorld.copy(U.positionWorld);c.v2.positionWorld.copy(S.positionWorld);c.v3.positionWorld.copy(Z.positionWorld);c.v1.positionScreen.copy(U.positionScreen);c.v2.positionScreen.copy(S.positionScreen);c.v3.positionScreen.copy(Z.positionScreen);c.normalWorld.copy(i.normalWorld);c.centroidWorld.copy(i.centroidWorld);c.centroidScreen.copy(i.centroidScreen);c.z=c.centroidScreen.z;c.meshMaterials=
O;c.faceMaterials=H.materials;c.overdraw=N;if(M.geometry.uvs[K]){c.uvs[0]=M.geometry.uvs[K][1];c.uvs[1]=M.geometry.uvs[K][2];c.uvs[2]=M.geometry.uvs[K][3]}v.push(c);k++}}}}else if(M instanceof THREE.Line){h.multiply(q,P);X=M.geometry.vertices;H=X[0];H.positionScreen.copy(H.position);h.multiplyVector4(H.positionScreen);K=1;for(aa=X.length;K<aa;K++){L=X[K];L.positionScreen.copy(L.position);h.multiplyVector4(L.positionScreen);U=X[K-1];r.copy(L.positionScreen);n.copy(U.positionScreen);if(b(r,n)){r.multiplyScalar(1/
r.w);n.multiplyScalar(1/n.w);l=A[s]=A[s]||new THREE.RenderableLine;l.v1.positionScreen.copy(r);l.v2.positionScreen.copy(n);l.z=Math.max(r.z,n.z);l.materials=M.materials;v.push(l);s++}}}else if(M instanceof THREE.Particle){J.set(M.position.x,M.position.y,M.position.z,1);q.multiplyVector4(J);J.z/=J.w;if(J.z>0&&J.z<1){o=x[u]=x[u]||new THREE.RenderableParticle;o.x=J.x/J.w;o.y=J.y/J.w;o.z=J.z;o.rotation=M.rotation.z;o.scale.x=M.scale.x*Math.abs(o.x-(J.x+p.projectionMatrix.n11)/(J.w+p.projectionMatrix.n14));
o.scale.y=M.scale.y*Math.abs(o.y-(J.y+p.projectionMatrix.n22)/(J.w+p.projectionMatrix.n24));o.materials=M.materials;v.push(o);u++}}}}C&&v.sort(a);return v};this.unprojectVector=function(m,p){var C=new THREE.Matrix4;C.multiply(THREE.Matrix4.makeInvert(p.matrix),THREE.Matrix4.makeInvert(p.projectionMatrix));C.multiplyVector3(m);return m}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,b=new THREE.Projector,e,d,g,i;this.domElement=document.createElement("div");this.setSize=function(c,k){e=c;d=k;g=e/2;i=d/2};this.render=function(c,k){var j,l,s,A,o,u,x,z;a=b.projectScene(c,k);j=0;for(l=a.length;j<l;j++){o=a[j];if(o instanceof THREE.RenderableParticle){x=o.x*g+g;z=o.y*i+i;s=0;for(A=o.material.length;s<A;s++){u=o.material[s];if(u instanceof THREE.ParticleDOMMaterial){u=u.domElement;u.style.left=x+"px";u.style.top=z+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(ga){if(o!=ga)l.globalAlpha=o=ga}function b(ga){if(u!=ga){switch(ga){case THREE.NormalBlending:l.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:l.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:l.globalCompositeOperation="darker"}u=ga}}var e=null,d=new THREE.Projector,g=document.createElement("canvas"),i,c,k,j,l=g.getContext("2d"),s=null,A=null,o=1,u=0,x=null,z=null,J=1,q,h,f,r,n,w,m,p,C,v=new THREE.Color,
D=new THREE.Color,B=new THREE.Color,y=new THREE.Color,K=new THREE.Color,aa,L,U,W,M,P,V,O,N,$=new THREE.Rectangle,X=new THREE.Rectangle,H=new THREE.Rectangle,S=false,Z=new THREE.Color,ha=new THREE.Color,ja=new THREE.Color,t=new THREE.Color,F=Math.PI*2,G=new THREE.Vector3,R,ba,ka,ea,ra,ta,va=16;R=document.createElement("canvas");R.width=R.height=2;ba=R.getContext("2d");ba.fillStyle="rgba(0,0,0,1)";ba.fillRect(0,0,2,2);ka=ba.getImageData(0,0,2,2);ea=ka.data;ra=document.createElement("canvas");ra.width=
ra.height=va;ta=ra.getContext("2d");ta.translate(-va/2,-va/2);ta.scale(va,va);va--;this.domElement=g;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(ga,sa){i=ga;c=sa;k=i/2;j=c/2;g.width=i;g.height=c;$.set(-k,-j,k,j)};this.setClearColor=function(ga,sa){s=ga!==null?new THREE.Color(ga):null;A=sa;X.set(-k,-j,k,j);l.setTransform(1,0,0,-1,k,j);this.clear()};this.clear=function(){if(!X.isEmpty()){X.inflate(1);X.minSelf($);if(s!==null){b(THREE.NormalBlending);a(1);l.fillStyle=
"rgba("+Math.floor(s.r*255)+","+Math.floor(s.g*255)+","+Math.floor(s.b*255)+","+A+")";l.fillRect(X.getX(),X.getY(),X.getWidth(),X.getHeight())}else l.clearRect(X.getX(),X.getY(),X.getWidth(),X.getHeight());X.empty()}};this.render=function(ga,sa){function Ma(E){var Y,T,I,Q=E.lights;ha.setRGB(0,0,0);ja.setRGB(0,0,0);t.setRGB(0,0,0);E=0;for(Y=Q.length;E<Y;E++){T=Q[E];I=T.color;if(T instanceof THREE.AmbientLight){ha.r+=I.r;ha.g+=I.g;ha.b+=I.b}else if(T instanceof THREE.DirectionalLight){ja.r+=I.r;ja.g+=
I.g;ja.b+=I.b}else if(T instanceof THREE.PointLight){t.r+=I.r;t.g+=I.g;t.b+=I.b}}}function Aa(E,Y,T,I){var Q,ca,fa,ia,la=E.lights;E=0;for(Q=la.length;E<Q;E++){ca=la[E];fa=ca.color;ia=ca.intensity;if(ca instanceof THREE.DirectionalLight){ca=T.dot(ca.position)*ia;if(ca>0){I.r+=fa.r*ca;I.g+=fa.g*ca;I.b+=fa.b*ca}}else if(ca instanceof THREE.PointLight){G.sub(ca.position,Y);G.normalize();ca=T.dot(G)*ia;if(ca>0){I.r+=fa.r*ca;I.g+=fa.g*ca;I.b+=fa.b*ca}}}}function Na(E,Y,T){if(T.opacity!=0){a(T.opacity);
b(T.blending);var I,Q,ca,fa,ia,la;if(T instanceof THREE.ParticleBasicMaterial){if(T.map){fa=T.map;ia=fa.width>>1;la=fa.height>>1;Q=Y.scale.x*k;ca=Y.scale.y*j;T=Q*ia;I=ca*la;H.set(E.x-T,E.y-I,E.x+T,E.y+I);if($.instersects(H)){l.save();l.translate(E.x,E.y);l.rotate(-Y.rotation);l.scale(Q,-ca);l.translate(-ia,-la);l.drawImage(fa,0,0);l.restore()}}}else if(T instanceof THREE.ParticleCircleMaterial){if(S){Z.r=ha.r+ja.r+t.r;Z.g=ha.g+ja.g+t.g;Z.b=ha.b+ja.b+t.b;v.r=T.color.r*Z.r;v.g=T.color.g*Z.g;v.b=T.color.b*
Z.b;v.updateStyleString()}else v.__styleString=T.color.__styleString;T=Y.scale.x*k;I=Y.scale.y*j;H.set(E.x-T,E.y-I,E.x+T,E.y+I);if($.instersects(H)){Q=v.__styleString;if(z!=Q)l.fillStyle=z=Q;l.save();l.translate(E.x,E.y);l.rotate(-Y.rotation);l.scale(T,I);l.beginPath();l.arc(0,0,1,0,F,true);l.closePath();l.fill();l.restore()}}}}function Oa(E,Y,T,I){if(I.opacity!=0){a(I.opacity);b(I.blending);l.beginPath();l.moveTo(E.positionScreen.x,E.positionScreen.y);l.lineTo(Y.positionScreen.x,Y.positionScreen.y);
l.closePath();if(I instanceof THREE.LineBasicMaterial){v.__styleString=I.color.__styleString;E=I.linewidth;if(J!=E)l.lineWidth=J=E;E=v.__styleString;if(x!=E)l.strokeStyle=x=E;l.stroke();H.inflate(I.linewidth*2)}}}function Ia(E,Y,T,I,Q,ca){if(Q.opacity!=0){a(Q.opacity);b(Q.blending);r=E.positionScreen.x;n=E.positionScreen.y;w=Y.positionScreen.x;m=Y.positionScreen.y;p=T.positionScreen.x;C=T.positionScreen.y;l.beginPath();l.moveTo(r,n);l.lineTo(w,m);l.lineTo(p,C);l.lineTo(r,n);l.closePath();if(Q instanceof
THREE.MeshBasicMaterial)if(Q.map)Q.map.image.loaded&&Q.map.mapping instanceof THREE.UVMapping&&xa(r,n,w,m,p,C,Q.map.image,I.uvs[0].u,I.uvs[0].v,I.uvs[1].u,I.uvs[1].v,I.uvs[2].u,I.uvs[2].v);else if(Q.env_map){if(Q.env_map.image.loaded)if(Q.env_map.mapping instanceof THREE.SphericalReflectionMapping){E=sa.matrix;G.copy(I.vertexNormalsWorld[0]);W=(G.x*E.n11+G.y*E.n12+G.z*E.n13)*0.5+0.5;M=-(G.x*E.n21+G.y*E.n22+G.z*E.n23)*0.5+0.5;G.copy(I.vertexNormalsWorld[1]);P=(G.x*E.n11+G.y*E.n12+G.z*E.n13)*0.5+0.5;
V=-(G.x*E.n21+G.y*E.n22+G.z*E.n23)*0.5+0.5;G.copy(I.vertexNormalsWorld[2]);O=(G.x*E.n11+G.y*E.n12+G.z*E.n13)*0.5+0.5;N=-(G.x*E.n21+G.y*E.n22+G.z*E.n23)*0.5+0.5;xa(r,n,w,m,p,C,Q.env_map.image,W,M,P,V,O,N)}}else Q.wireframe?Ba(Q.color.__styleString,Q.wireframe_linewidth):Ca(Q.color.__styleString);else if(Q instanceof THREE.MeshLambertMaterial){if(Q.map&&!Q.wireframe){Q.map.mapping instanceof THREE.UVMapping&&xa(r,n,w,m,p,C,Q.map.image,I.uvs[0].u,I.uvs[0].v,I.uvs[1].u,I.uvs[1].v,I.uvs[2].u,I.uvs[2].v);
b(THREE.SubtractiveBlending)}if(S)if(!Q.wireframe&&Q.shading==THREE.SmoothShading&&I.vertexNormalsWorld.length==3){D.r=B.r=y.r=ha.r;D.g=B.g=y.g=ha.g;D.b=B.b=y.b=ha.b;Aa(ca,I.v1.positionWorld,I.vertexNormalsWorld[0],D);Aa(ca,I.v2.positionWorld,I.vertexNormalsWorld[1],B);Aa(ca,I.v3.positionWorld,I.vertexNormalsWorld[2],y);K.r=(B.r+y.r)*0.5;K.g=(B.g+y.g)*0.5;K.b=(B.b+y.b)*0.5;U=Ja(D,B,y,K);xa(r,n,w,m,p,C,U,0,0,1,0,0,1)}else{Z.r=ha.r;Z.g=ha.g;Z.b=ha.b;Aa(ca,I.centroidWorld,I.normalWorld,Z);v.r=Q.color.r*
Z.r;v.g=Q.color.g*Z.g;v.b=Q.color.b*Z.b;v.updateStyleString();Q.wireframe?Ba(v.__styleString,Q.wireframe_linewidth):Ca(v.__styleString)}else Q.wireframe?Ba(Q.color.__styleString,Q.wireframe_linewidth):Ca(Q.color.__styleString)}else if(Q instanceof THREE.MeshDepthMaterial){aa=sa.near;L=sa.far;D.r=D.g=D.b=1-Ea(E.positionScreen.z,aa,L);B.r=B.g=B.b=1-Ea(Y.positionScreen.z,aa,L);y.r=y.g=y.b=1-Ea(T.positionScreen.z,aa,L);K.r=(B.r+y.r)*0.5;K.g=(B.g+y.g)*0.5;K.b=(B.b+y.b)*0.5;U=Ja(D,B,y,K);xa(r,n,w,m,p,C,
U,0,0,1,0,0,1)}else if(Q instanceof THREE.MeshNormalMaterial){v.r=Fa(I.normalWorld.x);v.g=Fa(I.normalWorld.y);v.b=Fa(I.normalWorld.z);v.updateStyleString();Q.wireframe?Ba(v.__styleString,Q.wireframe_linewidth):Ca(v.__styleString)}}}function Ba(E,Y){if(x!=E)l.strokeStyle=x=E;if(J!=Y)l.lineWidth=J=Y;l.stroke();H.inflate(Y*2)}function Ca(E){if(z!=E)l.fillStyle=z=E;l.fill()}function xa(E,Y,T,I,Q,ca,fa,ia,la,oa,ma,pa,ya){var ua,qa;ua=fa.width-1;qa=fa.height-1;ia*=ua;la*=qa;oa*=ua;ma*=qa;pa*=ua;ya*=qa;
T-=E;I-=Y;Q-=E;ca-=Y;oa-=ia;ma-=la;pa-=ia;ya-=la;qa=1/(oa*ya-pa*ma);ua=(ya*T-ma*Q)*qa;ma=(ya*I-ma*ca)*qa;T=(oa*Q-pa*T)*qa;I=(oa*ca-pa*I)*qa;E=E-ua*ia-T*la;Y=Y-ma*ia-I*la;l.save();l.transform(ua,ma,T,I,E,Y);l.clip();l.drawImage(fa,0,0);l.restore()}function Ja(E,Y,T,I){var Q=~~(E.r*255),ca=~~(E.g*255);E=~~(E.b*255);var fa=~~(Y.r*255),ia=~~(Y.g*255);Y=~~(Y.b*255);var la=~~(T.r*255),oa=~~(T.g*255);T=~~(T.b*255);var ma=~~(I.r*255),pa=~~(I.g*255);I=~~(I.b*255);ea[0]=Q<0?0:Q>255?255:Q;ea[1]=ca<0?0:ca>255?
255:ca;ea[2]=E<0?0:E>255?255:E;ea[4]=fa<0?0:fa>255?255:fa;ea[5]=ia<0?0:ia>255?255:ia;ea[6]=Y<0?0:Y>255?255:Y;ea[8]=la<0?0:la>255?255:la;ea[9]=oa<0?0:oa>255?255:oa;ea[10]=T<0?0:T>255?255:T;ea[12]=ma<0?0:ma>255?255:ma;ea[13]=pa<0?0:pa>255?255:pa;ea[14]=I<0?0:I>255?255:I;ba.putImageData(ka,0,0);ta.drawImage(R,0,0);return ra}function Ea(E,Y,T){E=(E-Y)/(T-Y);return E*E*(3-2*E)}function Fa(E){E=(E+1)*0.5;return E<0?0:E>1?1:E}function Ga(E,Y){var T=Y.x-E.x,I=Y.y-E.y,Q=1/Math.sqrt(T*T+I*I);T*=Q;I*=Q;Y.x+=
T;Y.y+=I;E.x-=T;E.y-=I}var Da,Ka,da,na,wa,Ha,La,za;l.setTransform(1,0,0,-1,k,j);this.autoClear&&this.clear();e=d.projectScene(ga,sa,this.sortElements);(S=ga.lights.length>0)&&Ma(ga);Da=0;for(Ka=e.length;Da<Ka;Da++){da=e[Da];H.empty();if(da instanceof THREE.RenderableParticle){q=da;q.x*=k;q.y*=j;na=0;for(wa=da.materials.length;na<wa;na++)Na(q,da,da.materials[na],ga)}else if(da instanceof THREE.RenderableLine){q=da.v1;h=da.v2;q.positionScreen.x*=k;q.positionScreen.y*=j;h.positionScreen.x*=k;h.positionScreen.y*=
j;H.addPoint(q.positionScreen.x,q.positionScreen.y);H.addPoint(h.positionScreen.x,h.positionScreen.y);if($.instersects(H)){na=0;for(wa=da.materials.length;na<wa;)Oa(q,h,da,da.materials[na++],ga)}}else if(da instanceof THREE.RenderableFace3){q=da.v1;h=da.v2;f=da.v3;q.positionScreen.x*=k;q.positionScreen.y*=j;h.positionScreen.x*=k;h.positionScreen.y*=j;f.positionScreen.x*=k;f.positionScreen.y*=j;if(da.overdraw){Ga(q.positionScreen,h.positionScreen);Ga(h.positionScreen,f.positionScreen);Ga(f.positionScreen,
q.positionScreen)}H.add3Points(q.positionScreen.x,q.positionScreen.y,h.positionScreen.x,h.positionScreen.y,f.positionScreen.x,f.positionScreen.y);if($.instersects(H)){na=0;for(wa=da.meshMaterials.length;na<wa;){za=da.meshMaterials[na++];if(za instanceof THREE.MeshFaceMaterial){Ha=0;for(La=da.faceMaterials.length;Ha<La;)(za=da.faceMaterials[Ha++])&&Ia(q,h,f,da,za,ga)}else Ia(q,h,f,da,za,ga)}}}X.addRectangle(H)}l.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(W,M,P){var V,O,N,$;V=0;for(O=W.lights.length;V<O;V++){N=W.lights[V];if(N instanceof THREE.DirectionalLight){$=M.normalWorld.dot(N.position)*N.intensity;if($>0){P.r+=N.color.r*$;P.g+=N.color.g*$;P.b+=N.color.b*$}}else if(N instanceof THREE.PointLight){C.sub(N.position,M.centroidWorld);C.normalize();$=M.normalWorld.dot(C)*N.intensity;if($>0){P.r+=N.color.r*$;P.g+=N.color.g*$;P.b+=N.color.b*$}}}}function b(W,M,P,V,O,N){y=d(K++);y.setAttribute("d","M "+W.positionScreen.x+
" "+W.positionScreen.y+" L "+M.positionScreen.x+" "+M.positionScreen.y+" L "+P.positionScreen.x+","+P.positionScreen.y+"z");if(O instanceof THREE.MeshBasicMaterial)f.__styleString=O.color.__styleString;else if(O instanceof THREE.MeshLambertMaterial)if(h){r.r=n.r;r.g=n.g;r.b=n.b;a(N,V,r);f.r=O.color.r*r.r;f.g=O.color.g*r.g;f.b=O.color.b*r.b;f.updateStyleString()}else f.__styleString=O.color.__styleString;else if(O instanceof THREE.MeshDepthMaterial){p=1-O.__2near/(O.__farPlusNear-V.z*O.__farMinusNear);
f.setRGB(p,p,p)}else O instanceof THREE.MeshNormalMaterial&&f.setRGB(g(V.normalWorld.x),g(V.normalWorld.y),g(V.normalWorld.z));O.wireframe?y.setAttribute("style","fill: none; stroke: "+f.__styleString+"; stroke-width: "+O.wireframe_linewidth+"; stroke-opacity: "+O.opacity+"; stroke-linecap: "+O.wireframe_linecap+"; stroke-linejoin: "+O.wireframe_linejoin):y.setAttribute("style","fill: "+f.__styleString+"; fill-opacity: "+O.opacity);k.appendChild(y)}function e(W,M,P,V,O,N,$){y=d(K++);y.setAttribute("d",
"M "+W.positionScreen.x+" "+W.positionScreen.y+" L "+M.positionScreen.x+" "+M.positionScreen.y+" L "+P.positionScreen.x+","+P.positionScreen.y+" L "+V.positionScreen.x+","+V.positionScreen.y+"z");if(N instanceof THREE.MeshBasicMaterial)f.__styleString=N.color.__styleString;else if(N instanceof THREE.MeshLambertMaterial)if(h){r.r=n.r;r.g=n.g;r.b=n.b;a($,O,r);f.r=N.color.r*r.r;f.g=N.color.g*r.g;f.b=N.color.b*r.b;f.updateStyleString()}else f.__styleString=N.color.__styleString;else if(N instanceof THREE.MeshDepthMaterial){p=
1-N.__2near/(N.__farPlusNear-O.z*N.__farMinusNear);f.setRGB(p,p,p)}else N instanceof THREE.MeshNormalMaterial&&f.setRGB(g(O.normalWorld.x),g(O.normalWorld.y),g(O.normalWorld.z));N.wireframe?y.setAttribute("style","fill: none; stroke: "+f.__styleString+"; stroke-width: "+N.wireframe_linewidth+"; stroke-opacity: "+N.opacity+"; stroke-linecap: "+N.wireframe_linecap+"; stroke-linejoin: "+N.wireframe_linejoin):y.setAttribute("style","fill: "+f.__styleString+"; fill-opacity: "+N.opacity);k.appendChild(y)}
function d(W){if(v[W]==null){v[W]=document.createElementNS("http://www.w3.org/2000/svg","path");U==0&&v[W].setAttribute("shape-rendering","crispEdges");return v[W]}return v[W]}function g(W){return W<0?Math.min((1+W)*0.5,0.5):0.5+Math.min(W*0.5,0.5)}var i=null,c=new THREE.Projector,k=document.createElementNS("http://www.w3.org/2000/svg","svg"),j,l,s,A,o,u,x,z,J=new THREE.Rectangle,q=new THREE.Rectangle,h=false,f=new THREE.Color(16777215),r=new THREE.Color(16777215),n=new THREE.Color(0),w=new THREE.Color(0),
m=new THREE.Color(0),p,C=new THREE.Vector3,v=[],D=[],B=[],y,K,aa,L,U=1;this.domElement=k;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(W){switch(W){case "high":U=1;break;case "low":U=0}};this.setSize=function(W,M){j=W;l=M;s=j/2;A=l/2;k.setAttribute("viewBox",-s+" "+-A+" "+j+" "+l);k.setAttribute("width",j);k.setAttribute("height",l);J.set(-s,-A,s,A)};this.clear=function(){for(;k.childNodes.length>0;)k.removeChild(k.childNodes[0])};this.render=function(W,M){var P,
V,O,N,$,X,H,S;this.autoClear&&this.clear();i=c.projectScene(W,M,this.sortElements);L=aa=K=0;if(h=W.lights.length>0){H=W.lights;n.setRGB(0,0,0);w.setRGB(0,0,0);m.setRGB(0,0,0);P=0;for(V=H.length;P<V;P++){O=H[P];N=O.color;if(O instanceof THREE.AmbientLight){n.r+=N.r;n.g+=N.g;n.b+=N.b}else if(O instanceof THREE.DirectionalLight){w.r+=N.r;w.g+=N.g;w.b+=N.b}else if(O instanceof THREE.PointLight){m.r+=N.r;m.g+=N.g;m.b+=N.b}}}P=0;for(V=i.length;P<V;P++){H=i[P];q.empty();if(H instanceof THREE.RenderableParticle){o=
H;o.x*=s;o.y*=-A;O=0;for(N=H.materials.length;O<N;O++)if(S=H.materials[O]){$=o;X=H;S=S;var Z=aa++;if(D[Z]==null){D[Z]=document.createElementNS("http://www.w3.org/2000/svg","circle");U==0&&D[Z].setAttribute("shape-rendering","crispEdges")}y=D[Z];y.setAttribute("cx",$.x);y.setAttribute("cy",$.y);y.setAttribute("r",X.scale.x*s);if(S instanceof THREE.ParticleCircleMaterial){if(h){r.r=n.r+w.r+m.r;r.g=n.g+w.g+m.g;r.b=n.b+w.b+m.b;f.r=S.color.r*r.r;f.g=S.color.g*r.g;f.b=S.color.b*r.b;f.updateStyleString()}else f=
S.color;y.setAttribute("style","fill: "+f.__styleString)}k.appendChild(y)}}else if(H instanceof THREE.RenderableLine){o=H.v1;u=H.v2;o.positionScreen.x*=s;o.positionScreen.y*=-A;u.positionScreen.x*=s;u.positionScreen.y*=-A;q.addPoint(o.positionScreen.x,o.positionScreen.y);q.addPoint(u.positionScreen.x,u.positionScreen.y);if(J.instersects(q)){O=0;for(N=H.materials.length;O<N;)if(S=H.materials[O++]){$=o;X=u;S=S;Z=L++;if(B[Z]==null){B[Z]=document.createElementNS("http://www.w3.org/2000/svg","line");U==
0&&B[Z].setAttribute("shape-rendering","crispEdges")}y=B[Z];y.setAttribute("x1",$.positionScreen.x);y.setAttribute("y1",$.positionScreen.y);y.setAttribute("x2",X.positionScreen.x);y.setAttribute("y2",X.positionScreen.y);if(S instanceof THREE.LineBasicMaterial){f.__styleString=S.color.__styleString;y.setAttribute("style","fill: none; stroke: "+f.__styleString+"; stroke-width: "+S.linewidth+"; stroke-opacity: "+S.opacity+"; stroke-linecap: "+S.linecap+"; stroke-linejoin: "+S.linejoin);k.appendChild(y)}}}}else if(H instanceof
THREE.RenderableFace3){o=H.v1;u=H.v2;x=H.v3;o.positionScreen.x*=s;o.positionScreen.y*=-A;u.positionScreen.x*=s;u.positionScreen.y*=-A;x.positionScreen.x*=s;x.positionScreen.y*=-A;q.addPoint(o.positionScreen.x,o.positionScreen.y);q.addPoint(u.positionScreen.x,u.positionScreen.y);q.addPoint(x.positionScreen.x,x.positionScreen.y);if(J.instersects(q)){O=0;for(N=H.meshMaterials.length;O<N;){S=H.meshMaterials[O++];if(S instanceof THREE.MeshFaceMaterial){$=0;for(X=H.faceMaterials.length;$<X;)(S=H.faceMaterials[$++])&&
b(o,u,x,H,S,W)}else S&&b(o,u,x,H,S,W)}}}else if(H instanceof THREE.RenderableFace4){o=H.v1;u=H.v2;x=H.v3;z=H.v4;o.positionScreen.x*=s;o.positionScreen.y*=-A;u.positionScreen.x*=s;u.positionScreen.y*=-A;x.positionScreen.x*=s;x.positionScreen.y*=-A;z.positionScreen.x*=s;z.positionScreen.y*=-A;q.addPoint(o.positionScreen.x,o.positionScreen.y);q.addPoint(u.positionScreen.x,u.positionScreen.y);q.addPoint(x.positionScreen.x,x.positionScreen.y);q.addPoint(z.positionScreen.x,z.positionScreen.y);if(J.instersects(q)){O=
0;for(N=H.meshMaterials.length;O<N;){S=H.meshMaterials[O++];if(S instanceof THREE.MeshFaceMaterial){$=0;for(X=H.faceMaterials.length;$<X;)(S=H.faceMaterials[$++])&&e(o,u,x,z,H,S,W)}else S&&e(o,u,x,z,H,S,W)}}}}}};
THREE.WebGLRenderer=function(a){function b(h,f){h.fragment_shader=f.fragment_shader;h.vertex_shader=f.vertex_shader;h.uniforms=Uniforms.clone(f.uniforms)}function e(h,f){h.uniforms.color.value.setRGB(h.color.r*h.opacity,h.color.g*h.opacity,h.color.b*h.opacity);h.uniforms.opacity.value=h.opacity;h.uniforms.map.texture=h.map;h.uniforms.env_map.texture=h.env_map;h.uniforms.reflectivity.value=h.reflectivity;h.uniforms.refraction_ratio.value=h.refraction_ratio;h.uniforms.combine.value=h.combine;h.uniforms.useRefract.value=
h.env_map&&h.env_map.mapping instanceof THREE.CubeRefractionMapping;if(f){h.uniforms.fogColor.value.setHex(f.color.hex);if(f instanceof THREE.Fog){h.uniforms.fogNear.value=f.near;h.uniforms.fogFar.value=f.far}else if(f instanceof THREE.FogExp2)h.uniforms.fogDensity.value=f.density}}function d(h,f){var r;if(h=="fragment")r=c.createShader(c.FRAGMENT_SHADER);else if(h=="vertex")r=c.createShader(c.VERTEX_SHADER);c.shaderSource(r,f);c.compileShader(r);if(!c.getShaderParameter(r,c.COMPILE_STATUS)){alert(c.getShaderInfoLog(r));
return null}return r}function g(h){switch(h){case THREE.RepeatWrapping:return c.REPEAT;case THREE.ClampToEdgeWrapping:return c.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return c.MIRRORED_REPEAT;case THREE.NearestFilter:return c.NEAREST;case THREE.NearestMipMapNearestFilter:return c.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return c.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return c.LINEAR;case THREE.LinearMipMapNearestFilter:return c.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return c.LINEAR_MIPMAP_LINEAR}return 0}
var i=document.createElement("canvas"),c,k=null,j=new THREE.Matrix4,l,s=new Float32Array(16),A=new Float32Array(16),o=new Float32Array(16),u=new Float32Array(9),x=new Float32Array(16),z=true,J=new THREE.Color(0),q=0;if(a){if(a.antialias!==undefined)z=a.antialias;a.clearColor!==undefined&&J.setHex(a.clearColor);if(a.clearAlpha!==undefined)q=a.clearAlpha}this.domElement=i;this.autoClear=true;(function(h,f,r){try{c=i.getContext("experimental-webgl",{antialias:h})}catch(n){}if(!c){alert("WebGL not supported");
throw"cannot create webgl context";}c.clearColor(0,0,0,1);c.clearDepth(1);c.enable(c.DEPTH_TEST);c.depthFunc(c.LEQUAL);c.frontFace(c.CCW);c.cullFace(c.BACK);c.enable(c.CULL_FACE);c.enable(c.BLEND);c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA);c.clearColor(f.r,f.g,f.b,r)})(z,J,q);this.setSize=function(h,f){i.width=h;i.height=f;c.viewport(0,0,i.width,i.height)};this.setClearColor=function(h,f){var r=new THREE.Color(h);c.clearColor(r.r,r.g,r.b,f)};this.clear=function(){c.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT)};
this.setupLights=function(h,f){var r,n,w,m=0,p=0,C=0,v=[],D=[],B=[],y=[];r=0;for(n=f.length;r<n;r++){w=f[r];if(w instanceof THREE.AmbientLight){m+=w.color.r;p+=w.color.g;C+=w.color.b}else if(w instanceof THREE.DirectionalLight){v.push(w.color.r*w.intensity,w.color.g*w.intensity,w.color.b*w.intensity);D.push(w.position.x,w.position.y,w.position.z)}else if(w instanceof THREE.PointLight){B.push(w.color.r*w.intensity,w.color.g*w.intensity,w.color.b*w.intensity);y.push(w.position.x,w.position.y,w.position.z)}}return{ambient:[m,
p,C],directional:{colors:v,positions:D},point:{colors:B,positions:y}}};this.createBuffers=function(h,f){var r,n,w,m,p,C,v,D,B,y,K=[],aa=[],L=[],U=[],W=[],M=[],P=0,V=h.geometry.geometryChunks[f],O;p=false;r=0;for(n=h.materials.length;r<n;r++){C=h.materials[r];if(C instanceof THREE.MeshFaceMaterial){C=0;for(O=V.materials.length;C<O;C++)if(V.materials[C]&&V.materials[C].shading!=undefined&&V.materials[C].shading==THREE.SmoothShading){p=true;break}}else if(C&&C.shading!=undefined&&C.shading==THREE.SmoothShading){p=
true;break}if(p)break}O=p;r=0;for(n=V.faces.length;r<n;r++){w=V.faces[r];m=h.geometry.faces[w];p=m.vertexNormals;C=m.normal;w=h.geometry.uvs[w];if(m instanceof THREE.Face3){v=h.geometry.vertices[m.a].position;D=h.geometry.vertices[m.b].position;B=h.geometry.vertices[m.c].position;L.push(v.x,v.y,v.z,D.x,D.y,D.z,B.x,B.y,B.z);if(h.geometry.hasTangents){v=h.geometry.vertices[m.a].tangent;D=h.geometry.vertices[m.b].tangent;B=h.geometry.vertices[m.c].tangent;W.push(v.x,v.y,v.z,v.w,D.x,D.y,D.z,D.w,B.x,B.y,
B.z,B.w)}if(p.length==3&&O)for(m=0;m<3;m++)U.push(p[m].x,p[m].y,p[m].z);else for(m=0;m<3;m++)U.push(C.x,C.y,C.z);if(w)for(m=0;m<3;m++)M.push(w[m].u,w[m].v);K.push(P,P+1,P+2);aa.push(P,P+1,P,P+2,P+1,P+2);P+=3}else if(m instanceof THREE.Face4){v=h.geometry.vertices[m.a].position;D=h.geometry.vertices[m.b].position;B=h.geometry.vertices[m.c].position;y=h.geometry.vertices[m.d].position;L.push(v.x,v.y,v.z,D.x,D.y,D.z,B.x,B.y,B.z,y.x,y.y,y.z);if(h.geometry.hasTangents){v=h.geometry.vertices[m.a].tangent;
D=h.geometry.vertices[m.b].tangent;B=h.geometry.vertices[m.c].tangent;m=h.geometry.vertices[m.d].tangent;W.push(v.x,v.y,v.z,v.w,D.x,D.y,D.z,D.w,B.x,B.y,B.z,B.w,m.x,m.y,m.z,m.w)}if(p.length==4&&O)for(m=0;m<4;m++)U.push(p[m].x,p[m].y,p[m].z);else for(m=0;m<4;m++)U.push(C.x,C.y,C.z);if(w)for(m=0;m<4;m++)M.push(w[m].u,w[m].v);K.push(P,P+1,P+2,P,P+2,P+3);aa.push(P,P+1,P,P+2,P,P+3,P+1,P+2,P+2,P+3);P+=4}}if(L.length){V.__webGLVertexBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,V.__webGLVertexBuffer);
c.bufferData(c.ARRAY_BUFFER,new Float32Array(L),c.STATIC_DRAW);V.__webGLNormalBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,V.__webGLNormalBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(U),c.STATIC_DRAW);if(h.geometry.hasTangents){V.__webGLTangentBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,V.__webGLTangentBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(W),c.STATIC_DRAW)}if(M.length>0){V.__webGLUVBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,V.__webGLUVBuffer);c.bufferData(c.ARRAY_BUFFER,
new Float32Array(M),c.STATIC_DRAW)}V.__webGLFaceBuffer=c.createBuffer();c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,V.__webGLFaceBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,new Uint16Array(K),c.STATIC_DRAW);V.__webGLLineBuffer=c.createBuffer();c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,V.__webGLLineBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,new Uint16Array(aa),c.STATIC_DRAW);V.__webGLFaceCount=K.length;V.__webGLLineCount=aa.length}};this.renderBuffer=function(h,f,r,n,w){var m,p,C,v;if(!n.program){if(n instanceof
THREE.MeshDepthMaterial){b(n,THREE.ShaderLib.depth);n.uniforms.mNear.value=h.near;n.uniforms.mFar.value=h.far}else if(n instanceof THREE.MeshNormalMaterial)b(n,THREE.ShaderLib.normal);else if(n instanceof THREE.MeshBasicMaterial){b(n,THREE.ShaderLib.basic);e(n,r)}else if(n instanceof THREE.MeshLambertMaterial){b(n,THREE.ShaderLib.lambert);e(n,r)}else if(n instanceof THREE.MeshPhongMaterial){b(n,THREE.ShaderLib.phong);e(n,r)}if(scene){var D,B,y;D=v=p=0;for(B=f.length;D<B;D++){y=f[D];y instanceof THREE.DirectionalLight&&
v++;y instanceof THREE.PointLight&&p++}if(p+v<=4){D=v;p=p}else{D=Math.ceil(4*v/(p+v));p=4-D}p={directional:D,point:p}}else p={directional:1,point:3};v={fog:r,map:n.map,env_map:n.env_map,maxDirLights:p.directional,maxPointLights:p.point};p=n.fragment_shader;D=n.vertex_shader;B=c.createProgram();y=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+v.maxDirLights,"#define MAX_POINT_LIGHTS "+v.maxPointLights,v.fog?"#define USE_FOG":"",v.fog instanceof THREE.FogExp2?"#define FOG_EXP2":
"",v.map?"#define USE_MAP":"",v.env_map?"#define USE_ENVMAP":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");v=[c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+v.maxDirLights,"#define MAX_POINT_LIGHTS "+v.maxPointLights,v.map?"#define USE_MAP":"",v.env_map?"#define USE_ENVMAP":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n"].join("\n");
c.attachShader(B,d("fragment",y+p));c.attachShader(B,d("vertex",v+D));c.linkProgram(B);c.getProgramParameter(B,c.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+c.getProgramParameter(B,c.VALIDATE_STATUS)+", gl error ["+c.getError()+"]");B.uniforms={};B.attributes={};n.program=B;p=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(m in n.uniforms)p.push(m);m=n.program;D=0;for(B=p.length;D<B;D++){y=p[D];m.uniforms[y]=c.getUniformLocation(m,
y)}m=n.program;p=["position","normal","uv","tangent"];D=0;for(B=p.length;D<B;D++){y=p[D];m.attributes[y]=c.getAttribLocation(m,y)}}m=n.program;if(m!=k){c.useProgram(m);k=m}this.loadCamera(m,h);this.loadMatrices(m);if(n instanceof THREE.MeshPhongMaterial||n instanceof THREE.MeshLambertMaterial){h=this.setupLights(m,f);n.uniforms.enableLighting.value=h.directional.positions.length+h.point.positions.length;n.uniforms.ambientLightColor.value=h.ambient;n.uniforms.directionalLightColor.value=h.directional.colors;
n.uniforms.directionalLightDirection.value=h.directional.positions;n.uniforms.pointLightColor.value=h.point.colors;n.uniforms.pointLightPosition.value=h.point.positions}if(n instanceof THREE.MeshBasicMaterial||n instanceof THREE.MeshLambertMaterial||n instanceof THREE.MeshPhongMaterial)e(n,r);if(n instanceof THREE.MeshPhongMaterial){n.uniforms.ambient.value.setRGB(n.ambient.r,n.ambient.g,n.ambient.b);n.uniforms.specular.value.setRGB(n.specular.r,n.specular.g,n.specular.b);n.uniforms.shininess.value=
n.shininess}r=n.uniforms;for(C in r){f=r[C].type;h=r[C].value;p=m.uniforms[C];if(f=="i")c.uniform1i(p,h);else if(f=="f")c.uniform1f(p,h);else if(f=="fv")c.uniform3fv(p,h);else if(f=="v2")c.uniform2f(p,h.x,h.y);else if(f=="v3")c.uniform3f(p,h.x,h.y,h.z);else if(f=="c")c.uniform3f(p,h.r,h.g,h.b);else if(f=="t"){c.uniform1i(p,h);if(f=r[C].texture)if(f.image instanceof Array&&f.image.length==6){f=f;h=h;if(f.image.length==6){if(!f.image.__webGLTextureCube&&!f.image.__cubeMapInitialized&&f.image.loadCount==
6){f.image.__webGLTextureCube=c.createTexture();c.bindTexture(c.TEXTURE_CUBE_MAP,f.image.__webGLTextureCube);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MAG_FILTER,c.LINEAR);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MIN_FILTER,c.LINEAR_MIPMAP_LINEAR);for(p=0;p<6;++p)c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+p,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,f.image[p]);c.generateMipmap(c.TEXTURE_CUBE_MAP);
c.bindTexture(c.TEXTURE_CUBE_MAP,null);f.image.__cubeMapInitialized=true}c.activeTexture(c.TEXTURE0+h);c.bindTexture(c.TEXTURE_CUBE_MAP,f.image.__webGLTextureCube)}}else{f=f;h=h;if(!f.__webGLTexture&&f.image.loaded){f.__webGLTexture=c.createTexture();c.bindTexture(c.TEXTURE_2D,f.__webGLTexture);c.texImage2D(c.TEXTURE_2D,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,f.image);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,g(f.wrap_s));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,g(f.wrap_t));c.texParameteri(c.TEXTURE_2D,
c.TEXTURE_MAG_FILTER,g(f.mag_filter));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,g(f.min_filter));c.generateMipmap(c.TEXTURE_2D);c.bindTexture(c.TEXTURE_2D,null)}c.activeTexture(c.TEXTURE0+h);c.bindTexture(c.TEXTURE_2D,f.__webGLTexture)}}}C=m.attributes;c.bindBuffer(c.ARRAY_BUFFER,w.__webGLVertexBuffer);c.vertexAttribPointer(C.position,3,c.FLOAT,false,0,0);c.enableVertexAttribArray(C.position);if(C.normal>=0){c.bindBuffer(c.ARRAY_BUFFER,w.__webGLNormalBuffer);c.vertexAttribPointer(C.normal,
3,c.FLOAT,false,0,0);c.enableVertexAttribArray(C.normal)}if(C.tangent>=0){c.bindBuffer(c.ARRAY_BUFFER,w.__webGLTangentBuffer);c.vertexAttribPointer(C.tangent,4,c.FLOAT,false,0,0);c.enableVertexAttribArray(C.tangent)}if(C.uv>=0)if(w.__webGLUVBuffer){c.bindBuffer(c.ARRAY_BUFFER,w.__webGLUVBuffer);c.vertexAttribPointer(C.uv,2,c.FLOAT,false,0,0);c.enableVertexAttribArray(C.uv)}else c.disableVertexAttribArray(C.uv);if(n.wireframe){c.lineWidth(n.wireframe_linewidth);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,
w.__webGLLineBuffer);c.drawElements(c.LINES,w.__webGLLineCount,c.UNSIGNED_SHORT,0)}else{c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,w.__webGLFaceBuffer);c.drawElements(c.TRIANGLES,w.__webGLFaceCount,c.UNSIGNED_SHORT,0)}};this.renderPass=function(h,f,r,n,w,m,p){var C,v,D,B,y;D=0;for(B=n.materials.length;D<B;D++){C=n.materials[D];if(C instanceof THREE.MeshFaceMaterial){C=0;for(v=w.materials.length;C<v;C++)if((y=w.materials[C])&&y.blending==m&&y.opacity<1==p){this.setBlending(y.blending);this.renderBuffer(h,
f,r,y,w)}}else if((y=C)&&y.blending==m&&y.opacity<1==p){this.setBlending(y.blending);this.renderBuffer(h,f,r,y,w)}}};this.render=function(h,f){var r,n,w,m,p=h.lights,C=h.fog;this.initWebGLObjects(h);this.autoClear&&this.clear();f.autoUpdateMatrix&&f.updateMatrix();s.set(f.matrix.flatten());o.set(f.projectionMatrix.flatten());r=0;for(n=h.__webGLObjects.length;r<n;r++){w=h.__webGLObjects[r];m=w.object;w=w.buffer;if(m.visible){this.setupMatrices(m,f);this.renderPass(f,p,C,m,w,THREE.NormalBlending,false)}}r=
0;for(n=h.__webGLObjects.length;r<n;r++){w=h.__webGLObjects[r];m=w.object;w=w.buffer;if(m.visible){this.setupMatrices(m,f);this.renderPass(f,p,C,m,w,THREE.AdditiveBlending,false);this.renderPass(f,p,C,m,w,THREE.SubtractiveBlending,false);this.renderPass(f,p,C,m,w,THREE.AdditiveBlending,true);this.renderPass(f,p,C,m,w,THREE.SubtractiveBlending,true);this.renderPass(f,p,C,m,w,THREE.NormalBlending,true)}}};this.initWebGLObjects=function(h){var f,r,n,w,m,p;if(!h.__webGLObjects){h.__webGLObjects=[];h.__webGLObjectsMap=
{}}f=0;for(r=h.objects.length;f<r;f++){n=h.objects[f];if(h.__webGLObjectsMap[n.id]==undefined)h.__webGLObjectsMap[n.id]={};p=h.__webGLObjectsMap[n.id];if(n instanceof THREE.Mesh)for(m in n.geometry.geometryChunks){w=n.geometry.geometryChunks[m];w.__webGLVertexBuffer||this.createBuffers(n,m);if(p[m]==undefined){w={buffer:w,object:n};h.__webGLObjects.push(w);p[m]=1}}}};this.removeObject=function(h,f){var r,n;for(r=h.__webGLObjects.length-1;r>=0;r--){n=h.__webGLObjects[r].object;f==n&&h.__webGLObjects.splice(r,
1)}};this.setupMatrices=function(h,f){h.autoUpdateMatrix&&h.updateMatrix();j.multiply(f.matrix,h.matrix);A.set(j.flatten());l=THREE.Matrix4.makeInvert3x3(j).transpose();u.set(l.m);x.set(h.matrix.flatten())};this.loadMatrices=function(h){c.uniformMatrix4fv(h.uniforms.viewMatrix,false,s);c.uniformMatrix4fv(h.uniforms.modelViewMatrix,false,A);c.uniformMatrix4fv(h.uniforms.projectionMatrix,false,o);c.uniformMatrix3fv(h.uniforms.normalMatrix,false,u);c.uniformMatrix4fv(h.uniforms.objectMatrix,false,x)};
this.loadCamera=function(h,f){c.uniform3f(h.uniforms.cameraPosition,f.position.x,f.position.y,f.position.z)};this.setBlending=function(h){switch(h){case THREE.AdditiveBlending:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ONE,c.ONE);break;case THREE.SubtractiveBlending:c.blendFunc(c.DST_COLOR,c.ZERO);break;default:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=function(h,f){if(h){!f||f=="ccw"?c.frontFace(c.CCW):c.frontFace(c.CW);if(h=="back")c.cullFace(c.BACK);
else h=="front"?c.cullFace(c.FRONT):c.cullFace(c.FRONT_AND_BACK);c.enable(c.CULL_FACE)}else c.disable(c.CULL_FACE)};this.supportsVertexTextures=function(){return c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, 1.0 ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\ncubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = mix( gl_FragColor, cubeColor, reflectivity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}",
lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif"};
THREE.UniformsLib={common:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",
value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",
vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsLib.common,fragment_shader:["uniform vec3 color;\nuniform float opacity;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",
THREE.Snippets.map_fragment,"gl_FragColor = mColor * mapColor;",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},lambert:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nvarying vec3 vLightWeighting;",
THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,"gl_FragColor =  mColor * mapColor * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,
THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},phong:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},
shininess:{type:"f",value:30}}]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,THREE.Snippets.lights_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lights_fragment,
"gl_FragColor =  mapColor * totalLight * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",
THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")}};THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
var GeometryUtils={merge:function(a,b){var e=b instanceof THREE.Mesh,d=a.vertices.length,g=e?b.geometry:b,i=a.vertices,c=g.vertices,k=a.faces,j=g.faces,l=a.uvs;g=g.uvs;e&&b.updateMatrix();for(var s=0,A=c.length;s<A;s++){var o=new THREE.Vertex(c[s].position.clone());e&&b.matrix.multiplyVector3(o.position);i.push(o)}s=0;for(A=j.length;s<A;s++){c=j[s];var u,x=c.vertexNormals;if(c instanceof THREE.Face3)u=new THREE.Face3(c.a+d,c.b+d,c.c+d);else if(c instanceof THREE.Face4)u=new THREE.Face4(c.a+d,c.b+
d,c.c+d,c.d+d);u.centroid.copy(c.centroid);u.normal.copy(c.normal);e=0;for(i=x.length;e<i;e++){o=x[e];u.vertexNormals.push(o.clone())}u.materials=c.materials.slice();k.push(u)}s=0;for(A=g.length;s<A;s++){d=g[s];k=[];e=0;for(i=d.length;e<i;e++)k.push(new THREE.UV(d[e].u,d[e].v));l.push(k)}}},ImageUtils={loadTexture:function(a,b){var e=new Image;e.onload=function(){this.loaded=true};e.src=a;return new THREE.Texture(e,b)},loadArray:function(a){var b,e,d=[];b=d.loadCount=0;for(e=a.length;b<e;++b){d[b]=
new Image;d[b].loaded=0;d[b].onload=function(){d.loadCount+=1;this.loaded=true};d[b].src=a[b]}return d}},SceneUtils={addMesh:function(a,b,e,d,g,i,c,k,j,l){b=new THREE.Mesh(b,l);b.scale.x=b.scale.y=b.scale.z=e;b.position.x=d;b.position.y=g;b.position.z=i;b.rotation.x=c;b.rotation.y=k;b.rotation.z=j;a.addObject(b);return b},addPanoramaCubeWebGL:function(a,b,e){var d=ShaderUtils.lib.cube;d.uniforms.tCube.texture=e;e=new THREE.MeshShaderMaterial({fragment_shader:d.fragment_shader,vertex_shader:d.vertex_shader,
uniforms:d.uniforms});b=new THREE.Mesh(new Cube(b,b,b,1,1,null,true),e);a.addObject(b);return b},addPanoramaCube:function(a,b,e){var d=[];d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[0])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[1])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[2])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[3])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[4])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[5])}));
b=new THREE.Mesh(new Cube(b,b,b,1,1,d,true),new THREE.MeshFaceMaterial);a.addObject(b);return b},addPanoramaCubePlanes:function(a,b,e){var d=b/2;b=new Plane(b,b);var g=Math.PI/2,i=Math.PI;SceneUtils.addMesh(a,b,1,0,0,-d,0,0,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[5])}));SceneUtils.addMesh(a,b,1,-d,0,0,0,g,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[0])}));SceneUtils.addMesh(a,b,1,d,0,0,0,-g,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[1])}));SceneUtils.addMesh(a,
b,1,0,d,0,g,0,i,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[2])}));SceneUtils.addMesh(a,b,1,0,-d,0,-g,0,i,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[3])}))}},ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertex_shader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main(void) {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tNormal:{type:"t",value:2,texture:null},tAO:{type:"t",value:3,texture:null},uNormalScale:{type:"f",value:1},tDisplacement:{type:"t",value:4,texture:null},uDisplacementBias:{type:"f",value:-0.5},uDisplacementScale:{type:"f",value:2.5},uPointLightPos:{type:"v3",value:new THREE.Vector3},uPointLightColor:{type:"c",value:new THREE.Color(15658734)},uDirLightPos:{type:"v3",value:new THREE.Vector3},
uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30}},fragment_shader:"uniform vec3 uDirLightPos;\nuniform vec3 uAmbientLightColor;\nuniform vec3 uDirLightColor;\nuniform vec3 uPointLightColor;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform bool enableDiffuse;\nuniform bool enableAO;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tAO;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 diffuseTex = vec3( 1.0, 1.0, 1.0 );\nvec3 aoTex = vec3( 1.0, 1.0, 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse )\ndiffuseTex = texture2D( tDiffuse, vUv ).xyz;\nif( enableAO )\naoTex = texture2D( tAO, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec3 pointVector = normalize( vPointLightVector );\nvec3 pointHalfVector = normalize( vPointLightVector + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, uShininess );\npointDiffuse  += vec4( uDiffuseColor, 1.0 ) * pointDiffuseWeight;\npointSpecular += vec4( uSpecularColor, 1.0 ) * pointSpecularWeight;\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 lDirection = viewMatrix * vec4( uDirLightPos, 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, uShininess );\ndirDiffuse  += vec4( uDiffuseColor, 1.0 ) * dirDiffuseWeight;\ndirSpecular += vec4( uSpecularColor, 1.0 ) * dirSpecularWeight;\nvec4 totalLight = vec4( uAmbientLightColor * uAmbientColor, 1.0 );\ntotalLight += vec4( uDirLightColor, 1.0 ) * ( dirDiffuse + dirSpecular );\ntotalLight += vec4( uPointLightColor, 1.0 ) * ( pointDiffuse + pointSpecular );\ngl_FragColor = vec4( totalLight.xyz * aoTex * diffuseTex, 1.0 );\n}",
vertex_shader:"attribute vec4 tangent;\nuniform vec3 uPointLightPos;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec4 lPosition = viewMatrix * vec4( uPointLightPos, 1.0 );\nvPointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}"},
basic:{uniforms:{},vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"void main() {\ngl_FragColor = vec4(1.0, 0.0, 0.0, 0.5);\n}"},cube:{uniforms:{tCube:{type:"t",value:1,texture:null}},vertex_shader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( - wPos.x, wPos.yz ) );\n}"}}},Cube=function(a,b,e,d,g,i,c,k){function j(z,J,q,h,f,r,n,w){var m,p,C=d||1,v=g||1,D=C+1,B=v+1,y=f/2,K=r/2;f=f/C;var aa=r/v,L=l.vertices.length;if(z=="x"&&J=="y"||z=="y"&&J=="x")m="z";else if(z=="x"&&J=="z"||z=="z"&&J=="x")m="y";else if(z=="z"&&J=="y"||z=="y"&&J=="z")m="x";for(p=0;p<B;p++)for(r=0;r<
D;r++){var U=new THREE.Vector3;U[z]=(r*f-y)*q;U[J]=(p*aa-K)*h;U[m]=n;l.vertices.push(new THREE.Vertex(U))}for(p=0;p<v;p++)for(r=0;r<C;r++){l.faces.push(new THREE.Face4(r+D*p+L,r+D*(p+1)+L,r+1+D*(p+1)+L,r+1+D*p+L,null,w));l.uvs.push([new THREE.UV(r/C,p/v),new THREE.UV(r/C,(p+1)/v),new THREE.UV((r+1)/C,(p+1)/v),new THREE.UV((r+1)/C,p/v)])}}THREE.Geometry.call(this);var l=this,s=a/2,A=b/2,o=e/2;c=c?-1:1;if(i!==undefined)if(i instanceof Array)this.materials=i;else{this.materials=[];for(var u=0;u<6;u++)this.materials.push([i])}else this.materials=
[];this.sides={px:true,nx:true,py:true,ny:true,pz:true,nz:true};if(k!=undefined)for(var x in k)if(this.sides[x]!=undefined)this.sides[x]=k[x];this.sides.px&&j("z","y",1*c,-1,e,b,-s,this.materials[0]);this.sides.nx&&j("z","y",-1*c,-1,e,b,s,this.materials[1]);this.sides.py&&j("x","z",1*c,1,a,e,A,this.materials[2]);this.sides.ny&&j("x","z",1*c,-1,a,e,-A,this.materials[3]);this.sides.pz&&j("x","y",1*c,-1,a,b,o,this.materials[4]);this.sides.nz&&j("x","y",-1*c,-1,a,b,-o,this.materials[5]);(function(){for(var z=
[],J=[],q=0,h=l.vertices.length;q<h;q++){for(var f=l.vertices[q],r=false,n=0,w=z.length;n<w;n++){var m=z[n];if(f.position.x==m.position.x&&f.position.y==m.position.y&&f.position.z==m.position.z){J[q]=n;r=true;break}}if(!r){J[q]=z.length;z.push(new THREE.Vertex(f.position.clone()))}}q=0;for(h=l.faces.length;q<h;q++){f=l.faces[q];f.a=J[f.a];f.b=J[f.b];f.c=J[f.c];f.d=J[f.d]}l.vertices=z})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cube.prototype=new THREE.Geometry;
Cube.prototype.constructor=Cube;
var Cylinder=function(a,b,e,d,g){function i(l,s,A){c.vertices.push(new THREE.Vertex(new THREE.Vector3(l,s,A)))}THREE.Geometry.call(this);var c=this,k=Math.PI,j;for(j=0;j<a;j++)i(Math.sin(2*k*j/a)*b,Math.cos(2*k*j/a)*b,0);for(j=0;j<a;j++)i(Math.sin(2*k*j/a)*e,Math.cos(2*k*j/a)*e,d);for(j=0;j<a;j++)c.faces.push(new THREE.Face4(j,j+a,a+(j+1)%a,(j+1)%a));if(e!=0){i(0,0,-g);for(j=a;j<a+a/2;j++)c.faces.push(new THREE.Face4(2*a,(2*j-2*a)%a,(2*j-2*a+1)%a,(2*j-2*a+2)%a))}if(b!=0){i(0,0,d+g);for(j=a+a/2;j<
2*a;j++)c.faces.push(new THREE.Face4((2*j-2*a+2)%a+a,(2*j-2*a+1)%a+a,(2*j-2*a)%a+a,2*a+1))}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cylinder.prototype=new THREE.Geometry;Cylinder.prototype.constructor=Cylinder;
var Plane=function(a,b,e,d){THREE.Geometry.call(this);var g,i=a/2,c=b/2;e=e||1;d=d||1;var k=e+1,j=d+1;a=a/e;var l=b/d;for(g=0;g<j;g++)for(b=0;b<k;b++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(b*a-i,-(g*l-c),0)));for(g=0;g<d;g++)for(b=0;b<e;b++){this.faces.push(new THREE.Face4(b+k*g,b+k*(g+1),b+1+k*(g+1),b+1+k*g));this.uvs.push([new THREE.UV(b/e,g/d),new THREE.UV(b/e,(g+1)/d),new THREE.UV((b+1)/e,(g+1)/d),new THREE.UV((b+1)/e,g/d)])}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};
Plane.prototype=new THREE.Geometry;Plane.prototype.constructor=Plane;
var Sphere=function(a,b,e){THREE.Geometry.call(this);var d,g=Math.PI,i=Math.max(3,b||8),c=Math.max(2,e||6);b=[];for(e=0;e<c+1;e++){d=e/c;var k=a*Math.cos(d*g),j=a*Math.sin(d*g),l=[],s=0;for(d=0;d<i;d++){var A=2*d/i,o=j*Math.sin(A*g);A=j*Math.cos(A*g);(e==0||e==c)&&d>0||(s=this.vertices.push(new THREE.Vertex(new THREE.Vector3(A,k,o)))-1);l.push(s)}b.push(l)}var u,x,z;g=b.length;for(e=0;e<g;e++){i=b[e].length;if(e>0)for(d=0;d<i;d++){l=d==i-1;c=b[e][l?0:d+1];k=b[e][l?i-1:d];j=b[e-1][l?i-1:d];l=b[e-1][l?
0:d+1];o=e/(g-1);u=(e-1)/(g-1);x=(d+1)/i;A=d/i;s=new THREE.UV(1-x,o);o=new THREE.UV(1-A,o);A=new THREE.UV(1-A,u);var J=new THREE.UV(1-x,u);if(e<b.length-1){u=this.vertices[c].position.clone();x=this.vertices[k].position.clone();z=this.vertices[j].position.clone();u.normalize();x.normalize();z.normalize();this.faces.push(new THREE.Face3(c,k,j,[new THREE.Vector3(u.x,u.y,u.z),new THREE.Vector3(x.x,x.y,x.z),new THREE.Vector3(z.x,z.y,z.z)]));this.uvs.push([s,o,A])}if(e>1){u=this.vertices[c].position.clone();
x=this.vertices[j].position.clone();z=this.vertices[l].position.clone();u.normalize();x.normalize();z.normalize();this.faces.push(new THREE.Face3(c,j,l,[new THREE.Vector3(u.x,u.y,u.z),new THREE.Vector3(x.x,x.y,x.z),new THREE.Vector3(z.x,z.y,z.z)]));this.uvs.push([s,A,J])}}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial();this.boundingSphere={radius:a}};Sphere.prototype=new THREE.Geometry;Sphere.prototype.constructor=Sphere;
THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?this.addStatusElement():null};
THREE.Loader.prototype={addStatusElement:function(){var a=document.createElement("div");a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="#b00";a.style.color="#fff";a.style.width="140px";a.style.padding="0.25em 0.25em 0.25em 0.5em";a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ";b+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1E3).toFixed(2)+" KB";this.statusDomElement.innerHTML=
b},loadAsciiOld:function(a,b){var e=document.createElement("script");e.type="text/javascript";e.onload=b;e.src=a;document.getElementsByTagName("head")[0].appendChild(e)},loadAscii:function(a){var b=a.model,e=a.callback,d=a.texture_path?a.texture_path:THREE.Loader.prototype.extractUrlbase(b);a=(new Date).getTime();b=new Worker(b);b.onmessage=function(g){THREE.Loader.prototype.createModel(g.data,e,d)};b.postMessage(a)},loadBinary:function(a){var b=a.model,e=a.callback,d=a.texture_path?a.texture_path:
THREE.Loader.prototype.extractUrlbase(b),g=a.bin_path?a.bin_path:THREE.Loader.prototype.extractUrlbase(b);a=(new Date).getTime();b=new Worker(b);var i=this.showProgress?THREE.Loader.prototype.updateProgress:null;b.onmessage=function(c){THREE.Loader.prototype.loadAjaxBuffers(c.data.buffers,c.data.materials,e,g,d,i)};b.onerror=function(c){alert("worker.onerror: "+c.message+"\n"+c.data);c.preventDefault()};b.postMessage(a)},loadAjaxBuffers:function(a,b,e,d,g,i){var c=new XMLHttpRequest,k=d+"/"+a,j=0;
c.onreadystatechange=function(){if(c.readyState==4)c.status==200||c.status==0?THREE.Loader.prototype.createBinModel(c.responseText,e,g,b):alert("Couldn't load ["+k+"] ["+c.status+"]");else if(c.readyState==3){if(i){if(j==0)j=c.getResponseHeader("Content-Length");i({total:j,loaded:c.responseText.length})}}else if(c.readyState==2)j=c.getResponseHeader("Content-Length")};c.open("GET",k,true);c.overrideMimeType("text/plain; charset=x-user-defined");c.setRequestHeader("Content-Type","text/plain");c.send(null)},
createBinModel:function(a,b,e,d){var g=function(i){function c(t,F){var G=s(t,F),R=s(t,F+1),ba=s(t,F+2),ka=s(t,F+3),ea=(ka<<1&255|ba>>7)-127;G=(ba&127)<<16|R<<8|G;if(G==0&&ea==-127)return 0;return(1-2*(ka>>7))*(1+G*Math.pow(2,-23))*Math.pow(2,ea)}function k(t,F){var G=s(t,F),R=s(t,F+1),ba=s(t,F+2);return(s(t,F+3)<<24)+(ba<<16)+(R<<8)+G}function j(t,F){var G=s(t,F);return(s(t,F+1)<<8)+G}function l(t,F){var G=s(t,F);return G>127?G-256:G}function s(t,F){return t.charCodeAt(F)&255}function A(t){var F,
G,R;F=k(a,t);G=k(a,t+w);R=k(a,t+m);t=j(a,t+p);THREE.Loader.prototype.f3(q,F,G,R,t)}function o(t){var F,G,R,ba,ka,ea;F=k(a,t);G=k(a,t+w);R=k(a,t+m);ba=j(a,t+p);ka=k(a,t+C);ea=k(a,t+v);t=k(a,t+D);THREE.Loader.prototype.f3n(q,r,F,G,R,ba,ka,ea,t)}function u(t){var F,G,R,ba;F=k(a,t);G=k(a,t+B);R=k(a,t+y);ba=k(a,t+K);t=j(a,t+aa);THREE.Loader.prototype.f4(q,F,G,R,ba,t)}function x(t){var F,G,R,ba,ka,ea,ra,ta;F=k(a,t);G=k(a,t+B);R=k(a,t+y);ba=k(a,t+K);ka=j(a,t+aa);ea=k(a,t+L);ra=k(a,t+U);ta=k(a,t+W);t=k(a,
t+M);THREE.Loader.prototype.f4n(q,r,F,G,R,ba,ka,ea,ra,ta,t)}function z(t){var F,G;F=k(a,t);G=k(a,t+P);t=k(a,t+V);THREE.Loader.prototype.uv3(q,n[F*2],n[F*2+1],n[G*2],n[G*2+1],n[t*2],n[t*2+1])}function J(t){var F,G,R;F=k(a,t);G=k(a,t+O);R=k(a,t+N);t=k(a,t+$);THREE.Loader.prototype.uv4(q,n[F*2],n[F*2+1],n[G*2],n[G*2+1],n[R*2],n[R*2+1],n[t*2],n[t*2+1])}var q=this,h=0,f,r=[],n=[],w,m,p,C,v,D,B,y,K,aa,L,U,W,M,P,V,O,N,$,X,H,S,Z,ha,ja;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(q,d,i);
f={signature:a.substr(h,8),header_bytes:s(a,h+8),vertex_coordinate_bytes:s(a,h+9),normal_coordinate_bytes:s(a,h+10),uv_coordinate_bytes:s(a,h+11),vertex_index_bytes:s(a,h+12),normal_index_bytes:s(a,h+13),uv_index_bytes:s(a,h+14),material_index_bytes:s(a,h+15),nvertices:k(a,h+16),nnormals:k(a,h+16+4),nuvs:k(a,h+16+8),ntri_flat:k(a,h+16+12),ntri_smooth:k(a,h+16+16),ntri_flat_uv:k(a,h+16+20),ntri_smooth_uv:k(a,h+16+24),nquad_flat:k(a,h+16+28),nquad_smooth:k(a,h+16+32),nquad_flat_uv:k(a,h+16+36),nquad_smooth_uv:k(a,
h+16+40)};h+=f.header_bytes;w=f.vertex_index_bytes;m=f.vertex_index_bytes*2;p=f.vertex_index_bytes*3;C=f.vertex_index_bytes*3+f.material_index_bytes;v=f.vertex_index_bytes*3+f.material_index_bytes+f.normal_index_bytes;D=f.vertex_index_bytes*3+f.material_index_bytes+f.normal_index_bytes*2;B=f.vertex_index_bytes;y=f.vertex_index_bytes*2;K=f.vertex_index_bytes*3;aa=f.vertex_index_bytes*4;L=f.vertex_index_bytes*4+f.material_index_bytes;U=f.vertex_index_bytes*4+f.material_index_bytes+f.normal_index_bytes;
W=f.vertex_index_bytes*4+f.material_index_bytes+f.normal_index_bytes*2;M=f.vertex_index_bytes*4+f.material_index_bytes+f.normal_index_bytes*3;P=f.uv_index_bytes;V=f.uv_index_bytes*2;O=f.uv_index_bytes;N=f.uv_index_bytes*2;$=f.uv_index_bytes*3;i=f.vertex_index_bytes*3+f.material_index_bytes;ja=f.vertex_index_bytes*4+f.material_index_bytes;X=f.ntri_flat*i;H=f.ntri_smooth*(i+f.normal_index_bytes*3);S=f.ntri_flat_uv*(i+f.uv_index_bytes*3);Z=f.ntri_smooth_uv*(i+f.normal_index_bytes*3+f.uv_index_bytes*
3);ha=f.nquad_flat*ja;i=f.nquad_smooth*(ja+f.normal_index_bytes*4);ja=f.nquad_flat_uv*(ja+f.uv_index_bytes*4);h+=function(t){var F,G,R,ba=f.vertex_coordinate_bytes*3,ka=t+f.nvertices*ba;for(t=t;t<ka;t+=ba){F=c(a,t);G=c(a,t+f.vertex_coordinate_bytes);R=c(a,t+f.vertex_coordinate_bytes*2);THREE.Loader.prototype.v(q,F,G,R)}return f.nvertices*ba}(h);h+=function(t){var F,G,R,ba=f.normal_coordinate_bytes*3,ka=t+f.nnormals*ba;for(t=t;t<ka;t+=ba){F=l(a,t);G=l(a,t+f.normal_coordinate_bytes);R=l(a,t+f.normal_coordinate_bytes*
2);r.push(F/127,G/127,R/127)}return f.nnormals*ba}(h);h+=function(t){var F,G,R=f.uv_coordinate_bytes*2,ba=t+f.nuvs*R;for(t=t;t<ba;t+=R){F=c(a,t);G=c(a,t+f.uv_coordinate_bytes);n.push(F,G)}return f.nuvs*R}(h);h=h;X=h+X;H=X+H;S=H+S;Z=S+Z;ha=Z+ha;i=ha+i;ja=i+ja;(function(t){var F,G=f.vertex_index_bytes*3+f.material_index_bytes,R=G+f.uv_index_bytes*3,ba=t+f.ntri_flat_uv*R;for(F=t;F<ba;F+=R){A(F);z(F+G)}return ba-t})(H);(function(t){var F,G=f.vertex_index_bytes*3+f.material_index_bytes+f.normal_index_bytes*
3,R=G+f.uv_index_bytes*3,ba=t+f.ntri_smooth_uv*R;for(F=t;F<ba;F+=R){o(F);z(F+G)}return ba-t})(S);(function(t){var F,G=f.vertex_index_bytes*4+f.material_index_bytes,R=G+f.uv_index_bytes*4,ba=t+f.nquad_flat_uv*R;for(F=t;F<ba;F+=R){u(F);J(F+G)}return ba-t})(i);(function(t){var F,G=f.vertex_index_bytes*4+f.material_index_bytes+f.normal_index_bytes*4,R=G+f.uv_index_bytes*4,ba=t+f.nquad_smooth_uv*R;for(F=t;F<ba;F+=R){x(F);J(F+G)}return ba-t})(ja);(function(t){var F,G=f.vertex_index_bytes*3+f.material_index_bytes,
R=t+f.ntri_flat*G;for(F=t;F<R;F+=G)A(F);return R-t})(h);(function(t){var F,G=f.vertex_index_bytes*3+f.material_index_bytes+f.normal_index_bytes*3,R=t+f.ntri_smooth*G;for(F=t;F<R;F+=G)o(F);return R-t})(X);(function(t){var F,G=f.vertex_index_bytes*4+f.material_index_bytes,R=t+f.nquad_flat*G;for(F=t;F<R;F+=G)u(F);return R-t})(Z);(function(t){var F,G=f.vertex_index_bytes*4+f.material_index_bytes+f.normal_index_bytes*4,R=t+f.nquad_smooth*G;for(F=t;F<R;F+=G)x(F);return R-t})(ha);this.computeCentroids();
this.computeFaceNormals();this.sortFacesByMaterial()};g.prototype=new THREE.Geometry;g.prototype.constructor=g;b(new g(e))},createModel:function(a,b,e){var d=function(g){var i=this;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(i,a.materials,g);(function(){var c,k,j,l,s;c=0;for(k=a.vertices.length;c<k;c+=3){j=a.vertices[c];l=a.vertices[c+1];s=a.vertices[c+2];THREE.Loader.prototype.v(i,j,l,s)}})();(function(){function c(x,z){THREE.Loader.prototype.f3(i,x[z],x[z+1],x[z+2],x[z+3])}function k(x,
z){THREE.Loader.prototype.f3n(i,a.normals,x[z],x[z+1],x[z+2],x[z+3],x[z+4],x[z+5],x[z+6])}function j(x,z){THREE.Loader.prototype.f4(i,x[z],x[z+1],x[z+2],x[z+3],x[z+4])}function l(x,z){THREE.Loader.prototype.f4n(i,a.normals,x[z],x[z+1],x[z+2],x[z+3],x[z+4],x[z+5],x[z+6],x[z+7],x[z+8])}function s(x,z){var J,q,h;J=x[z];q=x[z+1];h=x[z+2];THREE.Loader.prototype.uv3(i,a.uvs[J*2],a.uvs[J*2+1],a.uvs[q*2],a.uvs[q*2+1],a.uvs[h*2],a.uvs[h*2+1])}function A(x,z){var J,q,h,f;J=x[z];q=x[z+1];h=x[z+2];f=x[z+3];THREE.Loader.prototype.uv4(i,
a.uvs[J*2],a.uvs[J*2+1],a.uvs[q*2],a.uvs[q*2+1],a.uvs[h*2],a.uvs[h*2+1],a.uvs[f*2],a.uvs[f*2+1])}var o,u;o=0;for(u=a.triangles_uv.length;o<u;o+=7){c(a.triangles_uv,o);s(a.triangles_uv,o+4)}o=0;for(u=a.triangles_n_uv.length;o<u;o+=10){k(a.triangles_n_uv,o);s(a.triangles_n_uv,o+7)}o=0;for(u=a.quads_uv.length;o<u;o+=9){j(a.quads_uv,o);A(a.quads_uv,o+5)}o=0;for(u=a.quads_n_uv.length;o<u;o+=13){l(a.quads_n_uv,o);A(a.quads_n_uv,o+9)}o=0;for(u=a.triangles.length;o<u;o+=4)c(a.triangles,o);o=0;for(u=a.triangles_n.length;o<
u;o+=7)k(a.triangles_n,o);o=0;for(u=a.quads.length;o<u;o+=5)j(a.quads,o);o=0;for(u=a.quads_n.length;o<u;o+=9)l(a.quads_n,o)})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};d.prototype=new THREE.Geometry;d.prototype.constructor=d;b(new d(e))},v:function(a,b,e,d){a.vertices.push(new THREE.Vertex(new THREE.Vector3(b,e,d)))},f3:function(a,b,e,d,g){a.faces.push(new THREE.Face3(b,e,d,null,a.materials[g]))},f4:function(a,b,e,d,g,i){a.faces.push(new THREE.Face4(b,e,d,g,null,
a.materials[i]))},f3n:function(a,b,e,d,g,i,c,k,j){i=a.materials[i];var l=b[k*3],s=b[k*3+1];k=b[k*3+2];var A=b[j*3],o=b[j*3+1];j=b[j*3+2];a.faces.push(new THREE.Face3(e,d,g,[new THREE.Vector3(b[c*3],b[c*3+1],b[c*3+2]),new THREE.Vector3(l,s,k),new THREE.Vector3(A,o,j)],i))},f4n:function(a,b,e,d,g,i,c,k,j,l,s){c=a.materials[c];var A=b[j*3],o=b[j*3+1];j=b[j*3+2];var u=b[l*3],x=b[l*3+1];l=b[l*3+2];var z=b[s*3],J=b[s*3+1];s=b[s*3+2];a.faces.push(new THREE.Face4(e,d,g,i,[new THREE.Vector3(b[k*3],b[k*3+1],
b[k*3+2]),new THREE.Vector3(A,o,j),new THREE.Vector3(u,x,l),new THREE.Vector3(z,J,s)],c))},uv3:function(a,b,e,d,g,i,c){var k=[];k.push(new THREE.UV(b,e));k.push(new THREE.UV(d,g));k.push(new THREE.UV(i,c));a.uvs.push(k)},uv4:function(a,b,e,d,g,i,c,k,j){var l=[];l.push(new THREE.UV(b,e));l.push(new THREE.UV(d,g));l.push(new THREE.UV(i,c));l.push(new THREE.UV(k,j));a.uvs.push(l)},init_materials:function(a,b,e){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=[THREE.Loader.prototype.createMaterial(b[d],
e)]},createMaterial:function(a,b){function e(i){i=Math.log(i)/Math.LN2;return Math.floor(i)==i}var d,g;if(a.map_diffuse&&b){g=document.createElement("canvas");d=new THREE.MeshLambertMaterial({map:new THREE.Texture(g)});g=new Image;g.onload=function(){if(!e(this.width)||!e(this.height)){var i=Math.pow(2,Math.round(Math.log(this.width)/Math.LN2)),c=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));d.map.image.width=i;d.map.image.height=c;d.map.image.getContext("2d").drawImage(this,0,0,i,c)}else d.map.image=
this;d.map.image.loaded=1};g.src=b+"/"+a.map_diffuse}else if(a.col_diffuse){g=(a.col_diffuse[0]*255<<16)+(a.col_diffuse[1]*255<<8)+a.col_diffuse[2]*255;d=new THREE.MeshLambertMaterial({color:g,opacity:a.transparency})}else d=a.a_dbg_color?new THREE.MeshLambertMaterial({color:a.a_dbg_color}):new THREE.MeshLambertMaterial({color:15658734});return d},extractUrlbase:function(a){a=a.split("/");a.pop();return a.join("/")}};
