// ThreeExtras.js r31 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,b,e){this.r=a;this.g=b;this.b=e;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+
","+~~(this.g*255)+","+~~(this.b*255)+")"},toString:function(){return"THREE.Color ( r: "+this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,b,e){this.x=a||0;this.y=b||0;this.z=e||0};
THREE.Vector3.prototype={set:function(a,b,e){this.x=a;this.y=b;this.z=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,e=this.y,d=this.z;this.x=e*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-e*a.x;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=
a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var b=this.x-a.x,e=this.y-a.y;a=this.z-a.z;return Math.sqrt(b*b+e*e+a*a)},distanceToSquared:function(a){var b=this.x-a.x,e=this.y-a.y;a=this.z-a.z;return b*b+e*e+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=
Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,b,e,d){this.x=a||0;this.y=b||0;this.z=e||0;this.w=d||1};
THREE.Vector4.prototype={set:function(a,b,e,d){this.x=a;this.y=b;this.z=e;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,b){this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var b,e,d=a.objects,g=[];a=0;for(b=d.length;a<b;a++){e=d[a];if(e instanceof THREE.Mesh)g=g.concat(this.intersectObject(e))}g.sort(function(f,j){return f.distance-j.distance});return g},intersectObject:function(a){function b(J,w,E,l){l=l.clone().subSelf(w);E=E.clone().subSelf(w);var P=J.clone().subSelf(w);J=l.dot(l);w=l.dot(E);l=l.dot(P);var M=E.dot(E);E=E.dot(P);P=1/(J*M-w*w);M=(M*l-w*E)*P;J=(J*E-w*l)*P;return M>0&&J>0&&M+J<1}var e,d,g,f,j,h,i,c,x,C,
s,u=a.geometry,y=u.vertices,A=[];e=0;for(d=u.faces.length;e<d;e++){g=u.faces[e];C=this.origin.clone();s=this.direction.clone();f=a.matrix.multiplyVector3(y[g.a].position.clone());j=a.matrix.multiplyVector3(y[g.b].position.clone());h=a.matrix.multiplyVector3(y[g.c].position.clone());i=g instanceof THREE.Face4?a.matrix.multiplyVector3(y[g.d].position.clone()):null;c=a.rotationMatrix.multiplyVector3(g.normal.clone());x=s.dot(c);if(x<0){c=c.dot((new THREE.Vector3).sub(f,C))/x;C=C.addSelf(s.multiplyScalar(c));
if(g instanceof THREE.Face3){if(b(C,f,j,h)){g={distance:this.origin.distanceTo(C),point:C,face:g,object:a};A.push(g)}}else if(g instanceof THREE.Face4)if(b(C,f,j,i)||b(C,j,h,i)){g={distance:this.origin.distanceTo(C),point:C,face:g,object:a};A.push(g)}}}return A}};
THREE.Rectangle=function(){function a(){f=d-b;j=g-e}var b,e,d,g,f,j,h=true;this.getX=function(){return b};this.getY=function(){return e};this.getWidth=function(){return f};this.getHeight=function(){return j};this.getLeft=function(){return b};this.getTop=function(){return e};this.getRight=function(){return d};this.getBottom=function(){return g};this.set=function(i,c,x,C){h=false;b=i;e=c;d=x;g=C;a()};this.addPoint=function(i,c){if(h){h=false;b=i;e=c;d=i;g=c}else{b=b<i?b:i;e=e<c?e:c;d=d>i?d:i;g=g>c?
g:c}a()};this.add3Points=function(i,c,x,C,s,u){if(h){h=false;b=i<x?i<s?i:s:x<s?x:s;e=c<C?c<u?c:u:C<u?C:u;d=i>x?i>s?i:s:x>s?x:s;g=c>C?c>u?c:u:C>u?C:u}else{b=i<x?i<s?i<b?i:b:s<b?s:b:x<s?x<b?x:b:s<b?s:b;e=c<C?c<u?c<e?c:e:u<e?u:e:C<u?C<e?C:e:u<e?u:e;d=i>x?i>s?i>d?i:d:s>d?s:d:x>s?x>d?x:d:s>d?s:d;g=c>C?c>u?c>g?c:g:u>g?u:g:C>u?C>g?C:g:u>g?u:g}a()};this.addRectangle=function(i){if(h){h=false;b=i.getLeft();e=i.getTop();d=i.getRight();g=i.getBottom()}else{b=b<i.getLeft()?b:i.getLeft();e=e<i.getTop()?e:i.getTop();
d=d>i.getRight()?d:i.getRight();g=g>i.getBottom()?g:i.getBottom()}a()};this.inflate=function(i){b-=i;e-=i;d+=i;g+=i;a()};this.minSelf=function(i){b=b>i.getLeft()?b:i.getLeft();e=e>i.getTop()?e:i.getTop();d=d<i.getRight()?d:i.getRight();g=g<i.getBottom()?g:i.getBottom();a()};this.instersects=function(i){return Math.min(d,i.getRight())-Math.max(b,i.getLeft())>=0&&Math.min(g,i.getBottom())-Math.max(e,i.getTop())>=0};this.empty=function(){h=true;g=d=e=b=0;a()};this.isEmpty=function(){return h};this.toString=
function(){return"THREE.Rectangle ( left: "+b+", right: "+d+", top: "+e+", bottom: "+g+", width: "+f+", height: "+j+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a;a=this.m[1];this.m[1]=this.m[3];this.m[3]=a;a=this.m[2];this.m[2]=this.m[6];this.m[6]=a;a=this.m[5];this.m[5]=this.m[7];this.m[7]=a;return this}};
THREE.Matrix4=function(a,b,e,d,g,f,j,h,i,c,x,C,s,u,y,A){this.n11=a||1;this.n12=b||0;this.n13=e||0;this.n14=d||0;this.n21=g||0;this.n22=f||1;this.n23=j||0;this.n24=h||0;this.n31=i||0;this.n32=c||0;this.n33=x||1;this.n34=C||0;this.n41=s||0;this.n42=u||0;this.n43=y||0;this.n44=A||1};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,b,e,d,g,f,j,h,i,c,x,C,s,u,y,A){this.n11=a;this.n12=b;this.n13=e;this.n14=d;this.n21=g;this.n22=f;this.n23=j;this.n24=h;this.n31=i;this.n32=c;this.n33=x;this.n34=C;this.n41=s;this.n42=u;this.n43=y;this.n44=A;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,b,e){var d=new THREE.Vector3,g=new THREE.Vector3,f=new THREE.Vector3;f.sub(a,b).normalize();d.cross(e,f).normalize();g.cross(f,d).normalize();this.n11=d.x;this.n12=d.y;this.n13=d.z;this.n14=-d.dot(a);this.n21=g.x;this.n22=g.y;this.n23=g.z;this.n24=-g.dot(a);this.n31=f.x;
this.n32=f.y;this.n33=f.z;this.n34=-f.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var b=a.x,e=a.y,d=a.z,g=1/(this.n41*b+this.n42*e+this.n43*d+this.n44);a.x=(this.n11*b+this.n12*e+this.n13*d+this.n14)*g;a.y=(this.n21*b+this.n22*e+this.n23*d+this.n24)*g;a.z=(this.n31*b+this.n32*e+this.n33*d+this.n34)*g;return a},multiplyVector4:function(a){var b=a.x,e=a.y,d=a.z,g=a.w;a.x=this.n11*b+this.n12*e+this.n13*d+this.n14*g;a.y=this.n21*b+this.n22*e+this.n23*d+this.n24*
g;a.z=this.n31*b+this.n32*e+this.n33*d+this.n34*g;a.w=this.n41*b+this.n42*e+this.n43*d+this.n44*g;return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},multiply:function(a,b){var e=a.n11,d=a.n12,g=a.n13,f=a.n14,j=a.n21,h=a.n22,i=a.n23,c=a.n24,x=a.n31,C=a.n32,
s=a.n33,u=a.n34,y=a.n41,A=a.n42,J=a.n43,w=a.n44,E=b.n11,l=b.n12,P=b.n13,M=b.n14,k=b.n21,p=b.n22,n=b.n23,m=b.n24,r=b.n31,q=b.n32,v=b.n33,z=b.n34,D=b.n41,I=b.n42,X=b.n43,G=b.n44;this.n11=e*E+d*k+g*r+f*D;this.n12=e*l+d*p+g*q+f*I;this.n13=e*P+d*n+g*v+f*X;this.n14=e*M+d*m+g*z+f*G;this.n21=j*E+h*k+i*r+c*D;this.n22=j*l+h*p+i*q+c*I;this.n23=j*P+h*n+i*v+c*X;this.n24=j*M+h*m+i*z+c*G;this.n31=x*E+C*k+s*r+u*D;this.n32=x*l+C*p+s*q+u*I;this.n33=x*P+C*n+s*v+u*X;this.n34=x*M+C*m+s*z+u*G;this.n41=y*E+A*k+J*r+w*D;
this.n42=y*l+A*p+J*q+w*I;this.n43=y*P+A*n+J*v+w*X;this.n44=y*M+A*m+J*z+w*G;return this},multiplySelf:function(a){var b=this.n11,e=this.n12,d=this.n13,g=this.n14,f=this.n21,j=this.n22,h=this.n23,i=this.n24,c=this.n31,x=this.n32,C=this.n33,s=this.n34,u=this.n41,y=this.n42,A=this.n43,J=this.n44,w=a.n11,E=a.n21,l=a.n31,P=a.n41,M=a.n12,k=a.n22,p=a.n32,n=a.n42,m=a.n13,r=a.n23,q=a.n33,v=a.n43,z=a.n14,D=a.n24,I=a.n34;a=a.n44;this.n11=b*w+e*E+d*l+g*P;this.n12=b*M+e*k+d*p+g*n;this.n13=b*m+e*r+d*q+g*v;this.n14=
b*z+e*D+d*I+g*a;this.n21=f*w+j*E+h*l+i*P;this.n22=f*M+j*k+h*p+i*n;this.n23=f*m+j*r+h*q+i*v;this.n24=f*z+j*D+h*I+i*a;this.n31=c*w+x*E+C*l+s*P;this.n32=c*M+x*k+C*p+s*n;this.n33=c*m+x*r+C*q+s*v;this.n34=c*z+x*D+C*I+s*a;this.n41=u*w+y*E+A*l+J*P;this.n42=u*M+y*k+A*p+J*n;this.n43=u*m+y*r+A*q+J*v;this.n44=u*z+y*D+A*I+J*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=
a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){return this.n14*this.n23*this.n32*this.n41-this.n13*this.n24*this.n32*this.n41-this.n14*this.n22*this.n33*this.n41+this.n12*this.n24*this.n33*this.n41+this.n13*this.n22*this.n34*this.n41-this.n12*this.n23*this.n34*this.n41-this.n14*this.n23*this.n31*this.n42+this.n13*this.n24*this.n31*this.n42+this.n14*this.n21*this.n33*this.n42-this.n11*this.n24*this.n33*this.n42-this.n13*this.n21*this.n34*this.n42+this.n11*this.n23*this.n34*
this.n42+this.n14*this.n22*this.n31*this.n43-this.n12*this.n24*this.n31*this.n43-this.n14*this.n21*this.n32*this.n43+this.n11*this.n24*this.n32*this.n43+this.n12*this.n21*this.n34*this.n43-this.n11*this.n22*this.n34*this.n43-this.n13*this.n22*this.n31*this.n44+this.n12*this.n23*this.n31*this.n44+this.n13*this.n21*this.n32*this.n44-this.n11*this.n23*this.n32*this.n44-this.n12*this.n21*this.n33*this.n44+this.n11*this.n22*this.n33*this.n44},transpose:function(){function a(b,e,d){var g=b[e];b[e]=b[d];
b[d]=g}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){return[this.n11,this.n21,this.n31,this.n41,this.n12,
this.n22,this.n32,this.n42,this.n13,this.n23,this.n33,this.n43,this.n14,this.n24,this.n34,this.n44]},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,b,e){var d=new THREE.Matrix4;d.n14=a;d.n24=b;d.n34=e;return d};
THREE.Matrix4.scaleMatrix=function(a,b,e){var d=new THREE.Matrix4;d.n11=a;d.n22=b;d.n33=e;return d};THREE.Matrix4.rotationXMatrix=function(a){var b=new THREE.Matrix4;b.n22=b.n33=Math.cos(a);b.n32=Math.sin(a);b.n23=-b.n32;return b};THREE.Matrix4.rotationYMatrix=function(a){var b=new THREE.Matrix4;b.n11=b.n33=Math.cos(a);b.n13=Math.sin(a);b.n31=-b.n13;return b};THREE.Matrix4.rotationZMatrix=function(a){var b=new THREE.Matrix4;b.n11=b.n22=Math.cos(a);b.n21=Math.sin(a);b.n12=-b.n21;return b};
THREE.Matrix4.rotationAxisAngleMatrix=function(a,b){var e=new THREE.Matrix4,d=Math.cos(b),g=Math.sin(b),f=1-d,j=a.x,h=a.y,i=a.z;e.n11=f*j*j+d;e.n12=f*j*h-g*i;e.n13=f*j*i+g*h;e.n21=f*j*h+g*i;e.n22=f*h*h+d;e.n23=f*h*i-g*j;e.n31=f*j*i-g*h;e.n32=f*h*i+g*j;e.n33=f*i*i+d;return e};
THREE.Matrix4.makeInvert=function(a){var b=new THREE.Matrix4;b.n11=a.n23*a.n34*a.n42-a.n24*a.n33*a.n42+a.n24*a.n32*a.n43-a.n22*a.n34*a.n43-a.n23*a.n32*a.n44+a.n22*a.n33*a.n44;b.n12=a.n14*a.n33*a.n42-a.n13*a.n34*a.n42-a.n14*a.n32*a.n43+a.n12*a.n34*a.n43+a.n13*a.n32*a.n44-a.n12*a.n33*a.n44;b.n13=a.n13*a.n24*a.n42-a.n14*a.n23*a.n42+a.n14*a.n22*a.n43-a.n12*a.n24*a.n43-a.n13*a.n22*a.n44+a.n12*a.n23*a.n44;b.n14=a.n14*a.n23*a.n32-a.n13*a.n24*a.n32-a.n14*a.n22*a.n33+a.n12*a.n24*a.n33+a.n13*a.n22*a.n34-a.n12*
a.n23*a.n34;b.n21=a.n24*a.n33*a.n41-a.n23*a.n34*a.n41-a.n24*a.n31*a.n43+a.n21*a.n34*a.n43+a.n23*a.n31*a.n44-a.n21*a.n33*a.n44;b.n22=a.n13*a.n34*a.n41-a.n14*a.n33*a.n41+a.n14*a.n31*a.n43-a.n11*a.n34*a.n43-a.n13*a.n31*a.n44+a.n11*a.n33*a.n44;b.n23=a.n14*a.n23*a.n41-a.n13*a.n24*a.n41-a.n14*a.n21*a.n43+a.n11*a.n24*a.n43+a.n13*a.n21*a.n44-a.n11*a.n23*a.n44;b.n24=a.n13*a.n24*a.n31-a.n14*a.n23*a.n31+a.n14*a.n21*a.n33-a.n11*a.n24*a.n33-a.n13*a.n21*a.n34+a.n11*a.n23*a.n34;b.n31=a.n22*a.n34*a.n41-a.n24*a.n32*
a.n41+a.n24*a.n31*a.n42-a.n21*a.n34*a.n42-a.n22*a.n31*a.n44+a.n21*a.n32*a.n44;b.n32=a.n14*a.n32*a.n41-a.n12*a.n34*a.n41-a.n14*a.n31*a.n42+a.n11*a.n34*a.n42+a.n12*a.n31*a.n44-a.n11*a.n32*a.n44;b.n33=a.n13*a.n24*a.n41-a.n14*a.n22*a.n41+a.n14*a.n21*a.n42-a.n11*a.n24*a.n42-a.n12*a.n21*a.n44+a.n11*a.n22*a.n44;b.n34=a.n14*a.n22*a.n31-a.n12*a.n24*a.n31-a.n14*a.n21*a.n32+a.n11*a.n24*a.n32+a.n12*a.n21*a.n34-a.n11*a.n22*a.n34;b.n41=a.n23*a.n32*a.n41-a.n22*a.n33*a.n41-a.n23*a.n31*a.n42+a.n21*a.n33*a.n42+a.n22*
a.n31*a.n43-a.n21*a.n32*a.n43;b.n42=a.n12*a.n33*a.n41-a.n13*a.n32*a.n41+a.n13*a.n31*a.n42-a.n11*a.n33*a.n42-a.n12*a.n31*a.n43+a.n11*a.n32*a.n43;b.n43=a.n13*a.n22*a.n41-a.n12*a.n23*a.n41-a.n13*a.n21*a.n42+a.n11*a.n23*a.n42+a.n12*a.n21*a.n43-a.n11*a.n22*a.n43;b.n44=a.n12*a.n23*a.n31-a.n13*a.n22*a.n31+a.n13*a.n21*a.n32-a.n11*a.n23*a.n32-a.n12*a.n21*a.n33+a.n11*a.n22*a.n33;b.multiplyScalar(1/a.determinant());return b};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.flatten();a=new THREE.Matrix3;var e=b[10]*b[5]-b[6]*b[9],d=-b[10]*b[1]+b[2]*b[9],g=b[6]*b[1]-b[2]*b[5],f=-b[10]*b[4]+b[6]*b[8],j=b[10]*b[0]-b[2]*b[8],h=-b[6]*b[0]+b[2]*b[4],i=b[9]*b[4]-b[5]*b[8],c=-b[9]*b[0]+b[1]*b[8],x=b[5]*b[0]-b[1]*b[4];b=b[0]*e+b[1]*f+b[2]*i;if(b==0)throw"matrix not invertible";b=1/b;a.m[0]=b*e;a.m[1]=b*d;a.m[2]=b*g;a.m[3]=b*f;a.m[4]=b*j;a.m[5]=b*h;a.m[6]=b*i;a.m[7]=b*c;a.m[8]=b*x;return a};
THREE.Matrix4.makeFrustum=function(a,b,e,d,g,f){var j,h,i;j=new THREE.Matrix4;h=2*g/(b-a);i=2*g/(d-e);a=(b+a)/(b-a);e=(d+e)/(d-e);d=-(f+g)/(f-g);g=-2*f*g/(f-g);j.n11=h;j.n12=0;j.n13=a;j.n14=0;j.n21=0;j.n22=i;j.n23=e;j.n24=0;j.n31=0;j.n32=0;j.n33=d;j.n34=g;j.n41=0;j.n42=0;j.n43=-1;j.n44=0;return j};THREE.Matrix4.makePerspective=function(a,b,e,d){var g;a=e*Math.tan(a*Math.PI/360);g=-a;return THREE.Matrix4.makeFrustum(g*b,a*b,g,a,e,d)};
THREE.Matrix4.makeOrtho=function(a,b,e,d,g,f){var j,h,i,c;j=new THREE.Matrix4;h=b-a;i=e-d;c=f-g;a=(b+a)/h;e=(e+d)/i;g=(f+g)/c;j.n11=2/h;j.n12=0;j.n13=0;j.n14=-a;j.n21=0;j.n22=2/i;j.n23=0;j.n24=-e;j.n31=0;j.n32=0;j.n33=-2/c;j.n34=-g;j.n41=0;j.n42=0;j.n43=0;j.n44=1;return j};
THREE.Vertex=function(a,b){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=b||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,b,e,d,g){this.a=a;this.b=b;this.c=e;this.centroid=new THREE.Vector3;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.material=g instanceof Array?g:[g]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,b,e,d,g,f){this.a=a;this.b=b;this.c=e;this.d=d;this.centroid=new THREE.Vector3;this.normal=g instanceof THREE.Vector3?g:new THREE.Vector3;this.vertexNormals=g instanceof Array?g:[];this.material=f instanceof Array?f:[f]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,b,e;a=0;for(b=this.faces.length;a<b;a++){e=this.faces[a];e.centroid.set(0,0,0);if(e instanceof THREE.Face3){e.centroid.addSelf(this.vertices[e.a].position);e.centroid.addSelf(this.vertices[e.b].position);e.centroid.addSelf(this.vertices[e.c].position);e.centroid.divideScalar(3)}else if(e instanceof THREE.Face4){e.centroid.addSelf(this.vertices[e.a].position);e.centroid.addSelf(this.vertices[e.b].position);e.centroid.addSelf(this.vertices[e.c].position);
e.centroid.addSelf(this.vertices[e.d].position);e.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var b,e,d,g,f,j,h=new THREE.Vector3,i=new THREE.Vector3;d=0;for(g=this.vertices.length;d<g;d++){f=this.vertices[d];f.normal.set(0,0,0)}d=0;for(g=this.faces.length;d<g;d++){f=this.faces[d];if(a&&f.vertexNormals.length){h.set(0,0,0);b=0;for(e=f.normal.length;b<e;b++)h.addSelf(f.vertexNormals[b]);h.divideScalar(3)}else{b=this.vertices[f.a];e=this.vertices[f.b];j=this.vertices[f.c];h.sub(j.position,
e.position);i.sub(b.position,e.position);h.crossSelf(i)}h.isZero()||h.normalize();f.normal.copy(h)}},computeVertexNormals:function(){var a,b=[],e,d;a=0;for(vl=this.vertices.length;a<vl;a++)b[a]=new THREE.Vector3;a=0;for(e=this.faces.length;a<e;a++){d=this.faces[a];if(d instanceof THREE.Face3){b[d.a].addSelf(d.normal);b[d.b].addSelf(d.normal);b[d.c].addSelf(d.normal)}else if(d instanceof THREE.Face4){b[d.a].addSelf(d.normal);b[d.b].addSelf(d.normal);b[d.c].addSelf(d.normal);b[d.d].addSelf(d.normal)}}a=
0;for(vl=this.vertices.length;a<vl;a++)b[a].normalize();a=0;for(e=this.faces.length;a<e;a++){d=this.faces[a];if(d instanceof THREE.Face3){d.vertexNormals[0]=b[d.a].clone();d.vertexNormals[1]=b[d.b].clone();d.vertexNormals[2]=b[d.c].clone()}else if(d instanceof THREE.Face4){d.vertexNormals[0]=b[d.a].clone();d.vertexNormals[1]=b[d.b].clone();d.vertexNormals[2]=b[d.c].clone();d.vertexNormals[3]=b[d.d].clone()}}},computeTangents:function(){function a(z,D,I,X){f=z.vertices[D].position;j=z.vertices[I].position;
h=z.vertices[X].position;i=g[0];c=g[1];x=g[2];C=j.x-f.x;s=h.x-f.x;u=j.y-f.y;y=h.y-f.y;A=j.z-f.z;J=h.z-f.z;w=c.u-i.u;E=x.u-i.u;l=c.v-i.v;P=x.v-i.v;M=1/(w*P-E*l);m.set((P*C-l*s)*M,(P*u-l*y)*M,(P*A-l*J)*M);r.set((w*s-E*C)*M,(w*y-E*u)*M,(w*J-E*A)*M);p[D].addSelf(m);p[I].addSelf(m);p[X].addSelf(m);n[D].addSelf(r);n[I].addSelf(r);n[X].addSelf(r)}var b,e,d,g,f,j,h,i,c,x,C,s,u,y,A,J,w,E,l,P,M,k,p=[],n=[],m=new THREE.Vector3,r=new THREE.Vector3,q=new THREE.Vector3,v=new THREE.Vector3;k=new THREE.Vector3;b=
0;for(e=this.vertices.length;b<e;b++){p[b]=new THREE.Vector3;n[b]=new THREE.Vector3}b=0;for(e=this.faces.length;b<e;b++){d=this.faces[b];g=this.uvs[b];if(d instanceof THREE.Face3){a(this,d.a,d.b,d.c);this.vertices[d.a].normal.copy(d.vertexNormals[0]);this.vertices[d.b].normal.copy(d.vertexNormals[1]);this.vertices[d.c].normal.copy(d.vertexNormals[2])}else if(d instanceof THREE.Face4){a(this,d.a,d.b,d.c);this.vertices[d.a].normal.copy(d.vertexNormals[0]);this.vertices[d.b].normal.copy(d.vertexNormals[1]);
this.vertices[d.c].normal.copy(d.vertexNormals[2]);this.vertices[d.d].normal.copy(d.vertexNormals[3])}}b=0;for(e=this.vertices.length;b<e;b++){k.copy(this.vertices[b].normal);d=p[b];q.copy(d);q.subSelf(k.multiplyScalar(k.dot(d))).normalize();v.cross(this.vertices[b].normal,d);test=v.dot(n[b]);d=test<0?-1:1;this.vertices[b].tangent.set(q.x,q.y,q.z,d)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.bbox={x:[this.vertices[0].position.x,this.vertices[0].position.x],
y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,e=this.vertices.length;b<e;b++){a=this.vertices[b];if(a.position.x<this.bbox.x[0])this.bbox.x[0]=a.position.x;else if(a.position.x>this.bbox.x[1])this.bbox.x[1]=a.position.x;if(a.position.y<this.bbox.y[0])this.bbox.y[0]=a.position.y;else if(a.position.y>this.bbox.y[1])this.bbox.y[1]=a.position.y;if(a.position.z<this.bbox.z[0])this.bbox.z[0]=a.position.z;else if(a.position.z>
this.bbox.z[1])this.bbox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,b=0,e=this.vertices.length;b<e;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(x){var C=[];b=0;for(e=x.length;b<e;b++)x[b]==undefined?C.push("undefined"):C.push(x[b].toString());return C.join("_")}var b,e,d,g,f,j,h,i,c={};d=0;for(g=this.faces.length;d<g;d++){f=this.faces[d];j=
f.material;h=a(j);if(c[h]==undefined)c[h]={hash:h,counter:0};i=c[h].hash+"_"+c[h].counter;if(this.geometryChunks[i]==undefined)this.geometryChunks[i]={faces:[],material:j,vertices:0};f=f instanceof THREE.Face3?3:4;if(this.geometryChunks[i].vertices+f>65535){c[h].counter+=1;i=c[h].hash+"_"+c[h].counter;if(this.geometryChunks[i]==undefined)this.geometryChunks[i]={faces:[],material:j,vertices:0}}this.geometryChunks[i].faces.push(d);this.geometryChunks[i].vertices+=f}},toString:function(){return"THREE.Geometry ( vertices: "+
this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,b,e,d){this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.up=new THREE.Vector3(0,1,0);this.matrix=new THREE.Matrix4;this.projectionMatrix=THREE.Matrix4.makePerspective(a,b,e,d);this.autoUpdateMatrix=true;this.translateX=function(g){g=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(g);g.cross(g.clone(),this.up);this.position.addSelf(g);this.target.position.addSelf(g)};this.translateZ=function(g){g=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(g);
this.position.subSelf(g);this.target.position.subSelf(g)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.toString=function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;
THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.translationMatrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.scaleMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.autoUpdateMatrix=this.visible=true;this.updateMatrix=function(){this.matrixPosition=THREE.Matrix4.translationMatrix(this.position.x,this.position.y,this.position.z);
this.rotationMatrix=THREE.Matrix4.rotationXMatrix(this.rotation.x);this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationYMatrix(this.rotation.y));this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationZMatrix(this.rotation.z));this.scaleMatrix=THREE.Matrix4.scaleMatrix(this.scale.x,this.scale.y,this.scale.z);this.matrix.copy(this.matrixPosition);this.matrix.multiplySelf(this.rotationMatrix);this.matrix.multiplySelf(this.scaleMatrix)}};THREE.Object3DCounter={value:0};
THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.Line=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b instanceof Array?b:[b]};THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b instanceof Array?b:[b];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}this.toString=function(){return"THREE.LineBasicMaterial (<br/>color: "+
this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=
a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}this.toString=function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+
this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=
a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}this.toString=function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+
this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap=
"round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=
a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=
a.wireframe_linejoin}this.toString=function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>"+ +")"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.near=1;this.far=1E3;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.near!==undefined)this.near=a.near;if(a.far!==undefined)this.far=a.far;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}this.__2near=2*this.near;this.__farPlusNear=this.far+this.near;this.__farMinusNear=
this.far-this.near;this.toString=function(){return"THREE.MeshDepthMaterial"}};THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}this.toString=function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){this.toString=function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}this.toString=function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+
"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.opacity=1;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}this.toString=function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>blending: "+
this.blending+"<br/>)"}};THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}this.toString=function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};
THREE.ParticleDOMMaterial=function(a){this.domElement=a;this.toString=function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};
THREE.Texture=function(a,b,e,d,g,f){this.image=a;this.mapping=b!==undefined?b:new THREE.UVMapping;this.wrap_s=e!==undefined?e:THREE.ClampToEdgeWrapping;this.wrap_t=d!==undefined?d:THREE.ClampToEdgeWrapping;this.mag_filter=g!==undefined?g:THREE.LinearFilter;this.min_filter=f!==undefined?f:THREE.LinearMipMapLinearFilter;this.toString=function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+
this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,b){this.color=new THREE.Color(a);this.density=b||2.5E-4};
THREE.Projector=function(){function a(p,n){return n.z-p.z}function b(p,n){var m=0,r=1,q=p.z+p.w,v=n.z+n.w,z=-p.z+p.w,D=-n.z+n.w;if(q>=0&&v>=0&&z>=0&&D>=0)return true;else if(q<0&&v<0||z<0&&D<0)return false;else{if(q<0)m=Math.max(m,q/(q-v));else if(v<0)r=Math.min(r,q/(q-v));if(z<0)m=Math.max(m,z/(z-D));else if(D<0)r=Math.min(r,z/(z-D));if(r<m)return false;else{p.lerpSelf(n,m);n.lerpSelf(p,1-r);return true}}}var e,d,g=[],f,j,h,i=[],c,x,C=[],s,u,y=[],A=new THREE.Vector4,J=new THREE.Vector4,w=new THREE.Matrix4,
E=new THREE.Matrix4,l=[],P=new THREE.Vector4,M=new THREE.Vector4,k;this.projectObjects=function(p,n,m){var r=[],q,v;d=0;w.multiply(n.projectionMatrix,n.matrix);l[0]=new THREE.Vector4(w.n41-w.n11,w.n42-w.n12,w.n43-w.n13,w.n44-w.n14);l[1]=new THREE.Vector4(w.n41+w.n11,w.n42+w.n12,w.n43+w.n13,w.n44+w.n14);l[2]=new THREE.Vector4(w.n41+w.n21,w.n42+w.n22,w.n43+w.n23,w.n44+w.n24);l[3]=new THREE.Vector4(w.n41-w.n21,w.n42-w.n22,w.n43-w.n23,w.n44-w.n24);l[4]=new THREE.Vector4(w.n41-w.n31,w.n42-w.n32,w.n43-
w.n33,w.n44-w.n34);l[5]=new THREE.Vector4(w.n41+w.n31,w.n42+w.n32,w.n43+w.n33,w.n44+w.n34);n=0;for(q=l.length;n<q;n++){v=l[n];v.divideScalar(Math.sqrt(v.x*v.x+v.y*v.y+v.z*v.z))}q=p.objects;p=0;for(n=q.length;p<n;p++){v=q[p];var z;if(!(z=!v.visible)){if(z=v instanceof THREE.Mesh){a:{z=void 0;for(var D=v.position,I=-v.geometry.boundingSphere.radius*Math.max(v.scale.x,Math.max(v.scale.y,v.scale.z)),X=0;X<6;X++){z=l[X].x*D.x+l[X].y*D.y+l[X].z*D.z+l[X].w;if(z<=I){z=false;break a}}z=true}z=!z}z=z}if(!z){e=
g[d]=g[d]||new THREE.RenderableObject;A.copy(v.position);w.multiplyVector3(A);e.object=v;e.z=A.z;r.push(e);d++}}m&&r.sort(a);return r};this.projectScene=function(p,n,m){var r=[],q,v,z,D,I,X,G,Q,R,U,V,N,B,K,o,t;h=x=u=0;n.autoUpdateMatrix&&n.updateMatrix();w.multiply(n.projectionMatrix,n.matrix);X=this.projectObjects(p,n,true);p=0;for(q=X.length;p<q;p++){G=X[p].object;if(G.visible){G.autoUpdateMatrix&&G.updateMatrix();Q=G.matrix;R=G.rotationMatrix;U=G.material;V=G.overdraw;if(G instanceof THREE.Mesh){N=
G.geometry;B=N.vertices;v=0;for(z=B.length;v<z;v++){K=B[v];K.positionWorld.copy(K.position);Q.multiplyVector3(K.positionWorld);D=K.positionScreen;D.copy(K.positionWorld);w.multiplyVector4(D);D.multiplyScalar(1/D.w);K.__visible=D.z>0&&D.z<1}N=N.faces;v=0;for(z=N.length;v<z;v++){K=N[v];if(K instanceof THREE.Face3){D=B[K.a];I=B[K.b];o=B[K.c];if(D.__visible&&I.__visible&&o.__visible)if(G.doubleSided||G.flipSided!=(o.positionScreen.x-D.positionScreen.x)*(I.positionScreen.y-D.positionScreen.y)-(o.positionScreen.y-
D.positionScreen.y)*(I.positionScreen.x-D.positionScreen.x)<0){f=i[h]=i[h]||new THREE.RenderableFace3;f.v1.positionWorld.copy(D.positionWorld);f.v2.positionWorld.copy(I.positionWorld);f.v3.positionWorld.copy(o.positionWorld);f.v1.positionScreen.copy(D.positionScreen);f.v2.positionScreen.copy(I.positionScreen);f.v3.positionScreen.copy(o.positionScreen);f.normalWorld.copy(K.normal);R.multiplyVector3(f.normalWorld);f.centroidWorld.copy(K.centroid);Q.multiplyVector3(f.centroidWorld);f.centroidScreen.copy(f.centroidWorld);
w.multiplyVector3(f.centroidScreen);o=K.vertexNormals;k=f.vertexNormalsWorld;D=0;for(I=o.length;D<I;D++){t=k[D]=k[D]||new THREE.Vector3;t.copy(o[D]);R.multiplyVector3(t)}f.z=f.centroidScreen.z;f.meshMaterial=U;f.faceMaterial=K.material;f.overdraw=V;if(G.geometry.uvs[v]){f.uvs[0]=G.geometry.uvs[v][0];f.uvs[1]=G.geometry.uvs[v][1];f.uvs[2]=G.geometry.uvs[v][2]}r.push(f);h++}}else if(K instanceof THREE.Face4){D=B[K.a];I=B[K.b];o=B[K.c];t=B[K.d];if(D.__visible&&I.__visible&&o.__visible&&t.__visible)if(G.doubleSided||
G.flipSided!=((t.positionScreen.x-D.positionScreen.x)*(I.positionScreen.y-D.positionScreen.y)-(t.positionScreen.y-D.positionScreen.y)*(I.positionScreen.x-D.positionScreen.x)<0||(I.positionScreen.x-o.positionScreen.x)*(t.positionScreen.y-o.positionScreen.y)-(I.positionScreen.y-o.positionScreen.y)*(t.positionScreen.x-o.positionScreen.x)<0)){f=i[h]=i[h]||new THREE.RenderableFace3;f.v1.positionWorld.copy(D.positionWorld);f.v2.positionWorld.copy(I.positionWorld);f.v3.positionWorld.copy(t.positionWorld);
f.v1.positionScreen.copy(D.positionScreen);f.v2.positionScreen.copy(I.positionScreen);f.v3.positionScreen.copy(t.positionScreen);f.normalWorld.copy(K.normal);R.multiplyVector3(f.normalWorld);f.centroidWorld.copy(K.centroid);Q.multiplyVector3(f.centroidWorld);f.centroidScreen.copy(f.centroidWorld);w.multiplyVector3(f.centroidScreen);f.z=f.centroidScreen.z;f.meshMaterial=U;f.faceMaterial=K.material;f.overdraw=V;if(G.geometry.uvs[v]){f.uvs[0]=G.geometry.uvs[v][0];f.uvs[1]=G.geometry.uvs[v][1];f.uvs[2]=
G.geometry.uvs[v][3]}r.push(f);h++;j=i[h]=i[h]||new THREE.RenderableFace3;j.v1.positionWorld.copy(I.positionWorld);j.v2.positionWorld.copy(o.positionWorld);j.v3.positionWorld.copy(t.positionWorld);j.v1.positionScreen.copy(I.positionScreen);j.v2.positionScreen.copy(o.positionScreen);j.v3.positionScreen.copy(t.positionScreen);j.normalWorld.copy(f.normalWorld);j.centroidWorld.copy(f.centroidWorld);j.centroidScreen.copy(f.centroidScreen);j.z=j.centroidScreen.z;j.meshMaterial=U;j.faceMaterial=K.material;
j.overdraw=V;if(G.geometry.uvs[v]){j.uvs[0]=G.geometry.uvs[v][1];j.uvs[1]=G.geometry.uvs[v][2];j.uvs[2]=G.geometry.uvs[v][3]}r.push(j);h++}}}}else if(G instanceof THREE.Line){E.multiply(w,Q);B=G.geometry.vertices;K=B[0];K.positionScreen.copy(K.position);E.multiplyVector4(K.positionScreen);v=1;for(z=B.length;v<z;v++){D=B[v];D.positionScreen.copy(D.position);E.multiplyVector4(D.positionScreen);I=B[v-1];P.copy(D.positionScreen);M.copy(I.positionScreen);if(b(P,M)){P.multiplyScalar(1/P.w);M.multiplyScalar(1/
M.w);c=C[x]=C[x]||new THREE.RenderableLine;c.v1.positionScreen.copy(P);c.v2.positionScreen.copy(M);c.z=Math.max(P.z,M.z);c.material=G.material;r.push(c);x++}}}else if(G instanceof THREE.Particle){J.set(G.position.x,G.position.y,G.position.z,1);w.multiplyVector4(J);J.z/=J.w;if(J.z>0&&J.z<1){s=y[u]=y[u]||new THREE.RenderableParticle;s.x=J.x/J.w;s.y=J.y/J.w;s.z=J.z;s.rotation=G.rotation.z;s.scale.x=G.scale.x*Math.abs(s.x-(J.x+n.projectionMatrix.n11)/(J.w+n.projectionMatrix.n14));s.scale.y=G.scale.y*
Math.abs(s.y-(J.y+n.projectionMatrix.n22)/(J.w+n.projectionMatrix.n24));s.material=G.material;r.push(s);u++}}}}m&&r.sort(a);return r};this.unprojectVector=function(p,n){var m=new THREE.Matrix4;m.multiply(THREE.Matrix4.makeInvert(n.matrix),THREE.Matrix4.makeInvert(n.projectionMatrix));m.multiplyVector3(p);return p}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,b=new THREE.Projector,e,d,g,f;this.domElement=document.createElement("div");this.setSize=function(j,h){e=j;d=h;g=e/2;f=d/2};this.render=function(j,h){var i,c,x,C,s,u,y,A;a=b.projectScene(j,h);i=0;for(c=a.length;i<c;i++){s=a[i];if(s instanceof THREE.RenderableParticle){y=s.x*g+g;A=s.y*f+f;x=0;for(C=s.material.length;x<C;x++){u=s.material[x];if(u instanceof THREE.ParticleDOMMaterial){u=u.domElement;u.style.left=y+"px";u.style.top=A+"px"}}}}}};
THREE.CanvasRenderer=function(){var a=null,b=new THREE.Projector,e=document.createElement("canvas"),d,g,f,j,h=e.getContext("2d"),i=1,c=0,x=null,C=null,s=1,u,y,A,J,w,E,l,P,M,k=new THREE.Color,p=new THREE.Color,n=new THREE.Color,m=new THREE.Color,r=new THREE.Color,q,v,z,D,I,X,G,Q,R,U,V=new THREE.Rectangle,N=new THREE.Rectangle,B=new THREE.Rectangle,K=false,o=new THREE.Color,t=new THREE.Color,F=new THREE.Color,O=new THREE.Color,Y=Math.PI*2,Z=new THREE.Vector3,ea,ma,oa,fa,ra,va,pa=16;ea=document.createElement("canvas");
ea.width=ea.height=2;ma=ea.getContext("2d");ma.fillStyle="rgba(0,0,0,1)";ma.fillRect(0,0,2,2);oa=ma.getImageData(0,0,2,2);fa=oa.data;ra=document.createElement("canvas");ra.width=ra.height=pa;va=ra.getContext("2d");va.translate(-pa/2,-pa/2);va.scale(pa,pa);pa--;this.domElement=e;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(ia,wa){d=ia;g=wa;f=d/2;j=g/2;e.width=d;e.height=g;V.set(-f,-j,f,j)};this.clear=function(){if(!N.isEmpty()){N.inflate(1);N.minSelf(V);h.clearRect(N.getX(),
N.getY(),N.getWidth(),N.getHeight());N.empty()}};this.render=function(ia,wa){function Ka(H){var W,T,L,S=H.lights;t.setRGB(0,0,0);F.setRGB(0,0,0);O.setRGB(0,0,0);H=0;for(W=S.length;H<W;H++){T=S[H];L=T.color;if(T instanceof THREE.AmbientLight){t.r+=L.r;t.g+=L.g;t.b+=L.b}else if(T instanceof THREE.DirectionalLight){F.r+=L.r;F.g+=L.g;F.b+=L.b}else if(T instanceof THREE.PointLight){O.r+=L.r;O.g+=L.g;O.b+=L.b}}}function xa(H,W,T,L){var S,$,ba,ca,da=H.lights;H=0;for(S=da.length;H<S;H++){$=da[H];ba=$.color;
ca=$.intensity;if($ instanceof THREE.DirectionalLight){$=T.dot($.position)*ca;if($>0){L.r+=ba.r*$;L.g+=ba.g*$;L.b+=ba.b*$}}else if($ instanceof THREE.PointLight){Z.sub($.position,W);Z.normalize();$=T.dot(Z)*ca;if($>0){L.r+=ba.r*$;L.g+=ba.g*$;L.b+=ba.b*$}}}}function La(H,W,T){if(T.opacity!=0){Ca(T.opacity);ya(T.blending);var L,S,$,ba,ca,da;if(T instanceof THREE.ParticleBasicMaterial){if(T.map){ba=T.map;ca=ba.width>>1;da=ba.height>>1;S=W.scale.x*f;$=W.scale.y*j;T=S*ca;L=$*da;B.set(H.x-T,H.y-L,H.x+T,
H.y+L);if(V.instersects(B)){h.save();h.translate(H.x,H.y);h.rotate(-W.rotation);h.scale(S,-$);h.translate(-ca,-da);h.drawImage(ba,0,0);h.restore()}}}else if(T instanceof THREE.ParticleCircleMaterial){if(K){o.r=t.r+F.r+O.r;o.g=t.g+F.g+O.g;o.b=t.b+F.b+O.b;k.r=T.color.r*o.r;k.g=T.color.g*o.g;k.b=T.color.b*o.b;k.updateStyleString()}else k.__styleString=T.color.__styleString;T=W.scale.x*f;L=W.scale.y*j;B.set(H.x-T,H.y-L,H.x+T,H.y+L);if(V.instersects(B)){S=k.__styleString;if(C!=S)h.fillStyle=C=S;h.save();
h.translate(H.x,H.y);h.rotate(-W.rotation);h.scale(T,L);h.beginPath();h.arc(0,0,1,0,Y,true);h.closePath();h.fill();h.restore()}}}}function Ma(H,W,T,L){if(L.opacity!=0){Ca(L.opacity);ya(L.blending);h.beginPath();h.moveTo(H.positionScreen.x,H.positionScreen.y);h.lineTo(W.positionScreen.x,W.positionScreen.y);h.closePath();if(L instanceof THREE.LineBasicMaterial){k.__styleString=L.color.__styleString;H=L.linewidth;if(s!=H)h.lineWidth=s=H;H=k.__styleString;if(x!=H)h.strokeStyle=x=H;h.stroke();B.inflate(L.linewidth*
2)}}}function Ga(H,W,T,L,S,$){if(S.opacity!=0){Ca(S.opacity);ya(S.blending);J=H.positionScreen.x;w=H.positionScreen.y;E=W.positionScreen.x;l=W.positionScreen.y;P=T.positionScreen.x;M=T.positionScreen.y;h.beginPath();h.moveTo(J,w);h.lineTo(E,l);h.lineTo(P,M);h.lineTo(J,w);h.closePath();if(S instanceof THREE.MeshBasicMaterial)if(S.map)S.map.image.loaded&&S.map.mapping instanceof THREE.UVMapping&&sa(J,w,E,l,P,M,S.map.image,L.uvs[0].u,L.uvs[0].v,L.uvs[1].u,L.uvs[1].v,L.uvs[2].u,L.uvs[2].v);else if(S.env_map){if(S.env_map.image.loaded)if(S.env_map.mapping instanceof
THREE.SphericalReflectionMapping){H=wa.matrix;Z.copy(L.vertexNormalsWorld[0]);I=(Z.x*H.n11+Z.y*H.n12+Z.z*H.n13)*0.5+0.5;X=-(Z.x*H.n21+Z.y*H.n22+Z.z*H.n23)*0.5+0.5;Z.copy(L.vertexNormalsWorld[1]);G=(Z.x*H.n11+Z.y*H.n12+Z.z*H.n13)*0.5+0.5;Q=-(Z.x*H.n21+Z.y*H.n22+Z.z*H.n23)*0.5+0.5;Z.copy(L.vertexNormalsWorld[2]);R=(Z.x*H.n11+Z.y*H.n12+Z.z*H.n13)*0.5+0.5;U=-(Z.x*H.n21+Z.y*H.n22+Z.z*H.n23)*0.5+0.5;sa(J,w,E,l,P,M,S.env_map.image,I,X,G,Q,R,U)}}else S.wireframe?za(S.color.__styleString,S.wireframe_linewidth):
Aa(S.color.__styleString);else if(S instanceof THREE.MeshLambertMaterial){if(S.map&&!S.wireframe){S.map.mapping instanceof THREE.UVMapping&&sa(J,w,E,l,P,M,S.map.image,L.uvs[0].u,L.uvs[0].v,L.uvs[1].u,L.uvs[1].v,L.uvs[2].u,L.uvs[2].v);ya(THREE.SubtractiveBlending)}if(K)if(!S.wireframe&&S.shading==THREE.SmoothShading&&L.vertexNormalsWorld.length==3){p.r=n.r=m.r=t.r;p.g=n.g=m.g=t.g;p.b=n.b=m.b=t.b;xa($,L.v1.positionWorld,L.vertexNormalsWorld[0],p);xa($,L.v2.positionWorld,L.vertexNormalsWorld[1],n);xa($,
L.v3.positionWorld,L.vertexNormalsWorld[2],m);r.r=(n.r+m.r)*0.5;r.g=(n.g+m.g)*0.5;r.b=(n.b+m.b)*0.5;D=Ha(p,n,m,r);sa(J,w,E,l,P,M,D,0,0,1,0,0,1)}else{o.r=t.r;o.g=t.g;o.b=t.b;xa($,L.centroidWorld,L.normalWorld,o);k.r=S.color.r*o.r;k.g=S.color.g*o.g;k.b=S.color.b*o.b;k.updateStyleString();S.wireframe?za(k.__styleString,S.wireframe_linewidth):Aa(k.__styleString)}else S.wireframe?za(S.color.__styleString,S.wireframe_linewidth):Aa(S.color.__styleString)}else if(S instanceof THREE.MeshDepthMaterial){q=S.__2near;
v=S.__farPlusNear;z=S.__farMinusNear;p.r=p.g=p.b=1-q/(v-H.positionScreen.z*z);n.r=n.g=n.b=1-q/(v-W.positionScreen.z*z);m.r=m.g=m.b=1-q/(v-T.positionScreen.z*z);r.r=(n.r+m.r)*0.5;r.g=(n.g+m.g)*0.5;r.b=(n.b+m.b)*0.5;D=Ha(p,n,m,r);sa(J,w,E,l,P,M,D,0,0,1,0,0,1)}else if(S instanceof THREE.MeshNormalMaterial){k.r=Da(L.normalWorld.x);k.g=Da(L.normalWorld.y);k.b=Da(L.normalWorld.z);k.updateStyleString();S.wireframe?za(k.__styleString,S.wireframe_linewidth):Aa(k.__styleString)}}}function za(H,W){if(x!=H)h.strokeStyle=
x=H;if(s!=W)h.lineWidth=s=W;h.stroke();B.inflate(W*2)}function Aa(H){if(C!=H)h.fillStyle=C=H;h.fill()}function sa(H,W,T,L,S,$,ba,ca,da,ja,ga,ka,ta){var na,la;na=ba.width-1;la=ba.height-1;ca*=na;da*=la;ja*=na;ga*=la;ka*=na;ta*=la;T-=H;L-=W;S-=H;$-=W;ja-=ca;ga-=da;ka-=ca;ta-=da;la=1/(ja*ta-ka*ga);na=(ta*T-ga*S)*la;ga=(ta*L-ga*$)*la;T=(ja*S-ka*T)*la;L=(ja*$-ka*L)*la;H=H-na*ca-T*da;W=W-ga*ca-L*da;h.save();h.transform(na,ga,T,L,H,W);h.clip();h.drawImage(ba,0,0);h.restore()}function Ca(H){if(i!=H)h.globalAlpha=
i=H}function ya(H){if(c!=H){switch(H){case THREE.NormalBlending:h.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:h.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:h.globalCompositeOperation="darker"}c=H}}function Ha(H,W,T,L){var S=~~(H.r*255),$=~~(H.g*255);H=~~(H.b*255);var ba=~~(W.r*255),ca=~~(W.g*255);W=~~(W.b*255);var da=~~(T.r*255),ja=~~(T.g*255);T=~~(T.b*255);var ga=~~(L.r*255),ka=~~(L.g*255);L=~~(L.b*255);fa[0]=S<0?0:S>255?255:S;fa[1]=$<0?0:
$>255?255:$;fa[2]=H<0?0:H>255?255:H;fa[4]=ba<0?0:ba>255?255:ba;fa[5]=ca<0?0:ca>255?255:ca;fa[6]=W<0?0:W>255?255:W;fa[8]=da<0?0:da>255?255:da;fa[9]=ja<0?0:ja>255?255:ja;fa[10]=T<0?0:T>255?255:T;fa[12]=ga<0?0:ga>255?255:ga;fa[13]=ka<0?0:ka>255?255:ka;fa[14]=L<0?0:L>255?255:L;ma.putImageData(oa,0,0);va.drawImage(ea,0,0);return ra}function Da(H){H=(H+1)*0.5;return H<0?0:H>1?1:H}function Ea(H,W){var T=W.x-H.x,L=W.y-H.y,S=1/Math.sqrt(T*T+L*L);T*=S;L*=S;W.x+=T;W.y+=L;H.x-=T;H.y-=L}var Ba,Ia,aa,ha,qa,Fa,
Ja,ua;h.setTransform(1,0,0,-1,f,j);this.autoClear&&this.clear();a=b.projectScene(ia,wa,this.sortElements);(K=ia.lights.length>0)&&Ka(ia);Ba=0;for(Ia=a.length;Ba<Ia;Ba++){aa=a[Ba];B.empty();if(aa instanceof THREE.RenderableParticle){u=aa;u.x*=f;u.y*=j;ha=0;for(qa=aa.material.length;ha<qa;ha++)La(u,aa,aa.material[ha],ia)}else if(aa instanceof THREE.RenderableLine){u=aa.v1;y=aa.v2;u.positionScreen.x*=f;u.positionScreen.y*=j;y.positionScreen.x*=f;y.positionScreen.y*=j;B.addPoint(u.positionScreen.x,u.positionScreen.y);
B.addPoint(y.positionScreen.x,y.positionScreen.y);if(V.instersects(B)){ha=0;for(qa=aa.material.length;ha<qa;)Ma(u,y,aa,aa.material[ha++],ia)}}else if(aa instanceof THREE.RenderableFace3){u=aa.v1;y=aa.v2;A=aa.v3;u.positionScreen.x*=f;u.positionScreen.y*=j;y.positionScreen.x*=f;y.positionScreen.y*=j;A.positionScreen.x*=f;A.positionScreen.y*=j;if(aa.overdraw){Ea(u.positionScreen,y.positionScreen);Ea(y.positionScreen,A.positionScreen);Ea(A.positionScreen,u.positionScreen)}B.add3Points(u.positionScreen.x,
u.positionScreen.y,y.positionScreen.x,y.positionScreen.y,A.positionScreen.x,A.positionScreen.y);if(V.instersects(B)){ha=0;for(qa=aa.meshMaterial.length;ha<qa;){ua=aa.meshMaterial[ha++];if(ua instanceof THREE.MeshFaceMaterial){Fa=0;for(Ja=aa.faceMaterial.length;Fa<Ja;)(ua=aa.faceMaterial[Fa++])&&Ga(u,y,A,aa,ua,ia)}else Ga(u,y,A,aa,ua,ia)}}}N.addRectangle(B)}h.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(Q,R,U){var V,N,B,K;V=0;for(N=Q.lights.length;V<N;V++){B=Q.lights[V];if(B instanceof THREE.DirectionalLight){K=R.normalWorld.dot(B.position)*B.intensity;if(K>0){U.r+=B.color.r*K;U.g+=B.color.g*K;U.b+=B.color.b*K}}else if(B instanceof THREE.PointLight){m.sub(B.position,R.centroidWorld);m.normalize();K=R.normalWorld.dot(m)*B.intensity;if(K>0){U.r+=B.color.r*K;U.g+=B.color.g*K;U.b+=B.color.b*K}}}}function b(Q,R,U,V,N,B){z=d(D++);z.setAttribute("d","M "+Q.positionScreen.x+
" "+Q.positionScreen.y+" L "+R.positionScreen.x+" "+R.positionScreen.y+" L "+U.positionScreen.x+","+U.positionScreen.y+"z");if(N instanceof THREE.MeshBasicMaterial)l.__styleString=N.color.__styleString;else if(N instanceof THREE.MeshLambertMaterial)if(E){P.r=M.r;P.g=M.g;P.b=M.b;a(B,V,P);l.r=N.color.r*P.r;l.g=N.color.g*P.g;l.b=N.color.b*P.b;l.updateStyleString()}else l.__styleString=N.color.__styleString;else if(N instanceof THREE.MeshDepthMaterial){n=1-N.__2near/(N.__farPlusNear-V.z*N.__farMinusNear);
l.setRGB(n,n,n)}else N instanceof THREE.MeshNormalMaterial&&l.setRGB(g(V.normalWorld.x),g(V.normalWorld.y),g(V.normalWorld.z));N.wireframe?z.setAttribute("style","fill: none; stroke: "+l.__styleString+"; stroke-width: "+N.wireframe_linewidth+"; stroke-opacity: "+N.opacity+"; stroke-linecap: "+N.wireframe_linecap+"; stroke-linejoin: "+N.wireframe_linejoin):z.setAttribute("style","fill: "+l.__styleString+"; fill-opacity: "+N.opacity);h.appendChild(z)}function e(Q,R,U,V,N,B,K){z=d(D++);z.setAttribute("d",
"M "+Q.positionScreen.x+" "+Q.positionScreen.y+" L "+R.positionScreen.x+" "+R.positionScreen.y+" L "+U.positionScreen.x+","+U.positionScreen.y+" L "+V.positionScreen.x+","+V.positionScreen.y+"z");if(B instanceof THREE.MeshBasicMaterial)l.__styleString=B.color.__styleString;else if(B instanceof THREE.MeshLambertMaterial)if(E){P.r=M.r;P.g=M.g;P.b=M.b;a(K,N,P);l.r=B.color.r*P.r;l.g=B.color.g*P.g;l.b=B.color.b*P.b;l.updateStyleString()}else l.__styleString=B.color.__styleString;else if(B instanceof THREE.MeshDepthMaterial){n=
1-B.__2near/(B.__farPlusNear-N.z*B.__farMinusNear);l.setRGB(n,n,n)}else B instanceof THREE.MeshNormalMaterial&&l.setRGB(g(N.normalWorld.x),g(N.normalWorld.y),g(N.normalWorld.z));B.wireframe?z.setAttribute("style","fill: none; stroke: "+l.__styleString+"; stroke-width: "+B.wireframe_linewidth+"; stroke-opacity: "+B.opacity+"; stroke-linecap: "+B.wireframe_linecap+"; stroke-linejoin: "+B.wireframe_linejoin):z.setAttribute("style","fill: "+l.__styleString+"; fill-opacity: "+B.opacity);h.appendChild(z)}
function d(Q){if(r[Q]==null){r[Q]=document.createElementNS("http://www.w3.org/2000/svg","path");G==0&&r[Q].setAttribute("shape-rendering","crispEdges");return r[Q]}return r[Q]}function g(Q){return Q<0?Math.min((1+Q)*0.5,0.5):0.5+Math.min(Q*0.5,0.5)}var f=null,j=new THREE.Projector,h=document.createElementNS("http://www.w3.org/2000/svg","svg"),i,c,x,C,s,u,y,A,J=new THREE.Rectangle,w=new THREE.Rectangle,E=false,l=new THREE.Color(16777215),P=new THREE.Color(16777215),M=new THREE.Color(0),k=new THREE.Color(0),
p=new THREE.Color(0),n,m=new THREE.Vector3,r=[],q=[],v=[],z,D,I,X,G=1;this.domElement=h;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(Q){switch(Q){case "high":G=1;break;case "low":G=0}};this.setSize=function(Q,R){i=Q;c=R;x=i/2;C=c/2;h.setAttribute("viewBox",-x+" "+-C+" "+i+" "+c);h.setAttribute("width",i);h.setAttribute("height",c);J.set(-x,-C,x,C)};this.clear=function(){for(;h.childNodes.length>0;)h.removeChild(h.childNodes[0])};this.render=function(Q,R){var U,V,
N,B,K,o,t,F;this.autoClear&&this.clear();f=j.projectScene(Q,R,this.sortElements);X=I=D=0;if(E=Q.lights.length>0){t=Q.lights;M.setRGB(0,0,0);k.setRGB(0,0,0);p.setRGB(0,0,0);U=0;for(V=t.length;U<V;U++){N=t[U];B=N.color;if(N instanceof THREE.AmbientLight){M.r+=B.r;M.g+=B.g;M.b+=B.b}else if(N instanceof THREE.DirectionalLight){k.r+=B.r;k.g+=B.g;k.b+=B.b}else if(N instanceof THREE.PointLight){p.r+=B.r;p.g+=B.g;p.b+=B.b}}}U=0;for(V=f.length;U<V;U++){t=f[U];w.empty();if(t instanceof THREE.RenderableParticle){s=
t;s.x*=x;s.y*=-C;N=0;for(B=t.material.length;N<B;N++)if(F=t.material[N]){K=s;o=t;F=F;var O=I++;if(q[O]==null){q[O]=document.createElementNS("http://www.w3.org/2000/svg","circle");G==0&&q[O].setAttribute("shape-rendering","crispEdges")}z=q[O];z.setAttribute("cx",K.x);z.setAttribute("cy",K.y);z.setAttribute("r",o.scale.x*x);if(F instanceof THREE.ParticleCircleMaterial){if(E){P.r=M.r+k.r+p.r;P.g=M.g+k.g+p.g;P.b=M.b+k.b+p.b;l.r=F.color.r*P.r;l.g=F.color.g*P.g;l.b=F.color.b*P.b;l.updateStyleString()}else l=
F.color;z.setAttribute("style","fill: "+l.__styleString)}h.appendChild(z)}}else if(t instanceof THREE.RenderableLine){s=t.v1;u=t.v2;s.positionScreen.x*=x;s.positionScreen.y*=-C;u.positionScreen.x*=x;u.positionScreen.y*=-C;w.addPoint(s.positionScreen.x,s.positionScreen.y);w.addPoint(u.positionScreen.x,u.positionScreen.y);if(J.instersects(w)){N=0;for(B=t.material.length;N<B;)if(F=t.material[N++]){K=s;o=u;F=F;O=X++;if(v[O]==null){v[O]=document.createElementNS("http://www.w3.org/2000/svg","line");G==
0&&v[O].setAttribute("shape-rendering","crispEdges")}z=v[O];z.setAttribute("x1",K.positionScreen.x);z.setAttribute("y1",K.positionScreen.y);z.setAttribute("x2",o.positionScreen.x);z.setAttribute("y2",o.positionScreen.y);if(F instanceof THREE.LineBasicMaterial){l.__styleString=F.color.__styleString;z.setAttribute("style","fill: none; stroke: "+l.__styleString+"; stroke-width: "+F.linewidth+"; stroke-opacity: "+F.opacity+"; stroke-linecap: "+F.linecap+"; stroke-linejoin: "+F.linejoin);h.appendChild(z)}}}}else if(t instanceof
THREE.RenderableFace3){s=t.v1;u=t.v2;y=t.v3;s.positionScreen.x*=x;s.positionScreen.y*=-C;u.positionScreen.x*=x;u.positionScreen.y*=-C;y.positionScreen.x*=x;y.positionScreen.y*=-C;w.addPoint(s.positionScreen.x,s.positionScreen.y);w.addPoint(u.positionScreen.x,u.positionScreen.y);w.addPoint(y.positionScreen.x,y.positionScreen.y);if(J.instersects(w)){N=0;for(B=t.meshMaterial.length;N<B;){F=t.meshMaterial[N++];if(F instanceof THREE.MeshFaceMaterial){K=0;for(o=t.faceMaterial.length;K<o;)(F=t.faceMaterial[K++])&&
b(s,u,y,t,F,Q)}else F&&b(s,u,y,t,F,Q)}}}else if(t instanceof THREE.RenderableFace4){s=t.v1;u=t.v2;y=t.v3;A=t.v4;s.positionScreen.x*=x;s.positionScreen.y*=-C;u.positionScreen.x*=x;u.positionScreen.y*=-C;y.positionScreen.x*=x;y.positionScreen.y*=-C;A.positionScreen.x*=x;A.positionScreen.y*=-C;w.addPoint(s.positionScreen.x,s.positionScreen.y);w.addPoint(u.positionScreen.x,u.positionScreen.y);w.addPoint(y.positionScreen.x,y.positionScreen.y);w.addPoint(A.positionScreen.x,A.positionScreen.y);if(J.instersects(w)){N=
0;for(B=t.meshMaterial.length;N<B;){F=t.meshMaterial[N++];if(F instanceof THREE.MeshFaceMaterial){K=0;for(o=t.faceMaterial.length;K<o;)(F=t.faceMaterial[K++])&&e(s,u,y,A,t,F,Q)}else F&&e(s,u,y,A,t,F,Q)}}}}}};
THREE.WebGLRenderer=function(a){function b(k,p,n){var m=c.createProgram();n=["#ifdef GL_ES\nprecision highp float;\n#endif",n?"#define USE_FOG":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");var r=[c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n"].join("\n");
c.attachShader(m,j("fragment",n+k));c.attachShader(m,j("vertex",r+p));c.linkProgram(m);c.getProgramParameter(m,c.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+c.getProgramParameter(m,c.VALIDATE_STATUS)+", gl error ["+c.getError()+"]");m.uniforms={};m.attributes={};return m}function e(k,p){if(k.image.length==6){if(!k.image.__webGLTextureCube&&!k.image.__cubeMapInitialized&&k.image.loadCount==6){k.image.__webGLTextureCube=c.createTexture();c.bindTexture(c.TEXTURE_CUBE_MAP,k.image.__webGLTextureCube);
c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MAG_FILTER,c.LINEAR);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MIN_FILTER,c.LINEAR_MIPMAP_LINEAR);for(var n=0;n<6;++n)c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,k.image[n]);c.generateMipmap(c.TEXTURE_CUBE_MAP);c.bindTexture(c.TEXTURE_CUBE_MAP,null);k.image.__cubeMapInitialized=true}c.activeTexture(c.TEXTURE0+
p);c.bindTexture(c.TEXTURE_CUBE_MAP,k.image.__webGLTextureCube)}}function d(k,p){if(!k.__webGLTexture&&k.image.loaded){k.__webGLTexture=c.createTexture();c.bindTexture(c.TEXTURE_2D,k.__webGLTexture);c.texImage2D(c.TEXTURE_2D,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,k.image);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,h(k.wrap_s));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,h(k.wrap_t));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,h(k.mag_filter));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,
h(k.min_filter));c.generateMipmap(c.TEXTURE_2D);c.bindTexture(c.TEXTURE_2D,null)}c.activeTexture(c.TEXTURE0+p);c.bindTexture(c.TEXTURE_2D,k.__webGLTexture)}function g(k,p){var n,m,r;n=0;for(m=p.length;n<m;n++){r=p[n];k.uniforms[r]=c.getUniformLocation(k,r)}}function f(k,p){var n,m,r;n=0;for(m=p.length;n<m;n++){r=p[n];k.attributes[r]=c.getAttribLocation(k,r)}}function j(k,p){var n;if(k=="fragment")n=c.createShader(c.FRAGMENT_SHADER);else if(k=="vertex")n=c.createShader(c.VERTEX_SHADER);c.shaderSource(n,
p);c.compileShader(n);if(!c.getShaderParameter(n,c.COMPILE_STATUS)){alert(c.getShaderInfoLog(n));return null}return n}function h(k){switch(k){case THREE.RepeatWrapping:return c.REPEAT;case THREE.ClampToEdgeWrapping:return c.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return c.MIRRORED_REPEAT;case THREE.NearestFilter:return c.NEAREST;case THREE.NearestMipMapNearestFilter:return c.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return c.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return c.LINEAR;
case THREE.LinearMipMapNearestFilter:return c.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return c.LINEAR_MIPMAP_LINEAR}return 0}var i=document.createElement("canvas"),c,x,C,s=new THREE.Matrix4,u,y=new Float32Array(16),A=new Float32Array(16),J=new Float32Array(16),w=new Float32Array(9),E=new Float32Array(16),l=function(k,p){if(k){var n,m,r,q=pointLights=maxDirLights=maxPointLights=0;n=0;for(m=k.lights.length;n<m;n++){r=k.lights[n];r instanceof THREE.DirectionalLight&&q++;r instanceof
THREE.PointLight&&pointLights++}if(pointLights+q<=p){maxDirLights=q;maxPointLights=pointLights}else{maxDirLights=Math.ceil(p*q/(pointLights+q));maxPointLights=p-maxDirLights}return{directional:maxDirLights,point:maxPointLights}}return{directional:1,point:p-1}}(a,4);fog=a?a.fog:null;this.domElement=i;this.autoClear=true;try{c=i.getContext("experimental-webgl",{antialias:true})}catch(P){}if(!c){alert("WebGL not supported");throw"cannot create webgl context";}c.clearColor(0,0,0,1);c.clearDepth(1);c.enable(c.DEPTH_TEST);
c.depthFunc(c.LEQUAL);c.frontFace(c.CCW);c.cullFace(c.BACK);c.enable(c.CULL_FACE);c.enable(c.BLEND);c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA);c.clearColor(0,0,0,0);x=C=function(k,p,n){var m=[k?"#define MAX_DIR_LIGHTS "+k:"",p?"#define MAX_POINT_LIGHTS "+p:"","uniform bool enableLighting;\nuniform bool useRefract;\nuniform int pointLightNumber;\nuniform int directionalLightNumber;\nuniform vec3 ambientLightColor;",k?"uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];":"",k?"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];":
"",p?"uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];":"",p?"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];":"","varying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vLightWeighting;",p?"varying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];":"","varying vec3 vViewPosition;\nvarying vec3 vReflect;\nuniform float mRefractionRatio;\nvoid main(void) {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec3 transformedNormal = normalize( normalMatrix * normal );\nif ( !enableLighting ) {\nvLightWeighting = vec3( 1.0, 1.0, 1.0 );\n} else {\nvLightWeighting = ambientLightColor;",
k?"for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {":"",k?"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );":"",k?"float directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );":"",k?"vLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;":"",k?"}":"",p?"for( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {":"",p?"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );":"",p?"vPointLightVector[ i ] = normalize( lPosition.xyz - mvPosition.xyz );":
"",p?"float pointLightWeighting = max( dot( transformedNormal, vPointLightVector[ i ] ), 0.0 );":"",p?"vLightWeighting += pointLightColor[ i ] * pointLightWeighting;":"",p?"}":"","}\nvNormal = transformedNormal;\nvUv = uv;\nif ( useRefract ) {\nvReflect = refract( normalize(mPosition.xyz - cameraPosition), normalize(nWorld.xyz), mRefractionRatio );\n} else {\nvReflect = reflect( normalize(mPosition.xyz - cameraPosition), normalize(nWorld.xyz) );\n}\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),
r=[k?"#define MAX_DIR_LIGHTS "+k:"",p?"#define MAX_POINT_LIGHTS "+p:"","uniform int material;\nuniform bool enableMap;\nuniform bool enableCubeMap;\nuniform bool mixEnvMap;\nuniform samplerCube tCube;\nuniform float mReflectivity;\nuniform sampler2D tMap;\nuniform vec4 mColor;\nuniform float mOpacity;\nuniform vec4 mAmbient;\nuniform vec4 mSpecular;\nuniform float mShininess;\n#ifdef USE_FOG\nuniform vec3 fogColor;\nuniform float fogDensity;\n#endif\nuniform int pointLightNumber;\nuniform int directionalLightNumber;",
k?"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];":"","varying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vLightWeighting;",p?"varying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];":"","varying vec3 vViewPosition;\nvarying vec3 vReflect;\nvoid main() {\nvec4 mapColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nvec4 cubeColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nif ( enableMap ) {\nmapColor = texture2D( tMap, vUv );\n}\nif ( enableCubeMap ) {\ncubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n}\nif ( material == 2 ) { \nvec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );",
p?"vec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );":"",p?"vec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );":"",p?"for( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {":"",p?"vec3 pointVector = normalize( vPointLightVector[ i ] );":"",p?"vec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );":"",p?"float pointDotNormalHalf = dot( normal, pointHalfVector );":"",p?"float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );":"",p?"float pointSpecularWeight = 0.0;":"",p?"if ( pointDotNormalHalf >= 0.0 )":
"",p?"pointSpecularWeight = pow( pointDotNormalHalf, mShininess );":"",p?"pointDiffuse  += mColor * pointDiffuseWeight;":"",p?"pointSpecular += mSpecular * pointSpecularWeight;":"",p?"}":"",k?"vec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );":"",k?"vec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );":"",k?"for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {":"",k?"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );":"",k?"vec3 dirVector = normalize( lDirection.xyz );":"",k?"vec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );":
"",k?"float dirDotNormalHalf = dot( normal, dirHalfVector );":"",k?"float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );":"",k?"float dirSpecularWeight = 0.0;":"",k?"if ( dirDotNormalHalf >= 0.0 )":"",k?"dirSpecularWeight = pow( dirDotNormalHalf, mShininess );":"",k?"dirDiffuse  += mColor * dirDiffuseWeight;":"",k?"dirSpecular += mSpecular * dirSpecularWeight;":"",k?"}":"","vec4 totalLight = mAmbient;",k?"totalLight += dirDiffuse + dirSpecular;":"",p?"totalLight += pointDiffuse + pointSpecular;":
"","if ( mixEnvMap ) {\ngl_FragColor = vec4( mix( mapColor.rgb * totalLight.xyz * vLightWeighting, cubeColor.rgb, mReflectivity ), mapColor.a );\n} else {\ngl_FragColor = vec4( mapColor.rgb * cubeColor.rgb * totalLight.xyz * vLightWeighting, mapColor.a );\n}\n} else if ( material == 1 ) {\nif ( mixEnvMap ) {\ngl_FragColor = vec4( mix( mColor.rgb * mapColor.rgb * vLightWeighting, cubeColor.rgb, mReflectivity ), mColor.a * mapColor.a );\n} else {\ngl_FragColor = vec4( mColor.rgb * mapColor.rgb * cubeColor.rgb * vLightWeighting, mColor.a * mapColor.a );\n}\n} else {\nif ( mixEnvMap ) {\ngl_FragColor = mix( mColor * mapColor, cubeColor, mReflectivity );\n} else {\ngl_FragColor = mColor * mapColor * cubeColor;\n}\n}\n#ifdef USE_FOG\nconst float LOG2 = 1.442695;\nfloat z = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = exp2( - fogDensity * fogDensity * z * z * LOG2 );\nfogFactor = clamp( fogFactor, 0.0, 1.0 );\ngl_FragColor = mix( vec4( fogColor, 1.0 ), gl_FragColor, fogFactor );\n#endif\n}"].join("\n");
m=b(r,m,n);c.useProgram(m);g(m,["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","enableLighting","ambientLightColor","material","mColor","mAmbient","mSpecular","mShininess","mOpacity","enableMap","tMap","enableCubeMap","tCube","mixEnvMap","mReflectivity","mRefractionRatio","useRefract"]);n&&g(m,["fogColor","fogDensity"]);k&&g(m,["directionalLightNumber","directionalLightColor","directionalLightDirection"]);p&&g(m,["pointLightNumber","pointLightColor",
"pointLightPosition"]);c.uniform1i(m.uniforms.enableMap,0);c.uniform1i(m.uniforms.tMap,0);c.uniform1i(m.uniforms.enableCubeMap,0);c.uniform1i(m.uniforms.tCube,1);c.uniform1i(m.uniforms.mixEnvMap,0);c.uniform1i(m.uniforms.useRefract,0);f(m,["position","normal","uv"]);return m}(l.directional,l.point,fog);this.setSize=function(k,p){i.width=k;i.height=p;c.viewport(0,0,i.width,i.height)};this.clear=function(){c.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT)};this.setupLights=function(k,p){var n,m,r,q,v,
z=[],D=[],I=[];q=[];v=[];c.uniform1i(k.uniforms.enableLighting,p.length);n=0;for(m=p.length;n<m;n++){r=p[n];if(r instanceof THREE.AmbientLight)z.push(r);else if(r instanceof THREE.DirectionalLight)I.push(r);else r instanceof THREE.PointLight&&D.push(r)}n=r=q=v=0;for(m=z.length;n<m;n++){r+=z[n].color.r;q+=z[n].color.g;v+=z[n].color.b}c.uniform3f(k.uniforms.ambientLightColor,r,q,v);q=[];v=[];n=0;for(m=I.length;n<m;n++){r=I[n];q.push(r.color.r*r.intensity);q.push(r.color.g*r.intensity);q.push(r.color.b*
r.intensity);v.push(r.position.x);v.push(r.position.y);v.push(r.position.z)}if(I.length){c.uniform1i(k.uniforms.directionalLightNumber,I.length);c.uniform3fv(k.uniforms.directionalLightDirection,v);c.uniform3fv(k.uniforms.directionalLightColor,q)}q=[];v=[];n=0;for(m=D.length;n<m;n++){r=D[n];q.push(r.color.r*r.intensity);q.push(r.color.g*r.intensity);q.push(r.color.b*r.intensity);v.push(r.position.x);v.push(r.position.y);v.push(r.position.z)}if(D.length){c.uniform1i(k.uniforms.pointLightNumber,D.length);
c.uniform3fv(k.uniforms.pointLightPosition,v);c.uniform3fv(k.uniforms.pointLightColor,q)}};this.createBuffers=function(k,p){var n,m,r,q,v,z,D,I,X,G=[],Q=[],R=[],U=[],V=[],N=[],B=0,K=k.geometry.geometryChunks[p],o;r=false;n=0;for(m=k.material.length;n<m;n++){meshMaterial=k.material[n];if(meshMaterial instanceof THREE.MeshFaceMaterial){v=0;for(o=K.material.length;v<o;v++)if(K.material[v]&&K.material[v].shading!=undefined&&K.material[v].shading==THREE.SmoothShading){r=true;break}}else if(meshMaterial&&
meshMaterial.shading!=undefined&&meshMaterial.shading==THREE.SmoothShading){r=true;break}if(r)break}o=r;n=0;for(m=K.faces.length;n<m;n++){r=K.faces[n];q=k.geometry.faces[r];v=q.vertexNormals;faceNormal=q.normal;r=k.geometry.uvs[r];if(q instanceof THREE.Face3){z=k.geometry.vertices[q.a].position;D=k.geometry.vertices[q.b].position;I=k.geometry.vertices[q.c].position;R.push(z.x,z.y,z.z);R.push(D.x,D.y,D.z);R.push(I.x,I.y,I.z);if(k.geometry.hasTangents){z=k.geometry.vertices[q.a].tangent;D=k.geometry.vertices[q.b].tangent;
I=k.geometry.vertices[q.c].tangent;V.push(z.x,z.y,z.z,z.w);V.push(D.x,D.y,D.z,D.w);V.push(I.x,I.y,I.z,I.w)}if(v.length==3&&o)for(q=0;q<3;q++)U.push(v[q].x,v[q].y,v[q].z);else for(q=0;q<3;q++)U.push(faceNormal.x,faceNormal.y,faceNormal.z);if(r)for(q=0;q<3;q++)N.push(r[q].u,r[q].v);G.push(B,B+1,B+2);Q.push(B,B+1);Q.push(B,B+2);Q.push(B+1,B+2);B+=3}else if(q instanceof THREE.Face4){z=k.geometry.vertices[q.a].position;D=k.geometry.vertices[q.b].position;I=k.geometry.vertices[q.c].position;X=k.geometry.vertices[q.d].position;
R.push(z.x,z.y,z.z);R.push(D.x,D.y,D.z);R.push(I.x,I.y,I.z);R.push(X.x,X.y,X.z);if(k.geometry.hasTangents){z=k.geometry.vertices[q.a].tangent;D=k.geometry.vertices[q.b].tangent;I=k.geometry.vertices[q.c].tangent;q=k.geometry.vertices[q.d].tangent;V.push(z.x,z.y,z.z,z.w);V.push(D.x,D.y,D.z,D.w);V.push(I.x,I.y,I.z,I.w);V.push(q.x,q.y,q.z,q.w)}if(v.length==4&&o)for(q=0;q<4;q++)U.push(v[q].x,v[q].y,v[q].z);else for(q=0;q<4;q++)U.push(faceNormal.x,faceNormal.y,faceNormal.z);if(r)for(q=0;q<4;q++)N.push(r[q].u,
r[q].v);G.push(B,B+1,B+2);G.push(B,B+2,B+3);Q.push(B,B+1);Q.push(B,B+2);Q.push(B,B+3);Q.push(B+1,B+2);Q.push(B+2,B+3);B+=4}}if(R.length){K.__webGLVertexBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,K.__webGLVertexBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(R),c.STATIC_DRAW);K.__webGLNormalBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,K.__webGLNormalBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(U),c.STATIC_DRAW);if(k.geometry.hasTangents){K.__webGLTangentBuffer=c.createBuffer();
c.bindBuffer(c.ARRAY_BUFFER,K.__webGLTangentBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(V),c.STATIC_DRAW)}if(N.length>0){K.__webGLUVBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,K.__webGLUVBuffer);c.bufferData(c.ARRAY_BUFFER,new Float32Array(N),c.STATIC_DRAW)}K.__webGLFaceBuffer=c.createBuffer();c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,K.__webGLFaceBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,new Uint16Array(G),c.STATIC_DRAW);K.__webGLLineBuffer=c.createBuffer();c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,
K.__webGLLineBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,new Uint16Array(Q),c.STATIC_DRAW);K.__webGLFaceCount=G.length;K.__webGLLineCount=Q.length}};this.renderBuffer=function(k,p,n,m,r){var q,v,z,D,I,X,G,Q,R;if(m instanceof THREE.MeshShaderMaterial||m instanceof THREE.MeshDepthMaterial||m instanceof THREE.MeshNormalMaterial){if(!m.program){if(m instanceof THREE.MeshDepthMaterial){G=M.depth;m.fragment_shader=G.fragment_shader;m.vertex_shader=G.vertex_shader;m.uniforms=G.uniforms;m.uniforms.mNear.value=
m.near;m.uniforms.mFar.value=m.far}else if(m instanceof THREE.MeshNormalMaterial){G=M.normal;m.fragment_shader=G.fragment_shader;m.vertex_shader=G.vertex_shader;m.uniforms=G.uniforms}m.program=b(m.fragment_shader,m.vertex_shader,null);G=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(R in m.uniforms)G.push(R);g(m.program,G);f(m.program,["position","normal","uv","tangent"])}R=m.program}else R=C;if(R!=x){c.useProgram(R);x=R}R==C&&this.setupLights(R,
p);this.loadCamera(R,k);this.loadMatrices(R);if(m instanceof THREE.MeshShaderMaterial||m instanceof THREE.MeshDepthMaterial||m instanceof THREE.MeshNormalMaterial){z=m.wireframe;D=m.wireframe_linewidth;k=R;p=m.uniforms;var U;for(q in p){Q=p[q].type;G=p[q].value;U=k.uniforms[q];if(Q=="i")c.uniform1i(U,G);else if(Q=="f")c.uniform1f(U,G);else if(Q=="v3")c.uniform3f(U,G.x,G.y,G.z);else if(Q=="c")c.uniform3f(U,G.r,G.g,G.b);else if(Q=="t"){c.uniform1i(U,G);if(Q=p[q].texture)Q.image instanceof Array&&Q.image.length==
6?e(Q,G):d(Q,G)}}}if(m instanceof THREE.MeshPhongMaterial||m instanceof THREE.MeshLambertMaterial||m instanceof THREE.MeshBasicMaterial){q=m.color;v=m.opacity;z=m.wireframe;D=m.wireframe_linewidth;I=m.map;X=m.env_map;p=m.combine==THREE.MixOperation;k=m.reflectivity;Q=m.env_map&&m.env_map.mapping instanceof THREE.CubeRefractionMapping;G=m.refraction_ratio;c.uniform4f(R.uniforms.mColor,q.r*v,q.g*v,q.b*v,v);c.uniform1i(R.uniforms.mixEnvMap,p);c.uniform1f(R.uniforms.mReflectivity,k);c.uniform1i(R.uniforms.useRefract,
Q);c.uniform1f(R.uniforms.mRefractionRatio,G);if(n){c.uniform1f(R.uniforms.fogDensity,n.density);c.uniform3f(R.uniforms.fogColor,n.color.r,n.color.g,n.color.b)}}if(m instanceof THREE.MeshPhongMaterial){n=m.ambient;q=m.specular;m=m.shininess;c.uniform4f(R.uniforms.mAmbient,n.r,n.g,n.b,v);c.uniform4f(R.uniforms.mSpecular,q.r,q.g,q.b,v);c.uniform1f(R.uniforms.mShininess,m);c.uniform1i(R.uniforms.material,2)}else if(m instanceof THREE.MeshLambertMaterial)c.uniform1i(R.uniforms.material,1);else m instanceof
THREE.MeshBasicMaterial&&c.uniform1i(R.uniforms.material,0);if(I){d(I,0);c.uniform1i(R.uniforms.tMap,0);c.uniform1i(R.uniforms.enableMap,1)}else c.uniform1i(R.uniforms.enableMap,0);if(X){e(X,1);c.uniform1i(R.uniforms.tCube,1);c.uniform1i(R.uniforms.enableCubeMap,1)}else c.uniform1i(R.uniforms.enableCubeMap,0);v=R.attributes;c.bindBuffer(c.ARRAY_BUFFER,r.__webGLVertexBuffer);c.vertexAttribPointer(v.position,3,c.FLOAT,false,0,0);c.enableVertexAttribArray(v.position);if(v.normal>=0){c.bindBuffer(c.ARRAY_BUFFER,
r.__webGLNormalBuffer);c.vertexAttribPointer(v.normal,3,c.FLOAT,false,0,0);c.enableVertexAttribArray(v.normal)}if(v.tangent>=0){c.bindBuffer(c.ARRAY_BUFFER,r.__webGLTangentBuffer);c.vertexAttribPointer(v.tangent,4,c.FLOAT,false,0,0);c.enableVertexAttribArray(v.tangent)}if(v.uv>=0)if(r.__webGLUVBuffer){c.bindBuffer(c.ARRAY_BUFFER,r.__webGLUVBuffer);c.vertexAttribPointer(v.uv,2,c.FLOAT,false,0,0);c.enableVertexAttribArray(v.uv)}else c.disableVertexAttribArray(v.uv);if(z){c.lineWidth(D);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,
r.__webGLLineBuffer);c.drawElements(c.LINES,r.__webGLLineCount,c.UNSIGNED_SHORT,0)}else{c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,r.__webGLFaceBuffer);c.drawElements(c.TRIANGLES,r.__webGLFaceCount,c.UNSIGNED_SHORT,0)}};this.renderPass=function(k,p,n,m,r,q,v){var z,D,I,X,G;I=0;for(X=m.material.length;I<X;I++){z=m.material[I];if(z instanceof THREE.MeshFaceMaterial){z=0;for(D=r.material.length;z<D;z++)if((G=r.material[z])&&G.blending==q&&G.opacity<1==v){this.setBlending(G.blending);this.renderBuffer(k,p,n,
G,r)}}else if((G=z)&&G.blending==q&&G.opacity<1==v){this.setBlending(G.blending);this.renderBuffer(k,p,n,G,r)}}};this.render=function(k,p){var n,m,r,q,v=k.lights,z=k.fog;this.initWebGLObjects(k);this.autoClear&&this.clear();p.autoUpdateMatrix&&p.updateMatrix();y.set(p.matrix.flatten());J.set(p.projectionMatrix.flatten());n=0;for(m=k.__webGLObjects.length;n<m;n++){r=k.__webGLObjects[n];q=r.object;r=r.buffer;if(q.visible){this.setupMatrices(q,p);this.renderPass(p,v,z,q,r,THREE.NormalBlending,false)}}n=
0;for(m=k.__webGLObjects.length;n<m;n++){r=k.__webGLObjects[n];q=r.object;r=r.buffer;if(q.visible){this.setupMatrices(q,p);this.renderPass(p,v,z,q,r,THREE.AdditiveBlending,false);this.renderPass(p,v,z,q,r,THREE.SubtractiveBlending,false);this.renderPass(p,v,z,q,r,THREE.AdditiveBlending,true);this.renderPass(p,v,z,q,r,THREE.SubtractiveBlending,true);this.renderPass(p,v,z,q,r,THREE.NormalBlending,true)}}};this.initWebGLObjects=function(k){var p,n,m,r,q,v;if(!k.__webGLObjects){k.__webGLObjects=[];k.__webGLObjectsMap=
{}}p=0;for(n=k.objects.length;p<n;p++){m=k.objects[p];if(k.__webGLObjectsMap[m.id]==undefined)k.__webGLObjectsMap[m.id]={};v=k.__webGLObjectsMap[m.id];if(m instanceof THREE.Mesh)for(q in m.geometry.geometryChunks){r=m.geometry.geometryChunks[q];r.__webGLVertexBuffer||this.createBuffers(m,q);if(v[q]==undefined){r={buffer:r,object:m};k.__webGLObjects.push(r);v[q]=1}}}};this.removeObject=function(k,p){var n,m;for(n=k.__webGLObjects.length-1;n>=0;n--){m=k.__webGLObjects[n].object;p==m&&k.__webGLObjects.splice(n,
1)}};this.setupMatrices=function(k,p){k.autoUpdateMatrix&&k.updateMatrix();s.multiply(p.matrix,k.matrix);A.set(s.flatten());u=THREE.Matrix4.makeInvert3x3(s).transpose();w.set(u.m);E.set(k.matrix.flatten())};this.loadMatrices=function(k){c.uniformMatrix4fv(k.uniforms.viewMatrix,false,y);c.uniformMatrix4fv(k.uniforms.modelViewMatrix,false,A);c.uniformMatrix4fv(k.uniforms.projectionMatrix,false,J);c.uniformMatrix3fv(k.uniforms.normalMatrix,false,w);c.uniformMatrix4fv(k.uniforms.objectMatrix,false,E)};
this.loadCamera=function(k,p){c.uniform3f(k.uniforms.cameraPosition,p.position.x,p.position.y,p.position.z)};this.setBlending=function(k){switch(k){case THREE.AdditiveBlending:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ONE,c.ONE);break;case THREE.SubtractiveBlending:c.blendFunc(c.DST_COLOR,c.ZERO);break;default:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=function(k,p){if(k){!p||p=="ccw"?c.frontFace(c.CCW):c.frontFace(c.CW);if(k=="back")c.cullFace(c.BACK);
else k=="front"?c.cullFace(c.FRONT):c.cullFace(c.FRONT_AND_BACK);c.enable(c.CULL_FACE)}else c.disable(c.CULL_FACE)};this.supportsVertexTextures=function(){return c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0};var M={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",
vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"}}};
THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterial=this.meshMaterial=null;this.overdraw=false;this.uvs=[null,null,null]};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.material=null};
var GeometryUtils={merge:function(a,b){var e=b instanceof THREE.Mesh,d=a.vertices.length,g=e?b.geometry:b,f=a.vertices,j=g.vertices,h=a.faces,i=g.faces,c=a.uvs;g=g.uvs;e&&b.updateMatrix();for(var x=0,C=j.length;x<C;x++){var s=new THREE.Vertex(j[x].position.clone());e&&b.matrix.multiplyVector3(s.position);f.push(s)}x=0;for(C=i.length;x<C;x++){j=i[x];var u,y=j.vertexNormals;if(j instanceof THREE.Face3)u=new THREE.Face3(j.a+d,j.b+d,j.c+d);else if(j instanceof THREE.Face4)u=new THREE.Face4(j.a+d,j.b+
d,j.c+d,j.d+d);u.centroid.copy(j.centroid);u.normal.copy(j.normal);e=0;for(f=y.length;e<f;e++){s=y[e];u.vertexNormals.push(s.clone())}u.material=j.material.slice();h.push(u)}x=0;for(C=g.length;x<C;x++){d=g[x];h=[];e=0;for(f=d.length;e<f;e++)h.push(new THREE.UV(d[e].u,d[e].v));c.push(h)}}},ImageUtils={loadTexture:function(a,b){var e=new Image;e.onload=function(){this.loaded=true};e.src=a;return new THREE.Texture(e,b)},loadArray:function(a){var b,e,d=[];b=d.loadCount=0;for(e=a.length;b<e;++b){d[b]=
new Image;d[b].loaded=0;d[b].onload=function(){d.loadCount+=1;this.loaded=true};d[b].src=a[b]}return d}},SceneUtils={addMesh:function(a,b,e,d,g,f,j,h,i,c){b=new THREE.Mesh(b,c);b.scale.x=b.scale.y=b.scale.z=e;b.position.x=d;b.position.y=g;b.position.z=f;b.rotation.x=j;b.rotation.y=h;b.rotation.z=i;a.addObject(b);return b},addPanoramaCubeWebGL:function(a,b,e){var d=ShaderUtils.lib.cube;d.uniforms.tCube.texture=e;e=new THREE.MeshShaderMaterial({fragment_shader:d.fragment_shader,vertex_shader:d.vertex_shader,
uniforms:d.uniforms});b=new THREE.Mesh(new Cube(b,b,b,1,1,null,true),e);a.addObject(b);return b},addPanoramaCube:function(a,b,e){var d=[];d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[0])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[1])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[2])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[3])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[4])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[5])}));
mesh=new THREE.Mesh(new Cube(b,b,b,1,1,d,true),new THREE.MeshFaceMaterial);a.addObject(mesh);return mesh},addPanoramaCubePlanes:function(a,b,e){var d=b/2;b=new Plane(b,b);var g=Math.PI/2,f=Math.PI;SceneUtils.addMesh(a,b,1,0,0,-d,0,0,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[5])}));SceneUtils.addMesh(a,b,1,-d,0,0,0,g,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[0])}));SceneUtils.addMesh(a,b,1,d,0,0,0,-g,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[1])}));SceneUtils.addMesh(a,
b,1,0,d,0,g,0,f,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[2])}));SceneUtils.addMesh(a,b,1,0,-d,0,-g,0,f,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[3])}))}},ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertex_shader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main(void) {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:{tNormal:{type:"t",value:2,texture:null},tAO:{type:"t",value:3,texture:null},tDisplacement:{type:"t",value:4,texture:null},uDisplacementBias:{type:"f",value:-0.5},uDisplacementScale:{type:"f",value:2.5},uPointLightPos:{type:"v3",value:new THREE.Vector3},uPointLightColor:{type:"c",value:new THREE.Color(15658734)},uDirLightPos:{type:"v3",value:new THREE.Vector3},uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uDiffuseColor:{type:"c",
value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30}},fragment_shader:"uniform vec3 uDirLightPos;\nuniform vec3 uDirLightColor;\nuniform vec3 uPointLightPos;\nuniform vec3 uPointLightColor;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform sampler2D tNormal;\nuniform sampler2D tAO;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vLightWeighting;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 normalTex = normalize( texture2D( tNormal, vUv ).xyz * 2.0 - 1.0 );\nvec3 aoTex = texture2D( tAO, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec3 pointVector = normalize( vPointLightVector );\nvec3 pointHalfVector = normalize( vPointLightVector + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, uShininess );\npointDiffuse  += vec4( uDiffuseColor, 1.0 ) * pointDiffuseWeight;\npointSpecular += vec4( uSpecularColor, 1.0 ) * pointSpecularWeight;\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 lDirection = viewMatrix * vec4( uDirLightPos, 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, uShininess );\ndirDiffuse  += vec4( uDiffuseColor, 1.0 ) * dirDiffuseWeight;\ndirSpecular += vec4( uSpecularColor, 1.0 ) * dirSpecularWeight;\nvec4 totalLight = vec4( uAmbientColor, 1.0 );\ntotalLight += dirDiffuse + dirSpecular;\ntotalLight += pointDiffuse + pointSpecular;\ngl_FragColor = vec4( totalLight.xyz * vLightWeighting * aoTex, 1.0 );\n}",
vertex_shader:"attribute vec4 tangent;\nuniform vec3 uDirLightPos;\nuniform vec3 uDirLightColor;\nuniform vec3 uPointLightPos;\nuniform vec3 uPointLightColor;\nuniform vec3 uAmbientLightColor;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vLightWeighting;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvLightWeighting = uAmbientLightColor;\nvec4 lPosition = viewMatrix * vec4( uPointLightPos, 1.0 );\nvPointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( vNormal, vPointLightVector ), 0.0 );\nvLightWeighting += uPointLightColor * pointLightWeighting;\nvec4 lDirection = viewMatrix * vec4( uDirLightPos, 0.0 );\nfloat directionalLightWeighting = max( dot( vNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += uDirLightColor * directionalLightWeighting;\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}"},
basic:{uniforms:{},vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"void main() {\ngl_FragColor = vec4(1.0, 0.0, 0.0, 0.5);\n}"},cube:{uniforms:{tCube:{type:"t",value:1,texture:null}},vertex_shader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( -wPos.x, wPos.yz ) );\n}"}}},Cube=function(a,b,e,d,g,f,j,h){function i(A,J,w,E,l,P,M,k){var p,n=d||1,m=g||1,r=n+1,q=m+1,v=l/2,z=P/2;l=l/n;P=P/m;var D=c.vertices.length;if(A=="x"&&J=="y"||A=="y"&&J=="x")p="z";else if(A=="x"&&J=="z"||A=="z"&&J=="x")p="y";else if(A=="z"&&J=="y"||A=="y"&&J=="z")p="x";for(iy=0;iy<q;iy++)for(ix=0;ix<
r;ix++){var I=new THREE.Vector3;I[A]=(ix*l-v)*w;I[J]=(iy*P-z)*E;I[p]=M;c.vertices.push(new THREE.Vertex(I))}for(iy=0;iy<m;iy++)for(ix=0;ix<n;ix++){c.faces.push(new THREE.Face4(ix+r*iy+D,ix+r*(iy+1)+D,ix+1+r*(iy+1)+D,ix+1+r*iy+D,null,k));c.uvs.push([new THREE.UV(ix/n,iy/m),new THREE.UV(ix/n,(iy+1)/m),new THREE.UV((ix+1)/n,(iy+1)/m),new THREE.UV((ix+1)/n,iy/m)])}}THREE.Geometry.call(this);var c=this,x=a/2,C=b/2,s=e/2;j=j?-1:1;if(f!==undefined)if(f instanceof Array)this.materials=f;else{this.materials=
[];for(var u=0;u<6;u++)this.materials.push([f])}else this.materials=[];this.sides={px:true,nx:true,py:true,ny:true,pz:true,nz:true};if(h!=undefined)for(var y in h)if(this.sides[y]!=undefined)this.sides[y]=h[y];this.sides.px&&i("z","y",1*j,-1,e,b,-x,this.materials[0]);this.sides.nx&&i("z","y",-1*j,-1,e,b,x,this.materials[1]);this.sides.py&&i("x","z",1*j,1,a,e,C,this.materials[2]);this.sides.ny&&i("x","z",1*j,-1,a,e,-C,this.materials[3]);this.sides.pz&&i("x","y",1*j,-1,a,b,s,this.materials[4]);this.sides.nz&&
i("x","y",-1*j,-1,a,b,-s,this.materials[5]);(function(){for(var A=[],J=[],w=0,E=c.vertices.length;w<E;w++){for(var l=c.vertices[w],P=false,M=0,k=A.length;M<k;M++){var p=A[M];if(l.position.x==p.position.x&&l.position.y==p.position.y&&l.position.z==p.position.z){J[w]=M;P=true;break}}if(!P){J[w]=A.length;A.push(new THREE.Vertex(l.position.clone()))}}w=0;for(E=c.faces.length;w<E;w++){l=c.faces[w];l.a=J[l.a];l.b=J[l.b];l.c=J[l.c];l.d=J[l.d]}c.vertices=A})();this.computeCentroids();this.computeFaceNormals();
this.sortFacesByMaterial()};Cube.prototype=new THREE.Geometry;Cube.prototype.constructor=Cube;
var Cylinder=function(a,b,e,d,g){function f(c,x,C){j.vertices.push(new THREE.Vertex(new THREE.Vector3(c,x,C)))}THREE.Geometry.call(this);var j=this,h=Math.PI,i;for(i=0;i<a;i++)f(Math.sin(2*h*i/a)*b,Math.cos(2*h*i/a)*b,0);for(i=0;i<a;i++)f(Math.sin(2*h*i/a)*e,Math.cos(2*h*i/a)*e,d);for(i=0;i<a;i++)j.faces.push(new THREE.Face4(i,i+a,a+(i+1)%a,(i+1)%a));if(e!=0){f(0,0,-g);for(i=a;i<a+a/2;i++)j.faces.push(new THREE.Face4(2*a,(2*i-2*a)%a,(2*i-2*a+1)%a,(2*i-2*a+2)%a))}if(b!=0){f(0,0,d+g);for(i=a+a/2;i<
2*a;i++)j.faces.push(new THREE.Face4((2*i-2*a+2)%a+a,(2*i-2*a+1)%a+a,(2*i-2*a)%a+a,2*a+1))}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cylinder.prototype=new THREE.Geometry;Cylinder.prototype.constructor=Cylinder;
var Plane=function(a,b,e,d){THREE.Geometry.call(this);var g,f=a/2,j=b/2;e=e||1;d=d||1;var h=e+1,i=d+1;a=a/e;var c=b/d;for(g=0;g<i;g++)for(b=0;b<h;b++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(b*a-f,-(g*c-j),0)));for(g=0;g<d;g++)for(b=0;b<e;b++){this.faces.push(new THREE.Face4(b+h*g,b+h*(g+1),b+1+h*(g+1),b+1+h*g));this.uvs.push([new THREE.UV(b/e,g/d),new THREE.UV(b/e,(g+1)/d),new THREE.UV((b+1)/e,(g+1)/d),new THREE.UV((b+1)/e,g/d)])}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};
Plane.prototype=new THREE.Geometry;Plane.prototype.constructor=Plane;
var Sphere=function(a,b,e){THREE.Geometry.call(this);var d,g=Math.PI,f=Math.max(3,b||8),j=Math.max(2,e||6);b=[];for(e=0;e<j+1;e++){d=e/j;var h=a*Math.cos(d*g),i=a*Math.sin(d*g),c=[],x=0;for(d=0;d<f;d++){var C=2*d/f,s=i*Math.sin(C*g);C=i*Math.cos(C*g);(e==0||e==j)&&d>0||(x=this.vertices.push(new THREE.Vertex(new THREE.Vector3(C,h,s)))-1);c.push(x)}b.push(c)}var u,y,A;g=b.length;for(e=0;e<g;e++){f=b[e].length;if(e>0)for(d=0;d<f;d++){c=d==f-1;j=b[e][c?0:d+1];h=b[e][c?f-1:d];i=b[e-1][c?f-1:d];c=b[e-1][c?
0:d+1];s=e/(g-1);u=(e-1)/(g-1);y=(d+1)/f;C=d/f;x=new THREE.UV(1-y,s);s=new THREE.UV(1-C,s);C=new THREE.UV(1-C,u);var J=new THREE.UV(1-y,u);if(e<b.length-1){u=this.vertices[j].position.clone();y=this.vertices[h].position.clone();A=this.vertices[i].position.clone();u.normalize();y.normalize();A.normalize();this.faces.push(new THREE.Face3(j,h,i,[new THREE.Vector3(u.x,u.y,u.z),new THREE.Vector3(y.x,y.y,y.z),new THREE.Vector3(A.x,A.y,A.z)]));this.uvs.push([x,s,C])}if(e>1){u=this.vertices[j].position.clone();
y=this.vertices[i].position.clone();A=this.vertices[c].position.clone();u.normalize();y.normalize();A.normalize();this.faces.push(new THREE.Face3(j,i,c,[new THREE.Vector3(u.x,u.y,u.z),new THREE.Vector3(y.x,y.y,y.z),new THREE.Vector3(A.x,A.y,A.z)]));this.uvs.push([x,C,J])}}}this.boundingSphere={radius:a};this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()};Sphere.prototype=new THREE.Geometry;Sphere.prototype.constructor=Sphere;
THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?this.addStatusElement():null};
THREE.Loader.prototype={addStatusElement:function(){var a=document.createElement("div");a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="#b00";a.style.color="#fff";a.style.width="140px";a.style.padding="0.25em 0.25em 0.25em 0.5em";a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ";b+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1E3).toFixed(2)+" KB";this.statusDomElement.innerHTML=
b},loadAsciiOld:function(a,b){var e=document.createElement("script");e.type="text/javascript";e.onload=b;e.src=a;document.getElementsByTagName("head")[0].appendChild(e)},loadAscii:function(a,b,e){var d=(new Date).getTime();a=new Worker(a);a.onmessage=function(g){THREE.Loader.prototype.createModel(g.data,b,e)};a.postMessage(d)},loadBinary:function(a,b,e){var d=(new Date).getTime();a=new Worker(a);var g=this.showProgress?THREE.Loader.prototype.updateProgress:null;a.onmessage=function(f){THREE.Loader.prototype.loadAjaxBuffers(f.data.buffers,
f.data.materials,b,e,g)};a.onerror=function(f){alert("worker.onerror: "+f.message+"\n"+f.data);f.preventDefault()};a.postMessage(d)},loadAjaxBuffers:function(a,b,e,d,g){var f=new XMLHttpRequest,j=d+"/"+a,h=0;f.onreadystatechange=function(){if(f.readyState==4)f.status==200||f.status==0?THREE.Loader.prototype.createBinModel(f.responseText,e,d,b):alert("Couldn't load ["+j+"] ["+f.status+"]");else if(f.readyState==3){if(g){if(h==0)h=f.getResponseHeader("Content-Length");g({total:h,loaded:f.responseText.length})}}else if(f.readyState==
2)h=f.getResponseHeader("Content-Length")};f.open("GET",j,true);f.overrideMimeType("text/plain; charset=x-user-defined");f.setRequestHeader("Content-Type","text/plain");f.send(null)},createBinModel:function(a,b,e,d){var g=function(f){function j(o,t){var F=x(o,t),O=x(o,t+1),Y=x(o,t+2),Z=x(o,t+3),ea=(Z<<1&255|Y>>7)-127;F=(Y&127)<<16|O<<8|F;if(F==0&&ea==-127)return 0;return(1-2*(Z>>7))*(1+F*Math.pow(2,-23))*Math.pow(2,ea)}function h(o,t){var F=x(o,t),O=x(o,t+1),Y=x(o,t+2);return(x(o,t+3)<<24)+(Y<<16)+
(O<<8)+F}function i(o,t){var F=x(o,t);return(x(o,t+1)<<8)+F}function c(o,t){var F=x(o,t);return F>127?F-256:F}function x(o,t){return o.charCodeAt(t)&255}function C(o){var t,F,O;t=h(a,o);F=h(a,o+k);O=h(a,o+p);o=i(a,o+n);THREE.Loader.prototype.f3(w,t,F,O,o)}function s(o){var t,F,O,Y,Z,ea;t=h(a,o);F=h(a,o+k);O=h(a,o+p);Y=i(a,o+n);Z=h(a,o+m);ea=h(a,o+r);o=h(a,o+q);THREE.Loader.prototype.f3n(w,P,t,F,O,Y,Z,ea,o)}function u(o){var t,F,O,Y;t=h(a,o);F=h(a,o+v);O=h(a,o+z);Y=h(a,o+D);o=i(a,o+I);THREE.Loader.prototype.f4(w,
t,F,O,Y,o)}function y(o){var t,F,O,Y,Z,ea,ma,oa;t=h(a,o);F=h(a,o+v);O=h(a,o+z);Y=h(a,o+D);Z=i(a,o+I);ea=h(a,o+X);ma=h(a,o+G);oa=h(a,o+Q);o=h(a,o+R);THREE.Loader.prototype.f4n(w,P,t,F,O,Y,Z,ea,ma,oa,o)}function A(o){var t,F;t=h(a,o);F=h(a,o+U);o=h(a,o+V);THREE.Loader.prototype.uv3(w,M[t*2],M[t*2+1],M[F*2],M[F*2+1],M[o*2],M[o*2+1])}function J(o){var t,F,O;t=h(a,o);F=h(a,o+N);O=h(a,o+B);o=h(a,o+K);THREE.Loader.prototype.uv4(w,M[t*2],M[t*2+1],M[F*2],M[F*2+1],M[O*2],M[O*2+1],M[o*2],M[o*2+1])}var w=this,
E=0,l,P=[],M=[],k,p,n,m,r,q,v,z,D,I,X,G,Q,R,U,V,N,B,K;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(w,d,f);l={signature:a.substr(E,8),header_bytes:x(a,E+8),vertex_coordinate_bytes:x(a,E+9),normal_coordinate_bytes:x(a,E+10),uv_coordinate_bytes:x(a,E+11),vertex_index_bytes:x(a,E+12),normal_index_bytes:x(a,E+13),uv_index_bytes:x(a,E+14),material_index_bytes:x(a,E+15),nvertices:h(a,E+16),nnormals:h(a,E+16+4),nuvs:h(a,E+16+8),ntri_flat:h(a,E+16+12),ntri_smooth:h(a,E+16+16),ntri_flat_uv:h(a,
E+16+20),ntri_smooth_uv:h(a,E+16+24),nquad_flat:h(a,E+16+28),nquad_smooth:h(a,E+16+32),nquad_flat_uv:h(a,E+16+36),nquad_smooth_uv:h(a,E+16+40)};E+=l.header_bytes;k=l.vertex_index_bytes;p=l.vertex_index_bytes*2;n=l.vertex_index_bytes*3;m=l.vertex_index_bytes*3+l.material_index_bytes;r=l.vertex_index_bytes*3+l.material_index_bytes+l.normal_index_bytes;q=l.vertex_index_bytes*3+l.material_index_bytes+l.normal_index_bytes*2;v=l.vertex_index_bytes;z=l.vertex_index_bytes*2;D=l.vertex_index_bytes*3;I=l.vertex_index_bytes*
4;X=l.vertex_index_bytes*4+l.material_index_bytes;G=l.vertex_index_bytes*4+l.material_index_bytes+l.normal_index_bytes;Q=l.vertex_index_bytes*4+l.material_index_bytes+l.normal_index_bytes*2;R=l.vertex_index_bytes*4+l.material_index_bytes+l.normal_index_bytes*3;U=l.uv_index_bytes;V=l.uv_index_bytes*2;N=l.uv_index_bytes;B=l.uv_index_bytes*2;K=l.uv_index_bytes*3;E+=function(o){var t,F,O,Y=l.vertex_coordinate_bytes*3,Z=o+l.nvertices*Y;for(o=o;o<Z;o+=Y){t=j(a,o);F=j(a,o+l.vertex_coordinate_bytes);O=j(a,
o+l.vertex_coordinate_bytes*2);THREE.Loader.prototype.v(w,t,F,O)}return l.nvertices*Y}(E);E+=function(o){var t,F,O,Y=l.normal_coordinate_bytes*3,Z=o+l.nnormals*Y;for(o=o;o<Z;o+=Y){t=c(a,o);F=c(a,o+l.normal_coordinate_bytes);O=c(a,o+l.normal_coordinate_bytes*2);P.push(t/127,F/127,O/127)}return l.nnormals*Y}(E);E+=function(o){var t,F,O=l.uv_coordinate_bytes*2,Y=o+l.nuvs*O;for(o=o;o<Y;o+=O){t=j(a,o);F=j(a,o+l.uv_coordinate_bytes);M.push(t,F)}return l.nuvs*O}(E);E+=function(o){var t,F=l.vertex_index_bytes*
3+l.material_index_bytes,O=o+l.ntri_flat*F;for(t=o;t<O;t+=F)C(t);return O-o}(E);E+=function(o){var t,F=l.vertex_index_bytes*3+l.material_index_bytes+l.normal_index_bytes*3,O=o+l.ntri_smooth*F;for(t=o;t<O;t+=F)s(t);return O-o}(E);E+=function(o){var t,F=l.vertex_index_bytes*3+l.material_index_bytes,O=F+l.uv_index_bytes*3,Y=o+l.ntri_flat_uv*O;for(t=o;t<Y;t+=O){C(t);A(t+F)}return Y-o}(E);E+=function(o){var t,F=l.vertex_index_bytes*3+l.material_index_bytes+l.normal_index_bytes*3,O=F+l.uv_index_bytes*3,
Y=o+l.ntri_smooth_uv*O;for(t=o;t<Y;t+=O){s(t);A(t+F)}return Y-o}(E);E+=function(o){var t,F=l.vertex_index_bytes*4+l.material_index_bytes,O=o+l.nquad_flat*F;for(t=o;t<O;t+=F)u(t);return O-o}(E);E+=function(o){var t,F=l.vertex_index_bytes*4+l.material_index_bytes+l.normal_index_bytes*4,O=o+l.nquad_smooth*F;for(t=o;t<O;t+=F)y(t);return O-o}(E);E+=function(o){var t,F=l.vertex_index_bytes*4+l.material_index_bytes,O=F+l.uv_index_bytes*4,Y=o+l.nquad_flat_uv*O;for(t=o;t<Y;t+=O){u(t);J(t+F)}return Y-o}(E);
E+=function(o){var t,F=l.vertex_index_bytes*4+l.material_index_bytes+l.normal_index_bytes*4,O=F+l.uv_index_bytes*4,Y=o+l.nquad_smooth_uv*O;for(t=o;t<Y;t+=O){y(t);J(t+F)}return Y-o}(E);this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};g.prototype=new THREE.Geometry;g.prototype.constructor=g;b(new g(e))},createModel:function(a,b,e){var d=function(g){var f=this;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(f,a.materials,g);(function(){var j,h,i,c,x;j=0;for(h=
a.vertices.length;j<h;j+=3){i=a.vertices[j];c=a.vertices[j+1];x=a.vertices[j+2];THREE.Loader.prototype.v(f,i,c,x)}})();(function(){function j(y,A){THREE.Loader.prototype.f3(f,y[A],y[A+1],y[A+2],y[A+3])}function h(y,A){THREE.Loader.prototype.f3n(f,a.normals,y[A],y[A+1],y[A+2],y[A+3],y[A+4],y[A+5],y[A+6])}function i(y,A){THREE.Loader.prototype.f4(f,y[A],y[A+1],y[A+2],y[A+3],y[A+4])}function c(y,A){THREE.Loader.prototype.f4n(f,a.normals,y[A],y[A+1],y[A+2],y[A+3],y[A+4],y[A+5],y[A+6],y[A+7],y[A+8])}function x(y,
A){var J,w,E;J=y[A];w=y[A+1];E=y[A+2];THREE.Loader.prototype.uv3(f,a.uvs[J*2],a.uvs[J*2+1],a.uvs[w*2],a.uvs[w*2+1],a.uvs[E*2],a.uvs[E*2+1])}function C(y,A){var J,w,E,l;J=y[A];w=y[A+1];E=y[A+2];l=y[A+3];THREE.Loader.prototype.uv4(f,a.uvs[J*2],a.uvs[J*2+1],a.uvs[w*2],a.uvs[w*2+1],a.uvs[E*2],a.uvs[E*2+1],a.uvs[l*2],a.uvs[l*2+1])}var s,u;s=0;for(u=a.triangles.length;s<u;s+=4)j(a.triangles,s);s=0;for(u=a.triangles_uv.length;s<u;s+=7){j(a.triangles_uv,s);x(a.triangles_uv,s+4)}s=0;for(u=a.triangles_n.length;s<
u;s+=7)h(a.triangles_n,s);s=0;for(u=a.triangles_n_uv.length;s<u;s+=10){h(a.triangles_n_uv,s);x(a.triangles_n_uv,s+7)}s=0;for(u=a.quads.length;s<u;s+=5)i(a.quads,s);s=0;for(u=a.quads_uv.length;s<u;s+=9){i(a.quads_uv,s);C(a.quads_uv,s+5)}s=0;for(u=a.quads_n.length;s<u;s+=9)c(a.quads_n,s);s=0;for(u=a.quads_n_uv.length;s<u;s+=13){c(a.quads_n_uv,s);C(a.quads_n_uv,s+9)}})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};d.prototype=new THREE.Geometry;d.prototype.constructor=
d;b(new d(e))},v:function(a,b,e,d){a.vertices.push(new THREE.Vertex(new THREE.Vector3(b,e,d)))},f3:function(a,b,e,d,g){a.faces.push(new THREE.Face3(b,e,d,null,a.materials[g]))},f4:function(a,b,e,d,g,f){a.faces.push(new THREE.Face4(b,e,d,g,null,a.materials[f]))},f3n:function(a,b,e,d,g,f,j,h,i){f=a.materials[f];var c=b[h*3],x=b[h*3+1];h=b[h*3+2];var C=b[i*3],s=b[i*3+1];i=b[i*3+2];a.faces.push(new THREE.Face3(e,d,g,[new THREE.Vector3(b[j*3],b[j*3+1],b[j*3+2]),new THREE.Vector3(c,x,h),new THREE.Vector3(C,
s,i)],f))},f4n:function(a,b,e,d,g,f,j,h,i,c,x){j=a.materials[j];var C=b[i*3],s=b[i*3+1];i=b[i*3+2];var u=b[c*3],y=b[c*3+1];c=b[c*3+2];var A=b[x*3],J=b[x*3+1];x=b[x*3+2];a.faces.push(new THREE.Face4(e,d,g,f,[new THREE.Vector3(b[h*3],b[h*3+1],b[h*3+2]),new THREE.Vector3(C,s,i),new THREE.Vector3(u,y,c),new THREE.Vector3(A,J,x)],j))},uv3:function(a,b,e,d,g,f,j){var h=[];h.push(new THREE.UV(b,e));h.push(new THREE.UV(d,g));h.push(new THREE.UV(f,j));a.uvs.push(h)},uv4:function(a,b,e,d,g,f,j,h,i){var c=[];
c.push(new THREE.UV(b,e));c.push(new THREE.UV(d,g));c.push(new THREE.UV(f,j));c.push(new THREE.UV(h,i));a.uvs.push(c)},init_materials:function(a,b,e){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=[THREE.Loader.prototype.createMaterial(b[d],e)]},createMaterial:function(a,b){function e(f){f=Math.log(f)/Math.LN2;return Math.floor(f)==f}var d,g;if(a.map_diffuse&&b){g=document.createElement("canvas");d=new THREE.MeshLambertMaterial({map:new THREE.Texture(g)});g=new Image;g.onload=function(){if(!e(this.width)||
!e(this.height)){var f=Math.pow(2,Math.round(Math.log(this.width)/Math.LN2)),j=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));d.map.image.width=f;d.map.image.height=j;d.map.image.getContext("2d").drawImage(this,0,0,f,j)}else d.map.image=this;d.map.image.loaded=1};g.src=b+"/"+a.map_diffuse}else if(a.col_diffuse){g=(a.col_diffuse[0]*255<<16)+(a.col_diffuse[1]*255<<8)+a.col_diffuse[2]*255;d=new THREE.MeshLambertMaterial({color:g,opacity:a.transparency})}else d=a.a_dbg_color?new THREE.MeshLambertMaterial({color:a.a_dbg_color}):
new THREE.MeshLambertMaterial({color:15658734});return d}};
