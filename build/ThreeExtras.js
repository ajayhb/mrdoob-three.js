// ThreeExtras.js r32 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,b,e){this.r=a;this.g=b;this.b=e;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+
","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,b,e){this.x=a||0;this.y=b||0;this.z=e||0};
THREE.Vector3.prototype={set:function(a,b,e){this.x=a;this.y=b;this.z=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,e=this.y,f=this.z;this.x=e*a.z-f*a.y;this.y=f*a.x-b*a.z;this.z=b*a.y-e*a.x;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=
a.z;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var b=this.x-a.x,e=this.y-a.y;a=this.z-a.z;return Math.sqrt(b*b+e*e+a*a)},distanceToSquared:function(a){var b=this.x-a.x,e=this.y-a.y;a=this.z-a.z;return b*b+e*e+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=
-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,b,e,f){this.x=a||0;this.y=b||0;this.z=e||0;this.w=f||1};
THREE.Vector4.prototype={set:function(a,b,e,f){this.x=a;this.y=b;this.z=e;this.w=f;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,b){this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var b,e,f=a.objects,g=[];a=0;for(b=f.length;a<b;a++){e=f[a];if(e instanceof THREE.Mesh)g=g.concat(this.intersectObject(e))}g.sort(function(h,j){return h.distance-j.distance});return g},intersectObject:function(a){function b(L,q,G,d){d=d.clone().subSelf(q);G=G.clone().subSelf(q);var k=L.clone().subSelf(q);L=d.dot(d);q=d.dot(G);d=d.dot(k);var n=G.dot(G);G=G.dot(k);k=1/(L*n-q*q);n=(n*d-q*G)*k;L=(L*G-q*d)*k;return n>0&&L>0&&n+L<1}var e,f,g,h,j,c,i,l,u,C,
o,w=a.geometry,y=w.vertices,A=[];e=0;for(f=w.faces.length;e<f;e++){g=w.faces[e];C=this.origin.clone();o=this.direction.clone();h=a.matrix.multiplyVector3(y[g.a].position.clone());j=a.matrix.multiplyVector3(y[g.b].position.clone());c=a.matrix.multiplyVector3(y[g.c].position.clone());i=g instanceof THREE.Face4?a.matrix.multiplyVector3(y[g.d].position.clone()):null;l=a.rotationMatrix.multiplyVector3(g.normal.clone());u=o.dot(l);if(u<0){l=l.dot((new THREE.Vector3).sub(h,C))/u;C=C.addSelf(o.multiplyScalar(l));
if(g instanceof THREE.Face3){if(b(C,h,j,c)){g={distance:this.origin.distanceTo(C),point:C,face:g,object:a};A.push(g)}}else if(g instanceof THREE.Face4)if(b(C,h,j,i)||b(C,j,c,i)){g={distance:this.origin.distanceTo(C),point:C,face:g,object:a};A.push(g)}}}return A}};
THREE.Rectangle=function(){function a(){h=f-b;j=g-e}var b,e,f,g,h,j,c=true;this.getX=function(){return b};this.getY=function(){return e};this.getWidth=function(){return h};this.getHeight=function(){return j};this.getLeft=function(){return b};this.getTop=function(){return e};this.getRight=function(){return f};this.getBottom=function(){return g};this.set=function(i,l,u,C){c=false;b=i;e=l;f=u;g=C;a()};this.addPoint=function(i,l){if(c){c=false;b=i;e=l;f=i;g=l}else{b=b<i?b:i;e=e<l?e:l;f=f>i?f:i;g=g>l?
g:l}a()};this.add3Points=function(i,l,u,C,o,w){if(c){c=false;b=i<u?i<o?i:o:u<o?u:o;e=l<C?l<w?l:w:C<w?C:w;f=i>u?i>o?i:o:u>o?u:o;g=l>C?l>w?l:w:C>w?C:w}else{b=i<u?i<o?i<b?i:b:o<b?o:b:u<o?u<b?u:b:o<b?o:b;e=l<C?l<w?l<e?l:e:w<e?w:e:C<w?C<e?C:e:w<e?w:e;f=i>u?i>o?i>f?i:f:o>f?o:f:u>o?u>f?u:f:o>f?o:f;g=l>C?l>w?l>g?l:g:w>g?w:g:C>w?C>g?C:g:w>g?w:g}a()};this.addRectangle=function(i){if(c){c=false;b=i.getLeft();e=i.getTop();f=i.getRight();g=i.getBottom()}else{b=b<i.getLeft()?b:i.getLeft();e=e<i.getTop()?e:i.getTop();
f=f>i.getRight()?f:i.getRight();g=g>i.getBottom()?g:i.getBottom()}a()};this.inflate=function(i){b-=i;e-=i;f+=i;g+=i;a()};this.minSelf=function(i){b=b>i.getLeft()?b:i.getLeft();e=e>i.getTop()?e:i.getTop();f=f<i.getRight()?f:i.getRight();g=g<i.getBottom()?g:i.getBottom();a()};this.instersects=function(i){return Math.min(f,i.getRight())-Math.max(b,i.getLeft())>=0&&Math.min(g,i.getBottom())-Math.max(e,i.getTop())>=0};this.empty=function(){c=true;g=f=e=b=0;a()};this.isEmpty=function(){return c};this.toString=
function(){return"THREE.Rectangle ( left: "+b+", right: "+f+", top: "+e+", bottom: "+g+", width: "+h+", height: "+j+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a;a=this.m[1];this.m[1]=this.m[3];this.m[3]=a;a=this.m[2];this.m[2]=this.m[6];this.m[6]=a;a=this.m[5];this.m[5]=this.m[7];this.m[7]=a;return this}};
THREE.Matrix4=function(a,b,e,f,g,h,j,c,i,l,u,C,o,w,y,A){this.n11=a||1;this.n12=b||0;this.n13=e||0;this.n14=f||0;this.n21=g||0;this.n22=h||1;this.n23=j||0;this.n24=c||0;this.n31=i||0;this.n32=l||0;this.n33=u||1;this.n34=C||0;this.n41=o||0;this.n42=w||0;this.n43=y||0;this.n44=A||1};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,b,e,f,g,h,j,c,i,l,u,C,o,w,y,A){this.n11=a;this.n12=b;this.n13=e;this.n14=f;this.n21=g;this.n22=h;this.n23=j;this.n24=c;this.n31=i;this.n32=l;this.n33=u;this.n34=C;this.n41=o;this.n42=w;this.n43=y;this.n44=A;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,b,e){var f=new THREE.Vector3,g=new THREE.Vector3,h=new THREE.Vector3;h.sub(a,b).normalize();f.cross(e,h).normalize();g.cross(h,f).normalize();this.n11=f.x;this.n12=f.y;this.n13=f.z;this.n14=-f.dot(a);this.n21=g.x;this.n22=g.y;this.n23=g.z;this.n24=-g.dot(a);this.n31=h.x;
this.n32=h.y;this.n33=h.z;this.n34=-h.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var b=a.x,e=a.y,f=a.z,g=1/(this.n41*b+this.n42*e+this.n43*f+this.n44);a.x=(this.n11*b+this.n12*e+this.n13*f+this.n14)*g;a.y=(this.n21*b+this.n22*e+this.n23*f+this.n24)*g;a.z=(this.n31*b+this.n32*e+this.n33*f+this.n34)*g;return a},multiplyVector4:function(a){var b=a.x,e=a.y,f=a.z,g=a.w;a.x=this.n11*b+this.n12*e+this.n13*f+this.n14*g;a.y=this.n21*b+this.n22*e+this.n23*f+this.n24*
g;a.z=this.n31*b+this.n32*e+this.n33*f+this.n34*g;a.w=this.n41*b+this.n42*e+this.n43*f+this.n44*g;return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},multiply:function(a,b){var e=a.n11,f=a.n12,g=a.n13,h=a.n14,j=a.n21,c=a.n22,i=a.n23,l=a.n24,u=a.n31,C=a.n32,
o=a.n33,w=a.n34,y=a.n41,A=a.n42,L=a.n43,q=a.n44,G=b.n11,d=b.n12,k=b.n13,n=b.n14,t=b.n21,s=b.n22,x=b.n23,v=b.n24,p=b.n31,F=b.n32,z=b.n33,m=b.n34,B=b.n41,P=b.n42,J=b.n43,Q=b.n44;this.n11=e*G+f*t+g*p+h*B;this.n12=e*d+f*s+g*F+h*P;this.n13=e*k+f*x+g*z+h*J;this.n14=e*n+f*v+g*m+h*Q;this.n21=j*G+c*t+i*p+l*B;this.n22=j*d+c*s+i*F+l*P;this.n23=j*k+c*x+i*z+l*J;this.n24=j*n+c*v+i*m+l*Q;this.n31=u*G+C*t+o*p+w*B;this.n32=u*d+C*s+o*F+w*P;this.n33=u*k+C*x+o*z+w*J;this.n34=u*n+C*v+o*m+w*Q;this.n41=y*G+A*t+L*p+q*B;
this.n42=y*d+A*s+L*F+q*P;this.n43=y*k+A*x+L*z+q*J;this.n44=y*n+A*v+L*m+q*Q;return this},multiplySelf:function(a){var b=this.n11,e=this.n12,f=this.n13,g=this.n14,h=this.n21,j=this.n22,c=this.n23,i=this.n24,l=this.n31,u=this.n32,C=this.n33,o=this.n34,w=this.n41,y=this.n42,A=this.n43,L=this.n44,q=a.n11,G=a.n21,d=a.n31,k=a.n41,n=a.n12,t=a.n22,s=a.n32,x=a.n42,v=a.n13,p=a.n23,F=a.n33,z=a.n43,m=a.n14,B=a.n24,P=a.n34;a=a.n44;this.n11=b*q+e*G+f*d+g*k;this.n12=b*n+e*t+f*s+g*x;this.n13=b*v+e*p+f*F+g*z;this.n14=
b*m+e*B+f*P+g*a;this.n21=h*q+j*G+c*d+i*k;this.n22=h*n+j*t+c*s+i*x;this.n23=h*v+j*p+c*F+i*z;this.n24=h*m+j*B+c*P+i*a;this.n31=l*q+u*G+C*d+o*k;this.n32=l*n+u*t+C*s+o*x;this.n33=l*v+u*p+C*F+o*z;this.n34=l*m+u*B+C*P+o*a;this.n41=w*q+y*G+A*d+L*k;this.n42=w*n+y*t+A*s+L*x;this.n43=w*v+y*p+A*F+L*z;this.n44=w*m+y*B+A*P+L*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=
a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){return this.n14*this.n23*this.n32*this.n41-this.n13*this.n24*this.n32*this.n41-this.n14*this.n22*this.n33*this.n41+this.n12*this.n24*this.n33*this.n41+this.n13*this.n22*this.n34*this.n41-this.n12*this.n23*this.n34*this.n41-this.n14*this.n23*this.n31*this.n42+this.n13*this.n24*this.n31*this.n42+this.n14*this.n21*this.n33*this.n42-this.n11*this.n24*this.n33*this.n42-this.n13*this.n21*this.n34*this.n42+this.n11*this.n23*this.n34*
this.n42+this.n14*this.n22*this.n31*this.n43-this.n12*this.n24*this.n31*this.n43-this.n14*this.n21*this.n32*this.n43+this.n11*this.n24*this.n32*this.n43+this.n12*this.n21*this.n34*this.n43-this.n11*this.n22*this.n34*this.n43-this.n13*this.n22*this.n31*this.n44+this.n12*this.n23*this.n31*this.n44+this.n13*this.n21*this.n32*this.n44-this.n11*this.n23*this.n32*this.n44-this.n12*this.n21*this.n33*this.n44+this.n11*this.n22*this.n33*this.n44},transpose:function(){function a(b,e,f){var g=b[e];b[e]=b[f];
b[f]=g}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){return[this.n11,this.n21,this.n31,this.n41,this.n12,
this.n22,this.n32,this.n42,this.n13,this.n23,this.n33,this.n43,this.n14,this.n24,this.n34,this.n44]},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,b,e){var f=new THREE.Matrix4;f.n14=a;f.n24=b;f.n34=e;return f};
THREE.Matrix4.scaleMatrix=function(a,b,e){var f=new THREE.Matrix4;f.n11=a;f.n22=b;f.n33=e;return f};THREE.Matrix4.rotationXMatrix=function(a){var b=new THREE.Matrix4;b.n22=b.n33=Math.cos(a);b.n32=Math.sin(a);b.n23=-b.n32;return b};THREE.Matrix4.rotationYMatrix=function(a){var b=new THREE.Matrix4;b.n11=b.n33=Math.cos(a);b.n13=Math.sin(a);b.n31=-b.n13;return b};THREE.Matrix4.rotationZMatrix=function(a){var b=new THREE.Matrix4;b.n11=b.n22=Math.cos(a);b.n21=Math.sin(a);b.n12=-b.n21;return b};
THREE.Matrix4.rotationAxisAngleMatrix=function(a,b){var e=new THREE.Matrix4,f=Math.cos(b),g=Math.sin(b),h=1-f,j=a.x,c=a.y,i=a.z;e.n11=h*j*j+f;e.n12=h*j*c-g*i;e.n13=h*j*i+g*c;e.n21=h*j*c+g*i;e.n22=h*c*c+f;e.n23=h*c*i-g*j;e.n31=h*j*i-g*c;e.n32=h*c*i+g*j;e.n33=h*i*i+f;return e};
THREE.Matrix4.makeInvert=function(a){var b=new THREE.Matrix4;b.n11=a.n23*a.n34*a.n42-a.n24*a.n33*a.n42+a.n24*a.n32*a.n43-a.n22*a.n34*a.n43-a.n23*a.n32*a.n44+a.n22*a.n33*a.n44;b.n12=a.n14*a.n33*a.n42-a.n13*a.n34*a.n42-a.n14*a.n32*a.n43+a.n12*a.n34*a.n43+a.n13*a.n32*a.n44-a.n12*a.n33*a.n44;b.n13=a.n13*a.n24*a.n42-a.n14*a.n23*a.n42+a.n14*a.n22*a.n43-a.n12*a.n24*a.n43-a.n13*a.n22*a.n44+a.n12*a.n23*a.n44;b.n14=a.n14*a.n23*a.n32-a.n13*a.n24*a.n32-a.n14*a.n22*a.n33+a.n12*a.n24*a.n33+a.n13*a.n22*a.n34-a.n12*
a.n23*a.n34;b.n21=a.n24*a.n33*a.n41-a.n23*a.n34*a.n41-a.n24*a.n31*a.n43+a.n21*a.n34*a.n43+a.n23*a.n31*a.n44-a.n21*a.n33*a.n44;b.n22=a.n13*a.n34*a.n41-a.n14*a.n33*a.n41+a.n14*a.n31*a.n43-a.n11*a.n34*a.n43-a.n13*a.n31*a.n44+a.n11*a.n33*a.n44;b.n23=a.n14*a.n23*a.n41-a.n13*a.n24*a.n41-a.n14*a.n21*a.n43+a.n11*a.n24*a.n43+a.n13*a.n21*a.n44-a.n11*a.n23*a.n44;b.n24=a.n13*a.n24*a.n31-a.n14*a.n23*a.n31+a.n14*a.n21*a.n33-a.n11*a.n24*a.n33-a.n13*a.n21*a.n34+a.n11*a.n23*a.n34;b.n31=a.n22*a.n34*a.n41-a.n24*a.n32*
a.n41+a.n24*a.n31*a.n42-a.n21*a.n34*a.n42-a.n22*a.n31*a.n44+a.n21*a.n32*a.n44;b.n32=a.n14*a.n32*a.n41-a.n12*a.n34*a.n41-a.n14*a.n31*a.n42+a.n11*a.n34*a.n42+a.n12*a.n31*a.n44-a.n11*a.n32*a.n44;b.n33=a.n13*a.n24*a.n41-a.n14*a.n22*a.n41+a.n14*a.n21*a.n42-a.n11*a.n24*a.n42-a.n12*a.n21*a.n44+a.n11*a.n22*a.n44;b.n34=a.n14*a.n22*a.n31-a.n12*a.n24*a.n31-a.n14*a.n21*a.n32+a.n11*a.n24*a.n32+a.n12*a.n21*a.n34-a.n11*a.n22*a.n34;b.n41=a.n23*a.n32*a.n41-a.n22*a.n33*a.n41-a.n23*a.n31*a.n42+a.n21*a.n33*a.n42+a.n22*
a.n31*a.n43-a.n21*a.n32*a.n43;b.n42=a.n12*a.n33*a.n41-a.n13*a.n32*a.n41+a.n13*a.n31*a.n42-a.n11*a.n33*a.n42-a.n12*a.n31*a.n43+a.n11*a.n32*a.n43;b.n43=a.n13*a.n22*a.n41-a.n12*a.n23*a.n41-a.n13*a.n21*a.n42+a.n11*a.n23*a.n42+a.n12*a.n21*a.n43-a.n11*a.n22*a.n43;b.n44=a.n12*a.n23*a.n31-a.n13*a.n22*a.n31+a.n13*a.n21*a.n32-a.n11*a.n23*a.n32-a.n12*a.n21*a.n33+a.n11*a.n22*a.n33;b.multiplyScalar(1/a.determinant());return b};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.flatten();a=new THREE.Matrix3;var e=b[10]*b[5]-b[6]*b[9],f=-b[10]*b[1]+b[2]*b[9],g=b[6]*b[1]-b[2]*b[5],h=-b[10]*b[4]+b[6]*b[8],j=b[10]*b[0]-b[2]*b[8],c=-b[6]*b[0]+b[2]*b[4],i=b[9]*b[4]-b[5]*b[8],l=-b[9]*b[0]+b[1]*b[8],u=b[5]*b[0]-b[1]*b[4];b=b[0]*e+b[1]*h+b[2]*i;if(b==0)throw"matrix not invertible";b=1/b;a.m[0]=b*e;a.m[1]=b*f;a.m[2]=b*g;a.m[3]=b*h;a.m[4]=b*j;a.m[5]=b*c;a.m[6]=b*i;a.m[7]=b*l;a.m[8]=b*u;return a};
THREE.Matrix4.makeFrustum=function(a,b,e,f,g,h){var j,c,i;j=new THREE.Matrix4;c=2*g/(b-a);i=2*g/(f-e);a=(b+a)/(b-a);e=(f+e)/(f-e);f=-(h+g)/(h-g);g=-2*h*g/(h-g);j.n11=c;j.n12=0;j.n13=a;j.n14=0;j.n21=0;j.n22=i;j.n23=e;j.n24=0;j.n31=0;j.n32=0;j.n33=f;j.n34=g;j.n41=0;j.n42=0;j.n43=-1;j.n44=0;return j};THREE.Matrix4.makePerspective=function(a,b,e,f){var g;a=e*Math.tan(a*Math.PI/360);g=-a;return THREE.Matrix4.makeFrustum(g*b,a*b,g,a,e,f)};
THREE.Matrix4.makeOrtho=function(a,b,e,f,g,h){var j,c,i,l;j=new THREE.Matrix4;c=b-a;i=e-f;l=h-g;a=(b+a)/c;e=(e+f)/i;g=(h+g)/l;j.n11=2/c;j.n12=0;j.n13=0;j.n14=-a;j.n21=0;j.n22=2/i;j.n23=0;j.n24=-e;j.n31=0;j.n32=0;j.n33=-2/l;j.n34=-g;j.n41=0;j.n42=0;j.n43=0;j.n44=1;return j};
THREE.Vertex=function(a,b){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=b||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,b,e,f,g){this.a=a;this.b=b;this.c=e;this.centroid=new THREE.Vector3;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.materials=g instanceof Array?g:[g]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,b,e,f,g,h){this.a=a;this.b=b;this.c=e;this.d=f;this.centroid=new THREE.Vector3;this.normal=g instanceof THREE.Vector3?g:new THREE.Vector3;this.vertexNormals=g instanceof Array?g:[];this.materials=h instanceof Array?h:[h]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,b,e;a=0;for(b=this.faces.length;a<b;a++){e=this.faces[a];e.centroid.set(0,0,0);if(e instanceof THREE.Face3){e.centroid.addSelf(this.vertices[e.a].position);e.centroid.addSelf(this.vertices[e.b].position);e.centroid.addSelf(this.vertices[e.c].position);e.centroid.divideScalar(3)}else if(e instanceof THREE.Face4){e.centroid.addSelf(this.vertices[e.a].position);e.centroid.addSelf(this.vertices[e.b].position);e.centroid.addSelf(this.vertices[e.c].position);
e.centroid.addSelf(this.vertices[e.d].position);e.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var b,e,f,g,h,j,c=new THREE.Vector3,i=new THREE.Vector3;f=0;for(g=this.vertices.length;f<g;f++){h=this.vertices[f];h.normal.set(0,0,0)}f=0;for(g=this.faces.length;f<g;f++){h=this.faces[f];if(a&&h.vertexNormals.length){c.set(0,0,0);b=0;for(e=h.normal.length;b<e;b++)c.addSelf(h.vertexNormals[b]);c.divideScalar(3)}else{b=this.vertices[h.a];e=this.vertices[h.b];j=this.vertices[h.c];c.sub(j.position,
e.position);i.sub(b.position,e.position);c.crossSelf(i)}c.isZero()||c.normalize();h.normal.copy(c)}},computeVertexNormals:function(){var a,b,e,f;if(this.__tmpVertices==undefined){f=this.__tmpVertices=Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)f[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++){e=this.faces[a];if(e instanceof THREE.Face3)e.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(e instanceof THREE.Face4)e.vertexNormals=[new THREE.Vector3,
new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}}else{f=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)f[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++){e=this.faces[a];if(e instanceof THREE.Face3){f[e.a].addSelf(e.normal);f[e.b].addSelf(e.normal);f[e.c].addSelf(e.normal)}else if(e instanceof THREE.Face4){f[e.a].addSelf(e.normal);f[e.b].addSelf(e.normal);f[e.c].addSelf(e.normal);f[e.d].addSelf(e.normal)}}a=0;for(b=this.vertices.length;a<b;a++)f[a].normalize();a=0;for(b=this.faces.length;a<
b;a++){e=this.faces[a];if(e instanceof THREE.Face3){e.vertexNormals[0].copy(f[e.a]);e.vertexNormals[1].copy(f[e.b]);e.vertexNormals[2].copy(f[e.c])}else if(e instanceof THREE.Face4){e.vertexNormals[0].copy(f[e.a]);e.vertexNormals[1].copy(f[e.b]);e.vertexNormals[2].copy(f[e.c]);e.vertexNormals[3].copy(f[e.d])}}},computeTangents:function(){function a(m,B,P,J,Q,U,T){h=m.vertices[B].position;j=m.vertices[P].position;c=m.vertices[J].position;i=g[Q];l=g[U];u=g[T];C=j.x-h.x;o=c.x-h.x;w=j.y-h.y;y=c.y-h.y;
A=j.z-h.z;L=c.z-h.z;q=l.u-i.u;G=u.u-i.u;d=l.v-i.v;k=u.v-i.v;n=1/(q*k-G*d);x.set((k*C-d*o)*n,(k*w-d*y)*n,(k*A-d*L)*n);v.set((q*o-G*C)*n,(q*y-G*w)*n,(q*L-G*A)*n);t[B].addSelf(x);t[P].addSelf(x);t[J].addSelf(x);s[B].addSelf(v);s[P].addSelf(v);s[J].addSelf(v)}var b,e,f,g,h,j,c,i,l,u,C,o,w,y,A,L,q,G,d,k,n,t=[],s=[],x=new THREE.Vector3,v=new THREE.Vector3,p=new THREE.Vector3,F=new THREE.Vector3,z=new THREE.Vector3;b=0;for(e=this.vertices.length;b<e;b++){t[b]=new THREE.Vector3;s[b]=new THREE.Vector3}b=0;
for(e=this.faces.length;b<e;b++){f=this.faces[b];g=this.uvs[b];if(f instanceof THREE.Face3){a(this,f.a,f.b,f.c,0,1,2);this.vertices[f.a].normal.copy(f.vertexNormals[0]);this.vertices[f.b].normal.copy(f.vertexNormals[1]);this.vertices[f.c].normal.copy(f.vertexNormals[2])}else if(f instanceof THREE.Face4){a(this,f.a,f.b,f.c,0,1,2);a(this,f.a,f.b,f.d,0,1,3);this.vertices[f.a].normal.copy(f.vertexNormals[0]);this.vertices[f.b].normal.copy(f.vertexNormals[1]);this.vertices[f.c].normal.copy(f.vertexNormals[2]);
this.vertices[f.d].normal.copy(f.vertexNormals[3])}}b=0;for(e=this.vertices.length;b<e;b++){z.copy(this.vertices[b].normal);f=t[b];p.copy(f);p.subSelf(z.multiplyScalar(z.dot(f))).normalize();F.cross(this.vertices[b].normal,f);f=F.dot(s[b]);f=f<0?-1:1;this.vertices[b].tangent.set(p.x,p.y,p.z,f)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],
z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,e=this.vertices.length;b<e;b++){a=this.vertices[b];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>
this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,b=0,e=this.vertices.length;b<e;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(u){var C=[];b=0;for(e=u.length;b<e;b++)u[b]==undefined?C.push("undefined"):C.push(u[b].toString());return C.join("_")}var b,e,f,g,h,j,c,i,l={};f=0;for(g=this.faces.length;f<g;f++){h=this.faces[f];
j=h.materials;c=a(j);if(l[c]==undefined)l[c]={hash:c,counter:0};i=l[c].hash+"_"+l[c].counter;if(this.geometryChunks[i]==undefined)this.geometryChunks[i]={faces:[],materials:j,vertices:0};h=h instanceof THREE.Face3?3:4;if(this.geometryChunks[i].vertices+h>65535){l[c].counter+=1;i=l[c].hash+"_"+l[c].counter;if(this.geometryChunks[i]==undefined)this.geometryChunks[i]={faces:[],materials:j,vertices:0}}this.geometryChunks[i].faces.push(f);this.geometryChunks[i].vertices+=h}},toString:function(){return"THREE.Geometry ( vertices: "+
this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,b,e,f){this.fov=a;this.aspect=b;this.near=e;this.far=f;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.translateX=function(g){g=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(g);g.cross(g.clone(),this.up);this.position.addSelf(g);this.target.position.addSelf(g)};this.translateZ=function(g){g=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(g);
this.position.subSelf(g);this.target.position.subSelf(g)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};
THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;
THREE.PointLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.translationMatrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.scaleMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){this.matrixPosition=THREE.Matrix4.translationMatrix(this.position.x,this.position.y,this.position.z);this.rotationMatrix=THREE.Matrix4.rotationXMatrix(this.rotation.x);this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationYMatrix(this.rotation.y));this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationZMatrix(this.rotation.z));this.scaleMatrix=THREE.Matrix4.scaleMatrix(this.scale.x,this.scale.y,this.scale.z);this.matrix.copy(this.matrixPosition);
this.matrix.multiplySelf(this.rotationMatrix);this.matrix.multiplySelf(this.scaleMatrix)}};THREE.Object3DCounter={value:0};THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.autoUpdateMatrix=false};
THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;THREE.Line=function(a,b,e){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.type=e!=undefined?e:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+
"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=
this.wireframe_linecap="round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=
a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==
undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial"}};
THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.opacity=1;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};
THREE.Texture=function(a,b,e,f,g,h){this.image=a;this.mapping=b!==undefined?b:new THREE.UVMapping;this.wrap_s=e!==undefined?e:THREE.ClampToEdgeWrapping;this.wrap_t=f!==undefined?f:THREE.ClampToEdgeWrapping;this.mag_filter=g!==undefined?g:THREE.LinearFilter;this.min_filter=h!==undefined?h:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;var Uniforms={clone:function(a){var b,e,f,g={};for(b in a){g[b]={};for(e in a[b]){f=a[b][e];g[b][e]=f instanceof THREE.Color||f instanceof THREE.Vector3||f instanceof THREE.Texture?f.clone():f}}return g},merge:function(a){var b,e,f,g={};for(b=0;b<a.length;b++){f=this.clone(a[b]);for(e in f)g[e]=f[e]}return g}};
THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,b,e){this.color=new THREE.Color(a);this.near=b||1;this.far=e||1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b||2.5E-4};
THREE.Projector=function(){function a(s,x){return x.z-s.z}function b(s,x){var v=0,p=1,F=s.z+s.w,z=x.z+x.w,m=-s.z+s.w,B=-x.z+x.w;if(F>=0&&z>=0&&m>=0&&B>=0)return true;else if(F<0&&z<0||m<0&&B<0)return false;else{if(F<0)v=Math.max(v,F/(F-z));else if(z<0)p=Math.min(p,F/(F-z));if(m<0)v=Math.max(v,m/(m-B));else if(B<0)p=Math.min(p,m/(m-B));if(p<v)return false;else{s.lerpSelf(x,v);x.lerpSelf(s,1-p);return true}}}var e,f,g=[],h,j,c,i=[],l,u,C=[],o,w,y=[],A=new THREE.Vector4,L=new THREE.Vector4,q=new THREE.Matrix4,
G=new THREE.Matrix4,d=[],k=new THREE.Vector4,n=new THREE.Vector4,t;this.projectObjects=function(s,x,v){var p=[],F,z;f=0;q.multiply(x.projectionMatrix,x.matrix);d[0]=new THREE.Vector4(q.n41-q.n11,q.n42-q.n12,q.n43-q.n13,q.n44-q.n14);d[1]=new THREE.Vector4(q.n41+q.n11,q.n42+q.n12,q.n43+q.n13,q.n44+q.n14);d[2]=new THREE.Vector4(q.n41+q.n21,q.n42+q.n22,q.n43+q.n23,q.n44+q.n24);d[3]=new THREE.Vector4(q.n41-q.n21,q.n42-q.n22,q.n43-q.n23,q.n44-q.n24);d[4]=new THREE.Vector4(q.n41-q.n31,q.n42-q.n32,q.n43-
q.n33,q.n44-q.n34);d[5]=new THREE.Vector4(q.n41+q.n31,q.n42+q.n32,q.n43+q.n33,q.n44+q.n34);x=0;for(F=d.length;x<F;x++){z=d[x];z.divideScalar(Math.sqrt(z.x*z.x+z.y*z.y+z.z*z.z))}F=s.objects;s=0;for(x=F.length;s<x;s++){z=F[s];var m;if(!(m=!z.visible)){if(m=z instanceof THREE.Mesh){a:{m=void 0;for(var B=z.position,P=-z.geometry.boundingSphere.radius*Math.max(z.scale.x,Math.max(z.scale.y,z.scale.z)),J=0;J<6;J++){m=d[J].x*B.x+d[J].y*B.y+d[J].z*B.z+d[J].w;if(m<=P){m=false;break a}}m=true}m=!m}m=m}if(!m){e=
g[f]=g[f]||new THREE.RenderableObject;A.copy(z.position);q.multiplyVector3(A);e.object=z;e.z=A.z;p.push(e);f++}}v&&p.sort(a);return p};this.projectScene=function(s,x,v){var p=[],F=x.near,z=x.far,m,B,P,J,Q,U,T,V,$,S,O,X,N,E,M,aa;c=u=w=0;x.autoUpdateMatrix&&x.updateMatrix();q.multiply(x.projectionMatrix,x.matrix);U=this.projectObjects(s,x,true);s=0;for(m=U.length;s<m;s++){T=U[s].object;if(T.visible){T.autoUpdateMatrix&&T.updateMatrix();V=T.matrix;$=T.rotationMatrix;S=T.materials;O=T.overdraw;if(T instanceof
THREE.Mesh){X=T.geometry;N=X.vertices;B=0;for(P=N.length;B<P;B++){E=N[B];E.positionWorld.copy(E.position);V.multiplyVector3(E.positionWorld);J=E.positionScreen;J.copy(E.positionWorld);q.multiplyVector4(J);J.x/=J.w;J.y/=J.w;E.__visible=J.z>F&&J.z<z}X=X.faces;B=0;for(P=X.length;B<P;B++){E=X[B];if(E instanceof THREE.Face3){J=N[E.a];Q=N[E.b];M=N[E.c];if(J.__visible&&Q.__visible&&M.__visible)if(T.doubleSided||T.flipSided!=(M.positionScreen.x-J.positionScreen.x)*(Q.positionScreen.y-J.positionScreen.y)-
(M.positionScreen.y-J.positionScreen.y)*(Q.positionScreen.x-J.positionScreen.x)<0){h=i[c]=i[c]||new THREE.RenderableFace3;h.v1.positionWorld.copy(J.positionWorld);h.v2.positionWorld.copy(Q.positionWorld);h.v3.positionWorld.copy(M.positionWorld);h.v1.positionScreen.copy(J.positionScreen);h.v2.positionScreen.copy(Q.positionScreen);h.v3.positionScreen.copy(M.positionScreen);h.normalWorld.copy(E.normal);$.multiplyVector3(h.normalWorld);h.centroidWorld.copy(E.centroid);V.multiplyVector3(h.centroidWorld);
h.centroidScreen.copy(h.centroidWorld);q.multiplyVector3(h.centroidScreen);M=E.vertexNormals;t=h.vertexNormalsWorld;J=0;for(Q=M.length;J<Q;J++){aa=t[J]=t[J]||new THREE.Vector3;aa.copy(M[J]);$.multiplyVector3(aa)}h.z=h.centroidScreen.z;h.meshMaterials=S;h.faceMaterials=E.materials;h.overdraw=O;if(T.geometry.uvs[B]){h.uvs[0]=T.geometry.uvs[B][0];h.uvs[1]=T.geometry.uvs[B][1];h.uvs[2]=T.geometry.uvs[B][2]}p.push(h);c++}}else if(E instanceof THREE.Face4){J=N[E.a];Q=N[E.b];M=N[E.c];aa=N[E.d];if(J.__visible&&
Q.__visible&&M.__visible&&aa.__visible)if(T.doubleSided||T.flipSided!=((aa.positionScreen.x-J.positionScreen.x)*(Q.positionScreen.y-J.positionScreen.y)-(aa.positionScreen.y-J.positionScreen.y)*(Q.positionScreen.x-J.positionScreen.x)<0||(Q.positionScreen.x-M.positionScreen.x)*(aa.positionScreen.y-M.positionScreen.y)-(Q.positionScreen.y-M.positionScreen.y)*(aa.positionScreen.x-M.positionScreen.x)<0)){h=i[c]=i[c]||new THREE.RenderableFace3;h.v1.positionWorld.copy(J.positionWorld);h.v2.positionWorld.copy(Q.positionWorld);
h.v3.positionWorld.copy(aa.positionWorld);h.v1.positionScreen.copy(J.positionScreen);h.v2.positionScreen.copy(Q.positionScreen);h.v3.positionScreen.copy(aa.positionScreen);h.normalWorld.copy(E.normal);$.multiplyVector3(h.normalWorld);h.centroidWorld.copy(E.centroid);V.multiplyVector3(h.centroidWorld);h.centroidScreen.copy(h.centroidWorld);q.multiplyVector3(h.centroidScreen);h.z=h.centroidScreen.z;h.meshMaterials=S;h.faceMaterials=E.materials;h.overdraw=O;if(T.geometry.uvs[B]){h.uvs[0]=T.geometry.uvs[B][0];
h.uvs[1]=T.geometry.uvs[B][1];h.uvs[2]=T.geometry.uvs[B][3]}p.push(h);c++;j=i[c]=i[c]||new THREE.RenderableFace3;j.v1.positionWorld.copy(Q.positionWorld);j.v2.positionWorld.copy(M.positionWorld);j.v3.positionWorld.copy(aa.positionWorld);j.v1.positionScreen.copy(Q.positionScreen);j.v2.positionScreen.copy(M.positionScreen);j.v3.positionScreen.copy(aa.positionScreen);j.normalWorld.copy(h.normalWorld);j.centroidWorld.copy(h.centroidWorld);j.centroidScreen.copy(h.centroidScreen);j.z=j.centroidScreen.z;
j.meshMaterials=S;j.faceMaterials=E.materials;j.overdraw=O;if(T.geometry.uvs[B]){j.uvs[0]=T.geometry.uvs[B][1];j.uvs[1]=T.geometry.uvs[B][2];j.uvs[2]=T.geometry.uvs[B][3]}p.push(j);c++}}}}else if(T instanceof THREE.Line){G.multiply(q,V);N=T.geometry.vertices;E=N[0];E.positionScreen.copy(E.position);G.multiplyVector4(E.positionScreen);B=1;for(P=N.length;B<P;B++){J=N[B];J.positionScreen.copy(J.position);G.multiplyVector4(J.positionScreen);Q=N[B-1];k.copy(J.positionScreen);n.copy(Q.positionScreen);if(b(k,
n)){k.multiplyScalar(1/k.w);n.multiplyScalar(1/n.w);l=C[u]=C[u]||new THREE.RenderableLine;l.v1.positionScreen.copy(k);l.v2.positionScreen.copy(n);l.z=Math.max(k.z,n.z);l.materials=T.materials;p.push(l);u++}}}else if(T instanceof THREE.Particle){L.set(T.position.x,T.position.y,T.position.z,1);q.multiplyVector4(L);L.z/=L.w;if(L.z>0&&L.z<1){o=y[w]=y[w]||new THREE.RenderableParticle;o.x=L.x/L.w;o.y=L.y/L.w;o.z=L.z;o.rotation=T.rotation.z;o.scale.x=T.scale.x*Math.abs(o.x-(L.x+x.projectionMatrix.n11)/(L.w+
x.projectionMatrix.n14));o.scale.y=T.scale.y*Math.abs(o.y-(L.y+x.projectionMatrix.n22)/(L.w+x.projectionMatrix.n24));o.materials=T.materials;p.push(o);w++}}}}v&&p.sort(a);return p};this.unprojectVector=function(s,x){var v=new THREE.Matrix4;v.multiply(THREE.Matrix4.makeInvert(x.matrix),THREE.Matrix4.makeInvert(x.projectionMatrix));v.multiplyVector3(s);return s}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,b=new THREE.Projector,e,f,g,h;this.domElement=document.createElement("div");this.setSize=function(j,c){e=j;f=c;g=e/2;h=f/2};this.render=function(j,c){var i,l,u,C,o,w,y,A;a=b.projectScene(j,c);i=0;for(l=a.length;i<l;i++){o=a[i];if(o instanceof THREE.RenderableParticle){y=o.x*g+g;A=o.y*h+h;u=0;for(C=o.material.length;u<C;u++){w=o.material[u];if(w instanceof THREE.ParticleDOMMaterial){w=w.domElement;w.style.left=y+"px";w.style.top=A+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(ia){if(o!=ia)l.globalAlpha=o=ia}function b(ia){if(w!=ia){switch(ia){case THREE.NormalBlending:l.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:l.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:l.globalCompositeOperation="darker"}w=ia}}var e=null,f=new THREE.Projector,g=document.createElement("canvas"),h,j,c,i,l=g.getContext("2d"),u=null,C=null,o=1,w=0,y=null,A=null,L=1,q,G,d,k,n,t,s,x,v,p=new THREE.Color,
F=new THREE.Color,z=new THREE.Color,m=new THREE.Color,B=new THREE.Color,P,J,Q,U,T,V,$,S,O,X=new THREE.Rectangle,N=new THREE.Rectangle,E=new THREE.Rectangle,M=false,aa=new THREE.Color,ea=new THREE.Color,ba=new THREE.Color,r=new THREE.Color,D=Math.PI*2,H=new THREE.Vector3,R,Y,ja,fa,na,ta,va=16;R=document.createElement("canvas");R.width=R.height=2;Y=R.getContext("2d");Y.fillStyle="rgba(0,0,0,1)";Y.fillRect(0,0,2,2);ja=Y.getImageData(0,0,2,2);fa=ja.data;na=document.createElement("canvas");na.width=na.height=
va;ta=na.getContext("2d");ta.translate(-va/2,-va/2);ta.scale(va,va);va--;this.domElement=g;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(ia,sa){h=ia;j=sa;c=h/2;i=j/2;g.width=h;g.height=j;X.set(-c,-i,c,i)};this.setClearColor=function(ia,sa){u=ia!==null?new THREE.Color(ia):null;C=sa;N.set(-c,-i,c,i);l.setTransform(1,0,0,-1,c,i);this.clear()};this.clear=function(){if(!N.isEmpty()){N.inflate(1);N.minSelf(X);if(u!==null){b(THREE.NormalBlending);a(1);l.fillStyle="rgba("+Math.floor(u.r*
255)+","+Math.floor(u.g*255)+","+Math.floor(u.b*255)+","+C+")";l.fillRect(N.getX(),N.getY(),N.getWidth(),N.getHeight())}else l.clearRect(N.getX(),N.getY(),N.getWidth(),N.getHeight());N.empty()}};this.render=function(ia,sa){function Ma(I){var ca,Z,K,W=I.lights;ea.setRGB(0,0,0);ba.setRGB(0,0,0);r.setRGB(0,0,0);I=0;for(ca=W.length;I<ca;I++){Z=W[I];K=Z.color;if(Z instanceof THREE.AmbientLight){ea.r+=K.r;ea.g+=K.g;ea.b+=K.b}else if(Z instanceof THREE.DirectionalLight){ba.r+=K.r;ba.g+=K.g;ba.b+=K.b}else if(Z instanceof
THREE.PointLight){r.r+=K.r;r.g+=K.g;r.b+=K.b}}}function Aa(I,ca,Z,K){var W,da,ha,ka,la=I.lights;I=0;for(W=la.length;I<W;I++){da=la[I];ha=da.color;ka=da.intensity;if(da instanceof THREE.DirectionalLight){da=Z.dot(da.position)*ka;if(da>0){K.r+=ha.r*da;K.g+=ha.g*da;K.b+=ha.b*da}}else if(da instanceof THREE.PointLight){H.sub(da.position,ca);H.normalize();da=Z.dot(H)*ka;if(da>0){K.r+=ha.r*da;K.g+=ha.g*da;K.b+=ha.b*da}}}}function Na(I,ca,Z){if(Z.opacity!=0){a(Z.opacity);b(Z.blending);var K,W,da,ha,ka,la;
if(Z instanceof THREE.ParticleBasicMaterial){if(Z.map){ha=Z.map;ka=ha.width>>1;la=ha.height>>1;W=ca.scale.x*c;da=ca.scale.y*i;Z=W*ka;K=da*la;E.set(I.x-Z,I.y-K,I.x+Z,I.y+K);if(X.instersects(E)){l.save();l.translate(I.x,I.y);l.rotate(-ca.rotation);l.scale(W,-da);l.translate(-ka,-la);l.drawImage(ha,0,0);l.restore()}}}else if(Z instanceof THREE.ParticleCircleMaterial){if(M){aa.r=ea.r+ba.r+r.r;aa.g=ea.g+ba.g+r.g;aa.b=ea.b+ba.b+r.b;p.r=Z.color.r*aa.r;p.g=Z.color.g*aa.g;p.b=Z.color.b*aa.b;p.updateStyleString()}else p.__styleString=
Z.color.__styleString;Z=ca.scale.x*c;K=ca.scale.y*i;E.set(I.x-Z,I.y-K,I.x+Z,I.y+K);if(X.instersects(E)){W=p.__styleString;if(A!=W)l.fillStyle=A=W;l.save();l.translate(I.x,I.y);l.rotate(-ca.rotation);l.scale(Z,K);l.beginPath();l.arc(0,0,1,0,D,true);l.closePath();l.fill();l.restore()}}}}function Oa(I,ca,Z,K){if(K.opacity!=0){a(K.opacity);b(K.blending);l.beginPath();l.moveTo(I.positionScreen.x,I.positionScreen.y);l.lineTo(ca.positionScreen.x,ca.positionScreen.y);l.closePath();if(K instanceof THREE.LineBasicMaterial){p.__styleString=
K.color.__styleString;I=K.linewidth;if(L!=I)l.lineWidth=L=I;I=p.__styleString;if(y!=I)l.strokeStyle=y=I;l.stroke();E.inflate(K.linewidth*2)}}}function Ia(I,ca,Z,K,W,da){if(W.opacity!=0){a(W.opacity);b(W.blending);k=I.positionScreen.x;n=I.positionScreen.y;t=ca.positionScreen.x;s=ca.positionScreen.y;x=Z.positionScreen.x;v=Z.positionScreen.y;l.beginPath();l.moveTo(k,n);l.lineTo(t,s);l.lineTo(x,v);l.lineTo(k,n);l.closePath();if(W instanceof THREE.MeshBasicMaterial)if(W.map)W.map.image.loaded&&W.map.mapping instanceof
THREE.UVMapping&&xa(k,n,t,s,x,v,W.map.image,K.uvs[0].u,K.uvs[0].v,K.uvs[1].u,K.uvs[1].v,K.uvs[2].u,K.uvs[2].v);else if(W.env_map){if(W.env_map.image.loaded)if(W.env_map.mapping instanceof THREE.SphericalReflectionMapping){I=sa.matrix;H.copy(K.vertexNormalsWorld[0]);U=(H.x*I.n11+H.y*I.n12+H.z*I.n13)*0.5+0.5;T=-(H.x*I.n21+H.y*I.n22+H.z*I.n23)*0.5+0.5;H.copy(K.vertexNormalsWorld[1]);V=(H.x*I.n11+H.y*I.n12+H.z*I.n13)*0.5+0.5;$=-(H.x*I.n21+H.y*I.n22+H.z*I.n23)*0.5+0.5;H.copy(K.vertexNormalsWorld[2]);S=
(H.x*I.n11+H.y*I.n12+H.z*I.n13)*0.5+0.5;O=-(H.x*I.n21+H.y*I.n22+H.z*I.n23)*0.5+0.5;xa(k,n,t,s,x,v,W.env_map.image,U,T,V,$,S,O)}}else W.wireframe?Ba(W.color.__styleString,W.wireframe_linewidth):Ca(W.color.__styleString);else if(W instanceof THREE.MeshLambertMaterial){if(W.map&&!W.wireframe){W.map.mapping instanceof THREE.UVMapping&&xa(k,n,t,s,x,v,W.map.image,K.uvs[0].u,K.uvs[0].v,K.uvs[1].u,K.uvs[1].v,K.uvs[2].u,K.uvs[2].v);b(THREE.SubtractiveBlending)}if(M)if(!W.wireframe&&W.shading==THREE.SmoothShading&&
K.vertexNormalsWorld.length==3){F.r=z.r=m.r=ea.r;F.g=z.g=m.g=ea.g;F.b=z.b=m.b=ea.b;Aa(da,K.v1.positionWorld,K.vertexNormalsWorld[0],F);Aa(da,K.v2.positionWorld,K.vertexNormalsWorld[1],z);Aa(da,K.v3.positionWorld,K.vertexNormalsWorld[2],m);B.r=(z.r+m.r)*0.5;B.g=(z.g+m.g)*0.5;B.b=(z.b+m.b)*0.5;Q=Ja(F,z,m,B);xa(k,n,t,s,x,v,Q,0,0,1,0,0,1)}else{aa.r=ea.r;aa.g=ea.g;aa.b=ea.b;Aa(da,K.centroidWorld,K.normalWorld,aa);p.r=W.color.r*aa.r;p.g=W.color.g*aa.g;p.b=W.color.b*aa.b;p.updateStyleString();W.wireframe?
Ba(p.__styleString,W.wireframe_linewidth):Ca(p.__styleString)}else W.wireframe?Ba(W.color.__styleString,W.wireframe_linewidth):Ca(W.color.__styleString)}else if(W instanceof THREE.MeshDepthMaterial){P=sa.near;J=sa.far;F.r=F.g=F.b=1-Ea(I.positionScreen.z,P,J);z.r=z.g=z.b=1-Ea(ca.positionScreen.z,P,J);m.r=m.g=m.b=1-Ea(Z.positionScreen.z,P,J);B.r=(z.r+m.r)*0.5;B.g=(z.g+m.g)*0.5;B.b=(z.b+m.b)*0.5;Q=Ja(F,z,m,B);xa(k,n,t,s,x,v,Q,0,0,1,0,0,1)}else if(W instanceof THREE.MeshNormalMaterial){p.r=Fa(K.normalWorld.x);
p.g=Fa(K.normalWorld.y);p.b=Fa(K.normalWorld.z);p.updateStyleString();W.wireframe?Ba(p.__styleString,W.wireframe_linewidth):Ca(p.__styleString)}}}function Ba(I,ca){if(y!=I)l.strokeStyle=y=I;if(L!=ca)l.lineWidth=L=ca;l.stroke();E.inflate(ca*2)}function Ca(I){if(A!=I)l.fillStyle=A=I;l.fill()}function xa(I,ca,Z,K,W,da,ha,ka,la,pa,ma,qa,ya){var ua,ra;ua=ha.width-1;ra=ha.height-1;ka*=ua;la*=ra;pa*=ua;ma*=ra;qa*=ua;ya*=ra;Z-=I;K-=ca;W-=I;da-=ca;pa-=ka;ma-=la;qa-=ka;ya-=la;ra=1/(pa*ya-qa*ma);ua=(ya*Z-ma*
W)*ra;ma=(ya*K-ma*da)*ra;Z=(pa*W-qa*Z)*ra;K=(pa*da-qa*K)*ra;I=I-ua*ka-Z*la;ca=ca-ma*ka-K*la;l.save();l.transform(ua,ma,Z,K,I,ca);l.clip();l.drawImage(ha,0,0);l.restore()}function Ja(I,ca,Z,K){var W=~~(I.r*255),da=~~(I.g*255);I=~~(I.b*255);var ha=~~(ca.r*255),ka=~~(ca.g*255);ca=~~(ca.b*255);var la=~~(Z.r*255),pa=~~(Z.g*255);Z=~~(Z.b*255);var ma=~~(K.r*255),qa=~~(K.g*255);K=~~(K.b*255);fa[0]=W<0?0:W>255?255:W;fa[1]=da<0?0:da>255?255:da;fa[2]=I<0?0:I>255?255:I;fa[4]=ha<0?0:ha>255?255:ha;fa[5]=ka<0?0:
ka>255?255:ka;fa[6]=ca<0?0:ca>255?255:ca;fa[8]=la<0?0:la>255?255:la;fa[9]=pa<0?0:pa>255?255:pa;fa[10]=Z<0?0:Z>255?255:Z;fa[12]=ma<0?0:ma>255?255:ma;fa[13]=qa<0?0:qa>255?255:qa;fa[14]=K<0?0:K>255?255:K;Y.putImageData(ja,0,0);ta.drawImage(R,0,0);return na}function Ea(I,ca,Z){I=(I-ca)/(Z-ca);return I*I*(3-2*I)}function Fa(I){I=(I+1)*0.5;return I<0?0:I>1?1:I}function Ga(I,ca){var Z=ca.x-I.x,K=ca.y-I.y,W=1/Math.sqrt(Z*Z+K*K);Z*=W;K*=W;ca.x+=Z;ca.y+=K;I.x-=Z;I.y-=K}var Da,Ka,ga,oa,wa,Ha,La,za;l.setTransform(1,
0,0,-1,c,i);this.autoClear&&this.clear();e=f.projectScene(ia,sa,this.sortElements);(M=ia.lights.length>0)&&Ma(ia);Da=0;for(Ka=e.length;Da<Ka;Da++){ga=e[Da];E.empty();if(ga instanceof THREE.RenderableParticle){q=ga;q.x*=c;q.y*=i;oa=0;for(wa=ga.materials.length;oa<wa;oa++)Na(q,ga,ga.materials[oa],ia)}else if(ga instanceof THREE.RenderableLine){q=ga.v1;G=ga.v2;q.positionScreen.x*=c;q.positionScreen.y*=i;G.positionScreen.x*=c;G.positionScreen.y*=i;E.addPoint(q.positionScreen.x,q.positionScreen.y);E.addPoint(G.positionScreen.x,
G.positionScreen.y);if(X.instersects(E)){oa=0;for(wa=ga.materials.length;oa<wa;)Oa(q,G,ga,ga.materials[oa++],ia)}}else if(ga instanceof THREE.RenderableFace3){q=ga.v1;G=ga.v2;d=ga.v3;q.positionScreen.x*=c;q.positionScreen.y*=i;G.positionScreen.x*=c;G.positionScreen.y*=i;d.positionScreen.x*=c;d.positionScreen.y*=i;if(ga.overdraw){Ga(q.positionScreen,G.positionScreen);Ga(G.positionScreen,d.positionScreen);Ga(d.positionScreen,q.positionScreen)}E.add3Points(q.positionScreen.x,q.positionScreen.y,G.positionScreen.x,
G.positionScreen.y,d.positionScreen.x,d.positionScreen.y);if(X.instersects(E)){oa=0;for(wa=ga.meshMaterials.length;oa<wa;){za=ga.meshMaterials[oa++];if(za instanceof THREE.MeshFaceMaterial){Ha=0;for(La=ga.faceMaterials.length;Ha<La;)(za=ga.faceMaterials[Ha++])&&Ia(q,G,d,ga,za,ia)}else Ia(q,G,d,ga,za,ia)}}}N.addRectangle(E)}l.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(U,T,V){var $,S,O,X;$=0;for(S=U.lights.length;$<S;$++){O=U.lights[$];if(O instanceof THREE.DirectionalLight){X=T.normalWorld.dot(O.position)*O.intensity;if(X>0){V.r+=O.color.r*X;V.g+=O.color.g*X;V.b+=O.color.b*X}}else if(O instanceof THREE.PointLight){v.sub(O.position,T.centroidWorld);v.normalize();X=T.normalWorld.dot(v)*O.intensity;if(X>0){V.r+=O.color.r*X;V.g+=O.color.g*X;V.b+=O.color.b*X}}}}function b(U,T,V,$,S,O){m=f(B++);m.setAttribute("d","M "+U.positionScreen.x+
" "+U.positionScreen.y+" L "+T.positionScreen.x+" "+T.positionScreen.y+" L "+V.positionScreen.x+","+V.positionScreen.y+"z");if(S instanceof THREE.MeshBasicMaterial)d.__styleString=S.color.__styleString;else if(S instanceof THREE.MeshLambertMaterial)if(G){k.r=n.r;k.g=n.g;k.b=n.b;a(O,$,k);d.r=S.color.r*k.r;d.g=S.color.g*k.g;d.b=S.color.b*k.b;d.updateStyleString()}else d.__styleString=S.color.__styleString;else if(S instanceof THREE.MeshDepthMaterial){x=1-S.__2near/(S.__farPlusNear-$.z*S.__farMinusNear);
d.setRGB(x,x,x)}else S instanceof THREE.MeshNormalMaterial&&d.setRGB(g($.normalWorld.x),g($.normalWorld.y),g($.normalWorld.z));S.wireframe?m.setAttribute("style","fill: none; stroke: "+d.__styleString+"; stroke-width: "+S.wireframe_linewidth+"; stroke-opacity: "+S.opacity+"; stroke-linecap: "+S.wireframe_linecap+"; stroke-linejoin: "+S.wireframe_linejoin):m.setAttribute("style","fill: "+d.__styleString+"; fill-opacity: "+S.opacity);c.appendChild(m)}function e(U,T,V,$,S,O,X){m=f(B++);m.setAttribute("d",
"M "+U.positionScreen.x+" "+U.positionScreen.y+" L "+T.positionScreen.x+" "+T.positionScreen.y+" L "+V.positionScreen.x+","+V.positionScreen.y+" L "+$.positionScreen.x+","+$.positionScreen.y+"z");if(O instanceof THREE.MeshBasicMaterial)d.__styleString=O.color.__styleString;else if(O instanceof THREE.MeshLambertMaterial)if(G){k.r=n.r;k.g=n.g;k.b=n.b;a(X,S,k);d.r=O.color.r*k.r;d.g=O.color.g*k.g;d.b=O.color.b*k.b;d.updateStyleString()}else d.__styleString=O.color.__styleString;else if(O instanceof THREE.MeshDepthMaterial){x=
1-O.__2near/(O.__farPlusNear-S.z*O.__farMinusNear);d.setRGB(x,x,x)}else O instanceof THREE.MeshNormalMaterial&&d.setRGB(g(S.normalWorld.x),g(S.normalWorld.y),g(S.normalWorld.z));O.wireframe?m.setAttribute("style","fill: none; stroke: "+d.__styleString+"; stroke-width: "+O.wireframe_linewidth+"; stroke-opacity: "+O.opacity+"; stroke-linecap: "+O.wireframe_linecap+"; stroke-linejoin: "+O.wireframe_linejoin):m.setAttribute("style","fill: "+d.__styleString+"; fill-opacity: "+O.opacity);c.appendChild(m)}
function f(U){if(p[U]==null){p[U]=document.createElementNS("http://www.w3.org/2000/svg","path");Q==0&&p[U].setAttribute("shape-rendering","crispEdges");return p[U]}return p[U]}function g(U){return U<0?Math.min((1+U)*0.5,0.5):0.5+Math.min(U*0.5,0.5)}var h=null,j=new THREE.Projector,c=document.createElementNS("http://www.w3.org/2000/svg","svg"),i,l,u,C,o,w,y,A,L=new THREE.Rectangle,q=new THREE.Rectangle,G=false,d=new THREE.Color(16777215),k=new THREE.Color(16777215),n=new THREE.Color(0),t=new THREE.Color(0),
s=new THREE.Color(0),x,v=new THREE.Vector3,p=[],F=[],z=[],m,B,P,J,Q=1;this.domElement=c;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(U){switch(U){case "high":Q=1;break;case "low":Q=0}};this.setSize=function(U,T){i=U;l=T;u=i/2;C=l/2;c.setAttribute("viewBox",-u+" "+-C+" "+i+" "+l);c.setAttribute("width",i);c.setAttribute("height",l);L.set(-u,-C,u,C)};this.clear=function(){for(;c.childNodes.length>0;)c.removeChild(c.childNodes[0])};this.render=function(U,T){var V,$,
S,O,X,N,E,M;this.autoClear&&this.clear();h=j.projectScene(U,T,this.sortElements);J=P=B=0;if(G=U.lights.length>0){E=U.lights;n.setRGB(0,0,0);t.setRGB(0,0,0);s.setRGB(0,0,0);V=0;for($=E.length;V<$;V++){S=E[V];O=S.color;if(S instanceof THREE.AmbientLight){n.r+=O.r;n.g+=O.g;n.b+=O.b}else if(S instanceof THREE.DirectionalLight){t.r+=O.r;t.g+=O.g;t.b+=O.b}else if(S instanceof THREE.PointLight){s.r+=O.r;s.g+=O.g;s.b+=O.b}}}V=0;for($=h.length;V<$;V++){E=h[V];q.empty();if(E instanceof THREE.RenderableParticle){o=
E;o.x*=u;o.y*=-C;S=0;for(O=E.materials.length;S<O;S++)if(M=E.materials[S]){X=o;N=E;M=M;var aa=P++;if(F[aa]==null){F[aa]=document.createElementNS("http://www.w3.org/2000/svg","circle");Q==0&&F[aa].setAttribute("shape-rendering","crispEdges")}m=F[aa];m.setAttribute("cx",X.x);m.setAttribute("cy",X.y);m.setAttribute("r",N.scale.x*u);if(M instanceof THREE.ParticleCircleMaterial){if(G){k.r=n.r+t.r+s.r;k.g=n.g+t.g+s.g;k.b=n.b+t.b+s.b;d.r=M.color.r*k.r;d.g=M.color.g*k.g;d.b=M.color.b*k.b;d.updateStyleString()}else d=
M.color;m.setAttribute("style","fill: "+d.__styleString)}c.appendChild(m)}}else if(E instanceof THREE.RenderableLine){o=E.v1;w=E.v2;o.positionScreen.x*=u;o.positionScreen.y*=-C;w.positionScreen.x*=u;w.positionScreen.y*=-C;q.addPoint(o.positionScreen.x,o.positionScreen.y);q.addPoint(w.positionScreen.x,w.positionScreen.y);if(L.instersects(q)){S=0;for(O=E.materials.length;S<O;)if(M=E.materials[S++]){X=o;N=w;M=M;aa=J++;if(z[aa]==null){z[aa]=document.createElementNS("http://www.w3.org/2000/svg","line");
Q==0&&z[aa].setAttribute("shape-rendering","crispEdges")}m=z[aa];m.setAttribute("x1",X.positionScreen.x);m.setAttribute("y1",X.positionScreen.y);m.setAttribute("x2",N.positionScreen.x);m.setAttribute("y2",N.positionScreen.y);if(M instanceof THREE.LineBasicMaterial){d.__styleString=M.color.__styleString;m.setAttribute("style","fill: none; stroke: "+d.__styleString+"; stroke-width: "+M.linewidth+"; stroke-opacity: "+M.opacity+"; stroke-linecap: "+M.linecap+"; stroke-linejoin: "+M.linejoin);c.appendChild(m)}}}}else if(E instanceof
THREE.RenderableFace3){o=E.v1;w=E.v2;y=E.v3;o.positionScreen.x*=u;o.positionScreen.y*=-C;w.positionScreen.x*=u;w.positionScreen.y*=-C;y.positionScreen.x*=u;y.positionScreen.y*=-C;q.addPoint(o.positionScreen.x,o.positionScreen.y);q.addPoint(w.positionScreen.x,w.positionScreen.y);q.addPoint(y.positionScreen.x,y.positionScreen.y);if(L.instersects(q)){S=0;for(O=E.meshMaterials.length;S<O;){M=E.meshMaterials[S++];if(M instanceof THREE.MeshFaceMaterial){X=0;for(N=E.faceMaterials.length;X<N;)(M=E.faceMaterials[X++])&&
b(o,w,y,E,M,U)}else M&&b(o,w,y,E,M,U)}}}else if(E instanceof THREE.RenderableFace4){o=E.v1;w=E.v2;y=E.v3;A=E.v4;o.positionScreen.x*=u;o.positionScreen.y*=-C;w.positionScreen.x*=u;w.positionScreen.y*=-C;y.positionScreen.x*=u;y.positionScreen.y*=-C;A.positionScreen.x*=u;A.positionScreen.y*=-C;q.addPoint(o.positionScreen.x,o.positionScreen.y);q.addPoint(w.positionScreen.x,w.positionScreen.y);q.addPoint(y.positionScreen.x,y.positionScreen.y);q.addPoint(A.positionScreen.x,A.positionScreen.y);if(L.instersects(q)){S=
0;for(O=E.meshMaterials.length;S<O;){M=E.meshMaterials[S++];if(M instanceof THREE.MeshFaceMaterial){X=0;for(N=E.faceMaterials.length;X<N;)(M=E.faceMaterials[X++])&&e(o,w,y,A,E,M,U)}else M&&e(o,w,y,A,E,M,U)}}}}}};
THREE.WebGLRenderer=function(a){function b(d,k){d.fragment_shader=k.fragment_shader;d.vertex_shader=k.vertex_shader;d.uniforms=Uniforms.clone(k.uniforms)}function e(d,k){d.uniforms.color.value.setRGB(d.color.r*d.opacity,d.color.g*d.opacity,d.color.b*d.opacity);d.uniforms.opacity.value=d.opacity;d.uniforms.map.texture=d.map;d.uniforms.env_map.texture=d.env_map;d.uniforms.reflectivity.value=d.reflectivity;d.uniforms.refraction_ratio.value=d.refraction_ratio;d.uniforms.combine.value=d.combine;d.uniforms.useRefract.value=
d.env_map&&d.env_map.mapping instanceof THREE.CubeRefractionMapping;if(k){d.uniforms.fogColor.value.setHex(k.color.hex);if(k instanceof THREE.Fog){d.uniforms.fogNear.value=k.near;d.uniforms.fogFar.value=k.far}else if(k instanceof THREE.FogExp2)d.uniforms.fogDensity.value=k.density}}function f(d,k){d.uniforms.color.value.setRGB(d.color.r*d.opacity,d.color.g*d.opacity,d.color.b*d.opacity);d.uniforms.opacity.value=d.opacity;if(k){d.uniforms.fogColor.value.setHex(k.color.hex);if(k instanceof THREE.Fog){d.uniforms.fogNear.value=
k.near;d.uniforms.fogFar.value=k.far}else if(k instanceof THREE.FogExp2)d.uniforms.fogDensity.value=k.density}}function g(d,k){var n;if(d=="fragment")n=c.createShader(c.FRAGMENT_SHADER);else if(d=="vertex")n=c.createShader(c.VERTEX_SHADER);c.shaderSource(n,k);c.compileShader(n);if(!c.getShaderParameter(n,c.COMPILE_STATUS)){alert(c.getShaderInfoLog(n));return null}return n}function h(d){switch(d){case THREE.RepeatWrapping:return c.REPEAT;case THREE.ClampToEdgeWrapping:return c.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return c.MIRRORED_REPEAT;
case THREE.NearestFilter:return c.NEAREST;case THREE.NearestMipMapNearestFilter:return c.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return c.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return c.LINEAR;case THREE.LinearMipMapNearestFilter:return c.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return c.LINEAR_MIPMAP_LINEAR}return 0}var j=document.createElement("canvas"),c,i=null,l=new THREE.Matrix4,u,C=new Float32Array(16),o=new Float32Array(16),w=new Float32Array(16),
y=new Float32Array(9),A=new Float32Array(16),L=true,q=new THREE.Color(0),G=0;if(a){if(a.antialias!==undefined)L=a.antialias;a.clearColor!==undefined&&q.setHex(a.clearColor);if(a.clearAlpha!==undefined)G=a.clearAlpha}this.domElement=j;this.autoClear=true;(function(d,k,n){try{c=j.getContext("experimental-webgl",{antialias:d})}catch(t){}if(!c){alert("WebGL not supported");throw"cannot create webgl context";}c.clearColor(0,0,0,1);c.clearDepth(1);c.enable(c.DEPTH_TEST);c.depthFunc(c.LEQUAL);c.frontFace(c.CCW);
c.cullFace(c.BACK);c.enable(c.CULL_FACE);c.enable(c.BLEND);c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA);c.clearColor(k.r,k.g,k.b,n)})(L,q,G);this.setSize=function(d,k){j.width=d;j.height=k;c.viewport(0,0,j.width,j.height)};this.setClearColor=function(d,k){var n=new THREE.Color(d);c.clearColor(n.r,n.g,n.b,k)};this.clear=function(){c.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT)};this.setupLights=function(d,k){var n,t,s,x=0,v=0,p=0,F,z,m,B=[],P=[],J=[],Q=[];n=0;for(t=k.length;n<t;n++){s=k[n];F=s.color;z=
s.position;m=s.intensity;if(s instanceof THREE.AmbientLight){x+=F.r;v+=F.g;p+=F.b}else if(s instanceof THREE.DirectionalLight){B.push(F.r*m,F.g*m,F.b*m);P.push(z.x,z.y,z.z)}else if(s instanceof THREE.PointLight){J.push(F.r*m,F.g*m,F.b*m);Q.push(z.x,z.y,z.z)}}return{ambient:[x,v,p],directional:{colors:B,positions:P},point:{colors:J,positions:Q}}};this.createParticleBuffers=function(d){d.__webGLVertexBuffer=c.createBuffer();d.__webGLFaceBuffer=c.createBuffer()};this.createLineBuffers=function(d){d.__webGLVertexBuffer=
c.createBuffer();d.__webGLLineBuffer=c.createBuffer()};this.createMeshBuffers=function(d){d.__webGLVertexBuffer=c.createBuffer();d.__webGLNormalBuffer=c.createBuffer();d.__webGLTangentBuffer=c.createBuffer();d.__webGLUVBuffer=c.createBuffer();d.__webGLFaceBuffer=c.createBuffer();d.__webGLLineBuffer=c.createBuffer()};this.initLineBuffers=function(d){var k=d.vertices.length;d.__vertexArray=new Float32Array(k*3);d.__lineArray=new Uint16Array(k);d.__webGLLineCount=k};this.initMeshBuffers=function(d,k){var n,
t,s=0,x=0,v=0,p=k.geometry.faces,F=d.faces;n=0;for(t=F.length;n<t;n++){fi=F[n];face=p[fi];if(face instanceof THREE.Face3){s+=3;x+=1;v+=3}else if(face instanceof THREE.Face4){s+=4;x+=2;v+=5}}d.__vertexArray=new Float32Array(s*3);d.__normalArray=new Float32Array(s*3);d.__tangentArray=new Float32Array(s*4);d.__uvArray=new Float32Array(s*2);d.__faceArray=new Uint16Array(x*3);d.__lineArray=new Uint16Array(v*2);s=false;n=0;for(t=k.materials.length;n<t;n++){p=k.materials[n];if(p instanceof THREE.MeshFaceMaterial){p=
0;for(F=d.materials.length;p<F;p++)if(d.materials[p]&&d.materials[p].shading!=undefined&&d.materials[p].shading==THREE.SmoothShading){s=true;break}}else if(p&&p.shading!=undefined&&p.shading==THREE.SmoothShading){s=true;break}if(s)break}d.__needsSmoothNormals=s;d.__webGLFaceCount=x*3;d.__webGLLineCount=v*2};this.setMeshBuffers=function(d,k,n,t,s,x,v,p){var F,z,m,B,P,J,Q,U,T,V=0,$=0,S=0,O=0,X=0,N=0,E=0,M=d.__vertexArray,aa=d.__uvArray,ea=d.__normalArray,ba=d.__tangentArray,r=d.__faceArray,D=d.__lineArray,
H=d.__needsSmoothNormals,R=k.geometry,Y=R.vertices,ja=d.faces,fa=R.faces,na=R.uvs;k=0;for(F=ja.length;k<F;k++){z=ja[k];m=fa[z];z=na[z];B=m.vertexNormals;P=m.normal;if(m instanceof THREE.Face3){if(t){J=Y[m.a].position;Q=Y[m.b].position;U=Y[m.c].position;M[$]=J.x;M[$+1]=J.y;M[$+2]=J.z;M[$+3]=Q.x;M[$+4]=Q.y;M[$+5]=Q.z;M[$+6]=U.x;M[$+7]=U.y;M[$+8]=U.z;$+=9}if(p&&R.hasTangents){J=Y[m.a].tangent;Q=Y[m.b].tangent;U=Y[m.c].tangent;ba[N]=J.x;ba[N+1]=J.y;ba[N+2]=J.z;ba[N+3]=J.w;ba[N+4]=Q.x;ba[N+5]=Q.y;ba[N+
6]=Q.z;ba[N+7]=Q.w;ba[N+8]=U.x;ba[N+9]=U.y;ba[N+10]=U.z;ba[N+11]=U.w;N+=12}if(v)if(B.length==3&&H)for(m=0;m<3;m++){P=B[m];ea[X]=P.x;ea[X+1]=P.y;ea[X+2]=P.z;X+=3}else for(m=0;m<3;m++){ea[X]=P.x;ea[X+1]=P.y;ea[X+2]=P.z;X+=3}if(x&&z)for(m=0;m<3;m++){B=z[m];aa[S]=B.u;aa[S+1]=B.v;S+=2}if(s){r[O]=V;r[O+1]=V+1;r[O+2]=V+2;O+=3;D[E]=V;D[E+1]=V+1;D[E+2]=V;D[E+3]=V+2;D[E+4]=V+1;D[E+5]=V+2;E+=6;V+=3}}else if(m instanceof THREE.Face4){if(t){J=Y[m.a].position;Q=Y[m.b].position;U=Y[m.c].position;T=Y[m.d].position;
M[$]=J.x;M[$+1]=J.y;M[$+2]=J.z;M[$+3]=Q.x;M[$+4]=Q.y;M[$+5]=Q.z;M[$+6]=U.x;M[$+7]=U.y;M[$+8]=U.z;M[$+9]=T.x;M[$+10]=T.y;M[$+11]=T.z;$+=12}if(p&&R.hasTangents){J=Y[m.a].tangent;Q=Y[m.b].tangent;U=Y[m.c].tangent;m=Y[m.d].tangent;ba[N]=J.x;ba[N+1]=J.y;ba[N+2]=J.z;ba[N+3]=J.w;ba[N+4]=Q.x;ba[N+5]=Q.y;ba[N+6]=Q.z;ba[N+7]=Q.w;ba[N+8]=U.x;ba[N+9]=U.y;ba[N+10]=U.z;ba[N+11]=U.w;ba[N+12]=m.x;ba[N+13]=m.y;ba[N+14]=m.z;ba[N+15]=m.w;N+=16}if(v)if(B.length==4&&H)for(m=0;m<4;m++){P=B[m];ea[X]=P.x;ea[X+1]=P.y;ea[X+
2]=P.z;X+=3}else for(m=0;m<4;m++){ea[X]=P.x;ea[X+1]=P.y;ea[X+2]=P.z;X+=3}if(x&&z)for(m=0;m<4;m++){B=z[m];aa[S]=B.u;aa[S+1]=B.v;S+=2}if(s){r[O]=V;r[O+1]=V+1;r[O+2]=V+2;r[O+3]=V;r[O+4]=V+2;r[O+5]=V+3;O+=6;D[E]=V;D[E+1]=V+1;D[E+2]=V;D[E+3]=V+2;D[E+4]=V;D[E+5]=V+3;D[E+6]=V+1;D[E+7]=V+2;D[E+8]=V+2;D[E+9]=V+3;E+=10;V+=4}}}if(t){c.bindBuffer(c.ARRAY_BUFFER,d.__webGLVertexBuffer);c.bufferData(c.ARRAY_BUFFER,M,n)}if(v){c.bindBuffer(c.ARRAY_BUFFER,d.__webGLNormalBuffer);c.bufferData(c.ARRAY_BUFFER,ea,n)}if(p&&
R.hasTangents){c.bindBuffer(c.ARRAY_BUFFER,d.__webGLTangentBuffer);c.bufferData(c.ARRAY_BUFFER,ba,n)}if(x&&S>0){c.bindBuffer(c.ARRAY_BUFFER,d.__webGLUVBuffer);c.bufferData(c.ARRAY_BUFFER,aa,n)}if(s){c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,d.__webGLFaceBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,r,n);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,d.__webGLLineBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,D,n)}};this.setLineBuffers=function(d,k,n,t){var s,x,v=d.vertices,p=v.length,F=d.__vertexArray,z=d.__lineArray;
if(n)for(n=0;n<p;n++){s=v[n].position;x=n*3;F[x]=s.x;F[x+1]=s.y;F[x+2]=s.z}if(t)for(n=0;n<p;n++)z[n]=n;c.bindBuffer(c.ARRAY_BUFFER,d.__webGLVertexBuffer);c.bufferData(c.ARRAY_BUFFER,F,k);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,d.__webGLLineBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,z,k)};this.setParticleBuffers=function(){};this.renderBuffer=function(d,k,n,t,s,x){var v,p,F,z;if(!t.program){if(t instanceof THREE.MeshDepthMaterial){b(t,THREE.ShaderLib.depth);t.uniforms.mNear.value=d.near;t.uniforms.mFar.value=
d.far}else if(t instanceof THREE.MeshNormalMaterial)b(t,THREE.ShaderLib.normal);else if(t instanceof THREE.MeshBasicMaterial){b(t,THREE.ShaderLib.basic);e(t,n)}else if(t instanceof THREE.MeshLambertMaterial){b(t,THREE.ShaderLib.lambert);e(t,n)}else if(t instanceof THREE.MeshPhongMaterial){b(t,THREE.ShaderLib.phong);e(t,n)}else if(t instanceof THREE.LineBasicMaterial){b(t,THREE.ShaderLib.basic);f(t,n)}var m,B,P;m=z=p=0;for(B=k.length;m<B;m++){P=k[m];P instanceof THREE.DirectionalLight&&z++;P instanceof
THREE.PointLight&&p++}if(p+z<=4){m=z;p=p}else{m=Math.ceil(4*z/(p+z));p=4-m}p={directional:m,point:p};z={fog:n,map:t.map,env_map:t.env_map,maxDirLights:p.directional,maxPointLights:p.point};p=t.fragment_shader;m=t.vertex_shader;B=c.createProgram();P=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+z.maxDirLights,"#define MAX_POINT_LIGHTS "+z.maxPointLights,z.fog?"#define USE_FOG":"",z.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",z.map?"#define USE_MAP":"",z.env_map?"#define USE_ENVMAP":
"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");z=[c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+z.maxDirLights,"#define MAX_POINT_LIGHTS "+z.maxPointLights,z.map?"#define USE_MAP":"",z.env_map?"#define USE_ENVMAP":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n"].join("\n");
c.attachShader(B,g("fragment",P+p));c.attachShader(B,g("vertex",z+m));c.linkProgram(B);c.getProgramParameter(B,c.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+c.getProgramParameter(B,c.VALIDATE_STATUS)+", gl error ["+c.getError()+"]");B.uniforms={};B.attributes={};t.program=B;p=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(v in t.uniforms)p.push(v);v=t.program;m=0;for(B=p.length;m<B;m++){P=p[m];v.uniforms[P]=c.getUniformLocation(v,
P)}v=t.program;p=["position","normal","uv","tangent"];m=0;for(B=p.length;m<B;m++){P=p[m];v.attributes[P]=c.getAttribLocation(v,P)}}v=t.program;if(v!=i){c.useProgram(v);i=v}this.loadCamera(v,d);this.loadMatrices(v);if(t instanceof THREE.MeshPhongMaterial||t instanceof THREE.MeshLambertMaterial){d=this.setupLights(v,k);t.uniforms.enableLighting.value=d.directional.positions.length+d.point.positions.length;t.uniforms.ambientLightColor.value=d.ambient;t.uniforms.directionalLightColor.value=d.directional.colors;
t.uniforms.directionalLightDirection.value=d.directional.positions;t.uniforms.pointLightColor.value=d.point.colors;t.uniforms.pointLightPosition.value=d.point.positions}if(t instanceof THREE.MeshBasicMaterial||t instanceof THREE.MeshLambertMaterial||t instanceof THREE.MeshPhongMaterial)e(t,n);t instanceof THREE.LineBasicMaterial&&f(t,n);if(t instanceof THREE.MeshPhongMaterial){t.uniforms.ambient.value.setRGB(t.ambient.r,t.ambient.g,t.ambient.b);t.uniforms.specular.value.setRGB(t.specular.r,t.specular.g,
t.specular.b);t.uniforms.shininess.value=t.shininess}n=t.uniforms;for(F in n)if(m=v.uniforms[F]){k=n[F];p=k.type;d=k.value;if(p=="i")c.uniform1i(m,d);else if(p=="f")c.uniform1f(m,d);else if(p=="fv")c.uniform3fv(m,d);else if(p=="v2")c.uniform2f(m,d.x,d.y);else if(p=="v3")c.uniform3f(m,d.x,d.y,d.z);else if(p=="c")c.uniform3f(m,d.r,d.g,d.b);else if(p=="t"){c.uniform1i(m,d);if(k=k.texture)if(k.image instanceof Array&&k.image.length==6){k=k;d=d;if(k.image.length==6){if(!k.image.__webGLTextureCube&&!k.image.__cubeMapInitialized&&
k.image.loadCount==6){k.image.__webGLTextureCube=c.createTexture();c.bindTexture(c.TEXTURE_CUBE_MAP,k.image.__webGLTextureCube);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MAG_FILTER,c.LINEAR);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MIN_FILTER,c.LINEAR_MIPMAP_LINEAR);for(p=0;p<6;++p)c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+p,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,
k.image[p]);c.generateMipmap(c.TEXTURE_CUBE_MAP);c.bindTexture(c.TEXTURE_CUBE_MAP,null);k.image.__cubeMapInitialized=true}c.activeTexture(c.TEXTURE0+d);c.bindTexture(c.TEXTURE_CUBE_MAP,k.image.__webGLTextureCube)}}else{k=k;d=d;if(!k.__webGLTexture&&k.image.loaded){k.__webGLTexture=c.createTexture();c.bindTexture(c.TEXTURE_2D,k.__webGLTexture);c.texImage2D(c.TEXTURE_2D,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,k.image);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,h(k.wrap_s));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,
h(k.wrap_t));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,h(k.mag_filter));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,h(k.min_filter));c.generateMipmap(c.TEXTURE_2D);c.bindTexture(c.TEXTURE_2D,null)}c.activeTexture(c.TEXTURE0+d);c.bindTexture(c.TEXTURE_2D,k.__webGLTexture)}}}F=v.attributes;c.bindBuffer(c.ARRAY_BUFFER,s.__webGLVertexBuffer);c.vertexAttribPointer(F.position,3,c.FLOAT,false,0,0);c.enableVertexAttribArray(F.position);if(F.normal>=0){c.bindBuffer(c.ARRAY_BUFFER,s.__webGLNormalBuffer);
c.vertexAttribPointer(F.normal,3,c.FLOAT,false,0,0);c.enableVertexAttribArray(F.normal)}if(F.tangent>=0){c.bindBuffer(c.ARRAY_BUFFER,s.__webGLTangentBuffer);c.vertexAttribPointer(F.tangent,4,c.FLOAT,false,0,0);c.enableVertexAttribArray(F.tangent)}if(F.uv>=0)if(s.__webGLUVBuffer){c.bindBuffer(c.ARRAY_BUFFER,s.__webGLUVBuffer);c.vertexAttribPointer(F.uv,2,c.FLOAT,false,0,0);c.enableVertexAttribArray(F.uv)}else c.disableVertexAttribArray(F.uv);if(t.wireframe||t instanceof THREE.LineBasicMaterial){F=
t.wireframe_linewidth!==undefined?t.wireframe_linewidth:t.linewidth!==undefined?t.linewidth:1;t=t instanceof THREE.LineBasicMaterial&&x.type==THREE.LineStrip?c.LINE_STRIP:c.LINES;c.lineWidth(F);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,s.__webGLLineBuffer);c.drawElements(t,s.__webGLLineCount,c.UNSIGNED_SHORT,0)}else{c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,s.__webGLFaceBuffer);c.drawElements(c.TRIANGLES,s.__webGLFaceCount,c.UNSIGNED_SHORT,0)}};this.renderPass=function(d,k,n,t,s,x,v){var p,F,z,m,B;z=0;for(m=
t.materials.length;z<m;z++){p=t.materials[z];if(p instanceof THREE.MeshFaceMaterial){p=0;for(F=s.materials.length;p<F;p++)if((B=s.materials[p])&&B.blending==x&&B.opacity<1==v){this.setBlending(B.blending);this.renderBuffer(d,k,n,B,s,t)}}else if((B=p)&&B.blending==x&&B.opacity<1==v){this.setBlending(B.blending);this.renderBuffer(d,k,n,B,s,t)}}};this.render=function(d,k){var n,t,s,x,v=d.lights,p=d.fog;this.initWebGLObjects(d);this.autoClear&&this.clear();k.autoUpdateMatrix&&k.updateMatrix();C.set(k.matrix.flatten());
w.set(k.projectionMatrix.flatten());n=0;for(t=d.__webGLObjects.length;n<t;n++){s=d.__webGLObjects[n];x=s.object;s=s.buffer;if(x.visible){this.setupMatrices(x,k);this.renderPass(k,v,p,x,s,THREE.NormalBlending,false)}}n=0;for(t=d.__webGLObjects.length;n<t;n++){s=d.__webGLObjects[n];x=s.object;s=s.buffer;if(x.visible){this.setupMatrices(x,k);this.renderPass(k,v,p,x,s,THREE.AdditiveBlending,false);this.renderPass(k,v,p,x,s,THREE.SubtractiveBlending,false);this.renderPass(k,v,p,x,s,THREE.AdditiveBlending,
true);this.renderPass(k,v,p,x,s,THREE.SubtractiveBlending,true);this.renderPass(k,v,p,x,s,THREE.NormalBlending,true)}}};this.initWebGLObjects=function(d){function k(z,m,B,P){if(z[m]==undefined){d.__webGLObjects.push({buffer:B,object:P});z[m]=1}}var n,t,s,x,v,p,F;if(!d.__webGLObjects){d.__webGLObjects=[];d.__webGLObjectsMap={}}n=0;for(t=d.objects.length;n<t;n++){s=d.objects[n];v=s.geometry;if(d.__webGLObjectsMap[s.id]==undefined)d.__webGLObjectsMap[s.id]={};F=d.__webGLObjectsMap[s.id];if(s instanceof
THREE.Mesh){for(x in v.geometryChunks){p=v.geometryChunks[x];if(!p.__webGLVertexBuffer){this.createMeshBuffers(p);this.initMeshBuffers(p,s);v.__dirtyVertices=true;v.__dirtyElements=true;v.__dirtyUvs=true;v.__dirtyNormals=true;v.__dirtyTangents=true}if(v.__dirtyVertices||v.__dirtyElements||v.__dirtyUvs)this.setMeshBuffers(p,s,c.DYNAMIC_DRAW,v.__dirtyVertices,v.__dirtyElements,v.__dirtyUvs,v.__dirtyNormals,v.__dirtyTangents);k(F,x,p,s)}v.__dirtyVertices=false;v.__dirtyElements=false;v.__dirtyUvs=false;
v.__dirtyNormals=false;v.__dirtyTangents=false}else if(s instanceof THREE.Line){if(!v.__webGLVertexBuffer){this.createLineBuffers(v);this.initLineBuffers(v);v.__dirtyVertices=true;v.__dirtyElements=true}v.__dirtyVertices&&this.setLineBuffers(v,c.DYNAMIC_DRAW,v.__dirtyVertices,v.__dirtyElements);k(F,0,v,s);v.__dirtyVertices=false;v.__dirtyElements=false}else if(s instanceof THREE.ParticleSystem){v.__webGLVertexBuffer||this.createParticleBuffers(v);k(F,0,v,s)}}};this.removeObject=function(d,k){var n,
t;for(n=d.__webGLObjects.length-1;n>=0;n--){t=d.__webGLObjects[n].object;k==t&&d.__webGLObjects.splice(n,1)}};this.setupMatrices=function(d,k){d.autoUpdateMatrix&&d.updateMatrix();l.multiply(k.matrix,d.matrix);o.set(l.flatten());u=THREE.Matrix4.makeInvert3x3(l).transpose();y.set(u.m);A.set(d.matrix.flatten())};this.loadMatrices=function(d){c.uniformMatrix4fv(d.uniforms.viewMatrix,false,C);c.uniformMatrix4fv(d.uniforms.modelViewMatrix,false,o);c.uniformMatrix4fv(d.uniforms.projectionMatrix,false,w);
c.uniformMatrix3fv(d.uniforms.normalMatrix,false,y);c.uniformMatrix4fv(d.uniforms.objectMatrix,false,A)};this.loadCamera=function(d,k){c.uniform3f(d.uniforms.cameraPosition,k.position.x,k.position.y,k.position.z)};this.setBlending=function(d){switch(d){case THREE.AdditiveBlending:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ONE,c.ONE);break;case THREE.SubtractiveBlending:c.blendFunc(c.DST_COLOR,c.ZERO);break;default:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=
function(d,k){if(d){!k||k=="ccw"?c.frontFace(c.CCW):c.frontFace(c.CW);if(d=="back")c.cullFace(c.BACK);else d=="front"?c.cullFace(c.FRONT):c.cullFace(c.FRONT_AND_BACK);c.enable(c.CULL_FACE)}else c.disable(c.CULL_FACE)};this.supportsVertexTextures=function(){return c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, 1.0 ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\ncubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = mix( gl_FragColor, cubeColor, reflectivity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif",
envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",
map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}",
lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif"};
THREE.UniformsLib={common:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",
value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",
vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsLib.common,fragment_shader:["uniform vec3 color;\nuniform float opacity;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",
THREE.Snippets.map_fragment,"gl_FragColor = mColor * mapColor;",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},lambert:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nvarying vec3 vLightWeighting;",
THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,"gl_FragColor =  mColor * mapColor * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,
THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},phong:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},
shininess:{type:"f",value:30}}]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,THREE.Snippets.lights_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lights_fragment,
"gl_FragColor =  mapColor * totalLight * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",
THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")}};THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
var GeometryUtils={merge:function(a,b){var e=b instanceof THREE.Mesh,f=a.vertices.length,g=e?b.geometry:b,h=a.vertices,j=g.vertices,c=a.faces,i=g.faces,l=a.uvs;g=g.uvs;e&&b.updateMatrix();for(var u=0,C=j.length;u<C;u++){var o=new THREE.Vertex(j[u].position.clone());e&&b.matrix.multiplyVector3(o.position);h.push(o)}u=0;for(C=i.length;u<C;u++){j=i[u];var w,y=j.vertexNormals;if(j instanceof THREE.Face3)w=new THREE.Face3(j.a+f,j.b+f,j.c+f);else if(j instanceof THREE.Face4)w=new THREE.Face4(j.a+f,j.b+
f,j.c+f,j.d+f);w.centroid.copy(j.centroid);w.normal.copy(j.normal);e=0;for(h=y.length;e<h;e++){o=y[e];w.vertexNormals.push(o.clone())}w.materials=j.materials.slice();c.push(w)}u=0;for(C=g.length;u<C;u++){f=g[u];c=[];e=0;for(h=f.length;e<h;e++)c.push(new THREE.UV(f[e].u,f[e].v));l.push(c)}}},ImageUtils={loadTexture:function(a,b){var e=new Image;e.onload=function(){this.loaded=true};e.src=a;return new THREE.Texture(e,b)},loadArray:function(a){var b,e,f=[];b=f.loadCount=0;for(e=a.length;b<e;++b){f[b]=
new Image;f[b].loaded=0;f[b].onload=function(){f.loadCount+=1;this.loaded=true};f[b].src=a[b]}return f}},SceneUtils={addMesh:function(a,b,e,f,g,h,j,c,i,l){b=new THREE.Mesh(b,l);b.scale.x=b.scale.y=b.scale.z=e;b.position.x=f;b.position.y=g;b.position.z=h;b.rotation.x=j;b.rotation.y=c;b.rotation.z=i;a.addObject(b);return b},addPanoramaCubeWebGL:function(a,b,e){var f=ShaderUtils.lib.cube;f.uniforms.tCube.texture=e;e=new THREE.MeshShaderMaterial({fragment_shader:f.fragment_shader,vertex_shader:f.vertex_shader,
uniforms:f.uniforms});b=new THREE.Mesh(new Cube(b,b,b,1,1,null,true),e);a.addObject(b);return b},addPanoramaCube:function(a,b,e){var f=[];f.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[0])}));f.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[1])}));f.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[2])}));f.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[3])}));f.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[4])}));f.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(e[5])}));
b=new THREE.Mesh(new Cube(b,b,b,1,1,f,true),new THREE.MeshFaceMaterial);a.addObject(b);return b},addPanoramaCubePlanes:function(a,b,e){var f=b/2;b=new Plane(b,b);var g=Math.PI/2,h=Math.PI;SceneUtils.addMesh(a,b,1,0,0,-f,0,0,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[5])}));SceneUtils.addMesh(a,b,1,-f,0,0,0,g,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[0])}));SceneUtils.addMesh(a,b,1,f,0,0,0,-g,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[1])}));SceneUtils.addMesh(a,
b,1,0,f,0,g,0,h,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[2])}));SceneUtils.addMesh(a,b,1,0,-f,0,-g,0,h,new THREE.MeshBasicMaterial({map:new THREE.Texture(e[3])}))}},ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertex_shader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main(void) {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tNormal:{type:"t",value:2,texture:null},tAO:{type:"t",value:3,texture:null},uNormalScale:{type:"f",value:1},tDisplacement:{type:"t",value:4,texture:null},uDisplacementBias:{type:"f",value:-0.5},uDisplacementScale:{type:"f",value:2.5},uPointLightPos:{type:"v3",value:new THREE.Vector3},uPointLightColor:{type:"c",value:new THREE.Color(15658734)},uDirLightPos:{type:"v3",value:new THREE.Vector3},
uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30}},fragment_shader:"uniform vec3 uDirLightPos;\nuniform vec3 uAmbientLightColor;\nuniform vec3 uDirLightColor;\nuniform vec3 uPointLightColor;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform bool enableDiffuse;\nuniform bool enableAO;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tAO;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 diffuseTex = vec3( 1.0, 1.0, 1.0 );\nvec3 aoTex = vec3( 1.0, 1.0, 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse )\ndiffuseTex = texture2D( tDiffuse, vUv ).xyz;\nif( enableAO )\naoTex = texture2D( tAO, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec3 pointVector = normalize( vPointLightVector );\nvec3 pointHalfVector = normalize( vPointLightVector + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, uShininess );\npointDiffuse  += vec4( uDiffuseColor, 1.0 ) * pointDiffuseWeight;\npointSpecular += vec4( uSpecularColor, 1.0 ) * pointSpecularWeight;\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 lDirection = viewMatrix * vec4( uDirLightPos, 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, uShininess );\ndirDiffuse  += vec4( uDiffuseColor, 1.0 ) * dirDiffuseWeight;\ndirSpecular += vec4( uSpecularColor, 1.0 ) * dirSpecularWeight;\nvec4 totalLight = vec4( uAmbientLightColor * uAmbientColor, 1.0 );\ntotalLight += vec4( uDirLightColor, 1.0 ) * ( dirDiffuse + dirSpecular );\ntotalLight += vec4( uPointLightColor, 1.0 ) * ( pointDiffuse + pointSpecular );\ngl_FragColor = vec4( totalLight.xyz * aoTex * diffuseTex, 1.0 );\n}",
vertex_shader:"attribute vec4 tangent;\nuniform vec3 uPointLightPos;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec4 lPosition = viewMatrix * vec4( uPointLightPos, 1.0 );\nvPointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}"},
basic:{uniforms:{},vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"void main() {\ngl_FragColor = vec4(1.0, 0.0, 0.0, 0.5);\n}"},cube:{uniforms:{tCube:{type:"t",value:1,texture:null}},vertex_shader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( - wPos.x, wPos.yz ) );\n}"}}},Cube=function(a,b,e,f,g,h,j,c){function i(A,L,q,G,d,k,n,t){var s,x,v=f||1,p=g||1,F=v+1,z=p+1,m=d/2,B=k/2;d=d/v;var P=k/p,J=l.vertices.length;if(A=="x"&&L=="y"||A=="y"&&L=="x")s="z";else if(A=="x"&&L=="z"||A=="z"&&L=="x")s="y";else if(A=="z"&&L=="y"||A=="y"&&L=="z")s="x";for(x=0;x<z;x++)for(k=0;k<
F;k++){var Q=new THREE.Vector3;Q[A]=(k*d-m)*q;Q[L]=(x*P-B)*G;Q[s]=n;l.vertices.push(new THREE.Vertex(Q))}for(x=0;x<p;x++)for(k=0;k<v;k++){l.faces.push(new THREE.Face4(k+F*x+J,k+F*(x+1)+J,k+1+F*(x+1)+J,k+1+F*x+J,null,t));l.uvs.push([new THREE.UV(k/v,x/p),new THREE.UV(k/v,(x+1)/p),new THREE.UV((k+1)/v,(x+1)/p),new THREE.UV((k+1)/v,x/p)])}}THREE.Geometry.call(this);var l=this,u=a/2,C=b/2,o=e/2;j=j?-1:1;if(h!==undefined)if(h instanceof Array)this.materials=h;else{this.materials=[];for(var w=0;w<6;w++)this.materials.push([h])}else this.materials=
[];this.sides={px:true,nx:true,py:true,ny:true,pz:true,nz:true};if(c!=undefined)for(var y in c)if(this.sides[y]!=undefined)this.sides[y]=c[y];this.sides.px&&i("z","y",1*j,-1,e,b,-u,this.materials[0]);this.sides.nx&&i("z","y",-1*j,-1,e,b,u,this.materials[1]);this.sides.py&&i("x","z",1*j,1,a,e,C,this.materials[2]);this.sides.ny&&i("x","z",1*j,-1,a,e,-C,this.materials[3]);this.sides.pz&&i("x","y",1*j,-1,a,b,o,this.materials[4]);this.sides.nz&&i("x","y",-1*j,-1,a,b,-o,this.materials[5]);(function(){for(var A=
[],L=[],q=0,G=l.vertices.length;q<G;q++){for(var d=l.vertices[q],k=false,n=0,t=A.length;n<t;n++){var s=A[n];if(d.position.x==s.position.x&&d.position.y==s.position.y&&d.position.z==s.position.z){L[q]=n;k=true;break}}if(!k){L[q]=A.length;A.push(new THREE.Vertex(d.position.clone()))}}q=0;for(G=l.faces.length;q<G;q++){d=l.faces[q];d.a=L[d.a];d.b=L[d.b];d.c=L[d.c];d.d=L[d.d]}l.vertices=A})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cube.prototype=new THREE.Geometry;
Cube.prototype.constructor=Cube;
var Cylinder=function(a,b,e,f,g){function h(l,u,C){j.vertices.push(new THREE.Vertex(new THREE.Vector3(l,u,C)))}THREE.Geometry.call(this);var j=this,c=Math.PI,i;for(i=0;i<a;i++)h(Math.sin(2*c*i/a)*b,Math.cos(2*c*i/a)*b,0);for(i=0;i<a;i++)h(Math.sin(2*c*i/a)*e,Math.cos(2*c*i/a)*e,f);for(i=0;i<a;i++)j.faces.push(new THREE.Face4(i,i+a,a+(i+1)%a,(i+1)%a));if(e!=0){h(0,0,-g);for(i=a;i<a+a/2;i++)j.faces.push(new THREE.Face4(2*a,(2*i-2*a)%a,(2*i-2*a+1)%a,(2*i-2*a+2)%a))}if(b!=0){h(0,0,f+g);for(i=a+a/2;i<
2*a;i++)j.faces.push(new THREE.Face4((2*i-2*a+2)%a+a,(2*i-2*a+1)%a+a,(2*i-2*a)%a+a,2*a+1))}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cylinder.prototype=new THREE.Geometry;Cylinder.prototype.constructor=Cylinder;
var Plane=function(a,b,e,f){THREE.Geometry.call(this);var g,h=a/2,j=b/2;e=e||1;f=f||1;var c=e+1,i=f+1;a=a/e;var l=b/f;for(g=0;g<i;g++)for(b=0;b<c;b++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(b*a-h,-(g*l-j),0)));for(g=0;g<f;g++)for(b=0;b<e;b++){this.faces.push(new THREE.Face4(b+c*g,b+c*(g+1),b+1+c*(g+1),b+1+c*g));this.uvs.push([new THREE.UV(b/e,g/f),new THREE.UV(b/e,(g+1)/f),new THREE.UV((b+1)/e,(g+1)/f),new THREE.UV((b+1)/e,g/f)])}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};
Plane.prototype=new THREE.Geometry;Plane.prototype.constructor=Plane;
var Sphere=function(a,b,e){THREE.Geometry.call(this);var f,g=Math.PI,h=Math.max(3,b||8),j=Math.max(2,e||6);b=[];for(e=0;e<j+1;e++){f=e/j;var c=a*Math.cos(f*g),i=a*Math.sin(f*g),l=[],u=0;for(f=0;f<h;f++){var C=2*f/h,o=i*Math.sin(C*g);C=i*Math.cos(C*g);(e==0||e==j)&&f>0||(u=this.vertices.push(new THREE.Vertex(new THREE.Vector3(C,c,o)))-1);l.push(u)}b.push(l)}var w,y,A;g=b.length;for(e=0;e<g;e++){h=b[e].length;if(e>0)for(f=0;f<h;f++){l=f==h-1;j=b[e][l?0:f+1];c=b[e][l?h-1:f];i=b[e-1][l?h-1:f];l=b[e-1][l?
0:f+1];o=e/(g-1);w=(e-1)/(g-1);y=(f+1)/h;C=f/h;u=new THREE.UV(1-y,o);o=new THREE.UV(1-C,o);C=new THREE.UV(1-C,w);var L=new THREE.UV(1-y,w);if(e<b.length-1){w=this.vertices[j].position.clone();y=this.vertices[c].position.clone();A=this.vertices[i].position.clone();w.normalize();y.normalize();A.normalize();this.faces.push(new THREE.Face3(j,c,i,[new THREE.Vector3(w.x,w.y,w.z),new THREE.Vector3(y.x,y.y,y.z),new THREE.Vector3(A.x,A.y,A.z)]));this.uvs.push([u,o,C])}if(e>1){w=this.vertices[j].position.clone();
y=this.vertices[i].position.clone();A=this.vertices[l].position.clone();w.normalize();y.normalize();A.normalize();this.faces.push(new THREE.Face3(j,i,l,[new THREE.Vector3(w.x,w.y,w.z),new THREE.Vector3(y.x,y.y,y.z),new THREE.Vector3(A.x,A.y,A.z)]));this.uvs.push([u,C,L])}}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial();this.boundingSphere={radius:a}};Sphere.prototype=new THREE.Geometry;Sphere.prototype.constructor=Sphere;
THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?this.addStatusElement():null};
THREE.Loader.prototype={addStatusElement:function(){var a=document.createElement("div");a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="#b00";a.style.color="#fff";a.style.width="140px";a.style.padding="0.25em 0.25em 0.25em 0.5em";a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ";b+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1E3).toFixed(2)+" KB";this.statusDomElement.innerHTML=
b},loadAsciiOld:function(a,b){var e=document.createElement("script");e.type="text/javascript";e.onload=b;e.src=a;document.getElementsByTagName("head")[0].appendChild(e)},loadAscii:function(a){var b=a.model,e=a.callback,f=a.texture_path?a.texture_path:THREE.Loader.prototype.extractUrlbase(b);a=(new Date).getTime();b=new Worker(b);b.onmessage=function(g){THREE.Loader.prototype.createModel(g.data,e,f)};b.postMessage(a)},loadBinary:function(a){var b=a.model,e=a.callback,f=a.texture_path?a.texture_path:
THREE.Loader.prototype.extractUrlbase(b),g=a.bin_path?a.bin_path:THREE.Loader.prototype.extractUrlbase(b);a=(new Date).getTime();b=new Worker(b);var h=this.showProgress?THREE.Loader.prototype.updateProgress:null;b.onmessage=function(j){THREE.Loader.prototype.loadAjaxBuffers(j.data.buffers,j.data.materials,e,g,f,h)};b.onerror=function(j){alert("worker.onerror: "+j.message+"\n"+j.data);j.preventDefault()};b.postMessage(a)},loadAjaxBuffers:function(a,b,e,f,g,h){var j=new XMLHttpRequest,c=f+"/"+a,i=0;
j.onreadystatechange=function(){if(j.readyState==4)j.status==200||j.status==0?THREE.Loader.prototype.createBinModel(j.responseText,e,g,b):alert("Couldn't load ["+c+"] ["+j.status+"]");else if(j.readyState==3){if(h){if(i==0)i=j.getResponseHeader("Content-Length");h({total:i,loaded:j.responseText.length})}}else if(j.readyState==2)i=j.getResponseHeader("Content-Length")};j.open("GET",c,true);j.overrideMimeType("text/plain; charset=x-user-defined");j.setRequestHeader("Content-Type","text/plain");j.send(null)},
createBinModel:function(a,b,e,f){var g=function(h){function j(r,D){var H=u(r,D),R=u(r,D+1),Y=u(r,D+2),ja=u(r,D+3),fa=(ja<<1&255|Y>>7)-127;H=(Y&127)<<16|R<<8|H;if(H==0&&fa==-127)return 0;return(1-2*(ja>>7))*(1+H*Math.pow(2,-23))*Math.pow(2,fa)}function c(r,D){var H=u(r,D),R=u(r,D+1),Y=u(r,D+2);return(u(r,D+3)<<24)+(Y<<16)+(R<<8)+H}function i(r,D){var H=u(r,D);return(u(r,D+1)<<8)+H}function l(r,D){var H=u(r,D);return H>127?H-256:H}function u(r,D){return r.charCodeAt(D)&255}function C(r){var D,H,R;D=
c(a,r);H=c(a,r+t);R=c(a,r+s);r=i(a,r+x);THREE.Loader.prototype.f3(q,D,H,R,r)}function o(r){var D,H,R,Y,ja,fa;D=c(a,r);H=c(a,r+t);R=c(a,r+s);Y=i(a,r+x);ja=c(a,r+v);fa=c(a,r+p);r=c(a,r+F);THREE.Loader.prototype.f3n(q,k,D,H,R,Y,ja,fa,r)}function w(r){var D,H,R,Y;D=c(a,r);H=c(a,r+z);R=c(a,r+m);Y=c(a,r+B);r=i(a,r+P);THREE.Loader.prototype.f4(q,D,H,R,Y,r)}function y(r){var D,H,R,Y,ja,fa,na,ta;D=c(a,r);H=c(a,r+z);R=c(a,r+m);Y=c(a,r+B);ja=i(a,r+P);fa=c(a,r+J);na=c(a,r+Q);ta=c(a,r+U);r=c(a,r+T);THREE.Loader.prototype.f4n(q,
k,D,H,R,Y,ja,fa,na,ta,r)}function A(r){var D,H;D=c(a,r);H=c(a,r+V);r=c(a,r+$);THREE.Loader.prototype.uv3(q,n[D*2],n[D*2+1],n[H*2],n[H*2+1],n[r*2],n[r*2+1])}function L(r){var D,H,R;D=c(a,r);H=c(a,r+S);R=c(a,r+O);r=c(a,r+X);THREE.Loader.prototype.uv4(q,n[D*2],n[D*2+1],n[H*2],n[H*2+1],n[R*2],n[R*2+1],n[r*2],n[r*2+1])}var q=this,G=0,d,k=[],n=[],t,s,x,v,p,F,z,m,B,P,J,Q,U,T,V,$,S,O,X,N,E,M,aa,ea,ba;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(q,f,h);d={signature:a.substr(G,8),header_bytes:u(a,
G+8),vertex_coordinate_bytes:u(a,G+9),normal_coordinate_bytes:u(a,G+10),uv_coordinate_bytes:u(a,G+11),vertex_index_bytes:u(a,G+12),normal_index_bytes:u(a,G+13),uv_index_bytes:u(a,G+14),material_index_bytes:u(a,G+15),nvertices:c(a,G+16),nnormals:c(a,G+16+4),nuvs:c(a,G+16+8),ntri_flat:c(a,G+16+12),ntri_smooth:c(a,G+16+16),ntri_flat_uv:c(a,G+16+20),ntri_smooth_uv:c(a,G+16+24),nquad_flat:c(a,G+16+28),nquad_smooth:c(a,G+16+32),nquad_flat_uv:c(a,G+16+36),nquad_smooth_uv:c(a,G+16+40)};G+=d.header_bytes;
t=d.vertex_index_bytes;s=d.vertex_index_bytes*2;x=d.vertex_index_bytes*3;v=d.vertex_index_bytes*3+d.material_index_bytes;p=d.vertex_index_bytes*3+d.material_index_bytes+d.normal_index_bytes;F=d.vertex_index_bytes*3+d.material_index_bytes+d.normal_index_bytes*2;z=d.vertex_index_bytes;m=d.vertex_index_bytes*2;B=d.vertex_index_bytes*3;P=d.vertex_index_bytes*4;J=d.vertex_index_bytes*4+d.material_index_bytes;Q=d.vertex_index_bytes*4+d.material_index_bytes+d.normal_index_bytes;U=d.vertex_index_bytes*4+
d.material_index_bytes+d.normal_index_bytes*2;T=d.vertex_index_bytes*4+d.material_index_bytes+d.normal_index_bytes*3;V=d.uv_index_bytes;$=d.uv_index_bytes*2;S=d.uv_index_bytes;O=d.uv_index_bytes*2;X=d.uv_index_bytes*3;h=d.vertex_index_bytes*3+d.material_index_bytes;ba=d.vertex_index_bytes*4+d.material_index_bytes;N=d.ntri_flat*h;E=d.ntri_smooth*(h+d.normal_index_bytes*3);M=d.ntri_flat_uv*(h+d.uv_index_bytes*3);aa=d.ntri_smooth_uv*(h+d.normal_index_bytes*3+d.uv_index_bytes*3);ea=d.nquad_flat*ba;h=
d.nquad_smooth*(ba+d.normal_index_bytes*4);ba=d.nquad_flat_uv*(ba+d.uv_index_bytes*4);G+=function(r){var D,H,R,Y=d.vertex_coordinate_bytes*3,ja=r+d.nvertices*Y;for(r=r;r<ja;r+=Y){D=j(a,r);H=j(a,r+d.vertex_coordinate_bytes);R=j(a,r+d.vertex_coordinate_bytes*2);THREE.Loader.prototype.v(q,D,H,R)}return d.nvertices*Y}(G);G+=function(r){var D,H,R,Y=d.normal_coordinate_bytes*3,ja=r+d.nnormals*Y;for(r=r;r<ja;r+=Y){D=l(a,r);H=l(a,r+d.normal_coordinate_bytes);R=l(a,r+d.normal_coordinate_bytes*2);k.push(D/
127,H/127,R/127)}return d.nnormals*Y}(G);G+=function(r){var D,H,R=d.uv_coordinate_bytes*2,Y=r+d.nuvs*R;for(r=r;r<Y;r+=R){D=j(a,r);H=j(a,r+d.uv_coordinate_bytes);n.push(D,H)}return d.nuvs*R}(G);G=G;N=G+N;E=N+E;M=E+M;aa=M+aa;ea=aa+ea;h=ea+h;ba=h+ba;(function(r){var D,H=d.vertex_index_bytes*3+d.material_index_bytes,R=H+d.uv_index_bytes*3,Y=r+d.ntri_flat_uv*R;for(D=r;D<Y;D+=R){C(D);A(D+H)}return Y-r})(E);(function(r){var D,H=d.vertex_index_bytes*3+d.material_index_bytes+d.normal_index_bytes*3,R=H+d.uv_index_bytes*
3,Y=r+d.ntri_smooth_uv*R;for(D=r;D<Y;D+=R){o(D);A(D+H)}return Y-r})(M);(function(r){var D,H=d.vertex_index_bytes*4+d.material_index_bytes,R=H+d.uv_index_bytes*4,Y=r+d.nquad_flat_uv*R;for(D=r;D<Y;D+=R){w(D);L(D+H)}return Y-r})(h);(function(r){var D,H=d.vertex_index_bytes*4+d.material_index_bytes+d.normal_index_bytes*4,R=H+d.uv_index_bytes*4,Y=r+d.nquad_smooth_uv*R;for(D=r;D<Y;D+=R){y(D);L(D+H)}return Y-r})(ba);(function(r){var D,H=d.vertex_index_bytes*3+d.material_index_bytes,R=r+d.ntri_flat*H;for(D=
r;D<R;D+=H)C(D);return R-r})(G);(function(r){var D,H=d.vertex_index_bytes*3+d.material_index_bytes+d.normal_index_bytes*3,R=r+d.ntri_smooth*H;for(D=r;D<R;D+=H)o(D);return R-r})(N);(function(r){var D,H=d.vertex_index_bytes*4+d.material_index_bytes,R=r+d.nquad_flat*H;for(D=r;D<R;D+=H)w(D);return R-r})(aa);(function(r){var D,H=d.vertex_index_bytes*4+d.material_index_bytes+d.normal_index_bytes*4,R=r+d.nquad_smooth*H;for(D=r;D<R;D+=H)y(D);return R-r})(ea);this.computeCentroids();this.computeFaceNormals();
this.sortFacesByMaterial()};g.prototype=new THREE.Geometry;g.prototype.constructor=g;b(new g(e))},createModel:function(a,b,e){var f=function(g){var h=this;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(h,a.materials,g);(function(){var j,c,i,l,u;j=0;for(c=a.vertices.length;j<c;j+=3){i=a.vertices[j];l=a.vertices[j+1];u=a.vertices[j+2];THREE.Loader.prototype.v(h,i,l,u)}})();(function(){function j(y,A){THREE.Loader.prototype.f3(h,y[A],y[A+1],y[A+2],y[A+3])}function c(y,A){THREE.Loader.prototype.f3n(h,
a.normals,y[A],y[A+1],y[A+2],y[A+3],y[A+4],y[A+5],y[A+6])}function i(y,A){THREE.Loader.prototype.f4(h,y[A],y[A+1],y[A+2],y[A+3],y[A+4])}function l(y,A){THREE.Loader.prototype.f4n(h,a.normals,y[A],y[A+1],y[A+2],y[A+3],y[A+4],y[A+5],y[A+6],y[A+7],y[A+8])}function u(y,A){var L,q,G;L=y[A];q=y[A+1];G=y[A+2];THREE.Loader.prototype.uv3(h,a.uvs[L*2],a.uvs[L*2+1],a.uvs[q*2],a.uvs[q*2+1],a.uvs[G*2],a.uvs[G*2+1])}function C(y,A){var L,q,G,d;L=y[A];q=y[A+1];G=y[A+2];d=y[A+3];THREE.Loader.prototype.uv4(h,a.uvs[L*
2],a.uvs[L*2+1],a.uvs[q*2],a.uvs[q*2+1],a.uvs[G*2],a.uvs[G*2+1],a.uvs[d*2],a.uvs[d*2+1])}var o,w;o=0;for(w=a.triangles_uv.length;o<w;o+=7){j(a.triangles_uv,o);u(a.triangles_uv,o+4)}o=0;for(w=a.triangles_n_uv.length;o<w;o+=10){c(a.triangles_n_uv,o);u(a.triangles_n_uv,o+7)}o=0;for(w=a.quads_uv.length;o<w;o+=9){i(a.quads_uv,o);C(a.quads_uv,o+5)}o=0;for(w=a.quads_n_uv.length;o<w;o+=13){l(a.quads_n_uv,o);C(a.quads_n_uv,o+9)}o=0;for(w=a.triangles.length;o<w;o+=4)j(a.triangles,o);o=0;for(w=a.triangles_n.length;o<
w;o+=7)c(a.triangles_n,o);o=0;for(w=a.quads.length;o<w;o+=5)i(a.quads,o);o=0;for(w=a.quads_n.length;o<w;o+=9)l(a.quads_n,o)})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};f.prototype=new THREE.Geometry;f.prototype.constructor=f;b(new f(e))},v:function(a,b,e,f){a.vertices.push(new THREE.Vertex(new THREE.Vector3(b,e,f)))},f3:function(a,b,e,f,g){a.faces.push(new THREE.Face3(b,e,f,null,a.materials[g]))},f4:function(a,b,e,f,g,h){a.faces.push(new THREE.Face4(b,e,f,g,null,
a.materials[h]))},f3n:function(a,b,e,f,g,h,j,c,i){h=a.materials[h];var l=b[c*3],u=b[c*3+1];c=b[c*3+2];var C=b[i*3],o=b[i*3+1];i=b[i*3+2];a.faces.push(new THREE.Face3(e,f,g,[new THREE.Vector3(b[j*3],b[j*3+1],b[j*3+2]),new THREE.Vector3(l,u,c),new THREE.Vector3(C,o,i)],h))},f4n:function(a,b,e,f,g,h,j,c,i,l,u){j=a.materials[j];var C=b[i*3],o=b[i*3+1];i=b[i*3+2];var w=b[l*3],y=b[l*3+1];l=b[l*3+2];var A=b[u*3],L=b[u*3+1];u=b[u*3+2];a.faces.push(new THREE.Face4(e,f,g,h,[new THREE.Vector3(b[c*3],b[c*3+1],
b[c*3+2]),new THREE.Vector3(C,o,i),new THREE.Vector3(w,y,l),new THREE.Vector3(A,L,u)],j))},uv3:function(a,b,e,f,g,h,j){var c=[];c.push(new THREE.UV(b,e));c.push(new THREE.UV(f,g));c.push(new THREE.UV(h,j));a.uvs.push(c)},uv4:function(a,b,e,f,g,h,j,c,i){var l=[];l.push(new THREE.UV(b,e));l.push(new THREE.UV(f,g));l.push(new THREE.UV(h,j));l.push(new THREE.UV(c,i));a.uvs.push(l)},init_materials:function(a,b,e){a.materials=[];for(var f=0;f<b.length;++f)a.materials[f]=[THREE.Loader.prototype.createMaterial(b[f],
e)]},createMaterial:function(a,b){function e(h){h=Math.log(h)/Math.LN2;return Math.floor(h)==h}var f,g;if(a.map_diffuse&&b){g=document.createElement("canvas");f=new THREE.MeshLambertMaterial({map:new THREE.Texture(g)});g=new Image;g.onload=function(){if(!e(this.width)||!e(this.height)){var h=Math.pow(2,Math.round(Math.log(this.width)/Math.LN2)),j=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));f.map.image.width=h;f.map.image.height=j;f.map.image.getContext("2d").drawImage(this,0,0,h,j)}else f.map.image=
this;f.map.image.loaded=1};g.src=b+"/"+a.map_diffuse}else if(a.col_diffuse){g=(a.col_diffuse[0]*255<<16)+(a.col_diffuse[1]*255<<8)+a.col_diffuse[2]*255;f=new THREE.MeshLambertMaterial({color:g,opacity:a.transparency})}else f=a.a_dbg_color?new THREE.MeshLambertMaterial({color:a.a_dbg_color}):new THREE.MeshLambertMaterial({color:15658734});return f},extractUrlbase:function(a){a=a.split("/");a.pop();return a.join("/")}};
