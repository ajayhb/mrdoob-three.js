// ThreeExtras.js r31 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,c,f){this.r=a;this.g=c;this.b=f;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+
","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,c){this.x=a||0;this.y=c||0};
THREE.Vector2.prototype={set:function(a,c){this.x=a;this.y=c;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,c,f){this.x=a||0;this.y=c||0;this.z=f||0};
THREE.Vector3.prototype={set:function(a,c,f){this.x=a;this.y=c;this.z=f;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,c){this.x=a.y*c.z-a.z*c.y;this.y=a.z*c.x-a.x*c.z;this.z=a.x*c.y-a.y*c.x;return this},crossSelf:function(a){var c=this.x,f=this.y,e=this.z;this.x=f*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-f*a.x;return this},multiply:function(a,c){this.x=a.x*c.x;this.y=a.y*c.y;this.z=a.z*c.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=
a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var c=this.x-a.x,f=this.y-a.y;a=this.z-a.z;return Math.sqrt(c*c+f*f+a*a)},distanceToSquared:function(a){var c=this.x-a.x,f=this.y-a.y;a=this.z-a.z;return c*c+f*f+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=
Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,c,f,e){this.x=a||0;this.y=c||0;this.z=f||0;this.w=e||1};
THREE.Vector4.prototype={set:function(a,c,f,e){this.x=a;this.y=c;this.z=f;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;this.w=a.w+c.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;this.w=a.w-c.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,c){this.x+=(a.x-this.x)*c;this.y+=(a.y-this.y)*c;this.z+=(a.z-this.z)*c;this.w+=(a.w-this.w)*c},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,c){this.origin=a||new THREE.Vector3;this.direction=c||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var c,f,e=a.objects,h=[];a=0;for(c=e.length;a<c;a++){f=e[a];if(f instanceof THREE.Mesh)h=h.concat(this.intersectObject(f))}h.sort(function(i,m){return i.distance-m.distance});return h},intersectObject:function(a){function c(O,x,E,p){p=p.clone().subSelf(x);E=E.clone().subSelf(x);var J=O.clone().subSelf(x);O=p.dot(p);x=p.dot(E);p=p.dot(J);var N=E.dot(E);E=E.dot(J);J=1/(O*N-x*x);N=(N*p-x*E)*J;O=(O*E-x*p)*J;return N>0&&O>0&&N+O<1}var f,e,h,i,m,k,j,o,z,d,
w,A=a.geometry,B=A.vertices,C=[];f=0;for(e=A.faces.length;f<e;f++){h=A.faces[f];d=this.origin.clone();w=this.direction.clone();i=a.matrix.multiplyVector3(B[h.a].position.clone());m=a.matrix.multiplyVector3(B[h.b].position.clone());k=a.matrix.multiplyVector3(B[h.c].position.clone());j=h instanceof THREE.Face4?a.matrix.multiplyVector3(B[h.d].position.clone()):null;o=a.rotationMatrix.multiplyVector3(h.normal.clone());z=w.dot(o);if(z<0){o=o.dot((new THREE.Vector3).sub(i,d))/z;d=d.addSelf(w.multiplyScalar(o));
if(h instanceof THREE.Face3){if(c(d,i,m,k)){h={distance:this.origin.distanceTo(d),point:d,face:h,object:a};C.push(h)}}else if(h instanceof THREE.Face4)if(c(d,i,m,j)||c(d,m,k,j)){h={distance:this.origin.distanceTo(d),point:d,face:h,object:a};C.push(h)}}}return C}};
THREE.Rectangle=function(){function a(){i=e-c;m=h-f}var c,f,e,h,i,m,k=true;this.getX=function(){return c};this.getY=function(){return f};this.getWidth=function(){return i};this.getHeight=function(){return m};this.getLeft=function(){return c};this.getTop=function(){return f};this.getRight=function(){return e};this.getBottom=function(){return h};this.set=function(j,o,z,d){k=false;c=j;f=o;e=z;h=d;a()};this.addPoint=function(j,o){if(k){k=false;c=j;f=o;e=j;h=o}else{c=c<j?c:j;f=f<o?f:o;e=e>j?e:j;h=h>o?
h:o}a()};this.add3Points=function(j,o,z,d,w,A){if(k){k=false;c=j<z?j<w?j:w:z<w?z:w;f=o<d?o<A?o:A:d<A?d:A;e=j>z?j>w?j:w:z>w?z:w;h=o>d?o>A?o:A:d>A?d:A}else{c=j<z?j<w?j<c?j:c:w<c?w:c:z<w?z<c?z:c:w<c?w:c;f=o<d?o<A?o<f?o:f:A<f?A:f:d<A?d<f?d:f:A<f?A:f;e=j>z?j>w?j>e?j:e:w>e?w:e:z>w?z>e?z:e:w>e?w:e;h=o>d?o>A?o>h?o:h:A>h?A:h:d>A?d>h?d:h:A>h?A:h}a()};this.addRectangle=function(j){if(k){k=false;c=j.getLeft();f=j.getTop();e=j.getRight();h=j.getBottom()}else{c=c<j.getLeft()?c:j.getLeft();f=f<j.getTop()?f:j.getTop();
e=e>j.getRight()?e:j.getRight();h=h>j.getBottom()?h:j.getBottom()}a()};this.inflate=function(j){c-=j;f-=j;e+=j;h+=j;a()};this.minSelf=function(j){c=c>j.getLeft()?c:j.getLeft();f=f>j.getTop()?f:j.getTop();e=e<j.getRight()?e:j.getRight();h=h<j.getBottom()?h:j.getBottom();a()};this.instersects=function(j){return Math.min(e,j.getRight())-Math.max(c,j.getLeft())>=0&&Math.min(h,j.getBottom())-Math.max(f,j.getTop())>=0};this.empty=function(){k=true;h=e=f=c=0;a()};this.isEmpty=function(){return k};this.toString=
function(){return"THREE.Rectangle ( left: "+c+", right: "+e+", top: "+f+", bottom: "+h+", width: "+i+", height: "+m+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a;a=this.m[1];this.m[1]=this.m[3];this.m[3]=a;a=this.m[2];this.m[2]=this.m[6];this.m[6]=a;a=this.m[5];this.m[5]=this.m[7];this.m[7]=a;return this}};
THREE.Matrix4=function(a,c,f,e,h,i,m,k,j,o,z,d,w,A,B,C){this.n11=a||1;this.n12=c||0;this.n13=f||0;this.n14=e||0;this.n21=h||0;this.n22=i||1;this.n23=m||0;this.n24=k||0;this.n31=j||0;this.n32=o||0;this.n33=z||1;this.n34=d||0;this.n41=w||0;this.n42=A||0;this.n43=B||0;this.n44=C||1};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,c,f,e,h,i,m,k,j,o,z,d,w,A,B,C){this.n11=a;this.n12=c;this.n13=f;this.n14=e;this.n21=h;this.n22=i;this.n23=m;this.n24=k;this.n31=j;this.n32=o;this.n33=z;this.n34=d;this.n41=w;this.n42=A;this.n43=B;this.n44=C;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,c,f){var e=new THREE.Vector3,h=new THREE.Vector3,i=new THREE.Vector3;i.sub(a,c).normalize();e.cross(f,i).normalize();h.cross(i,e).normalize();this.n11=e.x;this.n12=e.y;this.n13=e.z;this.n14=-e.dot(a);this.n21=h.x;this.n22=h.y;this.n23=h.z;this.n24=-h.dot(a);this.n31=i.x;
this.n32=i.y;this.n33=i.z;this.n34=-i.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var c=a.x,f=a.y,e=a.z,h=1/(this.n41*c+this.n42*f+this.n43*e+this.n44);a.x=(this.n11*c+this.n12*f+this.n13*e+this.n14)*h;a.y=(this.n21*c+this.n22*f+this.n23*e+this.n24)*h;a.z=(this.n31*c+this.n32*f+this.n33*e+this.n34)*h;return a},multiplyVector4:function(a){var c=a.x,f=a.y,e=a.z,h=a.w;a.x=this.n11*c+this.n12*f+this.n13*e+this.n14*h;a.y=this.n21*c+this.n22*f+this.n23*e+this.n24*
h;a.z=this.n31*c+this.n32*f+this.n33*e+this.n34*h;a.w=this.n41*c+this.n42*f+this.n43*e+this.n44*h;return a},crossVector:function(a){var c=new THREE.Vector4;c.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;c.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;c.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;c.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return c},multiply:function(a,c){var f=a.n11,e=a.n12,h=a.n13,i=a.n14,m=a.n21,k=a.n22,j=a.n23,o=a.n24,z=a.n31,d=a.n32,
w=a.n33,A=a.n34,B=a.n41,C=a.n42,O=a.n43,x=a.n44,E=c.n11,p=c.n12,J=c.n13,N=c.n14,Z=c.n21,T=c.n22,K=c.n23,l=c.n24,q=c.n31,v=c.n32,n=c.n33,s=c.n34,u=c.n41,H=c.n42,F=c.n43,Q=c.n44;this.n11=f*E+e*Z+h*q+i*u;this.n12=f*p+e*T+h*v+i*H;this.n13=f*J+e*K+h*n+i*F;this.n14=f*N+e*l+h*s+i*Q;this.n21=m*E+k*Z+j*q+o*u;this.n22=m*p+k*T+j*v+o*H;this.n23=m*J+k*K+j*n+o*F;this.n24=m*N+k*l+j*s+o*Q;this.n31=z*E+d*Z+w*q+A*u;this.n32=z*p+d*T+w*v+A*H;this.n33=z*J+d*K+w*n+A*F;this.n34=z*N+d*l+w*s+A*Q;this.n41=B*E+C*Z+O*q+x*u;
this.n42=B*p+C*T+O*v+x*H;this.n43=B*J+C*K+O*n+x*F;this.n44=B*N+C*l+O*s+x*Q;return this},multiplySelf:function(a){var c=this.n11,f=this.n12,e=this.n13,h=this.n14,i=this.n21,m=this.n22,k=this.n23,j=this.n24,o=this.n31,z=this.n32,d=this.n33,w=this.n34,A=this.n41,B=this.n42,C=this.n43,O=this.n44,x=a.n11,E=a.n21,p=a.n31,J=a.n41,N=a.n12,Z=a.n22,T=a.n32,K=a.n42,l=a.n13,q=a.n23,v=a.n33,n=a.n43,s=a.n14,u=a.n24,H=a.n34;a=a.n44;this.n11=c*x+f*E+e*p+h*J;this.n12=c*N+f*Z+e*T+h*K;this.n13=c*l+f*q+e*v+h*n;this.n14=
c*s+f*u+e*H+h*a;this.n21=i*x+m*E+k*p+j*J;this.n22=i*N+m*Z+k*T+j*K;this.n23=i*l+m*q+k*v+j*n;this.n24=i*s+m*u+k*H+j*a;this.n31=o*x+z*E+d*p+w*J;this.n32=o*N+z*Z+d*T+w*K;this.n33=o*l+z*q+d*v+w*n;this.n34=o*s+z*u+d*H+w*a;this.n41=A*x+B*E+C*p+O*J;this.n42=A*N+B*Z+C*T+O*K;this.n43=A*l+B*q+C*v+O*n;this.n44=A*s+B*u+C*H+O*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=
a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){return this.n14*this.n23*this.n32*this.n41-this.n13*this.n24*this.n32*this.n41-this.n14*this.n22*this.n33*this.n41+this.n12*this.n24*this.n33*this.n41+this.n13*this.n22*this.n34*this.n41-this.n12*this.n23*this.n34*this.n41-this.n14*this.n23*this.n31*this.n42+this.n13*this.n24*this.n31*this.n42+this.n14*this.n21*this.n33*this.n42-this.n11*this.n24*this.n33*this.n42-this.n13*this.n21*this.n34*this.n42+this.n11*this.n23*this.n34*
this.n42+this.n14*this.n22*this.n31*this.n43-this.n12*this.n24*this.n31*this.n43-this.n14*this.n21*this.n32*this.n43+this.n11*this.n24*this.n32*this.n43+this.n12*this.n21*this.n34*this.n43-this.n11*this.n22*this.n34*this.n43-this.n13*this.n22*this.n31*this.n44+this.n12*this.n23*this.n31*this.n44+this.n13*this.n21*this.n32*this.n44-this.n11*this.n23*this.n32*this.n44-this.n12*this.n21*this.n33*this.n44+this.n11*this.n22*this.n33*this.n44},transpose:function(){function a(c,f,e){var h=c[f];c[f]=c[e];
c[e]=h}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){return[this.n11,this.n21,this.n31,this.n41,this.n12,
this.n22,this.n32,this.n42,this.n13,this.n23,this.n33,this.n43,this.n14,this.n24,this.n34,this.n44]},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,c,f){var e=new THREE.Matrix4;e.n14=a;e.n24=c;e.n34=f;return e};
THREE.Matrix4.scaleMatrix=function(a,c,f){var e=new THREE.Matrix4;e.n11=a;e.n22=c;e.n33=f;return e};THREE.Matrix4.rotationXMatrix=function(a){var c=new THREE.Matrix4;c.n22=c.n33=Math.cos(a);c.n32=Math.sin(a);c.n23=-c.n32;return c};THREE.Matrix4.rotationYMatrix=function(a){var c=new THREE.Matrix4;c.n11=c.n33=Math.cos(a);c.n13=Math.sin(a);c.n31=-c.n13;return c};THREE.Matrix4.rotationZMatrix=function(a){var c=new THREE.Matrix4;c.n11=c.n22=Math.cos(a);c.n21=Math.sin(a);c.n12=-c.n21;return c};
THREE.Matrix4.rotationAxisAngleMatrix=function(a,c){var f=new THREE.Matrix4,e=Math.cos(c),h=Math.sin(c),i=1-e,m=a.x,k=a.y,j=a.z;f.n11=i*m*m+e;f.n12=i*m*k-h*j;f.n13=i*m*j+h*k;f.n21=i*m*k+h*j;f.n22=i*k*k+e;f.n23=i*k*j-h*m;f.n31=i*m*j-h*k;f.n32=i*k*j+h*m;f.n33=i*j*j+e;return f};
THREE.Matrix4.makeInvert=function(a){var c=new THREE.Matrix4;c.n11=a.n23*a.n34*a.n42-a.n24*a.n33*a.n42+a.n24*a.n32*a.n43-a.n22*a.n34*a.n43-a.n23*a.n32*a.n44+a.n22*a.n33*a.n44;c.n12=a.n14*a.n33*a.n42-a.n13*a.n34*a.n42-a.n14*a.n32*a.n43+a.n12*a.n34*a.n43+a.n13*a.n32*a.n44-a.n12*a.n33*a.n44;c.n13=a.n13*a.n24*a.n42-a.n14*a.n23*a.n42+a.n14*a.n22*a.n43-a.n12*a.n24*a.n43-a.n13*a.n22*a.n44+a.n12*a.n23*a.n44;c.n14=a.n14*a.n23*a.n32-a.n13*a.n24*a.n32-a.n14*a.n22*a.n33+a.n12*a.n24*a.n33+a.n13*a.n22*a.n34-a.n12*
a.n23*a.n34;c.n21=a.n24*a.n33*a.n41-a.n23*a.n34*a.n41-a.n24*a.n31*a.n43+a.n21*a.n34*a.n43+a.n23*a.n31*a.n44-a.n21*a.n33*a.n44;c.n22=a.n13*a.n34*a.n41-a.n14*a.n33*a.n41+a.n14*a.n31*a.n43-a.n11*a.n34*a.n43-a.n13*a.n31*a.n44+a.n11*a.n33*a.n44;c.n23=a.n14*a.n23*a.n41-a.n13*a.n24*a.n41-a.n14*a.n21*a.n43+a.n11*a.n24*a.n43+a.n13*a.n21*a.n44-a.n11*a.n23*a.n44;c.n24=a.n13*a.n24*a.n31-a.n14*a.n23*a.n31+a.n14*a.n21*a.n33-a.n11*a.n24*a.n33-a.n13*a.n21*a.n34+a.n11*a.n23*a.n34;c.n31=a.n22*a.n34*a.n41-a.n24*a.n32*
a.n41+a.n24*a.n31*a.n42-a.n21*a.n34*a.n42-a.n22*a.n31*a.n44+a.n21*a.n32*a.n44;c.n32=a.n14*a.n32*a.n41-a.n12*a.n34*a.n41-a.n14*a.n31*a.n42+a.n11*a.n34*a.n42+a.n12*a.n31*a.n44-a.n11*a.n32*a.n44;c.n33=a.n13*a.n24*a.n41-a.n14*a.n22*a.n41+a.n14*a.n21*a.n42-a.n11*a.n24*a.n42-a.n12*a.n21*a.n44+a.n11*a.n22*a.n44;c.n34=a.n14*a.n22*a.n31-a.n12*a.n24*a.n31-a.n14*a.n21*a.n32+a.n11*a.n24*a.n32+a.n12*a.n21*a.n34-a.n11*a.n22*a.n34;c.n41=a.n23*a.n32*a.n41-a.n22*a.n33*a.n41-a.n23*a.n31*a.n42+a.n21*a.n33*a.n42+a.n22*
a.n31*a.n43-a.n21*a.n32*a.n43;c.n42=a.n12*a.n33*a.n41-a.n13*a.n32*a.n41+a.n13*a.n31*a.n42-a.n11*a.n33*a.n42-a.n12*a.n31*a.n43+a.n11*a.n32*a.n43;c.n43=a.n13*a.n22*a.n41-a.n12*a.n23*a.n41-a.n13*a.n21*a.n42+a.n11*a.n23*a.n42+a.n12*a.n21*a.n43-a.n11*a.n22*a.n43;c.n44=a.n12*a.n23*a.n31-a.n13*a.n22*a.n31+a.n13*a.n21*a.n32-a.n11*a.n23*a.n32-a.n12*a.n21*a.n33+a.n11*a.n22*a.n33;c.multiplyScalar(1/a.determinant());return c};
THREE.Matrix4.makeInvert3x3=function(a){var c=a.flatten();a=new THREE.Matrix3;var f=c[10]*c[5]-c[6]*c[9],e=-c[10]*c[1]+c[2]*c[9],h=c[6]*c[1]-c[2]*c[5],i=-c[10]*c[4]+c[6]*c[8],m=c[10]*c[0]-c[2]*c[8],k=-c[6]*c[0]+c[2]*c[4],j=c[9]*c[4]-c[5]*c[8],o=-c[9]*c[0]+c[1]*c[8],z=c[5]*c[0]-c[1]*c[4];c=c[0]*f+c[1]*i+c[2]*j;if(c==0)throw"matrix not invertible";c=1/c;a.m[0]=c*f;a.m[1]=c*e;a.m[2]=c*h;a.m[3]=c*i;a.m[4]=c*m;a.m[5]=c*k;a.m[6]=c*j;a.m[7]=c*o;a.m[8]=c*z;return a};
THREE.Matrix4.makeFrustum=function(a,c,f,e,h,i){var m,k,j;m=new THREE.Matrix4;k=2*h/(c-a);j=2*h/(e-f);a=(c+a)/(c-a);f=(e+f)/(e-f);e=-(i+h)/(i-h);h=-2*i*h/(i-h);m.n11=k;m.n12=0;m.n13=a;m.n14=0;m.n21=0;m.n22=j;m.n23=f;m.n24=0;m.n31=0;m.n32=0;m.n33=e;m.n34=h;m.n41=0;m.n42=0;m.n43=-1;m.n44=0;return m};THREE.Matrix4.makePerspective=function(a,c,f,e){var h;a=f*Math.tan(a*Math.PI/360);h=-a;return THREE.Matrix4.makeFrustum(h*c,a*c,h,a,f,e)};
THREE.Matrix4.makeOrtho=function(a,c,f,e,h,i){var m,k,j,o;m=new THREE.Matrix4;k=c-a;j=f-e;o=i-h;a=(c+a)/k;f=(f+e)/j;h=(i+h)/o;m.n11=2/k;m.n12=0;m.n13=0;m.n14=-a;m.n21=0;m.n22=2/j;m.n23=0;m.n24=-f;m.n31=0;m.n32=0;m.n33=-2/o;m.n34=-h;m.n41=0;m.n42=0;m.n43=0;m.n44=1;return m};
THREE.Vertex=function(a,c){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=c||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,c,f,e,h){this.a=a;this.b=c;this.c=f;this.centroid=new THREE.Vector3;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.materials=h instanceof Array?h:[h]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,c,f,e,h,i){this.a=a;this.b=c;this.c=f;this.d=e;this.centroid=new THREE.Vector3;this.normal=h instanceof THREE.Vector3?h:new THREE.Vector3;this.vertexNormals=h instanceof Array?h:[];this.materials=i instanceof Array?i:[i]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,c){this.u=a||0;this.v=c||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,c,f;a=0;for(c=this.faces.length;a<c;a++){f=this.faces[a];f.centroid.set(0,0,0);if(f instanceof THREE.Face3){f.centroid.addSelf(this.vertices[f.a].position);f.centroid.addSelf(this.vertices[f.b].position);f.centroid.addSelf(this.vertices[f.c].position);f.centroid.divideScalar(3)}else if(f instanceof THREE.Face4){f.centroid.addSelf(this.vertices[f.a].position);f.centroid.addSelf(this.vertices[f.b].position);f.centroid.addSelf(this.vertices[f.c].position);
f.centroid.addSelf(this.vertices[f.d].position);f.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var c,f,e,h,i,m,k=new THREE.Vector3,j=new THREE.Vector3;e=0;for(h=this.vertices.length;e<h;e++){i=this.vertices[e];i.normal.set(0,0,0)}e=0;for(h=this.faces.length;e<h;e++){i=this.faces[e];if(a&&i.vertexNormals.length){k.set(0,0,0);c=0;for(f=i.normal.length;c<f;c++)k.addSelf(i.vertexNormals[c]);k.divideScalar(3)}else{c=this.vertices[i.a];f=this.vertices[i.b];m=this.vertices[i.c];k.sub(m.position,
f.position);j.sub(c.position,f.position);k.crossSelf(j)}k.isZero()||k.normalize();i.normal.copy(k)}},computeVertexNormals:function(){var a,c,f=[],e;a=0;for(c=this.vertices.length;a<c;a++)f[a]=new THREE.Vector3;a=0;for(c=this.faces.length;a<c;a++){e=this.faces[a];if(e instanceof THREE.Face3){f[e.a].addSelf(e.normal);f[e.b].addSelf(e.normal);f[e.c].addSelf(e.normal)}else if(e instanceof THREE.Face4){f[e.a].addSelf(e.normal);f[e.b].addSelf(e.normal);f[e.c].addSelf(e.normal);f[e.d].addSelf(e.normal)}}a=
0;for(c=this.vertices.length;a<c;a++)f[a].normalize();a=0;for(c=this.faces.length;a<c;a++){e=this.faces[a];if(e instanceof THREE.Face3){e.vertexNormals[0]=f[e.a].clone();e.vertexNormals[1]=f[e.b].clone();e.vertexNormals[2]=f[e.c].clone()}else if(e instanceof THREE.Face4){e.vertexNormals[0]=f[e.a].clone();e.vertexNormals[1]=f[e.b].clone();e.vertexNormals[2]=f[e.c].clone();e.vertexNormals[3]=f[e.d].clone()}}},computeTangents:function(){function a(s,u,H,F,Q,R,L){i=s.vertices[u].position;m=s.vertices[H].position;
k=s.vertices[F].position;j=h[Q];o=h[R];z=h[L];d=m.x-i.x;w=k.x-i.x;A=m.y-i.y;B=k.y-i.y;C=m.z-i.z;O=k.z-i.z;x=o.u-j.u;E=z.u-j.u;p=o.v-j.v;J=z.v-j.v;N=1/(x*J-E*p);K.set((J*d-p*w)*N,(J*A-p*B)*N,(J*C-p*O)*N);l.set((x*w-E*d)*N,(x*B-E*A)*N,(x*O-E*C)*N);Z[u].addSelf(K);Z[H].addSelf(K);Z[F].addSelf(K);T[u].addSelf(l);T[H].addSelf(l);T[F].addSelf(l)}var c,f,e,h,i,m,k,j,o,z,d,w,A,B,C,O,x,E,p,J,N,Z=[],T=[],K=new THREE.Vector3,l=new THREE.Vector3,q=new THREE.Vector3,v=new THREE.Vector3,n=new THREE.Vector3;c=0;
for(f=this.vertices.length;c<f;c++){Z[c]=new THREE.Vector3;T[c]=new THREE.Vector3}c=0;for(f=this.faces.length;c<f;c++){e=this.faces[c];h=this.uvs[c];if(e instanceof THREE.Face3){a(this,e.a,e.b,e.c,0,1,2);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);this.vertices[e.c].normal.copy(e.vertexNormals[2])}else if(e instanceof THREE.Face4){a(this,e.a,e.b,e.c,0,1,2);a(this,e.a,e.b,e.d,0,1,3);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);
this.vertices[e.c].normal.copy(e.vertexNormals[2]);this.vertices[e.d].normal.copy(e.vertexNormals[3])}}c=0;for(f=this.vertices.length;c<f;c++){n.copy(this.vertices[c].normal);e=Z[c];q.copy(e);q.subSelf(n.multiplyScalar(n.dot(e))).normalize();v.cross(this.vertices[c].normal,e);e=v.dot(T[c]);e=e<0?-1:1;this.vertices[c].tangent.set(q.x,q.y,q.z,e)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],
y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var c=1,f=this.vertices.length;c<f;c++){a=this.vertices[c];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<
this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,c=0,f=this.vertices.length;c<f;c++)a=Math.max(a,this.vertices[c].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(z){var d=[];c=0;for(f=z.length;c<f;c++)z[c]==undefined?d.push("undefined"):d.push(z[c].toString());return d.join("_")}
var c,f,e,h,i,m,k,j,o={};e=0;for(h=this.faces.length;e<h;e++){i=this.faces[e];m=i.materials;k=a(m);if(o[k]==undefined)o[k]={hash:k,counter:0};j=o[k].hash+"_"+o[k].counter;if(this.geometryChunks[j]==undefined)this.geometryChunks[j]={faces:[],materials:m,vertices:0};i=i instanceof THREE.Face3?3:4;if(this.geometryChunks[j].vertices+i>65535){o[k].counter+=1;j=o[k].hash+"_"+o[k].counter;if(this.geometryChunks[j]==undefined)this.geometryChunks[j]={faces:[],materials:m,vertices:0}}this.geometryChunks[j].faces.push(e);
this.geometryChunks[j].vertices+=i}},toString:function(){return"THREE.Geometry ( vertices: "+this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,c,f,e){this.fov=a;this.aspect=c;this.near=f;this.far=e;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.translateX=function(h){h=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(h);h.cross(h.clone(),this.up);this.position.addSelf(h);this.target.position.addSelf(h)};this.translateZ=function(h){h=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(h);
this.position.subSelf(h);this.target.position.subSelf(h)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};
THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=c||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;
THREE.PointLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=c||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.translationMatrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.scaleMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){this.matrixPosition=THREE.Matrix4.translationMatrix(this.position.x,this.position.y,this.position.z);this.rotationMatrix=THREE.Matrix4.rotationXMatrix(this.rotation.x);this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationYMatrix(this.rotation.y));this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationZMatrix(this.rotation.z));this.scaleMatrix=THREE.Matrix4.scaleMatrix(this.scale.x,this.scale.y,this.scale.z);this.matrix.copy(this.matrixPosition);
this.matrix.multiplySelf(this.rotationMatrix);this.matrix.multiplySelf(this.scaleMatrix)}};THREE.Object3DCounter={value:0};THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.Line=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c]};THREE.Line.prototype=new THREE.Object3D;
THREE.Line.prototype.constructor=THREE.Line;THREE.Mesh=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+
"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=
this.wireframe_linecap="round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=
a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==
undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial"}};
THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.opacity=1;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};
THREE.Texture=function(a,c,f,e,h,i){this.image=a;this.mapping=c!==undefined?c:new THREE.UVMapping;this.wrap_s=f!==undefined?f:THREE.ClampToEdgeWrapping;this.wrap_t=e!==undefined?e:THREE.ClampToEdgeWrapping;this.mag_filter=h!==undefined?h:THREE.LinearFilter;this.min_filter=i!==undefined?i:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;var Uniforms={clone:function(a){var c,f,e,h={};for(c in a){h[c]={};for(f in a[c]){e=a[c][f];h[c][f]=e instanceof THREE.Color||e instanceof THREE.Vector3||e instanceof THREE.Texture?e.clone():e}}return h}};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};
THREE.LatitudeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,c,f){this.color=new THREE.Color(a);this.near=c||1;this.far=f||1E3};THREE.FogExp2=function(a,c){this.color=new THREE.Color(a);this.density=c||2.5E-4};
THREE.Projector=function(){function a(T,K){return K.z-T.z}function c(T,K){var l=0,q=1,v=T.z+T.w,n=K.z+K.w,s=-T.z+T.w,u=-K.z+K.w;if(v>=0&&n>=0&&s>=0&&u>=0)return true;else if(v<0&&n<0||s<0&&u<0)return false;else{if(v<0)l=Math.max(l,v/(v-n));else if(n<0)q=Math.min(q,v/(v-n));if(s<0)l=Math.max(l,s/(s-u));else if(u<0)q=Math.min(q,s/(s-u));if(q<l)return false;else{T.lerpSelf(K,l);K.lerpSelf(T,1-q);return true}}}var f,e,h=[],i,m,k,j=[],o,z,d=[],w,A,B=[],C=new THREE.Vector4,O=new THREE.Vector4,x=new THREE.Matrix4,
E=new THREE.Matrix4,p=[],J=new THREE.Vector4,N=new THREE.Vector4,Z;this.projectObjects=function(T,K,l){var q=[],v,n;e=0;x.multiply(K.projectionMatrix,K.matrix);p[0]=new THREE.Vector4(x.n41-x.n11,x.n42-x.n12,x.n43-x.n13,x.n44-x.n14);p[1]=new THREE.Vector4(x.n41+x.n11,x.n42+x.n12,x.n43+x.n13,x.n44+x.n14);p[2]=new THREE.Vector4(x.n41+x.n21,x.n42+x.n22,x.n43+x.n23,x.n44+x.n24);p[3]=new THREE.Vector4(x.n41-x.n21,x.n42-x.n22,x.n43-x.n23,x.n44-x.n24);p[4]=new THREE.Vector4(x.n41-x.n31,x.n42-x.n32,x.n43-
x.n33,x.n44-x.n34);p[5]=new THREE.Vector4(x.n41+x.n31,x.n42+x.n32,x.n43+x.n33,x.n44+x.n34);K=0;for(v=p.length;K<v;K++){n=p[K];n.divideScalar(Math.sqrt(n.x*n.x+n.y*n.y+n.z*n.z))}v=T.objects;T=0;for(K=v.length;T<K;T++){n=v[T];var s;if(!(s=!n.visible)){if(s=n instanceof THREE.Mesh){a:{s=void 0;for(var u=n.position,H=-n.geometry.boundingSphere.radius*Math.max(n.scale.x,Math.max(n.scale.y,n.scale.z)),F=0;F<6;F++){s=p[F].x*u.x+p[F].y*u.y+p[F].z*u.z+p[F].w;if(s<=H){s=false;break a}}s=true}s=!s}s=s}if(!s){f=
h[e]=h[e]||new THREE.RenderableObject;C.copy(n.position);x.multiplyVector3(C);f.object=n;f.z=C.z;q.push(f);e++}}l&&q.sort(a);return q};this.projectScene=function(T,K,l){var q=[],v=K.near,n=K.far,s,u,H,F,Q,R,L,S,X,G,P,Y,t,r,y,D;k=z=A=0;K.autoUpdateMatrix&&K.updateMatrix();x.multiply(K.projectionMatrix,K.matrix);R=this.projectObjects(T,K,true);T=0;for(s=R.length;T<s;T++){L=R[T].object;if(L.visible){L.autoUpdateMatrix&&L.updateMatrix();S=L.matrix;X=L.rotationMatrix;G=L.materials;P=L.overdraw;if(L instanceof
THREE.Mesh){Y=L.geometry;t=Y.vertices;u=0;for(H=t.length;u<H;u++){r=t[u];r.positionWorld.copy(r.position);S.multiplyVector3(r.positionWorld);F=r.positionScreen;F.copy(r.positionWorld);x.multiplyVector4(F);F.x/=F.w;F.y/=F.w;r.__visible=F.z>v&&F.z<n}Y=Y.faces;u=0;for(H=Y.length;u<H;u++){r=Y[u];if(r instanceof THREE.Face3){F=t[r.a];Q=t[r.b];y=t[r.c];if(F.__visible&&Q.__visible&&y.__visible)if(L.doubleSided||L.flipSided!=(y.positionScreen.x-F.positionScreen.x)*(Q.positionScreen.y-F.positionScreen.y)-
(y.positionScreen.y-F.positionScreen.y)*(Q.positionScreen.x-F.positionScreen.x)<0){i=j[k]=j[k]||new THREE.RenderableFace3;i.v1.positionWorld.copy(F.positionWorld);i.v2.positionWorld.copy(Q.positionWorld);i.v3.positionWorld.copy(y.positionWorld);i.v1.positionScreen.copy(F.positionScreen);i.v2.positionScreen.copy(Q.positionScreen);i.v3.positionScreen.copy(y.positionScreen);i.normalWorld.copy(r.normal);X.multiplyVector3(i.normalWorld);i.centroidWorld.copy(r.centroid);S.multiplyVector3(i.centroidWorld);
i.centroidScreen.copy(i.centroidWorld);x.multiplyVector3(i.centroidScreen);y=r.vertexNormals;Z=i.vertexNormalsWorld;F=0;for(Q=y.length;F<Q;F++){D=Z[F]=Z[F]||new THREE.Vector3;D.copy(y[F]);X.multiplyVector3(D)}i.z=i.centroidScreen.z;i.meshMaterials=G;i.faceMaterials=r.materials;i.overdraw=P;if(L.geometry.uvs[u]){i.uvs[0]=L.geometry.uvs[u][0];i.uvs[1]=L.geometry.uvs[u][1];i.uvs[2]=L.geometry.uvs[u][2]}q.push(i);k++}}else if(r instanceof THREE.Face4){F=t[r.a];Q=t[r.b];y=t[r.c];D=t[r.d];if(F.__visible&&
Q.__visible&&y.__visible&&D.__visible)if(L.doubleSided||L.flipSided!=((D.positionScreen.x-F.positionScreen.x)*(Q.positionScreen.y-F.positionScreen.y)-(D.positionScreen.y-F.positionScreen.y)*(Q.positionScreen.x-F.positionScreen.x)<0||(Q.positionScreen.x-y.positionScreen.x)*(D.positionScreen.y-y.positionScreen.y)-(Q.positionScreen.y-y.positionScreen.y)*(D.positionScreen.x-y.positionScreen.x)<0)){i=j[k]=j[k]||new THREE.RenderableFace3;i.v1.positionWorld.copy(F.positionWorld);i.v2.positionWorld.copy(Q.positionWorld);
i.v3.positionWorld.copy(D.positionWorld);i.v1.positionScreen.copy(F.positionScreen);i.v2.positionScreen.copy(Q.positionScreen);i.v3.positionScreen.copy(D.positionScreen);i.normalWorld.copy(r.normal);X.multiplyVector3(i.normalWorld);i.centroidWorld.copy(r.centroid);S.multiplyVector3(i.centroidWorld);i.centroidScreen.copy(i.centroidWorld);x.multiplyVector3(i.centroidScreen);i.z=i.centroidScreen.z;i.meshMaterials=G;i.faceMaterials=r.materials;i.overdraw=P;if(L.geometry.uvs[u]){i.uvs[0]=L.geometry.uvs[u][0];
i.uvs[1]=L.geometry.uvs[u][1];i.uvs[2]=L.geometry.uvs[u][3]}q.push(i);k++;m=j[k]=j[k]||new THREE.RenderableFace3;m.v1.positionWorld.copy(Q.positionWorld);m.v2.positionWorld.copy(y.positionWorld);m.v3.positionWorld.copy(D.positionWorld);m.v1.positionScreen.copy(Q.positionScreen);m.v2.positionScreen.copy(y.positionScreen);m.v3.positionScreen.copy(D.positionScreen);m.normalWorld.copy(i.normalWorld);m.centroidWorld.copy(i.centroidWorld);m.centroidScreen.copy(i.centroidScreen);m.z=m.centroidScreen.z;m.meshMaterials=
G;m.faceMaterials=r.materials;m.overdraw=P;if(L.geometry.uvs[u]){m.uvs[0]=L.geometry.uvs[u][1];m.uvs[1]=L.geometry.uvs[u][2];m.uvs[2]=L.geometry.uvs[u][3]}q.push(m);k++}}}}else if(L instanceof THREE.Line){E.multiply(x,S);t=L.geometry.vertices;r=t[0];r.positionScreen.copy(r.position);E.multiplyVector4(r.positionScreen);u=1;for(H=t.length;u<H;u++){F=t[u];F.positionScreen.copy(F.position);E.multiplyVector4(F.positionScreen);Q=t[u-1];J.copy(F.positionScreen);N.copy(Q.positionScreen);if(c(J,N)){J.multiplyScalar(1/
J.w);N.multiplyScalar(1/N.w);o=d[z]=d[z]||new THREE.RenderableLine;o.v1.positionScreen.copy(J);o.v2.positionScreen.copy(N);o.z=Math.max(J.z,N.z);o.materials=L.materials;q.push(o);z++}}}else if(L instanceof THREE.Particle){O.set(L.position.x,L.position.y,L.position.z,1);x.multiplyVector4(O);O.z/=O.w;if(O.z>0&&O.z<1){w=B[A]=B[A]||new THREE.RenderableParticle;w.x=O.x/O.w;w.y=O.y/O.w;w.z=O.z;w.rotation=L.rotation.z;w.scale.x=L.scale.x*Math.abs(w.x-(O.x+K.projectionMatrix.n11)/(O.w+K.projectionMatrix.n14));
w.scale.y=L.scale.y*Math.abs(w.y-(O.y+K.projectionMatrix.n22)/(O.w+K.projectionMatrix.n24));w.materials=L.materials;q.push(w);A++}}}}l&&q.sort(a);return q};this.unprojectVector=function(T,K){var l=new THREE.Matrix4;l.multiply(THREE.Matrix4.makeInvert(K.matrix),THREE.Matrix4.makeInvert(K.projectionMatrix));l.multiplyVector3(T);return T}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,c=new THREE.Projector,f,e,h,i;this.domElement=document.createElement("div");this.setSize=function(m,k){f=m;e=k;h=f/2;i=e/2};this.render=function(m,k){var j,o,z,d,w,A,B,C;a=c.projectScene(m,k);j=0;for(o=a.length;j<o;j++){w=a[j];if(w instanceof THREE.RenderableParticle){B=w.x*h+h;C=w.y*i+i;z=0;for(d=w.material.length;z<d;z++){A=w.material[z];if(A instanceof THREE.ParticleDOMMaterial){A=A.domElement;A.style.left=B+"px";A.style.top=C+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(fa){if(w!=fa)o.globalAlpha=w=fa}function c(fa){if(A!=fa){switch(fa){case THREE.NormalBlending:o.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:o.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:o.globalCompositeOperation="darker"}A=fa}}var f=null,e=new THREE.Projector,h=document.createElement("canvas"),i,m,k,j,o=h.getContext("2d"),z=null,d=null,w=1,A=0,B=null,C=null,O=1,x,E,p,J,N,Z,T,K,l,q=new THREE.Color,
v=new THREE.Color,n=new THREE.Color,s=new THREE.Color,u=new THREE.Color,H,F,Q,R,L,S,X,G,P,Y=new THREE.Rectangle,t=new THREE.Rectangle,r=new THREE.Rectangle,y=false,D=new THREE.Color,V=new THREE.Color,da=new THREE.Color,ha=new THREE.Color,za=Math.PI*2,ba=new THREE.Vector3,ta,ua,Fa,ja,va,Aa,ra=16;ta=document.createElement("canvas");ta.width=ta.height=2;ua=ta.getContext("2d");ua.fillStyle="rgba(0,0,0,1)";ua.fillRect(0,0,2,2);Fa=ua.getImageData(0,0,2,2);ja=Fa.data;va=document.createElement("canvas");
va.width=va.height=ra;Aa=va.getContext("2d");Aa.translate(-ra/2,-ra/2);Aa.scale(ra,ra);ra--;this.domElement=h;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(fa,pa){i=fa;m=pa;k=i/2;j=m/2;h.width=i;h.height=m;Y.set(-k,-j,k,j)};this.setClearColor=function(fa,pa){z=fa!==null?new THREE.Color(fa):null;d=pa;t.set(-k,-j,k,j);o.setTransform(1,0,0,-1,k,j);this.clear()};this.clear=function(){if(!t.isEmpty()){t.inflate(1);t.minSelf(Y);if(z!==null){c(THREE.NormalBlending);a(1);o.fillStyle=
"rgba("+Math.floor(z.r*255)+","+Math.floor(z.g*255)+","+Math.floor(z.b*255)+","+d+")";o.fillRect(t.getX(),t.getY(),t.getWidth(),t.getHeight())}else o.clearRect(t.getX(),t.getY(),t.getWidth(),t.getHeight());t.empty()}};this.render=function(fa,pa){function Oa(I){var $,W,M,U=I.lights;V.setRGB(0,0,0);da.setRGB(0,0,0);ha.setRGB(0,0,0);I=0;for($=U.length;I<$;I++){W=U[I];M=W.color;if(W instanceof THREE.AmbientLight){V.r+=M.r;V.g+=M.g;V.b+=M.b}else if(W instanceof THREE.DirectionalLight){da.r+=M.r;da.g+=
M.g;da.b+=M.b}else if(W instanceof THREE.PointLight){ha.r+=M.r;ha.g+=M.g;ha.b+=M.b}}}function Ba(I,$,W,M){var U,aa,ea,ga,ia=I.lights;I=0;for(U=ia.length;I<U;I++){aa=ia[I];ea=aa.color;ga=aa.intensity;if(aa instanceof THREE.DirectionalLight){aa=W.dot(aa.position)*ga;if(aa>0){M.r+=ea.r*aa;M.g+=ea.g*aa;M.b+=ea.b*aa}}else if(aa instanceof THREE.PointLight){ba.sub(aa.position,$);ba.normalize();aa=W.dot(ba)*ga;if(aa>0){M.r+=ea.r*aa;M.g+=ea.g*aa;M.b+=ea.b*aa}}}}function Pa(I,$,W){if(W.opacity!=0){a(W.opacity);
c(W.blending);var M,U,aa,ea,ga,ia;if(W instanceof THREE.ParticleBasicMaterial){if(W.map){ea=W.map;ga=ea.width>>1;ia=ea.height>>1;U=$.scale.x*k;aa=$.scale.y*j;W=U*ga;M=aa*ia;r.set(I.x-W,I.y-M,I.x+W,I.y+M);if(Y.instersects(r)){o.save();o.translate(I.x,I.y);o.rotate(-$.rotation);o.scale(U,-aa);o.translate(-ga,-ia);o.drawImage(ea,0,0);o.restore()}}}else if(W instanceof THREE.ParticleCircleMaterial){if(y){D.r=V.r+da.r+ha.r;D.g=V.g+da.g+ha.g;D.b=V.b+da.b+ha.b;q.r=W.color.r*D.r;q.g=W.color.g*D.g;q.b=W.color.b*
D.b;q.updateStyleString()}else q.__styleString=W.color.__styleString;W=$.scale.x*k;M=$.scale.y*j;r.set(I.x-W,I.y-M,I.x+W,I.y+M);if(Y.instersects(r)){U=q.__styleString;if(C!=U)o.fillStyle=C=U;o.save();o.translate(I.x,I.y);o.rotate(-$.rotation);o.scale(W,M);o.beginPath();o.arc(0,0,1,0,za,true);o.closePath();o.fill();o.restore()}}}}function Qa(I,$,W,M){if(M.opacity!=0){a(M.opacity);c(M.blending);o.beginPath();o.moveTo(I.positionScreen.x,I.positionScreen.y);o.lineTo($.positionScreen.x,$.positionScreen.y);
o.closePath();if(M instanceof THREE.LineBasicMaterial){q.__styleString=M.color.__styleString;I=M.linewidth;if(O!=I)o.lineWidth=O=I;I=q.__styleString;if(B!=I)o.strokeStyle=B=I;o.stroke();r.inflate(M.linewidth*2)}}}function Ka(I,$,W,M,U,aa){if(U.opacity!=0){a(U.opacity);c(U.blending);J=I.positionScreen.x;N=I.positionScreen.y;Z=$.positionScreen.x;T=$.positionScreen.y;K=W.positionScreen.x;l=W.positionScreen.y;o.beginPath();o.moveTo(J,N);o.lineTo(Z,T);o.lineTo(K,l);o.lineTo(J,N);o.closePath();if(U instanceof
THREE.MeshBasicMaterial)if(U.map)U.map.image.loaded&&U.map.mapping instanceof THREE.UVMapping&&wa(J,N,Z,T,K,l,U.map.image,M.uvs[0].u,M.uvs[0].v,M.uvs[1].u,M.uvs[1].v,M.uvs[2].u,M.uvs[2].v);else if(U.env_map){if(U.env_map.image.loaded)if(U.env_map.mapping instanceof THREE.SphericalReflectionMapping){I=pa.matrix;ba.copy(M.vertexNormalsWorld[0]);R=(ba.x*I.n11+ba.y*I.n12+ba.z*I.n13)*0.5+0.5;L=-(ba.x*I.n21+ba.y*I.n22+ba.z*I.n23)*0.5+0.5;ba.copy(M.vertexNormalsWorld[1]);S=(ba.x*I.n11+ba.y*I.n12+ba.z*I.n13)*
0.5+0.5;X=-(ba.x*I.n21+ba.y*I.n22+ba.z*I.n23)*0.5+0.5;ba.copy(M.vertexNormalsWorld[2]);G=(ba.x*I.n11+ba.y*I.n12+ba.z*I.n13)*0.5+0.5;P=-(ba.x*I.n21+ba.y*I.n22+ba.z*I.n23)*0.5+0.5;wa(J,N,Z,T,K,l,U.env_map.image,R,L,S,X,G,P)}}else U.wireframe?Ca(U.color.__styleString,U.wireframe_linewidth):Da(U.color.__styleString);else if(U instanceof THREE.MeshLambertMaterial){if(U.map&&!U.wireframe){U.map.mapping instanceof THREE.UVMapping&&wa(J,N,Z,T,K,l,U.map.image,M.uvs[0].u,M.uvs[0].v,M.uvs[1].u,M.uvs[1].v,M.uvs[2].u,
M.uvs[2].v);c(THREE.SubtractiveBlending)}if(y)if(!U.wireframe&&U.shading==THREE.SmoothShading&&M.vertexNormalsWorld.length==3){v.r=n.r=s.r=V.r;v.g=n.g=s.g=V.g;v.b=n.b=s.b=V.b;Ba(aa,M.v1.positionWorld,M.vertexNormalsWorld[0],v);Ba(aa,M.v2.positionWorld,M.vertexNormalsWorld[1],n);Ba(aa,M.v3.positionWorld,M.vertexNormalsWorld[2],s);u.r=(n.r+s.r)*0.5;u.g=(n.g+s.g)*0.5;u.b=(n.b+s.b)*0.5;Q=La(v,n,s,u);wa(J,N,Z,T,K,l,Q,0,0,1,0,0,1)}else{D.r=V.r;D.g=V.g;D.b=V.b;Ba(aa,M.centroidWorld,M.normalWorld,D);q.r=
U.color.r*D.r;q.g=U.color.g*D.g;q.b=U.color.b*D.b;q.updateStyleString();U.wireframe?Ca(q.__styleString,U.wireframe_linewidth):Da(q.__styleString)}else U.wireframe?Ca(U.color.__styleString,U.wireframe_linewidth):Da(U.color.__styleString)}else if(U instanceof THREE.MeshDepthMaterial){H=pa.near;F=pa.far;v.r=v.g=v.b=1-Ga(I.positionScreen.z,H,F);n.r=n.g=n.b=1-Ga($.positionScreen.z,H,F);s.r=s.g=s.b=1-Ga(W.positionScreen.z,H,F);u.r=(n.r+s.r)*0.5;u.g=(n.g+s.g)*0.5;u.b=(n.b+s.b)*0.5;Q=La(v,n,s,u);wa(J,N,Z,
T,K,l,Q,0,0,1,0,0,1)}else if(U instanceof THREE.MeshNormalMaterial){q.r=Ha(M.normalWorld.x);q.g=Ha(M.normalWorld.y);q.b=Ha(M.normalWorld.z);q.updateStyleString();U.wireframe?Ca(q.__styleString,U.wireframe_linewidth):Da(q.__styleString)}}}function Ca(I,$){if(B!=I)o.strokeStyle=B=I;if(O!=$)o.lineWidth=O=$;o.stroke();r.inflate($*2)}function Da(I){if(C!=I)o.fillStyle=C=I;o.fill()}function wa(I,$,W,M,U,aa,ea,ga,ia,ma,ka,na,xa){var qa,oa;qa=ea.width-1;oa=ea.height-1;ga*=qa;ia*=oa;ma*=qa;ka*=oa;na*=qa;xa*=
oa;W-=I;M-=$;U-=I;aa-=$;ma-=ga;ka-=ia;na-=ga;xa-=ia;oa=1/(ma*xa-na*ka);qa=(xa*W-ka*U)*oa;ka=(xa*M-ka*aa)*oa;W=(ma*U-na*W)*oa;M=(ma*aa-na*M)*oa;I=I-qa*ga-W*ia;$=$-ka*ga-M*ia;o.save();o.transform(qa,ka,W,M,I,$);o.clip();o.drawImage(ea,0,0);o.restore()}function La(I,$,W,M){var U=~~(I.r*255),aa=~~(I.g*255);I=~~(I.b*255);var ea=~~($.r*255),ga=~~($.g*255);$=~~($.b*255);var ia=~~(W.r*255),ma=~~(W.g*255);W=~~(W.b*255);var ka=~~(M.r*255),na=~~(M.g*255);M=~~(M.b*255);ja[0]=U<0?0:U>255?255:U;ja[1]=aa<0?0:aa>
255?255:aa;ja[2]=I<0?0:I>255?255:I;ja[4]=ea<0?0:ea>255?255:ea;ja[5]=ga<0?0:ga>255?255:ga;ja[6]=$<0?0:$>255?255:$;ja[8]=ia<0?0:ia>255?255:ia;ja[9]=ma<0?0:ma>255?255:ma;ja[10]=W<0?0:W>255?255:W;ja[12]=ka<0?0:ka>255?255:ka;ja[13]=na<0?0:na>255?255:na;ja[14]=M<0?0:M>255?255:M;ua.putImageData(Fa,0,0);Aa.drawImage(ta,0,0);return va}function Ga(I,$,W){I=(I-$)/(W-$);return I*I*(3-2*I)}function Ha(I){I=(I+1)*0.5;return I<0?0:I>1?1:I}function Ia(I,$){var W=$.x-I.x,M=$.y-I.y,U=1/Math.sqrt(W*W+M*M);W*=U;M*=U;
$.x+=W;$.y+=M;I.x-=W;I.y-=M}var Ea,Ma,ca,la,sa,Ja,Na,ya;o.setTransform(1,0,0,-1,k,j);this.autoClear&&this.clear();f=e.projectScene(fa,pa,this.sortElements);(y=fa.lights.length>0)&&Oa(fa);Ea=0;for(Ma=f.length;Ea<Ma;Ea++){ca=f[Ea];r.empty();if(ca instanceof THREE.RenderableParticle){x=ca;x.x*=k;x.y*=j;la=0;for(sa=ca.materials.length;la<sa;la++)Pa(x,ca,ca.materials[la],fa)}else if(ca instanceof THREE.RenderableLine){x=ca.v1;E=ca.v2;x.positionScreen.x*=k;x.positionScreen.y*=j;E.positionScreen.x*=k;E.positionScreen.y*=
j;r.addPoint(x.positionScreen.x,x.positionScreen.y);r.addPoint(E.positionScreen.x,E.positionScreen.y);if(Y.instersects(r)){la=0;for(sa=ca.materials.length;la<sa;)Qa(x,E,ca,ca.materials[la++],fa)}}else if(ca instanceof THREE.RenderableFace3){x=ca.v1;E=ca.v2;p=ca.v3;x.positionScreen.x*=k;x.positionScreen.y*=j;E.positionScreen.x*=k;E.positionScreen.y*=j;p.positionScreen.x*=k;p.positionScreen.y*=j;if(ca.overdraw){Ia(x.positionScreen,E.positionScreen);Ia(E.positionScreen,p.positionScreen);Ia(p.positionScreen,
x.positionScreen)}r.add3Points(x.positionScreen.x,x.positionScreen.y,E.positionScreen.x,E.positionScreen.y,p.positionScreen.x,p.positionScreen.y);if(Y.instersects(r)){la=0;for(sa=ca.meshMaterials.length;la<sa;){ya=ca.meshMaterials[la++];if(ya instanceof THREE.MeshFaceMaterial){Ja=0;for(Na=ca.faceMaterials.length;Ja<Na;)(ya=ca.faceMaterials[Ja++])&&Ka(x,E,p,ca,ya,fa)}else Ka(x,E,p,ca,ya,fa)}}}t.addRectangle(r)}o.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(R,L,S){var X,G,P,Y;X=0;for(G=R.lights.length;X<G;X++){P=R.lights[X];if(P instanceof THREE.DirectionalLight){Y=L.normalWorld.dot(P.position)*P.intensity;if(Y>0){S.r+=P.color.r*Y;S.g+=P.color.g*Y;S.b+=P.color.b*Y}}else if(P instanceof THREE.PointLight){l.sub(P.position,L.centroidWorld);l.normalize();Y=L.normalWorld.dot(l)*P.intensity;if(Y>0){S.r+=P.color.r*Y;S.g+=P.color.g*Y;S.b+=P.color.b*Y}}}}function c(R,L,S,X,G,P){s=e(u++);s.setAttribute("d","M "+R.positionScreen.x+
" "+R.positionScreen.y+" L "+L.positionScreen.x+" "+L.positionScreen.y+" L "+S.positionScreen.x+","+S.positionScreen.y+"z");if(G instanceof THREE.MeshBasicMaterial)p.__styleString=G.color.__styleString;else if(G instanceof THREE.MeshLambertMaterial)if(E){J.r=N.r;J.g=N.g;J.b=N.b;a(P,X,J);p.r=G.color.r*J.r;p.g=G.color.g*J.g;p.b=G.color.b*J.b;p.updateStyleString()}else p.__styleString=G.color.__styleString;else if(G instanceof THREE.MeshDepthMaterial){K=1-G.__2near/(G.__farPlusNear-X.z*G.__farMinusNear);
p.setRGB(K,K,K)}else G instanceof THREE.MeshNormalMaterial&&p.setRGB(h(X.normalWorld.x),h(X.normalWorld.y),h(X.normalWorld.z));G.wireframe?s.setAttribute("style","fill: none; stroke: "+p.__styleString+"; stroke-width: "+G.wireframe_linewidth+"; stroke-opacity: "+G.opacity+"; stroke-linecap: "+G.wireframe_linecap+"; stroke-linejoin: "+G.wireframe_linejoin):s.setAttribute("style","fill: "+p.__styleString+"; fill-opacity: "+G.opacity);k.appendChild(s)}function f(R,L,S,X,G,P,Y){s=e(u++);s.setAttribute("d",
"M "+R.positionScreen.x+" "+R.positionScreen.y+" L "+L.positionScreen.x+" "+L.positionScreen.y+" L "+S.positionScreen.x+","+S.positionScreen.y+" L "+X.positionScreen.x+","+X.positionScreen.y+"z");if(P instanceof THREE.MeshBasicMaterial)p.__styleString=P.color.__styleString;else if(P instanceof THREE.MeshLambertMaterial)if(E){J.r=N.r;J.g=N.g;J.b=N.b;a(Y,G,J);p.r=P.color.r*J.r;p.g=P.color.g*J.g;p.b=P.color.b*J.b;p.updateStyleString()}else p.__styleString=P.color.__styleString;else if(P instanceof THREE.MeshDepthMaterial){K=
1-P.__2near/(P.__farPlusNear-G.z*P.__farMinusNear);p.setRGB(K,K,K)}else P instanceof THREE.MeshNormalMaterial&&p.setRGB(h(G.normalWorld.x),h(G.normalWorld.y),h(G.normalWorld.z));P.wireframe?s.setAttribute("style","fill: none; stroke: "+p.__styleString+"; stroke-width: "+P.wireframe_linewidth+"; stroke-opacity: "+P.opacity+"; stroke-linecap: "+P.wireframe_linecap+"; stroke-linejoin: "+P.wireframe_linejoin):s.setAttribute("style","fill: "+p.__styleString+"; fill-opacity: "+P.opacity);k.appendChild(s)}
function e(R){if(q[R]==null){q[R]=document.createElementNS("http://www.w3.org/2000/svg","path");Q==0&&q[R].setAttribute("shape-rendering","crispEdges");return q[R]}return q[R]}function h(R){return R<0?Math.min((1+R)*0.5,0.5):0.5+Math.min(R*0.5,0.5)}var i=null,m=new THREE.Projector,k=document.createElementNS("http://www.w3.org/2000/svg","svg"),j,o,z,d,w,A,B,C,O=new THREE.Rectangle,x=new THREE.Rectangle,E=false,p=new THREE.Color(16777215),J=new THREE.Color(16777215),N=new THREE.Color(0),Z=new THREE.Color(0),
T=new THREE.Color(0),K,l=new THREE.Vector3,q=[],v=[],n=[],s,u,H,F,Q=1;this.domElement=k;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(R){switch(R){case "high":Q=1;break;case "low":Q=0}};this.setSize=function(R,L){j=R;o=L;z=j/2;d=o/2;k.setAttribute("viewBox",-z+" "+-d+" "+j+" "+o);k.setAttribute("width",j);k.setAttribute("height",o);O.set(-z,-d,z,d)};this.clear=function(){for(;k.childNodes.length>0;)k.removeChild(k.childNodes[0])};this.render=function(R,L){var S,X,
G,P,Y,t,r,y;this.autoClear&&this.clear();i=m.projectScene(R,L,this.sortElements);F=H=u=0;if(E=R.lights.length>0){r=R.lights;N.setRGB(0,0,0);Z.setRGB(0,0,0);T.setRGB(0,0,0);S=0;for(X=r.length;S<X;S++){G=r[S];P=G.color;if(G instanceof THREE.AmbientLight){N.r+=P.r;N.g+=P.g;N.b+=P.b}else if(G instanceof THREE.DirectionalLight){Z.r+=P.r;Z.g+=P.g;Z.b+=P.b}else if(G instanceof THREE.PointLight){T.r+=P.r;T.g+=P.g;T.b+=P.b}}}S=0;for(X=i.length;S<X;S++){r=i[S];x.empty();if(r instanceof THREE.RenderableParticle){w=
r;w.x*=z;w.y*=-d;G=0;for(P=r.materials.length;G<P;G++)if(y=r.materials[G]){Y=w;t=r;y=y;var D=H++;if(v[D]==null){v[D]=document.createElementNS("http://www.w3.org/2000/svg","circle");Q==0&&v[D].setAttribute("shape-rendering","crispEdges")}s=v[D];s.setAttribute("cx",Y.x);s.setAttribute("cy",Y.y);s.setAttribute("r",t.scale.x*z);if(y instanceof THREE.ParticleCircleMaterial){if(E){J.r=N.r+Z.r+T.r;J.g=N.g+Z.g+T.g;J.b=N.b+Z.b+T.b;p.r=y.color.r*J.r;p.g=y.color.g*J.g;p.b=y.color.b*J.b;p.updateStyleString()}else p=
y.color;s.setAttribute("style","fill: "+p.__styleString)}k.appendChild(s)}}else if(r instanceof THREE.RenderableLine){w=r.v1;A=r.v2;w.positionScreen.x*=z;w.positionScreen.y*=-d;A.positionScreen.x*=z;A.positionScreen.y*=-d;x.addPoint(w.positionScreen.x,w.positionScreen.y);x.addPoint(A.positionScreen.x,A.positionScreen.y);if(O.instersects(x)){G=0;for(P=r.materials.length;G<P;)if(y=r.materials[G++]){Y=w;t=A;y=y;D=F++;if(n[D]==null){n[D]=document.createElementNS("http://www.w3.org/2000/svg","line");Q==
0&&n[D].setAttribute("shape-rendering","crispEdges")}s=n[D];s.setAttribute("x1",Y.positionScreen.x);s.setAttribute("y1",Y.positionScreen.y);s.setAttribute("x2",t.positionScreen.x);s.setAttribute("y2",t.positionScreen.y);if(y instanceof THREE.LineBasicMaterial){p.__styleString=y.color.__styleString;s.setAttribute("style","fill: none; stroke: "+p.__styleString+"; stroke-width: "+y.linewidth+"; stroke-opacity: "+y.opacity+"; stroke-linecap: "+y.linecap+"; stroke-linejoin: "+y.linejoin);k.appendChild(s)}}}}else if(r instanceof
THREE.RenderableFace3){w=r.v1;A=r.v2;B=r.v3;w.positionScreen.x*=z;w.positionScreen.y*=-d;A.positionScreen.x*=z;A.positionScreen.y*=-d;B.positionScreen.x*=z;B.positionScreen.y*=-d;x.addPoint(w.positionScreen.x,w.positionScreen.y);x.addPoint(A.positionScreen.x,A.positionScreen.y);x.addPoint(B.positionScreen.x,B.positionScreen.y);if(O.instersects(x)){G=0;for(P=r.meshMaterials.length;G<P;){y=r.meshMaterials[G++];if(y instanceof THREE.MeshFaceMaterial){Y=0;for(t=r.faceMaterials.length;Y<t;)(y=r.faceMaterials[Y++])&&
c(w,A,B,r,y,R)}else y&&c(w,A,B,r,y,R)}}}else if(r instanceof THREE.RenderableFace4){w=r.v1;A=r.v2;B=r.v3;C=r.v4;w.positionScreen.x*=z;w.positionScreen.y*=-d;A.positionScreen.x*=z;A.positionScreen.y*=-d;B.positionScreen.x*=z;B.positionScreen.y*=-d;C.positionScreen.x*=z;C.positionScreen.y*=-d;x.addPoint(w.positionScreen.x,w.positionScreen.y);x.addPoint(A.positionScreen.x,A.positionScreen.y);x.addPoint(B.positionScreen.x,B.positionScreen.y);x.addPoint(C.positionScreen.x,C.positionScreen.y);if(O.instersects(x)){G=
0;for(P=r.meshMaterials.length;G<P;){y=r.meshMaterials[G++];if(y instanceof THREE.MeshFaceMaterial){Y=0;for(t=r.faceMaterials.length;Y<t;)(y=r.faceMaterials[Y++])&&f(w,A,B,C,r,y,R)}else y&&f(w,A,B,C,r,y,R)}}}}}};
THREE.WebGLRenderer=function(a){function c(l,q){l.fragment_shader=q.fragment_shader;l.vertex_shader=q.vertex_shader;l.uniforms=Uniforms.clone(q.uniforms)}function f(l,q){l.uniforms.color.value.setRGB(l.color.r*l.opacity,l.color.g*l.opacity,l.color.b*l.opacity);l.uniforms.opacity.value=l.opacity;l.uniforms.map.texture=l.map;l.uniforms.env_map.texture=l.env_map;l.uniforms.reflectivity.value=l.reflectivity;l.uniforms.refraction_ratio.value=l.refraction_ratio;l.uniforms.combine.value=l.combine;l.uniforms.useRefract.value=
l.env_map&&l.env_map.mapping instanceof THREE.CubeRefractionMapping;if(q){l.uniforms.fogColor.value.setHex(q.color.hex);if(q instanceof THREE.Fog){l.uniforms.fogNear.value=q.near;l.uniforms.fogFar.value=q.far}else if(q instanceof THREE.FogExp2)l.uniforms.fogDensity.value=q.density}}function e(l,q,v){var n=d.createProgram(),s=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+v.maxDirLights,"#define MAX_POINT_LIGHTS "+v.maxPointLights,v.fog?"#define USE_FOG":"",v.fog instanceof
THREE.FogExp2?"#define FOG_EXP2":"",v.map?"#define USE_MAP":"",v.env_map?"#define USE_ENVMAP":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");v=[d.getParameter(d.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+v.maxDirLights,"#define MAX_POINT_LIGHTS "+v.maxPointLights,v.map?"#define USE_MAP":"",v.env_map?"#define USE_ENVMAP":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n"].join("\n");
d.attachShader(n,j("fragment",s+l));d.attachShader(n,j("vertex",v+q));d.linkProgram(n);d.getProgramParameter(n,d.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+d.getProgramParameter(n,d.VALIDATE_STATUS)+", gl error ["+d.getError()+"]");n.uniforms={};n.attributes={};return n}function h(l,q){if(l.image.length==6){if(!l.image.__webGLTextureCube&&!l.image.__cubeMapInitialized&&l.image.loadCount==6){l.image.__webGLTextureCube=d.createTexture();d.bindTexture(d.TEXTURE_CUBE_MAP,l.image.__webGLTextureCube);
d.texParameteri(d.TEXTURE_CUBE_MAP,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE);d.texParameteri(d.TEXTURE_CUBE_MAP,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE);d.texParameteri(d.TEXTURE_CUBE_MAP,d.TEXTURE_MAG_FILTER,d.LINEAR);d.texParameteri(d.TEXTURE_CUBE_MAP,d.TEXTURE_MIN_FILTER,d.LINEAR_MIPMAP_LINEAR);for(var v=0;v<6;++v)d.texImage2D(d.TEXTURE_CUBE_MAP_POSITIVE_X+v,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,l.image[v]);d.generateMipmap(d.TEXTURE_CUBE_MAP);d.bindTexture(d.TEXTURE_CUBE_MAP,null);l.image.__cubeMapInitialized=true}d.activeTexture(d.TEXTURE0+
q);d.bindTexture(d.TEXTURE_CUBE_MAP,l.image.__webGLTextureCube)}}function i(l,q){if(!l.__webGLTexture&&l.image.loaded){l.__webGLTexture=d.createTexture();d.bindTexture(d.TEXTURE_2D,l.__webGLTexture);d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,l.image);d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,o(l.wrap_s));d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,o(l.wrap_t));d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,o(l.mag_filter));d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,
o(l.min_filter));d.generateMipmap(d.TEXTURE_2D);d.bindTexture(d.TEXTURE_2D,null)}d.activeTexture(d.TEXTURE0+q);d.bindTexture(d.TEXTURE_2D,l.__webGLTexture)}function m(l,q){var v,n,s;v=0;for(n=q.length;v<n;v++){s=q[v];l.uniforms[s]=d.getUniformLocation(l,s)}}function k(l,q){var v,n,s;v=0;for(n=q.length;v<n;v++){s=q[v];l.attributes[s]=d.getAttribLocation(l,s)}}function j(l,q){var v;if(l=="fragment")v=d.createShader(d.FRAGMENT_SHADER);else if(l=="vertex")v=d.createShader(d.VERTEX_SHADER);d.shaderSource(v,
q);d.compileShader(v);if(!d.getShaderParameter(v,d.COMPILE_STATUS)){alert(d.getShaderInfoLog(v));return null}return v}function o(l){switch(l){case THREE.RepeatWrapping:return d.REPEAT;case THREE.ClampToEdgeWrapping:return d.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return d.MIRRORED_REPEAT;case THREE.NearestFilter:return d.NEAREST;case THREE.NearestMipMapNearestFilter:return d.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return d.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return d.LINEAR;
case THREE.LinearMipMapNearestFilter:return d.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return d.LINEAR_MIPMAP_LINEAR}return 0}var z=document.createElement("canvas"),d,w,A,B=new THREE.Matrix4,C,O=new Float32Array(16),x=new Float32Array(16),E=new Float32Array(16),p=new Float32Array(9),J=new Float32Array(16),N=function(l,q){if(l){var v,n,s,u,H;v=u=H=0;for(n=l.lights.length;v<n;v++){s=l.lights[v];s instanceof THREE.DirectionalLight&&u++;s instanceof THREE.PointLight&&H++}if(H+u<=q){v=
u;H=H}else{v=Math.ceil(q*u/(H+u));H=q-v}return{directional:v,point:H}}return{directional:1,point:q-1}}(a.scene,4),Z=a.scene?a.scene.fog:null,T=a.antialias!=undefined?a.antialias:true,K=a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0);a=a.clearAlpha?a.clearAlpha:0;this.domElement=z;this.autoClear=true;(function(l,q,v){try{d=z.getContext("experimental-webgl",{antialias:l})}catch(n){}if(!d){alert("WebGL not supported");throw"cannot create webgl context";}d.clearColor(0,0,0,1);d.clearDepth(1);
d.enable(d.DEPTH_TEST);d.depthFunc(d.LEQUAL);d.frontFace(d.CCW);d.cullFace(d.BACK);d.enable(d.CULL_FACE);d.enable(d.BLEND);d.blendFunc(d.ONE,d.ONE_MINUS_SRC_ALPHA);d.clearColor(q.r,q.g,q.b,v)})(T,K,a);w=A=function(l,q,v){var n=["#define PHONG\nuniform bool useRefract;",THREE.Snippets.lights_pars_vertex,"varying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vReflect;\nuniform float mRefractionRatio;\nvoid main(void) {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec3 transformedNormal = normalize( normalMatrix * normal );",
THREE.Snippets.lights_vertex,"vNormal = transformedNormal;\nvUv = uv;\nif ( useRefract ) {\nvReflect = refract( normalize(mPosition.xyz - cameraPosition), normalize(nWorld.xyz), mRefractionRatio );\n} else {\nvReflect = reflect( normalize(mPosition.xyz - cameraPosition), normalize(nWorld.xyz) );\n}\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),s=["uniform int material;\nuniform bool enableMap;\nuniform bool enableCubeMap;\nuniform bool mixEnvMap;\nuniform samplerCube tCube;\nuniform float mReflectivity;\nuniform sampler2D tMap;\nuniform vec4 mColor;\nuniform float mOpacity;\nuniform vec4 mAmbient;\nuniform vec4 mSpecular;\nuniform float mShininess;",
THREE.Snippets.fog_pars_fragment,"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vLightWeighting;\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vReflect;\nvoid main() {\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );\nif ( enableMap ) {\nmapColor = texture2D( tMap, vUv );\n}\nif ( enableCubeMap ) {\ncubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n}\nif ( material == 2 ) { \nvec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, mShininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, mShininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = mAmbient;\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif\nif ( mixEnvMap ) {\ngl_FragColor = vec4( mix( mapColor.rgb * totalLight.xyz * vLightWeighting, cubeColor.rgb, mReflectivity ), mapColor.a );\n} else {\ngl_FragColor = vec4( mapColor.rgb * cubeColor.rgb * totalLight.xyz * vLightWeighting, mapColor.a );\n}\n}",
THREE.Snippets.fog_fragment,"}"].join("\n");n=e(s,n,{fog:v,maxDirLights:l,maxPointLights:q});d.useProgram(n);m(n,["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","enableLighting","ambientLightColor","material","mColor","mAmbient","mSpecular","mShininess","mOpacity","enableMap","tMap","enableCubeMap","tCube","mixEnvMap","mReflectivity","mRefractionRatio","useRefract"]);v&&m(n,["fogColor","fogNear","fogFar","fogDensity"]);l&&m(n,["directionalLightColor",
"directionalLightDirection"]);q&&m(n,["pointLightColor","pointLightPosition"]);d.uniform1i(n.uniforms.enableMap,0);d.uniform1i(n.uniforms.tMap,0);d.uniform1i(n.uniforms.enableCubeMap,0);d.uniform1i(n.uniforms.tCube,1);d.uniform1i(n.uniforms.mixEnvMap,0);d.uniform1i(n.uniforms.useRefract,0);k(n,["position","normal","uv"]);return n}(N.directional,N.point,Z);this.setSize=function(l,q){z.width=l;z.height=q;d.viewport(0,0,z.width,z.height)};this.setClearColor=function(l,q){var v=new THREE.Color(l);d.clearColor(v.r,
v.g,v.b,q)};this.clear=function(){d.clear(d.COLOR_BUFFER_BIT|d.DEPTH_BUFFER_BIT)};this.setupLights=function(l,q){var v,n,s,u=g=b=0,H=[],F=[],Q=[],R=[];v=0;for(n=q.length;v<n;v++){s=q[v];if(s instanceof THREE.AmbientLight){u+=s.color.r;g+=s.color.g;b+=s.color.b}else if(s instanceof THREE.DirectionalLight){H.push(s.color.r*s.intensity,s.color.g*s.intensity,s.color.b*s.intensity);F.push(s.position.x,s.position.y,s.position.z)}else if(s instanceof THREE.PointLight){Q.push(s.color.r*s.intensity,s.color.g*
s.intensity,s.color.b*s.intensity);R.push(s.position.x,s.position.y,s.position.z)}}return{ambient:[u,g,b],directional:{colors:H,positions:F},point:{colors:Q,positions:R}}};this.createBuffers=function(l,q){var v,n,s,u,H,F,Q,R,L,S,X=[],G=[],P=[],Y=[],t=[],r=[],y=0,D=l.geometry.geometryChunks[q],V;H=false;v=0;for(n=l.materials.length;v<n;v++){F=l.materials[v];if(F instanceof THREE.MeshFaceMaterial){F=0;for(V=D.materials.length;F<V;F++)if(D.materials[F]&&D.materials[F].shading!=undefined&&D.materials[F].shading==
THREE.SmoothShading){H=true;break}}else if(F&&F.shading!=undefined&&F.shading==THREE.SmoothShading){H=true;break}if(H)break}V=H;v=0;for(n=D.faces.length;v<n;v++){s=D.faces[v];u=l.geometry.faces[s];H=u.vertexNormals;F=u.normal;s=l.geometry.uvs[s];if(u instanceof THREE.Face3){Q=l.geometry.vertices[u.a].position;R=l.geometry.vertices[u.b].position;L=l.geometry.vertices[u.c].position;P.push(Q.x,Q.y,Q.z,R.x,R.y,R.z,L.x,L.y,L.z);if(l.geometry.hasTangents){Q=l.geometry.vertices[u.a].tangent;R=l.geometry.vertices[u.b].tangent;
L=l.geometry.vertices[u.c].tangent;t.push(Q.x,Q.y,Q.z,Q.w,R.x,R.y,R.z,R.w,L.x,L.y,L.z,L.w)}if(H.length==3&&V)for(u=0;u<3;u++)Y.push(H[u].x,H[u].y,H[u].z);else for(u=0;u<3;u++)Y.push(F.x,F.y,F.z);if(s)for(u=0;u<3;u++)r.push(s[u].u,s[u].v);X.push(y,y+1,y+2);G.push(y,y+1,y,y+2,y+1,y+2);y+=3}else if(u instanceof THREE.Face4){Q=l.geometry.vertices[u.a].position;R=l.geometry.vertices[u.b].position;L=l.geometry.vertices[u.c].position;S=l.geometry.vertices[u.d].position;P.push(Q.x,Q.y,Q.z,R.x,R.y,R.z,L.x,
L.y,L.z,S.x,S.y,S.z);if(l.geometry.hasTangents){Q=l.geometry.vertices[u.a].tangent;R=l.geometry.vertices[u.b].tangent;L=l.geometry.vertices[u.c].tangent;u=l.geometry.vertices[u.d].tangent;t.push(Q.x,Q.y,Q.z,Q.w,R.x,R.y,R.z,R.w,L.x,L.y,L.z,L.w,u.x,u.y,u.z,u.w)}if(H.length==4&&V)for(u=0;u<4;u++)Y.push(H[u].x,H[u].y,H[u].z);else for(u=0;u<4;u++)Y.push(F.x,F.y,F.z);if(s)for(u=0;u<4;u++)r.push(s[u].u,s[u].v);X.push(y,y+1,y+2,y,y+2,y+3);G.push(y,y+1,y,y+2,y,y+3,y+1,y+2,y+2,y+3);y+=4}}if(P.length){D.__webGLVertexBuffer=
d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,D.__webGLVertexBuffer);d.bufferData(d.ARRAY_BUFFER,new Float32Array(P),d.STATIC_DRAW);D.__webGLNormalBuffer=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,D.__webGLNormalBuffer);d.bufferData(d.ARRAY_BUFFER,new Float32Array(Y),d.STATIC_DRAW);if(l.geometry.hasTangents){D.__webGLTangentBuffer=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,D.__webGLTangentBuffer);d.bufferData(d.ARRAY_BUFFER,new Float32Array(t),d.STATIC_DRAW)}if(r.length>0){D.__webGLUVBuffer=d.createBuffer();
d.bindBuffer(d.ARRAY_BUFFER,D.__webGLUVBuffer);d.bufferData(d.ARRAY_BUFFER,new Float32Array(r),d.STATIC_DRAW)}D.__webGLFaceBuffer=d.createBuffer();d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,D.__webGLFaceBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,new Uint16Array(X),d.STATIC_DRAW);D.__webGLLineBuffer=d.createBuffer();d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,D.__webGLLineBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,new Uint16Array(G),d.STATIC_DRAW);D.__webGLFaceCount=X.length;D.__webGLLineCount=G.length}};this.renderBuffer=
function(l,q,v,n,s){var u,H,F,Q,R,L,S,X,G;if(n instanceof THREE.MeshShaderMaterial||n instanceof THREE.MeshDepthMaterial||n instanceof THREE.MeshNormalMaterial||n instanceof THREE.MeshBasicMaterial||n instanceof THREE.MeshLambertMaterial){if(!n.program){if(n instanceof THREE.MeshDepthMaterial){c(n,THREE.ShaderLib.depth);n.uniforms.mNear.value=l.near;n.uniforms.mFar.value=l.far}else if(n instanceof THREE.MeshNormalMaterial)c(n,THREE.ShaderLib.normal);else if(n instanceof THREE.MeshBasicMaterial){c(n,
THREE.ShaderLib.basic);f(n,v)}else if(n instanceof THREE.MeshLambertMaterial){c(n,THREE.ShaderLib.lambert);f(n,v)}S={fog:v,map:n.map,env_map:n.env_map,maxDirLights:N.directional,maxPointLights:N.point};n.program=e(n.fragment_shader,n.vertex_shader,S);S=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(G in n.uniforms)S.push(G);m(n.program,S);k(n.program,["position","normal","uv","tangent"])}G=n.program}else G=A;if(G!=w){d.useProgram(G);w=G}if(G==
A||n instanceof THREE.MeshLambertMaterial){q=this.setupLights(G,q);if(G==A){d.uniform1i(G.uniforms.enableLighting,q.directional.positions.length+q.point.positions.length||q.ambient[0]||q.ambient[1]||q.ambient[2]);d.uniform3fv(G.uniforms.ambientLightColor,q.ambient);if(q.directional.positions.length){d.uniform3fv(G.uniforms.directionalLightDirection,q.directional.positions);d.uniform3fv(G.uniforms.directionalLightColor,q.directional.colors)}if(q.point.positions.length){d.uniform3fv(G.uniforms.pointLightPosition,
q.point.positions);d.uniform3fv(G.uniforms.pointLightColor,q.point.colors)}}else{n.uniforms.enableLighting.value=q.directional.positions.length+q.point.positions.length;n.uniforms.ambientLightColor.value=q.ambient;n.uniforms.directionalLightColor.value=q.directional.colors;n.uniforms.directionalLightDirection.value=q.directional.positions;n.uniforms.pointLightColor.value=q.point.colors;n.uniforms.pointLightPosition.value=q.point.positions}}this.loadCamera(G,l);this.loadMatrices(G);if(n instanceof
THREE.MeshBasicMaterial||n instanceof THREE.MeshLambertMaterial)f(n,v);if(n instanceof THREE.MeshShaderMaterial||n instanceof THREE.MeshDepthMaterial||n instanceof THREE.MeshNormalMaterial||n instanceof THREE.MeshBasicMaterial||n instanceof THREE.MeshLambertMaterial){F=n.wireframe;Q=n.wireframe_linewidth;l=G;q=n.uniforms;var P;for(u in q){X=q[u].type;S=q[u].value;P=l.uniforms[u];if(X=="i")d.uniform1i(P,S);else if(X=="f")d.uniform1f(P,S);else if(X=="fv")d.uniform3fv(P,S);else if(X=="v2")d.uniform2f(P,
S.x,S.y);else if(X=="v3")d.uniform3f(P,S.x,S.y,S.z);else if(X=="c")d.uniform3f(P,S.r,S.g,S.b);else if(X=="t"){d.uniform1i(P,S);if(X=q[u].texture)X.image instanceof Array&&X.image.length==6?h(X,S):i(X,S)}}}if(n instanceof THREE.MeshPhongMaterial){u=n.color;H=n.opacity;F=n.wireframe;Q=n.wireframe_linewidth;R=n.map;L=n.env_map;q=n.combine==THREE.MixOperation;l=n.reflectivity;X=n.env_map&&n.env_map.mapping instanceof THREE.CubeRefractionMapping;S=n.refraction_ratio;d.uniform4f(G.uniforms.mColor,u.r*H,
u.g*H,u.b*H,H);d.uniform1i(G.uniforms.mixEnvMap,q);d.uniform1f(G.uniforms.mReflectivity,l);d.uniform1i(G.uniforms.useRefract,X);d.uniform1f(G.uniforms.mRefractionRatio,S);if(v){d.uniform3f(G.uniforms.fogColor,v.color.r,v.color.g,v.color.b);if(v instanceof THREE.Fog){d.uniform1f(G.uniforms.fogNear,v.near);d.uniform1f(G.uniforms.fogFar,v.far)}else v instanceof THREE.FogExp2&&d.uniform1f(G.uniforms.fogDensity,v.density)}}if(n instanceof THREE.MeshPhongMaterial){v=n.ambient;u=n.specular;n=n.shininess;
d.uniform4f(G.uniforms.mAmbient,v.r,v.g,v.b,H);d.uniform4f(G.uniforms.mSpecular,u.r,u.g,u.b,H);d.uniform1f(G.uniforms.mShininess,n);d.uniform1i(G.uniforms.material,2)}if(R){i(R,0);d.uniform1i(G.uniforms.tMap,0);d.uniform1i(G.uniforms.enableMap,1)}else d.uniform1i(G.uniforms.enableMap,0);if(L){h(L,1);d.uniform1i(G.uniforms.tCube,1);d.uniform1i(G.uniforms.enableCubeMap,1)}else d.uniform1i(G.uniforms.enableCubeMap,0);H=G.attributes;d.bindBuffer(d.ARRAY_BUFFER,s.__webGLVertexBuffer);d.vertexAttribPointer(H.position,
3,d.FLOAT,false,0,0);d.enableVertexAttribArray(H.position);if(H.normal>=0){d.bindBuffer(d.ARRAY_BUFFER,s.__webGLNormalBuffer);d.vertexAttribPointer(H.normal,3,d.FLOAT,false,0,0);d.enableVertexAttribArray(H.normal)}if(H.tangent>=0){d.bindBuffer(d.ARRAY_BUFFER,s.__webGLTangentBuffer);d.vertexAttribPointer(H.tangent,4,d.FLOAT,false,0,0);d.enableVertexAttribArray(H.tangent)}if(H.uv>=0)if(s.__webGLUVBuffer){d.bindBuffer(d.ARRAY_BUFFER,s.__webGLUVBuffer);d.vertexAttribPointer(H.uv,2,d.FLOAT,false,0,0);
d.enableVertexAttribArray(H.uv)}else d.disableVertexAttribArray(H.uv);if(F){d.lineWidth(Q);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,s.__webGLLineBuffer);d.drawElements(d.LINES,s.__webGLLineCount,d.UNSIGNED_SHORT,0)}else{d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,s.__webGLFaceBuffer);d.drawElements(d.TRIANGLES,s.__webGLFaceCount,d.UNSIGNED_SHORT,0)}};this.renderPass=function(l,q,v,n,s,u,H){var F,Q,R,L,S;R=0;for(L=n.materials.length;R<L;R++){F=n.materials[R];if(F instanceof THREE.MeshFaceMaterial){F=0;for(Q=s.materials.length;F<
Q;F++)if((S=s.materials[F])&&S.blending==u&&S.opacity<1==H){this.setBlending(S.blending);this.renderBuffer(l,q,v,S,s)}}else if((S=F)&&S.blending==u&&S.opacity<1==H){this.setBlending(S.blending);this.renderBuffer(l,q,v,S,s)}}};this.render=function(l,q){var v,n,s,u,H=l.lights,F=l.fog;this.initWebGLObjects(l);this.autoClear&&this.clear();q.autoUpdateMatrix&&q.updateMatrix();O.set(q.matrix.flatten());E.set(q.projectionMatrix.flatten());v=0;for(n=l.__webGLObjects.length;v<n;v++){s=l.__webGLObjects[v];
u=s.object;s=s.buffer;if(u.visible){this.setupMatrices(u,q);this.renderPass(q,H,F,u,s,THREE.NormalBlending,false)}}v=0;for(n=l.__webGLObjects.length;v<n;v++){s=l.__webGLObjects[v];u=s.object;s=s.buffer;if(u.visible){this.setupMatrices(u,q);this.renderPass(q,H,F,u,s,THREE.AdditiveBlending,false);this.renderPass(q,H,F,u,s,THREE.SubtractiveBlending,false);this.renderPass(q,H,F,u,s,THREE.AdditiveBlending,true);this.renderPass(q,H,F,u,s,THREE.SubtractiveBlending,true);this.renderPass(q,H,F,u,s,THREE.NormalBlending,
true)}}};this.initWebGLObjects=function(l){var q,v,n,s,u,H;if(!l.__webGLObjects){l.__webGLObjects=[];l.__webGLObjectsMap={}}q=0;for(v=l.objects.length;q<v;q++){n=l.objects[q];if(l.__webGLObjectsMap[n.id]==undefined)l.__webGLObjectsMap[n.id]={};H=l.__webGLObjectsMap[n.id];if(n instanceof THREE.Mesh)for(u in n.geometry.geometryChunks){s=n.geometry.geometryChunks[u];s.__webGLVertexBuffer||this.createBuffers(n,u);if(H[u]==undefined){s={buffer:s,object:n};l.__webGLObjects.push(s);H[u]=1}}}};this.removeObject=
function(l,q){var v,n;for(v=l.__webGLObjects.length-1;v>=0;v--){n=l.__webGLObjects[v].object;q==n&&l.__webGLObjects.splice(v,1)}};this.setupMatrices=function(l,q){l.autoUpdateMatrix&&l.updateMatrix();B.multiply(q.matrix,l.matrix);x.set(B.flatten());C=THREE.Matrix4.makeInvert3x3(B).transpose();p.set(C.m);J.set(l.matrix.flatten())};this.loadMatrices=function(l){d.uniformMatrix4fv(l.uniforms.viewMatrix,false,O);d.uniformMatrix4fv(l.uniforms.modelViewMatrix,false,x);d.uniformMatrix4fv(l.uniforms.projectionMatrix,
false,E);d.uniformMatrix3fv(l.uniforms.normalMatrix,false,p);d.uniformMatrix4fv(l.uniforms.objectMatrix,false,J)};this.loadCamera=function(l,q){d.uniform3f(l.uniforms.cameraPosition,q.position.x,q.position.y,q.position.z)};this.setBlending=function(l){switch(l){case THREE.AdditiveBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.ONE,d.ONE);break;case THREE.SubtractiveBlending:d.blendFunc(d.DST_COLOR,d.ZERO);break;default:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.ONE,d.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=
function(l,q){if(l){!q||q=="ccw"?d.frontFace(d.CCW):d.frontFace(d.CW);if(l=="back")d.cullFace(d.BACK);else l=="front"?d.cullFace(d.FRONT):d.cullFace(d.FRONT_AND_BACK);d.enable(d.CULL_FACE)}else d.disable(d.CULL_FACE)};this.supportsVertexTextures=function(){return d.getParameter(d.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, 1.0 ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\ncubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = mix( gl_FragColor, cubeColor, reflectivity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif",
envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",
map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}"};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",
vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},
fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},fragment_shader:["uniform vec3 color;\nuniform float opacity;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,"gl_FragColor = mColor * mapColor;",THREE.Snippets.envmap_fragment,
THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},lambert:{uniforms:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",
value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)},enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]}},fragment_shader:["uniform vec3 color;\nuniform float opacity;\nvarying vec3 vLightWeighting;",
THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,"gl_FragColor =  mColor * mapColor * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,
THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")}};THREE.RenderableObject=function(){this.z=this.object=null};
THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};
THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
var GeometryUtils={merge:function(a,c){var f=c instanceof THREE.Mesh,e=a.vertices.length,h=f?c.geometry:c,i=a.vertices,m=h.vertices,k=a.faces,j=h.faces,o=a.uvs;h=h.uvs;f&&c.updateMatrix();for(var z=0,d=m.length;z<d;z++){var w=new THREE.Vertex(m[z].position.clone());f&&c.matrix.multiplyVector3(w.position);i.push(w)}z=0;for(d=j.length;z<d;z++){m=j[z];var A,B=m.vertexNormals;if(m instanceof THREE.Face3)A=new THREE.Face3(m.a+e,m.b+e,m.c+e);else if(m instanceof THREE.Face4)A=new THREE.Face4(m.a+e,m.b+
e,m.c+e,m.d+e);A.centroid.copy(m.centroid);A.normal.copy(m.normal);f=0;for(i=B.length;f<i;f++){w=B[f];A.vertexNormals.push(w.clone())}A.materials=m.materials.slice();k.push(A)}z=0;for(d=h.length;z<d;z++){e=h[z];k=[];f=0;for(i=e.length;f<i;f++)k.push(new THREE.UV(e[f].u,e[f].v));o.push(k)}}},ImageUtils={loadTexture:function(a,c){var f=new Image;f.onload=function(){this.loaded=true};f.src=a;return new THREE.Texture(f,c)},loadArray:function(a){var c,f,e=[];c=e.loadCount=0;for(f=a.length;c<f;++c){e[c]=
new Image;e[c].loaded=0;e[c].onload=function(){e.loadCount+=1;this.loaded=true};e[c].src=a[c]}return e}},SceneUtils={addMesh:function(a,c,f,e,h,i,m,k,j,o){c=new THREE.Mesh(c,o);c.scale.x=c.scale.y=c.scale.z=f;c.position.x=e;c.position.y=h;c.position.z=i;c.rotation.x=m;c.rotation.y=k;c.rotation.z=j;a.addObject(c);return c},addPanoramaCubeWebGL:function(a,c,f){var e=ShaderUtils.lib.cube;e.uniforms.tCube.texture=f;f=new THREE.MeshShaderMaterial({fragment_shader:e.fragment_shader,vertex_shader:e.vertex_shader,
uniforms:e.uniforms});c=new THREE.Mesh(new Cube(c,c,c,1,1,null,true),f);a.addObject(c);return c},addPanoramaCube:function(a,c,f){var e=[];e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(f[0])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(f[1])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(f[2])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(f[3])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(f[4])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(f[5])}));
c=new THREE.Mesh(new Cube(c,c,c,1,1,e,true),new THREE.MeshFaceMaterial);a.addObject(c);return c},addPanoramaCubePlanes:function(a,c,f){var e=c/2;c=new Plane(c,c);var h=Math.PI/2,i=Math.PI;SceneUtils.addMesh(a,c,1,0,0,-e,0,0,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(f[5])}));SceneUtils.addMesh(a,c,1,-e,0,0,0,h,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(f[0])}));SceneUtils.addMesh(a,c,1,e,0,0,0,-h,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(f[1])}));SceneUtils.addMesh(a,
c,1,0,e,0,h,0,i,new THREE.MeshBasicMaterial({map:new THREE.Texture(f[2])}));SceneUtils.addMesh(a,c,1,0,-e,0,-h,0,i,new THREE.MeshBasicMaterial({map:new THREE.Texture(f[3])}))}},ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertex_shader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main(void) {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tNormal:{type:"t",value:2,texture:null},tAO:{type:"t",value:3,texture:null},uNormalScale:{type:"f",value:1},tDisplacement:{type:"t",value:4,texture:null},uDisplacementBias:{type:"f",value:-0.5},uDisplacementScale:{type:"f",value:2.5},uPointLightPos:{type:"v3",value:new THREE.Vector3},uPointLightColor:{type:"c",value:new THREE.Color(15658734)},uDirLightPos:{type:"v3",value:new THREE.Vector3},
uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30}},fragment_shader:"uniform vec3 uDirLightPos;\nuniform vec3 uAmbientLightColor;\nuniform vec3 uDirLightColor;\nuniform vec3 uPointLightColor;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform bool enableDiffuse;\nuniform bool enableAO;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tAO;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 diffuseTex = vec3( 1.0, 1.0, 1.0 );\nvec3 aoTex = vec3( 1.0, 1.0, 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse )\ndiffuseTex = texture2D( tDiffuse, vUv ).xyz;\nif( enableAO )\naoTex = texture2D( tAO, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec3 pointVector = normalize( vPointLightVector );\nvec3 pointHalfVector = normalize( vPointLightVector + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, uShininess );\npointDiffuse  += vec4( uDiffuseColor, 1.0 ) * pointDiffuseWeight;\npointSpecular += vec4( uSpecularColor, 1.0 ) * pointSpecularWeight;\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 lDirection = viewMatrix * vec4( uDirLightPos, 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, uShininess );\ndirDiffuse  += vec4( uDiffuseColor, 1.0 ) * dirDiffuseWeight;\ndirSpecular += vec4( uSpecularColor, 1.0 ) * dirSpecularWeight;\nvec4 totalLight = vec4( uAmbientLightColor * uAmbientColor, 1.0 );\ntotalLight += vec4( uDirLightColor, 1.0 ) * ( dirDiffuse + dirSpecular );\ntotalLight += vec4( uPointLightColor, 1.0 ) * ( pointDiffuse + pointSpecular );\ngl_FragColor = vec4( totalLight.xyz * aoTex * diffuseTex, 1.0 );\n}",
vertex_shader:"attribute vec4 tangent;\nuniform vec3 uPointLightPos;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec4 lPosition = viewMatrix * vec4( uPointLightPos, 1.0 );\nvPointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}"},
basic:{uniforms:{},vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"void main() {\ngl_FragColor = vec4(1.0, 0.0, 0.0, 0.5);\n}"},cube:{uniforms:{tCube:{type:"t",value:1,texture:null}},vertex_shader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( - wPos.x, wPos.yz ) );\n}"}}},Cube=function(a,c,f,e,h,i,m,k){function j(C,O,x,E,p,J,N,Z){var T,K,l=e||1,q=h||1,v=l+1,n=q+1,s=p/2,u=J/2;p=p/l;var H=J/q,F=o.vertices.length;if(C=="x"&&O=="y"||C=="y"&&O=="x")T="z";else if(C=="x"&&O=="z"||C=="z"&&O=="x")T="y";else if(C=="z"&&O=="y"||C=="y"&&O=="z")T="x";for(K=0;K<n;K++)for(J=0;J<
v;J++){var Q=new THREE.Vector3;Q[C]=(J*p-s)*x;Q[O]=(K*H-u)*E;Q[T]=N;o.vertices.push(new THREE.Vertex(Q))}for(K=0;K<q;K++)for(J=0;J<l;J++){o.faces.push(new THREE.Face4(J+v*K+F,J+v*(K+1)+F,J+1+v*(K+1)+F,J+1+v*K+F,null,Z));o.uvs.push([new THREE.UV(J/l,K/q),new THREE.UV(J/l,(K+1)/q),new THREE.UV((J+1)/l,(K+1)/q),new THREE.UV((J+1)/l,K/q)])}}THREE.Geometry.call(this);var o=this,z=a/2,d=c/2,w=f/2;m=m?-1:1;if(i!==undefined)if(i instanceof Array)this.materials=i;else{this.materials=[];for(var A=0;A<6;A++)this.materials.push([i])}else this.materials=
[];this.sides={px:true,nx:true,py:true,ny:true,pz:true,nz:true};if(k!=undefined)for(var B in k)if(this.sides[B]!=undefined)this.sides[B]=k[B];this.sides.px&&j("z","y",1*m,-1,f,c,-z,this.materials[0]);this.sides.nx&&j("z","y",-1*m,-1,f,c,z,this.materials[1]);this.sides.py&&j("x","z",1*m,1,a,f,d,this.materials[2]);this.sides.ny&&j("x","z",1*m,-1,a,f,-d,this.materials[3]);this.sides.pz&&j("x","y",1*m,-1,a,c,w,this.materials[4]);this.sides.nz&&j("x","y",-1*m,-1,a,c,-w,this.materials[5]);(function(){for(var C=
[],O=[],x=0,E=o.vertices.length;x<E;x++){for(var p=o.vertices[x],J=false,N=0,Z=C.length;N<Z;N++){var T=C[N];if(p.position.x==T.position.x&&p.position.y==T.position.y&&p.position.z==T.position.z){O[x]=N;J=true;break}}if(!J){O[x]=C.length;C.push(new THREE.Vertex(p.position.clone()))}}x=0;for(E=o.faces.length;x<E;x++){p=o.faces[x];p.a=O[p.a];p.b=O[p.b];p.c=O[p.c];p.d=O[p.d]}o.vertices=C})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cube.prototype=new THREE.Geometry;
Cube.prototype.constructor=Cube;
var Cylinder=function(a,c,f,e,h){function i(o,z,d){m.vertices.push(new THREE.Vertex(new THREE.Vector3(o,z,d)))}THREE.Geometry.call(this);var m=this,k=Math.PI,j;for(j=0;j<a;j++)i(Math.sin(2*k*j/a)*c,Math.cos(2*k*j/a)*c,0);for(j=0;j<a;j++)i(Math.sin(2*k*j/a)*f,Math.cos(2*k*j/a)*f,e);for(j=0;j<a;j++)m.faces.push(new THREE.Face4(j,j+a,a+(j+1)%a,(j+1)%a));if(f!=0){i(0,0,-h);for(j=a;j<a+a/2;j++)m.faces.push(new THREE.Face4(2*a,(2*j-2*a)%a,(2*j-2*a+1)%a,(2*j-2*a+2)%a))}if(c!=0){i(0,0,e+h);for(j=a+a/2;j<
2*a;j++)m.faces.push(new THREE.Face4((2*j-2*a+2)%a+a,(2*j-2*a+1)%a+a,(2*j-2*a)%a+a,2*a+1))}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cylinder.prototype=new THREE.Geometry;Cylinder.prototype.constructor=Cylinder;
var Plane=function(a,c,f,e){THREE.Geometry.call(this);var h,i=a/2,m=c/2;f=f||1;e=e||1;var k=f+1,j=e+1;a=a/f;var o=c/e;for(h=0;h<j;h++)for(c=0;c<k;c++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(c*a-i,-(h*o-m),0)));for(h=0;h<e;h++)for(c=0;c<f;c++){this.faces.push(new THREE.Face4(c+k*h,c+k*(h+1),c+1+k*(h+1),c+1+k*h));this.uvs.push([new THREE.UV(c/f,h/e),new THREE.UV(c/f,(h+1)/e),new THREE.UV((c+1)/f,(h+1)/e),new THREE.UV((c+1)/f,h/e)])}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};
Plane.prototype=new THREE.Geometry;Plane.prototype.constructor=Plane;
var Sphere=function(a,c,f){THREE.Geometry.call(this);var e,h=Math.PI,i=Math.max(3,c||8),m=Math.max(2,f||6);c=[];for(f=0;f<m+1;f++){e=f/m;var k=a*Math.cos(e*h),j=a*Math.sin(e*h),o=[],z=0;for(e=0;e<i;e++){var d=2*e/i,w=j*Math.sin(d*h);d=j*Math.cos(d*h);(f==0||f==m)&&e>0||(z=this.vertices.push(new THREE.Vertex(new THREE.Vector3(d,k,w)))-1);o.push(z)}c.push(o)}var A,B,C;h=c.length;for(f=0;f<h;f++){i=c[f].length;if(f>0)for(e=0;e<i;e++){o=e==i-1;m=c[f][o?0:e+1];k=c[f][o?i-1:e];j=c[f-1][o?i-1:e];o=c[f-1][o?
0:e+1];w=f/(h-1);A=(f-1)/(h-1);B=(e+1)/i;d=e/i;z=new THREE.UV(1-B,w);w=new THREE.UV(1-d,w);d=new THREE.UV(1-d,A);var O=new THREE.UV(1-B,A);if(f<c.length-1){A=this.vertices[m].position.clone();B=this.vertices[k].position.clone();C=this.vertices[j].position.clone();A.normalize();B.normalize();C.normalize();this.faces.push(new THREE.Face3(m,k,j,[new THREE.Vector3(A.x,A.y,A.z),new THREE.Vector3(B.x,B.y,B.z),new THREE.Vector3(C.x,C.y,C.z)]));this.uvs.push([z,w,d])}if(f>1){A=this.vertices[m].position.clone();
B=this.vertices[j].position.clone();C=this.vertices[o].position.clone();A.normalize();B.normalize();C.normalize();this.faces.push(new THREE.Face3(m,j,o,[new THREE.Vector3(A.x,A.y,A.z),new THREE.Vector3(B.x,B.y,B.z),new THREE.Vector3(C.x,C.y,C.z)]));this.uvs.push([z,d,O])}}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial();this.boundingSphere={radius:a}};Sphere.prototype=new THREE.Geometry;Sphere.prototype.constructor=Sphere;
THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?this.addStatusElement():null};
THREE.Loader.prototype={addStatusElement:function(){var a=document.createElement("div");a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="#b00";a.style.color="#fff";a.style.width="140px";a.style.padding="0.25em 0.25em 0.25em 0.5em";a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var c="Loaded ";c+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1E3).toFixed(2)+" KB";this.statusDomElement.innerHTML=
c},loadAsciiOld:function(a,c){var f=document.createElement("script");f.type="text/javascript";f.onload=c;f.src=a;document.getElementsByTagName("head")[0].appendChild(f)},loadAscii:function(a,c,f){var e=(new Date).getTime();a=new Worker(a);a.onmessage=function(h){THREE.Loader.prototype.createModel(h.data,c,f)};a.postMessage(e)},loadBinary:function(a,c,f){var e=(new Date).getTime();a=new Worker(a);var h=this.showProgress?THREE.Loader.prototype.updateProgress:null;a.onmessage=function(i){THREE.Loader.prototype.loadAjaxBuffers(i.data.buffers,
i.data.materials,c,f,h)};a.onerror=function(i){alert("worker.onerror: "+i.message+"\n"+i.data);i.preventDefault()};a.postMessage(e)},loadAjaxBuffers:function(a,c,f,e,h){var i=new XMLHttpRequest,m=e+"/"+a,k=0;i.onreadystatechange=function(){if(i.readyState==4)i.status==200||i.status==0?THREE.Loader.prototype.createBinModel(i.responseText,f,e,c):alert("Couldn't load ["+m+"] ["+i.status+"]");else if(i.readyState==3){if(h){if(k==0)k=i.getResponseHeader("Content-Length");h({total:k,loaded:i.responseText.length})}}else if(i.readyState==
2)k=i.getResponseHeader("Content-Length")};i.open("GET",m,true);i.overrideMimeType("text/plain; charset=x-user-defined");i.setRequestHeader("Content-Type","text/plain");i.send(null)},createBinModel:function(a,c,f,e){var h=function(i){function m(t,r){var y=z(t,r),D=z(t,r+1),V=z(t,r+2),da=z(t,r+3),ha=(da<<1&255|V>>7)-127;y=(V&127)<<16|D<<8|y;if(y==0&&ha==-127)return 0;return(1-2*(da>>7))*(1+y*Math.pow(2,-23))*Math.pow(2,ha)}function k(t,r){var y=z(t,r),D=z(t,r+1),V=z(t,r+2);return(z(t,r+3)<<24)+(V<<
16)+(D<<8)+y}function j(t,r){var y=z(t,r);return(z(t,r+1)<<8)+y}function o(t,r){var y=z(t,r);return y>127?y-256:y}function z(t,r){return t.charCodeAt(r)&255}function d(t){var r,y,D;r=k(a,t);y=k(a,t+Z);D=k(a,t+T);t=j(a,t+K);THREE.Loader.prototype.f3(x,r,y,D,t)}function w(t){var r,y,D,V,da,ha;r=k(a,t);y=k(a,t+Z);D=k(a,t+T);V=j(a,t+K);da=k(a,t+l);ha=k(a,t+q);t=k(a,t+v);THREE.Loader.prototype.f3n(x,J,r,y,D,V,da,ha,t)}function A(t){var r,y,D,V;r=k(a,t);y=k(a,t+n);D=k(a,t+s);V=k(a,t+u);t=j(a,t+H);THREE.Loader.prototype.f4(x,
r,y,D,V,t)}function B(t){var r,y,D,V,da,ha,za,ba;r=k(a,t);y=k(a,t+n);D=k(a,t+s);V=k(a,t+u);da=j(a,t+H);ha=k(a,t+F);za=k(a,t+Q);ba=k(a,t+R);t=k(a,t+L);THREE.Loader.prototype.f4n(x,J,r,y,D,V,da,ha,za,ba,t)}function C(t){var r,y;r=k(a,t);y=k(a,t+S);t=k(a,t+X);THREE.Loader.prototype.uv3(x,N[r*2],N[r*2+1],N[y*2],N[y*2+1],N[t*2],N[t*2+1])}function O(t){var r,y,D;r=k(a,t);y=k(a,t+G);D=k(a,t+P);t=k(a,t+Y);THREE.Loader.prototype.uv4(x,N[r*2],N[r*2+1],N[y*2],N[y*2+1],N[D*2],N[D*2+1],N[t*2],N[t*2+1])}var x=
this,E=0,p,J=[],N=[],Z,T,K,l,q,v,n,s,u,H,F,Q,R,L,S,X,G,P,Y;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(x,e,i);p={signature:a.substr(E,8),header_bytes:z(a,E+8),vertex_coordinate_bytes:z(a,E+9),normal_coordinate_bytes:z(a,E+10),uv_coordinate_bytes:z(a,E+11),vertex_index_bytes:z(a,E+12),normal_index_bytes:z(a,E+13),uv_index_bytes:z(a,E+14),material_index_bytes:z(a,E+15),nvertices:k(a,E+16),nnormals:k(a,E+16+4),nuvs:k(a,E+16+8),ntri_flat:k(a,E+16+12),ntri_smooth:k(a,E+16+16),ntri_flat_uv:k(a,
E+16+20),ntri_smooth_uv:k(a,E+16+24),nquad_flat:k(a,E+16+28),nquad_smooth:k(a,E+16+32),nquad_flat_uv:k(a,E+16+36),nquad_smooth_uv:k(a,E+16+40)};E+=p.header_bytes;Z=p.vertex_index_bytes;T=p.vertex_index_bytes*2;K=p.vertex_index_bytes*3;l=p.vertex_index_bytes*3+p.material_index_bytes;q=p.vertex_index_bytes*3+p.material_index_bytes+p.normal_index_bytes;v=p.vertex_index_bytes*3+p.material_index_bytes+p.normal_index_bytes*2;n=p.vertex_index_bytes;s=p.vertex_index_bytes*2;u=p.vertex_index_bytes*3;H=p.vertex_index_bytes*
4;F=p.vertex_index_bytes*4+p.material_index_bytes;Q=p.vertex_index_bytes*4+p.material_index_bytes+p.normal_index_bytes;R=p.vertex_index_bytes*4+p.material_index_bytes+p.normal_index_bytes*2;L=p.vertex_index_bytes*4+p.material_index_bytes+p.normal_index_bytes*3;S=p.uv_index_bytes;X=p.uv_index_bytes*2;G=p.uv_index_bytes;P=p.uv_index_bytes*2;Y=p.uv_index_bytes*3;E+=function(t){var r,y,D,V=p.vertex_coordinate_bytes*3,da=t+p.nvertices*V;for(t=t;t<da;t+=V){r=m(a,t);y=m(a,t+p.vertex_coordinate_bytes);D=
m(a,t+p.vertex_coordinate_bytes*2);THREE.Loader.prototype.v(x,r,y,D)}return p.nvertices*V}(E);E+=function(t){var r,y,D,V=p.normal_coordinate_bytes*3,da=t+p.nnormals*V;for(t=t;t<da;t+=V){r=o(a,t);y=o(a,t+p.normal_coordinate_bytes);D=o(a,t+p.normal_coordinate_bytes*2);J.push(r/127,y/127,D/127)}return p.nnormals*V}(E);E+=function(t){var r,y,D=p.uv_coordinate_bytes*2,V=t+p.nuvs*D;for(t=t;t<V;t+=D){r=m(a,t);y=m(a,t+p.uv_coordinate_bytes);N.push(r,y)}return p.nuvs*D}(E);E+=function(t){var r,y=p.vertex_index_bytes*
3+p.material_index_bytes,D=t+p.ntri_flat*y;for(r=t;r<D;r+=y)d(r);return D-t}(E);E+=function(t){var r,y=p.vertex_index_bytes*3+p.material_index_bytes+p.normal_index_bytes*3,D=t+p.ntri_smooth*y;for(r=t;r<D;r+=y)w(r);return D-t}(E);E+=function(t){var r,y=p.vertex_index_bytes*3+p.material_index_bytes,D=y+p.uv_index_bytes*3,V=t+p.ntri_flat_uv*D;for(r=t;r<V;r+=D){d(r);C(r+y)}return V-t}(E);E+=function(t){var r,y=p.vertex_index_bytes*3+p.material_index_bytes+p.normal_index_bytes*3,D=y+p.uv_index_bytes*3,
V=t+p.ntri_smooth_uv*D;for(r=t;r<V;r+=D){w(r);C(r+y)}return V-t}(E);E+=function(t){var r,y=p.vertex_index_bytes*4+p.material_index_bytes,D=t+p.nquad_flat*y;for(r=t;r<D;r+=y)A(r);return D-t}(E);E+=function(t){var r,y=p.vertex_index_bytes*4+p.material_index_bytes+p.normal_index_bytes*4,D=t+p.nquad_smooth*y;for(r=t;r<D;r+=y)B(r);return D-t}(E);E+=function(t){var r,y=p.vertex_index_bytes*4+p.material_index_bytes,D=y+p.uv_index_bytes*4,V=t+p.nquad_flat_uv*D;for(r=t;r<V;r+=D){A(r);O(r+y)}return V-t}(E);
E+=function(t){var r,y=p.vertex_index_bytes*4+p.material_index_bytes+p.normal_index_bytes*4,D=y+p.uv_index_bytes*4,V=t+p.nquad_smooth_uv*D;for(r=t;r<V;r+=D){B(r);O(r+y)}return V-t}(E);this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};h.prototype=new THREE.Geometry;h.prototype.constructor=h;c(new h(f))},createModel:function(a,c,f){var e=function(h){var i=this;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(i,a.materials,h);(function(){var m,k,j,o,z;m=0;for(k=
a.vertices.length;m<k;m+=3){j=a.vertices[m];o=a.vertices[m+1];z=a.vertices[m+2];THREE.Loader.prototype.v(i,j,o,z)}})();(function(){function m(B,C){THREE.Loader.prototype.f3(i,B[C],B[C+1],B[C+2],B[C+3])}function k(B,C){THREE.Loader.prototype.f3n(i,a.normals,B[C],B[C+1],B[C+2],B[C+3],B[C+4],B[C+5],B[C+6])}function j(B,C){THREE.Loader.prototype.f4(i,B[C],B[C+1],B[C+2],B[C+3],B[C+4])}function o(B,C){THREE.Loader.prototype.f4n(i,a.normals,B[C],B[C+1],B[C+2],B[C+3],B[C+4],B[C+5],B[C+6],B[C+7],B[C+8])}function z(B,
C){var O,x,E;O=B[C];x=B[C+1];E=B[C+2];THREE.Loader.prototype.uv3(i,a.uvs[O*2],a.uvs[O*2+1],a.uvs[x*2],a.uvs[x*2+1],a.uvs[E*2],a.uvs[E*2+1])}function d(B,C){var O,x,E,p;O=B[C];x=B[C+1];E=B[C+2];p=B[C+3];THREE.Loader.prototype.uv4(i,a.uvs[O*2],a.uvs[O*2+1],a.uvs[x*2],a.uvs[x*2+1],a.uvs[E*2],a.uvs[E*2+1],a.uvs[p*2],a.uvs[p*2+1])}var w,A;w=0;for(A=a.triangles.length;w<A;w+=4)m(a.triangles,w);w=0;for(A=a.triangles_uv.length;w<A;w+=7){m(a.triangles_uv,w);z(a.triangles_uv,w+4)}w=0;for(A=a.triangles_n.length;w<
A;w+=7)k(a.triangles_n,w);w=0;for(A=a.triangles_n_uv.length;w<A;w+=10){k(a.triangles_n_uv,w);z(a.triangles_n_uv,w+7)}w=0;for(A=a.quads.length;w<A;w+=5)j(a.quads,w);w=0;for(A=a.quads_uv.length;w<A;w+=9){j(a.quads_uv,w);d(a.quads_uv,w+5)}w=0;for(A=a.quads_n.length;w<A;w+=9)o(a.quads_n,w);w=0;for(A=a.quads_n_uv.length;w<A;w+=13){o(a.quads_n_uv,w);d(a.quads_n_uv,w+9)}})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};e.prototype=new THREE.Geometry;e.prototype.constructor=
e;c(new e(f))},v:function(a,c,f,e){a.vertices.push(new THREE.Vertex(new THREE.Vector3(c,f,e)))},f3:function(a,c,f,e,h){a.faces.push(new THREE.Face3(c,f,e,null,a.materials[h]))},f4:function(a,c,f,e,h,i){a.faces.push(new THREE.Face4(c,f,e,h,null,a.materials[i]))},f3n:function(a,c,f,e,h,i,m,k,j){i=a.materials[i];var o=c[k*3],z=c[k*3+1];k=c[k*3+2];var d=c[j*3],w=c[j*3+1];j=c[j*3+2];a.faces.push(new THREE.Face3(f,e,h,[new THREE.Vector3(c[m*3],c[m*3+1],c[m*3+2]),new THREE.Vector3(o,z,k),new THREE.Vector3(d,
w,j)],i))},f4n:function(a,c,f,e,h,i,m,k,j,o,z){m=a.materials[m];var d=c[j*3],w=c[j*3+1];j=c[j*3+2];var A=c[o*3],B=c[o*3+1];o=c[o*3+2];var C=c[z*3],O=c[z*3+1];z=c[z*3+2];a.faces.push(new THREE.Face4(f,e,h,i,[new THREE.Vector3(c[k*3],c[k*3+1],c[k*3+2]),new THREE.Vector3(d,w,j),new THREE.Vector3(A,B,o),new THREE.Vector3(C,O,z)],m))},uv3:function(a,c,f,e,h,i,m){var k=[];k.push(new THREE.UV(c,f));k.push(new THREE.UV(e,h));k.push(new THREE.UV(i,m));a.uvs.push(k)},uv4:function(a,c,f,e,h,i,m,k,j){var o=[];
o.push(new THREE.UV(c,f));o.push(new THREE.UV(e,h));o.push(new THREE.UV(i,m));o.push(new THREE.UV(k,j));a.uvs.push(o)},init_materials:function(a,c,f){a.materials=[];for(var e=0;e<c.length;++e)a.materials[e]=[THREE.Loader.prototype.createMaterial(c[e],f)]},createMaterial:function(a,c){function f(i){i=Math.log(i)/Math.LN2;return Math.floor(i)==i}var e,h;if(a.map_diffuse&&c){h=document.createElement("canvas");e=new THREE.MeshLambertMaterial({map:new THREE.Texture(h)});h=new Image;h.onload=function(){if(!f(this.width)||
!f(this.height)){var i=Math.pow(2,Math.round(Math.log(this.width)/Math.LN2)),m=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));e.map.image.width=i;e.map.image.height=m;e.map.image.getContext("2d").drawImage(this,0,0,i,m)}else e.map.image=this;e.map.image.loaded=1};h.src=c+"/"+a.map_diffuse}else if(a.col_diffuse){h=(a.col_diffuse[0]*255<<16)+(a.col_diffuse[1]*255<<8)+a.col_diffuse[2]*255;e=new THREE.MeshLambertMaterial({color:h,opacity:a.transparency})}else e=a.a_dbg_color?new THREE.MeshLambertMaterial({color:a.a_dbg_color}):
new THREE.MeshLambertMaterial({color:15658734});return e}};
