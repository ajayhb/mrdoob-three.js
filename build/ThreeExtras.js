// ThreeExtras.js r32 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=!0;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHSV:function(a,b,c){var d,f,g,h,k,j;if(c==0)d=f=g=0;else{h=Math.floor(a*6);k=a*6-h;a=c*(1-b);j=c*(1-b*k);b=c*(1-b*(1-k));switch(h){case 1:d=j;f=c;g=a;break;case 2:d=a;f=c;g=b;break;case 3:d=a;f=j;g=c;break;case 4:d=b;f=a;g=c;break;case 5:d=c;f=a;g=j;break;case 6:case 0:d=c;f=b;g=a}}this.r=d;this.g=f;this.b=g;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},
setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+
this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};
THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0;this.api={isDirty:!1,that:this,get x(){return this.that.x},get y(){return this.that.y},get z(){return this.that.z},set x(d){this.that.x=d;this.isDirty=!0},set y(d){this.that.y=d;this.isDirty=!0},set z(d){this.that.z=d;this.isDirty=!0}};this.api.__proto__=THREE.Vector3.prototype;return this.api};
THREE.Vector3.prototype={set:function(a,b,c){var d=this.that;d.x=a;d.y=b;d.z=c;this.isDirty=!0;return this},copy:function(a){var b=this.that;b.x=a.x;b.y=a.y;b.z=a.z;this.isDirty=!0;return this},add:function(a,b){var c=this.that;c.x=a.x+b.x;c.y=a.y+b.y;c.z=a.z+b.z;this.isDirty=!0;return this},addSelf:function(a){var b=this.that;b.x+=a.x;b.y+=a.y;b.z+=a.z;this.isDirty=!0;return this},addScalar:function(a){var b=this.that;b.x+=a;b.y+=a;b.z+=a;this.isDirty=!0;return this},sub:function(a,b){var c=this.that;
c.x=a.x-b.x;c.y=a.y-b.y;c.z=a.z-b.z;this.isDirty=!0;return this},subSelf:function(a){var b=this.that;b.x-=a.x;b.y-=a.y;b.z-=a.z;this.isDirty=!0;return this},cross:function(a,b){var c=this.that;c.x=a.y*b.z-a.z*b.y;c.y=a.z*b.x-a.x*b.z;c.z=a.x*b.y-a.y*b.x;this.isDirty=!0;return this},crossSelf:function(a){var b=this.that,c=b.x,d=b.y,f=b.z;b.x=d*a.z-f*a.y;b.y=f*a.x-c*a.z;b.z=c*a.y-d*a.x;this.isDirty=!0;return this},multiply:function(a,b){var c=this.that;c.x=a.x*b.x;c.y=a.y*b.y;c.z=a.z*b.z;this.isDirty=
!0;return this},multiplySelf:function(a){var b=this.that;b.x*=a.x;b.y*=a.y;b.z*=a.z;this.isDirty=!0;return this},multiplyScalar:function(a){var b=this.that;b.x*=a;b.y*=a;b.z*=a;this.isDirty=!0;return this},divideSelf:function(a){var b=this.that;b.x/=a.x;b.y/=a.y;b.z/=a.z;this.isDirty=!0;return this},divideScalar:function(a){var b=this.that;b.x/=a;b.y/=a;b.z/=a;this.isDirty=!0;return this},dot:function(a){var b=this.that;return b.x*a.x+b.y*a.y+b.z*a.z},distanceTo:function(a){var b=this.that,c=b.x-
a.x,d=b.y-a.y;a=b.z-a.z;return Math.sqrt(c*c+d*d+a*a)},distanceToSquared:function(a){var b=this.that,c=b.x-a.x,d=b.y-a.y;a=b.z-a.z;return c*c+d*d+a*a},length:function(){var a=this.that;return Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z)},lengthSq:function(){var a=this.that;return a.x*a.x+a.y*a.y+a.z*a.z},lengthManhattan:function(){var a=this.that;return a.x+a.y+a.z},negate:function(){var a=this.that;a.x=-this.x;a.y=-this.y;a.z=-this.z;this.isDirty=!0;return this},normalize:function(){var a=this.that;a=Math.sqrt(a.x*
a.x+a.y*a.y+a.z*a.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);this.isDirty=!0;return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){var a=this.that;return Math.abs(a.x)<1.0E-4&&Math.abs(a.y)<1.0E-4&&Math.abs(a.z)<1.0E-4},clone:function(){var a=this.that;return new THREE.Vector3(a.x,a.y,a.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=d!==undefined?d:1};
THREE.Vector4.prototype={set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,b){this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var b,c,d=a.objects,f=[];a=0;for(b=d.length;a<b;a++){c=d[a];c instanceof THREE.Mesh&&(f=f.concat(this.intersectObject(c)))}f.sort(function(g,h){return g.distance-h.distance});return f},intersectObject:function(a){function b(C,o,e,t){t=t.clone().subSelf(o);e=e.clone().subSelf(o);var N=C.clone().subSelf(o);C=t.dot(t);o=t.dot(e);t=t.dot(N);var Q=e.dot(e);e=e.dot(N);N=1/(C*Q-o*o);Q=(Q*t-o*e)*N;C=(C*e-o*t)*N;return Q>0&&C>0&&Q+C<1}var c,d,f,g,h,k,j,m,n,w,
u,q=a.geometry,x=q.vertices,z=[];c=0;for(d=q.faces.length;c<d;c++){f=q.faces[c];w=this.origin.clone();u=this.direction.clone();g=a.matrix.multiplyVector3(x[f.a].position.clone());h=a.matrix.multiplyVector3(x[f.b].position.clone());k=a.matrix.multiplyVector3(x[f.c].position.clone());j=f instanceof THREE.Face4?a.matrix.multiplyVector3(x[f.d].position.clone()):null;m=a.rotationMatrix.multiplyVector3(f.normal.clone());n=u.dot(m);if(n<0){m=m.dot((new THREE.Vector3).sub(g,w))/n;w=w.addSelf(u.multiplyScalar(m));
if(f instanceof THREE.Face3){if(b(w,g,h,k)){f={distance:this.origin.distanceTo(w),point:w,face:f,object:a};z.push(f)}}else if(f instanceof THREE.Face4&&(b(w,g,h,j)||b(w,h,k,j))){f={distance:this.origin.distanceTo(w),point:w,face:f,object:a};z.push(f)}}}return z}};
THREE.Rectangle=function(){function a(){g=d-b;h=f-c}var b,c,d,f,g,h,k=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return g};this.getHeight=function(){return h};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return d};this.getBottom=function(){return f};this.set=function(j,m,n,w){k=!1;b=j;c=m;d=n;f=w;a()};this.addPoint=function(j,m){if(k){k=!1;b=j;c=m;d=j;f=m}else{b=b<j?b:j;c=c<m?c:m;d=d>j?d:j;f=f>m?f:m}a()};
this.add3Points=function(j,m,n,w,u,q){if(k){k=!1;b=j<n?j<u?j:u:n<u?n:u;c=m<w?m<q?m:q:w<q?w:q;d=j>n?j>u?j:u:n>u?n:u;f=m>w?m>q?m:q:w>q?w:q}else{b=j<n?j<u?j<b?j:b:u<b?u:b:n<u?n<b?n:b:u<b?u:b;c=m<w?m<q?m<c?m:c:q<c?q:c:w<q?w<c?w:c:q<c?q:c;d=j>n?j>u?j>d?j:d:u>d?u:d:n>u?n>d?n:d:u>d?u:d;f=m>w?m>q?m>f?m:f:q>f?q:f:w>q?w>f?w:f:q>f?q:f}a()};this.addRectangle=function(j){if(k){k=!1;b=j.getLeft();c=j.getTop();d=j.getRight();f=j.getBottom()}else{b=b<j.getLeft()?b:j.getLeft();c=c<j.getTop()?c:j.getTop();d=d>j.getRight()?
d:j.getRight();f=f>j.getBottom()?f:j.getBottom()}a()};this.inflate=function(j){b-=j;c-=j;d+=j;f+=j;a()};this.minSelf=function(j){b=b>j.getLeft()?b:j.getLeft();c=c>j.getTop()?c:j.getTop();d=d<j.getRight()?d:j.getRight();f=f<j.getBottom()?f:j.getBottom();a()};this.instersects=function(j){return Math.min(d,j.getRight())-Math.max(b,j.getLeft())>=0&&Math.min(f,j.getBottom())-Math.max(c,j.getTop())>=0};this.empty=function(){k=!0;f=d=c=b=0;a()};this.isEmpty=function(){return k};this.toString=function(){return"THREE.Rectangle ( left: "+
b+", right: "+d+", top: "+c+", bottom: "+f+", width: "+g+", height: "+h+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a,b=this.m;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};
THREE.Matrix4=function(a,b,c,d,f,g,h,k,j,m,n,w,u,q,x,z){this.n11=a||1;this.n12=b||0;this.n13=c||0;this.n14=d||0;this.n21=f||0;this.n22=g||1;this.n23=h||0;this.n24=k||0;this.n31=j||0;this.n32=m||0;this.n33=n||1;this.n34=w||0;this.n41=u||0;this.n42=q||0;this.n43=x||0;this.n44=z||1;this.flat=Array(16);this.m33=new THREE.Matrix3;if(typeof Float32Array!=="undefined"){var C=this;this.float32Array=new Float32Array(16);this.float32Array3x3=new Float32Array(9);this.flatten32=function(){var o=C.float32Array;
o[0]=C.n11;o[1]=C.n21;o[2]=C.n31;o[3]=C.n41;o[4]=C.n12;o[5]=C.n22;o[6]=C.n32;o[7]=C.n42;o[8]=C.n13;o[9]=C.n23;o[10]=C.n33;o[11]=C.n43;o[12]=C.n14;o[13]=C.n24;o[14]=C.n34;o[15]=C.n44;return o};this.flatten323x3=function(){var o=C.float32Array3x3;o[0]=C.n11;o[1]=C.n21;o[2]=C.n31;o[3]=C.n12;o[4]=C.n22;o[5]=C.n32;o[6]=C.n13;o[7]=C.n23;o[8]=C.n33;return o}}};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,b,c,d,f,g,h,k,j,m,n,w,u,q,x,z){this.n11=a;this.n12=b;this.n13=c;this.n14=d;this.n21=f;this.n22=g;this.n23=h;this.n24=k;this.n31=j;this.n32=m;this.n33=n;this.n34=w;this.n41=u;this.n42=q;this.n43=x;this.n44=z;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,b,c){var d=THREE.Matrix4.__tmpVec1,f=THREE.Matrix4.__tmpVec2,g=THREE.Matrix4.__tmpVec3;g.sub(a,b).normalize();d.cross(c,g).normalize();f.cross(g,d).normalize();this.n11=d.x;this.n12=d.y;this.n13=d.z;this.n14=-d.dot(a);this.n21=f.x;this.n22=f.y;this.n23=f.z;this.n24=-f.dot(a);
this.n31=g.x;this.n32=g.y;this.n33=g.z;this.n34=-g.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var b=a.x,c=a.y,d=a.z,f=1/(this.n41*b+this.n42*c+this.n43*d+this.n44);a.x=(this.n11*b+this.n12*c+this.n13*d+this.n14)*f;a.y=(this.n21*b+this.n22*c+this.n23*d+this.n24)*f;a.z=(this.n31*b+this.n32*c+this.n33*d+this.n34)*f;return a},multiplyVector3OnlyZ:function(a){var b=a.x,c=a.y;a=a.z;return(this.n31*b+this.n32*c+this.n33*a+this.n34)*(1/(this.n41*b+this.n42*c+this.n43*
a+this.n44))},multiplyVector4:function(a){var b=a.x,c=a.y,d=a.z,f=a.w;a.x=this.n11*b+this.n12*c+this.n13*d+this.n14*f;a.y=this.n21*b+this.n22*c+this.n23*d+this.n24*f;a.z=this.n31*b+this.n32*c+this.n33*d+this.n34*f;a.w=this.n41*b+this.n42*c+this.n43*d+this.n44*f;return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;b.w=a.w?this.n41*
a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},multiply:function(a,b){var c=a.n11,d=a.n12,f=a.n13,g=a.n14,h=a.n21,k=a.n22,j=a.n23,m=a.n24,n=a.n31,w=a.n32,u=a.n33,q=a.n34,x=a.n41,z=a.n42,C=a.n43,o=a.n44,e=b.n11,t=b.n12,N=b.n13,Q=b.n14,ea=b.n21,L=b.n22,G=b.n23,Y=b.n24,T=b.n31,da=b.n32,Z=b.n33,H=b.n34,aa=b.n41,na=b.n42,ba=b.n43,l=b.n44;this.n11=c*e+d*ea+f*T+g*aa;this.n12=c*t+d*L+f*da+g*na;this.n13=c*N+d*G+f*Z+g*ba;this.n14=c*Q+d*Y+f*H+g*l;this.n21=h*e+k*ea+j*T+m*aa;this.n22=h*t+k*L+j*da+m*na;
this.n23=h*N+k*G+j*Z+m*ba;this.n24=h*Q+k*Y+j*H+m*l;this.n31=n*e+w*ea+u*T+q*aa;this.n32=n*t+w*L+u*da+q*na;this.n33=n*N+w*G+u*Z+q*ba;this.n34=n*Q+w*Y+u*H+q*l;this.n41=x*e+z*ea+C*T+o*aa;this.n42=x*t+z*L+C*da+o*na;this.n43=x*N+z*G+C*Z+o*ba;this.n44=x*Q+z*Y+C*H+o*l;return this},multiplyToArray:function(a,b,c){var d=a.n11,f=a.n12,g=a.n13,h=a.n14,k=a.n21,j=a.n22,m=a.n23,n=a.n24,w=a.n31,u=a.n32,q=a.n33,x=a.n34,z=a.n41,C=a.n42,o=a.n43;a=a.n44;var e=b.n11,t=b.n12,N=b.n13,Q=b.n14,ea=b.n21,L=b.n22,G=b.n23,Y=
b.n24,T=b.n31,da=b.n32,Z=b.n33,H=b.n34,aa=b.n41,na=b.n42,ba=b.n43;b=b.n44;this.n11=d*e+f*ea+g*T+h*aa;this.n12=d*t+f*L+g*da+h*na;this.n13=d*N+f*G+g*Z+h*ba;this.n14=d*Q+f*Y+g*H+h*b;this.n21=k*e+j*ea+m*T+n*aa;this.n22=k*t+j*L+m*da+n*na;this.n23=k*N+j*G+m*Z+n*ba;this.n24=k*Q+j*Y+m*H+n*b;this.n31=w*e+u*ea+q*T+x*aa;this.n32=w*t+u*L+q*da+x*na;this.n33=w*N+u*G+q*Z+x*ba;this.n34=w*Q+u*Y+q*H+x*b;this.n41=z*e+C*ea+o*T+a*aa;this.n42=z*t+C*L+o*da+a*na;this.n43=z*N+C*G+o*Z+a*ba;this.n44=z*Q+C*Y+o*H+a*b;c[0]=this.n11;
c[1]=this.n21;c[2]=this.n31;c[3]=this.n41;c[4]=this.n12;c[5]=this.n22;c[6]=this.n32;c[7]=this.n42;c[8]=this.n13;c[9]=this.n23;c[10]=this.n33;c[11]=this.n43;c[12]=this.n14;c[13]=this.n24;c[14]=this.n34;c[15]=this.n44;return this},multiplySelf:function(a){var b=this.n11,c=this.n12,d=this.n13,f=this.n14,g=this.n21,h=this.n22,k=this.n23,j=this.n24,m=this.n31,n=this.n32,w=this.n33,u=this.n34,q=this.n41,x=this.n42,z=this.n43,C=this.n44,o=a.n11,e=a.n21,t=a.n31,N=a.n41,Q=a.n12,ea=a.n22,L=a.n32,G=a.n42,Y=
a.n13,T=a.n23,da=a.n33,Z=a.n43,H=a.n14,aa=a.n24,na=a.n34;a=a.n44;this.n11=b*o+c*e+d*t+f*N;this.n12=b*Q+c*ea+d*L+f*G;this.n13=b*Y+c*T+d*da+f*Z;this.n14=b*H+c*aa+d*na+f*a;this.n21=g*o+h*e+k*t+j*N;this.n22=g*Q+h*ea+k*L+j*G;this.n23=g*Y+h*T+k*da+j*Z;this.n24=g*H+h*aa+k*na+j*a;this.n31=m*o+n*e+w*t+u*N;this.n32=m*Q+n*ea+w*L+u*G;this.n33=m*Y+n*T+w*da+u*Z;this.n34=m*H+n*aa+w*na+u*a;this.n41=q*o+x*e+z*t+C*N;this.n42=q*Q+x*ea+z*L+C*G;this.n43=q*Y+x*T+z*da+C*Z;this.n44=q*H+x*aa+z*na+C*a;return this},multiplyScalar:function(a){this.n11*=
a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){var a=this.n11,b=this.n12,c=this.n13,d=this.n14,f=this.n21,g=this.n22,h=this.n23,k=this.n24,j=this.n31,m=this.n32,n=this.n33,w=this.n34,u=this.n41,q=this.n42,x=this.n43,z=this.n44;return d*h*m*u-c*k*m*u-d*g*n*u+b*k*n*u+c*g*w*u-b*h*w*u-d*h*j*q+c*k*j*q+d*f*n*q-a*k*n*q-c*f*w*q+a*h*w*q+
d*g*j*x-b*k*j*x-d*f*m*x+a*k*m*x+b*f*w*x-a*g*w*x-c*g*j*z+b*h*j*z+c*f*m*z-a*h*m*z-b*f*n*z+a*g*n*z},transpose:function(){function a(b,c,d){var f=b[c];b[c]=b[d];b[d]=f}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;
a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){var a=this.flat;a[0]=this.n11;a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},flattenToArray:function(a){a[0]=this.n11;a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=
this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},flattenToArrayOffset:function(a,b){a[b]=this.n11;a[b+1]=this.n21;a[b+2]=this.n31;a[b+3]=this.n41;a[b+4]=this.n12;a[b+5]=this.n22;a[b+6]=this.n32;a[b+7]=this.n42;a[b+8]=this.n13;a[b+9]=this.n23;a[b+10]=this.n33;a[b+11]=this.n43;a[b+12]=this.n14;a[b+13]=this.n24;a[b+14]=this.n34;a[b+15]=this.n44;return a},setTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);
return this},setScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},setRotX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},setRotY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},setRotZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},setRotAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),f=1-c,g=a.x,h=a.y,k=a.z,j=f*
g,m=f*h;this.set(j*g+c,j*h-d*k,j*k+d*h,0,j*h+d*k,m*h+c,m*k-d*g,0,j*k-d*h,m*k+d*g,f*k*k+c,0,0,0,0,1);return this},setPosition:function(a){this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},setRotationFromEuler:function(a){var b=a.x,c=a.y,d=a.z;a=Math.cos(c);c=Math.sin(c);var f=Math.cos(-d);d=Math.sin(-d);var g=Math.cos(b);b=Math.sin(b);var h=a*d,k=c*d;this.n11=a*f;this.n12=c*b-h*g;this.n13=h*b+c*g;this.n21=d;this.n22=f*g;this.n23=-f*b;this.n31=-c*f;this.n32=k*g+a*b;this.n33=-k*b+a*g},setRotationFromQuaternion:function(a){var b=
a.x,c=a.y,d=a.z,f=a.w,g=b+b,h=c+c,k=d+d;a=b*g;var j=b*h;b*=k;var m=c*h;c*=k;d*=k;g*=f;h*=f;f*=k;this.n11=1-(m+d);this.n12=j-f;this.n13=b+h;this.n21=j+f;this.n22=1-(a+d);this.n23=c-g;this.n31=b-h;this.n32=c+g;this.n33=1-(a+m)},scale:function(a){var b=a.x,c=a.y;a=a.z;this.n11*=b;this.n12*=b;this.n13*=b;this.n21*=c;this.n22*=c;this.n23*=c;this.n31*=a;this.n32*=a;this.n33*=a;return this},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+
this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,b,c){var d=new THREE.Matrix4;d.setTranslation(a,b,c);return d};THREE.Matrix4.scaleMatrix=function(a,b,c){var d=new THREE.Matrix4;d.setScale(a,b,c);return d};THREE.Matrix4.rotationXMatrix=function(a){var b=new THREE.Matrix4;b.setRotX(a);return b};
THREE.Matrix4.rotationYMatrix=function(a){var b=new THREE.Matrix4;b.setRotY(a);return b};THREE.Matrix4.rotationZMatrix=function(a){var b=new THREE.Matrix4;b.setRotZ(a);return b};THREE.Matrix4.rotationAxisAngleMatrix=function(a,b){var c=new THREE.Matrix4;c.setRotAxis(a,b);return c};
THREE.Matrix4.makeInvert=function(a,b){var c=a.n11,d=a.n12,f=a.n13,g=a.n14,h=a.n21,k=a.n22,j=a.n23,m=a.n24,n=a.n31,w=a.n32,u=a.n33,q=a.n34,x=a.n41,z=a.n42,C=a.n43,o=a.n44;b===undefined&&(b=new THREE.Matrix4);b.n11=j*q*z-m*u*z+m*w*C-k*q*C-j*w*o+k*u*o;b.n12=g*u*z-f*q*z-g*w*C+d*q*C+f*w*o-d*u*o;b.n13=f*m*z-g*j*z+g*k*C-d*m*C-f*k*o+d*j*o;b.n14=g*j*w-f*m*w-g*k*u+d*m*u+f*k*q-d*j*q;b.n21=m*u*x-j*q*x-m*n*C+h*q*C+j*n*o-h*u*o;b.n22=f*q*x-g*u*x+g*n*C-c*q*C-f*n*o+c*u*o;b.n23=g*j*x-f*m*x-g*h*C+c*m*C+f*h*o-c*j*o;
b.n24=f*m*n-g*j*n+g*h*u-c*m*u-f*h*q+c*j*q;b.n31=k*q*x-m*w*x+m*n*z-h*q*z-k*n*o+h*w*o;b.n32=g*w*x-d*q*x-g*n*z+c*q*z+d*n*o-c*w*o;b.n33=f*m*x-g*k*x+g*h*z-c*m*z-d*h*o+c*k*o;b.n34=g*k*n-d*m*n-g*h*w+c*m*w+d*h*q-c*k*q;b.n41=j*w*x-k*u*x-j*n*z+h*u*z+k*n*C-h*w*C;b.n42=d*u*x-f*w*x+f*n*z-c*u*z-d*n*C+c*w*C;b.n43=f*k*x-d*j*x-f*h*z+c*j*z+d*h*C-c*k*C;b.n44=d*j*n-f*k*n+f*h*w-c*j*w-d*h*u+c*k*u;b.multiplyScalar(1/a.determinant());return b};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.m33,c=b.m,d=a.n33*a.n22-a.n32*a.n23,f=-a.n33*a.n21+a.n31*a.n23,g=a.n32*a.n21-a.n31*a.n22,h=-a.n33*a.n12+a.n32*a.n13,k=a.n33*a.n11-a.n31*a.n13,j=-a.n32*a.n11+a.n31*a.n12,m=a.n23*a.n12-a.n22*a.n13,n=-a.n23*a.n11+a.n21*a.n13,w=a.n22*a.n11-a.n21*a.n12;a=a.n11*d+a.n21*h+a.n31*m;if(a==0)throw"matrix not invertible";a=1/a;c[0]=a*d;c[1]=a*f;c[2]=a*g;c[3]=a*h;c[4]=a*k;c[5]=a*j;c[6]=a*m;c[7]=a*n;c[8]=a*w;return b};
THREE.Matrix4.makeFrustum=function(a,b,c,d,f,g){var h;h=new THREE.Matrix4;h.n11=2*f/(b-a);h.n12=0;h.n13=(b+a)/(b-a);h.n14=0;h.n21=0;h.n22=2*f/(d-c);h.n23=(d+c)/(d-c);h.n24=0;h.n31=0;h.n32=0;h.n33=-(g+f)/(g-f);h.n34=-2*g*f/(g-f);h.n41=0;h.n42=0;h.n43=-1;h.n44=0;return h};THREE.Matrix4.makePerspective=function(a,b,c,d){var f;a=c*Math.tan(a*Math.PI/360);f=-a;return THREE.Matrix4.makeFrustum(f*b,a*b,f,a,c,d)};
THREE.Matrix4.makeOrtho=function(a,b,c,d,f,g){var h,k,j,m;h=new THREE.Matrix4;k=b-a;j=c-d;m=g-f;h.n11=2/k;h.n12=0;h.n13=0;h.n14=-((b+a)/k);h.n21=0;h.n22=2/j;h.n23=0;h.n24=-((c+d)/j);h.n31=0;h.n32=0;h.n33=-2/m;h.n34=-((g+f)/m);h.n41=0;h.n42=0;h.n43=0;h.n44=1;return h};THREE.Matrix4.__tmpVec1=new THREE.Vector3;THREE.Matrix4.__tmpVec2=new THREE.Vector3;THREE.Matrix4.__tmpVec3=new THREE.Vector3;
THREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=d!==undefined?d:1;this.api={isDirty:!1,that:this,get x(){return this.that.x},get y(){return this.that.y},get z(){return this.that.z},get w(){return this.that.w},set x(f){this.that.x=f;this.isDirty=!0},set y(f){this.that.y=f;this.isDirty=!0},set z(f){this.that.z=f;this.isDirty=!0},set w(f){this.that.w=f;this.isDirty=!0}};this.api.__proto__=THREE.Quaternion.prototype;return this.api};
THREE.Quaternion.prototype.set=function(a,b,c,d){var f=this.that;f.x=a;f.y=b;f.z=c;f.w=d;this.isDirty=!0;return this};THREE.Quaternion.prototype.setFromEuler=function(a){var b=0.5*Math.PI/360,c=a.x*b,d=a.y*b,f=a.z*b;a=Math.cos(d);d=Math.sin(d);b=Math.cos(-f);f=Math.sin(-f);var g=Math.cos(c);c=Math.sin(c);var h=a*b,k=d*f,j=this.that;j.w=h*g-k*c;j.x=h*c+k*g;j.y=d*b*g+a*f*c;j.z=a*f*g-d*b*c;this.isDirty=!0;return this};
THREE.Quaternion.prototype.calculateW=function(){var a=this.that,b=a.x,c=a.y,d=a.z;a.w=-Math.sqrt(Math.abs(1-b*b-c*c-d*d));this.isDirty=!0;return this};THREE.Quaternion.prototype.inverse=function(){var a=this.that;a.x*=-1;a.y*=-1;a.z*=-1;this.isDirty=!0;return this};THREE.Quaternion.prototype.length=function(){var a=this.that;return Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z+a.w*a.w)};
THREE.Quaternion.prototype.normalize=function(){var a=this.that,b=a.x,c=a.y,d=a.z,f=a.w,g=Math.sqrt(b*b+c*c+d*d+f*f);if(g==0){a.x=0;a.y=0;a.z=0;a.w=0;this.isDirty=!0;return this}g=1/g;a.x=b*g;a.y=c*g;a.z=d*g;a.w=f*g;this.isDirty=!0;return this};
THREE.Quaternion.prototype.multiplySelf=function(a){var b=this.that;qax=b.x;qay=b.y;qaz=b.z;qaw=b.w;qbx=a.x;qby=a.y;qbz=a.z;qbw=a.w;b.x=qax*qbw+qaw*qbx+qay*qbz-qaz*qby;b.y=qay*qbw+qaw*qby+qaz*qbx-qax*qbz;b.z=qaz*qbw+qaw*qbz+qax*qby-qay*qbx;b.w=qaw*qbw-qax*qbx-qay*qby-qaz*qbz;this.isDirty=!0;return this};
THREE.Quaternion.prototype.multiplyVector3=function(a,b){b||(b=a);var c=this.that,d=a.x,f=a.y,g=a.z,h=c.x,k=c.y,j=c.z;c=c.w;var m=c*d+k*g-j*f,n=c*f+j*d-h*g,w=c*g+h*f-k*d;d=-h*d-k*f-j*g;b.x=m*c+d*-h+n*-j-w*-k;b.y=n*c+d*-k+w*-h-m*-j;b.z=w*c+d*-j+m*-k-n*-h;return b};THREE.Quaternion.prototype.toMatrix3=function(){};THREE.Quaternion.prototype.toMatrix4=function(){};
THREE.Quaternion.slerp=function(a,b,c,d){var f=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;if(Math.abs(f)>=1){c.w=a.w;c.x=a.x;c.y=a.y;c.z=a.z;return c}var g=Math.acos(f),h=Math.sqrt(1-f*f);if(Math.abs(h)<0.0010){c.w=0.5*(a.w+b.w);c.x=0.5*(a.x+b.x);c.y=0.5*(a.y+b.y);c.z=0.5*(a.z+b.z);return c}f=Math.sin((1-d)*g)/h;d=Math.sin(d*g)/h;c.w=a.w*f+b.w*d;c.x=a.x*f+b.x*d;c.y=a.y*f+b.y*d;c.z=a.z*f+b.z*d;return c};
THREE.Vertex=function(a,b){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=b||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=!0};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,b,c,d,f){this.a=a;this.b=b;this.c=c;this.centroid=new THREE.Vector3;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.materials=f instanceof Array?f:[f]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,b,c,d,f,g){this.a=a;this.b=b;this.c=c;this.d=d;this.centroid=new THREE.Vector3;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.materials=g instanceof Array?g:[g]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.id="Geometry"+THREE.GeometryIdCounter++;this.vertices=[];this.faces=[];this.uvs=[];this.uvs2=[];this.colors=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=!1};
THREE.Geometry.prototype={computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++){c=this.faces[a];c.centroid.set(0,0,0);if(c instanceof THREE.Face3){c.centroid.addSelf(this.vertices[c.a].position);c.centroid.addSelf(this.vertices[c.b].position);c.centroid.addSelf(this.vertices[c.c].position);c.centroid.divideScalar(3)}else if(c instanceof THREE.Face4){c.centroid.addSelf(this.vertices[c.a].position);c.centroid.addSelf(this.vertices[c.b].position);c.centroid.addSelf(this.vertices[c.c].position);
c.centroid.addSelf(this.vertices[c.d].position);c.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var b,c,d,f,g,h,k=new THREE.Vector3,j=new THREE.Vector3;d=0;for(f=this.vertices.length;d<f;d++){g=this.vertices[d];g.normal.set(0,0,0)}d=0;for(f=this.faces.length;d<f;d++){g=this.faces[d];if(a&&g.vertexNormals.length){k.set(0,0,0);b=0;for(c=g.normal.length;b<c;b++)k.addSelf(g.vertexNormals[b]);k.divideScalar(3)}else{b=this.vertices[g.a];c=this.vertices[g.b];h=this.vertices[g.c];k.sub(h.position,
c.position);j.sub(b.position,c.position);k.crossSelf(j)}k.isZero()||k.normalize();g.normal.copy(k)}},computeVertexNormals:function(){var a,b,c,d;if(this.__tmpVertices==undefined){d=this.__tmpVertices=Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)d[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++){c=this.faces[a];if(c instanceof THREE.Face3)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(c instanceof THREE.Face4)c.vertexNormals=[new THREE.Vector3,
new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}}else{d=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)d[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++){c=this.faces[a];if(c instanceof THREE.Face3){d[c.a].addSelf(c.normal);d[c.b].addSelf(c.normal);d[c.c].addSelf(c.normal)}else if(c instanceof THREE.Face4){d[c.a].addSelf(c.normal);d[c.b].addSelf(c.normal);d[c.c].addSelf(c.normal);d[c.d].addSelf(c.normal)}}a=0;for(b=this.vertices.length;a<b;a++)d[a].normalize();a=0;for(b=this.faces.length;a<
b;a++){c=this.faces[a];if(c instanceof THREE.Face3){c.vertexNormals[0].copy(d[c.a]);c.vertexNormals[1].copy(d[c.b]);c.vertexNormals[2].copy(d[c.c])}else if(c instanceof THREE.Face4){c.vertexNormals[0].copy(d[c.a]);c.vertexNormals[1].copy(d[c.b]);c.vertexNormals[2].copy(d[c.c]);c.vertexNormals[3].copy(d[c.d])}}},computeTangents:function(){function a(H,aa,na,ba,l,B,y){g=H.vertices[aa].position;h=H.vertices[na].position;k=H.vertices[ba].position;j=f[l];m=f[B];n=f[y];w=h.x-g.x;u=k.x-g.x;q=h.y-g.y;x=k.y-
g.y;z=h.z-g.z;C=k.z-g.z;o=m.u-j.u;e=n.u-j.u;t=m.v-j.v;N=n.v-j.v;Q=1/(o*N-e*t);G.set((N*w-t*u)*Q,(N*q-t*x)*Q,(N*z-t*C)*Q);Y.set((o*u-e*w)*Q,(o*x-e*q)*Q,(o*C-e*z)*Q);ea[aa].addSelf(G);ea[na].addSelf(G);ea[ba].addSelf(G);L[aa].addSelf(Y);L[na].addSelf(Y);L[ba].addSelf(Y)}var b,c,d,f,g,h,k,j,m,n,w,u,q,x,z,C,o,e,t,N,Q,ea=[],L=[],G=new THREE.Vector3,Y=new THREE.Vector3,T=new THREE.Vector3,da=new THREE.Vector3,Z=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++){ea[b]=new THREE.Vector3;L[b]=new THREE.Vector3}b=
0;for(c=this.faces.length;b<c;b++){d=this.faces[b];f=this.uvs[b];if(d instanceof THREE.Face3){a(this,d.a,d.b,d.c,0,1,2);this.vertices[d.a].normal.copy(d.vertexNormals[0]);this.vertices[d.b].normal.copy(d.vertexNormals[1]);this.vertices[d.c].normal.copy(d.vertexNormals[2])}else if(d instanceof THREE.Face4){a(this,d.a,d.b,d.c,0,1,2);a(this,d.a,d.b,d.d,0,1,3);this.vertices[d.a].normal.copy(d.vertexNormals[0]);this.vertices[d.b].normal.copy(d.vertexNormals[1]);this.vertices[d.c].normal.copy(d.vertexNormals[2]);
this.vertices[d.d].normal.copy(d.vertexNormals[3])}}b=0;for(c=this.vertices.length;b<c;b++){Z.copy(this.vertices[b].normal);d=ea[b];T.copy(d);T.subSelf(Z.multiplyScalar(Z.dot(d))).normalize();da.cross(this.vertices[b].normal,d);d=da.dot(L[b]);d=d<0?-1:1;this.vertices[b].tangent.set(T.x,T.y,T.z,d)}this.hasTangents=!0},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],
z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,c=this.vertices.length;b<c;b++){a=this.vertices[b];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>
this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,b=0,c=this.vertices.length;b<c;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(n){var w=[];b=0;for(c=n.length;b<c;b++)n[b]==undefined?w.push("undefined"):w.push(n[b].toString());return w.join("_")}var b,c,d,f,g,h,k,j,m={};d=0;for(f=this.faces.length;d<f;d++){g=this.faces[d];
h=g.materials;k=a(h);m[k]==undefined&&(m[k]={hash:k,counter:0});j=m[k].hash+"_"+m[k].counter;this.geometryChunks[j]==undefined&&(this.geometryChunks[j]={faces:[],materials:h,vertices:0});g=g instanceof THREE.Face3?3:4;if(this.geometryChunks[j].vertices+g>65535){m[k].counter+=1;j=m[k].hash+"_"+m[k].counter;this.geometryChunks[j]==undefined&&(this.geometryChunks[j]={faces:[],materials:h,vertices:0})}this.geometryChunks[j].faces.push(d);this.geometryChunks[j].vertices+=g}},toString:function(){return"THREE.Geometry ( vertices: "+
this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};THREE.GeometryIdCounter=0;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.visible=!0;this.autoUpdateMatrix=!0;this.matrixNeedsToUpdate=!0;this.parent=undefined;this.children=[];this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.localMatrix=new THREE.Matrix4;this.globalMatrix=new THREE.Matrix4;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.screenPosition=new THREE.Vector4;this.boundRadius=0;this.boundRadiusScale=1};
THREE.Object3D.prototype.update=function(a,b,c,d){if(this.visible){this.autoUpdateMatrix&&(b|=this.updateMatrix());if(b||this.matrixNeedsToUpdate){a?this.globalMatrix.multiply(a,this.localMatrix):this.globalMatrix.copy(this.localMatrix);this.matrixNeedsToUpdate=!1;b=!0}for(a=0;a<this.children.length;a++)this.children[a].update(this.globalMatrix,b,c,d)}};
THREE.Object3D.prototype.updateMatrix=function(){var a=!1;if(this.position.isDirty){this.localMatrix.setPosition(this.position);this.position.isDirty=!1;a=!0}if(this.useQuaternion){if(this.quaternion.isDirty){this.localMatrix.setRotationFromQuaternion(this.quaternion);this.quaternion.isDirty=!1;this.rotation.isDirty=!1;if(this.scale.isDirty||this.scale.x!==1||this.scale.y!==1||this.scale.z!==1){this.localMatrix.scale(this.scale);this.scale.isDirty=!1;this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,
this.scale.z))}a=!0}}else if(this.rotation.isDirty){this.localMatrix.setRotationFromEuler(this.rotation);this.rotation.isDirty=!1;if(this.scale.isDirty||this.scale.x!==1||this.scale.y!==1||this.scale.z!==1){this.localMatrix.scale(this.scale);this.scale.isDirty=!1;this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z))}a=!0}if(this.scale.isDirty){this.useQuaternion?this.localMatrix.setRotationFromQuaternion(this.quaternion):this.localMatrix.setRotationFromEuler(this.rotation);
this.localMatrix.scale(this.scale);this.scale.isDirty=!1;this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));a=!0}return a};THREE.Object3D.prototype.addChild=function(a){if(this.children.indexOf(a)===-1){a.parent!==undefined&&a.parent.removeChild(a);a.parent=this;this.children.push(a)}};THREE.Object3D.prototype.removeChild=function(){var a=this.children.indexOf(child);if(a!==-1){this.children.splice(a,1);child.parent=undefined}};THREE.Object3DCounter={value:0};
THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=!1};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.sortParticles=!1};THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;
THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.type=c!=undefined?c:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b&&b.length?b:[b];this.normalMatrix=THREE.Matrix4.makeInvert3x3(this.globalMatrix).transpose();this.flipSided=!1;this.doubleSided=!1;this.overdraw=!1;if(this.geometry){this.geometry.boundingSphere||this.geometry.computeBoundingSphere();this.boundRadius=a.boundingSphere.radius}};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.supr=THREE.Object3D.prototype;
THREE.Mesh.prototype.update=function(a,b,c,d){if(this.visible){this.autoUpdateMatrix&&(b|=this.updateMatrix());if(b||this.matrixNeedsToUpdate){a?this.globalMatrix.multiply(a,this.localMatrix):this.globalMatrix.copy(this.localMatrix);this.matrixNeedsToUpdate=!1;b=!0;this.normalMatrix=THREE.Matrix4.makeInvert3x3(this.globalMatrix).transpose()}for(a=0;a<this.children.length;a++)this.children[a].update(this.globalMatrix,b,c,d);d&&c&&(c.frustumContains(this)?d.addToRenderList(this):d.removeFromRenderList(this))}else d.removeFromRenderList(this)};
THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4;this.hasNoneBoneChildren=!1};THREE.Bone.prototype=new THREE.Object3D;THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.supr=THREE.Object3D.prototype;
THREE.Bone.prototype.update=function(a,b,c,d){this.autoUpdateMatrix&&(b|=this.updateMatrix());if(b||this.matrixNeedsToUpdate){a?this.skinMatrix.multiply(a,this.localMatrix):this.skinMatrix.copy(this.localMatrix);this.matrixNeedsToUpdate=!1;b=!0}if(this.hasNoneBoneChildren){this.globalMatrix.multiply(this.skin.globalMatrix,this.skinMatrix);for(a=0;a<this.children.length;a++)this.children[a]instanceof THREE.Bone?this.children[a].update(this.skinMatrix,b,c,d):this.children[a].update(this.globalMatrix,
!0,c,d)}else for(a=0;a<this.children.length;a++)this.children[a].update(this.skinMatrix,b,c,d)};THREE.Bone.prototype.addChild=function(a){if(this.children.indexOf(a)===-1){a.parent!==undefined&&a.parent.removeChild(a);a.parent=this;this.children.push(a);if(!(a instanceof THREE.Bone))this.hasNoneBoneChildren=!0}};if(!window.Float32Array)window.Float32Array=Array;
THREE.SkinnedMesh=function(a,b){THREE.Mesh.call(this,a,b);this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];if(this.geometry.bones!==undefined){for(var c=0;c<this.geometry.bones.length;c++){var d=this.addBone();d.name=this.geometry.bones[c].name;d.position.x=this.geometry.bones[c].pos[0];d.position.y=this.geometry.bones[c].pos[1];d.position.z=this.geometry.bones[c].pos[2];d.quaternion.x=this.geometry.bones[c].rotq[0];d.quaternion.y=this.geometry.bones[c].rotq[1];d.quaternion.z=
this.geometry.bones[c].rotq[2];d.quaternion.w=this.geometry.bones[c].rotq[3];d.scale.x=this.geometry.bones[c].scl!==undefined?this.geometry.bones[c].scl[0]:1;d.scale.y=this.geometry.bones[c].scl!==undefined?this.geometry.bones[c].scl[1]:1;d.scale.z=this.geometry.bones[c].scl!==undefined?this.geometry.bones[c].scl[2]:1}for(c=0;c<this.bones.length;c++)this.geometry.bones[c].parent===-1?this.addChild(this.bones[c]):this.bones[this.geometry.bones[c].parent].addChild(this.bones[c]);this.boneMatrices=new Float32Array(16*
this.bones.length);this.pose()}};THREE.SkinnedMesh.prototype=new THREE.Mesh;THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;
THREE.SkinnedMesh.prototype.update=function(a,b,c,d){if(this.visible){this.autoUpdateMatrix&&(b|=this.updateMatrix());if(b||this.matrixNeedsToUpdate){a?this.globalMatrix.multiply(a,this.localMatrix):this.globalMatrix.copy(this.localMatrix);this.matrixNeedsToUpdate=!1;b=!0;this.normalMatrix=THREE.Matrix4.makeInvert3x3(this.globalMatrix).transpose()}for(a=0;a<this.children.length;a++)this.children[a]instanceof THREE.Bone?this.children[a].update(this.identityMatrix,!1,c,d):this.children[a].update(this.globalMatrix,
b,c,d);d&&c&&(c.frustumContains(this)?d.addToRenderList(this):d.removeFromRenderList(this))}else d.removeFromRenderList(this)};THREE.SkinnedMesh.prototype.addBone=function(a){a===undefined&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.pose=function(){this.update(undefined,!0);for(var a,b=[],c=0;c<this.bones.length;c++){a=this.bones[c];b.push(THREE.Matrix4.makeInvert(a.skinMatrix));a.skinMatrix.flattenToArrayOffset(this.boneMatrices,c*16)}if(this.geometry.skinVerticesA===undefined){this.geometry.skinVerticesA=[];this.geometry.skinVerticesB=[];var d;for(a=0;a<this.geometry.skinIndices.length;a++){c=this.geometry.vertices[a].position;var f=this.geometry.skinIndices[a].x,g=this.geometry.skinIndices[a].y;
d=new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesA.push(b[f].multiplyVector3(d));d=new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesB.push(b[g].multiplyVector3(d));if(this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y!==1){c=(1-(this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y))*0.5;this.geometry.skinWeights[a].x+=c;this.geometry.skinWeights[a].y+=c}}}};
THREE.AnimationHandler=function(){var a=[],b={};b.update=function(c){for(var d=0;d<a.length;d++)a[d].update(c)};b.add=function(c){a.indexOf(c)===-1&&a.push(c)};b.remove=function(c){a.indexOf(c)!==-1&&a.splice(childIndex,1)};b.initData=function(c){if(c.initialized!==!0){for(var d=0;d<c.hierarchy.length;d++)for(var f=0;f<c.hierarchy[d].keys.length;f++){if(c.hierarchy[d].keys[f].time<0)c.hierarchy[d].keys[f].time=0;c.hierarchy[d].keys[f].index=f;if(c.hierarchy[d].keys[f].rot!==undefined&&!(c.hierarchy[d].keys[f].rot instanceof
THREE.Quaternion)){var g=c.hierarchy[d].keys[f].rot;c.hierarchy[d].keys[f].rot=new THREE.Quaternion(g[0],g[1],g[2],g[3])}}f=parseInt(c.length*c.fps,10);c.JIT={};c.JIT.hierarchy=[];for(d=0;d<c.hierarchy.length;d++)c.JIT.hierarchy.push(Array(f));c.initialized=!0}};return b}();
THREE.Animation=function(a,b){this.root=a;this.data=b;this.hierarchy=[];this.startTime=0;this.isPlaying=!1;this.loop=!0;this.offset=0;this.data.initialized||THREE.AnimationHandler.initData(this.data);if(a instanceof THREE.SkinnedMesh)for(var c=0;c<this.root.bones.length;c++)this.hierarchy.push(this.root.bones[c])};
THREE.Animation.prototype.play=function(){if(!this.isPlaying){this.isPlaying=!0;this.startTime=(new Date).getTime()*0.0010;for(var a=0;a<this.hierarchy.length;a++){this.hierarchy[a].useQuaternion=!0;this.hierarchy[a].autoUpdateMatrix=!0;if(this.hierarchy[a].prevKey===undefined){this.hierarchy[a].prevKey={pos:0,rot:0,scl:0};this.hierarchy[a].nextKey={pos:0,rot:0,scl:0}}this.hierarchy[a].prevKey.pos=this.data.hierarchy[a].keys[0];this.hierarchy[a].prevKey.rot=this.data.hierarchy[a].keys[0];this.hierarchy[a].prevKey.scl=
this.data.hierarchy[a].keys[0];this.hierarchy[a].nextKey.pos=this.getNextKeyWith("pos",a,1);this.hierarchy[a].nextKey.rot=this.getNextKeyWith("rot",a,1);this.hierarchy[a].nextKey.scl=this.getNextKeyWith("scl",a,1)}this.update();THREE.AnimationHandler.add(this)}};THREE.Animation.prototype.pause=function(){THREE.AnimationHandler.remove(this)};THREE.Animation.prototype.stop=function(){this.isPlaying=!1;THREE.AnimationHandler.remove(this)};
THREE.Animation.prototype.update=function(){if(this.isPlaying){var a=["pos","rot","scl"],b,c,d,f,g,h,k=this.data.JIT.hierarchy,j=(new Date).getTime()*0.0010-this.startTime+this.offset,m=j;if(j>this.data.length){for(;j>this.data.length;)j-=this.data.length;this.startTime=(new Date).getTime()*0.0010-j;j=(new Date).getTime()*0.0010-this.startTime}h=Math.min(parseInt(j*this.data.fps),parseInt(this.data.length*this.data.fps));for(var n=0,w=this.hierarchy.length;n<w;n++){g=this.hierarchy[n];if(k[n][h]!==
undefined){g.skinMatrix=k[n][h];g.autoUpdateMatrix=!1;g.matrixNeedsToUpdate=!1;g.skinMatrix.flattenToArrayOffset(this.root.boneMatrices,n*16)}else for(var u=0;u<3;u++){c=a[u];d=g.prevKey[c];f=g.nextKey[c];if(f.time<m){if(j<m)if(this.loop){d=this.data.hierarchy[n].keys[0];f=this.getNextKeyWith(c,n,1)}else{this.stop();return}else{do{d=f;f=this.getNextKeyWith(c,n,f.index+1)}while(f.time<j)}g.prevKey[c]=d;g.nextKey[c]=f}g.autoUpdateMatrix=!0;g.matrixNeedsToUpdate=!0;b=(j-d.time)/(f.time-d.time);d=d[c];
f=f[c];if(c==="rot"){if(b<0||b>1){console.log("Scale out of bounds:"+b);b=b<0?0:1}THREE.Quaternion.slerp(d,f,g.quaternion,b)}else{c=c==="pos"?g.position:g.scale;c.x=d[0]+(f[0]-d[0])*b;c.y=d[1]+(f[1]-d[1])*b;c.z=d[2]+(f[2]-d[2])*b}}}if(k[0][h]===undefined){this.hierarchy[0].update(undefined,!0);for(n=0;n<this.hierarchy.length;n++)k[n][h]=this.hierarchy[n].skinMatrix.clone()}}};THREE.Animation.prototype.updateObject=function(){};
THREE.Animation.prototype.getNextKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys;c<d.length;c++)if(d[c][a]!==undefined)return d[c];return this.data.hierarchy[b].keys[0]};
THREE.Camera=function(a,b,c,d,f,g){THREE.Object3D.call(this);this.FOV=a||50;this.aspect=b||1;this.zNear=c||0.1;this.zFar=d||2E3;this.screenCenterY=this.screenCenterX=0;this.target=g||new THREE.Object3D;this.useTarget=!0;this.up=new THREE.Vector3(0,1,0);this.inverseMatrix=new THREE.Matrix4;this.projectionMatrix=null;this.updateProjectionMatrix()};THREE.Camera.prototype=new THREE.Object3D;THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.supr=THREE.Object3D.prototype;
THREE.Camera.prototype.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.FOV,this.aspect,this.zNear,this.zFar)};
THREE.Camera.prototype.update=function(a,b,c,d){if(this.useTarget){this.localMatrix.lookAt(this.position,this.target.position,this.up);a?this.globalMatrix.multiply(a,this.localMatrix):this.globalMatrix.copy(this.localMatrix);THREE.Matrix4.makeInvert(this.globalMatrix,this.inverseMatrix);b=!0}else{this.autoUpdateMatrix&&(b|=this.updateMatrix());if(b||this.matrixNeedsToUpdate){a?this.globalMatrix.multiply(a,this.localMatrix):this.globalMatrix.copy(this.localMatrix);this.matrixNeedsToUpdate=!1;b=!0;
THREE.Matrix4.makeInvert(this.globalMatrix,this.inverseMatrix)}}for(a=0;a<this.children.length;a++)this.children[a].update(this.globalMatrix,b,d,renderer)};
THREE.Camera.prototype.frustumContains=function(a){var b=a.globalMatrix.n14,c=a.globalMatrix.n24,d=a.globalMatrix.n34,f=this.inverseMatrix,g=a.boundRadius*a.boundRadiusScale,h=f.n31*b+f.n32*c+f.n33*d+f.n34;if(h-g>-this.zNear)return!1;if(h+g<-this.zFar)return!1;h-=g;var k=this.projectionMatrix,j=1/(k.n43*h),m=j*this.screenCenterX,n=(f.n11*b+f.n12*c+f.n13*d+f.n14)*k.n11*m;g=k.n11*g*m;if(n+g<-this.screenCenterX)return!1;if(n-g>this.screenCenterX)return!1;b=(f.n21*b+f.n22*c+f.n23*d+f.n24)*k.n22*j*this.screenCenterY;
if(b+g<-this.screenCenterY)return!1;if(b-g>this.screenCenterY)return!1;a.screenPosition.set(n,b,h,g);return!0};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=new THREE.Object3D;THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.supr=THREE.Object3D.prototype;THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;
THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=b||1};THREE.PointLight.prototype=new THREE.Light;THREE.PointLight.prototype.constructor=THREE.PointLight;THREE.FlatShading=0;THREE.SmoothShading=1;
THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;THREE.BillboardBlending=3;
THREE.LineBasicMaterial=function(a){this.id=THREE.LineBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.depth_test=!0;this.linewidth=1;this.linejoin=this.linecap="round";this.vertex_colors=!1;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.linewidth!==undefined)this.linewidth=
a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin;if(a.vertex_colors!==undefined)this.vertex_colors=a.vertex_colors}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>vertex_colors: "+this.vertex_colors+"<br/>)"}};THREE.LineBasicMaterialCounter={value:0};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.opacity=1;this.env_map=this.light_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.depth_test=!0;this.wireframe=!1;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";this.vertex_colors=!1;this.skinning=!1;if(a){a.color!==
undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.map!==undefined)this.map=a.map;if(a.light_map!==undefined)this.light_map=a.light_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==
undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin;if(a.vertex_colors!==undefined)this.vertex_colors=a.vertex_colors;if(a.skinning!==undefined)this.skinning=a.skinning}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>map: "+this.map+"<br/>light_map: "+this.light_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+
"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>vertex_colors: "+this.vertex_colors+"<br/>skinning: "+this.skinning+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.opacity=1;this.env_map=this.light_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.depth_test=!0;this.wireframe=!1;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";this.vertex_colors=!1;this.skinning=!1;
if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.map!==undefined)this.map=a.map;if(a.light_map!==undefined)this.light_map=a.light_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.shading!==undefined)this.shading=a.shading;
if(a.blending!==undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin;if(a.vertex_colors!==undefined)this.vertex_colors=a.vertex_colors;if(a.skinning!==undefined)this.skinning=
a.skinning}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>map: "+this.map+"<br/>light_map: "+this.light_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+
this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>vertex_colors: "+this.vertex_colors+"<br/>skinning: "+this.skinning+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.opacity=1;this.env_map=this.light_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.depth_test=!0;this.wireframe=!1;this.wireframe_linewidth=1;this.wireframe_linejoin=
this.wireframe_linecap="round";this.vertex_colors=!1;this.skinning=!1;if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.light_map!==undefined)this.light_map=a.light_map;if(a.map!==undefined)this.map=a.map;if(a.env_map!==undefined)this.env_map=a.env_map;
if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;
if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin;if(a.vertex_colors!==undefined)this.vertex_colors=a.vertex_colors;if(a.skinning!==undefined)this.skinning=a.skinning}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>opacity: "+this.opacity+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>depth_test: "+
this.depth_test+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>vertex_colors: "+this.vertex_colors+"<br/>skinning: "+this.skinning+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.id=THREE.MeshDepthMaterialCounter.value++;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.depth_test=!0;this.wireframe=!1;this.wireframe_linewidth=1;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial (<br/>id: "+this.id+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>)"}};THREE.MeshDepthMaterialCounter={value:0};
THREE.MeshNormalMaterial=function(a){this.id=THREE.MeshNormalMaterialCounter.value++;this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;this.depth_test=!0;this.wireframe=!1;this.wireframe_linewidth=1;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial (<br/>id: "+this.id+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>)"}};THREE.MeshNormalMaterialCounter={value:0};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.depth_test=!0;this.wireframe=!1;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";this.vertex_colors=!1;this.skinning=!1;if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=
a.vertex_shader;if(a.uniforms!==undefined)this.uniforms=a.uniforms;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==
undefined)this.wireframe_linejoin=a.wireframe_linejoin;if(a.vertex_colors!==undefined)this.vertex_colors=a.vertex_colors;if(a.skinning!==undefined)this.skinning=a.skinning}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>vertex_colors: "+this.vertex_colors+"<br/>skinning: "+this.skinning+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.id=THREE.ParticleBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.opacity=1;this.map=null;this.size=1;this.blending=THREE.NormalBlending;this.depth_test=!0;this.offset=new THREE.Vector2;this.vertex_colors=!1;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.map!==undefined)this.map=a.map;if(a.size!==undefined)this.size=a.size;if(a.blending!==undefined)this.blending=a.blending;
if(a.depth_test!==undefined)this.depth_test=a.depth_test;if(a.vertex_colors!==undefined)this.vertex_colors=a.vertex_colors}};THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>map: "+this.map+"<br/>size: "+this.size+"<br/>blending: "+this.blending+"<br/>depth_test: "+this.depth_test+"<br/>vertex_colors: "+this.vertex_colors+"<br/>)"}};THREE.ParticleBasicMaterialCounter={value:0};
THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};
THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};THREE.Texture=function(a,b,c,d,f,g){this.image=a;this.mapping=b!==undefined?b:new THREE.UVMapping;this.wrap_s=c!==undefined?c:THREE.ClampToEdgeWrapping;this.wrap_t=d!==undefined?d:THREE.ClampToEdgeWrapping;this.mag_filter=f!==undefined?f:THREE.LinearFilter;this.min_filter=g!==undefined?g:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;
THREE.RenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrap_s=c.wrap_s!==undefined?c.wrap_s:THREE.ClampToEdgeWrapping;this.wrap_t=c.wrap_t!==undefined?c.wrap_t:THREE.ClampToEdgeWrapping;this.mag_filter=c.mag_filter!==undefined?c.mag_filter:THREE.LinearFilter;this.min_filter=c.min_filter!==undefined?c.min_filter:THREE.LinearMipMapLinearFilter;this.format=c.format!==undefined?c.format:THREE.RGBFormat;this.type=c.type!==undefined?c.type:THREE.UnsignedByteType};
var Uniforms={clone:function(a){var b,c,d,f={};for(b in a){f[b]={};for(c in a[b]){d=a[b][c];f[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector3||d instanceof THREE.Texture?d.clone():d}}return f},merge:function(a){var b,c,d,f={};for(b=0;b<a.length;b++){d=this.clone(a[b]);for(c in d)f[c]=d[c]}return f}};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};THREE.Scene=function(){THREE.Object3D.call(this);this.objects=[];this.lights=[];this.fog=null};THREE.Scene.prototype=new THREE.Object3D;THREE.Scene.prototype.constructor=THREE.Scene;THREE.Scene.prototype.supr=THREE.Object3D.prototype;THREE.Scene.prototype.addChild=function(a){this.supr.addChild.call(this,a);this.addChildRecurse(a)};
THREE.Scene.prototype.addChildRecurse=function(a){if(a instanceof THREE.Light)this.lights.indexOf(a)===-1&&this.lights.push(a);else a instanceof THREE.Camera||this.objects.indexOf(a)===-1&&this.objects.push(a);for(var b=0;b<a.children.length;b++)this.addChildRecurse(a.children[b])};THREE.Scene.prototype.removeChild=function(a){this.supr.removeChild.call(this,a);this.removeChildRecurse(a)};
THREE.Scene.prototype.removeChildRecurse=function(){if(object instanceof THREE.Light){var a=this.lights.indexOf(object);a===-1&&this.lights.splice(a,1)}else if(!(object instanceof THREE.Camera)){a=this.objects.indexOf(object);a===-1&&this.objects.splice(a,1)}for(a=0;a<object.children.length;a++)this.removeChildRecurse(object.children[a])};THREE.Scene.prototype.addObject=THREE.Scene.prototype.addChild;THREE.Scene.prototype.removeObject=THREE.Scene.prototype.removeChild;
THREE.Scene.prototype.addLight=THREE.Scene.prototype.addChild;THREE.Scene.prototype.removeLight=THREE.Scene.prototype.removeChild;THREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=b||1;this.far=c||1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b||2.5E-4};
THREE.Projector=function(){function a(L,G){return G.z-L.z}function b(L,G){var Y=0,T=1,da=L.z+L.w,Z=G.z+G.w,H=-L.z+L.w,aa=-G.z+G.w;if(da>=0&&Z>=0&&H>=0&&aa>=0)return!0;else if(da<0&&Z<0||H<0&&aa<0)return!1;else{if(da<0)Y=Math.max(Y,da/(da-Z));else Z<0&&(T=Math.min(T,da/(da-Z)));if(H<0)Y=Math.max(Y,H/(H-aa));else aa<0&&(T=Math.min(T,H/(H-aa)));if(T<Y)return!1;else{L.lerpSelf(G,Y);G.lerpSelf(L,1-T);return!0}}}var c,d,f=[],g,h,k,j=[],m,n,w=[],u,q,x=[],z=new THREE.Vector4,C=new THREE.Vector4,o=new THREE.Matrix4,
e=new THREE.Matrix4,t=[],N=new THREE.Vector4,Q=new THREE.Vector4,ea;this.projectObjects=function(L,G,Y){var T=[],da,Z;d=0;o.multiply(G.projectionMatrix,G.matrix);t[0]=new THREE.Vector4(o.n41-o.n11,o.n42-o.n12,o.n43-o.n13,o.n44-o.n14);t[1]=new THREE.Vector4(o.n41+o.n11,o.n42+o.n12,o.n43+o.n13,o.n44+o.n14);t[2]=new THREE.Vector4(o.n41+o.n21,o.n42+o.n22,o.n43+o.n23,o.n44+o.n24);t[3]=new THREE.Vector4(o.n41-o.n21,o.n42-o.n22,o.n43-o.n23,o.n44-o.n24);t[4]=new THREE.Vector4(o.n41-o.n31,o.n42-o.n32,o.n43-
o.n33,o.n44-o.n34);t[5]=new THREE.Vector4(o.n41+o.n31,o.n42+o.n32,o.n43+o.n33,o.n44+o.n34);G=0;for(da=t.length;G<da;G++){Z=t[G];Z.divideScalar(Math.sqrt(Z.x*Z.x+Z.y*Z.y+Z.z*Z.z))}da=L.objects;L=0;for(G=da.length;L<G;L++){Z=da[L];var H;if(!(H=!Z.visible))if(H=Z instanceof THREE.Mesh){a:{H=void 0;for(var aa=Z.position,na=-Z.geometry.boundingSphere.radius*Math.max(Z.scale.x,Math.max(Z.scale.y,Z.scale.z)),ba=0;ba<6;ba++){H=t[ba].x*aa.x+t[ba].y*aa.y+t[ba].z*aa.z+t[ba].w;if(H<=na){H=!1;break a}}H=!0}H=
!H}if(!H){c=f[d]=f[d]||new THREE.RenderableObject;z.copy(Z.position);o.multiplyVector3(z);c.object=Z;c.z=z.z;T.push(c);d++}}Y&&T.sort(a);return T};this.projectScene=function(L,G,Y){var T=[],da=G.near,Z=G.far,H,aa,na,ba,l,B,y,v,p,D,F,J,U,A,R,O;k=n=q=0;G.autoUpdateMatrix&&G.updateMatrix();o.multiply(G.projectionMatrix,G.matrix);B=this.projectObjects(L,G,!0);L=0;for(H=B.length;L<H;L++){y=B[L].object;if(y.visible){y.autoUpdateMatrix&&y.updateMatrix();v=y.matrix;p=y.rotationMatrix;D=y.materials;F=y.overdraw;
if(y instanceof THREE.Mesh){J=y.geometry;U=J.vertices;aa=0;for(na=U.length;aa<na;aa++){A=U[aa];A.positionWorld.copy(A.position);v.multiplyVector3(A.positionWorld);ba=A.positionScreen;ba.copy(A.positionWorld);o.multiplyVector4(ba);ba.x/=ba.w;ba.y/=ba.w;A.__visible=ba.z>da&&ba.z<Z}J=J.faces;aa=0;for(na=J.length;aa<na;aa++){A=J[aa];if(A instanceof THREE.Face3){ba=U[A.a];l=U[A.b];R=U[A.c];if(ba.__visible&&l.__visible&&R.__visible&&(y.doubleSided||y.flipSided!=(R.positionScreen.x-ba.positionScreen.x)*
(l.positionScreen.y-ba.positionScreen.y)-(R.positionScreen.y-ba.positionScreen.y)*(l.positionScreen.x-ba.positionScreen.x)<0)){g=j[k]=j[k]||new THREE.RenderableFace3;g.v1.positionWorld.copy(ba.positionWorld);g.v2.positionWorld.copy(l.positionWorld);g.v3.positionWorld.copy(R.positionWorld);g.v1.positionScreen.copy(ba.positionScreen);g.v2.positionScreen.copy(l.positionScreen);g.v3.positionScreen.copy(R.positionScreen);g.normalWorld.copy(A.normal);p.multiplyVector3(g.normalWorld);g.centroidWorld.copy(A.centroid);
v.multiplyVector3(g.centroidWorld);g.centroidScreen.copy(g.centroidWorld);o.multiplyVector3(g.centroidScreen);R=A.vertexNormals;ea=g.vertexNormalsWorld;ba=0;for(l=R.length;ba<l;ba++){O=ea[ba]=ea[ba]||new THREE.Vector3;O.copy(R[ba]);p.multiplyVector3(O)}g.z=g.centroidScreen.z;g.meshMaterials=D;g.faceMaterials=A.materials;g.overdraw=F;if(y.geometry.uvs[aa]){g.uvs[0]=y.geometry.uvs[aa][0];g.uvs[1]=y.geometry.uvs[aa][1];g.uvs[2]=y.geometry.uvs[aa][2]}T.push(g);k++}}else if(A instanceof THREE.Face4){ba=
U[A.a];l=U[A.b];R=U[A.c];O=U[A.d];if(ba.__visible&&l.__visible&&R.__visible&&O.__visible&&(y.doubleSided||y.flipSided!=((O.positionScreen.x-ba.positionScreen.x)*(l.positionScreen.y-ba.positionScreen.y)-(O.positionScreen.y-ba.positionScreen.y)*(l.positionScreen.x-ba.positionScreen.x)<0||(l.positionScreen.x-R.positionScreen.x)*(O.positionScreen.y-R.positionScreen.y)-(l.positionScreen.y-R.positionScreen.y)*(O.positionScreen.x-R.positionScreen.x)<0))){g=j[k]=j[k]||new THREE.RenderableFace3;g.v1.positionWorld.copy(ba.positionWorld);
g.v2.positionWorld.copy(l.positionWorld);g.v3.positionWorld.copy(O.positionWorld);g.v1.positionScreen.copy(ba.positionScreen);g.v2.positionScreen.copy(l.positionScreen);g.v3.positionScreen.copy(O.positionScreen);g.normalWorld.copy(A.normal);p.multiplyVector3(g.normalWorld);g.centroidWorld.copy(A.centroid);v.multiplyVector3(g.centroidWorld);g.centroidScreen.copy(g.centroidWorld);o.multiplyVector3(g.centroidScreen);g.z=g.centroidScreen.z;g.meshMaterials=D;g.faceMaterials=A.materials;g.overdraw=F;if(y.geometry.uvs[aa]){g.uvs[0]=
y.geometry.uvs[aa][0];g.uvs[1]=y.geometry.uvs[aa][1];g.uvs[2]=y.geometry.uvs[aa][3]}T.push(g);k++;h=j[k]=j[k]||new THREE.RenderableFace3;h.v1.positionWorld.copy(l.positionWorld);h.v2.positionWorld.copy(R.positionWorld);h.v3.positionWorld.copy(O.positionWorld);h.v1.positionScreen.copy(l.positionScreen);h.v2.positionScreen.copy(R.positionScreen);h.v3.positionScreen.copy(O.positionScreen);h.normalWorld.copy(g.normalWorld);h.centroidWorld.copy(g.centroidWorld);h.centroidScreen.copy(g.centroidScreen);
h.z=h.centroidScreen.z;h.meshMaterials=D;h.faceMaterials=A.materials;h.overdraw=F;if(y.geometry.uvs[aa]){h.uvs[0]=y.geometry.uvs[aa][1];h.uvs[1]=y.geometry.uvs[aa][2];h.uvs[2]=y.geometry.uvs[aa][3]}T.push(h);k++}}}}else if(y instanceof THREE.Line){e.multiply(o,v);U=y.geometry.vertices;A=U[0];A.positionScreen.copy(A.position);e.multiplyVector4(A.positionScreen);aa=1;for(na=U.length;aa<na;aa++){ba=U[aa];ba.positionScreen.copy(ba.position);e.multiplyVector4(ba.positionScreen);l=U[aa-1];N.copy(ba.positionScreen);
Q.copy(l.positionScreen);if(b(N,Q)){N.multiplyScalar(1/N.w);Q.multiplyScalar(1/Q.w);m=w[n]=w[n]||new THREE.RenderableLine;m.v1.positionScreen.copy(N);m.v2.positionScreen.copy(Q);m.z=Math.max(N.z,Q.z);m.materials=y.materials;T.push(m);n++}}}else if(y instanceof THREE.Particle){C.set(y.position.x,y.position.y,y.position.z,1);o.multiplyVector4(C);C.z/=C.w;if(C.z>0&&C.z<1){u=x[q]=x[q]||new THREE.RenderableParticle;u.x=C.x/C.w;u.y=C.y/C.w;u.z=C.z;u.rotation=y.rotation.z;u.scale.x=y.scale.x*Math.abs(u.x-
(C.x+G.projectionMatrix.n11)/(C.w+G.projectionMatrix.n14));u.scale.y=y.scale.y*Math.abs(u.y-(C.y+G.projectionMatrix.n22)/(C.w+G.projectionMatrix.n24));u.materials=y.materials;T.push(u);q++}}}}Y&&T.sort(a);return T};this.unprojectVector=function(L,G){var Y=THREE.Matrix4.makeInvert(G.matrix);Y.multiplySelf(THREE.Matrix4.makeInvert(G.projectionMatrix));Y.multiplyVector3(L);return L}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,b=new THREE.Projector,c,d,f,g;this.domElement=document.createElement("div");this.setSize=function(h,k){c=h;d=k;f=c/2;g=d/2};this.render=function(h,k){var j,m,n,w,u,q,x,z;a=b.projectScene(h,k);j=0;for(m=a.length;j<m;j++){u=a[j];if(u instanceof THREE.RenderableParticle){x=u.x*f+f;z=u.y*g+g;n=0;for(w=u.material.length;n<w;n++){q=u.material[n];if(q instanceof THREE.ParticleDOMMaterial){q=q.domElement;q.style.left=x+"px";q.style.top=z+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(W){if(u!=W)m.globalAlpha=u=W}function b(W){if(q!=W){switch(W){case THREE.NormalBlending:m.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:m.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:m.globalCompositeOperation="darker"}q=W}}var c=null,d=new THREE.Projector,f=document.createElement("canvas"),g,h,k,j,m=f.getContext("2d"),n=new THREE.Color(0),w=0,u=1,q=0,x=null,z=null,C=1,o,e,t,N,Q,ea,L,G,Y,T=new THREE.Color,
da=new THREE.Color,Z=new THREE.Color,H=new THREE.Color,aa=new THREE.Color,na,ba,l,B,y,v,p,D,F,J=new THREE.Rectangle,U=new THREE.Rectangle,A=new THREE.Rectangle,R=!1,O=new THREE.Color,ga=new THREE.Color,ma=new THREE.Color,E=new THREE.Color,P=Math.PI*2,I=new THREE.Vector3,V,ca,ta,M,Ba,xa,Ea=16;V=document.createElement("canvas");V.width=V.height=2;ca=V.getContext("2d");ca.fillStyle="rgba(0,0,0,1)";ca.fillRect(0,0,2,2);ta=ca.getImageData(0,0,2,2);M=ta.data;Ba=document.createElement("canvas");Ba.width=
Ba.height=Ea;xa=Ba.getContext("2d");xa.translate(-Ea/2,-Ea/2);xa.scale(Ea,Ea);Ea--;this.domElement=f;this.autoClear=!0;this.sortObjects=!0;this.sortElements=!0;this.setSize=function(W,$){g=W;h=$;k=g/2;j=h/2;f.width=g;f.height=h;J.set(-k,-j,k,j);u=1;q=0;z=x=null;C=1};this.setClearColor=function(W,$){n=W;w=$;U.set(-k,-j,k,j);m.setTransform(1,0,0,-1,k,j);this.clear()};this.setClearColorHex=function(W,$){n.setHex(W);w=$;U.set(-k,-j,k,j);m.setTransform(1,0,0,-1,k,j);this.clear()};this.clear=function(){m.setTransform(1,
0,0,-1,k,j);if(!U.isEmpty()){U.inflate(1);U.minSelf(J);if(n.hex==0&&w==0)m.clearRect(U.getX(),U.getY(),U.getWidth(),U.getHeight());else{b(THREE.NormalBlending);a(1);m.fillStyle="rgba("+Math.floor(n.r*255)+","+Math.floor(n.g*255)+","+Math.floor(n.b*255)+","+w+")";m.fillRect(U.getX(),U.getY(),U.getWidth(),U.getHeight())}U.empty()}};this.render=function(W,$){function fa(S){var ka,ia,X,ha=S.lights;ga.setRGB(0,0,0);ma.setRGB(0,0,0);E.setRGB(0,0,0);S=0;for(ka=ha.length;S<ka;S++){ia=ha[S];X=ia.color;if(ia instanceof
THREE.AmbientLight){ga.r+=X.r;ga.g+=X.g;ga.b+=X.b}else if(ia instanceof THREE.DirectionalLight){ma.r+=X.r;ma.g+=X.g;ma.b+=X.b}else if(ia instanceof THREE.PointLight){E.r+=X.r;E.g+=X.g;E.b+=X.b}}}function oa(S,ka,ia,X){var ha,la,ya,Fa,Ha=S.lights;S=0;for(ha=Ha.length;S<ha;S++){la=Ha[S];ya=la.color;Fa=la.intensity;if(la instanceof THREE.DirectionalLight){la=ia.dot(la.position)*Fa;if(la>0){X.r+=ya.r*la;X.g+=ya.g*la;X.b+=ya.b*la}}else if(la instanceof THREE.PointLight){I.sub(la.position,ka);I.normalize();
la=ia.dot(I)*Fa;if(la>0){X.r+=ya.r*la;X.g+=ya.g*la;X.b+=ya.b*la}}}}function Ia(S,ka,ia){if(ia.opacity!=0){a(ia.opacity);b(ia.blending);var X,ha,la,ya,Fa,Ha;if(ia instanceof THREE.ParticleBasicMaterial){if(ia.map&&ia.map.image.loaded){ya=ia.map.image;Fa=ya.width>>1;Ha=ya.height>>1;ha=ka.scale.x*k;la=ka.scale.y*j;ia=ha*Fa;X=la*Ha;A.set(S.x-ia,S.y-X,S.x+ia,S.y+X);if(J.instersects(A)){m.save();m.translate(S.x,S.y);m.rotate(-ka.rotation);m.scale(ha,-la);m.translate(-Fa,-Ha);m.drawImage(ya,0,0);m.restore()}}}else if(ia instanceof
THREE.ParticleCircleMaterial){if(R){O.r=ga.r+ma.r+E.r;O.g=ga.g+ma.g+E.g;O.b=ga.b+ma.b+E.b;T.r=ia.color.r*O.r;T.g=ia.color.g*O.g;T.b=ia.color.b*O.b;T.updateStyleString()}else T.__styleString=ia.color.__styleString;ia=ka.scale.x*k;X=ka.scale.y*j;A.set(S.x-ia,S.y-X,S.x+ia,S.y+X);if(J.instersects(A)){ha=T.__styleString;if(z!=ha)m.fillStyle=z=ha;m.save();m.translate(S.x,S.y);m.rotate(-ka.rotation);m.scale(ia,X);m.beginPath();m.arc(0,0,1,0,P,!0);m.closePath();m.fill();m.restore()}}}}function wa(S,ka,ia,
X){if(X.opacity!=0){a(X.opacity);b(X.blending);m.beginPath();m.moveTo(S.positionScreen.x,S.positionScreen.y);m.lineTo(ka.positionScreen.x,ka.positionScreen.y);m.closePath();if(X instanceof THREE.LineBasicMaterial){T.__styleString=X.color.__styleString;S=X.linewidth;if(C!=S)m.lineWidth=C=S;S=T.__styleString;if(x!=S)m.strokeStyle=x=S;m.stroke();A.inflate(X.linewidth*2)}}}function K(S,ka,ia,X,ha,la){if(ha.opacity!=0){a(ha.opacity);b(ha.blending);N=S.positionScreen.x;Q=S.positionScreen.y;ea=ka.positionScreen.x;
L=ka.positionScreen.y;G=ia.positionScreen.x;Y=ia.positionScreen.y;m.beginPath();m.moveTo(N,Q);m.lineTo(ea,L);m.lineTo(G,Y);m.lineTo(N,Q);m.closePath();if(ha instanceof THREE.MeshBasicMaterial)if(ha.map)ha.map.image.loaded&&ha.map.mapping instanceof THREE.UVMapping&&Na(N,Q,ea,L,G,Y,ha.map.image,X.uvs[0].u,X.uvs[0].v,X.uvs[1].u,X.uvs[1].v,X.uvs[2].u,X.uvs[2].v);else if(ha.env_map){if(ha.env_map.image.loaded&&ha.env_map.mapping instanceof THREE.SphericalReflectionMapping){S=$.matrix;I.copy(X.vertexNormalsWorld[0]);
B=(I.x*S.n11+I.y*S.n12+I.z*S.n13)*0.5+0.5;y=-(I.x*S.n21+I.y*S.n22+I.z*S.n23)*0.5+0.5;I.copy(X.vertexNormalsWorld[1]);v=(I.x*S.n11+I.y*S.n12+I.z*S.n13)*0.5+0.5;p=-(I.x*S.n21+I.y*S.n22+I.z*S.n23)*0.5+0.5;I.copy(X.vertexNormalsWorld[2]);D=(I.x*S.n11+I.y*S.n12+I.z*S.n13)*0.5+0.5;F=-(I.x*S.n21+I.y*S.n22+I.z*S.n23)*0.5+0.5;Na(N,Q,ea,L,G,Y,ha.env_map.image,B,y,v,p,D,F)}}else ha.wireframe?ua(ha.color.__styleString,ha.wireframe_linewidth):Pa(ha.color.__styleString);else if(ha instanceof THREE.MeshLambertMaterial){if(ha.map&&
!ha.wireframe){ha.map.mapping instanceof THREE.UVMapping&&Na(N,Q,ea,L,G,Y,ha.map.image,X.uvs[0].u,X.uvs[0].v,X.uvs[1].u,X.uvs[1].v,X.uvs[2].u,X.uvs[2].v);b(THREE.SubtractiveBlending)}if(R)if(!ha.wireframe&&ha.shading==THREE.SmoothShading&&X.vertexNormalsWorld.length==3){da.r=Z.r=H.r=ga.r;da.g=Z.g=H.g=ga.g;da.b=Z.b=H.b=ga.b;oa(la,X.v1.positionWorld,X.vertexNormalsWorld[0],da);oa(la,X.v2.positionWorld,X.vertexNormalsWorld[1],Z);oa(la,X.v3.positionWorld,X.vertexNormalsWorld[2],H);aa.r=(Z.r+H.r)*0.5;
aa.g=(Z.g+H.g)*0.5;aa.b=(Z.b+H.b)*0.5;l=La(da,Z,H,aa);Na(N,Q,ea,L,G,Y,l,0,0,1,0,0,1)}else{O.r=ga.r;O.g=ga.g;O.b=ga.b;oa(la,X.centroidWorld,X.normalWorld,O);T.r=ha.color.r*O.r;T.g=ha.color.g*O.g;T.b=ha.color.b*O.b;T.updateStyleString();ha.wireframe?ua(T.__styleString,ha.wireframe_linewidth):Pa(T.__styleString)}else ha.wireframe?ua(ha.color.__styleString,ha.wireframe_linewidth):Pa(ha.color.__styleString)}else if(ha instanceof THREE.MeshDepthMaterial){na=$.near;ba=$.far;da.r=da.g=da.b=1-qa(S.positionScreen.z,
na,ba);Z.r=Z.g=Z.b=1-qa(ka.positionScreen.z,na,ba);H.r=H.g=H.b=1-qa(ia.positionScreen.z,na,ba);aa.r=(Z.r+H.r)*0.5;aa.g=(Z.g+H.g)*0.5;aa.b=(Z.b+H.b)*0.5;l=La(da,Z,H,aa);Na(N,Q,ea,L,G,Y,l,0,0,1,0,0,1)}else if(ha instanceof THREE.MeshNormalMaterial){T.r=va(X.normalWorld.x);T.g=va(X.normalWorld.y);T.b=va(X.normalWorld.z);T.updateStyleString();ha.wireframe?ua(T.__styleString,ha.wireframe_linewidth):Pa(T.__styleString)}}}function ua(S,ka){if(x!=S)m.strokeStyle=x=S;if(C!=ka)m.lineWidth=C=ka;m.stroke();A.inflate(ka*
2)}function Pa(S){if(z!=S)m.fillStyle=z=S;m.fill()}function Na(S,ka,ia,X,ha,la,ya,Fa,Ha,Oa,za,Ka,Ma){var Ja,Ga;Ja=ya.width-1;Ga=ya.height-1;Fa*=Ja;Ha*=Ga;Oa*=Ja;za*=Ga;Ka*=Ja;Ma*=Ga;ia-=S;X-=ka;ha-=S;la-=ka;Oa-=Fa;za-=Ha;Ka-=Fa;Ma-=Ha;Ja=Oa*Ma-Ka*za;if(Ja!=0){Ga=1/Ja;Ja=(Ma*ia-za*ha)*Ga;za=(Ma*X-za*la)*Ga;ia=(Oa*ha-Ka*ia)*Ga;X=(Oa*la-Ka*X)*Ga;S=S-Ja*Fa-ia*Ha;ka=ka-za*Fa-X*Ha;m.save();m.transform(Ja,za,ia,X,S,ka);m.clip();m.drawImage(ya,0,0);m.restore()}}function La(S,ka,ia,X){var ha=~~(S.r*255),la=
~~(S.g*255);S=~~(S.b*255);var ya=~~(ka.r*255),Fa=~~(ka.g*255);ka=~~(ka.b*255);var Ha=~~(ia.r*255),Oa=~~(ia.g*255);ia=~~(ia.b*255);var za=~~(X.r*255),Ka=~~(X.g*255);X=~~(X.b*255);M[0]=ha<0?0:ha>255?255:ha;M[1]=la<0?0:la>255?255:la;M[2]=S<0?0:S>255?255:S;M[4]=ya<0?0:ya>255?255:ya;M[5]=Fa<0?0:Fa>255?255:Fa;M[6]=ka<0?0:ka>255?255:ka;M[8]=Ha<0?0:Ha>255?255:Ha;M[9]=Oa<0?0:Oa>255?255:Oa;M[10]=ia<0?0:ia>255?255:ia;M[12]=za<0?0:za>255?255:za;M[13]=Ka<0?0:Ka>255?255:Ka;M[14]=X<0?0:X>255?255:X;ca.putImageData(ta,
0,0);xa.drawImage(V,0,0);return Ba}function qa(S,ka,ia){S=(S-ka)/(ia-ka);return S*S*(3-2*S)}function va(S){S=(S+1)*0.5;return S<0?0:S>1?1:S}function ra(S,ka){var ia=ka.x-S.x,X=ka.y-S.y,ha=1/Math.sqrt(ia*ia+X*X);ia*=ha;X*=ha;ka.x+=ia;ka.y+=X;S.x-=ia;S.y-=X}var pa,sa,ja,Ca,Aa,Ra,Da,Qa;this.autoClear?this.clear():m.setTransform(1,0,0,-1,k,j);c=d.projectScene(W,$,this.sortElements);(R=W.lights.length>0)&&fa(W);pa=0;for(sa=c.length;pa<sa;pa++){ja=c[pa];A.empty();if(ja instanceof THREE.RenderableParticle){o=
ja;o.x*=k;o.y*=j;Ca=0;for(Aa=ja.materials.length;Ca<Aa;Ca++)Ia(o,ja,ja.materials[Ca],W)}else if(ja instanceof THREE.RenderableLine){o=ja.v1;e=ja.v2;o.positionScreen.x*=k;o.positionScreen.y*=j;e.positionScreen.x*=k;e.positionScreen.y*=j;A.addPoint(o.positionScreen.x,o.positionScreen.y);A.addPoint(e.positionScreen.x,e.positionScreen.y);if(J.instersects(A)){Ca=0;for(Aa=ja.materials.length;Ca<Aa;)wa(o,e,ja,ja.materials[Ca++],W)}}else if(ja instanceof THREE.RenderableFace3){o=ja.v1;e=ja.v2;t=ja.v3;o.positionScreen.x*=
k;o.positionScreen.y*=j;e.positionScreen.x*=k;e.positionScreen.y*=j;t.positionScreen.x*=k;t.positionScreen.y*=j;if(ja.overdraw){ra(o.positionScreen,e.positionScreen);ra(e.positionScreen,t.positionScreen);ra(t.positionScreen,o.positionScreen)}A.add3Points(o.positionScreen.x,o.positionScreen.y,e.positionScreen.x,e.positionScreen.y,t.positionScreen.x,t.positionScreen.y);if(J.instersects(A)){Ca=0;for(Aa=ja.meshMaterials.length;Ca<Aa;){Qa=ja.meshMaterials[Ca++];if(Qa instanceof THREE.MeshFaceMaterial){Ra=
0;for(Da=ja.faceMaterials.length;Ra<Da;)(Qa=ja.faceMaterials[Ra++])&&K(o,e,t,ja,Qa,W)}else K(o,e,t,ja,Qa,W)}}}U.addRectangle(A)}m.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(B,y,v){var p,D,F,J;p=0;for(D=B.lights.length;p<D;p++){F=B.lights[p];if(F instanceof THREE.DirectionalLight){J=y.normalWorld.dot(F.position)*F.intensity;if(J>0){v.r+=F.color.r*J;v.g+=F.color.g*J;v.b+=F.color.b*J}}else if(F instanceof THREE.PointLight){Y.sub(F.position,y.centroidWorld);Y.normalize();J=y.normalWorld.dot(Y)*F.intensity;if(J>0){v.r+=F.color.r*J;v.g+=F.color.g*J;v.b+=F.color.b*J}}}}function b(B,y,v,p,D,F){H=d(aa++);H.setAttribute("d","M "+B.positionScreen.x+
" "+B.positionScreen.y+" L "+y.positionScreen.x+" "+y.positionScreen.y+" L "+v.positionScreen.x+","+v.positionScreen.y+"z");if(D instanceof THREE.MeshBasicMaterial)t.__styleString=D.color.__styleString;else if(D instanceof THREE.MeshLambertMaterial)if(e){N.r=Q.r;N.g=Q.g;N.b=Q.b;a(F,p,N);t.r=D.color.r*N.r;t.g=D.color.g*N.g;t.b=D.color.b*N.b;t.updateStyleString()}else t.__styleString=D.color.__styleString;else if(D instanceof THREE.MeshDepthMaterial){G=1-D.__2near/(D.__farPlusNear-p.z*D.__farMinusNear);
t.setRGB(G,G,G)}else D instanceof THREE.MeshNormalMaterial&&t.setRGB(f(p.normalWorld.x),f(p.normalWorld.y),f(p.normalWorld.z));D.wireframe?H.setAttribute("style","fill: none; stroke: "+t.__styleString+"; stroke-width: "+D.wireframe_linewidth+"; stroke-opacity: "+D.opacity+"; stroke-linecap: "+D.wireframe_linecap+"; stroke-linejoin: "+D.wireframe_linejoin):H.setAttribute("style","fill: "+t.__styleString+"; fill-opacity: "+D.opacity);k.appendChild(H)}function c(B,y,v,p,D,F,J){H=d(aa++);H.setAttribute("d",
"M "+B.positionScreen.x+" "+B.positionScreen.y+" L "+y.positionScreen.x+" "+y.positionScreen.y+" L "+v.positionScreen.x+","+v.positionScreen.y+" L "+p.positionScreen.x+","+p.positionScreen.y+"z");if(F instanceof THREE.MeshBasicMaterial)t.__styleString=F.color.__styleString;else if(F instanceof THREE.MeshLambertMaterial)if(e){N.r=Q.r;N.g=Q.g;N.b=Q.b;a(J,D,N);t.r=F.color.r*N.r;t.g=F.color.g*N.g;t.b=F.color.b*N.b;t.updateStyleString()}else t.__styleString=F.color.__styleString;else if(F instanceof THREE.MeshDepthMaterial){G=
1-F.__2near/(F.__farPlusNear-D.z*F.__farMinusNear);t.setRGB(G,G,G)}else F instanceof THREE.MeshNormalMaterial&&t.setRGB(f(D.normalWorld.x),f(D.normalWorld.y),f(D.normalWorld.z));F.wireframe?H.setAttribute("style","fill: none; stroke: "+t.__styleString+"; stroke-width: "+F.wireframe_linewidth+"; stroke-opacity: "+F.opacity+"; stroke-linecap: "+F.wireframe_linecap+"; stroke-linejoin: "+F.wireframe_linejoin):H.setAttribute("style","fill: "+t.__styleString+"; fill-opacity: "+F.opacity);k.appendChild(H)}
function d(B){if(T[B]==null){T[B]=document.createElementNS("http://www.w3.org/2000/svg","path");l==0&&T[B].setAttribute("shape-rendering","crispEdges")}return T[B]}function f(B){return B<0?Math.min((1+B)*0.5,0.5):0.5+Math.min(B*0.5,0.5)}var g=null,h=new THREE.Projector,k=document.createElementNS("http://www.w3.org/2000/svg","svg"),j,m,n,w,u,q,x,z,C=new THREE.Rectangle,o=new THREE.Rectangle,e=!1,t=new THREE.Color(16777215),N=new THREE.Color(16777215),Q=new THREE.Color(0),ea=new THREE.Color(0),L=new THREE.Color(0),
G,Y=new THREE.Vector3,T=[],da=[],Z=[],H,aa,na,ba,l=1;this.domElement=k;this.autoClear=!0;this.sortObjects=!0;this.sortElements=!0;this.setQuality=function(B){switch(B){case "high":l=1;break;case "low":l=0}};this.setSize=function(B,y){j=B;m=y;n=j/2;w=m/2;k.setAttribute("viewBox",-n+" "+-w+" "+j+" "+m);k.setAttribute("width",j);k.setAttribute("height",m);C.set(-n,-w,n,w)};this.clear=function(){for(;k.childNodes.length>0;)k.removeChild(k.childNodes[0])};this.render=function(B,y){var v,p,D,F,J,U,A,R;
this.autoClear&&this.clear();g=h.projectScene(B,y,this.sortElements);ba=na=aa=0;if(e=B.lights.length>0){A=B.lights;Q.setRGB(0,0,0);ea.setRGB(0,0,0);L.setRGB(0,0,0);v=0;for(p=A.length;v<p;v++){D=A[v];F=D.color;if(D instanceof THREE.AmbientLight){Q.r+=F.r;Q.g+=F.g;Q.b+=F.b}else if(D instanceof THREE.DirectionalLight){ea.r+=F.r;ea.g+=F.g;ea.b+=F.b}else if(D instanceof THREE.PointLight){L.r+=F.r;L.g+=F.g;L.b+=F.b}}}v=0;for(p=g.length;v<p;v++){A=g[v];o.empty();if(A instanceof THREE.RenderableParticle){u=
A;u.x*=n;u.y*=-w;D=0;for(F=A.materials.length;D<F;D++)if(R=A.materials[D]){J=u;U=A;var O=na++;if(da[O]==null){da[O]=document.createElementNS("http://www.w3.org/2000/svg","circle");l==0&&da[O].setAttribute("shape-rendering","crispEdges")}H=da[O];H.setAttribute("cx",J.x);H.setAttribute("cy",J.y);H.setAttribute("r",U.scale.x*n);if(R instanceof THREE.ParticleCircleMaterial){if(e){N.r=Q.r+ea.r+L.r;N.g=Q.g+ea.g+L.g;N.b=Q.b+ea.b+L.b;t.r=R.color.r*N.r;t.g=R.color.g*N.g;t.b=R.color.b*N.b;t.updateStyleString()}else t=
R.color;H.setAttribute("style","fill: "+t.__styleString)}k.appendChild(H)}}else if(A instanceof THREE.RenderableLine){u=A.v1;q=A.v2;u.positionScreen.x*=n;u.positionScreen.y*=-w;q.positionScreen.x*=n;q.positionScreen.y*=-w;o.addPoint(u.positionScreen.x,u.positionScreen.y);o.addPoint(q.positionScreen.x,q.positionScreen.y);if(C.instersects(o)){D=0;for(F=A.materials.length;D<F;)if(R=A.materials[D++]){J=u;U=q;O=ba++;if(Z[O]==null){Z[O]=document.createElementNS("http://www.w3.org/2000/svg","line");l==0&&
Z[O].setAttribute("shape-rendering","crispEdges")}H=Z[O];H.setAttribute("x1",J.positionScreen.x);H.setAttribute("y1",J.positionScreen.y);H.setAttribute("x2",U.positionScreen.x);H.setAttribute("y2",U.positionScreen.y);if(R instanceof THREE.LineBasicMaterial){t.__styleString=R.color.__styleString;H.setAttribute("style","fill: none; stroke: "+t.__styleString+"; stroke-width: "+R.linewidth+"; stroke-opacity: "+R.opacity+"; stroke-linecap: "+R.linecap+"; stroke-linejoin: "+R.linejoin);k.appendChild(H)}}}}else if(A instanceof
THREE.RenderableFace3){u=A.v1;q=A.v2;x=A.v3;u.positionScreen.x*=n;u.positionScreen.y*=-w;q.positionScreen.x*=n;q.positionScreen.y*=-w;x.positionScreen.x*=n;x.positionScreen.y*=-w;o.addPoint(u.positionScreen.x,u.positionScreen.y);o.addPoint(q.positionScreen.x,q.positionScreen.y);o.addPoint(x.positionScreen.x,x.positionScreen.y);if(C.instersects(o)){D=0;for(F=A.meshMaterials.length;D<F;){R=A.meshMaterials[D++];if(R instanceof THREE.MeshFaceMaterial){J=0;for(U=A.faceMaterials.length;J<U;)(R=A.faceMaterials[J++])&&
b(u,q,x,A,R,B)}else R&&b(u,q,x,A,R,B)}}}else if(A instanceof THREE.RenderableFace4){u=A.v1;q=A.v2;x=A.v3;z=A.v4;u.positionScreen.x*=n;u.positionScreen.y*=-w;q.positionScreen.x*=n;q.positionScreen.y*=-w;x.positionScreen.x*=n;x.positionScreen.y*=-w;z.positionScreen.x*=n;z.positionScreen.y*=-w;o.addPoint(u.positionScreen.x,u.positionScreen.y);o.addPoint(q.positionScreen.x,q.positionScreen.y);o.addPoint(x.positionScreen.x,x.positionScreen.y);o.addPoint(z.positionScreen.x,z.positionScreen.y);if(C.instersects(o)){D=
0;for(F=A.meshMaterials.length;D<F;){R=A.meshMaterials[D++];if(R instanceof THREE.MeshFaceMaterial){J=0;for(U=A.faceMaterials.length;J<U;)(R=A.faceMaterials[J++])&&c(u,q,x,z,A,R,B)}else R&&c(u,q,x,z,A,R,B)}}}}}};
THREE.WebGLRenderer=function(a){function b(l,B,y){var v,p,D,F=l.vertices,J=F.length,U=l.colors,A=U.length,R=l.__vertexArray,O=l.__colorArray,ga=l.__sortArray,ma=l.__dirtyVertices,E=l.__dirtyColors;if(y.sortParticles){Y.multiplySelf(y.globalMatrix);for(v=0;v<J;v++){p=F[v].position;H.copy(p);Y.multiplyVector3(H);ga[v]=[H.z,v]}ga.sort(function(P,I){return I[0]-P[0]});for(v=0;v<J;v++){p=F[ga[v][1]].position;D=v*3;R[D]=p.x;R[D+1]=p.y;R[D+2]=p.z}for(v=0;v<A;v++){D=v*3;color=U[ga[v][1]];O[D]=color.r;O[D+
1]=color.g;O[D+2]=color.b}}else{if(ma)for(v=0;v<J;v++){p=F[v].position;D=v*3;R[D]=p.x;R[D+1]=p.y;R[D+2]=p.z}if(E)for(v=0;v<A;v++){color=U[v];D=v*3;O[D]=color.r;O[D+1]=color.g;O[D+2]=color.b}}if(ma||y.sortParticles){e.bindBuffer(e.ARRAY_BUFFER,l.__webGLVertexBuffer);e.bufferData(e.ARRAY_BUFFER,R,B)}if(E||y.sortParticles){e.bindBuffer(e.ARRAY_BUFFER,l.__webGLColorBuffer);e.bufferData(e.ARRAY_BUFFER,O,B)}}function c(l,B){l.fragment_shader=B.fragment_shader;l.vertex_shader=B.vertex_shader;l.uniforms=
Uniforms.clone(B.uniforms)}function d(l,B){if(!l.__webGLVertexBuffer)l.__webGLVertexBuffer=e.createBuffer();if(!l.__webGLNormalBuffer)l.__webGLNormalBuffer=e.createBuffer();if(l.hasPos){e.bindBuffer(e.ARRAY_BUFFER,l.__webGLVertexBuffer);e.bufferData(e.ARRAY_BUFFER,l.positionArray,e.DYNAMIC_DRAW);e.enableVertexAttribArray(B.attributes.position);e.vertexAttribPointer(B.attributes.position,3,e.FLOAT,!1,0,0)}if(l.hasNormal){e.bindBuffer(e.ARRAY_BUFFER,l.__webGLNormalBuffer);e.bufferData(e.ARRAY_BUFFER,
l.normalArray,e.DYNAMIC_DRAW);e.enableVertexAttribArray(B.attributes.normal);e.vertexAttribPointer(B.attributes.normal,3,e.FLOAT,!1,0,0)}e.drawArrays(e.TRIANGLES,0,l.count);l.count=0}function f(l){if(Q!=l.doubleSided){l.doubleSided?e.disable(e.CULL_FACE):e.enable(e.CULL_FACE);Q=l.doubleSided}if(ea!=l.flipSided){l.flipSided?e.frontFace(e.CW):e.frontFace(e.CCW);ea=l.flipSided}}function g(l){G[0].set(l.n41-l.n11,l.n42-l.n12,l.n43-l.n13,l.n44-l.n14);G[1].set(l.n41+l.n11,l.n42+l.n12,l.n43+l.n13,l.n44+
l.n14);G[2].set(l.n41+l.n21,l.n42+l.n22,l.n43+l.n23,l.n44+l.n24);G[3].set(l.n41-l.n21,l.n42-l.n22,l.n43-l.n23,l.n44-l.n24);G[4].set(l.n41-l.n31,l.n42-l.n32,l.n43-l.n33,l.n44-l.n34);G[5].set(l.n41+l.n31,l.n42+l.n32,l.n43+l.n33,l.n44+l.n34);var B;for(l=0;l<5;l++){B=G[l];B.divideScalar(Math.sqrt(B.x*B.x+B.y*B.y+B.z*B.z))}}function h(l){for(var B=l.globalMatrix,y=-l.geometry.boundingSphere.radius*Math.max(l.scale.x,Math.max(l.scale.y,l.scale.z)),v=0;v<6;v++){l=G[v].x*B.n14+G[v].y*B.n24+G[v].z*B.n34+G[v].w;
if(l<=y)return!1}return!0}function k(l,B){l.list[l.count]=B;l.count+=1}function j(l){var B,y,v=l.object,p=l.opaque,D=l.transparent;D.count=0;l=p.count=0;for(B=v.materials.length;l<B;l++){y=v.materials[l];y.opacity&&y.opacity<1||y.blending!=THREE.NormalBlending?k(D,y):k(p,y)}}function m(l){var B,y,v,p,D=l.object,F=l.buffer,J=l.opaque,U=l.transparent;U.count=0;l=J.count=0;for(v=D.materials.length;l<v;l++){B=D.materials[l];if(B instanceof THREE.MeshFaceMaterial){B=0;for(y=F.materials.length;B<y;B++)(p=
F.materials[B])&&(p.opacity&&p.opacity<1||p.blending!=THREE.NormalBlending?k(U,p):k(J,p))}else{p=B;p.opacity&&p.opacity<1||p.blending!=THREE.NormalBlending?k(U,p):k(J,p)}}}function n(l,B){return B.z-l.z}function w(l,B,y,v,p){if(B[y]==undefined){l.push({buffer:v,object:p,opaque:{list:[],count:0},transparent:{list:[],count:0}});B[y]=1}}function u(l,B){l._modelViewMatrix.multiplyToArray(B.globalMatrix,l.globalMatrix,l._modelViewMatrixArray);l._normalMatrix=THREE.Matrix4.makeInvert3x3(l._modelViewMatrix).transposeIntoArray(l._normalMatrixArray)}
function q(l){if(l!=L){switch(l){case THREE.AdditiveBlending:e.blendEquation(e.FUNC_ADD);e.blendFunc(e.ONE,e.ONE);break;case THREE.SubtractiveBlending:e.blendFunc(e.DST_COLOR,e.ZERO);break;case THREE.BillboardBlending:e.blendEquation(e.FUNC_ADD);e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA);break;default:e.blendEquation(e.FUNC_ADD);e.blendFunc(e.ONE,e.ONE_MINUS_SRC_ALPHA)}L=l}}function x(l,B){if(l&&!l.__webGLFramebuffer){l.__webGLFramebuffer=e.createFramebuffer();l.__webGLRenderbuffer=e.createRenderbuffer();
l.__webGLTexture=e.createTexture();e.bindRenderbuffer(e.RENDERBUFFER,l.__webGLRenderbuffer);e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,l.width,l.height);e.bindTexture(e.TEXTURE_2D,l.__webGLTexture);e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,C(l.wrap_s));e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,C(l.wrap_t));e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,C(l.mag_filter));e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,C(l.min_filter));e.texImage2D(e.TEXTURE_2D,0,C(l.format),
l.width,l.height,0,C(l.format),C(l.type),null);e.bindFramebuffer(e.FRAMEBUFFER,l.__webGLFramebuffer);e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,l.__webGLTexture,0);e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,l.__webGLRenderbuffer);e.bindTexture(e.TEXTURE_2D,null);e.bindRenderbuffer(e.RENDERBUFFER,null);e.bindFramebuffer(e.FRAMEBUFFER,null)}var y,v,p;if(l){y=l.__webGLFramebuffer;v=l.width;p=l.height}else{y=null;v=o.width;p=o.height}if(y!=N){e.bindFramebuffer(e.FRAMEBUFFER,
y);e.viewport(0,0,v,p);B&&e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT);N=y}}function z(l,B){var y;if(l=="fragment")y=e.createShader(e.FRAGMENT_SHADER);else l=="vertex"&&(y=e.createShader(e.VERTEX_SHADER));e.shaderSource(y,B);e.compileShader(y);if(!e.getShaderParameter(y,e.COMPILE_STATUS)){alert(e.getShaderInfoLog(y));return null}return y}function C(l){switch(l){case THREE.RepeatWrapping:return e.REPEAT;case THREE.ClampToEdgeWrapping:return e.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return e.MIRRORED_REPEAT;
case THREE.NearestFilter:return e.NEAREST;case THREE.NearestMipMapNearestFilter:return e.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return e.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return e.LINEAR;case THREE.LinearMipMapNearestFilter:return e.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return e.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return e.BYTE;case THREE.UnsignedByteType:return e.UNSIGNED_BYTE;case THREE.ShortType:return e.SHORT;case THREE.UnsignedShortType:return e.UNSIGNED_SHORT;
case THREE.IntType:return e.INT;case THREE.UnsignedShortType:return e.UNSIGNED_INT;case THREE.FloatType:return e.FLOAT;case THREE.AlphaFormat:return e.ALPHA;case THREE.RGBFormat:return e.RGB;case THREE.RGBAFormat:return e.RGBA;case THREE.LuminanceFormat:return e.LUMINANCE;case THREE.LuminanceAlphaFormat:return e.LUMINANCE_ALPHA}return 0}var o=document.createElement("canvas"),e,t=null,N=null,Q=null,ea=null,L=null,G=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,
new THREE.Vector4],Y=new THREE.Matrix4,T=new Float32Array(16),da=new Float32Array(16),Z=new Float32Array(16),H=new THREE.Vector4,aa=!0,na=new THREE.Color(0),ba=0;if(a){if(a.antialias!==undefined)aa=a.antialias;a.clearColor!==undefined&&na.setHex(a.clearColor);if(a.clearAlpha!==undefined)ba=a.clearAlpha}this.domElement=o;this.autoClear=!0;this.sortObjects=!1;(function(l,B,y){try{e=o.getContext("experimental-webgl",{antialias:l})}catch(v){console.log(v)}if(!e){alert("WebGL not supported");throw"cannot create webgl context";
}e.clearColor(0,0,0,1);e.clearDepth(1);e.enable(e.DEPTH_TEST);e.depthFunc(e.LEQUAL);e.frontFace(e.CCW);e.cullFace(e.BACK);e.enable(e.CULL_FACE);e.enable(e.BLEND);e.blendFunc(e.ONE,e.ONE_MINUS_SRC_ALPHA);e.clearColor(B.r,B.g,B.b,y);_cullEnabled=!0})(aa,na,ba);this.context=e;this.lights={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[]}};this.setSize=function(l,B){o.width=l;o.height=B;e.viewport(0,0,o.width,o.height)};this.setClearColorHex=function(l,
B){var y=new THREE.Color(l);e.clearColor(y.r,y.g,y.b,B)};this.setClearColor=function(l,B){e.clearColor(l.r,l.g,l.b,B)};this.clear=function(){e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT)};this.setupLights=function(l,B){var y,v,p,D=0,F=0,J=0,U,A,R,O=this.lights,ga=O.directional.colors,ma=O.directional.positions,E=O.point.colors,P=O.point.positions,I=0,V=0;y=p=p=0;for(v=B.length;y<v;y++){p=B[y];U=p.color;A=p.position;R=p.intensity;if(p instanceof THREE.AmbientLight){D+=U.r;F+=U.g;J+=U.b}else if(p instanceof
THREE.DirectionalLight){p=I*3;ga[p]=U.r*R;ga[p+1]=U.g*R;ga[p+2]=U.b*R;ma[p]=A.x;ma[p+1]=A.y;ma[p+2]=A.z;I+=1}else if(p instanceof THREE.PointLight){p=V*3;E[p]=U.r*R;E[p+1]=U.g*R;E[p+2]=U.b*R;P[p]=A.x;P[p+1]=A.y;P[p+2]=A.z;V+=1}}for(y=I*3;y<ga.length;y++)ga[y]=0;for(y=V*3;y<E.length;y++)E[y]=0;O.point.length=V;O.directional.length=I;O.ambient[0]=D;O.ambient[1]=F;O.ambient[2]=J};this.initMaterial=function(l,B,y){var v,p;if(l instanceof THREE.MeshDepthMaterial)c(l,THREE.ShaderLib.depth);else if(l instanceof
THREE.MeshNormalMaterial)c(l,THREE.ShaderLib.normal);else if(l instanceof THREE.MeshBasicMaterial)c(l,THREE.ShaderLib.basic);else if(l instanceof THREE.MeshLambertMaterial)c(l,THREE.ShaderLib.lambert);else if(l instanceof THREE.MeshPhongMaterial)c(l,THREE.ShaderLib.phong);else if(l instanceof THREE.LineBasicMaterial)c(l,THREE.ShaderLib.basic);else l instanceof THREE.ParticleBasicMaterial&&c(l,THREE.ShaderLib.particle_basic);var D,F,J,U;p=J=U=0;for(D=B.length;p<D;p++){F=B[p];F instanceof THREE.DirectionalLight&&
J++;F instanceof THREE.PointLight&&U++}if(U+J<=4)B=J;else{B=Math.ceil(4*J/(U+J));U=4-B}p={directional:B,point:U};U=l.fragment_shader;B=l.vertex_shader;D={fog:y,map:l.map,env_map:l.env_map,light_map:l.light_map,vertex_colors:l.vertex_colors,skinning:l.skinning,maxDirLights:p.directional,maxPointLights:p.point};y=e.createProgram();p=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+D.maxDirLights,"#define MAX_POINT_LIGHTS "+D.maxPointLights,D.fog?"#define USE_FOG":"",D.fog instanceof
THREE.FogExp2?"#define FOG_EXP2":"",D.map?"#define USE_MAP":"",D.env_map?"#define USE_ENVMAP":"",D.light_map?"#define USE_LIGHTMAP":"",D.vertex_colors?"#define USE_COLOR":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");D=[e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+D.maxDirLights,"#define MAX_POINT_LIGHTS "+D.maxPointLights,D.map?"#define USE_MAP":"",D.env_map?"#define USE_ENVMAP":"",D.light_map?"#define USE_LIGHTMAP":
"",D.vertex_colors?"#define USE_COLOR":"",D.skinning?"#define USE_SKINNING":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform mat4 cameraInverseMatrix;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec3 color;\nattribute vec2 uv;\nattribute vec2 uv2;\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n"].join("\n");
e.attachShader(y,z("fragment",p+U));e.attachShader(y,z("vertex",D+B));e.linkProgram(y);e.getProgramParameter(y,e.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+e.getProgramParameter(y,e.VALIDATE_STATUS)+", gl error ["+e.getError()+"]");y.uniforms={};y.attributes={};l.program=y;y=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","cameraInverseMatrix","uBoneGlobalMatrices"];for(v in l.uniforms)y.push(v);v=l.program;U=0;for(B=y.length;U<
B;U++){p=y[U];v.uniforms[p]=e.getUniformLocation(v,p)}l=l.program;v=["position","normal","uv","uv2","tangent","color","skinVertexA","skinVertexB","skinIndex","skinWeight"];y=0;for(U=v.length;y<U;y++){B=v[y];l.attributes[B]=e.getAttribLocation(l,B)}};this.setProgram=function(l,B,y,v,p){v.program||this.initMaterial(v,B,y);var D=v.program,F=D.uniforms,J=v.uniforms;if(D!=t){e.useProgram(D);t=D;e.uniformMatrix4fv(F.projectionMatrix,!1,T)}if(y&&(v instanceof THREE.MeshBasicMaterial||v instanceof THREE.MeshLambertMaterial||
v instanceof THREE.MeshPhongMaterial||v instanceof THREE.LineBasicMaterial||v instanceof THREE.ParticleBasicMaterial)){J.fogColor.value.setHex(y.color.hex);if(y instanceof THREE.Fog){J.fogNear.value=y.near;J.fogFar.value=y.far}else if(y instanceof THREE.FogExp2)J.fogDensity.value=y.density}if(v instanceof THREE.MeshPhongMaterial||v instanceof THREE.MeshLambertMaterial){this.setupLights(D,B);B=this.lights;J.enableLighting.value=B.directional.length+B.point.length;J.ambientLightColor.value=B.ambient;
J.directionalLightColor.value=B.directional.colors;J.directionalLightDirection.value=B.directional.positions;J.pointLightColor.value=B.point.colors;J.pointLightPosition.value=B.point.positions}if(v instanceof THREE.MeshBasicMaterial||v instanceof THREE.MeshLambertMaterial||v instanceof THREE.MeshPhongMaterial){J.diffuse.value.setRGB(v.color.r*v.opacity,v.color.g*v.opacity,v.color.b*v.opacity);J.opacity.value=v.opacity;J.map.texture=v.map;J.light_map.texture=v.light_map;J.env_map.texture=v.env_map;
J.reflectivity.value=v.reflectivity;J.refraction_ratio.value=v.refraction_ratio;J.combine.value=v.combine;J.useRefract.value=v.env_map&&v.env_map.mapping instanceof THREE.CubeRefractionMapping}if(v instanceof THREE.LineBasicMaterial){J.diffuse.value.setRGB(v.color.r*v.opacity,v.color.g*v.opacity,v.color.b*v.opacity);J.opacity.value=v.opacity}else if(v instanceof THREE.ParticleBasicMaterial){J.psColor.value.setRGB(v.color.r*v.opacity,v.color.g*v.opacity,v.color.b*v.opacity);J.opacity.value=v.opacity;
J.size.value=v.size;J.map.texture=v.map}else if(v instanceof THREE.MeshPhongMaterial){J.ambient.value.setRGB(v.ambient.r,v.ambient.g,v.ambient.b);J.specular.value.setRGB(v.specular.r,v.specular.g,v.specular.b);J.shininess.value=v.shininess}else if(v instanceof THREE.MeshDepthMaterial){J.mNear.value=l.near;J.mFar.value=l.far;J.opacity.value=v.opacity}else if(v instanceof THREE.MeshNormalMaterial)J.opacity.value=v.opacity;var U,A,R;for(U in J)if(R=D.uniforms[U]){y=J[U];A=y.type;B=y.value;if(A=="i")e.uniform1i(R,
B);else if(A=="f")e.uniform1f(R,B);else if(A=="fv1")e.uniform1fv(R,B);else if(A=="fv")e.uniform3fv(R,B);else if(A=="v2")e.uniform2f(R,B.x,B.y);else if(A=="v3")e.uniform3f(R,B.x,B.y,B.z);else if(A=="c")e.uniform3f(R,B.r,B.g,B.b);else if(A=="t"){e.uniform1i(R,B);if(y=y.texture)if(y.image instanceof Array&&y.image.length==6){if(y.image.length==6){if(!y.image.__webGLTextureCube&&!y.image.__cubeMapInitialized&&y.image.loadCount==6){y.image.__webGLTextureCube=e.createTexture();e.bindTexture(e.TEXTURE_CUBE_MAP,
y.image.__webGLTextureCube);e.texParameteri(e.TEXTURE_CUBE_MAP,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE);e.texParameteri(e.TEXTURE_CUBE_MAP,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE);e.texParameteri(e.TEXTURE_CUBE_MAP,e.TEXTURE_MAG_FILTER,e.LINEAR);e.texParameteri(e.TEXTURE_CUBE_MAP,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_LINEAR);for(A=0;A<6;++A)e.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+A,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,y.image[A]);e.generateMipmap(e.TEXTURE_CUBE_MAP);e.bindTexture(e.TEXTURE_CUBE_MAP,null);y.image.__cubeMapInitialized=
!0}e.activeTexture(e.TEXTURE0+B);e.bindTexture(e.TEXTURE_CUBE_MAP,y.image.__webGLTextureCube)}}else{if(!y.__webGLTexture&&y.image.loaded){y.__webGLTexture=e.createTexture();e.bindTexture(e.TEXTURE_2D,y.__webGLTexture);e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,y.image);e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,C(y.wrap_s));e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,C(y.wrap_t));e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,C(y.mag_filter));e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,
C(y.min_filter));e.generateMipmap(e.TEXTURE_2D);e.bindTexture(e.TEXTURE_2D,null)}e.activeTexture(e.TEXTURE0+B);e.bindTexture(e.TEXTURE_2D,y.__webGLTexture)}}}e.uniformMatrix4fv(F.modelViewMatrix,!1,p._modelViewMatrixArray);e.uniformMatrix3fv(F.normalMatrix,!1,p._normalMatrixArray);(v instanceof THREE.MeshShaderMaterial||v instanceof THREE.MeshPhongMaterial||v.env_map)&&e.uniform3f(F.cameraPosition,l.position.x,l.position.y,l.position.z);(v instanceof THREE.MeshShaderMaterial||v.env_map||v.skinning)&&
e.uniformMatrix4fv(F.objectMatrix,!1,p._objectMatrixArray);(v instanceof THREE.MeshPhongMaterial||v instanceof THREE.MeshLambertMaterial||v instanceof THREE.MeshShaderMaterial||v.skinning)&&e.uniformMatrix4fv(F.viewMatrix,!1,Z);if(v.skinning){e.uniformMatrix4fv(F.cameraInverseMatrix,!1,da);e.uniformMatrix4fv(F.uBoneGlobalMatrices,!1,p.boneMatrices)}return D};this.renderBuffer=function(l,B,y,v,p,D){l=this.setProgram(l,B,y,v,D).attributes;e.bindBuffer(e.ARRAY_BUFFER,p.__webGLVertexBuffer);e.vertexAttribPointer(l.position,
3,e.FLOAT,!1,0,0);e.enableVertexAttribArray(l.position);if(l.color>=0){e.bindBuffer(e.ARRAY_BUFFER,p.__webGLColorBuffer);e.vertexAttribPointer(l.color,3,e.FLOAT,!1,0,0);e.enableVertexAttribArray(l.color)}if(l.normal>=0){e.bindBuffer(e.ARRAY_BUFFER,p.__webGLNormalBuffer);e.vertexAttribPointer(l.normal,3,e.FLOAT,!1,0,0);e.enableVertexAttribArray(l.normal)}if(l.tangent>=0){e.bindBuffer(e.ARRAY_BUFFER,p.__webGLTangentBuffer);e.vertexAttribPointer(l.tangent,4,e.FLOAT,!1,0,0);e.enableVertexAttribArray(l.tangent)}if(l.uv>=
0)if(p.__webGLUVBuffer){e.bindBuffer(e.ARRAY_BUFFER,p.__webGLUVBuffer);e.vertexAttribPointer(l.uv,2,e.FLOAT,!1,0,0);e.enableVertexAttribArray(l.uv)}else e.disableVertexAttribArray(l.uv);if(l.uv2>=0)if(p.__webGLUV2Buffer){e.bindBuffer(e.ARRAY_BUFFER,p.__webGLUV2Buffer);e.vertexAttribPointer(l.uv2,2,e.FLOAT,!1,0,0);e.enableVertexAttribArray(l.uv2)}else e.disableVertexAttribArray(l.uv2);if(D instanceof THREE.SkinnedMesh){e.bindBuffer(e.ARRAY_BUFFER,p.__webGLSkinVertexABuffer);e.vertexAttribPointer(l.skinVertexA,
4,e.FLOAT,!1,0,0);e.enableVertexAttribArray(l.skinVertexA);e.bindBuffer(e.ARRAY_BUFFER,p.__webGLSkinVertexBBuffer);e.vertexAttribPointer(l.skinVertexB,4,e.FLOAT,!1,0,0);e.enableVertexAttribArray(l.skinVertexB);e.bindBuffer(e.ARRAY_BUFFER,p.__webGLSkinIndicesBuffer);e.vertexAttribPointer(l.skinIndex,4,e.FLOAT,!1,0,0);e.enableVertexAttribArray(l.skinIndex);e.bindBuffer(e.ARRAY_BUFFER,p.__webGLSkinWeightsBuffer);e.vertexAttribPointer(l.skinWeight,4,e.FLOAT,!1,0,0);e.enableVertexAttribArray(l.skinWeight)}if(D instanceof
THREE.Mesh)if(v.wireframe){e.lineWidth(v.wireframe_linewidth);e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,p.__webGLLineBuffer);e.drawElements(e.LINES,p.__webGLLineCount,e.UNSIGNED_SHORT,0)}else{e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,p.__webGLFaceBuffer);e.drawElements(e.TRIANGLES,p.__webGLFaceCount,e.UNSIGNED_SHORT,0)}else if(D instanceof THREE.Line){D=D.type==THREE.LineStrip?e.LINE_STRIP:e.LINES;e.lineWidth(v.linewidth);e.drawArrays(D,0,p.__webGLLineCount)}else D instanceof THREE.ParticleSystem&&e.drawArrays(e.POINTS,
0,p.__webGLParticleCount)};this.render=function(l,B,y,v){var p,D,F,J,U,A,R,O=l.lights,ga=l.fog;B.autoUpdateMatrix&&B.update();B.globalMatrix.flattenToArray(Z);B.projectionMatrix.flattenToArray(T);B.inverseMatrix.flattenToArray(da);Y.multiply(B.projectionMatrix,B.globalMatrix);g(Y);THREE.AnimationHandler&&THREE.AnimationHandler.update();l.update(undefined,!1,B,this);this.initWebGLObjects(l,B);x(y,v!==undefined?v:!0);this.autoClear&&this.clear();J=l.__webGLObjects.length;for(v=0;v<J;v++){p=l.__webGLObjects[v];
A=p.object;if(A.visible)if(!(A instanceof THREE.Mesh)||h(A)){A.globalMatrix.flattenToArray(A._objectMatrixArray);u(A,B);m(p);p.render=!0;if(this.sortObjects){H.copy(A.position);Y.multiplyVector3(H);p.z=H.z}}else p.render=!1;else p.render=!1}this.sortObjects&&l.__webGLObjects.sort(n);U=l.__webGLObjectsImmediate.length;for(v=0;v<U;v++){p=l.__webGLObjectsImmediate[v];A=p.object;if(A.visible){A.autoUpdateMatrix&&A.globalMatrix.flattenToArray(A._objectMatrixArray);u(A,B);j(p)}}q(THREE.NormalBlending);
for(v=0;v<J;v++){p=l.__webGLObjects[v];if(p.render){A=p.object;R=p.buffer;F=p.opaque;f(A);for(p=0;p<F.count;p++){material=F.list[p];this.setDepthTest(material.depth_test);this.renderBuffer(B,O,ga,material,R,A)}}}for(v=0;v<U;v++){p=l.__webGLObjectsImmediate[v];A=p.object;if(A.visible){F=p.opaque;f(A);for(p=0;p<F.count;p++){material=F.list[p];this.setDepthTest(material.depth_test);D=this.setProgram(B,O,ga,material,A);A.render(function(ma){d(ma,D)})}}}for(v=0;v<J;v++){p=l.__webGLObjects[v];if(p.render){A=
p.object;R=p.buffer;F=p.transparent;f(A);for(p=0;p<F.count;p++){material=F.list[p];q(material.blending);this.setDepthTest(material.depth_test);this.renderBuffer(B,O,ga,material,R,A)}}}for(v=0;v<U;v++){p=l.__webGLObjectsImmediate[v];A=p.object;if(A.visible){F=p.transparent;f(A);for(p=0;p<F.count;p++){material=F.list[p];q(material.blending);this.setDepthTest(material.depth_test);D=this.setProgram(B,O,ga,material,A);A.render(function(ma){d(ma,D)})}}}if(y&&y.min_filter!==THREE.NearestFilter&&y.min_filter!==
THREE.LinearFilter){e.bindTexture(e.TEXTURE_2D,y.__webGLTexture);e.generateMipmap(e.TEXTURE_2D);e.bindTexture(e.TEXTURE_2D,null)}};this.initWebGLObjects=function(l){var B,y,v;if(!l.__webGLObjects){l.__webGLObjects=[];l.__webGLObjectsMap={};l.__webGLObjectsImmediate=[]}B=0;for(y=l.objects.length;B<y;B++){v=l.objects[B];var p=l,D=void 0,F=void 0,J=void 0,U=void 0;F=v.geometry;if(p.__webGLObjectsMap[v.id]==undefined){p.__webGLObjectsMap[v.id]={};v._modelViewMatrix=new THREE.Matrix4;v._normalMatrixArray=
new Float32Array(9);v._modelViewMatrixArray=new Float32Array(16);v._objectMatrixArray=new Float32Array(16);v.globalMatrix.flattenToArray(v._objectMatrixArray)}U=p.__webGLObjectsMap[v.id];objlist=p.__webGLObjects;if(v instanceof THREE.Mesh){for(D in F.geometryChunks){J=F.geometryChunks[D];if(!J.__webGLVertexBuffer){p=J;p.__webGLVertexBuffer=e.createBuffer();p.__webGLNormalBuffer=e.createBuffer();p.__webGLTangentBuffer=e.createBuffer();p.__webGLColorBuffer=e.createBuffer();p.__webGLUVBuffer=e.createBuffer();
p.__webGLUV2Buffer=e.createBuffer();p.__webGLSkinVertexABuffer=e.createBuffer();p.__webGLSkinVertexBBuffer=e.createBuffer();p.__webGLSkinIndicesBuffer=e.createBuffer();p.__webGLSkinWeightsBuffer=e.createBuffer();p.__webGLFaceBuffer=e.createBuffer();p.__webGLLineBuffer=e.createBuffer();p=J;var A=v,R=void 0,O=void 0,ga=0,ma=0,E=0,P=A.geometry.faces,I=p.faces;R=0;for(O=I.length;R<O;R++){fi=I[R];face=P[fi];if(face instanceof THREE.Face3){ga+=3;ma+=1;E+=3}else if(face instanceof THREE.Face4){ga+=4;ma+=
2;E+=4}}p.__vertexArray=new Float32Array(ga*3);p.__normalArray=new Float32Array(ga*3);p.__tangentArray=new Float32Array(ga*4);p.__colorArray=new Float32Array(ga*3);p.__uvArray=new Float32Array(ga*2);p.__uv2Array=new Float32Array(ga*2);p.__skinVertexAArray=new Float32Array(ga*4);p.__skinVertexBArray=new Float32Array(ga*4);p.__skinIndexArray=new Float32Array(ga*4);p.__skinWeightArray=new Float32Array(ga*4);p.__faceArray=new Uint16Array(ma*3);p.__lineArray=new Uint16Array(E*2);O=R=p;ga=void 0;P=void 0;
var V=void 0,ca=void 0;V=void 0;I=!1;ga=0;for(P=A.materials.length;ga<P;ga++){V=A.materials[ga];if(V instanceof THREE.MeshFaceMaterial){V=0;for(ca=O.materials.length;V<ca;V++)if(O.materials[V]&&O.materials[V].shading!=undefined&&O.materials[V].shading==THREE.SmoothShading){I=!0;break}}else if(V&&V.shading!=undefined&&V.shading==THREE.SmoothShading){I=!0;break}if(I)break}R.__needsSmoothNormals=I;p.__webGLFaceCount=ma*3;p.__webGLLineCount=E*2;F.__dirtyVertices=!0;F.__dirtyElements=!0;F.__dirtyUvs=!0;
F.__dirtyNormals=!0;F.__dirtyTangents=!0;F.__dirtyColors=!0}if(F.__dirtyVertices||F.__dirtyElements||F.__dirtyUvs||F.__dirtyNormals||F.__dirtyColors||F.__dirtyTangents){p=J;ma=e.DYNAMIC_DRAW;E=void 0;R=void 0;var ta=void 0,M=void 0,Ba=void 0,xa=void 0,Ea=void 0;ta=void 0;var W=void 0,$=void 0,fa=void 0,oa=void 0;W=void 0;$=void 0;fa=void 0;M=void 0;W=void 0;$=void 0;fa=void 0;oa=void 0;W=void 0;$=void 0;fa=void 0;oa=void 0;W=void 0;$=void 0;fa=void 0;oa=void 0;W=void 0;$=void 0;fa=void 0;oa=void 0;
W=void 0;$=void 0;fa=void 0;oa=void 0;M=void 0;xa=void 0;Ba=void 0;Ea=void 0;var Ia=ca=V=I=P=ga=A=O=0,wa=0,K=0,ua=p.__vertexArray,Pa=p.__uvArray,Na=p.__uv2Array,La=p.__normalArray,qa=p.__tangentArray,va=p.__colorArray,ra=p.__skinVertexAArray,pa=p.__skinVertexBArray,sa=p.__skinIndexArray,ja=p.__skinWeightArray,Ca=p.__faceArray,Aa=p.__lineArray,Ra=p.__needsSmoothNormals,Da=v.geometry,Qa=Da.__dirtyVertices,S=Da.__dirtyElements,ka=Da.__dirtyUvs,ia=Da.__dirtyNormals,X=Da.__dirtyTangents,ha=Da.__dirtyColors,
la=Da.vertices,ya=p.faces,Fa=Da.faces,Ha=Da.uvs,Oa=Da.uvs2,za=Da.colors,Ka=Da.skinVerticesA,Ma=Da.skinVerticesB,Ja=Da.skinIndices,Ga=Da.skinWeights;E=0;for(R=ya.length;E<R;E++){ta=ya[E];M=Fa[ta];Ea=Ha[ta];ta=Oa[ta];Ba=M.vertexNormals;xa=M.normal;if(M instanceof THREE.Face3){if(Qa){W=la[M.a].position;$=la[M.b].position;fa=la[M.c].position;ua[A]=W.x;ua[A+1]=W.y;ua[A+2]=W.z;ua[A+3]=$.x;ua[A+4]=$.y;ua[A+5]=$.z;ua[A+6]=fa.x;ua[A+7]=fa.y;ua[A+8]=fa.z;A+=9}if(Ga.length){W=Ga[M.a];$=Ga[M.b];fa=Ga[M.c];ja[K]=
W.x;ja[K+1]=W.y;ja[K+2]=W.z;ja[K+3]=W.w;ja[K+4]=$.x;ja[K+5]=$.y;ja[K+6]=$.z;ja[K+7]=$.w;ja[K+8]=fa.x;ja[K+9]=fa.y;ja[K+10]=fa.z;ja[K+11]=fa.w;W=Ja[M.a];$=Ja[M.b];fa=Ja[M.c];sa[K]=W.x;sa[K+1]=W.y;sa[K+2]=W.z;sa[K+3]=W.w;sa[K+4]=$.x;sa[K+5]=$.y;sa[K+6]=$.z;sa[K+7]=$.w;sa[K+8]=fa.x;sa[K+9]=fa.y;sa[K+10]=fa.z;sa[K+11]=fa.w;W=Ka[M.a];$=Ka[M.b];fa=Ka[M.c];ra[K]=W.x;ra[K+1]=W.y;ra[K+2]=W.z;ra[K+3]=1;ra[K+4]=$.x;ra[K+5]=$.y;ra[K+6]=$.z;ra[K+7]=1;ra[K+8]=fa.x;ra[K+9]=fa.y;ra[K+10]=fa.z;ra[K+11]=1;W=Ma[M.a];
$=Ma[M.b];fa=Ma[M.c];pa[K]=W.x;pa[K+1]=W.y;pa[K+2]=W.z;pa[K+3]=1;pa[K+4]=$.x;pa[K+5]=$.y;pa[K+6]=$.z;pa[K+7]=1;pa[K+8]=fa.x;pa[K+9]=fa.y;pa[K+10]=fa.z;pa[K+11]=1;K+=12}if(ha&&za.length){W=za[M.a];$=za[M.b];fa=za[M.c];va[wa]=W.r;va[wa+1]=W.g;va[wa+2]=W.b;va[wa+3]=$.r;va[wa+4]=$.g;va[wa+5]=$.b;va[wa+6]=fa.r;va[wa+7]=fa.g;va[wa+8]=fa.b;wa+=9}if(X&&Da.hasTangents){W=la[M.a].tangent;$=la[M.b].tangent;fa=la[M.c].tangent;qa[ca]=W.x;qa[ca+1]=W.y;qa[ca+2]=W.z;qa[ca+3]=W.w;qa[ca+4]=$.x;qa[ca+5]=$.y;qa[ca+6]=
$.z;qa[ca+7]=$.w;qa[ca+8]=fa.x;qa[ca+9]=fa.y;qa[ca+10]=fa.z;qa[ca+11]=fa.w;ca+=12}if(ia)if(Ba.length==3&&Ra)for(M=0;M<3;M++){xa=Ba[M];La[V]=xa.x;La[V+1]=xa.y;La[V+2]=xa.z;V+=3}else for(M=0;M<3;M++){La[V]=xa.x;La[V+1]=xa.y;La[V+2]=xa.z;V+=3}if(ka&&Ea)for(M=0;M<3;M++){Ba=Ea[M];Pa[ga]=Ba.u;Pa[ga+1]=Ba.v;ga+=2}if(ka&&ta)for(M=0;M<3;M++){Ea=ta[M];Na[P]=Ea.u;Na[P+1]=Ea.v;P+=2}if(S){Ca[I]=O;Ca[I+1]=O+1;Ca[I+2]=O+2;I+=3;Aa[Ia]=O;Aa[Ia+1]=O+1;Aa[Ia+2]=O;Aa[Ia+3]=O+2;Aa[Ia+4]=O+1;Aa[Ia+5]=O+2;Ia+=6;O+=3}}else if(M instanceof
THREE.Face4){if(Qa){W=la[M.a].position;$=la[M.b].position;fa=la[M.c].position;oa=la[M.d].position;ua[A]=W.x;ua[A+1]=W.y;ua[A+2]=W.z;ua[A+3]=$.x;ua[A+4]=$.y;ua[A+5]=$.z;ua[A+6]=fa.x;ua[A+7]=fa.y;ua[A+8]=fa.z;ua[A+9]=oa.x;ua[A+10]=oa.y;ua[A+11]=oa.z;A+=12}if(Ga.length){W=Ga[M.a];$=Ga[M.b];fa=Ga[M.c];oa=Ga[M.d];ja[K]=W.x;ja[K+1]=W.y;ja[K+2]=W.z;ja[K+3]=W.w;ja[K+4]=$.x;ja[K+5]=$.y;ja[K+6]=$.z;ja[K+7]=$.w;ja[K+8]=fa.x;ja[K+9]=fa.y;ja[K+10]=fa.z;ja[K+11]=fa.w;ja[K+12]=oa.x;ja[K+13]=oa.y;ja[K+14]=oa.z;ja[K+
15]=oa.w;W=Ja[M.a];$=Ja[M.b];fa=Ja[M.c];oa=Ja[M.d];sa[K]=W.x;sa[K+1]=W.y;sa[K+2]=W.z;sa[K+3]=W.w;sa[K+4]=$.x;sa[K+5]=$.y;sa[K+6]=$.z;sa[K+7]=$.w;sa[K+8]=fa.x;sa[K+9]=fa.y;sa[K+10]=fa.z;sa[K+11]=fa.w;sa[K+12]=oa.x;sa[K+13]=oa.y;sa[K+14]=oa.z;sa[K+15]=oa.w;W=Ka[M.a];$=Ka[M.b];fa=Ka[M.c];oa=Ka[M.d];ra[K]=W.x;ra[K+1]=W.y;ra[K+2]=W.z;ra[K+3]=1;ra[K+4]=$.x;ra[K+5]=$.y;ra[K+6]=$.z;ra[K+7]=1;ra[K+8]=fa.x;ra[K+9]=fa.y;ra[K+10]=fa.z;ra[K+11]=1;ra[K+12]=oa.x;ra[K+13]=oa.y;ra[K+14]=oa.z;ra[K+15]=1;W=Ma[M.a];
$=Ma[M.b];fa=Ma[M.c];oa=Ma[M.d];pa[K]=W.x;pa[K+1]=W.y;pa[K+2]=W.z;pa[K+3]=1;pa[K+4]=$.x;pa[K+5]=$.y;pa[K+6]=$.z;pa[K+7]=1;pa[K+8]=fa.x;pa[K+9]=fa.y;pa[K+10]=fa.z;pa[K+11]=1;pa[K+12]=oa.x;pa[K+13]=oa.y;pa[K+14]=oa.z;pa[K+15]=1;K+=16}if(ha&&za.length){W=za[M.a];$=za[M.b];fa=za[M.c];oa=za[M.d];va[wa]=W.r;va[wa+1]=W.g;va[wa+2]=W.b;va[wa+3]=$.r;va[wa+4]=$.g;va[wa+5]=$.b;va[wa+6]=fa.r;va[wa+7]=fa.g;va[wa+8]=fa.b;va[wa+9]=oa.r;va[wa+10]=oa.g;va[wa+11]=oa.b;wa+=12}if(X&&Da.hasTangents){W=la[M.a].tangent;
$=la[M.b].tangent;fa=la[M.c].tangent;M=la[M.d].tangent;qa[ca]=W.x;qa[ca+1]=W.y;qa[ca+2]=W.z;qa[ca+3]=W.w;qa[ca+4]=$.x;qa[ca+5]=$.y;qa[ca+6]=$.z;qa[ca+7]=$.w;qa[ca+8]=fa.x;qa[ca+9]=fa.y;qa[ca+10]=fa.z;qa[ca+11]=fa.w;qa[ca+12]=M.x;qa[ca+13]=M.y;qa[ca+14]=M.z;qa[ca+15]=M.w;ca+=16}if(ia)if(Ba.length==4&&Ra)for(M=0;M<4;M++){xa=Ba[M];La[V]=xa.x;La[V+1]=xa.y;La[V+2]=xa.z;V+=3}else for(M=0;M<4;M++){La[V]=xa.x;La[V+1]=xa.y;La[V+2]=xa.z;V+=3}if(ka&&Ea)for(M=0;M<4;M++){Ba=Ea[M];Pa[ga]=Ba.u;Pa[ga+1]=Ba.v;ga+=
2}if(ka&&ta)for(M=0;M<4;M++){Ea=ta[M];Na[P]=Ea.u;Na[P+1]=Ea.v;P+=2}if(S){Ca[I]=O;Ca[I+1]=O+1;Ca[I+2]=O+2;Ca[I+3]=O;Ca[I+4]=O+2;Ca[I+5]=O+3;I+=6;Aa[Ia]=O;Aa[Ia+1]=O+1;Aa[Ia+2]=O;Aa[Ia+3]=O+3;Aa[Ia+4]=O+1;Aa[Ia+5]=O+2;Aa[Ia+6]=O+2;Aa[Ia+7]=O+3;Ia+=8;O+=4}}}if(Qa){e.bindBuffer(e.ARRAY_BUFFER,p.__webGLVertexBuffer);e.bufferData(e.ARRAY_BUFFER,ua,ma)}if(ha&&za.length){e.bindBuffer(e.ARRAY_BUFFER,p.__webGLColorBuffer);e.bufferData(e.ARRAY_BUFFER,va,ma)}if(ia){e.bindBuffer(e.ARRAY_BUFFER,p.__webGLNormalBuffer);
e.bufferData(e.ARRAY_BUFFER,La,ma)}if(X&&Da.hasTangents){e.bindBuffer(e.ARRAY_BUFFER,p.__webGLTangentBuffer);e.bufferData(e.ARRAY_BUFFER,qa,ma)}if(ka&&ga>0){e.bindBuffer(e.ARRAY_BUFFER,p.__webGLUVBuffer);e.bufferData(e.ARRAY_BUFFER,Pa,ma)}if(ka&&P>0){e.bindBuffer(e.ARRAY_BUFFER,p.__webGLUV2Buffer);e.bufferData(e.ARRAY_BUFFER,Na,ma)}if(S){e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,p.__webGLFaceBuffer);e.bufferData(e.ELEMENT_ARRAY_BUFFER,Ca,ma);e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,p.__webGLLineBuffer);e.bufferData(e.ELEMENT_ARRAY_BUFFER,
Aa,ma)}if(K>0){e.bindBuffer(e.ARRAY_BUFFER,p.__webGLSkinVertexABuffer);e.bufferData(e.ARRAY_BUFFER,ra,ma);e.bindBuffer(e.ARRAY_BUFFER,p.__webGLSkinVertexBBuffer);e.bufferData(e.ARRAY_BUFFER,pa,ma);e.bindBuffer(e.ARRAY_BUFFER,p.__webGLSkinIndicesBuffer);e.bufferData(e.ARRAY_BUFFER,sa,ma);e.bindBuffer(e.ARRAY_BUFFER,p.__webGLSkinWeightsBuffer);e.bufferData(e.ARRAY_BUFFER,ja,ma)}}w(objlist,U,D,J,v)}F.__dirtyVertices=!1;F.__dirtyElements=!1;F.__dirtyUvs=!1;F.__dirtyNormals=!1;F.__dirtyTangents=!1;F.__dirtyColors=
!1}else if(v instanceof THREE.Line){if(!F.__webGLVertexBuffer){D=F;D.__webGLVertexBuffer=e.createBuffer();D.__webGLColorBuffer=e.createBuffer();D=F;J=D.vertices.length;D.__vertexArray=new Float32Array(J*3);D.__colorArray=new Float32Array(J*3);D.__webGLLineCount=J;F.__dirtyVertices=!0;F.__dirtyColors=!0}if(F.__dirtyVertices||F.__dirtyColors){D=F;J=e.DYNAMIC_DRAW;O=void 0;O=void 0;A=void 0;p=void 0;ga=D.vertices;ma=D.colors;P=ga.length;E=ma.length;I=D.__vertexArray;R=D.__colorArray;V=D.__dirtyColors;
if(D.__dirtyVertices){for(O=0;O<P;O++){A=ga[O].position;p=O*3;I[p]=A.x;I[p+1]=A.y;I[p+2]=A.z}e.bindBuffer(e.ARRAY_BUFFER,D.__webGLVertexBuffer);e.bufferData(e.ARRAY_BUFFER,I,J)}if(V){for(O=0;O<E;O++){color=ma[O];p=O*3;R[p]=color.r;R[p+1]=color.g;R[p+2]=color.b}e.bindBuffer(e.ARRAY_BUFFER,D.__webGLColorBuffer);e.bufferData(e.ARRAY_BUFFER,R,J)}}w(objlist,U,0,F,v);F.__dirtyVertices=!1;F.__dirtyColors=!1}else if(v instanceof THREE.ParticleSystem){if(!F.__webGLVertexBuffer){D=F;D.__webGLVertexBuffer=e.createBuffer();
D.__webGLColorBuffer=e.createBuffer();D=F;J=D.vertices.length;D.__vertexArray=new Float32Array(J*3);D.__colorArray=new Float32Array(J*3);D.__sortArray=[];D.__webGLParticleCount=J;F.__dirtyVertices=!0;F.__dirtyColors=!0}(F.__dirtyVertices||F.__dirtyColors||v.sortParticles)&&b(F,e.DYNAMIC_DRAW,v,camera);w(objlist,U,0,F,v);F.__dirtyVertices=!1;F.__dirtyColors=!1}else if(v instanceof THREE.MarchingCubes){F=U;if(F[0]==undefined){p.__webGLObjectsImmediate.push({object:v,opaque:{list:[],count:0},transparent:{list:[],
count:0}});F[0]=1}}}};this.removeObject=function(l,B){var y,v;for(y=l.__webGLObjects.length-1;y>=0;y--){v=l.__webGLObjects[y].object;B==v&&l.__webGLObjects.splice(y,1)}};this.addToRenderList=function(){};this.removeFromRenderList=function(){};this.setDepthTest=function(l){l?e.enable(e.DEPTH_TEST):e.disable(e.DEPTH_TEST)};this.setFaceCulling=function(l,B){if(l){!B||B=="ccw"?e.frontFace(e.CCW):e.frontFace(e.CW);if(l=="back")e.cullFace(e.BACK);else l=="front"?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK);
e.enable(e.CULL_FACE)}else e.disable(e.CULL_FACE)};this.supportsVertexTextures=function(){return e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\nvec4 cubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = vec4( mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity ), opacity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D light_map;\n#endif",
lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( light_map, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}",
lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mColor = vec4( diffuse, opacity );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif\ngl_FragColor = gl_FragColor * totalLight;",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\nvColor = color;\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 uBoneGlobalMatrices[20];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( uBoneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( uBoneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * viewMatrix * objectMatrix * gl_Position;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif"};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},light_map:{type:"t",value:2,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",
value:1},ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{opacity:{type:"f",
value:1}},fragment_shader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}",vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsLib.common,fragment_shader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.Snippets.color_pars_fragment,
THREE.Snippets.map_pars_fragment,THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.Snippets.map_fragment,THREE.Snippets.lightmap_fragment,THREE.Snippets.color_fragment,THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.color_pars_vertex,
THREE.Snippets.skinning_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,THREE.Snippets.color_vertex,THREE.Snippets.skinning_vertex,"}"].join("\n")},lambert:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights]),fragment_shader:["uniform vec3 diffuse;\nuniform float opacity;\nvarying vec3 vLightWeighting;",THREE.Snippets.color_pars_fragment,THREE.Snippets.map_pars_fragment,
THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );\ngl_FragColor = gl_FragColor * vec4( vLightWeighting, 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lightmap_fragment,THREE.Snippets.color_fragment,THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,
THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,THREE.Snippets.color_pars_vertex,THREE.Snippets.skinning_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,THREE.Snippets.color_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,THREE.Snippets.skinning_vertex,"}"].join("\n")},phong:{uniforms:Uniforms.merge([THREE.UniformsLib.common,
THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),fragment_shader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",THREE.Snippets.color_pars_fragment,THREE.Snippets.map_pars_fragment,THREE.Snippets.lightmap_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,
THREE.Snippets.lights_pars_fragment,"void main() {\ngl_FragColor = vec4( vLightWeighting, 1.0 );",THREE.Snippets.lights_fragment,THREE.Snippets.map_fragment,THREE.Snippets.lightmap_fragment,THREE.Snippets.color_fragment,THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.Snippets.map_pars_vertex,THREE.Snippets.lightmap_pars_vertex,THREE.Snippets.envmap_pars_vertex,
THREE.Snippets.lights_pars_vertex,THREE.Snippets.color_pars_vertex,THREE.Snippets.skinning_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.lightmap_vertex,THREE.Snippets.envmap_vertex,THREE.Snippets.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",
THREE.Snippets.lights_vertex,THREE.Snippets.skinning_vertex,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsLib.particle,fragment_shader:["uniform vec3 psColor;\nuniform float opacity;",THREE.Snippets.color_pars_fragment,THREE.Snippets.map_particle_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.Snippets.map_particle_fragment,THREE.Snippets.color_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["uniform float size;",
THREE.Snippets.color_pars_vertex,"void main() {",THREE.Snippets.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\ngl_PointSize = size;\n}"].join("\n")}};THREE.RenderableObject=function(){this.z=this.object=null};
THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=!1;this.uvs=[null,null,null]};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};
THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
THREE.Detector={canvas:!!document.createElement("canvas").getContext,webgl:window.Uint8Array!=undefined,workers:!!window.Worker,addGetWebGLMessage:function(a){var b=document.body,c="oldie";if(a){if(a.parent!==undefined)b=a.parent;if(a.id!==undefined)c=a.id}a=document.createElement("center");var d=document.createElement("div");d.innerHTML='Sorry, your browser doesn\'t support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation">WebGL</a><br/>\n<br/>\nPlease try in\n<a href="http://www.google.com/chrome">Chrome 9+</a> /\n<a href="http://www.mozilla.com/en-US/firefox/all-beta.html">Firefox 4+</a> /\n<a href="http://nightly.webkit.org/">Safari OSX 10.6+</a>';d.id=
c;c=d.style;c.fontFamily="monospace";c.fontSize="13px";c.textAlign="center";c.background="#eee";c.color="#000";c.padding="1em";c.width="475px";c.margin="5em auto 0";a.appendChild(d);b.appendChild(a);return d}};
var GeometryUtils={merge:function(a,b){var c=b instanceof THREE.Mesh,d=a.vertices.length,f=c?b.geometry:b,g=a.vertices,h=f.vertices,k=a.faces,j=f.faces,m=a.uvs;f=f.uvs;c&&b.autoUpdateMatrix&&b.updateMatrix();for(var n=0,w=h.length;n<w;n++){var u=new THREE.Vertex(h[n].position.clone());c&&b.matrix.multiplyVector3(u.position);g.push(u)}n=0;for(w=j.length;n<w;n++){h=j[n];var q,x=h.vertexNormals;if(h instanceof THREE.Face3)q=new THREE.Face3(h.a+d,h.b+d,h.c+d);else h instanceof THREE.Face4&&(q=new THREE.Face4(h.a+
d,h.b+d,h.c+d,h.d+d));q.centroid.copy(h.centroid);q.normal.copy(h.normal);c=0;for(g=x.length;c<g;c++){u=x[c];q.vertexNormals.push(u.clone())}q.materials=h.materials.slice();k.push(q)}n=0;for(w=f.length;n<w;n++){d=f[n];k=[];c=0;for(g=d.length;c<g;c++)k.push(new THREE.UV(d[c].u,d[c].v));m.push(k)}}},ImageUtils={loadTexture:function(a,b,c){var d=new Image;d.onload=function(){this.loaded=!0;c&&c(this)};d.src=a;return new THREE.Texture(d,b)},loadArray:function(a,b){var c,d,f=[];c=f.loadCount=0;for(d=a.length;c<
d;++c){f[c]=new Image;f[c].loaded=0;f[c].onload=function(){f.loadCount+=1;this.loaded=!0;b&&b(this)};f[c].src=a[c]}return f}},SceneUtils={loadScene:function(a,b,c,d){a=new Worker(a);a.postMessage(0);a.onmessage=function(f){function g(){for(n in L.objects)if(!H.objects[n]){z=L.objects[n];if(t=H.geometries[z.geometry]){ea=[];for(i=0;i<z.materials.length;i++)ea[i]=H.materials[z.materials[i]];C=z.position;r=z.rotation;s=z.scale;object=new THREE.Mesh(t,ea);object.position.set(C[0],C[1],C[2]);object.rotation.set(r[0],
r[1],r[2]);object.scale.set(s[0],s[1],s[2]);object.visible=z.visible;H.scene.addObject(object);H.objects[n]=object}}}function h(aa){return function(na){H.geometries[aa]=na;g();Y-=1;k()}}function k(){d({total_models:da,total_textures:Z,loaded_models:da-Y,loaded_textures:Z-T},H);Y==0&&T==0&&c(H)}var j,m,n,w,u,q,x,z,C,o,e,t,N,Q,ea,L,G,Y,T,da,Z,H;L=f.data;G=new THREE.Loader;T=Y=0;H={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{}};f=function(){T-=1;
k()};for(u in L.cameras){o=L.cameras[u];if(o.type=="perspective")N=new THREE.Camera(o.fov,o.aspect,o.near,o.far);else if(o.type=="ortho"){N=new THREE.Camera;N.projectionMatrix=THREE.Matrix4.makeOrtho(o.left,o.right,o.top,o.bottom,o.near,o.far)}C=o.position;o=o.target;N.position.set(C[0],C[1],C[2]);N.target.position.set(o[0],o[1],o[2]);H.cameras[u]=N}for(w in L.lights){u=L.lights[w];if(u.type=="directional"){C=u.direction;light=new THREE.DirectionalLight;light.position.set(C[0],C[1],C[2]);light.position.normalize()}else if(u.type==
"point"){C=u.position;light=new THREE.PointLight;light.position.set(C[0],C[1],C[2])}o=u.color;i=u.intensity||1;light.color.setRGB(o[0]*i,o[1]*i,o[2]*i);H.scene.addLight(light);H.lights[w]=light}for(q in L.fogs){w=L.fogs[q];if(w.type=="linear")Q=new THREE.Fog(0,w.near,w.far);else w.type=="exp2"&&(Q=new THREE.FogExp2(0,w.density));o=w.color;Q.color.setRGB(o[0],o[1],o[2]);H.fogs[q]=Q}if(H.cameras&&L.defaults.camera)H.currentCamera=H.cameras[L.defaults.camera];if(H.fogs&&L.defaults.fog)H.scene.fog=H.fogs[L.defaults.fog];
o=L.defaults.bgcolor;H.bgColor=new THREE.Color;H.bgColor.setRGB(o[0],o[1],o[2]);H.bgColorAlpha=L.defaults.bgalpha;for(j in L.geometries){q=L.geometries[j];if(q.type=="bin_mesh"||q.type=="ascii_mesh")Y+=1}da=Y;for(j in L.geometries){q=L.geometries[j];if(q.type=="cube"){t=new Cube(q.width,q.height,q.depth,q.segments_width,q.segments_height,null,q.flipped,q.sides);H.geometries[j]=t}else if(q.type=="plane"){t=new Plane(q.width,q.height,q.segments_width,q.segments_height);H.geometries[j]=t}else if(q.type==
"sphere"){t=new Sphere(q.radius,q.segments_width,q.segments_height);H.geometries[j]=t}else if(q.type=="cylinder"){t=new Cylinder(q.numSegs,q.topRad,q.botRad,q.height,q.topOffset,q.botOffset);H.geometries[j]=t}else if(q.type=="torus"){t=new Torus(q.radius,q.tube,q.segmentsR,q.segmentsT);H.geometries[j]=t}else if(q.type=="icosahedron"){t=new Icosahedron(q.subdivisions);H.geometries[j]=t}else if(q.type=="bin_mesh")G.loadBinary({model:q.url,callback:h(j)});else q.type=="ascii_mesh"&&G.loadAscii({model:q.url,
callback:h(j)})}for(x in L.textures){j=L.textures[x];T+=j.url instanceof Array?j.url.length:1}Z=T;for(x in L.textures){j=L.textures[x];if(j.mapping!=undefined&&THREE[j.mapping]!=undefined)j.mapping=new THREE[j.mapping];if(j.url instanceof Array){q=ImageUtils.loadArray(j.url,f);q=new THREE.Texture(q,j.mapping)}else{q=ImageUtils.loadTexture(j.url,j.mapping,f);if(THREE[j.min_filter]!=undefined)q.min_filter=THREE[j.min_filter];if(THREE[j.mag_filter]!=undefined)q.mag_filter=THREE[j.mag_filter]}H.textures[x]=
q}for(m in L.materials){x=L.materials[m];for(e in x.parameters)if(e=="env_map"||e=="map"||e=="light_map")x.parameters[e]=H.textures[x.parameters[e]];else if(e=="shading")x.parameters[e]=x.parameters[e]=="flat"?THREE.FlatShading:THREE.SmoothShading;else if(e=="blending")x.parameters[e]=THREE[x.parameters[e]]?THREE[x.parameters[e]]:THREE.NormalBlending;else e=="combine"&&(x.parameters[e]=x.parameters[e]=="MixOperation"?THREE.MixOperation:THREE.MultiplyOperation);x=new THREE[x.type](x.parameters);H.materials[m]=
x}g();b(H)}},addMesh:function(a,b,c,d,f,g,h,k,j,m){b=new THREE.Mesh(b,m);b.scale.x=b.scale.y=b.scale.z=c;b.position.x=d;b.position.y=f;b.position.z=g;b.rotation.x=h;b.rotation.y=k;b.rotation.z=j;a.addObject(b);return b},addPanoramaCubeWebGL:function(a,b,c){var d=ShaderUtils.lib.cube;d.uniforms.tCube.texture=c;c=new THREE.MeshShaderMaterial({fragment_shader:d.fragment_shader,vertex_shader:d.vertex_shader,uniforms:d.uniforms});b=new THREE.Mesh(new Cube(b,b,b,1,1,null,!0),c);a.addObject(b);return b},
addPanoramaCube:function(a,b,c){var d=[];d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(c[0])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(c[1])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(c[2])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(c[3])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(c[4])}));d.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(c[5])}));b=new THREE.Mesh(new Cube(b,b,b,1,1,d,!0),new THREE.MeshFaceMaterial);
a.addObject(b);return b},addPanoramaCubePlanes:function(a,b,c){var d=b/2;b=new Plane(b,b);var f=Math.PI/2,g=Math.PI;SceneUtils.addMesh(a,b,1,0,0,-d,0,0,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(c[5])}));SceneUtils.addMesh(a,b,1,-d,0,0,0,f,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(c[0])}));SceneUtils.addMesh(a,b,1,d,0,0,0,-f,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(c[1])}));SceneUtils.addMesh(a,b,1,0,d,0,f,0,g,new THREE.MeshBasicMaterial({map:new THREE.Texture(c[2])}));
SceneUtils.addMesh(a,b,1,0,-d,0,-f,0,g,new THREE.MeshBasicMaterial({map:new THREE.Texture(c[3])}))}},ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertex_shader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tNormal:{type:"t",value:2,texture:null},tAO:{type:"t",value:3,texture:null},uNormalScale:{type:"f",value:1},tDisplacement:{type:"t",value:4,texture:null},uDisplacementBias:{type:"f",value:-0.5},uDisplacementScale:{type:"f",value:2.5},uPointLightPos:{type:"v3",value:new THREE.Vector3},uPointLightColor:{type:"c",value:new THREE.Color(15658734)},uDirLightPos:{type:"v3",value:new THREE.Vector3},
uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30}},fragment_shader:"uniform vec3 uDirLightPos;\nuniform vec3 uAmbientLightColor;\nuniform vec3 uDirLightColor;\nuniform vec3 uPointLightColor;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform bool enableDiffuse;\nuniform bool enableAO;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tAO;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 diffuseTex = vec3( 1.0, 1.0, 1.0 );\nvec3 aoTex = vec3( 1.0, 1.0, 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse )\ndiffuseTex = texture2D( tDiffuse, vUv ).xyz;\nif( enableAO )\naoTex = texture2D( tAO, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec3 pointVector = normalize( vPointLightVector );\nvec3 pointHalfVector = normalize( vPointLightVector + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, uShininess );\npointDiffuse  += vec4( uDiffuseColor, 1.0 ) * pointDiffuseWeight;\npointSpecular += vec4( uSpecularColor, 1.0 ) * pointSpecularWeight;\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 lDirection = viewMatrix * vec4( uDirLightPos, 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, uShininess );\ndirDiffuse  += vec4( uDiffuseColor, 1.0 ) * dirDiffuseWeight;\ndirSpecular += vec4( uSpecularColor, 1.0 ) * dirSpecularWeight;\nvec4 totalLight = vec4( uAmbientLightColor * uAmbientColor, 1.0 );\ntotalLight += vec4( uDirLightColor, 1.0 ) * ( dirDiffuse + dirSpecular );\ntotalLight += vec4( uPointLightColor, 1.0 ) * ( pointDiffuse + pointSpecular );\ngl_FragColor = vec4( totalLight.xyz * aoTex * diffuseTex, 1.0 );\n}",
vertex_shader:"attribute vec4 tangent;\nuniform vec3 uPointLightPos;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec4 lPosition = viewMatrix * vec4( uPointLightPos, 1.0 );\nvPointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}"},
cube:{uniforms:{tCube:{type:"t",value:1,texture:null}},vertex_shader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( - wPos.x, wPos.yz ) );\n}"},convolution:{uniforms:{tDiffuse:{type:"t",
value:0,texture:null},uImageIncrement:{type:"v2",value:new THREE.Vector2(0.001953125,0)},cKernel:{type:"fv1",value:[]}},vertex_shader:"varying vec2 vUv;\nuniform vec2 uImageIncrement;\nvoid main(void) {\nvUv = uv - ((KERNEL_SIZE - 1.0) / 2.0) * uImageIncrement;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"varying vec2 vUv;\nuniform sampler2D tDiffuse;\nuniform vec2 uImageIncrement;\nuniform float cKernel[KERNEL_SIZE];\nvoid main(void) {\nvec2 imageCoord = vUv;\nvec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\nfor( int i=0; i<KERNEL_SIZE; ++i ) {\nsum += texture2D( tDiffuse, imageCoord ) * cKernel[i];\nimageCoord += uImageIncrement;\n}\ngl_FragColor = sum;\n}"},
film:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},time:{type:"f",value:0},grayscale:{type:"i",value:1}},vertex_shader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"varying vec2 vUv;\nuniform sampler2D tDiffuse;\nuniform float time;\nuniform bool grayscale;\nconst float fNintensity = 0.5;\nconst float fSintensity = 0.05;\nconst float fScount = 4096.0;\nvoid main() {\nvec4 cTextureScreen = texture2D( tDiffuse, vUv );\nfloat x = vUv.x * vUv.y * time *  1000.0;\nx = mod( x, 13.0 ) * mod( x, 123.0 );\nfloat dx = mod( x, 0.01 );\nvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\nvec2 sc = vec2( sin(vUv.y * fScount), cos(vUv.y * fScount) );\ncResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * fSintensity;\ncResult = cTextureScreen.rgb + clamp( fNintensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\nif( grayscale ) {\ncResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\n}\ngl_FragColor =  vec4( cResult, cTextureScreen.a );\n}"},
screen:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},opacity:{type:"f",value:1}},vertex_shader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"varying vec2 vUv;\nuniform sampler2D tDiffuse;\nuniform float opacity;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\ngl_FragColor = opacity * texel;\n}"},basic:{uniforms:{},vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragment_shader:"void main() {\ngl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\n}"}},buildKernel:function(a){var b,c,d,f,g=2*Math.ceil(a*3)+1;g>25&&(g=25);f=(g-1)*0.5;c=Array(g);for(b=d=0;b<g;++b){c[b]=Math.exp(-((b-f)*(b-f))/(2*a*a));d+=c[b]}for(b=0;b<g;++b)c[b]/=d;return c}},Cube=function(a,b,c,d,f,g,h,k){function j(z,C,o,e,t,N,Q,ea){var L,G,Y=d||1,T=f||1,da=Y+1,Z=T+1,H=t/2,aa=N/2;t/=Y;var na=N/T,ba=m.vertices.length;if(z=="x"&&C=="y"||z=="y"&&C=="x")L="z";else if(z=="x"&&C=="z"||z=="z"&&C=="x")L="y";
else if(z=="z"&&C=="y"||z=="y"&&C=="z")L="x";for(G=0;G<Z;G++)for(N=0;N<da;N++){var l=new THREE.Vector3;l[z]=(N*t-H)*o;l[C]=(G*na-aa)*e;l[L]=Q;m.vertices.push(new THREE.Vertex(l))}for(G=0;G<T;G++)for(N=0;N<Y;N++){m.faces.push(new THREE.Face4(N+da*G+ba,N+da*(G+1)+ba,N+1+da*(G+1)+ba,N+1+da*G+ba,null,ea));m.uvs.push([new THREE.UV(N/Y,G/T),new THREE.UV(N/Y,(G+1)/T),new THREE.UV((N+1)/Y,(G+1)/T),new THREE.UV((N+1)/Y,G/T)])}}THREE.Geometry.call(this);var m=this,n=a/2,w=b/2,u=c/2;h=h?-1:1;if(g!==undefined)if(g instanceof
Array)this.materials=g;else{this.materials=[];for(var q=0;q<6;q++)this.materials.push([g])}else this.materials=[];this.sides={px:!0,nx:!0,py:!0,ny:!0,pz:!0,nz:!0};if(k!=undefined)for(var x in k)this.sides[x]!=undefined&&(this.sides[x]=k[x]);this.sides.px&&j("z","y",1*h,-1,c,b,-n,this.materials[0]);this.sides.nx&&j("z","y",-1*h,-1,c,b,n,this.materials[1]);this.sides.py&&j("x","z",1*h,1,a,c,w,this.materials[2]);this.sides.ny&&j("x","z",1*h,-1,a,c,-w,this.materials[3]);this.sides.pz&&j("x","y",1*h,-1,
a,b,u,this.materials[4]);this.sides.nz&&j("x","y",-1*h,-1,a,b,-u,this.materials[5]);(function(){for(var z=[],C=[],o=0,e=m.vertices.length;o<e;o++){for(var t=m.vertices[o],N=!1,Q=0,ea=z.length;Q<ea;Q++){var L=z[Q];if(t.position.x==L.position.x&&t.position.y==L.position.y&&t.position.z==L.position.z){C[o]=Q;N=!0;break}}if(!N){C[o]=z.length;z.push(new THREE.Vertex(t.position.clone()))}}o=0;for(e=m.faces.length;o<e;o++){t=m.faces[o];t.a=C[t.a];t.b=C[t.b];t.c=C[t.c];t.d=C[t.d]}m.vertices=z})();this.computeCentroids();
this.computeFaceNormals();this.sortFacesByMaterial()};Cube.prototype=new THREE.Geometry;Cube.prototype.constructor=Cube;
var Cylinder=function(a,b,c,d,f){function g(m,n,w){h.vertices.push(new THREE.Vertex(new THREE.Vector3(m,n,w)))}THREE.Geometry.call(this);var h=this,k=Math.PI,j;for(j=0;j<a;j++)g(Math.sin(2*k*j/a)*b,Math.cos(2*k*j/a)*b,0);for(j=0;j<a;j++)g(Math.sin(2*k*j/a)*c,Math.cos(2*k*j/a)*c,d);for(j=0;j<a;j++)h.faces.push(new THREE.Face4(j,j+a,a+(j+1)%a,(j+1)%a));if(c!=0){g(0,0,-f);for(j=a;j<a+a/2;j++)h.faces.push(new THREE.Face4(2*a,(2*j-2*a)%a,(2*j-2*a+1)%a,(2*j-2*a+2)%a))}if(b!=0){g(0,0,d+f);for(j=a+a/2;j<
2*a;j++)h.faces.push(new THREE.Face4((2*j-2*a+2)%a+a,(2*j-2*a+1)%a+a,(2*j-2*a)%a+a,2*a+1))}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cylinder.prototype=new THREE.Geometry;Cylinder.prototype.constructor=Cylinder;
var Plane=function(a,b,c,d){THREE.Geometry.call(this);var f,g=a/2,h=b/2;c=c||1;d=d||1;var k=c+1,j=d+1;a/=c;var m=b/d;for(f=0;f<j;f++)for(b=0;b<k;b++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(b*a-g,-(f*m-h),0)));for(f=0;f<d;f++)for(b=0;b<c;b++){this.faces.push(new THREE.Face4(b+k*f,b+k*(f+1),b+1+k*(f+1),b+1+k*f));this.uvs.push([new THREE.UV(b/c,f/d),new THREE.UV(b/c,(f+1)/d),new THREE.UV((b+1)/c,(f+1)/d),new THREE.UV((b+1)/c,f/d)])}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};
Plane.prototype=new THREE.Geometry;Plane.prototype.constructor=Plane;
var Sphere=function(a,b,c){THREE.Geometry.call(this);var d,f=Math.PI,g=Math.max(3,b||8),h=Math.max(2,c||6);b=[];for(c=0;c<h+1;c++){d=c/h;var k=a*Math.cos(d*f),j=a*Math.sin(d*f),m=[],n=0;for(d=0;d<g;d++){var w=2*d/g,u=j*Math.sin(w*f);w=j*Math.cos(w*f);(c==0||c==h)&&d>0||(n=this.vertices.push(new THREE.Vertex(new THREE.Vector3(w,k,u)))-1);m.push(n)}b.push(m)}var q,x,z;f=b.length;for(c=0;c<f;c++){g=b[c].length;if(c>0)for(d=0;d<g;d++){m=d==g-1;h=b[c][m?0:d+1];k=b[c][m?g-1:d];j=b[c-1][m?g-1:d];m=b[c-1][m?
0:d+1];u=c/(f-1);q=(c-1)/(f-1);x=(d+1)/g;w=d/g;n=new THREE.UV(1-x,u);u=new THREE.UV(1-w,u);w=new THREE.UV(1-w,q);var C=new THREE.UV(1-x,q);if(c<b.length-1){q=this.vertices[h].position.clone();x=this.vertices[k].position.clone();z=this.vertices[j].position.clone();q.normalize();x.normalize();z.normalize();this.faces.push(new THREE.Face3(h,k,j,[new THREE.Vector3(q.x,q.y,q.z),new THREE.Vector3(x.x,x.y,x.z),new THREE.Vector3(z.x,z.y,z.z)]));this.uvs.push([n,u,w])}if(c>1){q=this.vertices[h].position.clone();
x=this.vertices[j].position.clone();z=this.vertices[m].position.clone();q.normalize();x.normalize();z.normalize();this.faces.push(new THREE.Face3(h,j,m,[new THREE.Vector3(q.x,q.y,q.z),new THREE.Vector3(x.x,x.y,x.z),new THREE.Vector3(z.x,z.y,z.z)]));this.uvs.push([n,w,C])}}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial();this.boundingSphere={radius:a}};Sphere.prototype=new THREE.Geometry;Sphere.prototype.constructor=Sphere;
var Torus=function(a,b,c,d){this.radius=a||100;this.tube=b||40;this.segmentsR=c||8;this.segmentsT=d||6;a=[];THREE.Geometry.call(this);for(b=0;b<=this.segmentsR;++b)for(c=0;c<=this.segmentsT;++c){d=c/this.segmentsT*2*Math.PI;var f=b/this.segmentsR*2*Math.PI;this.vertices.push(new THREE.Vertex(new THREE.Vector3((this.radius+this.tube*Math.cos(f))*Math.cos(d),(this.radius+this.tube*Math.cos(f))*Math.sin(d),this.tube*Math.sin(f))));a.push([c/this.segmentsT,1-b/this.segmentsR])}for(b=1;b<=this.segmentsR;++b)for(c=
1;c<=this.segmentsT;++c){d=(this.segmentsT+1)*b+c;f=(this.segmentsT+1)*b+c-1;var g=(this.segmentsT+1)*(b-1)+c-1,h=(this.segmentsT+1)*(b-1)+c;this.faces.push(new THREE.Face4(d,f,g,h));this.uvs.push([new THREE.UV(a[d][0],a[d][1]),new THREE.UV(a[f][0],a[f][1]),new THREE.UV(a[g][0],a[g][1]),new THREE.UV(a[h][0],a[h][1])])}delete a;this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()};Torus.prototype=new THREE.Geometry;Torus.prototype.constructor=Torus;
var Icosahedron=function(a){function b(w,u,q){var x=Math.sqrt(w*w+u*u+q*q);return f.vertices.push(new THREE.Vertex(new THREE.Vector3(w/x,u/x,q/x)))-1}function c(w,u,q,x){x.faces.push(new THREE.Face3(w,u,q))}function d(w,u){var q=f.vertices[w].position,x=f.vertices[u].position;return b((q.x+x.x)/2,(q.y+x.y)/2,(q.z+x.z)/2)}var f=this,g=new THREE.Geometry,h;this.subdivisions=a||0;THREE.Geometry.call(this);a=(1+Math.sqrt(5))/2;b(-1,a,0);b(1,a,0);b(-1,-a,0);b(1,-a,0);b(0,-1,a);b(0,1,a);b(0,-1,-a);b(0,
1,-a);b(a,0,-1);b(a,0,1);b(-a,0,-1);b(-a,0,1);c(0,11,5,g);c(0,5,1,g);c(0,1,7,g);c(0,7,10,g);c(0,10,11,g);c(1,5,9,g);c(5,11,4,g);c(11,10,2,g);c(10,7,6,g);c(7,1,8,g);c(3,9,4,g);c(3,4,2,g);c(3,2,6,g);c(3,6,8,g);c(3,8,9,g);c(4,9,5,g);c(2,4,11,g);c(6,2,10,g);c(8,6,7,g);c(9,8,1,g);for(a=0;a<this.subdivisions;a++){h=new THREE.Geometry;for(var k in g.faces){var j=d(g.faces[k].a,g.faces[k].b),m=d(g.faces[k].b,g.faces[k].c),n=d(g.faces[k].c,g.faces[k].a);c(g.faces[k].a,j,n,h);c(g.faces[k].b,m,j,h);c(g.faces[k].c,
n,m,h);c(j,m,n,h)}g.faces=h.faces}f.faces=g.faces;delete g;delete h;this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()};Icosahedron.prototype=new THREE.Geometry;Icosahedron.prototype.constructor=Icosahedron;
function LathedObject(a,b,c){THREE.Geometry.call(this);c=c||2*Math.PI;b=c/(b||12);for(var d=[],f=[],g=[],h=[],k=0;k<a.length;k++){this.vertices.push(new THREE.Vertex(a[k]));f[k]=this.vertices.length-1;d[k]=new THREE.Vector3(a[k].x,a[k].y,a[k].z)}for(var j=THREE.Matrix4.rotationZMatrix(b),m=0;m<=c+0.0010;m+=b){for(k=0;k<d.length;k++)if(m<c){d[k]=j.multiplyVector3(d[k].clone());this.vertices.push(new THREE.Vertex(d[k]));g[k]=this.vertices.length-1}else g=h;m==0&&(h=f);for(k=0;k<f.length-1;k++){this.faces.push(new THREE.Face4(g[k],
g[k+1],f[k+1],f[k]));this.uvs.push([new THREE.UV(m/c,k/a.length),new THREE.UV(m/c,(k+1)/a.length),new THREE.UV((m-b)/c,(k+1)/a.length),new THREE.UV((m-b)/c,k/a.length)])}f=g;g=[]}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()}LathedObject.prototype=new THREE.Geometry;LathedObject.prototype.constructor=LathedObject;if(!window.Int32Array){window.Int32Array=Array;window.Float32Array=Array}
THREE.MarchingCubes=function(a,b){THREE.Object3D.call(this);this.materials=b instanceof Array?b:[b];this.init=function(c){this.isolation=80;this.size=c;this.size2=this.size*this.size;this.size3=this.size2*this.size;this.halfsize=this.size/2;this.delta=2/this.size;this.yd=this.size;this.zd=this.size2;this.field=new Float32Array(this.size3);this.normal_cache=new Float32Array(this.size3*3);this.vlist=new Float32Array(36);this.nlist=new Float32Array(36);this.firstDraw=!0;this.maxCount=4096;this.count=
0;this.hasPos=!1;this.hasNormal=!1;this.positionArray=new Float32Array(this.maxCount*3);this.normalArray=new Float32Array(this.maxCount*3)};this.lerp=function(c,d,f){return c+(d-c)*f};this.VIntX=function(c,d,f,g,h,k,j,m,n,w){h=(h-n)/(w-n);n=this.normal_cache;d[g]=k+h*this.delta;d[g+1]=j;d[g+2]=m;f[g]=this.lerp(n[c],n[c+3],h);f[g+1]=this.lerp(n[c+1],n[c+4],h);f[g+2]=this.lerp(n[c+2],n[c+5],h)};this.VIntY=function(c,d,f,g,h,k,j,m,n,w){h=(h-n)/(w-n);n=this.normal_cache;d[g]=k;d[g+1]=j+h*this.delta;d[g+
2]=m;d=c+this.yd*3;f[g]=this.lerp(n[c],n[d],h);f[g+1]=this.lerp(n[c+1],n[d+1],h);f[g+2]=this.lerp(n[c+2],n[d+2],h)};this.VIntZ=function(c,d,f,g,h,k,j,m,n,w){h=(h-n)/(w-n);n=this.normal_cache;d[g]=k;d[g+1]=j;d[g+2]=m+h*this.delta;d=c+this.zd*3;f[g]=this.lerp(n[c],n[d],h);f[g+1]=this.lerp(n[c+1],n[d+1],h);f[g+2]=this.lerp(n[c+2],n[d+2],h)};this.compNorm=function(c){var d=c*3;if(this.normal_cache[d]==0){this.normal_cache[d]=this.field[c-1]-this.field[c+1];this.normal_cache[d+1]=this.field[c-this.yd]-
this.field[c+this.yd];this.normal_cache[d+2]=this.field[c-this.zd]-this.field[c+this.zd]}};this.polygonize=function(c,d,f,g,h,k){var j=g+1,m=g+this.yd,n=g+this.zd,w=j+this.yd,u=j+this.zd,q=g+this.yd+this.zd,x=j+this.yd+this.zd,z=0,C=this.field[g],o=this.field[j],e=this.field[m],t=this.field[w],N=this.field[n],Q=this.field[u],ea=this.field[q],L=this.field[x];C<h&&(z|=1);o<h&&(z|=2);e<h&&(z|=8);t<h&&(z|=4);N<h&&(z|=16);Q<h&&(z|=32);ea<h&&(z|=128);L<h&&(z|=64);var G=THREE.edgeTable[z];if(G==0)return 0;
var Y=this.delta,T=c+Y,da=d+Y;Y=f+Y;if(G&1){this.compNorm(g);this.compNorm(j);this.VIntX(g*3,this.vlist,this.nlist,0,h,c,d,f,C,o)}if(G&2){this.compNorm(j);this.compNorm(w);this.VIntY(j*3,this.vlist,this.nlist,3,h,T,d,f,o,t)}if(G&4){this.compNorm(m);this.compNorm(w);this.VIntX(m*3,this.vlist,this.nlist,6,h,c,da,f,e,t)}if(G&8){this.compNorm(g);this.compNorm(m);this.VIntY(g*3,this.vlist,this.nlist,9,h,c,d,f,C,e)}if(G&16){this.compNorm(n);this.compNorm(u);this.VIntX(n*3,this.vlist,this.nlist,12,h,c,d,
Y,N,Q)}if(G&32){this.compNorm(u);this.compNorm(x);this.VIntY(u*3,this.vlist,this.nlist,15,h,T,d,Y,Q,L)}if(G&64){this.compNorm(q);this.compNorm(x);this.VIntX(q*3,this.vlist,this.nlist,18,h,c,da,Y,ea,L)}if(G&128){this.compNorm(n);this.compNorm(q);this.VIntY(n*3,this.vlist,this.nlist,21,h,c,d,Y,N,ea)}if(G&256){this.compNorm(g);this.compNorm(n);this.VIntZ(g*3,this.vlist,this.nlist,24,h,c,d,f,C,N)}if(G&512){this.compNorm(j);this.compNorm(u);this.VIntZ(j*3,this.vlist,this.nlist,27,h,T,d,f,o,Q)}if(G&1024){this.compNorm(w);
this.compNorm(x);this.VIntZ(w*3,this.vlist,this.nlist,30,h,T,da,f,t,L)}if(G&2048){this.compNorm(m);this.compNorm(q);this.VIntZ(m*3,this.vlist,this.nlist,33,h,c,da,f,e,ea)}z<<=4;for(h=g=0;THREE.triTable[z+h]!=-1;){c=z+h;d=c+1;f=c+2;this.posnormtriv(this.vlist,this.nlist,3*THREE.triTable[c],3*THREE.triTable[d],3*THREE.triTable[f],k);h+=3;g++}return g};this.posnormtriv=function(c,d,f,g,h,k){var j=this.count*3;this.positionArray[j]=c[f];this.positionArray[j+1]=c[f+1];this.positionArray[j+2]=c[f+2];this.positionArray[j+
3]=c[g];this.positionArray[j+4]=c[g+1];this.positionArray[j+5]=c[g+2];this.positionArray[j+6]=c[h];this.positionArray[j+7]=c[h+1];this.positionArray[j+8]=c[h+2];this.normalArray[j]=d[f];this.normalArray[j+1]=d[f+1];this.normalArray[j+2]=d[f+2];this.normalArray[j+3]=d[g];this.normalArray[j+4]=d[g+1];this.normalArray[j+5]=d[g+2];this.normalArray[j+6]=d[h];this.normalArray[j+7]=d[h+1];this.normalArray[j+8]=d[h+2];this.hasPos=!0;this.hasNormal=!0;this.count+=3;this.count>=this.maxCount-3&&k(this)};this.begin=
function(){this.count=0;this.hasPos=!1;this.hasNormal=!1};this.end=function(c){if(this.count!=0){for(var d=this.count*3;d<this.positionArray.length;d++)this.positionArray[d]=0;c(this)}};this.addBall=function(c,d,f,g,h){var k=this.size*Math.sqrt(g/h),j=f*this.size,m=d*this.size,n=c*this.size,w=Math.floor(j-k);w<1&&(w=1);j=Math.floor(j+k);j>this.size-1&&(j=this.size-1);var u=Math.floor(m-k);u<1&&(u=1);m=Math.floor(m+k);m>this.size-1&&(m=this.size-1);var q=Math.floor(n-k);q<1&&(q=1);k=Math.floor(n+k);
k>this.size-1&&(k=this.size-1);for(var x,z,C,o,e,t;w<j;w++){n=this.size2*w;z=w/this.size-f;e=z*z;for(z=u;z<m;z++){C=n+this.size*z;x=z/this.size-d;t=x*x;for(x=q;x<k;x++){o=x/this.size-c;o=g/(1.0E-6+o*o+t+e)-h;o>0&&(this.field[C+x]+=o)}}}};this.addPlaneX=function(c,d){var f,g,h,k,j,m=this.size,n=this.yd,w=this.zd,u=this.field,q=m*Math.sqrt(c/d);q>m&&(q=m);for(f=0;f<q;f++){g=f/m;g*=g;k=c/(1.0E-4+g)-d;if(k>0)for(g=0;g<m;g++){j=f+g*n;for(h=0;h<m;h++)u[w*h+j]+=k}}};this.addPlaneY=function(c,d){var f,g,
h,k,j,m,n=this.size,w=this.yd,u=this.zd,q=this.field,x=n*Math.sqrt(c/d);x>n&&(x=n);for(g=0;g<x;g++){f=g/n;f*=f;k=c/(1.0E-4+f)-d;if(k>0){j=g*w;for(f=0;f<n;f++){m=j+f;for(h=0;h<n;h++)q[u*h+m]+=k}}}};this.addPlaneZ=function(c,d){var f,g,h,k,j,m;size=this.size;yd=this.yd;zd=this.zd;field=this.field;dist=size*Math.sqrt(c/d);dist>size&&(dist=size);for(h=0;h<dist;h++){f=h/size;f*=f;k=c/(1.0E-4+f)-d;if(k>0){j=zd*h;for(g=0;g<size;g++){m=j+g*yd;for(f=0;f<size;f++)field[m+f]+=k}}}};this.reset=function(){var c;
for(c=0;c<this.size3;c++){this.normal_cache[c*3]=0;this.field[c]=0}};this.render=function(c){this.begin();var d,f,g,h,k,j,m,n,w,u=this.size-2;for(h=1;h<u;h++){w=this.size2*h;m=(h-this.halfsize)/this.halfsize;for(g=1;g<u;g++){n=w+this.size*g;j=(g-this.halfsize)/this.halfsize;for(f=1;f<u;f++){k=(f-this.halfsize)/this.halfsize;d=n+f;this.polygonize(k,j,m,d,this.isolation,c)}}}this.end(c)};this.generateGeometry=function(){var c=0,d=new THREE.Geometry;this.render(function(f){var g,h,k,j,m,n,w,u;for(g=
0;g<f.count;g++){m=g*3;w=m+1;u=m+2;h=f.positionArray[m];k=f.positionArray[w];j=f.positionArray[u];n=new THREE.Vector3(h,k,j);h=f.normalArray[m];k=f.normalArray[w];j=f.normalArray[u];m=new THREE.Vector3(h,k,j);m.normalize();m=new THREE.Vertex(n,m);d.vertices.push(m)}nfaces=f.count/3;for(g=0;g<nfaces;g++){m=(c+g)*3;w=m+1;u=m+2;n=d.vertices[m].normal;h=d.vertices[w].normal;k=d.vertices[u].normal;m=new THREE.Face3(m,w,u,[n,h,k]);d.faces.push(m)}c+=nfaces;f.count=0});d.sortFacesByMaterial();return d};
this.init(a)};THREE.MarchingCubes.prototype=new THREE.Object3D;THREE.MarchingCubes.prototype.constructor=THREE.MarchingCubes;
THREE.edgeTable=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,
1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,
419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]);
THREE.triTable=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,
-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,
8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,
-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,
5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,
-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,
10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,
6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,
8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,
2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,
-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,
-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,
-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,
-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,
2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,
4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,
2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?this.addStatusElement():null};
THREE.Loader.prototype={addStatusElement:function(){var a=document.createElement("div");a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="#b00";a.style.color="#fff";a.style.width="140px";a.style.padding="0.25em 0.25em 0.25em 0.5em";a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ";b+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1E3).toFixed(2)+" KB";this.statusDomElement.innerHTML=
b},loadAsciiOld:function(a,b){var c=document.createElement("script");c.type="text/javascript";c.onload=b;c.src=a;document.getElementsByTagName("head")[0].appendChild(c)},loadAscii:function(a){var b=a.model,c=a.callback,d=a.texture_path?a.texture_path:THREE.Loader.prototype.extractUrlbase(b);a=(new Date).getTime();b=new Worker(b);b.onmessage=function(f){THREE.Loader.prototype.createModel(f.data,c,d)};b.postMessage(a)},loadBinary:function(a){var b=a.model,c=a.callback,d=a.texture_path?a.texture_path:
THREE.Loader.prototype.extractUrlbase(b),f=a.bin_path?a.bin_path:THREE.Loader.prototype.extractUrlbase(b);a=(new Date).getTime();b=new Worker(b);var g=this.showProgress?THREE.Loader.prototype.updateProgress:null;b.onmessage=function(h){THREE.Loader.prototype.loadAjaxBuffers(h.data.buffers,h.data.materials,c,f,d,g)};b.onerror=function(h){alert("worker.onerror: "+h.message+"\n"+h.data);h.preventDefault()};b.postMessage(a)},loadAjaxBuffers:function(a,b,c,d,f,g){var h=new XMLHttpRequest,k=d+"/"+a,j=0;
h.onreadystatechange=function(){if(h.readyState==4)h.status==200||h.status==0?THREE.Loader.prototype.createBinModel(h.responseText,c,f,b):alert("Couldn't load ["+k+"] ["+h.status+"]");else if(h.readyState==3){if(g){j==0&&(j=h.getResponseHeader("Content-Length"));g({total:j,loaded:h.responseText.length})}}else h.readyState==2&&(j=h.getResponseHeader("Content-Length"))};h.open("GET",k,!0);h.overrideMimeType("text/plain; charset=x-user-defined");h.setRequestHeader("Content-Type","text/plain");h.send(null)},
createBinModel:function(a,b,c,d){var f=function(g){function h(E,P){var I=n(E,P),V=n(E,P+1),ca=n(E,P+2),ta=n(E,P+3),M=(ta<<1&255|ca>>7)-127;I|=(ca&127)<<16|V<<8;if(I==0&&M==-127)return 0;return(1-2*(ta>>7))*(1+I*Math.pow(2,-23))*Math.pow(2,M)}function k(E,P){var I=n(E,P),V=n(E,P+1),ca=n(E,P+2);return(n(E,P+3)<<24)+(ca<<16)+(V<<8)+I}function j(E,P){var I=n(E,P);return(n(E,P+1)<<8)+I}function m(E,P){var I=n(E,P);return I>127?I-256:I}function n(E,P){return E.charCodeAt(P)&255}function w(E){var P,I,V;
P=k(a,E);I=k(a,E+ea);V=k(a,E+L);E=j(a,E+G);THREE.Loader.prototype.f3(o,P,I,V,E)}function u(E){var P,I,V,ca,ta,M;P=k(a,E);I=k(a,E+ea);V=k(a,E+L);ca=j(a,E+G);ta=k(a,E+Y);M=k(a,E+T);E=k(a,E+da);THREE.Loader.prototype.f3n(o,N,P,I,V,ca,ta,M,E)}function q(E){var P,I,V,ca;P=k(a,E);I=k(a,E+Z);V=k(a,E+H);ca=k(a,E+aa);E=j(a,E+na);THREE.Loader.prototype.f4(o,P,I,V,ca,E)}function x(E){var P,I,V,ca,ta,M,Ba,xa;P=k(a,E);I=k(a,E+Z);V=k(a,E+H);ca=k(a,E+aa);ta=j(a,E+na);M=k(a,E+ba);Ba=k(a,E+l);xa=k(a,E+B);E=k(a,E+
y);THREE.Loader.prototype.f4n(o,N,P,I,V,ca,ta,M,Ba,xa,E)}function z(E){var P,I;P=k(a,E);I=k(a,E+v);E=k(a,E+p);THREE.Loader.prototype.uv3(o.uvs,Q[P*2],Q[P*2+1],Q[I*2],Q[I*2+1],Q[E*2],Q[E*2+1])}function C(E){var P,I,V;P=k(a,E);I=k(a,E+D);V=k(a,E+F);E=k(a,E+J);THREE.Loader.prototype.uv4(o.uvs,Q[P*2],Q[P*2+1],Q[I*2],Q[I*2+1],Q[V*2],Q[V*2+1],Q[E*2],Q[E*2+1])}var o=this,e=0,t,N=[],Q=[],ea,L,G,Y,T,da,Z,H,aa,na,ba,l,B,y,v,p,D,F,J,U,A,R,O,ga,ma;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(o,
d,g);t={signature:a.substr(e,8),header_bytes:n(a,e+8),vertex_coordinate_bytes:n(a,e+9),normal_coordinate_bytes:n(a,e+10),uv_coordinate_bytes:n(a,e+11),vertex_index_bytes:n(a,e+12),normal_index_bytes:n(a,e+13),uv_index_bytes:n(a,e+14),material_index_bytes:n(a,e+15),nvertices:k(a,e+16),nnormals:k(a,e+16+4),nuvs:k(a,e+16+8),ntri_flat:k(a,e+16+12),ntri_smooth:k(a,e+16+16),ntri_flat_uv:k(a,e+16+20),ntri_smooth_uv:k(a,e+16+24),nquad_flat:k(a,e+16+28),nquad_smooth:k(a,e+16+32),nquad_flat_uv:k(a,e+16+36),
nquad_smooth_uv:k(a,e+16+40)};e+=t.header_bytes;ea=t.vertex_index_bytes;L=t.vertex_index_bytes*2;G=t.vertex_index_bytes*3;Y=t.vertex_index_bytes*3+t.material_index_bytes;T=t.vertex_index_bytes*3+t.material_index_bytes+t.normal_index_bytes;da=t.vertex_index_bytes*3+t.material_index_bytes+t.normal_index_bytes*2;Z=t.vertex_index_bytes;H=t.vertex_index_bytes*2;aa=t.vertex_index_bytes*3;na=t.vertex_index_bytes*4;ba=t.vertex_index_bytes*4+t.material_index_bytes;l=t.vertex_index_bytes*4+t.material_index_bytes+
t.normal_index_bytes;B=t.vertex_index_bytes*4+t.material_index_bytes+t.normal_index_bytes*2;y=t.vertex_index_bytes*4+t.material_index_bytes+t.normal_index_bytes*3;v=t.uv_index_bytes;p=t.uv_index_bytes*2;D=t.uv_index_bytes;F=t.uv_index_bytes*2;J=t.uv_index_bytes*3;g=t.vertex_index_bytes*3+t.material_index_bytes;ma=t.vertex_index_bytes*4+t.material_index_bytes;U=t.ntri_flat*g;A=t.ntri_smooth*(g+t.normal_index_bytes*3);R=t.ntri_flat_uv*(g+t.uv_index_bytes*3);O=t.ntri_smooth_uv*(g+t.normal_index_bytes*
3+t.uv_index_bytes*3);ga=t.nquad_flat*ma;g=t.nquad_smooth*(ma+t.normal_index_bytes*4);ma=t.nquad_flat_uv*(ma+t.uv_index_bytes*4);e+=function(E){for(var P,I,V,ca=t.vertex_coordinate_bytes*3,ta=E+t.nvertices*ca;E<ta;E+=ca){P=h(a,E);I=h(a,E+t.vertex_coordinate_bytes);V=h(a,E+t.vertex_coordinate_bytes*2);THREE.Loader.prototype.v(o,P,I,V)}return t.nvertices*ca}(e);e+=function(E){for(var P,I,V,ca=t.normal_coordinate_bytes*3,ta=E+t.nnormals*ca;E<ta;E+=ca){P=m(a,E);I=m(a,E+t.normal_coordinate_bytes);V=m(a,
E+t.normal_coordinate_bytes*2);N.push(P/127,I/127,V/127)}return t.nnormals*ca}(e);e+=function(E){for(var P,I,V=t.uv_coordinate_bytes*2,ca=E+t.nuvs*V;E<ca;E+=V){P=h(a,E);I=h(a,E+t.uv_coordinate_bytes);Q.push(P,I)}return t.nuvs*V}(e);U=e+U;A=U+A;R=A+R;O=R+O;ga=O+ga;g=ga+g;ma=g+ma;(function(E){var P,I=t.vertex_index_bytes*3+t.material_index_bytes,V=I+t.uv_index_bytes*3,ca=E+t.ntri_flat_uv*V;for(P=E;P<ca;P+=V){w(P);z(P+I)}return ca-E})(A);(function(E){var P,I=t.vertex_index_bytes*3+t.material_index_bytes+
t.normal_index_bytes*3,V=I+t.uv_index_bytes*3,ca=E+t.ntri_smooth_uv*V;for(P=E;P<ca;P+=V){u(P);z(P+I)}return ca-E})(R);(function(E){var P,I=t.vertex_index_bytes*4+t.material_index_bytes,V=I+t.uv_index_bytes*4,ca=E+t.nquad_flat_uv*V;for(P=E;P<ca;P+=V){q(P);C(P+I)}return ca-E})(g);(function(E){var P,I=t.vertex_index_bytes*4+t.material_index_bytes+t.normal_index_bytes*4,V=I+t.uv_index_bytes*4,ca=E+t.nquad_smooth_uv*V;for(P=E;P<ca;P+=V){x(P);C(P+I)}return ca-E})(ma);(function(E){var P,I=t.vertex_index_bytes*
3+t.material_index_bytes,V=E+t.ntri_flat*I;for(P=E;P<V;P+=I)w(P);return V-E})(e);(function(E){var P,I=t.vertex_index_bytes*3+t.material_index_bytes+t.normal_index_bytes*3,V=E+t.ntri_smooth*I;for(P=E;P<V;P+=I)u(P);return V-E})(U);(function(E){var P,I=t.vertex_index_bytes*4+t.material_index_bytes,V=E+t.nquad_flat*I;for(P=E;P<V;P+=I)q(P);return V-E})(O);(function(E){var P,I=t.vertex_index_bytes*4+t.material_index_bytes+t.normal_index_bytes*4,V=E+t.nquad_smooth*I;for(P=E;P<V;P+=I)x(P);return V-E})(ga);
this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};f.prototype=new THREE.Geometry;f.prototype.constructor=f;b(new f(c))},createModel:function(a,b,c){var d=function(f){var g=this;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(g,a.materials,f);(function(){var h,k,j,m,n;h=0;for(k=a.vertices.length;h<k;h+=3){j=a.vertices[h];m=a.vertices[h+1];n=a.vertices[h+2];THREE.Loader.prototype.v(g,j,m,n)}if(a.colors){h=0;for(k=a.colors.length;h<k;h+=3){j=a.colors[h];m=
a.colors[h+1];n=a.colors[h+2];THREE.Loader.prototype.vc(g,j,m,n)}}})();(function(){function h(x,z){THREE.Loader.prototype.f3(g,x[z],x[z+1],x[z+2],x[z+3])}function k(x,z){THREE.Loader.prototype.f3n(g,a.normals,x[z],x[z+1],x[z+2],x[z+3],x[z+4],x[z+5],x[z+6])}function j(x,z){THREE.Loader.prototype.f4(g,x[z],x[z+1],x[z+2],x[z+3],x[z+4])}function m(x,z){THREE.Loader.prototype.f4n(g,a.normals,x[z],x[z+1],x[z+2],x[z+3],x[z+4],x[z+5],x[z+6],x[z+7],x[z+8])}function n(x,z){var C,o,e,t,N,Q,ea,L,G;C=x[z];o=x[z+
1];e=x[z+2];t=a.uvs[C*2];ea=a.uvs[C*2+1];N=a.uvs[o*2];L=a.uvs[o*2+1];Q=a.uvs[e*2];G=a.uvs[e*2+1];THREE.Loader.prototype.uv3(g.uvs,t,ea,N,L,Q,G);if(a.uvs2&&a.uvs2.length){t=a.uvs2[C*2];ea=a.uvs2[C*2+1];N=a.uvs2[o*2];L=a.uvs2[o*2+1];Q=a.uvs2[e*2];G=a.uvs2[e*2+1];THREE.Loader.prototype.uv3(g.uvs2,t,1-ea,N,1-L,Q,1-G)}}function w(x,z){var C,o,e,t,N,Q,ea,L,G,Y,T,da;C=x[z];o=x[z+1];e=x[z+2];t=x[z+3];N=a.uvs[C*2];G=a.uvs[C*2+1];Q=a.uvs[o*2];Y=a.uvs[o*2+1];ea=a.uvs[e*2];T=a.uvs[e*2+1];L=a.uvs[t*2];da=a.uvs[t*
2+1];THREE.Loader.prototype.uv4(g.uvs,N,G,Q,Y,ea,T,L,da);if(a.uvs2){N=a.uvs2[C*2];G=a.uvs2[C*2+1];Q=a.uvs2[o*2];Y=a.uvs2[o*2+1];ea=a.uvs2[e*2];T=a.uvs2[e*2+1];L=a.uvs2[t*2];da=a.uvs2[t*2+1];THREE.Loader.prototype.uv4(g.uvs2,N,1-G,Q,1-Y,ea,1-T,L,1-da)}}var u,q;u=0;for(q=a.triangles_uv.length;u<q;u+=7){h(a.triangles_uv,u);n(a.triangles_uv,u+4)}u=0;for(q=a.triangles_n_uv.length;u<q;u+=10){k(a.triangles_n_uv,u);n(a.triangles_n_uv,u+7)}u=0;for(q=a.quads_uv.length;u<q;u+=9){j(a.quads_uv,u);w(a.quads_uv,
u+5)}u=0;for(q=a.quads_n_uv.length;u<q;u+=13){m(a.quads_n_uv,u);w(a.quads_n_uv,u+9)}u=0;for(q=a.triangles.length;u<q;u+=4)h(a.triangles,u);u=0;for(q=a.triangles_n.length;u<q;u+=7)k(a.triangles_n,u);u=0;for(q=a.quads.length;u<q;u+=5)j(a.quads,u);u=0;for(q=a.quads_n.length;u<q;u+=9)m(a.quads_n,u)})();(function(){var h,k,j,m;if(a.skinWeights){h=0;for(k=a.skinWeights.length;h<k;h+=2){j=a.skinWeights[h];m=a.skinWeights[h+1];THREE.Loader.prototype.sw(g,j,m,0,0)}}if(a.skinIndices){h=0;for(k=a.skinIndices.length;h<
k;h+=2){j=a.skinIndices[h];m=a.skinIndices[h+1];THREE.Loader.prototype.si(g,j,m,0,0)}}THREE.Loader.prototype.bones(g,a.bones);THREE.Loader.prototype.animation(g,a.animation)})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};d.prototype=new THREE.Geometry;d.prototype.constructor=d;b(new d(c))},bones:function(a,b){a.bones=b},animation:function(a,b){a.animation=b},si:function(a,b,c,d,f){a.skinIndices.push(new THREE.Vector4(b,c,d,f))},sw:function(a,b,c,d,f){a.skinWeights.push(new THREE.Vector4(b,
c,d,f))},v:function(a,b,c,d){a.vertices.push(new THREE.Vertex(new THREE.Vector3(b,c,d)))},vc:function(a,b,c,d){var f=new THREE.Color(16777215);f.setRGB(b,c,d);a.colors.push(f)},f3:function(a,b,c,d,f){a.faces.push(new THREE.Face3(b,c,d,null,a.materials[f]))},f4:function(a,b,c,d,f,g){a.faces.push(new THREE.Face4(b,c,d,f,null,a.materials[g]))},f3n:function(a,b,c,d,f,g,h,k,j){g=a.materials[g];var m=b[k*3],n=b[k*3+1];k=b[k*3+2];var w=b[j*3],u=b[j*3+1];j=b[j*3+2];a.faces.push(new THREE.Face3(c,d,f,[new THREE.Vector3(b[h*
3],b[h*3+1],b[h*3+2]),new THREE.Vector3(m,n,k),new THREE.Vector3(w,u,j)],g))},f4n:function(a,b,c,d,f,g,h,k,j,m,n){h=a.materials[h];var w=b[j*3],u=b[j*3+1];j=b[j*3+2];var q=b[m*3],x=b[m*3+1];m=b[m*3+2];var z=b[n*3],C=b[n*3+1];n=b[n*3+2];a.faces.push(new THREE.Face4(c,d,f,g,[new THREE.Vector3(b[k*3],b[k*3+1],b[k*3+2]),new THREE.Vector3(w,u,j),new THREE.Vector3(q,x,m),new THREE.Vector3(z,C,n)],h))},uv3:function(a,b,c,d,f,g,h){var k=[];k.push(new THREE.UV(b,c));k.push(new THREE.UV(d,f));k.push(new THREE.UV(g,
h));a.push(k)},uv4:function(a,b,c,d,f,g,h,k,j){var m=[];m.push(new THREE.UV(b,c));m.push(new THREE.UV(d,f));m.push(new THREE.UV(g,h));m.push(new THREE.UV(k,j));a.push(m)},init_materials:function(a,b,c){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=[THREE.Loader.prototype.createMaterial(b[d],c)]},createMaterial:function(a,b){function c(k){k=Math.log(k)/Math.LN2;return Math.floor(k)==k}function d(k,j){var m=new Image;m.onload=function(){if(!c(this.width)||!c(this.height)){var n=Math.pow(2,
Math.round(Math.log(this.width)/Math.LN2)),w=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));k.image.width=n;k.image.height=w;k.image.getContext("2d").drawImage(this,0,0,n,w)}else k.image=this;k.image.loaded=1};m.src=j}var f,g,h;f="MeshLambertMaterial";g={color:15658734,opacity:1,map:null,light_map:null,vertex_colors:a.vertex_colors};a.shading&&a.shading=="Phong"&&(f="MeshPhongMaterial");if(a.map_diffuse&&b){h=document.createElement("canvas");g.map=new THREE.Texture(h);d(g.map,b+"/"+a.map_diffuse)}else if(a.col_diffuse){h=
(a.col_diffuse[0]*255<<16)+(a.col_diffuse[1]*255<<8)+a.col_diffuse[2]*255;g.color=h;g.opacity=a.transparency}else if(a.a_dbg_color)g.color=a.a_dbg_color;if(a.map_lightmap&&b){h=document.createElement("canvas");g.light_map=new THREE.Texture(h);d(g.light_map,b+"/"+a.map_lightmap)}return new THREE[f](g)},extractUrlbase:function(a){a=a.split("/");a.pop();return a.join("/")}};
