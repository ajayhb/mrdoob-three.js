// Three.js r31 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,c,f){this.r=a;this.g=c;this.b=f;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+
","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,c){this.x=a||0;this.y=c||0};
THREE.Vector2.prototype={set:function(a,c){this.x=a;this.y=c;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,c,f){this.x=a||0;this.y=c||0;this.z=f||0};
THREE.Vector3.prototype={set:function(a,c,f){this.x=a;this.y=c;this.z=f;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,c){this.x=a.y*c.z-a.z*c.y;this.y=a.z*c.x-a.x*c.z;this.z=a.x*c.y-a.y*c.x;return this},crossSelf:function(a){var c=this.x,f=this.y,e=this.z;this.x=f*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-f*a.x;return this},multiply:function(a,c){this.x=a.x*c.x;this.y=a.y*c.y;this.z=a.z*c.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=
a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var c=this.x-a.x,f=this.y-a.y;a=this.z-a.z;return Math.sqrt(c*c+f*f+a*a)},distanceToSquared:function(a){var c=this.x-a.x,f=this.y-a.y;a=this.z-a.z;return c*c+f*f+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=
Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,c,f,e){this.x=a||0;this.y=c||0;this.z=f||0;this.w=e||1};
THREE.Vector4.prototype={set:function(a,c,f,e){this.x=a;this.y=c;this.z=f;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;this.w=a.w+c.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;this.w=a.w-c.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,c){this.x+=(a.x-this.x)*c;this.y+=(a.y-this.y)*c;this.z+=(a.z-this.z)*c;this.w+=(a.w-this.w)*c},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,c){this.origin=a||new THREE.Vector3;this.direction=c||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var c,f,e=a.objects,l=[];a=0;for(c=e.length;a<c;a++){f=e[a];if(f instanceof THREE.Mesh)l=l.concat(this.intersectObject(f))}l.sort(function(n,r){return n.distance-r.distance});return l},intersectObject:function(a){function c(T,s,Q,D){D=D.clone().subSelf(s);Q=Q.clone().subSelf(s);var L=T.clone().subSelf(s);T=D.dot(D);s=D.dot(Q);D=D.dot(L);var N=Q.dot(Q);Q=Q.dot(L);L=1/(T*N-s*s);N=(N*D-s*Q)*L;T=(T*Q-s*D)*L;return N>0&&T>0&&N+T<1}var f,e,l,n,r,t,p,q,A,d,
x,B=a.geometry,R=B.vertices,W=[];f=0;for(e=B.faces.length;f<e;f++){l=B.faces[f];d=this.origin.clone();x=this.direction.clone();n=a.matrix.multiplyVector3(R[l.a].position.clone());r=a.matrix.multiplyVector3(R[l.b].position.clone());t=a.matrix.multiplyVector3(R[l.c].position.clone());p=l instanceof THREE.Face4?a.matrix.multiplyVector3(R[l.d].position.clone()):null;q=a.rotationMatrix.multiplyVector3(l.normal.clone());A=x.dot(q);if(A<0){q=q.dot((new THREE.Vector3).sub(n,d))/A;d=d.addSelf(x.multiplyScalar(q));
if(l instanceof THREE.Face3){if(c(d,n,r,t)){l={distance:this.origin.distanceTo(d),point:d,face:l,object:a};W.push(l)}}else if(l instanceof THREE.Face4)if(c(d,n,r,p)||c(d,r,t,p)){l={distance:this.origin.distanceTo(d),point:d,face:l,object:a};W.push(l)}}}return W}};
THREE.Rectangle=function(){function a(){n=e-c;r=l-f}var c,f,e,l,n,r,t=true;this.getX=function(){return c};this.getY=function(){return f};this.getWidth=function(){return n};this.getHeight=function(){return r};this.getLeft=function(){return c};this.getTop=function(){return f};this.getRight=function(){return e};this.getBottom=function(){return l};this.set=function(p,q,A,d){t=false;c=p;f=q;e=A;l=d;a()};this.addPoint=function(p,q){if(t){t=false;c=p;f=q;e=p;l=q}else{c=c<p?c:p;f=f<q?f:q;e=e>p?e:p;l=l>q?
l:q}a()};this.add3Points=function(p,q,A,d,x,B){if(t){t=false;c=p<A?p<x?p:x:A<x?A:x;f=q<d?q<B?q:B:d<B?d:B;e=p>A?p>x?p:x:A>x?A:x;l=q>d?q>B?q:B:d>B?d:B}else{c=p<A?p<x?p<c?p:c:x<c?x:c:A<x?A<c?A:c:x<c?x:c;f=q<d?q<B?q<f?q:f:B<f?B:f:d<B?d<f?d:f:B<f?B:f;e=p>A?p>x?p>e?p:e:x>e?x:e:A>x?A>e?A:e:x>e?x:e;l=q>d?q>B?q>l?q:l:B>l?B:l:d>B?d>l?d:l:B>l?B:l}a()};this.addRectangle=function(p){if(t){t=false;c=p.getLeft();f=p.getTop();e=p.getRight();l=p.getBottom()}else{c=c<p.getLeft()?c:p.getLeft();f=f<p.getTop()?f:p.getTop();
e=e>p.getRight()?e:p.getRight();l=l>p.getBottom()?l:p.getBottom()}a()};this.inflate=function(p){c-=p;f-=p;e+=p;l+=p;a()};this.minSelf=function(p){c=c>p.getLeft()?c:p.getLeft();f=f>p.getTop()?f:p.getTop();e=e<p.getRight()?e:p.getRight();l=l<p.getBottom()?l:p.getBottom();a()};this.instersects=function(p){return Math.min(e,p.getRight())-Math.max(c,p.getLeft())>=0&&Math.min(l,p.getBottom())-Math.max(f,p.getTop())>=0};this.empty=function(){t=true;l=e=f=c=0;a()};this.isEmpty=function(){return t};this.toString=
function(){return"THREE.Rectangle ( left: "+c+", right: "+e+", top: "+f+", bottom: "+l+", width: "+n+", height: "+r+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a;a=this.m[1];this.m[1]=this.m[3];this.m[3]=a;a=this.m[2];this.m[2]=this.m[6];this.m[6]=a;a=this.m[5];this.m[5]=this.m[7];this.m[7]=a;return this}};
THREE.Matrix4=function(a,c,f,e,l,n,r,t,p,q,A,d,x,B,R,W){this.n11=a||1;this.n12=c||0;this.n13=f||0;this.n14=e||0;this.n21=l||0;this.n22=n||1;this.n23=r||0;this.n24=t||0;this.n31=p||0;this.n32=q||0;this.n33=A||1;this.n34=d||0;this.n41=x||0;this.n42=B||0;this.n43=R||0;this.n44=W||1};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,c,f,e,l,n,r,t,p,q,A,d,x,B,R,W){this.n11=a;this.n12=c;this.n13=f;this.n14=e;this.n21=l;this.n22=n;this.n23=r;this.n24=t;this.n31=p;this.n32=q;this.n33=A;this.n34=d;this.n41=x;this.n42=B;this.n43=R;this.n44=W;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,c,f){var e=new THREE.Vector3,l=new THREE.Vector3,n=new THREE.Vector3;n.sub(a,c).normalize();e.cross(f,n).normalize();l.cross(n,e).normalize();this.n11=e.x;this.n12=e.y;this.n13=e.z;this.n14=-e.dot(a);this.n21=l.x;this.n22=l.y;this.n23=l.z;this.n24=-l.dot(a);this.n31=n.x;
this.n32=n.y;this.n33=n.z;this.n34=-n.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var c=a.x,f=a.y,e=a.z,l=1/(this.n41*c+this.n42*f+this.n43*e+this.n44);a.x=(this.n11*c+this.n12*f+this.n13*e+this.n14)*l;a.y=(this.n21*c+this.n22*f+this.n23*e+this.n24)*l;a.z=(this.n31*c+this.n32*f+this.n33*e+this.n34)*l;return a},multiplyVector4:function(a){var c=a.x,f=a.y,e=a.z,l=a.w;a.x=this.n11*c+this.n12*f+this.n13*e+this.n14*l;a.y=this.n21*c+this.n22*f+this.n23*e+this.n24*
l;a.z=this.n31*c+this.n32*f+this.n33*e+this.n34*l;a.w=this.n41*c+this.n42*f+this.n43*e+this.n44*l;return a},crossVector:function(a){var c=new THREE.Vector4;c.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;c.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;c.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;c.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return c},multiply:function(a,c){var f=a.n11,e=a.n12,l=a.n13,n=a.n14,r=a.n21,t=a.n22,p=a.n23,q=a.n24,A=a.n31,d=a.n32,
x=a.n33,B=a.n34,R=a.n41,W=a.n42,T=a.n43,s=a.n44,Q=c.n11,D=c.n12,L=c.n13,N=c.n14,Z=c.n21,O=c.n22,J=c.n23,h=c.n24,k=c.n31,o=c.n32,i=c.n33,j=c.n34,m=c.n41,z=c.n42,w=c.n43,K=c.n44;this.n11=f*Q+e*Z+l*k+n*m;this.n12=f*D+e*O+l*o+n*z;this.n13=f*L+e*J+l*i+n*w;this.n14=f*N+e*h+l*j+n*K;this.n21=r*Q+t*Z+p*k+q*m;this.n22=r*D+t*O+p*o+q*z;this.n23=r*L+t*J+p*i+q*w;this.n24=r*N+t*h+p*j+q*K;this.n31=A*Q+d*Z+x*k+B*m;this.n32=A*D+d*O+x*o+B*z;this.n33=A*L+d*J+x*i+B*w;this.n34=A*N+d*h+x*j+B*K;this.n41=R*Q+W*Z+T*k+s*m;
this.n42=R*D+W*O+T*o+s*z;this.n43=R*L+W*J+T*i+s*w;this.n44=R*N+W*h+T*j+s*K;return this},multiplySelf:function(a){var c=this.n11,f=this.n12,e=this.n13,l=this.n14,n=this.n21,r=this.n22,t=this.n23,p=this.n24,q=this.n31,A=this.n32,d=this.n33,x=this.n34,B=this.n41,R=this.n42,W=this.n43,T=this.n44,s=a.n11,Q=a.n21,D=a.n31,L=a.n41,N=a.n12,Z=a.n22,O=a.n32,J=a.n42,h=a.n13,k=a.n23,o=a.n33,i=a.n43,j=a.n14,m=a.n24,z=a.n34;a=a.n44;this.n11=c*s+f*Q+e*D+l*L;this.n12=c*N+f*Z+e*O+l*J;this.n13=c*h+f*k+e*o+l*i;this.n14=
c*j+f*m+e*z+l*a;this.n21=n*s+r*Q+t*D+p*L;this.n22=n*N+r*Z+t*O+p*J;this.n23=n*h+r*k+t*o+p*i;this.n24=n*j+r*m+t*z+p*a;this.n31=q*s+A*Q+d*D+x*L;this.n32=q*N+A*Z+d*O+x*J;this.n33=q*h+A*k+d*o+x*i;this.n34=q*j+A*m+d*z+x*a;this.n41=B*s+R*Q+W*D+T*L;this.n42=B*N+R*Z+W*O+T*J;this.n43=B*h+R*k+W*o+T*i;this.n44=B*j+R*m+W*z+T*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=
a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){return this.n14*this.n23*this.n32*this.n41-this.n13*this.n24*this.n32*this.n41-this.n14*this.n22*this.n33*this.n41+this.n12*this.n24*this.n33*this.n41+this.n13*this.n22*this.n34*this.n41-this.n12*this.n23*this.n34*this.n41-this.n14*this.n23*this.n31*this.n42+this.n13*this.n24*this.n31*this.n42+this.n14*this.n21*this.n33*this.n42-this.n11*this.n24*this.n33*this.n42-this.n13*this.n21*this.n34*this.n42+this.n11*this.n23*this.n34*
this.n42+this.n14*this.n22*this.n31*this.n43-this.n12*this.n24*this.n31*this.n43-this.n14*this.n21*this.n32*this.n43+this.n11*this.n24*this.n32*this.n43+this.n12*this.n21*this.n34*this.n43-this.n11*this.n22*this.n34*this.n43-this.n13*this.n22*this.n31*this.n44+this.n12*this.n23*this.n31*this.n44+this.n13*this.n21*this.n32*this.n44-this.n11*this.n23*this.n32*this.n44-this.n12*this.n21*this.n33*this.n44+this.n11*this.n22*this.n33*this.n44},transpose:function(){function a(c,f,e){var l=c[f];c[f]=c[e];
c[e]=l}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){return[this.n11,this.n21,this.n31,this.n41,this.n12,
this.n22,this.n32,this.n42,this.n13,this.n23,this.n33,this.n43,this.n14,this.n24,this.n34,this.n44]},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,c,f){var e=new THREE.Matrix4;e.n14=a;e.n24=c;e.n34=f;return e};
THREE.Matrix4.scaleMatrix=function(a,c,f){var e=new THREE.Matrix4;e.n11=a;e.n22=c;e.n33=f;return e};THREE.Matrix4.rotationXMatrix=function(a){var c=new THREE.Matrix4;c.n22=c.n33=Math.cos(a);c.n32=Math.sin(a);c.n23=-c.n32;return c};THREE.Matrix4.rotationYMatrix=function(a){var c=new THREE.Matrix4;c.n11=c.n33=Math.cos(a);c.n13=Math.sin(a);c.n31=-c.n13;return c};THREE.Matrix4.rotationZMatrix=function(a){var c=new THREE.Matrix4;c.n11=c.n22=Math.cos(a);c.n21=Math.sin(a);c.n12=-c.n21;return c};
THREE.Matrix4.rotationAxisAngleMatrix=function(a,c){var f=new THREE.Matrix4,e=Math.cos(c),l=Math.sin(c),n=1-e,r=a.x,t=a.y,p=a.z;f.n11=n*r*r+e;f.n12=n*r*t-l*p;f.n13=n*r*p+l*t;f.n21=n*r*t+l*p;f.n22=n*t*t+e;f.n23=n*t*p-l*r;f.n31=n*r*p-l*t;f.n32=n*t*p+l*r;f.n33=n*p*p+e;return f};
THREE.Matrix4.makeInvert=function(a){var c=new THREE.Matrix4;c.n11=a.n23*a.n34*a.n42-a.n24*a.n33*a.n42+a.n24*a.n32*a.n43-a.n22*a.n34*a.n43-a.n23*a.n32*a.n44+a.n22*a.n33*a.n44;c.n12=a.n14*a.n33*a.n42-a.n13*a.n34*a.n42-a.n14*a.n32*a.n43+a.n12*a.n34*a.n43+a.n13*a.n32*a.n44-a.n12*a.n33*a.n44;c.n13=a.n13*a.n24*a.n42-a.n14*a.n23*a.n42+a.n14*a.n22*a.n43-a.n12*a.n24*a.n43-a.n13*a.n22*a.n44+a.n12*a.n23*a.n44;c.n14=a.n14*a.n23*a.n32-a.n13*a.n24*a.n32-a.n14*a.n22*a.n33+a.n12*a.n24*a.n33+a.n13*a.n22*a.n34-a.n12*
a.n23*a.n34;c.n21=a.n24*a.n33*a.n41-a.n23*a.n34*a.n41-a.n24*a.n31*a.n43+a.n21*a.n34*a.n43+a.n23*a.n31*a.n44-a.n21*a.n33*a.n44;c.n22=a.n13*a.n34*a.n41-a.n14*a.n33*a.n41+a.n14*a.n31*a.n43-a.n11*a.n34*a.n43-a.n13*a.n31*a.n44+a.n11*a.n33*a.n44;c.n23=a.n14*a.n23*a.n41-a.n13*a.n24*a.n41-a.n14*a.n21*a.n43+a.n11*a.n24*a.n43+a.n13*a.n21*a.n44-a.n11*a.n23*a.n44;c.n24=a.n13*a.n24*a.n31-a.n14*a.n23*a.n31+a.n14*a.n21*a.n33-a.n11*a.n24*a.n33-a.n13*a.n21*a.n34+a.n11*a.n23*a.n34;c.n31=a.n22*a.n34*a.n41-a.n24*a.n32*
a.n41+a.n24*a.n31*a.n42-a.n21*a.n34*a.n42-a.n22*a.n31*a.n44+a.n21*a.n32*a.n44;c.n32=a.n14*a.n32*a.n41-a.n12*a.n34*a.n41-a.n14*a.n31*a.n42+a.n11*a.n34*a.n42+a.n12*a.n31*a.n44-a.n11*a.n32*a.n44;c.n33=a.n13*a.n24*a.n41-a.n14*a.n22*a.n41+a.n14*a.n21*a.n42-a.n11*a.n24*a.n42-a.n12*a.n21*a.n44+a.n11*a.n22*a.n44;c.n34=a.n14*a.n22*a.n31-a.n12*a.n24*a.n31-a.n14*a.n21*a.n32+a.n11*a.n24*a.n32+a.n12*a.n21*a.n34-a.n11*a.n22*a.n34;c.n41=a.n23*a.n32*a.n41-a.n22*a.n33*a.n41-a.n23*a.n31*a.n42+a.n21*a.n33*a.n42+a.n22*
a.n31*a.n43-a.n21*a.n32*a.n43;c.n42=a.n12*a.n33*a.n41-a.n13*a.n32*a.n41+a.n13*a.n31*a.n42-a.n11*a.n33*a.n42-a.n12*a.n31*a.n43+a.n11*a.n32*a.n43;c.n43=a.n13*a.n22*a.n41-a.n12*a.n23*a.n41-a.n13*a.n21*a.n42+a.n11*a.n23*a.n42+a.n12*a.n21*a.n43-a.n11*a.n22*a.n43;c.n44=a.n12*a.n23*a.n31-a.n13*a.n22*a.n31+a.n13*a.n21*a.n32-a.n11*a.n23*a.n32-a.n12*a.n21*a.n33+a.n11*a.n22*a.n33;c.multiplyScalar(1/a.determinant());return c};
THREE.Matrix4.makeInvert3x3=function(a){var c=a.flatten();a=new THREE.Matrix3;var f=c[10]*c[5]-c[6]*c[9],e=-c[10]*c[1]+c[2]*c[9],l=c[6]*c[1]-c[2]*c[5],n=-c[10]*c[4]+c[6]*c[8],r=c[10]*c[0]-c[2]*c[8],t=-c[6]*c[0]+c[2]*c[4],p=c[9]*c[4]-c[5]*c[8],q=-c[9]*c[0]+c[1]*c[8],A=c[5]*c[0]-c[1]*c[4];c=c[0]*f+c[1]*n+c[2]*p;if(c==0)throw"matrix not invertible";c=1/c;a.m[0]=c*f;a.m[1]=c*e;a.m[2]=c*l;a.m[3]=c*n;a.m[4]=c*r;a.m[5]=c*t;a.m[6]=c*p;a.m[7]=c*q;a.m[8]=c*A;return a};
THREE.Matrix4.makeFrustum=function(a,c,f,e,l,n){var r,t,p;r=new THREE.Matrix4;t=2*l/(c-a);p=2*l/(e-f);a=(c+a)/(c-a);f=(e+f)/(e-f);e=-(n+l)/(n-l);l=-2*n*l/(n-l);r.n11=t;r.n12=0;r.n13=a;r.n14=0;r.n21=0;r.n22=p;r.n23=f;r.n24=0;r.n31=0;r.n32=0;r.n33=e;r.n34=l;r.n41=0;r.n42=0;r.n43=-1;r.n44=0;return r};THREE.Matrix4.makePerspective=function(a,c,f,e){var l;a=f*Math.tan(a*Math.PI/360);l=-a;return THREE.Matrix4.makeFrustum(l*c,a*c,l,a,f,e)};
THREE.Matrix4.makeOrtho=function(a,c,f,e,l,n){var r,t,p,q;r=new THREE.Matrix4;t=c-a;p=f-e;q=n-l;a=(c+a)/t;f=(f+e)/p;l=(n+l)/q;r.n11=2/t;r.n12=0;r.n13=0;r.n14=-a;r.n21=0;r.n22=2/p;r.n23=0;r.n24=-f;r.n31=0;r.n32=0;r.n33=-2/q;r.n34=-l;r.n41=0;r.n42=0;r.n43=0;r.n44=1;return r};
THREE.Vertex=function(a,c){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=c||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,c,f,e,l){this.a=a;this.b=c;this.c=f;this.centroid=new THREE.Vector3;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.materials=l instanceof Array?l:[l]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,c,f,e,l,n){this.a=a;this.b=c;this.c=f;this.d=e;this.centroid=new THREE.Vector3;this.normal=l instanceof THREE.Vector3?l:new THREE.Vector3;this.vertexNormals=l instanceof Array?l:[];this.materials=n instanceof Array?n:[n]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,c){this.u=a||0;this.v=c||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,c,f;a=0;for(c=this.faces.length;a<c;a++){f=this.faces[a];f.centroid.set(0,0,0);if(f instanceof THREE.Face3){f.centroid.addSelf(this.vertices[f.a].position);f.centroid.addSelf(this.vertices[f.b].position);f.centroid.addSelf(this.vertices[f.c].position);f.centroid.divideScalar(3)}else if(f instanceof THREE.Face4){f.centroid.addSelf(this.vertices[f.a].position);f.centroid.addSelf(this.vertices[f.b].position);f.centroid.addSelf(this.vertices[f.c].position);
f.centroid.addSelf(this.vertices[f.d].position);f.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var c,f,e,l,n,r,t=new THREE.Vector3,p=new THREE.Vector3;e=0;for(l=this.vertices.length;e<l;e++){n=this.vertices[e];n.normal.set(0,0,0)}e=0;for(l=this.faces.length;e<l;e++){n=this.faces[e];if(a&&n.vertexNormals.length){t.set(0,0,0);c=0;for(f=n.normal.length;c<f;c++)t.addSelf(n.vertexNormals[c]);t.divideScalar(3)}else{c=this.vertices[n.a];f=this.vertices[n.b];r=this.vertices[n.c];t.sub(r.position,
f.position);p.sub(c.position,f.position);t.crossSelf(p)}t.isZero()||t.normalize();n.normal.copy(t)}},computeVertexNormals:function(){var a,c=[],f,e;a=0;for(vl=this.vertices.length;a<vl;a++)c[a]=new THREE.Vector3;a=0;for(f=this.faces.length;a<f;a++){e=this.faces[a];if(e instanceof THREE.Face3){c[e.a].addSelf(e.normal);c[e.b].addSelf(e.normal);c[e.c].addSelf(e.normal)}else if(e instanceof THREE.Face4){c[e.a].addSelf(e.normal);c[e.b].addSelf(e.normal);c[e.c].addSelf(e.normal);c[e.d].addSelf(e.normal)}}a=
0;for(vl=this.vertices.length;a<vl;a++)c[a].normalize();a=0;for(f=this.faces.length;a<f;a++){e=this.faces[a];if(e instanceof THREE.Face3){e.vertexNormals[0]=c[e.a].clone();e.vertexNormals[1]=c[e.b].clone();e.vertexNormals[2]=c[e.c].clone()}else if(e instanceof THREE.Face4){e.vertexNormals[0]=c[e.a].clone();e.vertexNormals[1]=c[e.b].clone();e.vertexNormals[2]=c[e.c].clone();e.vertexNormals[3]=c[e.d].clone()}}},computeTangents:function(){function a(j,m,z,w,K,G,H){n=j.vertices[m].position;r=j.vertices[z].position;
t=j.vertices[w].position;p=l[K];q=l[G];A=l[H];d=r.x-n.x;x=t.x-n.x;B=r.y-n.y;R=t.y-n.y;W=r.z-n.z;T=t.z-n.z;s=q.u-p.u;Q=A.u-p.u;D=q.v-p.v;L=A.v-p.v;N=1/(s*L-Q*D);h.set((L*d-D*x)*N,(L*B-D*R)*N,(L*W-D*T)*N);k.set((s*x-Q*d)*N,(s*R-Q*B)*N,(s*T-Q*W)*N);O[m].addSelf(h);O[z].addSelf(h);O[w].addSelf(h);J[m].addSelf(k);J[z].addSelf(k);J[w].addSelf(k)}var c,f,e,l,n,r,t,p,q,A,d,x,B,R,W,T,s,Q,D,L,N,Z,O=[],J=[],h=new THREE.Vector3,k=new THREE.Vector3,o=new THREE.Vector3,i=new THREE.Vector3;Z=new THREE.Vector3;c=
0;for(f=this.vertices.length;c<f;c++){O[c]=new THREE.Vector3;J[c]=new THREE.Vector3}c=0;for(f=this.faces.length;c<f;c++){e=this.faces[c];l=this.uvs[c];if(e instanceof THREE.Face3){a(this,e.a,e.b,e.c,0,1,2);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);this.vertices[e.c].normal.copy(e.vertexNormals[2])}else if(e instanceof THREE.Face4){a(this,e.a,e.b,e.c,0,1,2);a(this,e.a,e.b,e.d,0,1,3);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);
this.vertices[e.c].normal.copy(e.vertexNormals[2]);this.vertices[e.d].normal.copy(e.vertexNormals[3])}}c=0;for(f=this.vertices.length;c<f;c++){Z.copy(this.vertices[c].normal);e=O[c];o.copy(e);o.subSelf(Z.multiplyScalar(Z.dot(e))).normalize();i.cross(this.vertices[c].normal,e);test=i.dot(J[c]);e=test<0?-1:1;this.vertices[c].tangent.set(o.x,o.y,o.z,e)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],
y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var c=1,f=this.vertices.length;c<f;c++){a=this.vertices[c];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<
this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,c=0,f=this.vertices.length;c<f;c++)a=Math.max(a,this.vertices[c].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(q){var A=[];c=0;for(f=q.length;c<f;c++)q[c]==undefined?A.push("undefined"):A.push(q[c].toString());return A.join("_")}
var c,f,e,l,n,r,t,p={};e=0;for(l=this.faces.length;e<l;e++){n=this.faces[e];materials=n.materials;r=a(materials);if(p[r]==undefined)p[r]={hash:r,counter:0};t=p[r].hash+"_"+p[r].counter;if(this.geometryChunks[t]==undefined)this.geometryChunks[t]={faces:[],materials:materials,vertices:0};n=n instanceof THREE.Face3?3:4;if(this.geometryChunks[t].vertices+n>65535){p[r].counter+=1;t=p[r].hash+"_"+p[r].counter;if(this.geometryChunks[t]==undefined)this.geometryChunks[t]={faces:[],materials:materials,vertices:0}}this.geometryChunks[t].faces.push(e);
this.geometryChunks[t].vertices+=n}},toString:function(){return"THREE.Geometry ( vertices: "+this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,c,f,e){this.fov=a;this.aspect=c;this.near=f;this.far=e;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.translateX=function(l){l=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(l);l.cross(l.clone(),this.up);this.position.addSelf(l);this.target.position.addSelf(l)};this.translateZ=function(l){l=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(l);
this.position.subSelf(l);this.target.position.subSelf(l)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};
THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=c||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;
THREE.PointLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=c||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.translationMatrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.scaleMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){this.matrixPosition=THREE.Matrix4.translationMatrix(this.position.x,this.position.y,this.position.z);this.rotationMatrix=THREE.Matrix4.rotationXMatrix(this.rotation.x);this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationYMatrix(this.rotation.y));this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationZMatrix(this.rotation.z));this.scaleMatrix=THREE.Matrix4.scaleMatrix(this.scale.x,this.scale.y,this.scale.z);this.matrix.copy(this.matrixPosition);
this.matrix.multiplySelf(this.rotationMatrix);this.matrix.multiplySelf(this.scaleMatrix)}};THREE.Object3DCounter={value:0};THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.Line=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c]};THREE.Line.prototype=new THREE.Object3D;
THREE.Line.prototype.constructor=THREE.Line;THREE.Mesh=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+
"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=
this.wireframe_linecap="round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=
a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==
undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial"}};
THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.opacity=1;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};
THREE.Texture=function(a,c,f,e,l,n){this.image=a;this.mapping=c!==undefined?c:new THREE.UVMapping;this.wrap_s=f!==undefined?f:THREE.ClampToEdgeWrapping;this.wrap_t=e!==undefined?e:THREE.ClampToEdgeWrapping;this.mag_filter=l!==undefined?l:THREE.LinearFilter;this.min_filter=n!==undefined?n:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;var Uniforms={clone:function(a){var c,f,e={};for(c in a){e[c]={};for(f in a[c]){parameter_src=a[c][f];e[c][f]=parameter_src instanceof THREE.Color||parameter_src instanceof THREE.Vector3||parameter_src instanceof THREE.Texture?parameter_src.clone():parameter_src}}return e}};THREE.CubeReflectionMapping=function(){};
THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,c,f){this.color=new THREE.Color(a);this.near=c||1;this.far=f||1E3};THREE.FogExp2=function(a,c){this.color=new THREE.Color(a);this.density=c||2.5E-4};
THREE.Projector=function(){function a(O,J){return J.z-O.z}function c(O,J){var h=0,k=1,o=O.z+O.w,i=J.z+J.w,j=-O.z+O.w,m=-J.z+J.w;if(o>=0&&i>=0&&j>=0&&m>=0)return true;else if(o<0&&i<0||j<0&&m<0)return false;else{if(o<0)h=Math.max(h,o/(o-i));else if(i<0)k=Math.min(k,o/(o-i));if(j<0)h=Math.max(h,j/(j-m));else if(m<0)k=Math.min(k,j/(j-m));if(k<h)return false;else{O.lerpSelf(J,h);J.lerpSelf(O,1-k);return true}}}var f,e,l=[],n,r,t,p=[],q,A,d=[],x,B,R=[],W=new THREE.Vector4,T=new THREE.Vector4,s=new THREE.Matrix4,
Q=new THREE.Matrix4,D=[],L=new THREE.Vector4,N=new THREE.Vector4,Z;this.projectObjects=function(O,J,h){var k=[],o,i;e=0;s.multiply(J.projectionMatrix,J.matrix);D[0]=new THREE.Vector4(s.n41-s.n11,s.n42-s.n12,s.n43-s.n13,s.n44-s.n14);D[1]=new THREE.Vector4(s.n41+s.n11,s.n42+s.n12,s.n43+s.n13,s.n44+s.n14);D[2]=new THREE.Vector4(s.n41+s.n21,s.n42+s.n22,s.n43+s.n23,s.n44+s.n24);D[3]=new THREE.Vector4(s.n41-s.n21,s.n42-s.n22,s.n43-s.n23,s.n44-s.n24);D[4]=new THREE.Vector4(s.n41-s.n31,s.n42-s.n32,s.n43-
s.n33,s.n44-s.n34);D[5]=new THREE.Vector4(s.n41+s.n31,s.n42+s.n32,s.n43+s.n33,s.n44+s.n34);J=0;for(o=D.length;J<o;J++){i=D[J];i.divideScalar(Math.sqrt(i.x*i.x+i.y*i.y+i.z*i.z))}o=O.objects;O=0;for(J=o.length;O<J;O++){i=o[O];var j;if(!(j=!i.visible)){if(j=i instanceof THREE.Mesh){a:{j=void 0;for(var m=i.position,z=-i.geometry.boundingSphere.radius*Math.max(i.scale.x,Math.max(i.scale.y,i.scale.z)),w=0;w<6;w++){j=D[w].x*m.x+D[w].y*m.y+D[w].z*m.z+D[w].w;if(j<=z){j=false;break a}}j=true}j=!j}j=j}if(!j){f=
l[e]=l[e]||new THREE.RenderableObject;W.copy(i.position);s.multiplyVector3(W);f.object=i;f.z=W.z;k.push(f);e++}}h&&k.sort(a);return k};this.projectScene=function(O,J,h){var k=[],o=J.near,i=J.far,j,m,z,w,K,G,H,I,S,v,E,U,V,u,F,Y;t=A=B=0;J.autoUpdateMatrix&&J.updateMatrix();s.multiply(J.projectionMatrix,J.matrix);G=this.projectObjects(O,J,true);O=0;for(j=G.length;O<j;O++){H=G[O].object;if(H.visible){H.autoUpdateMatrix&&H.updateMatrix();I=H.matrix;S=H.rotationMatrix;v=H.materials;E=H.overdraw;if(H instanceof
THREE.Mesh){U=H.geometry;V=U.vertices;m=0;for(z=V.length;m<z;m++){u=V[m];u.positionWorld.copy(u.position);I.multiplyVector3(u.positionWorld);w=u.positionScreen;w.copy(u.positionWorld);s.multiplyVector4(w);w.x/=w.w;w.y/=w.w;u.__visible=w.z>o&&w.z<i}U=U.faces;m=0;for(z=U.length;m<z;m++){u=U[m];if(u instanceof THREE.Face3){w=V[u.a];K=V[u.b];F=V[u.c];if(w.__visible&&K.__visible&&F.__visible)if(H.doubleSided||H.flipSided!=(F.positionScreen.x-w.positionScreen.x)*(K.positionScreen.y-w.positionScreen.y)-
(F.positionScreen.y-w.positionScreen.y)*(K.positionScreen.x-w.positionScreen.x)<0){n=p[t]=p[t]||new THREE.RenderableFace3;n.v1.positionWorld.copy(w.positionWorld);n.v2.positionWorld.copy(K.positionWorld);n.v3.positionWorld.copy(F.positionWorld);n.v1.positionScreen.copy(w.positionScreen);n.v2.positionScreen.copy(K.positionScreen);n.v3.positionScreen.copy(F.positionScreen);n.normalWorld.copy(u.normal);S.multiplyVector3(n.normalWorld);n.centroidWorld.copy(u.centroid);I.multiplyVector3(n.centroidWorld);
n.centroidScreen.copy(n.centroidWorld);s.multiplyVector3(n.centroidScreen);F=u.vertexNormals;Z=n.vertexNormalsWorld;w=0;for(K=F.length;w<K;w++){Y=Z[w]=Z[w]||new THREE.Vector3;Y.copy(F[w]);S.multiplyVector3(Y)}n.z=n.centroidScreen.z;n.meshMaterials=v;n.faceMaterials=u.materials;n.overdraw=E;if(H.geometry.uvs[m]){n.uvs[0]=H.geometry.uvs[m][0];n.uvs[1]=H.geometry.uvs[m][1];n.uvs[2]=H.geometry.uvs[m][2]}k.push(n);t++}}else if(u instanceof THREE.Face4){w=V[u.a];K=V[u.b];F=V[u.c];Y=V[u.d];if(w.__visible&&
K.__visible&&F.__visible&&Y.__visible)if(H.doubleSided||H.flipSided!=((Y.positionScreen.x-w.positionScreen.x)*(K.positionScreen.y-w.positionScreen.y)-(Y.positionScreen.y-w.positionScreen.y)*(K.positionScreen.x-w.positionScreen.x)<0||(K.positionScreen.x-F.positionScreen.x)*(Y.positionScreen.y-F.positionScreen.y)-(K.positionScreen.y-F.positionScreen.y)*(Y.positionScreen.x-F.positionScreen.x)<0)){n=p[t]=p[t]||new THREE.RenderableFace3;n.v1.positionWorld.copy(w.positionWorld);n.v2.positionWorld.copy(K.positionWorld);
n.v3.positionWorld.copy(Y.positionWorld);n.v1.positionScreen.copy(w.positionScreen);n.v2.positionScreen.copy(K.positionScreen);n.v3.positionScreen.copy(Y.positionScreen);n.normalWorld.copy(u.normal);S.multiplyVector3(n.normalWorld);n.centroidWorld.copy(u.centroid);I.multiplyVector3(n.centroidWorld);n.centroidScreen.copy(n.centroidWorld);s.multiplyVector3(n.centroidScreen);n.z=n.centroidScreen.z;n.meshMaterials=v;n.faceMaterials=u.materials;n.overdraw=E;if(H.geometry.uvs[m]){n.uvs[0]=H.geometry.uvs[m][0];
n.uvs[1]=H.geometry.uvs[m][1];n.uvs[2]=H.geometry.uvs[m][3]}k.push(n);t++;r=p[t]=p[t]||new THREE.RenderableFace3;r.v1.positionWorld.copy(K.positionWorld);r.v2.positionWorld.copy(F.positionWorld);r.v3.positionWorld.copy(Y.positionWorld);r.v1.positionScreen.copy(K.positionScreen);r.v2.positionScreen.copy(F.positionScreen);r.v3.positionScreen.copy(Y.positionScreen);r.normalWorld.copy(n.normalWorld);r.centroidWorld.copy(n.centroidWorld);r.centroidScreen.copy(n.centroidScreen);r.z=r.centroidScreen.z;r.meshMaterials=
v;r.faceMaterials=u.materials;r.overdraw=E;if(H.geometry.uvs[m]){r.uvs[0]=H.geometry.uvs[m][1];r.uvs[1]=H.geometry.uvs[m][2];r.uvs[2]=H.geometry.uvs[m][3]}k.push(r);t++}}}}else if(H instanceof THREE.Line){Q.multiply(s,I);V=H.geometry.vertices;u=V[0];u.positionScreen.copy(u.position);Q.multiplyVector4(u.positionScreen);m=1;for(z=V.length;m<z;m++){w=V[m];w.positionScreen.copy(w.position);Q.multiplyVector4(w.positionScreen);K=V[m-1];L.copy(w.positionScreen);N.copy(K.positionScreen);if(c(L,N)){L.multiplyScalar(1/
L.w);N.multiplyScalar(1/N.w);q=d[A]=d[A]||new THREE.RenderableLine;q.v1.positionScreen.copy(L);q.v2.positionScreen.copy(N);q.z=Math.max(L.z,N.z);q.materials=H.materials;k.push(q);A++}}}else if(H instanceof THREE.Particle){T.set(H.position.x,H.position.y,H.position.z,1);s.multiplyVector4(T);T.z/=T.w;if(T.z>0&&T.z<1){x=R[B]=R[B]||new THREE.RenderableParticle;x.x=T.x/T.w;x.y=T.y/T.w;x.z=T.z;x.rotation=H.rotation.z;x.scale.x=H.scale.x*Math.abs(x.x-(T.x+J.projectionMatrix.n11)/(T.w+J.projectionMatrix.n14));
x.scale.y=H.scale.y*Math.abs(x.y-(T.y+J.projectionMatrix.n22)/(T.w+J.projectionMatrix.n24));x.materials=H.materials;k.push(x);B++}}}}h&&k.sort(a);return k};this.unprojectVector=function(O,J){var h=new THREE.Matrix4;h.multiply(THREE.Matrix4.makeInvert(J.matrix),THREE.Matrix4.makeInvert(J.projectionMatrix));h.multiplyVector3(O);return O}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,c=new THREE.Projector,f,e,l,n;this.domElement=document.createElement("div");this.setSize=function(r,t){f=r;e=t;l=f/2;n=e/2};this.render=function(r,t){var p,q,A,d,x,B,R,W;a=c.projectScene(r,t);p=0;for(q=a.length;p<q;p++){x=a[p];if(x instanceof THREE.RenderableParticle){R=x.x*l+l;W=x.y*n+n;A=0;for(d=x.material.length;A<d;A++){B=x.material[A];if(B instanceof THREE.ParticleDOMMaterial){B=B.domElement;B.style.left=R+"px";B.style.top=W+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(da){if(x!=da)q.globalAlpha=x=da}function c(da){if(B!=da){switch(da){case THREE.NormalBlending:q.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:q.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:q.globalCompositeOperation="darker"}B=da}}var f=null,e=new THREE.Projector,l=document.createElement("canvas"),n,r,t,p,q=l.getContext("2d"),A=null,d=null,x=1,B=0,R=null,W=null,T=1,s,Q,D,L,N,Z,O,J,h,k=new THREE.Color,
o=new THREE.Color,i=new THREE.Color,j=new THREE.Color,m=new THREE.Color,z,w,K,G,H,I,S,v,E,U=new THREE.Rectangle,V=new THREE.Rectangle,u=new THREE.Rectangle,F=false,Y=new THREE.Color,ga=new THREE.Color,oa=new THREE.Color,pa=new THREE.Color,Na=Math.PI*2,aa=new THREE.Vector3,ta,ua,Ea,ha,va,za,ra=16;ta=document.createElement("canvas");ta.width=ta.height=2;ua=ta.getContext("2d");ua.fillStyle="rgba(0,0,0,1)";ua.fillRect(0,0,2,2);Ea=ua.getImageData(0,0,2,2);ha=Ea.data;va=document.createElement("canvas");
va.width=va.height=ra;za=va.getContext("2d");za.translate(-ra/2,-ra/2);za.scale(ra,ra);ra--;this.domElement=l;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(da,na){n=da;r=na;t=n/2;p=r/2;l.width=n;l.height=r;U.set(-t,-p,t,p)};this.setClearColor=function(da,na){A=da!==null?new THREE.Color(da):null;d=na;V.set(-t,-p,t,p);q.setTransform(1,0,0,-1,t,p);this.clear()};this.clear=function(){if(!V.isEmpty()){V.inflate(1);V.minSelf(U);if(A!==null){c(THREE.NormalBlending);a(1);q.fillStyle=
"rgba("+Math.floor(A.r*255)+","+Math.floor(A.g*255)+","+Math.floor(A.b*255)+","+d+")";q.fillRect(V.getX(),V.getY(),V.getWidth(),V.getHeight())}else q.clearRect(V.getX(),V.getY(),V.getWidth(),V.getHeight());V.empty()}};this.render=function(da,na){function Oa(y){var X,P,C,M=y.lights;ga.setRGB(0,0,0);oa.setRGB(0,0,0);pa.setRGB(0,0,0);y=0;for(X=M.length;y<X;y++){P=M[y];C=P.color;if(P instanceof THREE.AmbientLight){ga.r+=C.r;ga.g+=C.g;ga.b+=C.b}else if(P instanceof THREE.DirectionalLight){oa.r+=C.r;oa.g+=
C.g;oa.b+=C.b}else if(P instanceof THREE.PointLight){pa.r+=C.r;pa.g+=C.g;pa.b+=C.b}}}function Aa(y,X,P,C){var M,$,ca,ea,fa=y.lights;y=0;for(M=fa.length;y<M;y++){$=fa[y];ca=$.color;ea=$.intensity;if($ instanceof THREE.DirectionalLight){$=P.dot($.position)*ea;if($>0){C.r+=ca.r*$;C.g+=ca.g*$;C.b+=ca.b*$}}else if($ instanceof THREE.PointLight){aa.sub($.position,X);aa.normalize();$=P.dot(aa)*ea;if($>0){C.r+=ca.r*$;C.g+=ca.g*$;C.b+=ca.b*$}}}}function Pa(y,X,P){if(P.opacity!=0){a(P.opacity);c(P.blending);
var C,M,$,ca,ea,fa;if(P instanceof THREE.ParticleBasicMaterial){if(P.map){ca=P.map;ea=ca.width>>1;fa=ca.height>>1;M=X.scale.x*t;$=X.scale.y*p;P=M*ea;C=$*fa;u.set(y.x-P,y.y-C,y.x+P,y.y+C);if(U.instersects(u)){q.save();q.translate(y.x,y.y);q.rotate(-X.rotation);q.scale(M,-$);q.translate(-ea,-fa);q.drawImage(ca,0,0);q.restore()}}}else if(P instanceof THREE.ParticleCircleMaterial){if(F){Y.r=ga.r+oa.r+pa.r;Y.g=ga.g+oa.g+pa.g;Y.b=ga.b+oa.b+pa.b;k.r=P.color.r*Y.r;k.g=P.color.g*Y.g;k.b=P.color.b*Y.b;k.updateStyleString()}else k.__styleString=
P.color.__styleString;P=X.scale.x*t;C=X.scale.y*p;u.set(y.x-P,y.y-C,y.x+P,y.y+C);if(U.instersects(u)){M=k.__styleString;if(W!=M)q.fillStyle=W=M;q.save();q.translate(y.x,y.y);q.rotate(-X.rotation);q.scale(P,C);q.beginPath();q.arc(0,0,1,0,Na,true);q.closePath();q.fill();q.restore()}}}}function Qa(y,X,P,C){if(C.opacity!=0){a(C.opacity);c(C.blending);q.beginPath();q.moveTo(y.positionScreen.x,y.positionScreen.y);q.lineTo(X.positionScreen.x,X.positionScreen.y);q.closePath();if(C instanceof THREE.LineBasicMaterial){k.__styleString=
C.color.__styleString;y=C.linewidth;if(T!=y)q.lineWidth=T=y;y=k.__styleString;if(R!=y)q.strokeStyle=R=y;q.stroke();u.inflate(C.linewidth*2)}}}function Ja(y,X,P,C,M,$){if(M.opacity!=0){a(M.opacity);c(M.blending);L=y.positionScreen.x;N=y.positionScreen.y;Z=X.positionScreen.x;O=X.positionScreen.y;J=P.positionScreen.x;h=P.positionScreen.y;q.beginPath();q.moveTo(L,N);q.lineTo(Z,O);q.lineTo(J,h);q.lineTo(L,N);q.closePath();if(M instanceof THREE.MeshBasicMaterial)if(M.map)M.map.image.loaded&&M.map.mapping instanceof
THREE.UVMapping&&wa(L,N,Z,O,J,h,M.map.image,C.uvs[0].u,C.uvs[0].v,C.uvs[1].u,C.uvs[1].v,C.uvs[2].u,C.uvs[2].v);else if(M.env_map){if(M.env_map.image.loaded)if(M.env_map.mapping instanceof THREE.SphericalReflectionMapping){y=na.matrix;aa.copy(C.vertexNormalsWorld[0]);G=(aa.x*y.n11+aa.y*y.n12+aa.z*y.n13)*0.5+0.5;H=-(aa.x*y.n21+aa.y*y.n22+aa.z*y.n23)*0.5+0.5;aa.copy(C.vertexNormalsWorld[1]);I=(aa.x*y.n11+aa.y*y.n12+aa.z*y.n13)*0.5+0.5;S=-(aa.x*y.n21+aa.y*y.n22+aa.z*y.n23)*0.5+0.5;aa.copy(C.vertexNormalsWorld[2]);
v=(aa.x*y.n11+aa.y*y.n12+aa.z*y.n13)*0.5+0.5;E=-(aa.x*y.n21+aa.y*y.n22+aa.z*y.n23)*0.5+0.5;wa(L,N,Z,O,J,h,M.env_map.image,G,H,I,S,v,E)}}else M.wireframe?Ba(M.color.__styleString,M.wireframe_linewidth):Ca(M.color.__styleString);else if(M instanceof THREE.MeshLambertMaterial){if(M.map&&!M.wireframe){M.map.mapping instanceof THREE.UVMapping&&wa(L,N,Z,O,J,h,M.map.image,C.uvs[0].u,C.uvs[0].v,C.uvs[1].u,C.uvs[1].v,C.uvs[2].u,C.uvs[2].v);c(THREE.SubtractiveBlending)}if(F)if(!M.wireframe&&M.shading==THREE.SmoothShading&&
C.vertexNormalsWorld.length==3){o.r=i.r=j.r=ga.r;o.g=i.g=j.g=ga.g;o.b=i.b=j.b=ga.b;Aa($,C.v1.positionWorld,C.vertexNormalsWorld[0],o);Aa($,C.v2.positionWorld,C.vertexNormalsWorld[1],i);Aa($,C.v3.positionWorld,C.vertexNormalsWorld[2],j);m.r=(i.r+j.r)*0.5;m.g=(i.g+j.g)*0.5;m.b=(i.b+j.b)*0.5;K=Ka(o,i,j,m);wa(L,N,Z,O,J,h,K,0,0,1,0,0,1)}else{Y.r=ga.r;Y.g=ga.g;Y.b=ga.b;Aa($,C.centroidWorld,C.normalWorld,Y);k.r=M.color.r*Y.r;k.g=M.color.g*Y.g;k.b=M.color.b*Y.b;k.updateStyleString();M.wireframe?Ba(k.__styleString,
M.wireframe_linewidth):Ca(k.__styleString)}else M.wireframe?Ba(M.color.__styleString,M.wireframe_linewidth):Ca(M.color.__styleString)}else if(M instanceof THREE.MeshDepthMaterial){z=na.near;w=na.far;o.r=o.g=o.b=1-Fa(y.positionScreen.z,z,w);i.r=i.g=i.b=1-Fa(X.positionScreen.z,z,w);j.r=j.g=j.b=1-Fa(P.positionScreen.z,z,w);m.r=(i.r+j.r)*0.5;m.g=(i.g+j.g)*0.5;m.b=(i.b+j.b)*0.5;K=Ka(o,i,j,m);wa(L,N,Z,O,J,h,K,0,0,1,0,0,1)}else if(M instanceof THREE.MeshNormalMaterial){k.r=Ga(C.normalWorld.x);k.g=Ga(C.normalWorld.y);
k.b=Ga(C.normalWorld.z);k.updateStyleString();M.wireframe?Ba(k.__styleString,M.wireframe_linewidth):Ca(k.__styleString)}}}function Ba(y,X){if(R!=y)q.strokeStyle=R=y;if(T!=X)q.lineWidth=T=X;q.stroke();u.inflate(X*2)}function Ca(y){if(W!=y)q.fillStyle=W=y;q.fill()}function wa(y,X,P,C,M,$,ca,ea,fa,ka,ia,la,xa){var qa,ma;qa=ca.width-1;ma=ca.height-1;ea*=qa;fa*=ma;ka*=qa;ia*=ma;la*=qa;xa*=ma;P-=y;C-=X;M-=y;$-=X;ka-=ea;ia-=fa;la-=ea;xa-=fa;ma=1/(ka*xa-la*ia);qa=(xa*P-ia*M)*ma;ia=(xa*C-ia*$)*ma;P=(ka*M-
la*P)*ma;C=(ka*$-la*C)*ma;y=y-qa*ea-P*fa;X=X-ia*ea-C*fa;q.save();q.transform(qa,ia,P,C,y,X);q.clip();q.drawImage(ca,0,0);q.restore()}function Ka(y,X,P,C){var M=~~(y.r*255),$=~~(y.g*255);y=~~(y.b*255);var ca=~~(X.r*255),ea=~~(X.g*255);X=~~(X.b*255);var fa=~~(P.r*255),ka=~~(P.g*255);P=~~(P.b*255);var ia=~~(C.r*255),la=~~(C.g*255);C=~~(C.b*255);ha[0]=M<0?0:M>255?255:M;ha[1]=$<0?0:$>255?255:$;ha[2]=y<0?0:y>255?255:y;ha[4]=ca<0?0:ca>255?255:ca;ha[5]=ea<0?0:ea>255?255:ea;ha[6]=X<0?0:X>255?255:X;ha[8]=fa<
0?0:fa>255?255:fa;ha[9]=ka<0?0:ka>255?255:ka;ha[10]=P<0?0:P>255?255:P;ha[12]=ia<0?0:ia>255?255:ia;ha[13]=la<0?0:la>255?255:la;ha[14]=C<0?0:C>255?255:C;ua.putImageData(Ea,0,0);za.drawImage(ta,0,0);return va}function Fa(y,X,P){y=(y-X)/(P-X);return y*y*(3-2*y)}function Ga(y){y=(y+1)*0.5;return y<0?0:y>1?1:y}function Ha(y,X){var P=X.x-y.x,C=X.y-y.y,M=1/Math.sqrt(P*P+C*C);P*=M;C*=M;X.x+=P;X.y+=C;y.x-=P;y.y-=C}var Da,La,ba,ja,sa,Ia,Ma,ya;q.setTransform(1,0,0,-1,t,p);this.autoClear&&this.clear();f=e.projectScene(da,
na,this.sortElements);(F=da.lights.length>0)&&Oa(da);Da=0;for(La=f.length;Da<La;Da++){ba=f[Da];u.empty();if(ba instanceof THREE.RenderableParticle){s=ba;s.x*=t;s.y*=p;ja=0;for(sa=ba.materials.length;ja<sa;ja++)Pa(s,ba,ba.materials[ja],da)}else if(ba instanceof THREE.RenderableLine){s=ba.v1;Q=ba.v2;s.positionScreen.x*=t;s.positionScreen.y*=p;Q.positionScreen.x*=t;Q.positionScreen.y*=p;u.addPoint(s.positionScreen.x,s.positionScreen.y);u.addPoint(Q.positionScreen.x,Q.positionScreen.y);if(U.instersects(u)){ja=
0;for(sa=ba.materials.length;ja<sa;)Qa(s,Q,ba,ba.materials[ja++],da)}}else if(ba instanceof THREE.RenderableFace3){s=ba.v1;Q=ba.v2;D=ba.v3;s.positionScreen.x*=t;s.positionScreen.y*=p;Q.positionScreen.x*=t;Q.positionScreen.y*=p;D.positionScreen.x*=t;D.positionScreen.y*=p;if(ba.overdraw){Ha(s.positionScreen,Q.positionScreen);Ha(Q.positionScreen,D.positionScreen);Ha(D.positionScreen,s.positionScreen)}u.add3Points(s.positionScreen.x,s.positionScreen.y,Q.positionScreen.x,Q.positionScreen.y,D.positionScreen.x,
D.positionScreen.y);if(U.instersects(u)){ja=0;for(sa=ba.meshMaterials.length;ja<sa;){ya=ba.meshMaterials[ja++];if(ya instanceof THREE.MeshFaceMaterial){Ia=0;for(Ma=ba.faceMaterials.length;Ia<Ma;)(ya=ba.faceMaterials[Ia++])&&Ja(s,Q,D,ba,ya,da)}else Ja(s,Q,D,ba,ya,da)}}}V.addRectangle(u)}q.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(G,H,I){var S,v,E,U;S=0;for(v=G.lights.length;S<v;S++){E=G.lights[S];if(E instanceof THREE.DirectionalLight){U=H.normalWorld.dot(E.position)*E.intensity;if(U>0){I.r+=E.color.r*U;I.g+=E.color.g*U;I.b+=E.color.b*U}}else if(E instanceof THREE.PointLight){h.sub(E.position,H.centroidWorld);h.normalize();U=H.normalWorld.dot(h)*E.intensity;if(U>0){I.r+=E.color.r*U;I.g+=E.color.g*U;I.b+=E.color.b*U}}}}function c(G,H,I,S,v,E){j=e(m++);j.setAttribute("d","M "+G.positionScreen.x+
" "+G.positionScreen.y+" L "+H.positionScreen.x+" "+H.positionScreen.y+" L "+I.positionScreen.x+","+I.positionScreen.y+"z");if(v instanceof THREE.MeshBasicMaterial)D.__styleString=v.color.__styleString;else if(v instanceof THREE.MeshLambertMaterial)if(Q){L.r=N.r;L.g=N.g;L.b=N.b;a(E,S,L);D.r=v.color.r*L.r;D.g=v.color.g*L.g;D.b=v.color.b*L.b;D.updateStyleString()}else D.__styleString=v.color.__styleString;else if(v instanceof THREE.MeshDepthMaterial){J=1-v.__2near/(v.__farPlusNear-S.z*v.__farMinusNear);
D.setRGB(J,J,J)}else v instanceof THREE.MeshNormalMaterial&&D.setRGB(l(S.normalWorld.x),l(S.normalWorld.y),l(S.normalWorld.z));v.wireframe?j.setAttribute("style","fill: none; stroke: "+D.__styleString+"; stroke-width: "+v.wireframe_linewidth+"; stroke-opacity: "+v.opacity+"; stroke-linecap: "+v.wireframe_linecap+"; stroke-linejoin: "+v.wireframe_linejoin):j.setAttribute("style","fill: "+D.__styleString+"; fill-opacity: "+v.opacity);t.appendChild(j)}function f(G,H,I,S,v,E,U){j=e(m++);j.setAttribute("d",
"M "+G.positionScreen.x+" "+G.positionScreen.y+" L "+H.positionScreen.x+" "+H.positionScreen.y+" L "+I.positionScreen.x+","+I.positionScreen.y+" L "+S.positionScreen.x+","+S.positionScreen.y+"z");if(E instanceof THREE.MeshBasicMaterial)D.__styleString=E.color.__styleString;else if(E instanceof THREE.MeshLambertMaterial)if(Q){L.r=N.r;L.g=N.g;L.b=N.b;a(U,v,L);D.r=E.color.r*L.r;D.g=E.color.g*L.g;D.b=E.color.b*L.b;D.updateStyleString()}else D.__styleString=E.color.__styleString;else if(E instanceof THREE.MeshDepthMaterial){J=
1-E.__2near/(E.__farPlusNear-v.z*E.__farMinusNear);D.setRGB(J,J,J)}else E instanceof THREE.MeshNormalMaterial&&D.setRGB(l(v.normalWorld.x),l(v.normalWorld.y),l(v.normalWorld.z));E.wireframe?j.setAttribute("style","fill: none; stroke: "+D.__styleString+"; stroke-width: "+E.wireframe_linewidth+"; stroke-opacity: "+E.opacity+"; stroke-linecap: "+E.wireframe_linecap+"; stroke-linejoin: "+E.wireframe_linejoin):j.setAttribute("style","fill: "+D.__styleString+"; fill-opacity: "+E.opacity);t.appendChild(j)}
function e(G){if(k[G]==null){k[G]=document.createElementNS("http://www.w3.org/2000/svg","path");K==0&&k[G].setAttribute("shape-rendering","crispEdges");return k[G]}return k[G]}function l(G){return G<0?Math.min((1+G)*0.5,0.5):0.5+Math.min(G*0.5,0.5)}var n=null,r=new THREE.Projector,t=document.createElementNS("http://www.w3.org/2000/svg","svg"),p,q,A,d,x,B,R,W,T=new THREE.Rectangle,s=new THREE.Rectangle,Q=false,D=new THREE.Color(16777215),L=new THREE.Color(16777215),N=new THREE.Color(0),Z=new THREE.Color(0),
O=new THREE.Color(0),J,h=new THREE.Vector3,k=[],o=[],i=[],j,m,z,w,K=1;this.domElement=t;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(G){switch(G){case "high":K=1;break;case "low":K=0}};this.setSize=function(G,H){p=G;q=H;A=p/2;d=q/2;t.setAttribute("viewBox",-A+" "+-d+" "+p+" "+q);t.setAttribute("width",p);t.setAttribute("height",q);T.set(-A,-d,A,d)};this.clear=function(){for(;t.childNodes.length>0;)t.removeChild(t.childNodes[0])};this.render=function(G,H){var I,S,
v,E,U,V,u,F;this.autoClear&&this.clear();n=r.projectScene(G,H,this.sortElements);w=z=m=0;if(Q=G.lights.length>0){u=G.lights;N.setRGB(0,0,0);Z.setRGB(0,0,0);O.setRGB(0,0,0);I=0;for(S=u.length;I<S;I++){v=u[I];E=v.color;if(v instanceof THREE.AmbientLight){N.r+=E.r;N.g+=E.g;N.b+=E.b}else if(v instanceof THREE.DirectionalLight){Z.r+=E.r;Z.g+=E.g;Z.b+=E.b}else if(v instanceof THREE.PointLight){O.r+=E.r;O.g+=E.g;O.b+=E.b}}}I=0;for(S=n.length;I<S;I++){u=n[I];s.empty();if(u instanceof THREE.RenderableParticle){x=
u;x.x*=A;x.y*=-d;v=0;for(E=u.materials.length;v<E;v++)if(F=u.materials[v]){U=x;V=u;F=F;var Y=z++;if(o[Y]==null){o[Y]=document.createElementNS("http://www.w3.org/2000/svg","circle");K==0&&o[Y].setAttribute("shape-rendering","crispEdges")}j=o[Y];j.setAttribute("cx",U.x);j.setAttribute("cy",U.y);j.setAttribute("r",V.scale.x*A);if(F instanceof THREE.ParticleCircleMaterial){if(Q){L.r=N.r+Z.r+O.r;L.g=N.g+Z.g+O.g;L.b=N.b+Z.b+O.b;D.r=F.color.r*L.r;D.g=F.color.g*L.g;D.b=F.color.b*L.b;D.updateStyleString()}else D=
F.color;j.setAttribute("style","fill: "+D.__styleString)}t.appendChild(j)}}else if(u instanceof THREE.RenderableLine){x=u.v1;B=u.v2;x.positionScreen.x*=A;x.positionScreen.y*=-d;B.positionScreen.x*=A;B.positionScreen.y*=-d;s.addPoint(x.positionScreen.x,x.positionScreen.y);s.addPoint(B.positionScreen.x,B.positionScreen.y);if(T.instersects(s)){v=0;for(E=u.materials.length;v<E;)if(F=u.materials[v++]){U=x;V=B;F=F;Y=w++;if(i[Y]==null){i[Y]=document.createElementNS("http://www.w3.org/2000/svg","line");K==
0&&i[Y].setAttribute("shape-rendering","crispEdges")}j=i[Y];j.setAttribute("x1",U.positionScreen.x);j.setAttribute("y1",U.positionScreen.y);j.setAttribute("x2",V.positionScreen.x);j.setAttribute("y2",V.positionScreen.y);if(F instanceof THREE.LineBasicMaterial){D.__styleString=F.color.__styleString;j.setAttribute("style","fill: none; stroke: "+D.__styleString+"; stroke-width: "+F.linewidth+"; stroke-opacity: "+F.opacity+"; stroke-linecap: "+F.linecap+"; stroke-linejoin: "+F.linejoin);t.appendChild(j)}}}}else if(u instanceof
THREE.RenderableFace3){x=u.v1;B=u.v2;R=u.v3;x.positionScreen.x*=A;x.positionScreen.y*=-d;B.positionScreen.x*=A;B.positionScreen.y*=-d;R.positionScreen.x*=A;R.positionScreen.y*=-d;s.addPoint(x.positionScreen.x,x.positionScreen.y);s.addPoint(B.positionScreen.x,B.positionScreen.y);s.addPoint(R.positionScreen.x,R.positionScreen.y);if(T.instersects(s)){v=0;for(E=u.meshMaterials.length;v<E;){F=u.meshMaterials[v++];if(F instanceof THREE.MeshFaceMaterial){U=0;for(V=u.faceMaterials.length;U<V;)(F=u.faceMaterials[U++])&&
c(x,B,R,u,F,G)}else F&&c(x,B,R,u,F,G)}}}else if(u instanceof THREE.RenderableFace4){x=u.v1;B=u.v2;R=u.v3;W=u.v4;x.positionScreen.x*=A;x.positionScreen.y*=-d;B.positionScreen.x*=A;B.positionScreen.y*=-d;R.positionScreen.x*=A;R.positionScreen.y*=-d;W.positionScreen.x*=A;W.positionScreen.y*=-d;s.addPoint(x.positionScreen.x,x.positionScreen.y);s.addPoint(B.positionScreen.x,B.positionScreen.y);s.addPoint(R.positionScreen.x,R.positionScreen.y);s.addPoint(W.positionScreen.x,W.positionScreen.y);if(T.instersects(s)){v=
0;for(E=u.meshMaterials.length;v<E;){F=u.meshMaterials[v++];if(F instanceof THREE.MeshFaceMaterial){U=0;for(V=u.faceMaterials.length;U<V;)(F=u.faceMaterials[U++])&&f(x,B,R,W,u,F,G)}else F&&f(x,B,R,W,u,F,G)}}}}}};
THREE.WebGLRenderer=function(a){function c(h,k){h.fragment_shader=k.fragment_shader;h.vertex_shader=k.vertex_shader;h.uniforms=Uniforms.clone(k.uniforms)}function f(h,k){h.uniforms.color.value.setRGB(h.color.r*h.opacity,h.color.g*h.opacity,h.color.b*h.opacity);h.uniforms.opacity.value=h.opacity;h.uniforms.map.texture=h.map;h.uniforms.env_map.texture=h.env_map;h.uniforms.reflectivity.value=h.reflectivity;h.uniforms.refraction_ratio.value=h.refraction_ratio;h.uniforms.combine.value=h.combine;h.uniforms.useRefract.value=
h.env_map&&h.env_map.mapping instanceof THREE.CubeRefractionMapping;if(k){h.uniforms.fogColor.value.setHex(k.color.hex);if(k instanceof THREE.Fog){h.uniforms.fogNear.value=k.near;h.uniforms.fogFar.value=k.far}else if(k instanceof THREE.FogExp2)h.uniforms.fogDensity.value=k.density}}function e(h,k,o){var i=d.createProgram(),j=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+o.maxDirLights,"#define MAX_POINT_LIGHTS "+o.maxPointLights,o.fog?"#define USE_FOG":"",o.fog instanceof
THREE.FogExp2?"#define FOG_EXP2":"",o.map?"#define USE_MAP":"",o.env_map?"#define USE_ENVMAP":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");o=[d.getParameter(d.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+o.maxDirLights,"#define MAX_POINT_LIGHTS "+o.maxPointLights,o.map?"#define USE_MAP":"",o.env_map?"#define USE_ENVMAP":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n"].join("\n");
d.attachShader(i,p("fragment",j+h));d.attachShader(i,p("vertex",o+k));d.linkProgram(i);d.getProgramParameter(i,d.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+d.getProgramParameter(i,d.VALIDATE_STATUS)+", gl error ["+d.getError()+"]");i.uniforms={};i.attributes={};return i}function l(h,k){if(h.image.length==6){if(!h.image.__webGLTextureCube&&!h.image.__cubeMapInitialized&&h.image.loadCount==6){h.image.__webGLTextureCube=d.createTexture();d.bindTexture(d.TEXTURE_CUBE_MAP,h.image.__webGLTextureCube);
d.texParameteri(d.TEXTURE_CUBE_MAP,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE);d.texParameteri(d.TEXTURE_CUBE_MAP,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE);d.texParameteri(d.TEXTURE_CUBE_MAP,d.TEXTURE_MAG_FILTER,d.LINEAR);d.texParameteri(d.TEXTURE_CUBE_MAP,d.TEXTURE_MIN_FILTER,d.LINEAR_MIPMAP_LINEAR);for(var o=0;o<6;++o)d.texImage2D(d.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,h.image[o]);d.generateMipmap(d.TEXTURE_CUBE_MAP);d.bindTexture(d.TEXTURE_CUBE_MAP,null);h.image.__cubeMapInitialized=true}d.activeTexture(d.TEXTURE0+
k);d.bindTexture(d.TEXTURE_CUBE_MAP,h.image.__webGLTextureCube)}}function n(h,k){if(!h.__webGLTexture&&h.image.loaded){h.__webGLTexture=d.createTexture();d.bindTexture(d.TEXTURE_2D,h.__webGLTexture);d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,h.image);d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,q(h.wrap_s));d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,q(h.wrap_t));d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,q(h.mag_filter));d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,
q(h.min_filter));d.generateMipmap(d.TEXTURE_2D);d.bindTexture(d.TEXTURE_2D,null)}d.activeTexture(d.TEXTURE0+k);d.bindTexture(d.TEXTURE_2D,h.__webGLTexture)}function r(h,k){var o,i,j;o=0;for(i=k.length;o<i;o++){j=k[o];h.uniforms[j]=d.getUniformLocation(h,j)}}function t(h,k){var o,i,j;o=0;for(i=k.length;o<i;o++){j=k[o];h.attributes[j]=d.getAttribLocation(h,j)}}function p(h,k){var o;if(h=="fragment")o=d.createShader(d.FRAGMENT_SHADER);else if(h=="vertex")o=d.createShader(d.VERTEX_SHADER);d.shaderSource(o,
k);d.compileShader(o);if(!d.getShaderParameter(o,d.COMPILE_STATUS)){alert(d.getShaderInfoLog(o));return null}return o}function q(h){switch(h){case THREE.RepeatWrapping:return d.REPEAT;case THREE.ClampToEdgeWrapping:return d.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return d.MIRRORED_REPEAT;case THREE.NearestFilter:return d.NEAREST;case THREE.NearestMipMapNearestFilter:return d.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return d.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return d.LINEAR;
case THREE.LinearMipMapNearestFilter:return d.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return d.LINEAR_MIPMAP_LINEAR}return 0}var A=document.createElement("canvas"),d,x,B,R=new THREE.Matrix4,W,T=new Float32Array(16),s=new Float32Array(16),Q=new Float32Array(16),D=new Float32Array(9),L=new Float32Array(16),N=function(h,k){if(h){var o,i,j,m=pointLights=maxDirLights=maxPointLights=0;o=0;for(i=h.lights.length;o<i;o++){j=h.lights[o];j instanceof THREE.DirectionalLight&&m++;j instanceof
THREE.PointLight&&pointLights++}if(pointLights+m<=k){maxDirLights=m;maxPointLights=pointLights}else{maxDirLights=Math.ceil(k*m/(pointLights+m));maxPointLights=k-maxDirLights}return{directional:maxDirLights,point:maxPointLights}}return{directional:1,point:k-1}}(a.scene,4),Z=a.scene?a.scene.fog:null,O=a.antialias!=undefined?a.antialias:true,J=a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0);a=a.clearAlpha?a.clearAlpha:0;this.domElement=A;this.autoClear=true;(function(h,k,o){try{d=A.getContext("experimental-webgl",
{antialias:h})}catch(i){}if(!d){alert("WebGL not supported");throw"cannot create webgl context";}d.clearColor(0,0,0,1);d.clearDepth(1);d.enable(d.DEPTH_TEST);d.depthFunc(d.LEQUAL);d.frontFace(d.CCW);d.cullFace(d.BACK);d.enable(d.CULL_FACE);d.enable(d.BLEND);d.blendFunc(d.ONE,d.ONE_MINUS_SRC_ALPHA);d.clearColor(k.r,k.g,k.b,o)})(O,J,a);x=B=function(h,k,o){var i=["#define PHONG\nuniform bool useRefract;",THREE.Snippets.lights_pars_vertex,"varying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vReflect;\nuniform float mRefractionRatio;\nvoid main(void) {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec3 transformedNormal = normalize( normalMatrix * normal );",
THREE.Snippets.lights_vertex,"vNormal = transformedNormal;\nvUv = uv;\nif ( useRefract ) {\nvReflect = refract( normalize(mPosition.xyz - cameraPosition), normalize(nWorld.xyz), mRefractionRatio );\n} else {\nvReflect = reflect( normalize(mPosition.xyz - cameraPosition), normalize(nWorld.xyz) );\n}\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),j=["uniform int material;\nuniform bool enableMap;\nuniform bool enableCubeMap;\nuniform bool mixEnvMap;\nuniform samplerCube tCube;\nuniform float mReflectivity;\nuniform sampler2D tMap;\nuniform vec4 mColor;\nuniform float mOpacity;\nuniform vec4 mAmbient;\nuniform vec4 mSpecular;\nuniform float mShininess;",
THREE.Snippets.fog_pars_fragment,"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vLightWeighting;\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vReflect;\nvoid main() {\nvec4 mapColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nvec4 cubeColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nif ( enableMap ) {\nmapColor = texture2D( tMap, vUv );\n}\nif ( enableCubeMap ) {\ncubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n}\nif ( material == 2 ) { \nvec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, mShininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, mShininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = mAmbient;\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif\nif ( mixEnvMap ) {\ngl_FragColor = vec4( mix( mapColor.rgb * totalLight.xyz * vLightWeighting, cubeColor.rgb, mReflectivity ), mapColor.a );\n} else {\ngl_FragColor = vec4( mapColor.rgb * cubeColor.rgb * totalLight.xyz * vLightWeighting, mapColor.a );\n}\n}",
THREE.Snippets.fog_fragment,"}"].join("\n");i=e(j,i,{fog:o,maxDirLights:h,maxPointLights:k});d.useProgram(i);r(i,["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","enableLighting","ambientLightColor","material","mColor","mAmbient","mSpecular","mShininess","mOpacity","enableMap","tMap","enableCubeMap","tCube","mixEnvMap","mReflectivity","mRefractionRatio","useRefract"]);o&&r(i,["fogColor","fogNear","fogFar","fogDensity"]);h&&r(i,["directionalLightColor",
"directionalLightDirection"]);k&&r(i,["pointLightColor","pointLightPosition"]);d.uniform1i(i.uniforms.enableMap,0);d.uniform1i(i.uniforms.tMap,0);d.uniform1i(i.uniforms.enableCubeMap,0);d.uniform1i(i.uniforms.tCube,1);d.uniform1i(i.uniforms.mixEnvMap,0);d.uniform1i(i.uniforms.useRefract,0);t(i,["position","normal","uv"]);return i}(N.directional,N.point,Z);this.setSize=function(h,k){A.width=h;A.height=k;d.viewport(0,0,A.width,A.height)};this.setClearColor=function(h,k){var o=new THREE.Color(h);d.clearColor(o.r,
o.g,o.b,k)};this.clear=function(){d.clear(d.COLOR_BUFFER_BIT|d.DEPTH_BUFFER_BIT)};this.setupLights=function(h,k){var o,i,j,m=g=b=0,z=[],w=[],K=[],G=[];o=0;for(i=k.length;o<i;o++){j=k[o];if(j instanceof THREE.AmbientLight){m+=j.color.r;g+=j.color.g;b+=j.color.b}else if(j instanceof THREE.DirectionalLight){z.push(j.color.r*j.intensity,j.color.g*j.intensity,j.color.b*j.intensity);w.push(j.position.x,j.position.y,j.position.z)}else if(j instanceof THREE.PointLight){K.push(j.color.r*j.intensity,j.color.g*
j.intensity,j.color.b*j.intensity);G.push(j.position.x,j.position.y,j.position.z)}}return{ambient:[m,g,b],directional:{colors:z,positions:w},point:{colors:K,positions:G}}};this.createBuffers=function(h,k){var o,i,j,m,z,w,K,G,H,I=[],S=[],v=[],E=[],U=[],V=[],u=0,F=h.geometry.geometryChunks[k],Y;j=false;o=0;for(i=h.materials.length;o<i;o++){meshMaterial=h.materials[o];if(meshMaterial instanceof THREE.MeshFaceMaterial){z=0;for(Y=F.materials.length;z<Y;z++)if(F.materials[z]&&F.materials[z].shading!=undefined&&
F.materials[z].shading==THREE.SmoothShading){j=true;break}}else if(meshMaterial&&meshMaterial.shading!=undefined&&meshMaterial.shading==THREE.SmoothShading){j=true;break}if(j)break}Y=j;o=0;for(i=F.faces.length;o<i;o++){j=F.faces[o];m=h.geometry.faces[j];z=m.vertexNormals;faceNormal=m.normal;j=h.geometry.uvs[j];if(m instanceof THREE.Face3){w=h.geometry.vertices[m.a].position;K=h.geometry.vertices[m.b].position;G=h.geometry.vertices[m.c].position;v.push(w.x,w.y,w.z);v.push(K.x,K.y,K.z);v.push(G.x,G.y,
G.z);if(h.geometry.hasTangents){w=h.geometry.vertices[m.a].tangent;K=h.geometry.vertices[m.b].tangent;G=h.geometry.vertices[m.c].tangent;U.push(w.x,w.y,w.z,w.w);U.push(K.x,K.y,K.z,K.w);U.push(G.x,G.y,G.z,G.w)}if(z.length==3&&Y)for(m=0;m<3;m++)E.push(z[m].x,z[m].y,z[m].z);else for(m=0;m<3;m++)E.push(faceNormal.x,faceNormal.y,faceNormal.z);if(j)for(m=0;m<3;m++)V.push(j[m].u,j[m].v);I.push(u,u+1,u+2);S.push(u,u+1);S.push(u,u+2);S.push(u+1,u+2);u+=3}else if(m instanceof THREE.Face4){w=h.geometry.vertices[m.a].position;
K=h.geometry.vertices[m.b].position;G=h.geometry.vertices[m.c].position;H=h.geometry.vertices[m.d].position;v.push(w.x,w.y,w.z);v.push(K.x,K.y,K.z);v.push(G.x,G.y,G.z);v.push(H.x,H.y,H.z);if(h.geometry.hasTangents){w=h.geometry.vertices[m.a].tangent;K=h.geometry.vertices[m.b].tangent;G=h.geometry.vertices[m.c].tangent;m=h.geometry.vertices[m.d].tangent;U.push(w.x,w.y,w.z,w.w);U.push(K.x,K.y,K.z,K.w);U.push(G.x,G.y,G.z,G.w);U.push(m.x,m.y,m.z,m.w)}if(z.length==4&&Y)for(m=0;m<4;m++)E.push(z[m].x,z[m].y,
z[m].z);else for(m=0;m<4;m++)E.push(faceNormal.x,faceNormal.y,faceNormal.z);if(j)for(m=0;m<4;m++)V.push(j[m].u,j[m].v);I.push(u,u+1,u+2);I.push(u,u+2,u+3);S.push(u,u+1);S.push(u,u+2);S.push(u,u+3);S.push(u+1,u+2);S.push(u+2,u+3);u+=4}}if(v.length){F.__webGLVertexBuffer=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,F.__webGLVertexBuffer);d.bufferData(d.ARRAY_BUFFER,new Float32Array(v),d.STATIC_DRAW);F.__webGLNormalBuffer=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,F.__webGLNormalBuffer);d.bufferData(d.ARRAY_BUFFER,
new Float32Array(E),d.STATIC_DRAW);if(h.geometry.hasTangents){F.__webGLTangentBuffer=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,F.__webGLTangentBuffer);d.bufferData(d.ARRAY_BUFFER,new Float32Array(U),d.STATIC_DRAW)}if(V.length>0){F.__webGLUVBuffer=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,F.__webGLUVBuffer);d.bufferData(d.ARRAY_BUFFER,new Float32Array(V),d.STATIC_DRAW)}F.__webGLFaceBuffer=d.createBuffer();d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,F.__webGLFaceBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,
new Uint16Array(I),d.STATIC_DRAW);F.__webGLLineBuffer=d.createBuffer();d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,F.__webGLLineBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,new Uint16Array(S),d.STATIC_DRAW);F.__webGLFaceCount=I.length;F.__webGLLineCount=S.length}};this.renderBuffer=function(h,k,o,i,j){var m,z,w,K,G,H,I,S,v;if(i instanceof THREE.MeshShaderMaterial||i instanceof THREE.MeshDepthMaterial||i instanceof THREE.MeshNormalMaterial||i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial){if(!i.program){if(i instanceof
THREE.MeshDepthMaterial){c(i,THREE.ShaderLib.depth);i.uniforms.mNear.value=h.near;i.uniforms.mFar.value=h.far}else if(i instanceof THREE.MeshNormalMaterial)c(i,THREE.ShaderLib.normal);else if(i instanceof THREE.MeshBasicMaterial){c(i,THREE.ShaderLib.basic);f(i,o)}else if(i instanceof THREE.MeshLambertMaterial){c(i,THREE.ShaderLib.lambert);f(i,o)}I={fog:o,map:i.map,env_map:i.env_map,maxDirLights:N.directional,maxPointLights:N.point};i.program=e(i.fragment_shader,i.vertex_shader,I);I=["viewMatrix",
"modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(v in i.uniforms)I.push(v);r(i.program,I);t(i.program,["position","normal","uv","tangent"])}v=i.program}else v=B;if(v!=x){d.useProgram(v);x=v}if(v==B||i instanceof THREE.MeshLambertMaterial){k=this.setupLights(v,k);if(v==B){d.uniform1i(v.uniforms.enableLighting,k.directional.positions.length+k.point.positions.length||k.ambient[0]||k.ambient[1]||k.ambient[2]);d.uniform3fv(v.uniforms.ambientLightColor,k.ambient);
if(k.directional.positions.length){d.uniform3fv(v.uniforms.directionalLightDirection,k.directional.positions);d.uniform3fv(v.uniforms.directionalLightColor,k.directional.colors)}if(k.point.positions.length){d.uniform3fv(v.uniforms.pointLightPosition,k.point.positions);d.uniform3fv(v.uniforms.pointLightColor,k.point.colors)}}else{i.uniforms.enableLighting.value=k.directional.positions.length+k.point.positions.length;i.uniforms.ambientLightColor.value=k.ambient;i.uniforms.directionalLightColor.value=
k.directional.colors;i.uniforms.directionalLightDirection.value=k.directional.positions;i.uniforms.pointLightColor.value=k.point.colors;i.uniforms.pointLightPosition.value=k.point.positions}}this.loadCamera(v,h);this.loadMatrices(v);if(i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial)f(i,o);if(i instanceof THREE.MeshShaderMaterial||i instanceof THREE.MeshDepthMaterial||i instanceof THREE.MeshNormalMaterial||i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial){w=
i.wireframe;K=i.wireframe_linewidth;h=v;k=i.uniforms;var E;for(m in k){S=k[m].type;I=k[m].value;E=h.uniforms[m];if(S=="i")d.uniform1i(E,I);else if(S=="f")d.uniform1f(E,I);else if(S=="fv")d.uniform3fv(E,I);else if(S=="v3")d.uniform3f(E,I.x,I.y,I.z);else if(S=="c")d.uniform3f(E,I.r,I.g,I.b);else if(S=="t"){d.uniform1i(E,I);if(S=k[m].texture)S.image instanceof Array&&S.image.length==6?l(S,I):n(S,I)}}}if(i instanceof THREE.MeshPhongMaterial){m=i.color;z=i.opacity;w=i.wireframe;K=i.wireframe_linewidth;
G=i.map;H=i.env_map;k=i.combine==THREE.MixOperation;h=i.reflectivity;S=i.env_map&&i.env_map.mapping instanceof THREE.CubeRefractionMapping;I=i.refraction_ratio;d.uniform4f(v.uniforms.mColor,m.r*z,m.g*z,m.b*z,z);d.uniform1i(v.uniforms.mixEnvMap,k);d.uniform1f(v.uniforms.mReflectivity,h);d.uniform1i(v.uniforms.useRefract,S);d.uniform1f(v.uniforms.mRefractionRatio,I);if(o){d.uniform3f(v.uniforms.fogColor,o.color.r,o.color.g,o.color.b);if(o instanceof THREE.Fog){d.uniform1f(v.uniforms.fogNear,o.near);
d.uniform1f(v.uniforms.fogFar,o.far)}else o instanceof THREE.FogExp2&&d.uniform1f(v.uniforms.fogDensity,o.density)}}if(i instanceof THREE.MeshPhongMaterial){o=i.ambient;m=i.specular;i=i.shininess;d.uniform4f(v.uniforms.mAmbient,o.r,o.g,o.b,z);d.uniform4f(v.uniforms.mSpecular,m.r,m.g,m.b,z);d.uniform1f(v.uniforms.mShininess,i);d.uniform1i(v.uniforms.material,2)}if(G){n(G,0);d.uniform1i(v.uniforms.tMap,0);d.uniform1i(v.uniforms.enableMap,1)}else d.uniform1i(v.uniforms.enableMap,0);if(H){l(H,1);d.uniform1i(v.uniforms.tCube,
1);d.uniform1i(v.uniforms.enableCubeMap,1)}else d.uniform1i(v.uniforms.enableCubeMap,0);z=v.attributes;d.bindBuffer(d.ARRAY_BUFFER,j.__webGLVertexBuffer);d.vertexAttribPointer(z.position,3,d.FLOAT,false,0,0);d.enableVertexAttribArray(z.position);if(z.normal>=0){d.bindBuffer(d.ARRAY_BUFFER,j.__webGLNormalBuffer);d.vertexAttribPointer(z.normal,3,d.FLOAT,false,0,0);d.enableVertexAttribArray(z.normal)}if(z.tangent>=0){d.bindBuffer(d.ARRAY_BUFFER,j.__webGLTangentBuffer);d.vertexAttribPointer(z.tangent,
4,d.FLOAT,false,0,0);d.enableVertexAttribArray(z.tangent)}if(z.uv>=0)if(j.__webGLUVBuffer){d.bindBuffer(d.ARRAY_BUFFER,j.__webGLUVBuffer);d.vertexAttribPointer(z.uv,2,d.FLOAT,false,0,0);d.enableVertexAttribArray(z.uv)}else d.disableVertexAttribArray(z.uv);if(w){d.lineWidth(K);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,j.__webGLLineBuffer);d.drawElements(d.LINES,j.__webGLLineCount,d.UNSIGNED_SHORT,0)}else{d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,j.__webGLFaceBuffer);d.drawElements(d.TRIANGLES,j.__webGLFaceCount,
d.UNSIGNED_SHORT,0)}};this.renderPass=function(h,k,o,i,j,m,z){var w,K,G,H,I;G=0;for(H=i.materials.length;G<H;G++){w=i.materials[G];if(w instanceof THREE.MeshFaceMaterial){w=0;for(K=j.materials.length;w<K;w++)if((I=j.materials[w])&&I.blending==m&&I.opacity<1==z){this.setBlending(I.blending);this.renderBuffer(h,k,o,I,j)}}else if((I=w)&&I.blending==m&&I.opacity<1==z){this.setBlending(I.blending);this.renderBuffer(h,k,o,I,j)}}};this.render=function(h,k){var o,i,j,m,z=h.lights,w=h.fog;this.initWebGLObjects(h);
this.autoClear&&this.clear();k.autoUpdateMatrix&&k.updateMatrix();T.set(k.matrix.flatten());Q.set(k.projectionMatrix.flatten());o=0;for(i=h.__webGLObjects.length;o<i;o++){j=h.__webGLObjects[o];m=j.object;j=j.buffer;if(m.visible){this.setupMatrices(m,k);this.renderPass(k,z,w,m,j,THREE.NormalBlending,false)}}o=0;for(i=h.__webGLObjects.length;o<i;o++){j=h.__webGLObjects[o];m=j.object;j=j.buffer;if(m.visible){this.setupMatrices(m,k);this.renderPass(k,z,w,m,j,THREE.AdditiveBlending,false);this.renderPass(k,
z,w,m,j,THREE.SubtractiveBlending,false);this.renderPass(k,z,w,m,j,THREE.AdditiveBlending,true);this.renderPass(k,z,w,m,j,THREE.SubtractiveBlending,true);this.renderPass(k,z,w,m,j,THREE.NormalBlending,true)}}};this.initWebGLObjects=function(h){var k,o,i,j,m,z;if(!h.__webGLObjects){h.__webGLObjects=[];h.__webGLObjectsMap={}}k=0;for(o=h.objects.length;k<o;k++){i=h.objects[k];if(h.__webGLObjectsMap[i.id]==undefined)h.__webGLObjectsMap[i.id]={};z=h.__webGLObjectsMap[i.id];if(i instanceof THREE.Mesh)for(m in i.geometry.geometryChunks){j=
i.geometry.geometryChunks[m];j.__webGLVertexBuffer||this.createBuffers(i,m);if(z[m]==undefined){j={buffer:j,object:i};h.__webGLObjects.push(j);z[m]=1}}}};this.removeObject=function(h,k){var o,i;for(o=h.__webGLObjects.length-1;o>=0;o--){i=h.__webGLObjects[o].object;k==i&&h.__webGLObjects.splice(o,1)}};this.setupMatrices=function(h,k){h.autoUpdateMatrix&&h.updateMatrix();R.multiply(k.matrix,h.matrix);s.set(R.flatten());W=THREE.Matrix4.makeInvert3x3(R).transpose();D.set(W.m);L.set(h.matrix.flatten())};
this.loadMatrices=function(h){d.uniformMatrix4fv(h.uniforms.viewMatrix,false,T);d.uniformMatrix4fv(h.uniforms.modelViewMatrix,false,s);d.uniformMatrix4fv(h.uniforms.projectionMatrix,false,Q);d.uniformMatrix3fv(h.uniforms.normalMatrix,false,D);d.uniformMatrix4fv(h.uniforms.objectMatrix,false,L)};this.loadCamera=function(h,k){d.uniform3f(h.uniforms.cameraPosition,k.position.x,k.position.y,k.position.z)};this.setBlending=function(h){switch(h){case THREE.AdditiveBlending:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.ONE,
d.ONE);break;case THREE.SubtractiveBlending:d.blendFunc(d.DST_COLOR,d.ZERO);break;default:d.blendEquation(d.FUNC_ADD);d.blendFunc(d.ONE,d.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=function(h,k){if(h){!k||k=="ccw"?d.frontFace(d.CCW):d.frontFace(d.CW);if(h=="back")d.cullFace(d.BACK);else h=="front"?d.cullFace(d.FRONT):d.cullFace(d.FRONT_AND_BACK);d.enable(d.CULL_FACE)}else d.disable(d.CULL_FACE)};this.supportsVertexTextures=function(){return d.getParameter(d.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, 1.0 ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\ncubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = mix( gl_FragColor, cubeColor, reflectivity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif",
envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",
map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0, 1.0, 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}"};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",
vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},
fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},fragment_shader:["uniform vec3 color;\nuniform float opacity;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nvec4 cubeColor = vec4( 1.0, 1.0, 1.0, 1.0 );",THREE.Snippets.map_fragment,"gl_FragColor = mColor * mapColor;",
THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},lambert:{uniforms:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},env_map:{type:"t",value:1,
texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)},enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",
value:[]}},fragment_shader:["uniform vec3 color;\nuniform float opacity;\nvarying vec3 vLightWeighting;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nvec4 cubeColor = vec4( 1.0, 1.0, 1.0, 1.0 );",THREE.Snippets.map_fragment,"gl_FragColor =  mColor * mapColor * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,
"}"].join("\n"),vertex_shader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")}};
THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
