// Three.js r32 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,b,e){this.r=a;this.g=b;this.b=e;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+
","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,b,e){this.x=a||0;this.y=b||0;this.z=e||0};
THREE.Vector3.prototype={set:function(a,b,e){this.x=a;this.y=b;this.z=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,e=this.y,f=this.z;this.x=e*a.z-f*a.y;this.y=f*a.x-b*a.z;this.z=b*a.y-e*a.x;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=
a.z;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var b=this.x-a.x,e=this.y-a.y;a=this.z-a.z;return Math.sqrt(b*b+e*e+a*a)},distanceToSquared:function(a){var b=this.x-a.x,e=this.y-a.y;a=this.z-a.z;return b*b+e*e+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=
-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,b,e,f){this.x=a||0;this.y=b||0;this.z=e||0;this.w=f||1};
THREE.Vector4.prototype={set:function(a,b,e,f){this.x=a;this.y=b;this.z=e;this.w=f;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,b){this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var b,e,f=a.objects,g=[];a=0;for(b=f.length;a<b;a++){e=f[a];if(e instanceof THREE.Mesh)g=g.concat(this.intersectObject(e))}g.sort(function(j,q){return j.distance-q.distance});return g},intersectObject:function(a){function b(T,s,R,d){d=d.clone().subSelf(s);R=R.clone().subSelf(s);var h=T.clone().subSelf(s);T=d.dot(d);s=d.dot(R);d=d.dot(h);var m=R.dot(R);R=R.dot(h);h=1/(T*m-s*s);m=(m*d-s*R)*h;T=(T*R-s*d)*h;return m>0&&T>0&&m+T<1}var e,f,g,j,q,c,k,n,D,E,
z,C=a.geometry,S=C.vertices,V=[];e=0;for(f=C.faces.length;e<f;e++){g=C.faces[e];E=this.origin.clone();z=this.direction.clone();j=a.matrix.multiplyVector3(S[g.a].position.clone());q=a.matrix.multiplyVector3(S[g.b].position.clone());c=a.matrix.multiplyVector3(S[g.c].position.clone());k=g instanceof THREE.Face4?a.matrix.multiplyVector3(S[g.d].position.clone()):null;n=a.rotationMatrix.multiplyVector3(g.normal.clone());D=z.dot(n);if(D<0){n=n.dot((new THREE.Vector3).sub(j,E))/D;E=E.addSelf(z.multiplyScalar(n));
if(g instanceof THREE.Face3){if(b(E,j,q,c)){g={distance:this.origin.distanceTo(E),point:E,face:g,object:a};V.push(g)}}else if(g instanceof THREE.Face4)if(b(E,j,q,k)||b(E,q,c,k)){g={distance:this.origin.distanceTo(E),point:E,face:g,object:a};V.push(g)}}}return V}};
THREE.Rectangle=function(){function a(){j=f-b;q=g-e}var b,e,f,g,j,q,c=true;this.getX=function(){return b};this.getY=function(){return e};this.getWidth=function(){return j};this.getHeight=function(){return q};this.getLeft=function(){return b};this.getTop=function(){return e};this.getRight=function(){return f};this.getBottom=function(){return g};this.set=function(k,n,D,E){c=false;b=k;e=n;f=D;g=E;a()};this.addPoint=function(k,n){if(c){c=false;b=k;e=n;f=k;g=n}else{b=b<k?b:k;e=e<n?e:n;f=f>k?f:k;g=g>n?
g:n}a()};this.add3Points=function(k,n,D,E,z,C){if(c){c=false;b=k<D?k<z?k:z:D<z?D:z;e=n<E?n<C?n:C:E<C?E:C;f=k>D?k>z?k:z:D>z?D:z;g=n>E?n>C?n:C:E>C?E:C}else{b=k<D?k<z?k<b?k:b:z<b?z:b:D<z?D<b?D:b:z<b?z:b;e=n<E?n<C?n<e?n:e:C<e?C:e:E<C?E<e?E:e:C<e?C:e;f=k>D?k>z?k>f?k:f:z>f?z:f:D>z?D>f?D:f:z>f?z:f;g=n>E?n>C?n>g?n:g:C>g?C:g:E>C?E>g?E:g:C>g?C:g}a()};this.addRectangle=function(k){if(c){c=false;b=k.getLeft();e=k.getTop();f=k.getRight();g=k.getBottom()}else{b=b<k.getLeft()?b:k.getLeft();e=e<k.getTop()?e:k.getTop();
f=f>k.getRight()?f:k.getRight();g=g>k.getBottom()?g:k.getBottom()}a()};this.inflate=function(k){b-=k;e-=k;f+=k;g+=k;a()};this.minSelf=function(k){b=b>k.getLeft()?b:k.getLeft();e=e>k.getTop()?e:k.getTop();f=f<k.getRight()?f:k.getRight();g=g<k.getBottom()?g:k.getBottom();a()};this.instersects=function(k){return Math.min(f,k.getRight())-Math.max(b,k.getLeft())>=0&&Math.min(g,k.getBottom())-Math.max(e,k.getTop())>=0};this.empty=function(){c=true;g=f=e=b=0;a()};this.isEmpty=function(){return c};this.toString=
function(){return"THREE.Rectangle ( left: "+b+", right: "+f+", top: "+e+", bottom: "+g+", width: "+j+", height: "+q+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a;a=this.m[1];this.m[1]=this.m[3];this.m[3]=a;a=this.m[2];this.m[2]=this.m[6];this.m[6]=a;a=this.m[5];this.m[5]=this.m[7];this.m[7]=a;return this}};
THREE.Matrix4=function(a,b,e,f,g,j,q,c,k,n,D,E,z,C,S,V){this.n11=a||1;this.n12=b||0;this.n13=e||0;this.n14=f||0;this.n21=g||0;this.n22=j||1;this.n23=q||0;this.n24=c||0;this.n31=k||0;this.n32=n||0;this.n33=D||1;this.n34=E||0;this.n41=z||0;this.n42=C||0;this.n43=S||0;this.n44=V||1};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,b,e,f,g,j,q,c,k,n,D,E,z,C,S,V){this.n11=a;this.n12=b;this.n13=e;this.n14=f;this.n21=g;this.n22=j;this.n23=q;this.n24=c;this.n31=k;this.n32=n;this.n33=D;this.n34=E;this.n41=z;this.n42=C;this.n43=S;this.n44=V;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,b,e){var f=new THREE.Vector3,g=new THREE.Vector3,j=new THREE.Vector3;j.sub(a,b).normalize();f.cross(e,j).normalize();g.cross(j,f).normalize();this.n11=f.x;this.n12=f.y;this.n13=f.z;this.n14=-f.dot(a);this.n21=g.x;this.n22=g.y;this.n23=g.z;this.n24=-g.dot(a);this.n31=j.x;
this.n32=j.y;this.n33=j.z;this.n34=-j.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var b=a.x,e=a.y,f=a.z,g=1/(this.n41*b+this.n42*e+this.n43*f+this.n44);a.x=(this.n11*b+this.n12*e+this.n13*f+this.n14)*g;a.y=(this.n21*b+this.n22*e+this.n23*f+this.n24)*g;a.z=(this.n31*b+this.n32*e+this.n33*f+this.n34)*g;return a},multiplyVector4:function(a){var b=a.x,e=a.y,f=a.z,g=a.w;a.x=this.n11*b+this.n12*e+this.n13*f+this.n14*g;a.y=this.n21*b+this.n22*e+this.n23*f+this.n24*
g;a.z=this.n31*b+this.n32*e+this.n33*f+this.n34*g;a.w=this.n41*b+this.n42*e+this.n43*f+this.n44*g;return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},multiply:function(a,b){var e=a.n11,f=a.n12,g=a.n13,j=a.n14,q=a.n21,c=a.n22,k=a.n23,n=a.n24,D=a.n31,E=a.n32,
z=a.n33,C=a.n34,S=a.n41,V=a.n42,T=a.n43,s=a.n44,R=b.n11,d=b.n12,h=b.n13,m=b.n14,o=b.n21,p=b.n22,v=b.n23,r=b.n24,l=b.n31,x=b.n32,t=b.n33,i=b.n34,u=b.n41,I=b.n42,A=b.n43,L=b.n44;this.n11=e*R+f*o+g*l+j*u;this.n12=e*d+f*p+g*x+j*I;this.n13=e*h+f*v+g*t+j*A;this.n14=e*m+f*r+g*i+j*L;this.n21=q*R+c*o+k*l+n*u;this.n22=q*d+c*p+k*x+n*I;this.n23=q*h+c*v+k*t+n*A;this.n24=q*m+c*r+k*i+n*L;this.n31=D*R+E*o+z*l+C*u;this.n32=D*d+E*p+z*x+C*I;this.n33=D*h+E*v+z*t+C*A;this.n34=D*m+E*r+z*i+C*L;this.n41=S*R+V*o+T*l+s*u;
this.n42=S*d+V*p+T*x+s*I;this.n43=S*h+V*v+T*t+s*A;this.n44=S*m+V*r+T*i+s*L;return this},multiplySelf:function(a){var b=this.n11,e=this.n12,f=this.n13,g=this.n14,j=this.n21,q=this.n22,c=this.n23,k=this.n24,n=this.n31,D=this.n32,E=this.n33,z=this.n34,C=this.n41,S=this.n42,V=this.n43,T=this.n44,s=a.n11,R=a.n21,d=a.n31,h=a.n41,m=a.n12,o=a.n22,p=a.n32,v=a.n42,r=a.n13,l=a.n23,x=a.n33,t=a.n43,i=a.n14,u=a.n24,I=a.n34;a=a.n44;this.n11=b*s+e*R+f*d+g*h;this.n12=b*m+e*o+f*p+g*v;this.n13=b*r+e*l+f*x+g*t;this.n14=
b*i+e*u+f*I+g*a;this.n21=j*s+q*R+c*d+k*h;this.n22=j*m+q*o+c*p+k*v;this.n23=j*r+q*l+c*x+k*t;this.n24=j*i+q*u+c*I+k*a;this.n31=n*s+D*R+E*d+z*h;this.n32=n*m+D*o+E*p+z*v;this.n33=n*r+D*l+E*x+z*t;this.n34=n*i+D*u+E*I+z*a;this.n41=C*s+S*R+V*d+T*h;this.n42=C*m+S*o+V*p+T*v;this.n43=C*r+S*l+V*x+T*t;this.n44=C*i+S*u+V*I+T*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=
a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){return this.n14*this.n23*this.n32*this.n41-this.n13*this.n24*this.n32*this.n41-this.n14*this.n22*this.n33*this.n41+this.n12*this.n24*this.n33*this.n41+this.n13*this.n22*this.n34*this.n41-this.n12*this.n23*this.n34*this.n41-this.n14*this.n23*this.n31*this.n42+this.n13*this.n24*this.n31*this.n42+this.n14*this.n21*this.n33*this.n42-this.n11*this.n24*this.n33*this.n42-this.n13*this.n21*this.n34*this.n42+this.n11*this.n23*this.n34*
this.n42+this.n14*this.n22*this.n31*this.n43-this.n12*this.n24*this.n31*this.n43-this.n14*this.n21*this.n32*this.n43+this.n11*this.n24*this.n32*this.n43+this.n12*this.n21*this.n34*this.n43-this.n11*this.n22*this.n34*this.n43-this.n13*this.n22*this.n31*this.n44+this.n12*this.n23*this.n31*this.n44+this.n13*this.n21*this.n32*this.n44-this.n11*this.n23*this.n32*this.n44-this.n12*this.n21*this.n33*this.n44+this.n11*this.n22*this.n33*this.n44},transpose:function(){function a(b,e,f){var g=b[e];b[e]=b[f];
b[f]=g}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){return[this.n11,this.n21,this.n31,this.n41,this.n12,
this.n22,this.n32,this.n42,this.n13,this.n23,this.n33,this.n43,this.n14,this.n24,this.n34,this.n44]},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,b,e){var f=new THREE.Matrix4;f.n14=a;f.n24=b;f.n34=e;return f};
THREE.Matrix4.scaleMatrix=function(a,b,e){var f=new THREE.Matrix4;f.n11=a;f.n22=b;f.n33=e;return f};THREE.Matrix4.rotationXMatrix=function(a){var b=new THREE.Matrix4;b.n22=b.n33=Math.cos(a);b.n32=Math.sin(a);b.n23=-b.n32;return b};THREE.Matrix4.rotationYMatrix=function(a){var b=new THREE.Matrix4;b.n11=b.n33=Math.cos(a);b.n13=Math.sin(a);b.n31=-b.n13;return b};THREE.Matrix4.rotationZMatrix=function(a){var b=new THREE.Matrix4;b.n11=b.n22=Math.cos(a);b.n21=Math.sin(a);b.n12=-b.n21;return b};
THREE.Matrix4.rotationAxisAngleMatrix=function(a,b){var e=new THREE.Matrix4,f=Math.cos(b),g=Math.sin(b),j=1-f,q=a.x,c=a.y,k=a.z;e.n11=j*q*q+f;e.n12=j*q*c-g*k;e.n13=j*q*k+g*c;e.n21=j*q*c+g*k;e.n22=j*c*c+f;e.n23=j*c*k-g*q;e.n31=j*q*k-g*c;e.n32=j*c*k+g*q;e.n33=j*k*k+f;return e};
THREE.Matrix4.makeInvert=function(a){var b=new THREE.Matrix4;b.n11=a.n23*a.n34*a.n42-a.n24*a.n33*a.n42+a.n24*a.n32*a.n43-a.n22*a.n34*a.n43-a.n23*a.n32*a.n44+a.n22*a.n33*a.n44;b.n12=a.n14*a.n33*a.n42-a.n13*a.n34*a.n42-a.n14*a.n32*a.n43+a.n12*a.n34*a.n43+a.n13*a.n32*a.n44-a.n12*a.n33*a.n44;b.n13=a.n13*a.n24*a.n42-a.n14*a.n23*a.n42+a.n14*a.n22*a.n43-a.n12*a.n24*a.n43-a.n13*a.n22*a.n44+a.n12*a.n23*a.n44;b.n14=a.n14*a.n23*a.n32-a.n13*a.n24*a.n32-a.n14*a.n22*a.n33+a.n12*a.n24*a.n33+a.n13*a.n22*a.n34-a.n12*
a.n23*a.n34;b.n21=a.n24*a.n33*a.n41-a.n23*a.n34*a.n41-a.n24*a.n31*a.n43+a.n21*a.n34*a.n43+a.n23*a.n31*a.n44-a.n21*a.n33*a.n44;b.n22=a.n13*a.n34*a.n41-a.n14*a.n33*a.n41+a.n14*a.n31*a.n43-a.n11*a.n34*a.n43-a.n13*a.n31*a.n44+a.n11*a.n33*a.n44;b.n23=a.n14*a.n23*a.n41-a.n13*a.n24*a.n41-a.n14*a.n21*a.n43+a.n11*a.n24*a.n43+a.n13*a.n21*a.n44-a.n11*a.n23*a.n44;b.n24=a.n13*a.n24*a.n31-a.n14*a.n23*a.n31+a.n14*a.n21*a.n33-a.n11*a.n24*a.n33-a.n13*a.n21*a.n34+a.n11*a.n23*a.n34;b.n31=a.n22*a.n34*a.n41-a.n24*a.n32*
a.n41+a.n24*a.n31*a.n42-a.n21*a.n34*a.n42-a.n22*a.n31*a.n44+a.n21*a.n32*a.n44;b.n32=a.n14*a.n32*a.n41-a.n12*a.n34*a.n41-a.n14*a.n31*a.n42+a.n11*a.n34*a.n42+a.n12*a.n31*a.n44-a.n11*a.n32*a.n44;b.n33=a.n13*a.n24*a.n41-a.n14*a.n22*a.n41+a.n14*a.n21*a.n42-a.n11*a.n24*a.n42-a.n12*a.n21*a.n44+a.n11*a.n22*a.n44;b.n34=a.n14*a.n22*a.n31-a.n12*a.n24*a.n31-a.n14*a.n21*a.n32+a.n11*a.n24*a.n32+a.n12*a.n21*a.n34-a.n11*a.n22*a.n34;b.n41=a.n23*a.n32*a.n41-a.n22*a.n33*a.n41-a.n23*a.n31*a.n42+a.n21*a.n33*a.n42+a.n22*
a.n31*a.n43-a.n21*a.n32*a.n43;b.n42=a.n12*a.n33*a.n41-a.n13*a.n32*a.n41+a.n13*a.n31*a.n42-a.n11*a.n33*a.n42-a.n12*a.n31*a.n43+a.n11*a.n32*a.n43;b.n43=a.n13*a.n22*a.n41-a.n12*a.n23*a.n41-a.n13*a.n21*a.n42+a.n11*a.n23*a.n42+a.n12*a.n21*a.n43-a.n11*a.n22*a.n43;b.n44=a.n12*a.n23*a.n31-a.n13*a.n22*a.n31+a.n13*a.n21*a.n32-a.n11*a.n23*a.n32-a.n12*a.n21*a.n33+a.n11*a.n22*a.n33;b.multiplyScalar(1/a.determinant());return b};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.flatten();a=new THREE.Matrix3;var e=b[10]*b[5]-b[6]*b[9],f=-b[10]*b[1]+b[2]*b[9],g=b[6]*b[1]-b[2]*b[5],j=-b[10]*b[4]+b[6]*b[8],q=b[10]*b[0]-b[2]*b[8],c=-b[6]*b[0]+b[2]*b[4],k=b[9]*b[4]-b[5]*b[8],n=-b[9]*b[0]+b[1]*b[8],D=b[5]*b[0]-b[1]*b[4];b=b[0]*e+b[1]*j+b[2]*k;if(b==0)throw"matrix not invertible";b=1/b;a.m[0]=b*e;a.m[1]=b*f;a.m[2]=b*g;a.m[3]=b*j;a.m[4]=b*q;a.m[5]=b*c;a.m[6]=b*k;a.m[7]=b*n;a.m[8]=b*D;return a};
THREE.Matrix4.makeFrustum=function(a,b,e,f,g,j){var q,c,k;q=new THREE.Matrix4;c=2*g/(b-a);k=2*g/(f-e);a=(b+a)/(b-a);e=(f+e)/(f-e);f=-(j+g)/(j-g);g=-2*j*g/(j-g);q.n11=c;q.n12=0;q.n13=a;q.n14=0;q.n21=0;q.n22=k;q.n23=e;q.n24=0;q.n31=0;q.n32=0;q.n33=f;q.n34=g;q.n41=0;q.n42=0;q.n43=-1;q.n44=0;return q};THREE.Matrix4.makePerspective=function(a,b,e,f){var g;a=e*Math.tan(a*Math.PI/360);g=-a;return THREE.Matrix4.makeFrustum(g*b,a*b,g,a,e,f)};
THREE.Matrix4.makeOrtho=function(a,b,e,f,g,j){var q,c,k,n;q=new THREE.Matrix4;c=b-a;k=e-f;n=j-g;a=(b+a)/c;e=(e+f)/k;g=(j+g)/n;q.n11=2/c;q.n12=0;q.n13=0;q.n14=-a;q.n21=0;q.n22=2/k;q.n23=0;q.n24=-e;q.n31=0;q.n32=0;q.n33=-2/n;q.n34=-g;q.n41=0;q.n42=0;q.n43=0;q.n44=1;return q};
THREE.Vertex=function(a,b){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=b||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,b,e,f,g){this.a=a;this.b=b;this.c=e;this.centroid=new THREE.Vector3;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.materials=g instanceof Array?g:[g]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,b,e,f,g,j){this.a=a;this.b=b;this.c=e;this.d=f;this.centroid=new THREE.Vector3;this.normal=g instanceof THREE.Vector3?g:new THREE.Vector3;this.vertexNormals=g instanceof Array?g:[];this.materials=j instanceof Array?j:[j]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,b,e;a=0;for(b=this.faces.length;a<b;a++){e=this.faces[a];e.centroid.set(0,0,0);if(e instanceof THREE.Face3){e.centroid.addSelf(this.vertices[e.a].position);e.centroid.addSelf(this.vertices[e.b].position);e.centroid.addSelf(this.vertices[e.c].position);e.centroid.divideScalar(3)}else if(e instanceof THREE.Face4){e.centroid.addSelf(this.vertices[e.a].position);e.centroid.addSelf(this.vertices[e.b].position);e.centroid.addSelf(this.vertices[e.c].position);
e.centroid.addSelf(this.vertices[e.d].position);e.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var b,e,f,g,j,q,c=new THREE.Vector3,k=new THREE.Vector3;f=0;for(g=this.vertices.length;f<g;f++){j=this.vertices[f];j.normal.set(0,0,0)}f=0;for(g=this.faces.length;f<g;f++){j=this.faces[f];if(a&&j.vertexNormals.length){c.set(0,0,0);b=0;for(e=j.normal.length;b<e;b++)c.addSelf(j.vertexNormals[b]);c.divideScalar(3)}else{b=this.vertices[j.a];e=this.vertices[j.b];q=this.vertices[j.c];c.sub(q.position,
e.position);k.sub(b.position,e.position);c.crossSelf(k)}c.isZero()||c.normalize();j.normal.copy(c)}},computeVertexNormals:function(){var a,b,e,f;if(this.__tmpVertices==undefined){f=this.__tmpVertices=Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)f[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++){e=this.faces[a];if(e instanceof THREE.Face3)e.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(e instanceof THREE.Face4)e.vertexNormals=[new THREE.Vector3,
new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}}else{f=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)f[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++){e=this.faces[a];if(e instanceof THREE.Face3){f[e.a].addSelf(e.normal);f[e.b].addSelf(e.normal);f[e.c].addSelf(e.normal)}else if(e instanceof THREE.Face4){f[e.a].addSelf(e.normal);f[e.b].addSelf(e.normal);f[e.c].addSelf(e.normal);f[e.d].addSelf(e.normal)}}a=0;for(b=this.vertices.length;a<b;a++)f[a].normalize();a=0;for(b=this.faces.length;a<
b;a++){e=this.faces[a];if(e instanceof THREE.Face3){e.vertexNormals[0].copy(f[e.a]);e.vertexNormals[1].copy(f[e.b]);e.vertexNormals[2].copy(f[e.c])}else if(e instanceof THREE.Face4){e.vertexNormals[0].copy(f[e.a]);e.vertexNormals[1].copy(f[e.b]);e.vertexNormals[2].copy(f[e.c]);e.vertexNormals[3].copy(f[e.d])}}},computeTangents:function(){function a(i,u,I,A,L,N,K){j=i.vertices[u].position;q=i.vertices[I].position;c=i.vertices[A].position;k=g[L];n=g[N];D=g[K];E=q.x-j.x;z=c.x-j.x;C=q.y-j.y;S=c.y-j.y;
V=q.z-j.z;T=c.z-j.z;s=n.u-k.u;R=D.u-k.u;d=n.v-k.v;h=D.v-k.v;m=1/(s*h-R*d);v.set((h*E-d*z)*m,(h*C-d*S)*m,(h*V-d*T)*m);r.set((s*z-R*E)*m,(s*S-R*C)*m,(s*T-R*V)*m);o[u].addSelf(v);o[I].addSelf(v);o[A].addSelf(v);p[u].addSelf(r);p[I].addSelf(r);p[A].addSelf(r)}var b,e,f,g,j,q,c,k,n,D,E,z,C,S,V,T,s,R,d,h,m,o=[],p=[],v=new THREE.Vector3,r=new THREE.Vector3,l=new THREE.Vector3,x=new THREE.Vector3,t=new THREE.Vector3;b=0;for(e=this.vertices.length;b<e;b++){o[b]=new THREE.Vector3;p[b]=new THREE.Vector3}b=0;
for(e=this.faces.length;b<e;b++){f=this.faces[b];g=this.uvs[b];if(f instanceof THREE.Face3){a(this,f.a,f.b,f.c,0,1,2);this.vertices[f.a].normal.copy(f.vertexNormals[0]);this.vertices[f.b].normal.copy(f.vertexNormals[1]);this.vertices[f.c].normal.copy(f.vertexNormals[2])}else if(f instanceof THREE.Face4){a(this,f.a,f.b,f.c,0,1,2);a(this,f.a,f.b,f.d,0,1,3);this.vertices[f.a].normal.copy(f.vertexNormals[0]);this.vertices[f.b].normal.copy(f.vertexNormals[1]);this.vertices[f.c].normal.copy(f.vertexNormals[2]);
this.vertices[f.d].normal.copy(f.vertexNormals[3])}}b=0;for(e=this.vertices.length;b<e;b++){t.copy(this.vertices[b].normal);f=o[b];l.copy(f);l.subSelf(t.multiplyScalar(t.dot(f))).normalize();x.cross(this.vertices[b].normal,f);f=x.dot(p[b]);f=f<0?-1:1;this.vertices[b].tangent.set(l.x,l.y,l.z,f)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],
z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,e=this.vertices.length;b<e;b++){a=this.vertices[b];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>
this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,b=0,e=this.vertices.length;b<e;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(D){var E=[];b=0;for(e=D.length;b<e;b++)D[b]==undefined?E.push("undefined"):E.push(D[b].toString());return E.join("_")}var b,e,f,g,j,q,c,k,n={};f=0;for(g=this.faces.length;f<g;f++){j=this.faces[f];
q=j.materials;c=a(q);if(n[c]==undefined)n[c]={hash:c,counter:0};k=n[c].hash+"_"+n[c].counter;if(this.geometryChunks[k]==undefined)this.geometryChunks[k]={faces:[],materials:q,vertices:0};j=j instanceof THREE.Face3?3:4;if(this.geometryChunks[k].vertices+j>65535){n[c].counter+=1;k=n[c].hash+"_"+n[c].counter;if(this.geometryChunks[k]==undefined)this.geometryChunks[k]={faces:[],materials:q,vertices:0}}this.geometryChunks[k].faces.push(f);this.geometryChunks[k].vertices+=j}},toString:function(){return"THREE.Geometry ( vertices: "+
this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,b,e,f){this.fov=a;this.aspect=b;this.near=e;this.far=f;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.translateX=function(g){g=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(g);g.cross(g.clone(),this.up);this.position.addSelf(g);this.target.position.addSelf(g)};this.translateZ=function(g){g=this.target.position.clone().subSelf(this.position).normalize().multiplyScalar(g);
this.position.subSelf(g);this.target.position.subSelf(g)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};
THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;
THREE.PointLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.translationMatrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.scaleMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){this.matrixPosition=THREE.Matrix4.translationMatrix(this.position.x,this.position.y,this.position.z);this.rotationMatrix=THREE.Matrix4.rotationXMatrix(this.rotation.x);this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationYMatrix(this.rotation.y));this.rotationMatrix.multiplySelf(THREE.Matrix4.rotationZMatrix(this.rotation.z));this.scaleMatrix=THREE.Matrix4.scaleMatrix(this.scale.x,this.scale.y,this.scale.z);this.matrix.copy(this.matrixPosition);
this.matrix.multiplySelf(this.rotationMatrix);this.matrix.multiplySelf(this.scaleMatrix)}};THREE.Object3DCounter={value:0};THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.autoUpdateMatrix=false};
THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;THREE.Line=function(a,b,e){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.type=e!=undefined?e:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+
"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=
this.wireframe_linecap="round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=
a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==
undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial"}};
THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.opacity=1;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};
THREE.Texture=function(a,b,e,f,g,j){this.image=a;this.mapping=b!==undefined?b:new THREE.UVMapping;this.wrap_s=e!==undefined?e:THREE.ClampToEdgeWrapping;this.wrap_t=f!==undefined?f:THREE.ClampToEdgeWrapping;this.mag_filter=g!==undefined?g:THREE.LinearFilter;this.min_filter=j!==undefined?j:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;var Uniforms={clone:function(a){var b,e,f,g={};for(b in a){g[b]={};for(e in a[b]){f=a[b][e];g[b][e]=f instanceof THREE.Color||f instanceof THREE.Vector3||f instanceof THREE.Texture?f.clone():f}}return g},merge:function(a){var b,e,f,g={};for(b=0;b<a.length;b++){f=this.clone(a[b]);for(e in f)g[e]=f[e]}return g}};
THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,b,e){this.color=new THREE.Color(a);this.near=b||1;this.far=e||1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b||2.5E-4};
THREE.Projector=function(){function a(p,v){return v.z-p.z}function b(p,v){var r=0,l=1,x=p.z+p.w,t=v.z+v.w,i=-p.z+p.w,u=-v.z+v.w;if(x>=0&&t>=0&&i>=0&&u>=0)return true;else if(x<0&&t<0||i<0&&u<0)return false;else{if(x<0)r=Math.max(r,x/(x-t));else if(t<0)l=Math.min(l,x/(x-t));if(i<0)r=Math.max(r,i/(i-u));else if(u<0)l=Math.min(l,i/(i-u));if(l<r)return false;else{p.lerpSelf(v,r);v.lerpSelf(p,1-l);return true}}}var e,f,g=[],j,q,c,k=[],n,D,E=[],z,C,S=[],V=new THREE.Vector4,T=new THREE.Vector4,s=new THREE.Matrix4,
R=new THREE.Matrix4,d=[],h=new THREE.Vector4,m=new THREE.Vector4,o;this.projectObjects=function(p,v,r){var l=[],x,t;f=0;s.multiply(v.projectionMatrix,v.matrix);d[0]=new THREE.Vector4(s.n41-s.n11,s.n42-s.n12,s.n43-s.n13,s.n44-s.n14);d[1]=new THREE.Vector4(s.n41+s.n11,s.n42+s.n12,s.n43+s.n13,s.n44+s.n14);d[2]=new THREE.Vector4(s.n41+s.n21,s.n42+s.n22,s.n43+s.n23,s.n44+s.n24);d[3]=new THREE.Vector4(s.n41-s.n21,s.n42-s.n22,s.n43-s.n23,s.n44-s.n24);d[4]=new THREE.Vector4(s.n41-s.n31,s.n42-s.n32,s.n43-
s.n33,s.n44-s.n34);d[5]=new THREE.Vector4(s.n41+s.n31,s.n42+s.n32,s.n43+s.n33,s.n44+s.n34);v=0;for(x=d.length;v<x;v++){t=d[v];t.divideScalar(Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z))}x=p.objects;p=0;for(v=x.length;p<v;p++){t=x[p];var i;if(!(i=!t.visible)){if(i=t instanceof THREE.Mesh){a:{i=void 0;for(var u=t.position,I=-t.geometry.boundingSphere.radius*Math.max(t.scale.x,Math.max(t.scale.y,t.scale.z)),A=0;A<6;A++){i=d[A].x*u.x+d[A].y*u.y+d[A].z*u.z+d[A].w;if(i<=I){i=false;break a}}i=true}i=!i}i=i}if(!i){e=
g[f]=g[f]||new THREE.RenderableObject;V.copy(t.position);s.multiplyVector3(V);e.object=t;e.z=V.z;l.push(e);f++}}r&&l.sort(a);return l};this.projectScene=function(p,v,r){var l=[],x=v.near,t=v.far,i,u,I,A,L,N,K,O,U,J,G,P,H,w,F,X;c=D=C=0;v.autoUpdateMatrix&&v.updateMatrix();s.multiply(v.projectionMatrix,v.matrix);N=this.projectObjects(p,v,true);p=0;for(i=N.length;p<i;p++){K=N[p].object;if(K.visible){K.autoUpdateMatrix&&K.updateMatrix();O=K.matrix;U=K.rotationMatrix;J=K.materials;G=K.overdraw;if(K instanceof
THREE.Mesh){P=K.geometry;H=P.vertices;u=0;for(I=H.length;u<I;u++){w=H[u];w.positionWorld.copy(w.position);O.multiplyVector3(w.positionWorld);A=w.positionScreen;A.copy(w.positionWorld);s.multiplyVector4(A);A.x/=A.w;A.y/=A.w;w.__visible=A.z>x&&A.z<t}P=P.faces;u=0;for(I=P.length;u<I;u++){w=P[u];if(w instanceof THREE.Face3){A=H[w.a];L=H[w.b];F=H[w.c];if(A.__visible&&L.__visible&&F.__visible)if(K.doubleSided||K.flipSided!=(F.positionScreen.x-A.positionScreen.x)*(L.positionScreen.y-A.positionScreen.y)-
(F.positionScreen.y-A.positionScreen.y)*(L.positionScreen.x-A.positionScreen.x)<0){j=k[c]=k[c]||new THREE.RenderableFace3;j.v1.positionWorld.copy(A.positionWorld);j.v2.positionWorld.copy(L.positionWorld);j.v3.positionWorld.copy(F.positionWorld);j.v1.positionScreen.copy(A.positionScreen);j.v2.positionScreen.copy(L.positionScreen);j.v3.positionScreen.copy(F.positionScreen);j.normalWorld.copy(w.normal);U.multiplyVector3(j.normalWorld);j.centroidWorld.copy(w.centroid);O.multiplyVector3(j.centroidWorld);
j.centroidScreen.copy(j.centroidWorld);s.multiplyVector3(j.centroidScreen);F=w.vertexNormals;o=j.vertexNormalsWorld;A=0;for(L=F.length;A<L;A++){X=o[A]=o[A]||new THREE.Vector3;X.copy(F[A]);U.multiplyVector3(X)}j.z=j.centroidScreen.z;j.meshMaterials=J;j.faceMaterials=w.materials;j.overdraw=G;if(K.geometry.uvs[u]){j.uvs[0]=K.geometry.uvs[u][0];j.uvs[1]=K.geometry.uvs[u][1];j.uvs[2]=K.geometry.uvs[u][2]}l.push(j);c++}}else if(w instanceof THREE.Face4){A=H[w.a];L=H[w.b];F=H[w.c];X=H[w.d];if(A.__visible&&
L.__visible&&F.__visible&&X.__visible)if(K.doubleSided||K.flipSided!=((X.positionScreen.x-A.positionScreen.x)*(L.positionScreen.y-A.positionScreen.y)-(X.positionScreen.y-A.positionScreen.y)*(L.positionScreen.x-A.positionScreen.x)<0||(L.positionScreen.x-F.positionScreen.x)*(X.positionScreen.y-F.positionScreen.y)-(L.positionScreen.y-F.positionScreen.y)*(X.positionScreen.x-F.positionScreen.x)<0)){j=k[c]=k[c]||new THREE.RenderableFace3;j.v1.positionWorld.copy(A.positionWorld);j.v2.positionWorld.copy(L.positionWorld);
j.v3.positionWorld.copy(X.positionWorld);j.v1.positionScreen.copy(A.positionScreen);j.v2.positionScreen.copy(L.positionScreen);j.v3.positionScreen.copy(X.positionScreen);j.normalWorld.copy(w.normal);U.multiplyVector3(j.normalWorld);j.centroidWorld.copy(w.centroid);O.multiplyVector3(j.centroidWorld);j.centroidScreen.copy(j.centroidWorld);s.multiplyVector3(j.centroidScreen);j.z=j.centroidScreen.z;j.meshMaterials=J;j.faceMaterials=w.materials;j.overdraw=G;if(K.geometry.uvs[u]){j.uvs[0]=K.geometry.uvs[u][0];
j.uvs[1]=K.geometry.uvs[u][1];j.uvs[2]=K.geometry.uvs[u][3]}l.push(j);c++;q=k[c]=k[c]||new THREE.RenderableFace3;q.v1.positionWorld.copy(L.positionWorld);q.v2.positionWorld.copy(F.positionWorld);q.v3.positionWorld.copy(X.positionWorld);q.v1.positionScreen.copy(L.positionScreen);q.v2.positionScreen.copy(F.positionScreen);q.v3.positionScreen.copy(X.positionScreen);q.normalWorld.copy(j.normalWorld);q.centroidWorld.copy(j.centroidWorld);q.centroidScreen.copy(j.centroidScreen);q.z=q.centroidScreen.z;q.meshMaterials=
J;q.faceMaterials=w.materials;q.overdraw=G;if(K.geometry.uvs[u]){q.uvs[0]=K.geometry.uvs[u][1];q.uvs[1]=K.geometry.uvs[u][2];q.uvs[2]=K.geometry.uvs[u][3]}l.push(q);c++}}}}else if(K instanceof THREE.Line){R.multiply(s,O);H=K.geometry.vertices;w=H[0];w.positionScreen.copy(w.position);R.multiplyVector4(w.positionScreen);u=1;for(I=H.length;u<I;u++){A=H[u];A.positionScreen.copy(A.position);R.multiplyVector4(A.positionScreen);L=H[u-1];h.copy(A.positionScreen);m.copy(L.positionScreen);if(b(h,m)){h.multiplyScalar(1/
h.w);m.multiplyScalar(1/m.w);n=E[D]=E[D]||new THREE.RenderableLine;n.v1.positionScreen.copy(h);n.v2.positionScreen.copy(m);n.z=Math.max(h.z,m.z);n.materials=K.materials;l.push(n);D++}}}else if(K instanceof THREE.Particle){T.set(K.position.x,K.position.y,K.position.z,1);s.multiplyVector4(T);T.z/=T.w;if(T.z>0&&T.z<1){z=S[C]=S[C]||new THREE.RenderableParticle;z.x=T.x/T.w;z.y=T.y/T.w;z.z=T.z;z.rotation=K.rotation.z;z.scale.x=K.scale.x*Math.abs(z.x-(T.x+v.projectionMatrix.n11)/(T.w+v.projectionMatrix.n14));
z.scale.y=K.scale.y*Math.abs(z.y-(T.y+v.projectionMatrix.n22)/(T.w+v.projectionMatrix.n24));z.materials=K.materials;l.push(z);C++}}}}r&&l.sort(a);return l};this.unprojectVector=function(p,v){var r=new THREE.Matrix4;r.multiply(THREE.Matrix4.makeInvert(v.matrix),THREE.Matrix4.makeInvert(v.projectionMatrix));r.multiplyVector3(p);return p}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,b=new THREE.Projector,e,f,g,j;this.domElement=document.createElement("div");this.setSize=function(q,c){e=q;f=c;g=e/2;j=f/2};this.render=function(q,c){var k,n,D,E,z,C,S,V;a=b.projectScene(q,c);k=0;for(n=a.length;k<n;k++){z=a[k];if(z instanceof THREE.RenderableParticle){S=z.x*g+g;V=z.y*j+j;D=0;for(E=z.material.length;D<E;D++){C=z.material[D];if(C instanceof THREE.ParticleDOMMaterial){C=C.domElement;C.style.left=S+"px";C.style.top=V+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(ea){if(z!=ea)n.globalAlpha=z=ea}function b(ea){if(C!=ea){switch(ea){case THREE.NormalBlending:n.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:n.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:n.globalCompositeOperation="darker"}C=ea}}var e=null,f=new THREE.Projector,g=document.createElement("canvas"),j,q,c,k,n=g.getContext("2d"),D=null,E=null,z=1,C=0,S=null,V=null,T=1,s,R,d,h,m,o,p,v,r,l=new THREE.Color,
x=new THREE.Color,t=new THREE.Color,i=new THREE.Color,u=new THREE.Color,I,A,L,N,K,O,U,J,G,P=new THREE.Rectangle,H=new THREE.Rectangle,w=new THREE.Rectangle,F=false,X=new THREE.Color,$=new THREE.Color,Y=new THREE.Color,ga=new THREE.Color,fa=Math.PI*2,aa=new THREE.Vector3,ka,ca,ta,ja,ra,za,ua=16;ka=document.createElement("canvas");ka.width=ka.height=2;ca=ka.getContext("2d");ca.fillStyle="rgba(0,0,0,1)";ca.fillRect(0,0,2,2);ta=ca.getImageData(0,0,2,2);ja=ta.data;ra=document.createElement("canvas");ra.width=
ra.height=ua;za=ra.getContext("2d");za.translate(-ua/2,-ua/2);za.scale(ua,ua);ua--;this.domElement=g;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(ea,qa){j=ea;q=qa;c=j/2;k=q/2;g.width=j;g.height=q;P.set(-c,-k,c,k)};this.setClearColor=function(ea,qa){D=ea!==null?new THREE.Color(ea):null;E=qa;H.set(-c,-k,c,k);n.setTransform(1,0,0,-1,c,k);this.clear()};this.clear=function(){if(!H.isEmpty()){H.inflate(1);H.minSelf(P);if(D!==null){b(THREE.NormalBlending);a(1);n.fillStyle=
"rgba("+Math.floor(D.r*255)+","+Math.floor(D.g*255)+","+Math.floor(D.b*255)+","+E+")";n.fillRect(H.getX(),H.getY(),H.getWidth(),H.getHeight())}else n.clearRect(H.getX(),H.getY(),H.getWidth(),H.getHeight());H.empty()}};this.render=function(ea,qa){function Ma(y){var W,Q,B,M=y.lights;$.setRGB(0,0,0);Y.setRGB(0,0,0);ga.setRGB(0,0,0);y=0;for(W=M.length;y<W;y++){Q=M[y];B=Q.color;if(Q instanceof THREE.AmbientLight){$.r+=B.r;$.g+=B.g;$.b+=B.b}else if(Q instanceof THREE.DirectionalLight){Y.r+=B.r;Y.g+=B.g;
Y.b+=B.b}else if(Q instanceof THREE.PointLight){ga.r+=B.r;ga.g+=B.g;ga.b+=B.b}}}function Aa(y,W,Q,B){var M,Z,da,ha,ia=y.lights;y=0;for(M=ia.length;y<M;y++){Z=ia[y];da=Z.color;ha=Z.intensity;if(Z instanceof THREE.DirectionalLight){Z=Q.dot(Z.position)*ha;if(Z>0){B.r+=da.r*Z;B.g+=da.g*Z;B.b+=da.b*Z}}else if(Z instanceof THREE.PointLight){aa.sub(Z.position,W);aa.normalize();Z=Q.dot(aa)*ha;if(Z>0){B.r+=da.r*Z;B.g+=da.g*Z;B.b+=da.b*Z}}}}function Na(y,W,Q){if(Q.opacity!=0){a(Q.opacity);b(Q.blending);var B,
M,Z,da,ha,ia;if(Q instanceof THREE.ParticleBasicMaterial){if(Q.map){da=Q.map;ha=da.width>>1;ia=da.height>>1;M=W.scale.x*c;Z=W.scale.y*k;Q=M*ha;B=Z*ia;w.set(y.x-Q,y.y-B,y.x+Q,y.y+B);if(P.instersects(w)){n.save();n.translate(y.x,y.y);n.rotate(-W.rotation);n.scale(M,-Z);n.translate(-ha,-ia);n.drawImage(da,0,0);n.restore()}}}else if(Q instanceof THREE.ParticleCircleMaterial){if(F){X.r=$.r+Y.r+ga.r;X.g=$.g+Y.g+ga.g;X.b=$.b+Y.b+ga.b;l.r=Q.color.r*X.r;l.g=Q.color.g*X.g;l.b=Q.color.b*X.b;l.updateStyleString()}else l.__styleString=
Q.color.__styleString;Q=W.scale.x*c;B=W.scale.y*k;w.set(y.x-Q,y.y-B,y.x+Q,y.y+B);if(P.instersects(w)){M=l.__styleString;if(V!=M)n.fillStyle=V=M;n.save();n.translate(y.x,y.y);n.rotate(-W.rotation);n.scale(Q,B);n.beginPath();n.arc(0,0,1,0,fa,true);n.closePath();n.fill();n.restore()}}}}function Oa(y,W,Q,B){if(B.opacity!=0){a(B.opacity);b(B.blending);n.beginPath();n.moveTo(y.positionScreen.x,y.positionScreen.y);n.lineTo(W.positionScreen.x,W.positionScreen.y);n.closePath();if(B instanceof THREE.LineBasicMaterial){l.__styleString=
B.color.__styleString;y=B.linewidth;if(T!=y)n.lineWidth=T=y;y=l.__styleString;if(S!=y)n.strokeStyle=S=y;n.stroke();w.inflate(B.linewidth*2)}}}function Ia(y,W,Q,B,M,Z){if(M.opacity!=0){a(M.opacity);b(M.blending);h=y.positionScreen.x;m=y.positionScreen.y;o=W.positionScreen.x;p=W.positionScreen.y;v=Q.positionScreen.x;r=Q.positionScreen.y;n.beginPath();n.moveTo(h,m);n.lineTo(o,p);n.lineTo(v,r);n.lineTo(h,m);n.closePath();if(M instanceof THREE.MeshBasicMaterial)if(M.map)M.map.image.loaded&&M.map.mapping instanceof
THREE.UVMapping&&wa(h,m,o,p,v,r,M.map.image,B.uvs[0].u,B.uvs[0].v,B.uvs[1].u,B.uvs[1].v,B.uvs[2].u,B.uvs[2].v);else if(M.env_map){if(M.env_map.image.loaded)if(M.env_map.mapping instanceof THREE.SphericalReflectionMapping){y=qa.matrix;aa.copy(B.vertexNormalsWorld[0]);N=(aa.x*y.n11+aa.y*y.n12+aa.z*y.n13)*0.5+0.5;K=-(aa.x*y.n21+aa.y*y.n22+aa.z*y.n23)*0.5+0.5;aa.copy(B.vertexNormalsWorld[1]);O=(aa.x*y.n11+aa.y*y.n12+aa.z*y.n13)*0.5+0.5;U=-(aa.x*y.n21+aa.y*y.n22+aa.z*y.n23)*0.5+0.5;aa.copy(B.vertexNormalsWorld[2]);
J=(aa.x*y.n11+aa.y*y.n12+aa.z*y.n13)*0.5+0.5;G=-(aa.x*y.n21+aa.y*y.n22+aa.z*y.n23)*0.5+0.5;wa(h,m,o,p,v,r,M.env_map.image,N,K,O,U,J,G)}}else M.wireframe?Ba(M.color.__styleString,M.wireframe_linewidth):Ca(M.color.__styleString);else if(M instanceof THREE.MeshLambertMaterial){if(M.map&&!M.wireframe){M.map.mapping instanceof THREE.UVMapping&&wa(h,m,o,p,v,r,M.map.image,B.uvs[0].u,B.uvs[0].v,B.uvs[1].u,B.uvs[1].v,B.uvs[2].u,B.uvs[2].v);b(THREE.SubtractiveBlending)}if(F)if(!M.wireframe&&M.shading==THREE.SmoothShading&&
B.vertexNormalsWorld.length==3){x.r=t.r=i.r=$.r;x.g=t.g=i.g=$.g;x.b=t.b=i.b=$.b;Aa(Z,B.v1.positionWorld,B.vertexNormalsWorld[0],x);Aa(Z,B.v2.positionWorld,B.vertexNormalsWorld[1],t);Aa(Z,B.v3.positionWorld,B.vertexNormalsWorld[2],i);u.r=(t.r+i.r)*0.5;u.g=(t.g+i.g)*0.5;u.b=(t.b+i.b)*0.5;L=Ja(x,t,i,u);wa(h,m,o,p,v,r,L,0,0,1,0,0,1)}else{X.r=$.r;X.g=$.g;X.b=$.b;Aa(Z,B.centroidWorld,B.normalWorld,X);l.r=M.color.r*X.r;l.g=M.color.g*X.g;l.b=M.color.b*X.b;l.updateStyleString();M.wireframe?Ba(l.__styleString,
M.wireframe_linewidth):Ca(l.__styleString)}else M.wireframe?Ba(M.color.__styleString,M.wireframe_linewidth):Ca(M.color.__styleString)}else if(M instanceof THREE.MeshDepthMaterial){I=qa.near;A=qa.far;x.r=x.g=x.b=1-Ea(y.positionScreen.z,I,A);t.r=t.g=t.b=1-Ea(W.positionScreen.z,I,A);i.r=i.g=i.b=1-Ea(Q.positionScreen.z,I,A);u.r=(t.r+i.r)*0.5;u.g=(t.g+i.g)*0.5;u.b=(t.b+i.b)*0.5;L=Ja(x,t,i,u);wa(h,m,o,p,v,r,L,0,0,1,0,0,1)}else if(M instanceof THREE.MeshNormalMaterial){l.r=Fa(B.normalWorld.x);l.g=Fa(B.normalWorld.y);
l.b=Fa(B.normalWorld.z);l.updateStyleString();M.wireframe?Ba(l.__styleString,M.wireframe_linewidth):Ca(l.__styleString)}}}function Ba(y,W){if(S!=y)n.strokeStyle=S=y;if(T!=W)n.lineWidth=T=W;n.stroke();w.inflate(W*2)}function Ca(y){if(V!=y)n.fillStyle=V=y;n.fill()}function wa(y,W,Q,B,M,Z,da,ha,ia,na,la,oa,xa){var sa,pa;sa=da.width-1;pa=da.height-1;ha*=sa;ia*=pa;na*=sa;la*=pa;oa*=sa;xa*=pa;Q-=y;B-=W;M-=y;Z-=W;na-=ha;la-=ia;oa-=ha;xa-=ia;pa=1/(na*xa-oa*la);sa=(xa*Q-la*M)*pa;la=(xa*B-la*Z)*pa;Q=(na*M-
oa*Q)*pa;B=(na*Z-oa*B)*pa;y=y-sa*ha-Q*ia;W=W-la*ha-B*ia;n.save();n.transform(sa,la,Q,B,y,W);n.clip();n.drawImage(da,0,0);n.restore()}function Ja(y,W,Q,B){var M=~~(y.r*255),Z=~~(y.g*255);y=~~(y.b*255);var da=~~(W.r*255),ha=~~(W.g*255);W=~~(W.b*255);var ia=~~(Q.r*255),na=~~(Q.g*255);Q=~~(Q.b*255);var la=~~(B.r*255),oa=~~(B.g*255);B=~~(B.b*255);ja[0]=M<0?0:M>255?255:M;ja[1]=Z<0?0:Z>255?255:Z;ja[2]=y<0?0:y>255?255:y;ja[4]=da<0?0:da>255?255:da;ja[5]=ha<0?0:ha>255?255:ha;ja[6]=W<0?0:W>255?255:W;ja[8]=ia<
0?0:ia>255?255:ia;ja[9]=na<0?0:na>255?255:na;ja[10]=Q<0?0:Q>255?255:Q;ja[12]=la<0?0:la>255?255:la;ja[13]=oa<0?0:oa>255?255:oa;ja[14]=B<0?0:B>255?255:B;ca.putImageData(ta,0,0);za.drawImage(ka,0,0);return ra}function Ea(y,W,Q){y=(y-W)/(Q-W);return y*y*(3-2*y)}function Fa(y){y=(y+1)*0.5;return y<0?0:y>1?1:y}function Ga(y,W){var Q=W.x-y.x,B=W.y-y.y,M=1/Math.sqrt(Q*Q+B*B);Q*=M;B*=M;W.x+=Q;W.y+=B;y.x-=Q;y.y-=B}var Da,Ka,ba,ma,va,Ha,La,ya;n.setTransform(1,0,0,-1,c,k);this.autoClear&&this.clear();e=f.projectScene(ea,
qa,this.sortElements);(F=ea.lights.length>0)&&Ma(ea);Da=0;for(Ka=e.length;Da<Ka;Da++){ba=e[Da];w.empty();if(ba instanceof THREE.RenderableParticle){s=ba;s.x*=c;s.y*=k;ma=0;for(va=ba.materials.length;ma<va;ma++)Na(s,ba,ba.materials[ma],ea)}else if(ba instanceof THREE.RenderableLine){s=ba.v1;R=ba.v2;s.positionScreen.x*=c;s.positionScreen.y*=k;R.positionScreen.x*=c;R.positionScreen.y*=k;w.addPoint(s.positionScreen.x,s.positionScreen.y);w.addPoint(R.positionScreen.x,R.positionScreen.y);if(P.instersects(w)){ma=
0;for(va=ba.materials.length;ma<va;)Oa(s,R,ba,ba.materials[ma++],ea)}}else if(ba instanceof THREE.RenderableFace3){s=ba.v1;R=ba.v2;d=ba.v3;s.positionScreen.x*=c;s.positionScreen.y*=k;R.positionScreen.x*=c;R.positionScreen.y*=k;d.positionScreen.x*=c;d.positionScreen.y*=k;if(ba.overdraw){Ga(s.positionScreen,R.positionScreen);Ga(R.positionScreen,d.positionScreen);Ga(d.positionScreen,s.positionScreen)}w.add3Points(s.positionScreen.x,s.positionScreen.y,R.positionScreen.x,R.positionScreen.y,d.positionScreen.x,
d.positionScreen.y);if(P.instersects(w)){ma=0;for(va=ba.meshMaterials.length;ma<va;){ya=ba.meshMaterials[ma++];if(ya instanceof THREE.MeshFaceMaterial){Ha=0;for(La=ba.faceMaterials.length;Ha<La;)(ya=ba.faceMaterials[Ha++])&&Ia(s,R,d,ba,ya,ea)}else Ia(s,R,d,ba,ya,ea)}}}H.addRectangle(w)}n.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(N,K,O){var U,J,G,P;U=0;for(J=N.lights.length;U<J;U++){G=N.lights[U];if(G instanceof THREE.DirectionalLight){P=K.normalWorld.dot(G.position)*G.intensity;if(P>0){O.r+=G.color.r*P;O.g+=G.color.g*P;O.b+=G.color.b*P}}else if(G instanceof THREE.PointLight){r.sub(G.position,K.centroidWorld);r.normalize();P=K.normalWorld.dot(r)*G.intensity;if(P>0){O.r+=G.color.r*P;O.g+=G.color.g*P;O.b+=G.color.b*P}}}}function b(N,K,O,U,J,G){i=f(u++);i.setAttribute("d","M "+N.positionScreen.x+
" "+N.positionScreen.y+" L "+K.positionScreen.x+" "+K.positionScreen.y+" L "+O.positionScreen.x+","+O.positionScreen.y+"z");if(J instanceof THREE.MeshBasicMaterial)d.__styleString=J.color.__styleString;else if(J instanceof THREE.MeshLambertMaterial)if(R){h.r=m.r;h.g=m.g;h.b=m.b;a(G,U,h);d.r=J.color.r*h.r;d.g=J.color.g*h.g;d.b=J.color.b*h.b;d.updateStyleString()}else d.__styleString=J.color.__styleString;else if(J instanceof THREE.MeshDepthMaterial){v=1-J.__2near/(J.__farPlusNear-U.z*J.__farMinusNear);
d.setRGB(v,v,v)}else J instanceof THREE.MeshNormalMaterial&&d.setRGB(g(U.normalWorld.x),g(U.normalWorld.y),g(U.normalWorld.z));J.wireframe?i.setAttribute("style","fill: none; stroke: "+d.__styleString+"; stroke-width: "+J.wireframe_linewidth+"; stroke-opacity: "+J.opacity+"; stroke-linecap: "+J.wireframe_linecap+"; stroke-linejoin: "+J.wireframe_linejoin):i.setAttribute("style","fill: "+d.__styleString+"; fill-opacity: "+J.opacity);c.appendChild(i)}function e(N,K,O,U,J,G,P){i=f(u++);i.setAttribute("d",
"M "+N.positionScreen.x+" "+N.positionScreen.y+" L "+K.positionScreen.x+" "+K.positionScreen.y+" L "+O.positionScreen.x+","+O.positionScreen.y+" L "+U.positionScreen.x+","+U.positionScreen.y+"z");if(G instanceof THREE.MeshBasicMaterial)d.__styleString=G.color.__styleString;else if(G instanceof THREE.MeshLambertMaterial)if(R){h.r=m.r;h.g=m.g;h.b=m.b;a(P,J,h);d.r=G.color.r*h.r;d.g=G.color.g*h.g;d.b=G.color.b*h.b;d.updateStyleString()}else d.__styleString=G.color.__styleString;else if(G instanceof THREE.MeshDepthMaterial){v=
1-G.__2near/(G.__farPlusNear-J.z*G.__farMinusNear);d.setRGB(v,v,v)}else G instanceof THREE.MeshNormalMaterial&&d.setRGB(g(J.normalWorld.x),g(J.normalWorld.y),g(J.normalWorld.z));G.wireframe?i.setAttribute("style","fill: none; stroke: "+d.__styleString+"; stroke-width: "+G.wireframe_linewidth+"; stroke-opacity: "+G.opacity+"; stroke-linecap: "+G.wireframe_linecap+"; stroke-linejoin: "+G.wireframe_linejoin):i.setAttribute("style","fill: "+d.__styleString+"; fill-opacity: "+G.opacity);c.appendChild(i)}
function f(N){if(l[N]==null){l[N]=document.createElementNS("http://www.w3.org/2000/svg","path");L==0&&l[N].setAttribute("shape-rendering","crispEdges");return l[N]}return l[N]}function g(N){return N<0?Math.min((1+N)*0.5,0.5):0.5+Math.min(N*0.5,0.5)}var j=null,q=new THREE.Projector,c=document.createElementNS("http://www.w3.org/2000/svg","svg"),k,n,D,E,z,C,S,V,T=new THREE.Rectangle,s=new THREE.Rectangle,R=false,d=new THREE.Color(16777215),h=new THREE.Color(16777215),m=new THREE.Color(0),o=new THREE.Color(0),
p=new THREE.Color(0),v,r=new THREE.Vector3,l=[],x=[],t=[],i,u,I,A,L=1;this.domElement=c;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(N){switch(N){case "high":L=1;break;case "low":L=0}};this.setSize=function(N,K){k=N;n=K;D=k/2;E=n/2;c.setAttribute("viewBox",-D+" "+-E+" "+k+" "+n);c.setAttribute("width",k);c.setAttribute("height",n);T.set(-D,-E,D,E)};this.clear=function(){for(;c.childNodes.length>0;)c.removeChild(c.childNodes[0])};this.render=function(N,K){var O,U,
J,G,P,H,w,F;this.autoClear&&this.clear();j=q.projectScene(N,K,this.sortElements);A=I=u=0;if(R=N.lights.length>0){w=N.lights;m.setRGB(0,0,0);o.setRGB(0,0,0);p.setRGB(0,0,0);O=0;for(U=w.length;O<U;O++){J=w[O];G=J.color;if(J instanceof THREE.AmbientLight){m.r+=G.r;m.g+=G.g;m.b+=G.b}else if(J instanceof THREE.DirectionalLight){o.r+=G.r;o.g+=G.g;o.b+=G.b}else if(J instanceof THREE.PointLight){p.r+=G.r;p.g+=G.g;p.b+=G.b}}}O=0;for(U=j.length;O<U;O++){w=j[O];s.empty();if(w instanceof THREE.RenderableParticle){z=
w;z.x*=D;z.y*=-E;J=0;for(G=w.materials.length;J<G;J++)if(F=w.materials[J]){P=z;H=w;F=F;var X=I++;if(x[X]==null){x[X]=document.createElementNS("http://www.w3.org/2000/svg","circle");L==0&&x[X].setAttribute("shape-rendering","crispEdges")}i=x[X];i.setAttribute("cx",P.x);i.setAttribute("cy",P.y);i.setAttribute("r",H.scale.x*D);if(F instanceof THREE.ParticleCircleMaterial){if(R){h.r=m.r+o.r+p.r;h.g=m.g+o.g+p.g;h.b=m.b+o.b+p.b;d.r=F.color.r*h.r;d.g=F.color.g*h.g;d.b=F.color.b*h.b;d.updateStyleString()}else d=
F.color;i.setAttribute("style","fill: "+d.__styleString)}c.appendChild(i)}}else if(w instanceof THREE.RenderableLine){z=w.v1;C=w.v2;z.positionScreen.x*=D;z.positionScreen.y*=-E;C.positionScreen.x*=D;C.positionScreen.y*=-E;s.addPoint(z.positionScreen.x,z.positionScreen.y);s.addPoint(C.positionScreen.x,C.positionScreen.y);if(T.instersects(s)){J=0;for(G=w.materials.length;J<G;)if(F=w.materials[J++]){P=z;H=C;F=F;X=A++;if(t[X]==null){t[X]=document.createElementNS("http://www.w3.org/2000/svg","line");L==
0&&t[X].setAttribute("shape-rendering","crispEdges")}i=t[X];i.setAttribute("x1",P.positionScreen.x);i.setAttribute("y1",P.positionScreen.y);i.setAttribute("x2",H.positionScreen.x);i.setAttribute("y2",H.positionScreen.y);if(F instanceof THREE.LineBasicMaterial){d.__styleString=F.color.__styleString;i.setAttribute("style","fill: none; stroke: "+d.__styleString+"; stroke-width: "+F.linewidth+"; stroke-opacity: "+F.opacity+"; stroke-linecap: "+F.linecap+"; stroke-linejoin: "+F.linejoin);c.appendChild(i)}}}}else if(w instanceof
THREE.RenderableFace3){z=w.v1;C=w.v2;S=w.v3;z.positionScreen.x*=D;z.positionScreen.y*=-E;C.positionScreen.x*=D;C.positionScreen.y*=-E;S.positionScreen.x*=D;S.positionScreen.y*=-E;s.addPoint(z.positionScreen.x,z.positionScreen.y);s.addPoint(C.positionScreen.x,C.positionScreen.y);s.addPoint(S.positionScreen.x,S.positionScreen.y);if(T.instersects(s)){J=0;for(G=w.meshMaterials.length;J<G;){F=w.meshMaterials[J++];if(F instanceof THREE.MeshFaceMaterial){P=0;for(H=w.faceMaterials.length;P<H;)(F=w.faceMaterials[P++])&&
b(z,C,S,w,F,N)}else F&&b(z,C,S,w,F,N)}}}else if(w instanceof THREE.RenderableFace4){z=w.v1;C=w.v2;S=w.v3;V=w.v4;z.positionScreen.x*=D;z.positionScreen.y*=-E;C.positionScreen.x*=D;C.positionScreen.y*=-E;S.positionScreen.x*=D;S.positionScreen.y*=-E;V.positionScreen.x*=D;V.positionScreen.y*=-E;s.addPoint(z.positionScreen.x,z.positionScreen.y);s.addPoint(C.positionScreen.x,C.positionScreen.y);s.addPoint(S.positionScreen.x,S.positionScreen.y);s.addPoint(V.positionScreen.x,V.positionScreen.y);if(T.instersects(s)){J=
0;for(G=w.meshMaterials.length;J<G;){F=w.meshMaterials[J++];if(F instanceof THREE.MeshFaceMaterial){P=0;for(H=w.faceMaterials.length;P<H;)(F=w.faceMaterials[P++])&&e(z,C,S,V,w,F,N)}else F&&e(z,C,S,V,w,F,N)}}}}}};
THREE.WebGLRenderer=function(a){function b(d,h){d.fragment_shader=h.fragment_shader;d.vertex_shader=h.vertex_shader;d.uniforms=Uniforms.clone(h.uniforms)}function e(d,h){d.uniforms.color.value.setRGB(d.color.r*d.opacity,d.color.g*d.opacity,d.color.b*d.opacity);d.uniforms.opacity.value=d.opacity;d.uniforms.map.texture=d.map;d.uniforms.env_map.texture=d.env_map;d.uniforms.reflectivity.value=d.reflectivity;d.uniforms.refraction_ratio.value=d.refraction_ratio;d.uniforms.combine.value=d.combine;d.uniforms.useRefract.value=
d.env_map&&d.env_map.mapping instanceof THREE.CubeRefractionMapping;if(h){d.uniforms.fogColor.value.setHex(h.color.hex);if(h instanceof THREE.Fog){d.uniforms.fogNear.value=h.near;d.uniforms.fogFar.value=h.far}else if(h instanceof THREE.FogExp2)d.uniforms.fogDensity.value=h.density}}function f(d,h){d.uniforms.color.value.setRGB(d.color.r*d.opacity,d.color.g*d.opacity,d.color.b*d.opacity);d.uniforms.opacity.value=d.opacity;if(h){d.uniforms.fogColor.value.setHex(h.color.hex);if(h instanceof THREE.Fog){d.uniforms.fogNear.value=
h.near;d.uniforms.fogFar.value=h.far}else if(h instanceof THREE.FogExp2)d.uniforms.fogDensity.value=h.density}}function g(d,h){var m;if(d=="fragment")m=c.createShader(c.FRAGMENT_SHADER);else if(d=="vertex")m=c.createShader(c.VERTEX_SHADER);c.shaderSource(m,h);c.compileShader(m);if(!c.getShaderParameter(m,c.COMPILE_STATUS)){alert(c.getShaderInfoLog(m));return null}return m}function j(d){switch(d){case THREE.RepeatWrapping:return c.REPEAT;case THREE.ClampToEdgeWrapping:return c.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return c.MIRRORED_REPEAT;
case THREE.NearestFilter:return c.NEAREST;case THREE.NearestMipMapNearestFilter:return c.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return c.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return c.LINEAR;case THREE.LinearMipMapNearestFilter:return c.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return c.LINEAR_MIPMAP_LINEAR}return 0}var q=document.createElement("canvas"),c,k=null,n=new THREE.Matrix4,D,E=new Float32Array(16),z=new Float32Array(16),C=new Float32Array(16),
S=new Float32Array(9),V=new Float32Array(16),T=true,s=new THREE.Color(0),R=0;if(a){if(a.antialias!==undefined)T=a.antialias;a.clearColor!==undefined&&s.setHex(a.clearColor);if(a.clearAlpha!==undefined)R=a.clearAlpha}this.domElement=q;this.autoClear=true;(function(d,h,m){try{c=q.getContext("experimental-webgl",{antialias:d})}catch(o){}if(!c){alert("WebGL not supported");throw"cannot create webgl context";}c.clearColor(0,0,0,1);c.clearDepth(1);c.enable(c.DEPTH_TEST);c.depthFunc(c.LEQUAL);c.frontFace(c.CCW);
c.cullFace(c.BACK);c.enable(c.CULL_FACE);c.enable(c.BLEND);c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA);c.clearColor(h.r,h.g,h.b,m)})(T,s,R);this.setSize=function(d,h){q.width=d;q.height=h;c.viewport(0,0,q.width,q.height)};this.setClearColor=function(d,h){var m=new THREE.Color(d);c.clearColor(m.r,m.g,m.b,h)};this.clear=function(){c.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT)};this.setupLights=function(d,h){var m,o,p,v=0,r=0,l=0,x,t,i,u=[],I=[],A=[],L=[];m=0;for(o=h.length;m<o;m++){p=h[m];x=p.color;t=
p.position;i=p.intensity;if(p instanceof THREE.AmbientLight){v+=x.r;r+=x.g;l+=x.b}else if(p instanceof THREE.DirectionalLight){u.push(x.r*i,x.g*i,x.b*i);I.push(t.x,t.y,t.z)}else if(p instanceof THREE.PointLight){A.push(x.r*i,x.g*i,x.b*i);L.push(t.x,t.y,t.z)}}return{ambient:[v,r,l],directional:{colors:u,positions:I},point:{colors:A,positions:L}}};this.createParticleBuffers=function(d){d.__webGLVertexBuffer=c.createBuffer();d.__webGLFaceBuffer=c.createBuffer()};this.createLineBuffers=function(d){d.__webGLVertexBuffer=
c.createBuffer();d.__webGLLineBuffer=c.createBuffer()};this.createMeshBuffers=function(d){d.__webGLVertexBuffer=c.createBuffer();d.__webGLNormalBuffer=c.createBuffer();d.__webGLTangentBuffer=c.createBuffer();d.__webGLUVBuffer=c.createBuffer();d.__webGLFaceBuffer=c.createBuffer();d.__webGLLineBuffer=c.createBuffer()};this.initLineBuffers=function(d){var h=d.vertices.length;d.__vertexArray=new Float32Array(h*3);d.__lineArray=new Uint16Array(h);d.__webGLLineCount=h};this.initMeshBuffers=function(d,h){var m,
o,p=0,v=0,r=0,l=h.geometry.faces,x=d.faces;m=0;for(o=x.length;m<o;m++){fi=x[m];face=l[fi];if(face instanceof THREE.Face3){p+=3;v+=1;r+=3}else if(face instanceof THREE.Face4){p+=4;v+=2;r+=5}}d.__vertexArray=new Float32Array(p*3);d.__normalArray=new Float32Array(p*3);d.__tangentArray=new Float32Array(p*4);d.__uvArray=new Float32Array(p*2);d.__faceArray=new Uint16Array(v*3);d.__lineArray=new Uint16Array(r*2);p=false;m=0;for(o=h.materials.length;m<o;m++){l=h.materials[m];if(l instanceof THREE.MeshFaceMaterial){l=
0;for(x=d.materials.length;l<x;l++)if(d.materials[l]&&d.materials[l].shading!=undefined&&d.materials[l].shading==THREE.SmoothShading){p=true;break}}else if(l&&l.shading!=undefined&&l.shading==THREE.SmoothShading){p=true;break}if(p)break}d.__needsSmoothNormals=p;d.__webGLFaceCount=v*3;d.__webGLLineCount=r*2};this.setMeshBuffers=function(d,h,m,o,p,v,r,l){var x,t,i,u,I,A,L,N,K,O=0,U=0,J=0,G=0,P=0,H=0,w=0,F=d.__vertexArray,X=d.__uvArray,$=d.__normalArray,Y=d.__tangentArray,ga=d.__faceArray,fa=d.__lineArray,
aa=d.__needsSmoothNormals,ka=h.geometry,ca=ka.vertices,ta=d.faces,ja=ka.faces,ra=ka.uvs;h=0;for(x=ta.length;h<x;h++){t=ta[h];i=ja[t];t=ra[t];u=i.vertexNormals;I=i.normal;if(i instanceof THREE.Face3){if(o){A=ca[i.a].position;L=ca[i.b].position;N=ca[i.c].position;F[U]=A.x;F[U+1]=A.y;F[U+2]=A.z;F[U+3]=L.x;F[U+4]=L.y;F[U+5]=L.z;F[U+6]=N.x;F[U+7]=N.y;F[U+8]=N.z;U+=9}if(l&&ka.hasTangents){A=ca[i.a].tangent;L=ca[i.b].tangent;N=ca[i.c].tangent;Y[H]=A.x;Y[H+1]=A.y;Y[H+2]=A.z;Y[H+3]=A.w;Y[H+4]=L.x;Y[H+5]=L.y;
Y[H+6]=L.z;Y[H+7]=L.w;Y[H+8]=N.x;Y[H+9]=N.y;Y[H+10]=N.z;Y[H+11]=N.w;H+=12}if(r)if(u.length==3&&aa)for(i=0;i<3;i++){I=u[i];$[P]=I.x;$[P+1]=I.y;$[P+2]=I.z;P+=3}else for(i=0;i<3;i++){$[P]=I.x;$[P+1]=I.y;$[P+2]=I.z;P+=3}if(v&&t)for(i=0;i<3;i++){u=t[i];X[J]=u.u;X[J+1]=u.v;J+=2}if(p){ga[G]=O;ga[G+1]=O+1;ga[G+2]=O+2;G+=3;fa[w]=O;fa[w+1]=O+1;fa[w+2]=O;fa[w+3]=O+2;fa[w+4]=O+1;fa[w+5]=O+2;w+=6;O+=3}}else if(i instanceof THREE.Face4){if(o){A=ca[i.a].position;L=ca[i.b].position;N=ca[i.c].position;K=ca[i.d].position;
F[U]=A.x;F[U+1]=A.y;F[U+2]=A.z;F[U+3]=L.x;F[U+4]=L.y;F[U+5]=L.z;F[U+6]=N.x;F[U+7]=N.y;F[U+8]=N.z;F[U+9]=K.x;F[U+10]=K.y;F[U+11]=K.z;U+=12}if(l&&ka.hasTangents){A=ca[i.a].tangent;L=ca[i.b].tangent;N=ca[i.c].tangent;i=ca[i.d].tangent;Y[H]=A.x;Y[H+1]=A.y;Y[H+2]=A.z;Y[H+3]=A.w;Y[H+4]=L.x;Y[H+5]=L.y;Y[H+6]=L.z;Y[H+7]=L.w;Y[H+8]=N.x;Y[H+9]=N.y;Y[H+10]=N.z;Y[H+11]=N.w;Y[H+12]=i.x;Y[H+13]=i.y;Y[H+14]=i.z;Y[H+15]=i.w;H+=16}if(r)if(u.length==4&&aa)for(i=0;i<4;i++){I=u[i];$[P]=I.x;$[P+1]=I.y;$[P+2]=I.z;P+=3}else for(i=
0;i<4;i++){$[P]=I.x;$[P+1]=I.y;$[P+2]=I.z;P+=3}if(v&&t)for(i=0;i<4;i++){u=t[i];X[J]=u.u;X[J+1]=u.v;J+=2}if(p){ga[G]=O;ga[G+1]=O+1;ga[G+2]=O+2;ga[G+3]=O;ga[G+4]=O+2;ga[G+5]=O+3;G+=6;fa[w]=O;fa[w+1]=O+1;fa[w+2]=O;fa[w+3]=O+2;fa[w+4]=O;fa[w+5]=O+3;fa[w+6]=O+1;fa[w+7]=O+2;fa[w+8]=O+2;fa[w+9]=O+3;w+=10;O+=4}}}if(o){c.bindBuffer(c.ARRAY_BUFFER,d.__webGLVertexBuffer);c.bufferData(c.ARRAY_BUFFER,F,m)}if(r){c.bindBuffer(c.ARRAY_BUFFER,d.__webGLNormalBuffer);c.bufferData(c.ARRAY_BUFFER,$,m)}if(l&&ka.hasTangents){c.bindBuffer(c.ARRAY_BUFFER,
d.__webGLTangentBuffer);c.bufferData(c.ARRAY_BUFFER,Y,m)}if(v&&J>0){c.bindBuffer(c.ARRAY_BUFFER,d.__webGLUVBuffer);c.bufferData(c.ARRAY_BUFFER,X,m)}if(p){c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,d.__webGLFaceBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,ga,m);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,d.__webGLLineBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,fa,m)}};this.setLineBuffers=function(d,h,m,o){var p,v,r=d.vertices,l=r.length,x=d.__vertexArray,t=d.__lineArray;if(m)for(m=0;m<l;m++){p=r[m].position;v=m*3;
x[v]=p.x;x[v+1]=p.y;x[v+2]=p.z}if(o)for(m=0;m<l;m++)t[m]=m;c.bindBuffer(c.ARRAY_BUFFER,d.__webGLVertexBuffer);c.bufferData(c.ARRAY_BUFFER,x,h);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,d.__webGLLineBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,t,h)};this.setParticleBuffers=function(){};this.renderBuffer=function(d,h,m,o,p,v){var r,l,x,t;if(!o.program){if(o instanceof THREE.MeshDepthMaterial){b(o,THREE.ShaderLib.depth);o.uniforms.mNear.value=d.near;o.uniforms.mFar.value=d.far}else if(o instanceof THREE.MeshNormalMaterial)b(o,
THREE.ShaderLib.normal);else if(o instanceof THREE.MeshBasicMaterial){b(o,THREE.ShaderLib.basic);e(o,m)}else if(o instanceof THREE.MeshLambertMaterial){b(o,THREE.ShaderLib.lambert);e(o,m)}else if(o instanceof THREE.MeshPhongMaterial){b(o,THREE.ShaderLib.phong);e(o,m)}else if(o instanceof THREE.LineBasicMaterial){b(o,THREE.ShaderLib.basic);f(o,m)}var i,u,I;i=t=l=0;for(u=h.length;i<u;i++){I=h[i];I instanceof THREE.DirectionalLight&&t++;I instanceof THREE.PointLight&&l++}if(l+t<=4){i=t;l=l}else{i=Math.ceil(4*
t/(l+t));l=4-i}l={directional:i,point:l};t={fog:m,map:o.map,env_map:o.env_map,maxDirLights:l.directional,maxPointLights:l.point};l=o.fragment_shader;i=o.vertex_shader;u=c.createProgram();I=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+t.maxDirLights,"#define MAX_POINT_LIGHTS "+t.maxPointLights,t.fog?"#define USE_FOG":"",t.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.env_map?"#define USE_ENVMAP":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");
t=[c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+t.maxDirLights,"#define MAX_POINT_LIGHTS "+t.maxPointLights,t.map?"#define USE_MAP":"",t.env_map?"#define USE_ENVMAP":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n"].join("\n");c.attachShader(u,
g("fragment",I+l));c.attachShader(u,g("vertex",t+i));c.linkProgram(u);c.getProgramParameter(u,c.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+c.getProgramParameter(u,c.VALIDATE_STATUS)+", gl error ["+c.getError()+"]");u.uniforms={};u.attributes={};o.program=u;l=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(r in o.uniforms)l.push(r);r=o.program;i=0;for(u=l.length;i<u;i++){I=l[i];r.uniforms[I]=c.getUniformLocation(r,I)}r=
o.program;l=["position","normal","uv","tangent"];i=0;for(u=l.length;i<u;i++){I=l[i];r.attributes[I]=c.getAttribLocation(r,I)}}r=o.program;if(r!=k){c.useProgram(r);k=r}this.loadCamera(r,d);this.loadMatrices(r);if(o instanceof THREE.MeshPhongMaterial||o instanceof THREE.MeshLambertMaterial){d=this.setupLights(r,h);o.uniforms.enableLighting.value=d.directional.positions.length+d.point.positions.length;o.uniforms.ambientLightColor.value=d.ambient;o.uniforms.directionalLightColor.value=d.directional.colors;
o.uniforms.directionalLightDirection.value=d.directional.positions;o.uniforms.pointLightColor.value=d.point.colors;o.uniforms.pointLightPosition.value=d.point.positions}if(o instanceof THREE.MeshBasicMaterial||o instanceof THREE.MeshLambertMaterial||o instanceof THREE.MeshPhongMaterial)e(o,m);o instanceof THREE.LineBasicMaterial&&f(o,m);if(o instanceof THREE.MeshPhongMaterial){o.uniforms.ambient.value.setRGB(o.ambient.r,o.ambient.g,o.ambient.b);o.uniforms.specular.value.setRGB(o.specular.r,o.specular.g,
o.specular.b);o.uniforms.shininess.value=o.shininess}m=o.uniforms;for(x in m)if(i=r.uniforms[x]){h=m[x];l=h.type;d=h.value;if(l=="i")c.uniform1i(i,d);else if(l=="f")c.uniform1f(i,d);else if(l=="fv")c.uniform3fv(i,d);else if(l=="v2")c.uniform2f(i,d.x,d.y);else if(l=="v3")c.uniform3f(i,d.x,d.y,d.z);else if(l=="c")c.uniform3f(i,d.r,d.g,d.b);else if(l=="t"){c.uniform1i(i,d);if(h=h.texture)if(h.image instanceof Array&&h.image.length==6){h=h;d=d;if(h.image.length==6){if(!h.image.__webGLTextureCube&&!h.image.__cubeMapInitialized&&
h.image.loadCount==6){h.image.__webGLTextureCube=c.createTexture();c.bindTexture(c.TEXTURE_CUBE_MAP,h.image.__webGLTextureCube);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MAG_FILTER,c.LINEAR);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MIN_FILTER,c.LINEAR_MIPMAP_LINEAR);for(l=0;l<6;++l)c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+l,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,
h.image[l]);c.generateMipmap(c.TEXTURE_CUBE_MAP);c.bindTexture(c.TEXTURE_CUBE_MAP,null);h.image.__cubeMapInitialized=true}c.activeTexture(c.TEXTURE0+d);c.bindTexture(c.TEXTURE_CUBE_MAP,h.image.__webGLTextureCube)}}else{h=h;d=d;if(!h.__webGLTexture&&h.image.loaded){h.__webGLTexture=c.createTexture();c.bindTexture(c.TEXTURE_2D,h.__webGLTexture);c.texImage2D(c.TEXTURE_2D,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,h.image);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,j(h.wrap_s));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,
j(h.wrap_t));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,j(h.mag_filter));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,j(h.min_filter));c.generateMipmap(c.TEXTURE_2D);c.bindTexture(c.TEXTURE_2D,null)}c.activeTexture(c.TEXTURE0+d);c.bindTexture(c.TEXTURE_2D,h.__webGLTexture)}}}x=r.attributes;c.bindBuffer(c.ARRAY_BUFFER,p.__webGLVertexBuffer);c.vertexAttribPointer(x.position,3,c.FLOAT,false,0,0);c.enableVertexAttribArray(x.position);if(x.normal>=0){c.bindBuffer(c.ARRAY_BUFFER,p.__webGLNormalBuffer);
c.vertexAttribPointer(x.normal,3,c.FLOAT,false,0,0);c.enableVertexAttribArray(x.normal)}if(x.tangent>=0){c.bindBuffer(c.ARRAY_BUFFER,p.__webGLTangentBuffer);c.vertexAttribPointer(x.tangent,4,c.FLOAT,false,0,0);c.enableVertexAttribArray(x.tangent)}if(x.uv>=0)if(p.__webGLUVBuffer){c.bindBuffer(c.ARRAY_BUFFER,p.__webGLUVBuffer);c.vertexAttribPointer(x.uv,2,c.FLOAT,false,0,0);c.enableVertexAttribArray(x.uv)}else c.disableVertexAttribArray(x.uv);if(o.wireframe||o instanceof THREE.LineBasicMaterial){x=
o.wireframe_linewidth!==undefined?o.wireframe_linewidth:o.linewidth!==undefined?o.linewidth:1;o=o instanceof THREE.LineBasicMaterial&&v.type==THREE.LineStrip?c.LINE_STRIP:c.LINES;c.lineWidth(x);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,p.__webGLLineBuffer);c.drawElements(o,p.__webGLLineCount,c.UNSIGNED_SHORT,0)}else{c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,p.__webGLFaceBuffer);c.drawElements(c.TRIANGLES,p.__webGLFaceCount,c.UNSIGNED_SHORT,0)}};this.renderPass=function(d,h,m,o,p,v,r){var l,x,t,i,u;t=0;for(i=
o.materials.length;t<i;t++){l=o.materials[t];if(l instanceof THREE.MeshFaceMaterial){l=0;for(x=p.materials.length;l<x;l++)if((u=p.materials[l])&&u.blending==v&&u.opacity<1==r){this.setBlending(u.blending);this.renderBuffer(d,h,m,u,p,o)}}else if((u=l)&&u.blending==v&&u.opacity<1==r){this.setBlending(u.blending);this.renderBuffer(d,h,m,u,p,o)}}};this.render=function(d,h){var m,o,p,v,r=d.lights,l=d.fog;this.initWebGLObjects(d);this.autoClear&&this.clear();h.autoUpdateMatrix&&h.updateMatrix();E.set(h.matrix.flatten());
C.set(h.projectionMatrix.flatten());m=0;for(o=d.__webGLObjects.length;m<o;m++){p=d.__webGLObjects[m];v=p.object;p=p.buffer;if(v.visible){this.setupMatrices(v,h);this.renderPass(h,r,l,v,p,THREE.NormalBlending,false)}}m=0;for(o=d.__webGLObjects.length;m<o;m++){p=d.__webGLObjects[m];v=p.object;p=p.buffer;if(v.visible){this.setupMatrices(v,h);this.renderPass(h,r,l,v,p,THREE.AdditiveBlending,false);this.renderPass(h,r,l,v,p,THREE.SubtractiveBlending,false);this.renderPass(h,r,l,v,p,THREE.AdditiveBlending,
true);this.renderPass(h,r,l,v,p,THREE.SubtractiveBlending,true);this.renderPass(h,r,l,v,p,THREE.NormalBlending,true)}}};this.initWebGLObjects=function(d){function h(t,i,u,I){if(t[i]==undefined){d.__webGLObjects.push({buffer:u,object:I});t[i]=1}}var m,o,p,v,r,l,x;if(!d.__webGLObjects){d.__webGLObjects=[];d.__webGLObjectsMap={}}m=0;for(o=d.objects.length;m<o;m++){p=d.objects[m];r=p.geometry;if(d.__webGLObjectsMap[p.id]==undefined)d.__webGLObjectsMap[p.id]={};x=d.__webGLObjectsMap[p.id];if(p instanceof
THREE.Mesh){for(v in r.geometryChunks){l=r.geometryChunks[v];if(!l.__webGLVertexBuffer){this.createMeshBuffers(l);this.initMeshBuffers(l,p);r.__dirtyVertices=true;r.__dirtyElements=true;r.__dirtyUvs=true;r.__dirtyNormals=true;r.__dirtyTangents=true}if(r.__dirtyVertices||r.__dirtyElements||r.__dirtyUvs)this.setMeshBuffers(l,p,c.DYNAMIC_DRAW,r.__dirtyVertices,r.__dirtyElements,r.__dirtyUvs,r.__dirtyNormals,r.__dirtyTangents);h(x,v,l,p)}r.__dirtyVertices=false;r.__dirtyElements=false;r.__dirtyUvs=false;
r.__dirtyNormals=false;r.__dirtyTangents=false}else if(p instanceof THREE.Line){if(!r.__webGLVertexBuffer){this.createLineBuffers(r);this.initLineBuffers(r);r.__dirtyVertices=true;r.__dirtyElements=true}r.__dirtyVertices&&this.setLineBuffers(r,c.DYNAMIC_DRAW,r.__dirtyVertices,r.__dirtyElements);h(x,0,r,p);r.__dirtyVertices=false;r.__dirtyElements=false}else if(p instanceof THREE.ParticleSystem){r.__webGLVertexBuffer||this.createParticleBuffers(r);h(x,0,r,p)}}};this.removeObject=function(d,h){var m,
o;for(m=d.__webGLObjects.length-1;m>=0;m--){o=d.__webGLObjects[m].object;h==o&&d.__webGLObjects.splice(m,1)}};this.setupMatrices=function(d,h){d.autoUpdateMatrix&&d.updateMatrix();n.multiply(h.matrix,d.matrix);z.set(n.flatten());D=THREE.Matrix4.makeInvert3x3(n).transpose();S.set(D.m);V.set(d.matrix.flatten())};this.loadMatrices=function(d){c.uniformMatrix4fv(d.uniforms.viewMatrix,false,E);c.uniformMatrix4fv(d.uniforms.modelViewMatrix,false,z);c.uniformMatrix4fv(d.uniforms.projectionMatrix,false,C);
c.uniformMatrix3fv(d.uniforms.normalMatrix,false,S);c.uniformMatrix4fv(d.uniforms.objectMatrix,false,V)};this.loadCamera=function(d,h){c.uniform3f(d.uniforms.cameraPosition,h.position.x,h.position.y,h.position.z)};this.setBlending=function(d){switch(d){case THREE.AdditiveBlending:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ONE,c.ONE);break;case THREE.SubtractiveBlending:c.blendFunc(c.DST_COLOR,c.ZERO);break;default:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=
function(d,h){if(d){!h||h=="ccw"?c.frontFace(c.CCW):c.frontFace(c.CW);if(d=="back")c.cullFace(c.BACK);else d=="front"?c.cullFace(c.FRONT):c.cullFace(c.FRONT_AND_BACK);c.enable(c.CULL_FACE)}else c.disable(c.CULL_FACE)};this.supportsVertexTextures=function(){return c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, 1.0 ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\ncubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = mix( gl_FragColor, cubeColor, reflectivity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif",
envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",
map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}",
lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif"};
THREE.UniformsLib={common:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",
value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",
vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsLib.common,fragment_shader:["uniform vec3 color;\nuniform float opacity;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",
THREE.Snippets.map_fragment,"gl_FragColor = mColor * mapColor;",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},lambert:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nvarying vec3 vLightWeighting;",
THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,"gl_FragColor =  mColor * mapColor * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,
THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},phong:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},
shininess:{type:"f",value:30}}]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,THREE.Snippets.lights_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lights_fragment,
"gl_FragColor =  mapColor * totalLight * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",
THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")}};THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
